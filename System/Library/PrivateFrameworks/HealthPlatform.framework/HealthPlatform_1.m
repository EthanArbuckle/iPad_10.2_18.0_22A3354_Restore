uint64_t sub_1BC7605C4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a5;
  v43 = a3;
  v41 = a1;
  v7 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B82E0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v40 - v11;
  sub_1BC762F40(0, (unint64_t *)&unk_1ED6B87C0, v7, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v40 - v16;
  v18 = (int *)type metadata accessor for NotificationContentState(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char **)((char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC816F30();
    *v20 = v43;
    v20[1] = a4;
    v21 = (_QWORD *)((char *)v20 + v18[6]);
    v22 = v41;
    *v21 = v41;
    v21[1] = a2;
    *((_BYTE *)v20 + v18[7]) = 1;
    *((_BYTE *)v20 + v18[8]) = 0;
    v23 = qword_1ED6BB5B0;
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v24 = sub_1BC817590();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED6BB5D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v25 = sub_1BC81756C();
    v26 = sub_1BC817E9C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v45 = v28;
      *(_DWORD *)v27 = 136315651;
      v44 = sub_1BC6E14D8(0xD000000000000028, 0x80000001BC81CFF0, &v45);
      sub_1BC818148();
      *(_WORD *)(v27 + 12) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_1BC6E14D8(v43, a4, &v45);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v27 + 22) = 2081;
      swift_bridgeObjectRetain();
      v44 = sub_1BC6E14D8(v22, a2, &v45);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v25, v26, "%s Migrating %s content state: %{private}s", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v28, -1, -1);
      MEMORY[0x1BCCF5BA4](v27, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v34 = sub_1BC75D510(v20);
    sub_1BC6ED784((uint64_t)v20, type metadata accessor for NotificationContentState);
  }
  else
  {
    v40 = v17;
    v41 = v10;
    v42 = v15;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v29 = sub_1BC817590();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED6BB5D0);
    swift_bridgeObjectRetain_n();
    v30 = sub_1BC81756C();
    v31 = sub_1BC817E9C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v45 = v33;
      *(_DWORD *)v32 = 136315394;
      v44 = sub_1BC6E14D8(0xD000000000000028, 0x80000001BC81CFF0, &v45);
      sub_1BC818148();
      *(_WORD *)(v32 + 12) = 2080;
      swift_bridgeObjectRetain();
      v44 = sub_1BC6E14D8(v43, a4, &v45);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v30, v31, "%s No pre-existing content state for %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v33, -1, -1);
      MEMORY[0x1BCCF5BA4](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v36 = v41;
    v35 = v42;
    v37 = v40;
    v38 = MEMORY[0x1E0DEE9C0] + 8;
    sub_1BC8177DC();
    sub_1BC6E1878();
    sub_1BC8177B8();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v9);
    sub_1BC7629D0((unint64_t *)&qword_1ED6B87B8, (unint64_t *)&unk_1ED6B87C0, v38);
    v34 = sub_1BC817854();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v14);
  }
  return v34;
}

uint64_t sub_1BC760B98(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(uint64_t);
  uint64_t (*v33)(void);
  uint64_t v34;
  _QWORD v36[2];
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v40 = a4;
  v41 = a3;
  v39 = a1;
  v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v36 - v11;
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], v9);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v36 - v14;
  sub_1BC762E14();
  v17 = v16;
  v42 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v20 = sub_1BC817590();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB5D0);
  swift_bridgeObjectRetain_n();
  v21 = sub_1BC81756C();
  v22 = sub_1BC817E9C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v36[1] = a5;
    v24 = v23;
    v25 = swift_slowAlloc();
    v38 = v17;
    v26 = v25;
    v44 = v25;
    *(_DWORD *)v24 = 136315394;
    v37 = v19;
    v43 = sub_1BC6E14D8(0xD000000000000028, 0x80000001BC81CFF0, &v44);
    sub_1BC818148();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    v43 = sub_1BC6E14D8(v39, a2, &v44);
    v19 = v37;
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BC6DD000, v21, v22, "%s Marking migration as complete for %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    v27 = v26;
    v17 = v38;
    MEMORY[0x1BCCF5BA4](v27, -1, -1);
    MEMORY[0x1BCCF5BA4](v24, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1BC816EE8();
  v28 = sub_1BC816EF4();
  v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v15, 0, 1, v28);
  v30 = sub_1BC817F08();
  sub_1BC715030((uint64_t)v15, (unint64_t *)&qword_1ED6B9BE8, v29);
  v43 = a6;
  v44 = v30;
  v31 = sub_1BC817F80();
  v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868];
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v12, 1, 1, v31);
  v33 = MEMORY[0x1E0C960D8];
  sub_1BC762F40(0, (unint64_t *)&qword_1ED6B8368, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC762EF0((unint64_t *)&qword_1ED6B8360, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v33, MEMORY[0x1E0C96108]);
  sub_1BC7619BC();
  sub_1BC8178FC();
  sub_1BC715030((uint64_t)v12, &qword_1ED6B9DC8, v32);
  swift_release();
  sub_1BC6F0A44(&qword_1ED6B81F0, 255, (uint64_t (*)(uint64_t))sub_1BC762E14, MEMORY[0x1E0C95CB8]);
  v34 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v19, v17);
  return v34;
}

uint64_t sub_1BC761004(uint64_t a1, id *a2, uint64_t a3, uint64_t a4)
{
  id v5;
  unint64_t v6;
  uint64_t v7;

  v5 = objc_msgSend(*a2, sel_storageEntries);
  sub_1BC6ED7C0(0, &qword_1EF45B920);
  v6 = sub_1BC817C5C();

  swift_retain();
  v7 = sub_1BC7610DC(v6, a4, &qword_1EF45BA50, type metadata accessor for ProtectedNotificationContentState, (void (*)(id *, uint64_t))sub_1BC75F760, (uint64_t)sub_1BC725DA4);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_1BC80709C(v7);
}

uint64_t sub_1BC7610DC(unint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(id *, uint64_t), uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  unint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t (*v27)(BOOL, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  unint64_t *v29;
  id *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(id *, uint64_t);
  uint64_t (*v36)(uint64_t);

  v34 = a2;
  v35 = a5;
  v29 = a3;
  sub_1BC6ECA64(0, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  v36 = a4;
  v33 = a4(0);
  v13 = *(_QWORD *)(v33 - 8);
  v14 = MEMORY[0x1E0C80A78](v33);
  v32 = (uint64_t)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v28 = (uint64_t)&v26 - v16;
  if (a1 >> 62)
    goto LABEL_20;
  v17 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v17; v17 = sub_1BC8184E4())
  {
    v27 = (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))a6;
    v31 = a1 & 0xC000000000000001;
    v18 = MEMORY[0x1E0DEE9D8];
    a6 = 4;
    v30 = (id *)a1;
    while (1)
    {
      v19 = v31 ? (id *)MEMORY[0x1BCCF4FB0](a6 - 4, a1) : (id *)*(id *)(a1 + 8 * a6);
      a1 = (unint64_t)v19;
      v20 = a6 - 3;
      if (__OFADD__(a6 - 4, 1))
        break;
      v35(v19, v34);
      if (v6)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v18;
      }

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v33) == 1)
      {
        sub_1BC715030((uint64_t)v12, v29, v36);
      }
      else
      {
        v21 = v28;
        v22 = v36;
        sub_1BC6ECBA4((uint64_t)v12, v28, v36);
        sub_1BC6ECBA4(v21, v32, v22);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = v27(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
        v24 = *(_QWORD *)(v18 + 16);
        v23 = *(_QWORD *)(v18 + 24);
        if (v24 >= v23 >> 1)
          v18 = v27(v23 > 1, v24 + 1, 1, v18);
        *(_QWORD *)(v18 + 16) = v24 + 1;
        sub_1BC6ECBA4(v32, v18+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v24, v36);
      }
      a1 = (unint64_t)v30;
      ++a6;
      if (v20 == v17)
      {
        swift_bridgeObjectRelease();
        return v18;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC7613B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  char v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = sub_1BC816F3C();
  v36 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for UnprotectedNotificationContentState(0);
  v8 = MEMORY[0x1E0C80A78](v30);
  v29 = (uint64_t)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)v27 - v11;
  result = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v32 = *(_QWORD *)(a1 + 16);
  if (v32)
  {
    v13 = 0;
    v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v33 = *(_QWORD *)(v10 + 72);
    v27[1] = v2;
    v28 = v14;
    v31 = a1 + v14;
    v37 = a2 + 56;
    v15 = a2;
    do
    {
      v34 = v13;
      sub_1BC6ECB08(v31 + v33 * v13, v35, type metadata accessor for UnprotectedNotificationContentState);
      if (*(_QWORD *)(v15 + 16)
        && (v16 = v15,
            sub_1BC6F0A44(&qword_1ED6BA298, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]), v17 = sub_1BC817A70(), v18 = -1 << *(_BYTE *)(v15 + 32), v19 = v17 & ~v18, ((*(_QWORD *)(v37 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) != 0))
      {
        v20 = ~v18;
        v21 = *(_QWORD *)(v36 + 72);
        v22 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 16);
        while (1)
        {
          v22(v7, *(_QWORD *)(v15 + 48) + v21 * v19, v5);
          sub_1BC6F0A44(&qword_1EF45B3F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
          v23 = sub_1BC817AB8();
          (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v5);
          if ((v23 & 1) != 0)
            break;
          v19 = (v19 + 1) & v20;
          v15 = v16;
          if (((*(_QWORD *)(v37 + ((v19 >> 3) & 0xFFFFFFFFFFFFF8)) >> v19) & 1) == 0)
            goto LABEL_3;
        }
        sub_1BC6ECBA4(v35, v29, type metadata accessor for UnprotectedNotificationContentState);
        v24 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC6E8C2C(0, *(_QWORD *)(v24 + 16) + 1, 1);
          v24 = v38;
        }
        v26 = *(_QWORD *)(v24 + 16);
        v25 = *(_QWORD *)(v24 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1BC6E8C2C(v25 > 1, v26 + 1, 1);
          v24 = v38;
        }
        *(_QWORD *)(v24 + 16) = v26 + 1;
        sub_1BC6ECBA4(v29, v24 + v28 + v26 * v33, type metadata accessor for UnprotectedNotificationContentState);
        v15 = v16;
      }
      else
      {
LABEL_3:
        sub_1BC6ED784(v35, type metadata accessor for UnprotectedNotificationContentState);
      }
      v13 = v34 + 1;
    }
    while (v34 + 1 != v32);
    return v38;
  }
  return result;
}

uint64_t sub_1BC7616F8(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v5;
  id v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;

  v5 = v4;
  *(_QWORD *)(v4 + 32) = 0;
  sub_1BC816C3C();
  swift_allocObject();
  *(_QWORD *)(v4 + 56) = sub_1BC816C30();
  sub_1BC816C60();
  swift_allocObject();
  *(_QWORD *)(v4 + 64) = sub_1BC816C54();
  *(_BYTE *)(v4 + 72) = 0;
  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  v8 = objc_allocWithZone(MEMORY[0x1E0CB65E8]);
  v9 = a1;
  v10 = a4;
  swift_bridgeObjectRetain();
  v11 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(v8, sel_initWithProtectionCategory_domain_healthStore_, 0, v11, v9);

  *(_QWORD *)(v5 + 16) = v12;
  v13 = objc_allocWithZone(MEMORY[0x1E0CB65E8]);
  v14 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_initWithProtectionCategory_domain_healthStore_, 1, v14, v9);

  *(_QWORD *)(v5 + 24) = v15;
  return v5;
}

void sub_1BC761844()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8040)
  {
    sub_1BC7618CC();
    sub_1BC6F0A44(&qword_1ED6B8278, 255, (uint64_t (*)(uint64_t))sub_1BC7618CC, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC8175C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8040);
  }
}

void sub_1BC7618CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8280)
  {
    sub_1BC761938();
    sub_1BC6E1878();
    v0 = sub_1BC81771C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8280);
  }
}

void sub_1BC761938()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8438)
  {
    sub_1BC6ED7C0(255, &qword_1ED6B85E0);
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8438);
  }
}

uint64_t sub_1BC76199C()
{
  return sub_1BC6F0A44(&qword_1ED6B8038, 255, (uint64_t (*)(uint64_t))sub_1BC761844, MEMORY[0x1E0C95698]);
}

unint64_t sub_1BC7619BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BA4D0;
  if (!qword_1ED6BA4D0)
  {
    v1 = sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BA4E0);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BA4D0);
  }
  return result;
}

void sub_1BC761A14()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8100)
  {
    sub_1BC7620B8(255, &qword_1ED6B8208, (void (*)(uint64_t))sub_1BC761844, (void (*)(void))sub_1BC76199C);
    sub_1BC6ECA64(255, &qword_1ED6B8870, type metadata accessor for NotificationContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC761ABC();
    v0 = sub_1BC81765C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8100);
  }
}

unint64_t sub_1BC761ABC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8200;
  if (!qword_1ED6B8200)
  {
    sub_1BC7620B8(255, &qword_1ED6B8208, (void (*)(uint64_t))sub_1BC761844, (void (*)(void))sub_1BC76199C);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95CB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8200);
  }
  return result;
}

uint64_t sub_1BC761B1C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC761B40@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  return sub_1BC75CC30(a1, a2, a3);
}

uint64_t sub_1BC761B58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC761B7C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*a1, a1[1]);
}

id sub_1BC761BA4(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  id v10;
  id v11;
  id v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  char *v21;
  char v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  uint64_t v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  id v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  unint64_t v41;
  id v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v2 = sub_1BC816EF4();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v43 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v36 - v5;
  if (a1 >> 62)
    goto LABEL_38;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_39:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_3:
  v8 = 0;
  v9 = 0;
  v38 = a1;
  v39 = a1 & 0xC000000000000001;
  v36 = a1 + 32;
  v37 = v7;
  do
  {
    if (v39)
      v11 = (id)sub_1BC7EA884(v8, a1);
    else
      v11 = *(id *)(v36 + 8 * v8);
    v10 = v11;
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      v7 = sub_1BC8184E4();
      if (!v7)
        goto LABEL_39;
      goto LABEL_3;
    }
    v13 = objc_msgSend(v11, sel_storageEntries);
    sub_1BC6ED7C0(0, &qword_1EF45B920);
    v14 = sub_1BC817C5C();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1BC8184E4();
      if (!v15)
        goto LABEL_33;
LABEL_13:
      if (v15 >= 1)
      {
        v40 = v10;
        v41 = v8;
        v42 = v9;
        v16 = 0;
        v17 = 0;
        while (1)
        {
          if ((v14 & 0xC000000000000001) != 0)
          {
            v9 = (id)sub_1BC7EA898(v16, v14);
            if (v17)
              goto LABEL_20;
          }
          else
          {
            v9 = *(id *)(v14 + 8 * v16 + 32);
            if (v17)
            {
LABEL_20:
              v18 = v17;
              v19 = objc_msgSend(v18, sel_modificationDate);
              sub_1BC816ED0();

              v20 = objc_msgSend(v9, sel_modificationDate);
              v21 = v43;
              sub_1BC816ED0();

              v22 = sub_1BC816EB8();
              v23 = *(void (**)(char *, uint64_t))(v44 + 8);
              v24 = v21;
              v25 = v45;
              v23(v24, v45);
              v23(v6, v25);

              if ((v22 & 1) != 0)
                v26 = v18;
              else
                v26 = v9;
              if ((v22 & 1) == 0)
                v9 = v18;

            }
          }
          ++v16;
          v17 = v9;
          if (v15 == v16)
          {
            swift_bridgeObjectRelease_n();
            v27 = v42;
            if (!v42)
            {
              v7 = v37;
              a1 = v38;
              v10 = v40;
              v8 = v41;
              goto LABEL_6;
            }
            if (v9)
            {
              v28 = v9;
              v27 = v27;
              v29 = objc_msgSend(v27, sel_modificationDate);
              sub_1BC816ED0();

              v30 = objc_msgSend(v28, sel_modificationDate);
              v31 = v43;
              sub_1BC816ED0();

              LOBYTE(v30) = sub_1BC816EB8();
              v32 = *(void (**)(char *, uint64_t))(v44 + 8);
              v33 = v31;
              v34 = v45;
              v32(v33, v45);
              v32(v6, v34);

              if ((v30 & 1) != 0)
              {

                v10 = v27;
                v7 = v37;
                a1 = v38;
                v8 = v41;
              }
              else
              {

                v10 = v28;
                v7 = v37;
                a1 = v38;
                v27 = v40;
                v8 = v41;
                v9 = v42;
              }
            }
            else
            {
              v7 = v37;
              a1 = v38;
              v10 = v40;
              v8 = v41;
            }
LABEL_5:

            goto LABEL_6;
          }
        }
      }
      goto LABEL_37;
    }
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_13;
LABEL_33:
    swift_bridgeObjectRelease_n();
    if (v9)
    {
      v27 = v9;
      v9 = 0;
      goto LABEL_5;
    }
LABEL_6:

  }
  while (v8 != v7);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1BC761F98()
{
  return sub_1BC6F0A44(&qword_1EF45B918, 255, type metadata accessor for ProtectedNotificationContentState, (uint64_t)&protocol conformance descriptor for ProtectedNotificationContentState);
}

uint64_t sub_1BC761FB8(uint64_t a1, id *a2)
{
  uint64_t v2;

  return sub_1BC761004(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC761FD0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC75D4A4(a1, *(_QWORD *)(v1 + 16)) & 1;
}

void sub_1BC761FEC()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF45B928)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC762F40(255, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC8175C0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF45B928);
  }
}

void sub_1BC76209C(uint64_t a1)
{
  sub_1BC7620B8(a1, &qword_1EF45B930, (void (*)(uint64_t))sub_1BC761FEC, (void (*)(void))sub_1BC762154);
}

void sub_1BC7620B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BA4E0);
    a4();
    sub_1BC7619BC();
    v6 = sub_1BC8176B0();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC762154()
{
  return sub_1BC6F0A44(&qword_1EF45B938, 255, (uint64_t (*)(uint64_t))sub_1BC761FEC, MEMORY[0x1E0C95698]);
}

void sub_1BC762174(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t (*v7)(void);
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = MEMORY[0x1E0C95D78];
    sub_1BC762F40(255, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    a3(255);
    sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x1E0C95D90]);
    a4();
    v8 = sub_1BC817674();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC762248()
{
  return sub_1BC6F0A44(&qword_1EF45B948, 255, (uint64_t (*)(uint64_t))sub_1BC76209C, MEMORY[0x1E0C95CB8]);
}

uint64_t sub_1BC762268()
{
  return objectdestroy_5Tm_2(type metadata accessor for NotificationContentState);
}

uint64_t sub_1BC762274@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC7625F0((void (*)(_QWORD))type metadata accessor for NotificationContentState, NotificationContentState.description.getter, a1);
}

unint64_t sub_1BC762288()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45B950;
  if (!qword_1EF45B950)
  {
    sub_1BC762174(255, &qword_1EF45B940, sub_1BC76209C, (void (*)(void))sub_1BC762248);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45B950);
  }
  return result;
}

void sub_1BC7622E8()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1EF45B958)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC762F40(255, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BA4E0);
    sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC7619BC();
    v1 = sub_1BC8176B0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1EF45B958);
  }
}

uint64_t sub_1BC7623C4()
{
  return sub_1BC6F0A44(&qword_1EF45B968, 255, (uint64_t (*)(uint64_t))sub_1BC7622E8, MEMORY[0x1E0C95CB8]);
}

uint64_t sub_1BC7623E4()
{
  return objectdestroy_5Tm_2(type metadata accessor for ProtectedNotificationContentState);
}

uint64_t objectdestroy_5Tm_2(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1(0);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = (v3 + 24) & ~v3;
  swift_release();
  swift_bridgeObjectRelease();
  v5 = v1 + v4 + *(int *)(v2 + 20);
  v6 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC762498@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ProtectedNotificationContentState(0) - 8) + 80);
  return sub_1BC75DAA4((uint64_t *)(v1 + ((v3 + 24) & ~v3)), a1);
}

unint64_t sub_1BC7624E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45B970;
  if (!qword_1EF45B970)
  {
    sub_1BC762174(255, &qword_1EF45B960, (void (*)(uint64_t))sub_1BC7622E8, (void (*)(void))sub_1BC7623C4);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45B970);
  }
  return result;
}

uint64_t sub_1BC762548()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for UnprotectedNotificationContentState(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_1BC7625DC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC7625F0((void (*)(_QWORD))type metadata accessor for UnprotectedNotificationContentState, UnprotectedNotificationContentState.description.getter, a1);
}

uint64_t sub_1BC7625F0@<X0>(void (*a1)(_QWORD)@<X1>, uint64_t (*a2)(void)@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;

  a1(0);
  v5 = a2();
  v7 = sub_1BC75E6EC(v5, v6);
  result = swift_bridgeObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t sub_1BC762658()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC762684@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC75E334(a1);
}

uint64_t sub_1BC762690(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BC6F0A44(&qword_1ED6B7CD8, a2, (uint64_t (*)(uint64_t))type metadata accessor for HealthAppNotificationContentStateManager, (uint64_t)&protocol conformance descriptor for HealthAppNotificationContentStateManager);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC7626CC()
{
  return sub_1BC6F0A44(&qword_1EF45B978, 255, type metadata accessor for NotificationContentState, (uint64_t)&protocol conformance descriptor for NotificationContentState);
}

uint64_t sub_1BC7626FC()
{
  return sub_1BC6F0A44(&qword_1EF45B980, 255, type metadata accessor for NotificationContentState, (uint64_t)&protocol conformance descriptor for NotificationContentState);
}

uint64_t sub_1BC76272C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 72);
  return result;
}

uint64_t sub_1BC762770(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 72) = v2;
  return result;
}

uint64_t method lookup function for HealthAppNotificationContentStateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.requestSyncOnUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.requestSyncOnUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.requestSyncOnUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.getContentState(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.deriveContentState(protectedStorageGroups:unprotectedStorageGroups:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.setContentState(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.setProtectedContentState(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.setUnprotectedContentState(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.removeContentState(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of HealthAppNotificationContentStateManager.migrateContentStateIfNecessary(with:notificationIdentifier:keyValueDomain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

void sub_1BC76284C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  if (!qword_1EF45B9D8)
  {
    v2 = MEMORY[0x1BCCF5A90](0, a2, MEMORY[0x1E0D2C190], 0);
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1EF45B9D8);
  }
}

void sub_1BC7628A4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  if (!qword_1EF45B9E0)
  {
    sub_1BC76284C(255, a2);
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BA4E0);
    swift_getOpaqueTypeConformance2();
    sub_1BC7619BC();
    v2 = sub_1BC8176B0();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1EF45B9E0);
  }
}

void sub_1BC762948(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;

  if (!qword_1EF45B9E8)
  {
    sub_1BC7628A4(255, a2);
    sub_1BC6F0A44(&qword_1EF45B9F0, 255, (uint64_t (*)(uint64_t))sub_1BC7628A4, MEMORY[0x1E0C95CB8]);
    v2 = sub_1BC817614();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1EF45B9E8);
  }
}

uint64_t sub_1BC7629D0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC762F40(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C964C8], v5);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC762A18(uint64_t a1)
{
  sub_1BC7620B8(a1, &qword_1ED6B81E8, (void (*)(uint64_t))sub_1BC762A34, (void (*)(void))sub_1BC762AB8);
}

void sub_1BC762A34()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8310)
  {
    sub_1BC6ECA64(255, (unint64_t *)&qword_1ED6B9BE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC6E1878();
    v0 = sub_1BC817800();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8310);
  }
}

uint64_t sub_1BC762AB8()
{
  return sub_1BC6F0A44(&qword_1ED6B8308, 255, (uint64_t (*)(uint64_t))sub_1BC762A34, MEMORY[0x1E0C96108]);
}

uint64_t sub_1BC762AD8()
{
  return sub_1BC6F0A44(&qword_1ED6B81E0, 255, (uint64_t (*)(uint64_t))sub_1BC762A18, MEMORY[0x1E0C95CB8]);
}

uint64_t sub_1BC762AF8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC762B44@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC75FB18(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(void **)(v2 + 72));
  *a2 = result;
  return result;
}

unint64_t sub_1BC762B84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8168;
  if (!qword_1ED6B8168)
  {
    sub_1BC762174(255, &qword_1ED6B8170, sub_1BC762A18, (void (*)(void))sub_1BC762AD8);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8168);
  }
  return result;
}

void sub_1BC762BE4(uint64_t a1)
{
  sub_1BC7620B8(a1, &qword_1ED6B81D8, (void (*)(uint64_t))sub_1BC762C00, (void (*)(void))sub_1BC762C84);
}

void sub_1BC762C00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8240)
  {
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC6E1878();
    v0 = sub_1BC81771C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8240);
  }
}

uint64_t sub_1BC762C84()
{
  return sub_1BC6F0A44(&qword_1ED6B8238, 255, (uint64_t (*)(uint64_t))sub_1BC762C00, MEMORY[0x1E0C95D90]);
}

void sub_1BC762CA4(uint64_t a1)
{
  sub_1BC762174(a1, &qword_1ED6B8180, sub_1BC762BE4, (void (*)(void))sub_1BC762CC0);
}

uint64_t sub_1BC762CC0()
{
  return sub_1BC6F0A44(&qword_1ED6B81D0, 255, (uint64_t (*)(uint64_t))sub_1BC762BE4, MEMORY[0x1E0C95CB8]);
}

uint64_t sub_1BC762CE0()
{
  return sub_1BC6F0A44(&qword_1ED6B8178, 255, (uint64_t (*)(uint64_t))sub_1BC762CA4, MEMORY[0x1E0C95B78]);
}

uint64_t sub_1BC762D00()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC762D2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC7605C4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_1BC762D60()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC762D9C()
{
  uint64_t v0;

  return sub_1BC760B98(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
}

uint64_t sub_1BC762DAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC7EA728(*(uint64_t (**)(void))(v1 + 16), a1);
}

unint64_t sub_1BC762DB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8188;
  if (!qword_1ED6B8188)
  {
    sub_1BC762174(255, &qword_1ED6B8190, sub_1BC762CA4, (void (*)(void))sub_1BC762CE0);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8188);
  }
  return result;
}

void sub_1BC762E14()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B81F8)
  {
    v0 = MEMORY[0x1E0C960D8];
    sub_1BC762F40(255, (unint64_t *)&qword_1ED6B8368, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BA4E0);
    sub_1BC762EF0((unint64_t *)&qword_1ED6B8360, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C96108]);
    sub_1BC7619BC();
    v1 = sub_1BC8176B0();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B81F8);
  }
}

uint64_t sub_1BC762EF0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC762F40(255, a2, MEMORY[0x1E0DEE9C0] + 8, a3);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC762F40(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC6E1878();
    v9 = a4(a1, a3, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC762FA8()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  if (!qword_1EF45BA10)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC762F40(255, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    v1 = MEMORY[0x1E0CB0338];
    sub_1BC762F40(255, &qword_1EF45BA08, MEMORY[0x1E0CB0338], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
    sub_1BC762EF0(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    sub_1BC7629D0(&qword_1EF45BA18, &qword_1EF45BA08, v1);
    v2 = sub_1BC817674();
    if (!v3)
      atomic_store(v2, (unint64_t *)&qword_1EF45BA10);
  }
}

uint64_t sub_1BC7630AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC75F438((void (*)(_QWORD))type metadata accessor for UnprotectedNotificationContentState, (void (*)(void))sub_1BC763174, a1);
}

uint64_t sub_1BC7630D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for UnprotectedNotificationContentState(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;

  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_1BC763168@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC76326C(a1, (void (*)(_QWORD))type metadata accessor for UnprotectedNotificationContentState, a2);
}

uint64_t sub_1BC763174()
{
  return sub_1BC6F0A44(&qword_1EF45BA28, 255, type metadata accessor for UnprotectedNotificationContentState, (uint64_t)&protocol conformance descriptor for UnprotectedNotificationContentState);
}

uint64_t sub_1BC763194@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BC75F438((void (*)(_QWORD))type metadata accessor for ProtectedNotificationContentState, (void (*)(void))sub_1BC7632C0, a1);
}

uint64_t sub_1BC7631BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for ProtectedNotificationContentState(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;

  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 20);
  v5 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC763260@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC76326C(a1, (void (*)(_QWORD))type metadata accessor for ProtectedNotificationContentState, a2);
}

uint64_t sub_1BC76326C@<X0>(uint64_t *a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  a2(0);
  return sub_1BC75F4A4(a1, a3);
}

uint64_t sub_1BC7632C0()
{
  return sub_1BC6F0A44(&qword_1EF45BA38, 255, type metadata accessor for ProtectedNotificationContentState, (uint64_t)&protocol conformance descriptor for ProtectedNotificationContentState);
}

uint64_t sub_1BC7632E0()
{
  return sub_1BC6F0A44(&qword_1EF45BA48, 255, type metadata accessor for UnprotectedNotificationContentState, (uint64_t)&protocol conformance descriptor for UnprotectedNotificationContentState);
}

void *sub_1BC763304(void *a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  unint64_t v6;
  char v7;
  id v8;
  void *v10;

  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(_QWORD *)(a2 + 16))
    {
      v6 = sub_1BC706894((uint64_t)a1);
      if ((v7 & 1) != 0)
      {
        v5 = *(void **)(*(_QWORD *)(a2 + 56) + 8 * v6);
        v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  v3 = a1;
  v4 = sub_1BC81846C();

  if (!v4)
    return 0;
  sub_1BC6ED7C0(0, &qword_1ED6B96C0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

uint64_t DatabaseAccessibilityDispatchTarget.__allocating_init(target:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DatabaseAccessibilityDispatchTarget.init(target:)(a1);
  return v2;
}

_QWORD *DatabaseAccessibilityDispatchTarget.init(target:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v2 = v1;
  v4 = *v1;
  v5 = sub_1BC817FA4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1BC817F5C();
  MEMORY[0x1E0C80A78](v10);
  sub_1BC6FC700(a1, (uint64_t)(v2 + 2));
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = sub_1BC710AC8(MEMORY[0x1E0DEE9D8]);
  v13 = sub_1BC710ADC(v11);
  sub_1BC7635E8();
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 32) = 0;
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = v13;
  v2[8] = v14;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  v17[1] = v4;
  swift_getMetatypeMetadata();
  sub_1BC817AF4();
  sub_1BC817F50();
  sub_1BC817968();
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D0], v5);
  v15 = sub_1BC817FC8();
  __swift_destroy_boxed_opaque_existential_0(a1);
  v2[7] = v15;
  return v2;
}

void sub_1BC7635E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8ED0)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8ED0);
  }
}

uint64_t sub_1BC763644(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t (*v21)(uint64_t);
  char *v22;
  _QWORD v24[2];
  uint64_t v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  _QWORD aBlock[7];

  v5 = sub_1BC817950();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC817974();
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v26 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(os_unfair_lock_s **)(v2 + 64);
  v12 = (uint64_t)&v11[4];
  v13 = v11 + 8;
  os_unfair_lock_lock(v11 + 8);
  sub_1BC7638FC(v12, a1, a2, aBlock);
  os_unfair_lock_unlock(v13);
  v14 = aBlock[0];
  v15 = *(_QWORD *)(aBlock[0] + 16);
  if (v15)
  {
    v16 = 0;
    v24[1] = *(_QWORD *)(v2 + 56);
    v24[0] = v9;
    do
    {
      v17 = v14 + 16 * v16++;
      v18 = v14;
      v19 = swift_allocObject();
      v27 = *(_OWORD *)(v17 + 32);
      *(_OWORD *)(v19 + 16) = v27;
      aBlock[4] = sub_1BC6EF990;
      aBlock[5] = v19;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BC719640;
      aBlock[3] = &block_descriptor_9;
      v20 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      sub_1BC817968();
      v28 = MEMORY[0x1E0DEE9D8];
      v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC6FC630();
      v22 = v26;
      sub_1BC818184();
      MEMORY[0x1BCCF4C68](0, v22, v8, v20);
      _Block_release(v20);
      swift_release();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      (*(void (**)(char *, _QWORD))(v25 + 8))(v22, v24[0]);
      swift_release();
      v14 = v18;
    }
    while (v15 != v16);
  }
  return swift_bridgeObjectRelease();
}

void sub_1BC7638FC(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  char v12;
  uint64_t v13;

  if (a2)
  {
    v7 = a2;
    v8 = a3;
    sub_1BC764A28((uint64_t)v7, v8);

  }
  v9 = *(_QWORD *)(a1 + 8);
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_7;
  v10 = a3;
  v11 = sub_1BC706894((uint64_t)v10);
  if ((v12 & 1) == 0)
  {

LABEL_7:
    v13 = MEMORY[0x1E0DEE9D8];
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v11);
  swift_bridgeObjectRetain();

  sub_1BC71E45C((uint64_t)v10);
  swift_bridgeObjectRelease();
LABEL_8:
  *a4 = v13;
}

uint64_t DatabaseAccessibilityDispatchTarget.run(_:for:context:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ObjectType;
  void (*v21)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  os_unfair_lock_s *v38;
  void *v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  unint64_t v43;
  _QWORD *v44;
  void (*v45)(unint64_t, unint64_t, uint64_t (*)(void *, void *), _QWORD *, uint64_t, uint64_t, double);
  id v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _BYTE v60[40];
  _QWORD v61[4];
  __int128 v62[2];
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  v57 = a2;
  v55 = sub_1BC817440();
  v54 = *(_QWORD *)(v55 - 8);
  v11 = *(_QWORD *)(v54 + 64);
  v12 = MEMORY[0x1E0C80A78](v55);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v49 - v13;
  swift_getObjectType();
  v15 = swift_conformsToProtocol2();
  if (v15)
    v16 = v15;
  else
    v16 = 0;
  if (v15)
    v17 = a3;
  else
    v17 = 0;
  if (!v17)
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 40));
    return sub_1BC817254();
  }
  v51 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = a5;
  v53 = a6;
  v18 = v6;
  v19 = v17;
  ObjectType = swift_getObjectType();
  v21 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v16 + 24);
  v56 = a3;
  swift_unknownObjectRetain();
  v21(&v63, ObjectType, v16);
  if (!v64)
  {
    sub_1BC764000((uint64_t)&v63);
LABEL_16:
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v18 + 16), *(_QWORD *)(v18 + 40));
    swift_unknownObjectRetain();
    sub_1BC817254();
    return swift_unknownObjectRelease_n();
  }
  sub_1BC6FC848(&v63, (uint64_t)&v65);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
  if (!v22)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
    goto LABEL_16;
  }
  v23 = (void *)v22;
  v50 = v18;
  sub_1BC6FC700(v18 + 16, (uint64_t)&v63);
  sub_1BC6FC700(a1, (uint64_t)v62);
  v24 = v54;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
  v26 = v55;
  v25(v14, v57, v55);
  sub_1BC6FC700((uint64_t)&v63, (uint64_t)v61);
  sub_1BC6FC700((uint64_t)v62, (uint64_t)v60);
  v25(v51, (uint64_t)v14, v26);
  v27 = (*(unsigned __int8 *)(v24 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v28 = (v11 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = swift_allocObject();
  sub_1BC6FC848(&v63, v29 + 16);
  sub_1BC6FC848(v62, v29 + 56);
  (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v29 + v27, v14, v26);
  v30 = (_QWORD *)(v29 + v28);
  v31 = v19;
  *v30 = v19;
  v30[1] = v16;
  v32 = v16;
  v33 = (_QWORD *)(v29 + ((v28 + 23) & 0xFFFFFFFFFFFFFFF8));
  v34 = v50;
  v35 = v53;
  *v33 = v52;
  v33[1] = v35;
  v36 = *(_QWORD *)(v34 + 64);
  v37 = (uint64_t *)(v36 + 16);
  v38 = (os_unfair_lock_s *)(v36 + 32);
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v38);
  sub_1BC76420C(v37, v23, (uint64_t)sub_1BC764154, v29, (char *)&v58);
  v39 = v23;
  os_unfair_lock_unlock(v38);
  if (!(_BYTE)v58)
  {
    __swift_project_boxed_opaque_existential_1(v61, v61[3]);
    v48 = v51;
    sub_1BC817254();
    swift_unknownObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v48, v55);
LABEL_19:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
  }
  if (v58 != 1)
  {
    swift_unknownObjectRelease();

    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v55);
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t))(v54 + 8))(v51, v55);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  v40 = v67;
  v57 = v66;
  v55 = (uint64_t)__swift_project_boxed_opaque_existential_1(&v65, v66);
  v58 = 0;
  v59 = 0xE000000000000000;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  v58 = 0xD000000000000024;
  v59 = 0x80000001BC828570;
  v41 = objc_msgSend(v23, sel_description);
  sub_1BC817AE8();

  sub_1BC817B48();
  swift_bridgeObjectRelease();
  v42 = v58;
  v43 = v59;
  v44 = (_QWORD *)swift_allocObject();
  v44[2] = v31;
  v44[3] = v32;
  v44[4] = v39;
  v44[5] = v34;
  v45 = *(void (**)(unint64_t, unint64_t, uint64_t (*)(void *, void *), _QWORD *, uint64_t, uint64_t, double))(v40 + 8);
  swift_unknownObjectRetain();
  v46 = v39;
  swift_retain();
  v45(v42, v43, sub_1BC764748, v44, v57, v40, 10.0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
}

uint64_t sub_1BC764000(uint64_t a1)
{
  uint64_t v2;

  sub_1BC6ECA64(0, &qword_1EF45BA58, (uint64_t (*)(uint64_t))sub_1BC764054, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BC764054()
{
  unint64_t result;

  result = qword_1EF45BA60;
  if (!qword_1EF45BA60)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45BA60);
  }
  return result;
}

uint64_t sub_1BC7640A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1BC817440();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC764154()
{
  uint64_t v0;

  sub_1BC817440();
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1BC817254();
}

void sub_1BC76420C(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v28;
  uint64_t v29;

  v9 = *a1;
  v10 = a2;
  v11 = sub_1BC763304(v10, v9);

  if (v11 && objc_msgSend(v11, sel_isValid))
  {

    v12 = 0;
    goto LABEL_13;
  }
  v13 = a1[1];
  if (!*(_QWORD *)(v13 + 16))
  {
LABEL_12:
    sub_1BC6ECA64(0, &qword_1ED6B87A8, (uint64_t (*)(uint64_t))sub_1BC6ED114, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_1BC81A0F0;
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = a3;
    *(_QWORD *)(v25 + 24) = a4;
    *(_QWORD *)(v24 + 32) = sub_1BC6EF990;
    *(_QWORD *)(v24 + 40) = v25;
    v26 = v10;
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v29 = a1[1];
    a1[1] = 0x8000000000000000;
    sub_1BC71FD68(v24, v26, isUniquelyReferenced_nonNull_native);
    a1[1] = v29;

    swift_bridgeObjectRelease();
    v12 = 1;
    goto LABEL_13;
  }
  v14 = v10;
  v15 = sub_1BC706894((uint64_t)v14);
  if ((v16 & 1) == 0)
  {

    goto LABEL_12;
  }
  v17 = *(_QWORD **)(*(_QWORD *)(v13 + 56) + 8 * v15);
  swift_bridgeObjectRetain();

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a3;
  *(_QWORD *)(v18 + 24) = a4;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v17 = sub_1BC725DB8(0, v17[2] + 1, 1, v17);
  v20 = v17[2];
  v19 = v17[3];
  if (v20 >= v19 >> 1)
    v17 = sub_1BC725DB8((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
  v17[2] = v20 + 1;
  v21 = &v17[2 * v20];
  v21[4] = sub_1BC75BF20;
  v21[5] = v18;
  v22 = v14;
  v23 = swift_isUniquelyReferenced_nonNull_native();
  v28 = a1[1];
  a1[1] = 0x8000000000000000;
  sub_1BC71FD68((uint64_t)v17, v22, v23);
  a1[1] = v28;

  swift_bridgeObjectRelease();
  v12 = 2;
LABEL_13:
  *a5 = v12;
}

uint64_t sub_1BC76447C(void *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  os_log_t v26;
  _QWORD v28[2];
  uint64_t v29;
  os_log_t v30;
  int v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a1;
  v7 = sub_1BC817590();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_getObjectType();
    v11 = a2;
    sub_1BC8171E8();
    v12 = a2;
    v13 = a5;
    v14 = a2;
    v15 = v13;
    v16 = sub_1BC81756C();
    v17 = sub_1BC817E84();
    v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      v19 = swift_slowAlloc();
      v31 = v18;
      v20 = v19;
      v28[0] = swift_slowAlloc();
      *(_DWORD *)v20 = 138412546;
      v32 = v8;
      v29 = v7;
      v34 = (uint64_t)v15;
      v28[1] = &v35;
      v21 = v15;
      v30 = v16;
      v22 = v21;
      v7 = v29;
      v8 = v32;
      sub_1BC818148();
      v23 = v28[0];
      *(_QWORD *)v28[0] = v15;

      *(_WORD *)(v20 + 12) = 2112;
      v24 = a2;
      v25 = _swift_stdlib_bridgeErrorToNSError();
      v34 = v25;
      sub_1BC818148();
      *(_QWORD *)(v23 + 8) = v25;

      v26 = v30;
      _os_log_impl(&dword_1BC6DD000, v30, (os_log_type_t)v31, "Failed to retrieve database accessibility assertion for %@: %@", (uint8_t *)v20, 0x16u);
      sub_1BC6EFA40();
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v23, -1, -1);
      MEMORY[0x1BCCF5BA4](v20, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return sub_1BC763644(v33, a5);
}

uint64_t sub_1BC764714()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC764748(void *a1, void *a2)
{
  uint64_t v2;

  return sub_1BC76447C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t DatabaseAccessibilityDispatchTarget.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_release();
  return v0;
}

uint64_t DatabaseAccessibilityDispatchTarget.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7647B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return DatabaseAccessibilityDispatchTarget.run(_:for:context:completion:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1BC7647D4(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void **v5;
  void *v9;
  void *v10;
  void *v11;
  _QWORD v13[6];

  v9 = *v5;
  v10 = (void *)sub_1BC817AC4();
  v13[4] = a4;
  v13[5] = a5;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1BC6F1678;
  v13[3] = &block_descriptor_10;
  v11 = _Block_copy(v13);
  swift_retain();
  objc_msgSend(v9, sel_requestDatabaseAccessibilityAssertion_timeout_completion_, v10, v11, a1);
  _Block_release(v11);

  return swift_release();
}

id HealthPlatformContextProvider.Context.databaseAccessibilityProvider.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v4;

  v4 = *(id *)(v1 + 16);
  a1[3] = sub_1BC6ED7C0(0, &qword_1ED6B84B0);
  a1[4] = &protocol witness table for HKHealthStore;
  *a1 = v4;
  return v4;
}

id HealthPlatformContextProvider.Context.profileIdentifier.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_profileIdentifier);
}

id sub_1BC76490C()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_profileIdentifier);
}

id sub_1BC764930@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v4;

  v4 = *(id *)(v1 + 16);
  a1[3] = sub_1BC6ED7C0(0, &qword_1ED6B84B0);
  a1[4] = &protocol witness table for HKHealthStore;
  *a1 = v4;
  return v4;
}

uint64_t sub_1BC764988(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC6E1788(&qword_1ED6B7CE8, type metadata accessor for HealthPlatformContextProvider.Context, (uint64_t)&protocol conformance descriptor for HealthPlatformContextProvider.Context);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t dispatch thunk of DatabaseAccessibilityAssertionProvidingContext.profileIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DatabaseAccessibilityAssertionProvidingContext.databaseAccessibilityProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for DatabaseAccessibilityDispatchTarget()
{
  return objc_opt_self();
}

uint64_t method lookup function for DatabaseAccessibilityDispatchTarget()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DatabaseAccessibilityDispatchTarget.__allocating_init(target:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of DatabaseAccessibilityAssertionProviding.requestDatabaseAccessibilityAssertion(_:timeout:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

ValueMetadata *type metadata accessor for DatabaseAccessibilityDispatchTarget.State()
{
  return &type metadata for DatabaseAccessibilityDispatchTarget.State;
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t sub_1BC764A28(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
    goto LABEL_7;
  if (v6 < 0)
    v7 = *v2;
  else
    v7 = v6 & 0xFFFFFFFFFFFFFF8;
  result = sub_1BC8181FC();
  if (!__OFADD__(result, 1))
  {
    *v3 = sub_1BC764AC8(v7, result + 1);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v10 = *v3;
    *v3 = 0x8000000000000000;
    sub_1BC71FC3C(a1, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v10;
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC764AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a2)
  {
    sub_1BC70FBE8();
    v2 = sub_1BC818514();
    v18 = v2;
    sub_1BC818400();
    v3 = sub_1BC818484();
    if (v3)
    {
      v4 = v3;
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
      do
      {
        swift_dynamicCast();
        sub_1BC6ED7C0(0, &qword_1ED6B96C0);
        swift_dynamicCast();
        v2 = v18;
        v12 = *(_QWORD *)(v18 + 16);
        if (*(_QWORD *)(v18 + 24) <= v12)
        {
          sub_1BC709020(v12 + 1, 1);
          v2 = v18;
        }
        result = sub_1BC8180C4();
        v6 = v2 + 64;
        v7 = -1 << *(_BYTE *)(v2 + 32);
        v8 = result & ~v7;
        v9 = v8 >> 6;
        if (((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          v10 = __clz(__rbit64((-1 << v8) & ~*(_QWORD *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v13 = 0;
          v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v15 = v9 == v14;
            if (v9 == v14)
              v9 = 0;
            v13 |= v15;
            v16 = *(_QWORD *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(_QWORD *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        v11 = 8 * v10;
        *(_QWORD *)(*(_QWORD *)(v2 + 48) + v11) = v17;
        *(_QWORD *)(*(_QWORD *)(v2 + 56) + v11) = v4;
        ++*(_QWORD *)(v2 + 16);
        v4 = sub_1BC818484();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E0];
  }
  return v2;
}

uint64_t sub_1BC764D14()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t static NSPredicate.feedItemStoragePredicate(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1BC817338();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC81A0F0;
  swift_getObjectType();
  sub_1BC817518();
  v5 = sub_1BC81732C();
  v7 = v6;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BC6ED740();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  return sub_1BC817E3C();
}

uint64_t static FeedItemStorageErrors.== infix(_:_:)()
{
  return 1;
}

uint64_t FeedItemStorageErrors.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t FeedItemStorageErrors.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t FeedItemStorage.updateOrCreate(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BC764EF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1BC764FA4;
  return sub_1BC8186C4();
}

uint64_t sub_1BC764FA4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC765010()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC76501C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC765050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC76B518();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 8))(a3, sub_1BC76B59C, v14, a4, a5);
  return swift_release();
}

uint64_t FeedItemStorage.replaceExisting(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BC76516C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1BC765218;
  return sub_1BC8186C4();
}

uint64_t sub_1BC765218()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC765284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC76B518();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 16))(a3, sub_1BC76B59C, v14, a4, a5);
  return swift_release();
}

uint64_t FeedItemStorage.delete(feedItemIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return swift_task_switch();
}

uint64_t sub_1BC7653A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(_QWORD *)(v3 + 32) = v1;
  *(_QWORD *)(v3 + 40) = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v4;
  *v4 = v0;
  v4[1] = sub_1BC765218;
  return sub_1BC8186C4();
}

uint64_t sub_1BC76544C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;

  sub_1BC76B518();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(a5 + 24))(a3, sub_1BC76B59C, v14, a4, a5);
  return swift_release();
}

uint64_t sub_1BC76554C(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    sub_1BC76B518();
    return sub_1BC817D28();
  }
  else
  {
    sub_1BC76B518();
    return sub_1BC817D34();
  }
}

uint64_t FeedItemStorage.fetch(matching:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = v6;
  *(_BYTE *)(v7 + 96) = a4;
  *(_QWORD *)(v7 + 40) = a3;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  return swift_task_switch();
}

uint64_t sub_1BC7655C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_BYTE *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_QWORD *)(v0 + 24);
  v6 = swift_task_alloc();
  *(_QWORD *)(v0 + 72) = v6;
  *(_OWORD *)(v6 + 16) = *(_OWORD *)(v0 + 48);
  *(_QWORD *)(v6 + 32) = v1;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 48) = v4;
  *(_QWORD *)(v6 + 56) = v3;
  *(_BYTE *)(v6 + 64) = v2;
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 80) = v7;
  sub_1BC6ECA64(0, &qword_1ED6B8D20, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  *v7 = v0;
  v7[1] = sub_1BC7656B4;
  return sub_1BC8186C4();
}

uint64_t sub_1BC7656B4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BC765720()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC76572C()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BC765760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  unsigned int v21;
  uint64_t v22;

  v22 = a7;
  v21 = a6;
  v20[1] = a2;
  sub_1BC76B42C();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x1E0C80A78](v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v14);
  v17 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v18 + v17, (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t (*)(void *, char), uint64_t, uint64_t, uint64_t))(a8 + 32))(a3, a4, a5, v21, sub_1BC76B4CC, v18, v22, a8);
  return swift_release();
}

uint64_t sub_1BC76587C(id a1, char a2)
{
  id v3;

  if ((a2 & 1) != 0)
  {
    v3 = a1;
    sub_1BC76B42C();
    return sub_1BC817D28();
  }
  else
  {
    sub_1BC76B42C();
    swift_bridgeObjectRetain();
    return sub_1BC817D34();
  }
}

void PluginFeedItemStorage.updateOrCreate(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void **v4;
  void *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  _QWORD aBlock[6];
  _OWORD v15[5];
  uint64_t v16;

  v4 = v3;
  v8 = *v4;
  sub_1BC76AA3C((uint64_t)v4, (uint64_t)v15);
  v9 = swift_allocObject();
  v10 = v15[3];
  *(_OWORD *)(v9 + 48) = v15[2];
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = v15[4];
  v11 = v16;
  v12 = v15[1];
  *(_OWORD *)(v9 + 16) = v15[0];
  *(_OWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 96) = v11;
  *(_QWORD *)(v9 + 104) = a1;
  *(_QWORD *)(v9 + 112) = a2;
  *(_QWORD *)(v9 + 120) = a3;
  aBlock[4] = sub_1BC76AA74;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_11;
  v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlock_, v13);
  _Block_release(v13);
}

void sub_1BC765A04(void **a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t (*v5)();
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10[3];

  v10[2] = *(id *)MEMORY[0x1E0C80C00];
  v5 = sub_1BC765B20(a2);
  v6 = *a1;
  v10[0] = 0;
  if (objc_msgSend(v6, sel_save_, v10))
  {
    ((void (*)(id))v5)(v10[0]);
    a3(0);
    swift_release();
  }
  else
  {
    v7 = v10[0];
    v8 = (void *)sub_1BC816D5C();

    swift_willThrow();
    swift_release();
    v9 = v8;
    a3(v8);

  }
}

uint64_t (*sub_1BC765B20(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)();
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)();
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v36 = type metadata accessor for PluginFeedItem();
  v4 = MEMORY[0x1E0C80A78](v36);
  v34 = (uint64_t)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v9 = (uint64_t *)((char *)&v28 - v8);
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = *(unsigned __int8 *)(v7 + 80);
    v12 = a1 + ((v11 + 32) & ~v11);
    v32 = v11 | 7;
    v33 = (v11 + 16) & ~v11;
    v31 = (v6 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
    v30 = v31 + 16;
    v35 = *(_QWORD *)(v7 + 72);
    v28 = a1;
    swift_bridgeObjectRetain();
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v14 = type metadata accessor for PluginFeedItem;
    v29 = v9;
    do
    {
      sub_1BC6ECB08(v12, (uint64_t)v9, (uint64_t (*)(_QWORD))v14);
      PluginFeedItemStorage.updateOrCreate(_:)(v9);
      if (v2)
      {
        sub_1BC6ED784((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        swift_bridgeObjectRelease();
        return (uint64_t (*)())swift_bridgeObjectRelease();
      }
      v16 = (uint64_t *)((char *)v9 + *(int *)(v36 + 108));
      v17 = *v16;
      if (*v16)
      {
        v37 = 0;
        v18 = v16[1];
        v19 = v34;
        sub_1BC6ECB08((uint64_t)v9, v34, (uint64_t (*)(_QWORD))v14);
        v20 = swift_allocObject();
        v21 = v14;
        sub_1BC6ECBA4(v19, v20 + v33, (uint64_t (*)(_QWORD))v14);
        v22 = (uint64_t *)(v20 + v31);
        *v22 = v17;
        v22[1] = v18;
        v23 = swift_allocObject();
        *(_QWORD *)(v23 + 16) = sub_1BC76B3C4;
        *(_QWORD *)(v23 + 24) = v20;
        sub_1BC71C9F8(v17);
        sub_1BC71C9F8(v17);
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_1BC725DB8(0, v13[2] + 1, 1, v13);
        v25 = v13[2];
        v24 = v13[3];
        v26 = v13;
        if (v25 >= v24 >> 1)
          v26 = sub_1BC725DB8((_QWORD *)(v24 > 1), v25 + 1, 1, v13);
        v26[2] = v25 + 1;
        v13 = v26;
        v15 = &v26[2 * v25];
        v15[4] = sub_1BC6EF990;
        v15[5] = v23;
        swift_release();
        sub_1BC6F748C(v17);
        v2 = v37;
        v9 = v29;
        v14 = v21;
      }
      sub_1BC6ED784((uint64_t)v9, (uint64_t (*)(_QWORD))v14);
      v12 += v35;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(swift_allocObject() + 16) = v13;
  return sub_1BC76B1FC;
}

void PluginFeedItemStorage.updateOrCreate(_:)(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  _QWORD *v20;
  uint64_t v21;
  char v22;
  char v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;

  v3 = v1;
  v26 = type metadata accessor for PluginFeedItem();
  MEMORY[0x1E0C80A78](v26);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC816EF4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC7680B4(a1);
  FeedItem.update(with:)((uint64_t)a1);
  if (!v2)
  {
    v25[2] = v6;
    sub_1BC816EE8();
    v12 = (void *)sub_1BC816EAC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    objc_msgSend(v11, sel_setDateSubmitted_, v12);

    v13 = (uint64_t *)((char *)a1 + *(int *)(v26 + 104));
    v14 = v13[1];
    if (v14)
    {
      v26 = *v13;
      v15 = v3;
      v17 = v3[4];
      v16 = v3[5];
      __swift_project_boxed_opaque_existential_1(v3 + 1, v17);
      v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v17, v16);
      v20 = (_QWORD *)sub_1BC816B94();
      v21 = sub_1BC769760(v26, v14, v20);
      v23 = v22;
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        objc_msgSend(v11, sel_setSortOrder_, 0);
      }
      else
      {
        if ((sub_1BC816BA0() & 1) != 0)
          v24 = v21;
        else
          v24 = 0;
        objc_msgSend(v11, sel_setSortOrder_, v24);
      }
      v18 = (void *)sub_1BC817AC4();
      objc_msgSend(v11, sel_setFavoriteStatusRawValue_, v18);

    }
    else
    {
      v18 = (void *)sub_1BC817AC4();
      objc_msgSend(v11, sel_setFavoriteStatusRawValue_, v18);
      v15 = v3;
    }

    if ((objc_msgSend((id)v15[8], sel_evaluateWithObject_, v11) & 1) == 0)
    {
      sub_1BC76AA8C();
      swift_allocError();
      swift_willThrow();
    }
  }

}

uint64_t sub_1BC766390(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;

  v4 = type metadata accessor for PluginFeedItem();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1ED6BB338 != -1)
    swift_once();
  v7 = sub_1BC817590();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED6BB320);
  sub_1BC6ECB08(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  v8 = sub_1BC81756C();
  v9 = sub_1BC817E9C();
  if (os_log_type_enabled(v8, v9))
  {
    v17 = a2;
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v19 = v11;
    *(_DWORD *)v10 = 136446210;
    v16 = a1;
    v12 = *v6;
    v13 = v6[1];
    swift_bridgeObjectRetain();
    v14 = v12;
    a2 = v17;
    v18 = sub_1BC6E14D8(v14, v13, &v19);
    sub_1BC818148();
    a1 = v16;
    swift_bridgeObjectRelease();
    sub_1BC6ED784((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    _os_log_impl(&dword_1BC6DD000, v8, v9, "Running afterCommit block for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v11, -1, -1);
    MEMORY[0x1BCCF5BA4](v10, -1, -1);
  }
  else
  {
    sub_1BC6ED784((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  }

  return a2(a1);
}

uint64_t sub_1BC7665A8(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = *(_QWORD *)(result + 16);
  if (v1)
  {
    v2 = swift_bridgeObjectRetain() + 40;
    do
    {
      v3 = *(void (**)(uint64_t))(v2 - 8);
      v4 = swift_retain();
      v3(v4);
      swift_release();
      v2 += 16;
      --v1;
    }
    while (v1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void PluginFeedItemStorage.replaceExisting(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC7671E0(a1, a2, a3, (uint64_t)&unk_1E751B6B8, (uint64_t)sub_1BC76AB00, (uint64_t)&block_descriptor_14);
}

void sub_1BC76663C(uint64_t a1, void **a2, void (*a3)(_QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t (*v25)();
  void *v26;
  id v27;
  void *v28;
  id v29;
  uint64_t v30;
  void **v31;
  uint64_t v32;
  void (*v33)(_QWORD);
  __int128 v34;
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v8 = type metadata accessor for PluginFeedItem();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v31 = a2;
    v32 = a4;
    v33 = a3;
    *(_QWORD *)&v34 = MEMORY[0x1E0DEE9D8];
    sub_1BC6E8A7C(0, v12, 0);
    v14 = *(unsigned __int8 *)(v9 + 80);
    v30 = a1;
    v15 = a1 + ((v14 + 32) & ~v14);
    v16 = *(_QWORD *)(v9 + 72);
    v13 = v34;
    do
    {
      sub_1BC6ECB08(v15, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v17 = *v11;
      v18 = v11[1];
      swift_bridgeObjectRetain();
      sub_1BC6ED784((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8A7C(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v13 = v34;
      }
      v20 = *(_QWORD *)(v13 + 16);
      v19 = *(_QWORD *)(v13 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BC6E8A7C(v19 > 1, v20 + 1, 1);
        v13 = v34;
      }
      *(_QWORD *)(v13 + 16) = v20 + 1;
      v21 = v13 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v17;
      *(_QWORD *)(v21 + 40) = v18;
      v15 += v16;
      --v12;
    }
    while (v12);
    a3 = v33;
    a1 = v30;
    a2 = v31;
  }
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BC81A0F0;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v22 + 56) = v23;
  *(_QWORD *)(v22 + 64) = sub_1BC76B180(&qword_1ED6B8428, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v22 + 32) = v13;
  v24 = (void *)sub_1BC817E3C();
  PluginFeedItemStorage.deleteFeedItems(matching:)(v24, &v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = sub_1BC765B20(a1);
  v26 = *a2;
  *(_QWORD *)&v34 = 0;
  if (objc_msgSend(v26, sel_save_, &v34))
  {
    ((void (*)(id))v25)((id)v34);
    a3(0);

    swift_release();
  }
  else
  {
    v27 = (id)v34;
    v28 = (void *)sub_1BC816D5C();

    swift_willThrow();
    swift_release();
    v29 = v28;
    a3(v28);

  }
}

double PluginFeedItemStorage.deleteFeedItems(matching:)@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  NSObject *v2;
  NSObject *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  uint64_t v9;
  Class isa;
  objc_class *v11;
  id v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  ValueMetadata **v19;
  ValueMetadata **v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  id v34;
  unint64_t v35;
  uint64_t v36;
  os_log_t v37;
  ValueMetadata *v38;
  uint64_t v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  void *v44;
  void *v45;
  unint64_t Description;
  unint64_t Kind;
  ValueMetadata *v48;
  uint8_t *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  os_log_t v53;
  uint64_t v54;
  double result;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint8_t *v59;
  NSObject *v60;
  _OWORD *v61;
  os_log_t v62;
  ValueMetadata *v63;
  uint64_t v64[2];
  id v65[7];
  ValueMetadata **v66;
  __int128 v67;

  v3 = v2;
  v61 = a2;
  sub_1BC6ECA64(0, qword_1ED6BA340, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v56 - v6;
  v8 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC81D180;
  isa = v2[8].isa;
  *(_QWORD *)(v9 + 32) = isa;
  *(_QWORD *)(v9 + 40) = a1;
  v65[0] = (id)v9;
  sub_1BC817C74();
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  v11 = isa;
  v12 = a1;
  v13 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v13);

  -[NSObject setPredicate:](v8, sel_setPredicate_, v14);
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = sub_1BC6EBB28(MEMORY[0x1E0DEE9D8]);
  v17 = sub_1BC6EBE5C(v15);
  *(_QWORD *)&v67 = v16;
  *((_QWORD *)&v67 + 1) = v17;
  v62 = v3;
  type metadata accessor for FeedItem();
  v60 = v8;
  v18 = sub_1BC8180AC();
  v19 = (ValueMetadata **)(v18 >> 62);
  if (v18 >> 62)
    goto LABEL_15;
  v20 = *(ValueMetadata ***)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
  v21 = v18;
  swift_bridgeObjectRetain();
  for (; v20; v20 = (ValueMetadata **)sub_1BC8184E4())
  {
    v59 = (uint8_t *)v19;
    v22 = 4;
    while (1)
    {
      v18 = (v21 & 0xC000000000000001) != 0
          ? MEMORY[0x1BCCF4FB0](v22 - 4, v21)
          : (unint64_t)*(id *)(v21 + 8 * v22);
      v24 = (void *)v18;
      v19 = (ValueMetadata **)(v22 - 3);
      if (__OFADD__(v22 - 4, 1))
        break;
      FeedItem.contentKind.getter((char *)v64);
      sub_1BC728124(v65, LOBYTE(v64[0]));
      v25 = FeedItem.associatedProfiles.getter();
      if (*(_QWORD *)(v25 + 16) >= 2uLL)
        goto LABEL_36;
      sub_1BC6E6470(v25, (uint64_t)v7);
      v26 = type metadata accessor for UserProfile();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v7, 1, v26) == 1)
      {
        sub_1BC76AB48((uint64_t)v7);
        swift_bridgeObjectRelease();
        v23 = 0;
      }
      else
      {
        v23 = *(id *)&v7[*(int *)(v26 + 20)];
        sub_1BC6ED784((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
        swift_bridgeObjectRelease();
      }
      sub_1BC7291E0(v65, v23);

      -[objc_class deleteObject:](v62->isa, sel_deleteObject_, v24);
      ++v22;
      if (v19 == v20)
      {
        swift_bridgeObjectRelease();
        v19 = (ValueMetadata **)v59;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    v21 = v18;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_17:
  if (qword_1ED6BB338 != -1)
    swift_once();
  v27 = sub_1BC817590();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ED6BB320);
  sub_1BC76AA3C((uint64_t)v62, (uint64_t)v65);
  swift_bridgeObjectRetain();
  v28 = sub_1BC81756C();
  v29 = sub_1BC817E9C();
  v62 = v28;
  if (os_log_type_enabled(v28, (os_log_type_t)v29))
  {
    v58 = v29;
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v57 = v31;
    *(_DWORD *)v30 = 136446722;
    v63 = &type metadata for PluginFeedItemStorage;
    v64[0] = v31;
    sub_1BC76AB10();
    v20 = &v63;
    v32 = sub_1BC817AF4();
    v63 = (ValueMetadata *)sub_1BC6E14D8(v32, v33, v64);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    v34 = v65[6];
    v35 = (unint64_t)v66;
    swift_bridgeObjectRetain();
    v63 = (ValueMetadata *)sub_1BC6E14D8((uint64_t)v34, v35, v64);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    sub_1BC76AAD0(v65);
    v59 = (uint8_t *)v30;
    *(_WORD *)(v30 + 22) = 2080;
    if (v19)
    {
      swift_bridgeObjectRetain();
      v36 = sub_1BC8184E4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v36 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v38 = (ValueMetadata *)MEMORY[0x1E0DEE9D8];
    if (v36)
    {
      v63 = (ValueMetadata *)MEMORY[0x1E0DEE9D8];
      sub_1BC6E8A7C(0, v36 & ~(v36 >> 63), 0);
      if (v36 < 0)
      {
        __break(1u);
        while (1)
        {
LABEL_36:
          sub_1BC8184B4();
          __break(1u);

          sub_1BC76AA3C((uint64_t)v62, (uint64_t)v65);
          v64[0] = 0;
          v64[1] = 0xE000000000000000;
          sub_1BC8182C8();
          sub_1BC817B48();
          v63 = &type metadata for PluginFeedItemStorage;
          sub_1BC76AB10();
          sub_1BC817AF4();
          sub_1BC817B48();
          swift_bridgeObjectRelease();
          sub_1BC817B48();
          v20 = v66;
          swift_bridgeObjectRetain();
          sub_1BC817B48();
          swift_bridgeObjectRelease();
          sub_1BC817B48();
        }
      }
      v39 = 0;
      v38 = v63;
      do
      {
        if ((v21 & 0xC000000000000001) != 0)
          v40 = (id)MEMORY[0x1BCCF4FB0](v39, v21);
        else
          v40 = *(id *)(v21 + 8 * v39 + 32);
        v41 = v40;
        v42 = objc_msgSend(v40, sel_uniqueIdentifier);
        v43 = sub_1BC817AE8();
        v45 = v44;

        v63 = v38;
        Kind = v38[1].Kind;
        Description = (unint64_t)v38[1].Description;
        if (Kind >= Description >> 1)
        {
          sub_1BC6E8A7C(Description > 1, Kind + 1, 1);
          v38 = v63;
        }
        ++v39;
        v38[1].Kind = Kind + 1;
        v48 = &v38[Kind];
        v48[2].Kind = v43;
        v48[2].Description = v45;
      }
      while (v36 != v39);
    }
    v49 = v59;
    v63 = v38;
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC76B180((unint64_t *)&qword_1ED6BB1C8, MEMORY[0x1E0DEAF20]);
    v50 = sub_1BC817A88();
    v52 = v51;
    swift_bridgeObjectRelease();
    v63 = (ValueMetadata *)sub_1BC6E14D8(v50, v52, v64);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    v53 = v62;
    _os_log_impl(&dword_1BC6DD000, v62, (os_log_type_t)v58, "[%{public}s][%{public}s] Successfully deleted all feedItems: %s", v49, 0x20u);
    v54 = v57;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v54, -1, -1);
    MEMORY[0x1BCCF5BA4](v49, -1, -1);

    v37 = v60;
  }
  else
  {
    sub_1BC76AAD0(v65);

    swift_bridgeObjectRelease_n();
    v37 = v62;
  }

  result = *(double *)&v67;
  *v61 = v67;
  return result;
}

void PluginFeedItemStorage.delete(feedItemIdentifiers:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC7671E0(a1, a2, a3, (uint64_t)&unk_1E751B708, (uint64_t)sub_1BC76ABA0, (uint64_t)&block_descriptor_20);
}

void sub_1BC7671E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void **v6;
  void *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  void *v17;
  _QWORD aBlock[6];
  _OWORD v19[5];
  uint64_t v20;

  v12 = *v6;
  sub_1BC76AA3C((uint64_t)v6, (uint64_t)v19);
  v13 = swift_allocObject();
  v14 = v19[3];
  *(_OWORD *)(v13 + 56) = v19[2];
  *(_OWORD *)(v13 + 72) = v14;
  *(_OWORD *)(v13 + 88) = v19[4];
  v15 = v19[1];
  *(_OWORD *)(v13 + 24) = v19[0];
  *(_QWORD *)(v13 + 16) = a1;
  v16 = v20;
  *(_OWORD *)(v13 + 40) = v15;
  *(_QWORD *)(v13 + 104) = v16;
  *(_QWORD *)(v13 + 112) = a2;
  *(_QWORD *)(v13 + 120) = a3;
  aBlock[4] = a5;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = a6;
  v17 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performBlock_, v17);
  _Block_release(v17);
}

void sub_1BC7672F4(uint64_t a1, void **a2, void (*a3)(void *))
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  __int128 v14;
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC81A0F0;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = sub_1BC76B180(&qword_1ED6B8428, MEMORY[0x1E0CB1B18]);
  *(_QWORD *)(v6 + 32) = a1;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BC817E3C();
  PluginFeedItemStorage.deleteFeedItems(matching:)(v8, &v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = *a2;
  *(_QWORD *)&v14 = 0;
  if (objc_msgSend(v9, sel_save_, &v14))
  {
    v10 = (id)v14;
    a3(0);

  }
  else
  {
    v11 = (id)v14;
    v12 = (void *)sub_1BC816D5C();

    swift_willThrow();
    v13 = v12;
    a3(v12);

  }
}

void PluginFeedItemStorage.fetch(matching:completion:)(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  void **v6;
  void **v7;
  void *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  _QWORD aBlock[6];
  _OWORD v21[5];
  uint64_t v22;

  v7 = v6;
  v14 = *v7;
  sub_1BC76AA3C((uint64_t)v7, (uint64_t)v21);
  v15 = swift_allocObject();
  v16 = v21[3];
  *(_OWORD *)(v15 + 48) = v21[2];
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = v21[4];
  v17 = v22;
  v18 = v21[1];
  *(_OWORD *)(v15 + 16) = v21[0];
  *(_OWORD *)(v15 + 32) = v18;
  *(_QWORD *)(v15 + 96) = v17;
  *(_QWORD *)(v15 + 104) = a1;
  *(_QWORD *)(v15 + 112) = a2;
  *(_QWORD *)(v15 + 120) = a3;
  *(_BYTE *)(v15 + 128) = a4;
  *(_QWORD *)(v15 + 136) = a5;
  *(_QWORD *)(v15 + 144) = a6;
  aBlock[4] = sub_1BC76ABB4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_26;
  v19 = _Block_copy(aBlock);
  sub_1BC76ABB8(a1, a2, a3, a4);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlock_, v19);
  _Block_release(v19);
}

uint64_t sub_1BC7675E0(uint64_t a1, void *a2, void *a3, void *a4, char a5, void (*a6)(uint64_t, _QWORD), uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v27[2];
  void (*v28)(uint64_t, _QWORD);
  id v29;
  uint64_t v30;

  v13 = type metadata accessor for PluginFeedItem();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  v18 = sub_1BC76787C(a2, a3, a4, a5);
  objc_msgSend(v17, sel_setPredicate_, v18);

  type metadata accessor for FeedItem();
  v19 = sub_1BC8180AC();
  if (!(v19 >> 62))
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    v29 = v17;
    if (v20)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    a6(MEMORY[0x1E0DEE9D8], 0);
LABEL_14:

    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v20 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  v29 = v17;
  if (!v20)
    goto LABEL_13;
LABEL_3:
  v30 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC6E8CB0(0, v20 & ~(v20 >> 63), 0);
  if ((v20 & 0x8000000000000000) == 0)
  {
    v27[1] = a7;
    v28 = a6;
    v22 = 0;
    v23 = v30;
    do
    {
      if ((v19 & 0xC000000000000001) != 0)
        v24 = (id)MEMORY[0x1BCCF4FB0](v22, v19);
      else
        v24 = *(id *)(v19 + 8 * v22 + 32);
      PluginFeedItem.init(feedItem:)(v24, (uint64_t)v16);
      v30 = v23;
      v26 = *(_QWORD *)(v23 + 16);
      v25 = *(_QWORD *)(v23 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BC6E8CB0(v25 > 1, v26 + 1, 1);
        v23 = v30;
      }
      ++v22;
      *(_QWORD *)(v23 + 16) = v26 + 1;
      sub_1BC6ECBA4((uint64_t)v16, v23+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v26, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    }
    while (v20 != v22);
    swift_bridgeObjectRelease();
    v28(v23, 0);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

id sub_1BC76787C(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v4;
  uint64_t v9;
  void *v10;
  id v11;
  id v13;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t inited;
  id v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;

  if (a4 == -1)
    return *(id *)(v4 + 64);
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC81A120;
  v10 = *(void **)(v4 + 64);
  *(_QWORD *)(v9 + 32) = v10;
  v34 = v9;
  sub_1BC817C74();
  if (a4)
  {
    if (a4 != 1)
    {
      if (a1 == (void *)1)
      {
        v14 = v10;
      }
      else
      {
        sub_1BC6E1E98(0, &qword_1EF45AF98, (uint64_t)&type metadata for SourceProfile, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
        *(_QWORD *)(inited + 32) = a1;
        sub_1BC76ABB8(a1, a2, a3, 2);
        v30 = v10;
        sub_1BC76ABB8(a1, a2, a3, 2);
        _s14HealthPlatform8FeedItemC9predicate11matchingAnySo11NSPredicateCSayAA13SourceProfileOG_tFZ_0(inited);
        swift_setDeallocating();
        v31 = swift_arrayDestroy();
        MEMORY[0x1BCCF48F0](v31);
        if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BC817C98();
        sub_1BC817CD4();
        sub_1BC817C74();
      }
      goto LABEL_27;
    }
    if (a3 == (void *)1)
    {
      v11 = v10;
      sub_1BC76ABB8(a1, a2, (void *)1, 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1BC6E1E98(0, &qword_1EF45AF98, (uint64_t)&type metadata for SourceProfile, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v15 = swift_initStackObject();
      *(_OWORD *)(v15 + 16) = xmmword_1BC81A0F0;
      *(_QWORD *)(v15 + 32) = a3;
      sub_1BC7158F8(a3);
      v16 = v10;
      sub_1BC76ABB8(a1, a2, a3, 1);
      swift_bridgeObjectRetain();
      sub_1BC7158F8(a3);
      _s14HealthPlatform8FeedItemC9predicate11matchingAnySo11NSPredicateCSayAA13SourceProfileOG_tFZ_0(v15);
      swift_setDeallocating();
      v17 = swift_arrayDestroy();
      MEMORY[0x1BCCF48F0](v17);
      if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC817C98();
      sub_1BC817CD4();
      sub_1BC817C74();
    }
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
    sub_1BC6FCD7C();
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BC81A0E0;
    v19 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v18 + 56) = MEMORY[0x1E0DEA968];
    v20 = sub_1BC6ED740();
    *(_QWORD *)(v18 + 32) = 0xD000000000000010;
    *(_QWORD *)(v18 + 40) = 0x80000001BC825700;
    *(_QWORD *)(v18 + 96) = v19;
    *(_QWORD *)(v18 + 104) = v20;
    *(_QWORD *)(v18 + 64) = v20;
    *(_QWORD *)(v18 + 72) = a1;
    *(_QWORD *)(v18 + 80) = a2;
    sub_1BC817E3C();
    MEMORY[0x1BCCF48F0]();
    if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC817C98();
    sub_1BC817CD4();
    sub_1BC817C74();
    v21 = a3;
  }
  else
  {
    if (a2 == (void *)1)
    {
      v13 = v10;
      sub_1BC76ABB8(a1, (void *)1, a3, 0);
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1BC6E1E98(0, &qword_1EF45AF98, (uint64_t)&type metadata for SourceProfile, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v22 = swift_initStackObject();
      *(_OWORD *)(v22 + 16) = xmmword_1BC81A0F0;
      *(_QWORD *)(v22 + 32) = a2;
      sub_1BC7158F8(a2);
      v23 = v10;
      sub_1BC76ABB8(a1, a2, a3, 0);
      swift_bridgeObjectRetain();
      sub_1BC7158F8(a2);
      _s14HealthPlatform8FeedItemC9predicate11matchingAnySo11NSPredicateCSayAA13SourceProfileOG_tFZ_0(v22);
      swift_setDeallocating();
      v24 = swift_arrayDestroy();
      MEMORY[0x1BCCF48F0](v24);
      if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC817C98();
      sub_1BC817CD4();
      sub_1BC817C74();
    }
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
    sub_1BC6FCD7C();
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1BC81A0E0;
    v26 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v25 + 64) = sub_1BC6ED740();
    *(_QWORD *)(v25 + 32) = 0xD000000000000010;
    *(_QWORD *)(v25 + 40) = 0x80000001BC825700;
    v27 = sub_1BC7060D8((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1C0, v26, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    *(_QWORD *)(v25 + 96) = v28;
    *(_QWORD *)(v25 + 104) = sub_1BC76B180(&qword_1ED6B8428, MEMORY[0x1E0CB1B18]);
    *(_QWORD *)(v25 + 72) = v27;
    sub_1BC817E3C();
    MEMORY[0x1BCCF48F0]();
    if (*(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC817C98();
    sub_1BC817CD4();
    sub_1BC817C74();
    v21 = a2;
  }
  sub_1BC716D1C(v21);
LABEL_27:
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  v32 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v32);

  sub_1BC76B16C(a1, a2, a3, a4);
  return v33;
}

uint64_t PluginFeedItemStorage.init(storageContext:pluginPackage:scope:executorIdentifier:pinnedContentManager:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, __int128 *a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;

  *a8 = a1;
  a8[6] = a2;
  a8[7] = a3;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC81D180;
  *(_QWORD *)(v15 + 32) = a4;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v16 + 64) = sub_1BC6ED740();
  *(_QWORD *)(v16 + 32) = a2;
  *(_QWORD *)(v16 + 40) = a3;
  v17 = a1;
  swift_bridgeObjectRetain();
  v18 = a4;
  *(_QWORD *)(v15 + 40) = sub_1BC817E3C();
  sub_1BC817C74();
  v19 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  v20 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v19);

  a8[8] = v20;
  a8[9] = a5;
  a8[10] = a6;
  return sub_1BC6FC848(a7, (uint64_t)(a8 + 1));
}

void *sub_1BC7680B4(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  int *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  os_log_t v61;
  _QWORD *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  int *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  os_log_t v90;
  uint64_t v91;
  _QWORD *v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  NSObject *v97;
  unint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  void *v106;
  uint64_t v108;
  uint64_t v109;
  _BYTE *v110;
  os_log_t v111;
  os_log_t v112;
  uint64_t v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  int *v118;
  uint64_t *v119;
  _QWORD *v120;
  ValueMetadata *v121;
  uint64_t v122;
  _QWORD *v123;
  id v124[6];
  uint64_t v125;
  unint64_t v126;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC6ECA64(0, &qword_1ED6BACE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v108 - v5;
  v7 = sub_1BC816EF4();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BB2A0, (uint64_t (*)(uint64_t))type metadata accessor for RelevantDateInterval, v3);
  v113 = v10;
  MEMORY[0x1E0C80A78](v10);
  v117 = (uint64_t)&v108 - v11;
  v118 = (int *)type metadata accessor for PluginFeedItem();
  v12 = MEMORY[0x1E0C80A78](v118);
  v14 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v108 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v108 - v19;
  v21 = MEMORY[0x1E0C80A78](v18);
  v23 = (uint64_t *)((char *)&v108 - v22);
  v24 = MEMORY[0x1E0C80A78](v21);
  v115 = (char *)&v108 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v114 = (uint64_t *)((char *)&v108 - v27);
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v108 - v29;
  MEMORY[0x1E0C80A78](v28);
  v32 = (uint64_t *)((char *)&v108 - v31);
  v33 = *a1;
  v34 = a1[1];
  v119 = a1;
  v120 = v1;
  v116 = sub_1BC769844(v33, v34);
  if (v116)
  {
    if (qword_1ED6BB338 != -1)
      swift_once();
    v35 = sub_1BC817590();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED6BB320);
    sub_1BC76AA3C((uint64_t)v120, (uint64_t)v124);
    v36 = (uint64_t)v119;
    v37 = v32;
    sub_1BC6ECB08((uint64_t)v119, (uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v38 = (uint64_t)v30;
    sub_1BC6ECB08(v36, (uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v39 = (uint64_t)v114;
    sub_1BC6ECB08(v36, (uint64_t)v114, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v40 = v36;
    v41 = (uint64_t)v115;
    sub_1BC6ECB08(v40, (uint64_t)v115, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v42 = sub_1BC81756C();
    v43 = sub_1BC817E9C();
    v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = swift_slowAlloc();
      v120 = (_QWORD *)swift_slowAlloc();
      v123 = v120;
      *(_DWORD *)v45 = 136447490;
      v121 = &type metadata for PluginFeedItemStorage;
      sub_1BC76AB10();
      LODWORD(v119) = v44;
      v46 = sub_1BC817AF4();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v46, v47, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2082;
      v112 = v42;
      v49 = v125;
      v48 = v126;
      swift_bridgeObjectRetain();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v49, v48, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC76AAD0(v124);
      *(_WORD *)(v45 + 22) = 2080;
      v50 = *v37;
      v51 = v37[1];
      swift_bridgeObjectRetain();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v50, v51, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v45 + 32) = 2082;
      v52 = v118;
      sub_1BC76ABCC(v38 + v118[11], v117);
      v53 = sub_1BC817AF4();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v53, v54, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v38, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v45 + 42) = 2082;
      v55 = v39 + v52[26];
      v56 = *(_QWORD *)(v55 + 8);
      v121 = *(ValueMetadata **)v55;
      v122 = v56;
      sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_bridgeObjectRetain();
      v57 = sub_1BC817AF4();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v57, v58, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v39, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v45 + 52) = 2082;
      LOBYTE(v121) = *(_BYTE *)(v41 + v52[12]);
      v59 = ContentKind.rawValue.getter();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v59, v60, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v41, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v61 = v112;
      _os_log_impl(&dword_1BC6DD000, v112, (os_log_type_t)v119, "[%{public}s][%{public}s] fetchOrCreate Updating feedItem with unique identifier %s, relevant date %{public}s, pinned content identifier %{public}s and contentkind %{public}s ", (uint8_t *)v45, 0x3Eu);
      v62 = v120;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v62, -1, -1);
      MEMORY[0x1BCCF5BA4](v45, -1, -1);

    }
    else
    {
      sub_1BC76AAD0(v124);
      sub_1BC6ED784((uint64_t)v37, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784((uint64_t)v30, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v39, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v41, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);

    }
    return (void *)v116;
  }
  else
  {
    v64 = (uint64_t)v20;
    v65 = (uint64_t)v17;
    v115 = v9;
    v116 = (uint64_t)v6;
    if (qword_1ED6BB338 != -1)
      swift_once();
    v66 = sub_1BC817590();
    __swift_project_value_buffer(v66, (uint64_t)qword_1ED6BB320);
    sub_1BC76AA3C((uint64_t)v120, (uint64_t)v124);
    v67 = (uint64_t)v119;
    sub_1BC6ECB08((uint64_t)v119, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08(v67, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08(v67, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECB08(v67, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v68 = sub_1BC81756C();
    v69 = sub_1BC817E9C();
    v70 = v69;
    if (os_log_type_enabled(v68, v69))
    {
      v71 = swift_slowAlloc();
      LODWORD(v112) = v70;
      v72 = v71;
      v114 = (_QWORD *)swift_slowAlloc();
      v123 = v114;
      *(_DWORD *)v72 = 136447490;
      v73 = (uint64_t)v23;
      v121 = &type metadata for PluginFeedItemStorage;
      sub_1BC76AB10();
      v111 = v68;
      v74 = sub_1BC817AF4();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v74, v75, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v72 + 12) = 2082;
      v110 = v14;
      v77 = v125;
      v76 = v126;
      swift_bridgeObjectRetain();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v77, v76, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC76AAD0(v124);
      *(_WORD *)(v72 + 22) = 2080;
      v78 = *v23;
      v79 = *(_QWORD *)(v73 + 8);
      swift_bridgeObjectRetain();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v78, v79, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v73, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v72 + 32) = 2082;
      v80 = v118;
      sub_1BC76ABCC(v64 + v118[11], v117);
      v81 = sub_1BC817AF4();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v81, v82, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v64, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v72 + 42) = 2082;
      v83 = v65 + v80[26];
      v84 = *(_QWORD *)(v83 + 8);
      v121 = *(ValueMetadata **)v83;
      v122 = v84;
      sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
      swift_bridgeObjectRetain();
      v85 = sub_1BC817AF4();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v85, v86, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v65, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      *(_WORD *)(v72 + 52) = 2082;
      v87 = (uint64_t)v110;
      LOBYTE(v121) = v110[v80[12]];
      v88 = ContentKind.rawValue.getter();
      v121 = (ValueMetadata *)sub_1BC6E14D8(v88, v89, (uint64_t *)&v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC6ED784(v87, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v90 = v111;
      _os_log_impl(&dword_1BC6DD000, v111, (os_log_type_t)v112, "[%{public}s][%{public}s] fetchOrCreate Creating feedItem with unique identifier %s, relevant date %{public}s, pinned content identifier %{public}s and contentkind %{public}s ", (uint8_t *)v72, 0x3Eu);
      v91 = (uint64_t)v114;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v91, -1, -1);
      MEMORY[0x1BCCF5BA4](v72, -1, -1);

    }
    else
    {
      sub_1BC76AAD0(v124);
      sub_1BC6ED784((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v64, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);

    }
    v114 = (_QWORD *)type metadata accessor for FeedItem();
    v92 = v120;
    v93 = (void *)*v120;
    v94 = *(_QWORD *)(v67 + 8);
    v112 = *(os_log_t *)v67;
    v109 = v94;
    v95 = *(_QWORD *)(v67 + 16);
    v96 = *(_QWORD *)(v67 + 24);
    v97 = v120[7];
    v113 = v120[6];
    v111 = v97;
    v99 = *(_QWORD *)(v67 + 88);
    v98 = *(_QWORD *)(v67 + 96);
    v100 = *(unsigned __int8 *)(v67 + 32);
    v110 = v93;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC6ECAD4(v95, v96, v100);
    sub_1BC6F7DC4(v99, v98);
    v101 = (uint64_t)v115;
    sub_1BC816EE8();
    v102 = sub_1BC816C9C();
    v103 = v116;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v116, 1, 1, v102);
    v104 = v118;
    LOBYTE(v124[0]) = *(_BYTE *)(v67 + v118[12]);
    v63 = (void *)FeedItem.__allocating_init(context:uniqueIdentifier:userInterface:pluginPackage:userData:dateSubmitted:relevantDateRange:contentKind:searchSectionHint:)(v110, (uint64_t)v112, v109, v95, v96, v100, v113, (uint64_t)v111, v99, v98, v101, v103, (unsigned __int8 *)v124, *(_BYTE *)(v67 + v118[23]));
    v105 = v117;
    sub_1BC76ABCC(v67 + v104[11], v117);
    FeedItem.relevantDateInterval.setter(v105);
    if (v92[10])
      v106 = (void *)sub_1BC817AC4();
    else
      v106 = 0;
    objc_msgSend(v63, sel_setExecutorIdentifier_, v106);

  }
  return v63;
}

void FeedItem.update(with:)(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  id v19;
  id v20;
  unint64_t v21;
  void *v22;
  void *v23;
  int *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  void *v29;
  uint64_t v30;
  char v31;
  void *v32;
  void *v33;
  uint64_t v34;
  id v35;
  id v36;
  unint64_t v37;
  void *v38;
  id v39;
  id v40;
  unint64_t v41;
  void *v42;
  int *v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  id v48;
  id v49;
  unint64_t v50;
  void *v51;
  uint64_t v52;
  id v53;
  id v54;
  id v55;
  unint64_t v56;
  void *v57;
  int v58;
  id v59;
  void *v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  char *v66;
  uint64_t v67;
  _QWORD v68[2];

  v3 = v2;
  v4 = v1;
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BB2A0, (uint64_t (*)(uint64_t))type metadata accessor for RelevantDateInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v65 - v7;
  v9 = objc_msgSend(v1, sel_managedObjectContext);
  if (!v9)
  {
    v68[0] = 0;
    v68[1] = 0xE000000000000000;
    sub_1BC8182C8();
    sub_1BC817B48();
    v64 = objc_msgSend(v1, sel_description);
    sub_1BC817AE8();

    sub_1BC817B48();
    swift_bridgeObjectRelease();
LABEL_43:
    sub_1BC8184B4();
    __break(1u);
    return;
  }
  v10 = v9;
  v66 = v8;
  v67 = type metadata accessor for PluginFeedItem();
  v11 = *(void **)(a1 + *(int *)(v67 + 72));
  if (v11)
  {
    sub_1BC6ECA64(0, &qword_1ED6BA570, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = type metadata accessor for UserProfile();
    v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
    v65 = v4;
    v14 = (v13 + 32) & ~v13;
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1BC81A0F0;
    v16 = v11;
    v17 = objc_msgSend(v16, sel_identifier);
    sub_1BC816F24();

    *(_QWORD *)(v15 + v14 + *(int *)(v12 + 20)) = v16;
    v18 = sub_1BC730FC0(v15);
    swift_setDeallocating();
    v3 = v2;
    v4 = v65;
    swift_arrayDestroy();
    swift_deallocClassInstance();

  }
  else
  {
    v18 = MEMORY[0x1E0DEE9E8];
  }
  v19 = v11;
  v20 = v10;
  v21 = sub_1BC76A504(v18, v20, v11);
  swift_bridgeObjectRelease();

  if (v3)
  {

    return;
  }
  v65 = v20;

  sub_1BC6EBA40(v21);
  swift_bridgeObjectRelease();
  type metadata accessor for Profile();
  sub_1BC6F9604(&qword_1ED6BA3E8, (uint64_t (*)(uint64_t))type metadata accessor for Profile);
  v22 = (void *)sub_1BC817D70();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setProfiles_, v22);

  objc_msgSend(v4, sel_setUsesPlatformView_, *(unsigned __int8 *)(a1 + 33));
  if (*(_QWORD *)(a1 + 48))
    v23 = (void *)sub_1BC817AC4();
  else
    v23 = 0;
  v24 = (int *)v67;
  objc_msgSend(v4, sel_setActionHandlerClassName_, v23);

  if (*(_QWORD *)(a1 + 64) >> 60 == 15)
    v25 = 0;
  else
    v25 = (void *)sub_1BC816E58();
  objc_msgSend(v4, sel_setActionHandlerUserData_, v25);

  v26 = *(_QWORD *)(a1 + 16);
  v27 = *(_QWORD *)(a1 + 24);
  v28 = *(_BYTE *)(a1 + 32);
  sub_1BC6ECAD4(v26, v27, v28);
  FeedItem.userInterface.setter(v26, v27, v28);
  if (*(_QWORD *)(a1 + 96) >> 60 == 15)
    v29 = 0;
  else
    v29 = (void *)sub_1BC816E58();
  v30 = (uint64_t)v66;
  objc_msgSend(v4, sel_setUserData_, v29);

  sub_1BC76ABCC(a1 + v24[11], v30);
  FeedItem.relevantDateInterval.setter(v30);
  v31 = *(_BYTE *)(a1 + v24[12]);
  LOBYTE(v68[0]) = v31;
  ContentKind.rawValue.getter();
  v32 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setContentKindRawValue_, v32);

  sub_1BC6E2660();
  if (*(_QWORD *)(a1 + v24[15] + 8))
    v33 = (void *)sub_1BC817AC4();
  else
    v33 = 0;
  objc_msgSend(v4, sel_setCategoryIdentifier_, v33);

  LOBYTE(v68[0]) = v31;
  v34 = *(_QWORD *)(a1 + v24[17]);
  objc_msgSend(v4, sel_setSearchSectionRawValue_, sub_1BC811E20(v68, v34));
  FeedItem.associatedKeywords.getter();
  swift_bridgeObjectRelease();
  v35 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v35)
    goto LABEL_43;
  v36 = v35;
  v37 = sub_1BC6EC084(MEMORY[0x1E0DEE9E8], v36);

  sub_1BC6EB5E0(v37);
  swift_bridgeObjectRelease();
  type metadata accessor for Keyword();
  sub_1BC6F9604(&qword_1ED6BA730, (uint64_t (*)(uint64_t))type metadata accessor for Keyword);
  v38 = (void *)sub_1BC817D70();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setKeywords_, v38);

  sub_1BC6E2660();
  swift_bridgeObjectRetain();
  v39 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v39)
    goto LABEL_43;
  v40 = v39;
  v41 = sub_1BC6EC084(v34, v40);
  swift_bridgeObjectRelease();

  sub_1BC6EB5E0(v41);
  swift_bridgeObjectRelease();
  v42 = (void *)sub_1BC817D70();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setKeywords_, v42);

  sub_1BC6E2660();
  v43 = (int *)v67;
  v44 = *(_QWORD *)(a1 + *(int *)(v67 + 76) + 8) ? (void *)sub_1BC817AC4() : 0;
  objc_msgSend(v4, sel_setLocalizedCategoryName_, v44);

  v45 = *(_QWORD *)(a1 + v43[20] + 8) ? (void *)sub_1BC817AC4() : 0;
  objc_msgSend(v4, sel_setLocalizedTitle_, v45);

  v46 = *(_QWORD *)(a1 + v43[21] + 8) ? (void *)sub_1BC817AC4() : 0;
  objc_msgSend(v4, sel_setLocalizedDescription_, v46);

  v47 = *(_QWORD *)(a1 + v43[13]);
  swift_bridgeObjectRetain();
  v48 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v48)
    goto LABEL_43;
  v49 = v48;
  v50 = sub_1BC6EAFDC(v47, v49);
  swift_bridgeObjectRelease();

  sub_1BC6EB468(v50);
  swift_bridgeObjectRelease();
  type metadata accessor for DataType();
  sub_1BC6F9604((unint64_t *)&unk_1ED6BA3F0, (uint64_t (*)(uint64_t))type metadata accessor for DataType);
  v51 = (void *)sub_1BC817D70();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setDataTypes_, v51);

  sub_1BC77FB40(a1);
  v52 = *(_QWORD *)(a1 + v43[14]);
  swift_bridgeObjectRetain();
  v53 = objc_msgSend(v4, sel_managedObjectContext);
  if (!v53)
    goto LABEL_43;
  v54 = v53;
  v55 = v4;
  v56 = sub_1BC6EC8C4(v52, (uint64_t)v54, v55);

  sub_1BC6EBAF0(v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for SharableModelReference();
  sub_1BC6F9604(&qword_1ED6BA728, (uint64_t (*)(uint64_t))type metadata accessor for SharableModelReference);
  v57 = (void *)sub_1BC817D70();
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_setSharableModelReferences_, v57);

  objc_msgSend(v55, sel_setSortHint_, *(_QWORD *)(a1 + v43[22]));
  objc_msgSend(v55, sel_setIndexForSearch_, *(unsigned __int8 *)(a1 + v43[24]));
  v58 = *(unsigned __int8 *)(a1 + v43[25]);
  if (v58 == 2)
    v59 = objc_msgSend(v55, sel_hideInDiscover);
  else
    v59 = (id)(v58 & 1);
  v60 = v65;
  objc_msgSend(v55, sel_setHideInDiscover_, v59);
  if (*(_QWORD *)(a1 + v43[26] + 8))
    v61 = (void *)sub_1BC817AC4();
  else
    v61 = 0;
  objc_msgSend(v55, sel_setPinnedContentIdentifier_, v61);

  v62 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_setHostViewStyleRawValue_, v62);

  if (*(_QWORD *)(a1 + 80))
    v63 = (void *)sub_1BC817AC4();
  else
    v63 = 0;
  objc_msgSend(v55, sel_setBaseAutomationIdentifier_, v63);

}

uint64_t sub_1BC769760(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_1BC818694() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_1BC818694();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

uint64_t sub_1BC769844(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t result;
  uint64_t v14[6];

  v3 = v2;
  v4 = sub_1BC769B88(a1, a2);
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BC81A120;
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3928]);
  v7 = (void *)sub_1BC817AC4();
  v8 = objc_msgSend(v6, sel_initWithKey_ascending_, v7, 0);

  *(_QWORD *)(v5 + 32) = v8;
  v14[0] = v5;
  sub_1BC817C74();
  sub_1BC6ED7C0(0, (unint64_t *)&unk_1ED6BA498);
  v9 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setSortDescriptors_, v9);

  type metadata accessor for FeedItem();
  v10 = sub_1BC8180AC();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (!v11)
      goto LABEL_7;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v11)
    {
LABEL_7:
      swift_bridgeObjectRelease();

      return v11;
    }
  }
  if ((v10 & 0xC000000000000001) != 0)
  {
    v12 = (id)MEMORY[0x1BCCF4FB0](0, v10);
    goto LABEL_6;
  }
  if (*(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(id *)(v10 + 32);
LABEL_6:
    v11 = (uint64_t)v12;
    goto LABEL_7;
  }
  __break(1u);
  sub_1BC76AA3C(v3, (uint64_t)v14);
  sub_1BC8182C8();
  sub_1BC817B48();
  sub_1BC76AB10();
  sub_1BC817AF4();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817B48();
  sub_1BC817B48();
  sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
  sub_1BC8183E8();
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

id sub_1BC769B88(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;

  v3 = v2;
  v6 = _s14HealthPlatform8FeedItemC12fetchRequestSo07NSFetchF0CyACGyFZ_0();
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1BC6ED740();
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BC817E3C();
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BC81D180;
  v10 = *(void **)(v3 + 64);
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v8;
  sub_1BC817C74();
  v11 = v10;
  v12 = v8;
  v13 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  v14 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v13);

  objc_msgSend(v6, sel_setPredicate_, v14);
  return v6;
}

uint64_t sub_1BC769D18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  id v6;
  uint64_t result;
  uint64_t v8;

  sub_1BC6ECA64(0, qword_1ED6BA340, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - v3;
  if (*(_QWORD *)(a1 + 16) > 1uLL)
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  else
  {
    sub_1BC6E6470(a1, (uint64_t)v4);
    v5 = type metadata accessor for UserProfile();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
    {
      sub_1BC76AB48((uint64_t)v4);
      return 0;
    }
    else
    {
      v6 = *(id *)&v4[*(int *)(v5 + 20)];
      sub_1BC6ED784((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
    }
    return (uint64_t)v6;
  }
  return result;
}

uint64_t sub_1BC769E4C(uint64_t a1)
{
  unint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t result;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 2)
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  else
  {
    if (!v1)
      return 0;
    v3 = type metadata accessor for UserProfile();
    v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
    v5 = *(void **)(a1 + ((v4 + 32) & ~v4) + *(int *)(v3 + 20));
    v6 = v5;
    return (uint64_t)v5;
  }
  return result;
}

void sub_1BC769F00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void **v4;
  void *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  void *v13;
  _QWORD aBlock[6];
  _OWORD v15[5];
  uint64_t v16;

  v4 = v3;
  v8 = *v4;
  sub_1BC76AA3C((uint64_t)v4, (uint64_t)v15);
  v9 = swift_allocObject();
  v10 = v15[3];
  *(_OWORD *)(v9 + 48) = v15[2];
  *(_OWORD *)(v9 + 64) = v10;
  *(_OWORD *)(v9 + 80) = v15[4];
  v11 = v16;
  v12 = v15[1];
  *(_OWORD *)(v9 + 16) = v15[0];
  *(_OWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 96) = v11;
  *(_QWORD *)(v9 + 104) = a1;
  *(_QWORD *)(v9 + 112) = a2;
  *(_QWORD *)(v9 + 120) = a3;
  aBlock[4] = sub_1BC76B6D8;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_54;
  v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_performBlock_, v13);
  _Block_release(v13);
}

void sub_1BC76A00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BC76A044(a1, a2, a3, a4, a5, (uint64_t)&unk_1E751B990, (uint64_t)sub_1BC76B6FC, (uint64_t)&block_descriptor_47);
}

void sub_1BC76A028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1BC76A044(a1, a2, a3, a4, a5, (uint64_t)&unk_1E751B940, (uint64_t)sub_1BC76B6F8, (uint64_t)&block_descriptor_40);
}

void sub_1BC76A044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void **v8;
  void *v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  _QWORD aBlock[6];
  _OWORD v21[5];
  uint64_t v22;

  v14 = *v8;
  sub_1BC76AA3C((uint64_t)v8, (uint64_t)v21);
  v15 = swift_allocObject();
  v16 = v21[3];
  *(_OWORD *)(v15 + 56) = v21[2];
  *(_OWORD *)(v15 + 72) = v16;
  *(_OWORD *)(v15 + 88) = v21[4];
  v17 = v21[1];
  *(_OWORD *)(v15 + 24) = v21[0];
  *(_QWORD *)(v15 + 16) = a1;
  v18 = v22;
  *(_OWORD *)(v15 + 40) = v17;
  *(_QWORD *)(v15 + 104) = v18;
  *(_QWORD *)(v15 + 112) = a2;
  *(_QWORD *)(v15 + 120) = a3;
  aBlock[4] = a7;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = a8;
  v19 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlock_, v19);
  _Block_release(v19);
}

void sub_1BC76A158(void *a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6)
{
  void **v6;
  void **v7;
  void *v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  void *v19;
  _QWORD aBlock[6];
  _OWORD v21[5];
  uint64_t v22;

  v7 = v6;
  v14 = *v7;
  sub_1BC76AA3C((uint64_t)v7, (uint64_t)v21);
  v15 = swift_allocObject();
  v16 = v21[3];
  *(_OWORD *)(v15 + 48) = v21[2];
  *(_OWORD *)(v15 + 64) = v16;
  *(_OWORD *)(v15 + 80) = v21[4];
  v17 = v22;
  v18 = v21[1];
  *(_OWORD *)(v15 + 16) = v21[0];
  *(_OWORD *)(v15 + 32) = v18;
  *(_QWORD *)(v15 + 96) = v17;
  *(_QWORD *)(v15 + 104) = a1;
  *(_QWORD *)(v15 + 112) = a2;
  *(_QWORD *)(v15 + 120) = a3;
  *(_BYTE *)(v15 + 128) = a4;
  *(_QWORD *)(v15 + 136) = a5;
  *(_QWORD *)(v15 + 144) = a6;
  aBlock[4] = sub_1BC76ABB4;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_33;
  v19 = _Block_copy(aBlock);
  sub_1BC76ABB8(a1, a2, a3, a4);
  swift_retain();
  swift_release();
  objc_msgSend(v14, sel_performBlock_, v19);
  _Block_release(v19);
}

void (*sub_1BC76A28C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC76A3B8(v6, a2, a3);
  return sub_1BC76A2E0;
}

void (*sub_1BC76A2E4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC76A424(v6, a2, a3);
  return sub_1BC76A2E0;
}

void (*sub_1BC76A338(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1BC76A490(v6, a2, a3);
  return sub_1BC76A2E0;
}

void sub_1BC76A38C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_1BC76A3B8(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCF4FB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for SourceProfile;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BC76A424(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1BCCF4FB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s14HealthPlatform13SourceProfileOwxx;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1BC76A490(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x1BCCF4FB0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_1BC76A4FC;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC76A4FC()
{
  return swift_release();
}

uint64_t sub_1BC76A504(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  void *v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;

  v31 = a2;
  v6 = type metadata accessor for UserProfile();
  v29 = *(_QWORD *)(v6 - 8);
  v30 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v28 = (uint64_t)&v24 - v10;
  v11 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v24 = v3;
    v25 = a3;
    v32 = MEMORY[0x1E0DEE9D8];
    sub_1BC81837C();
    v13 = sub_1BC7D0860(a1);
    v15 = v14;
    v17 = v16 & 1;
    v27 = a1 + 56;
    result = type metadata accessor for Profile();
    v26 = result;
    while ((v13 & 0x8000000000000000) == 0 && v13 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v27 + (((unint64_t)v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
        goto LABEL_13;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v15)
        goto LABEL_14;
      v18 = v28;
      sub_1BC6ECB08(*(_QWORD *)(a1 + 48) + *(_QWORD *)(v29 + 72) * v13, v28, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
      sub_1BC6ECBA4(v18, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
      if (!static Profile.find(_:in:)(*(void **)&v9[*(int *)(v30 + 20)], v31))
      {
        sub_1BC76B128();
        swift_allocError();
        v21 = v25;
        *(_QWORD *)v22 = v25;
        *(_BYTE *)(v22 + 8) = 1;
        v23 = v21;
        swift_willThrow();
        sub_1BC6ED784((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
        return swift_release();
      }
      sub_1BC6ED784((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
      sub_1BC818358();
      sub_1BC818388();
      sub_1BC818394();
      sub_1BC818364();
      result = sub_1BC6EA6C0(v13, v15, v17 & 1, a1);
      v13 = result;
      v15 = v19;
      v17 = v20 & 1;
      if (!--v11)
      {
        sub_1BC6EAF90(result, v19, v20 & 1);
        return v32;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
  }
  return result;
}

id _sSo11NSPredicateC14HealthPlatformE24feedItemStoragePredicate3for17profileIdentifierAB0B13Orchestration8Executor_p_So09HKProfileJ0CtFZ_0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v15;
  id result;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  _QWORD v24[2];

  v4 = sub_1BC817338();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
  sub_1BC6FCD7C();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC81A0F0;
  swift_getObjectType();
  sub_1BC817518();
  v9 = sub_1BC81732C();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v12 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v13 = sub_1BC6ED740();
  *(_QWORD *)(v8 + 64) = v13;
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v11;
  v14 = (void *)sub_1BC817E3C();
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BC81A0E0;
  *(_QWORD *)(v15 + 56) = v12;
  *(_QWORD *)(v15 + 64) = v13;
  *(_QWORD *)(v15 + 32) = 0x73656C69666F7270;
  *(_QWORD *)(v15 + 40) = 0xE800000000000000;
  result = objc_msgSend(a3, sel_identifier);
  if (result)
  {
    v17 = result;
    *(_QWORD *)(v15 + 96) = sub_1BC6ED7C0(0, &qword_1ED6BA508);
    *(_QWORD *)(v15 + 104) = sub_1BC76B65C();
    *(_QWORD *)(v15 + 72) = v17;
    v18 = (void *)sub_1BC817E3C();
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BC81D180;
    *(_QWORD *)(v19 + 32) = v14;
    *(_QWORD *)(v19 + 40) = v18;
    v24[1] = v19;
    sub_1BC817C74();
    v20 = v14;
    v21 = v18;
    v22 = (void *)sub_1BC817C50();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend((id)objc_opt_self(), sel_andPredicateWithSubpredicates_, v22);

    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC76AA04(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC765050(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1BC76AA10(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC765284(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1BC76AA1C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BC76544C(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1BC76AA28(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC765760(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC76AA3C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for PluginFeedItemStorage(a2, a1);
  return a2;
}

void sub_1BC76AA74()
{
  uint64_t v0;

  sub_1BC765A04((void **)(v0 + 16), *(_QWORD *)(v0 + 104), *(void (**)(void *))(v0 + 112));
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

unint64_t sub_1BC76AA8C()
{
  unint64_t result;

  result = qword_1EF45BA88;
  if (!qword_1EF45BA88)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItemStorageErrors, &type metadata for FeedItemStorageErrors);
    atomic_store(result, (unint64_t *)&qword_1EF45BA88);
  }
  return result;
}

id *sub_1BC76AAD0(id *a1)
{
  destroy for PluginFeedItemStorage(a1);
  return a1;
}

void sub_1BC76AB00()
{
  uint64_t v0;

  sub_1BC76663C(*(_QWORD *)(v0 + 16), (void **)(v0 + 24), *(void (**)(_QWORD))(v0 + 112), *(_QWORD *)(v0 + 120));
}

unint64_t sub_1BC76AB10()
{
  unint64_t result;

  result = qword_1ED6B7DF0;
  if (!qword_1ED6B7DF0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B7DF0);
  }
  return result;
}

uint64_t sub_1BC76AB48(uint64_t a1)
{
  uint64_t v2;

  sub_1BC6ECA64(0, qword_1ED6BA340, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BC76ABA0()
{
  uint64_t v0;

  sub_1BC7672F4(*(_QWORD *)(v0 + 16), (void **)(v0 + 24), *(void (**)(void *))(v0 + 112));
}

id sub_1BC76ABB8(id result, void *a2, void *a3, char a4)
{
  if (a4 != -1)
    return sub_1BC7158A4(result, a2, a3, a4);
  return result;
}

uint64_t sub_1BC76ABCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BB2A0, (uint64_t (*)(uint64_t))type metadata accessor for RelevantDateInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC76AC2C()
{
  unint64_t result;

  result = qword_1EF45BA90;
  if (!qword_1EF45BA90)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItemStorageErrors, &type metadata for FeedItemStorageErrors);
    atomic_store(result, (unint64_t *)&qword_1EF45BA90);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedItemStorageErrors(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC76ACB0 + 4 * byte_1BC81D1A0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC76ACD0 + 4 * byte_1BC81D1A5[v4]))();
}

_BYTE *sub_1BC76ACB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC76ACD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC76ACD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC76ACE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC76ACE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC76ACF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemStorageErrors()
{
  return &type metadata for FeedItemStorageErrors;
}

uint64_t dispatch thunk of FeedItemStorage.updateOrCreate(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of FeedItemStorage.replaceExisting(with:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of FeedItemStorage.delete(feedItemIdentifiers:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of FeedItemStorage.fetch(matching:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t destroy for PluginFeedItemStorage(id *a1)
{

  __swift_destroy_boxed_opaque_existential_0((uint64_t)(a1 + 1));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PluginFeedItemStorage(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  v13 = *(void **)(a2 + 64);
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v13;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  v14 = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PluginFeedItemStorage(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a2 + 64);
  v8 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v7;
  v9 = v7;

  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for PluginFeedItemStorage(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginFeedItemStorage(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginFeedItemStorage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginFeedItemStorage()
{
  return &type metadata for PluginFeedItemStorage;
}

uint64_t objectdestroy_22Tm()
{
  uint64_t v0;
  int v1;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v1 = *(unsigned __int8 *)(v0 + 128);
  if (v1 != 255)
    sub_1BC716CC8(*(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC76B05C()
{
  uint64_t v0;

  return sub_1BC7675E0(v0 + 16, *(void **)(v0 + 104), *(void **)(v0 + 112), *(void **)(v0 + 120), *(_BYTE *)(v0 + 128), *(void (**)(uint64_t, _QWORD))(v0 + 136), *(_QWORD *)(v0 + 144));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BC76B128()
{
  unint64_t result;

  result = qword_1EF45BA98;
  if (!qword_1EF45BA98)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItemContextChangeError, &type metadata for FeedItemContextChangeError);
    atomic_store(result, (unint64_t *)&qword_1EF45BA98);
  }
  return result;
}

void sub_1BC76B16C(void *a1, void *a2, void *a3, char a4)
{
  if (a4 != -1)
    sub_1BC716CC8(a1, a2, a3, a4);
}

uint64_t sub_1BC76B180(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6BB1C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF5AB4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC76B1D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC76B1FC()
{
  uint64_t v0;

  return sub_1BC7665A8(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC76B204()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = (int *)type metadata accessor for PluginFeedItem();
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  sub_1BC6ECABC(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_BYTE *)(v2 + 32));
  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 >> 60 != 15)
    sub_1BC6ECB60(*(_QWORD *)(v2 + 56), v3);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + 96);
  if (v4 >> 60 != 15)
    sub_1BC6ECB60(*(_QWORD *)(v2 + 88), v4);
  v5 = v2 + v1[11];
  v6 = type metadata accessor for RelevantDateInterval();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_1BC816C9C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v1[27]))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC76B3C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(type metadata accessor for PluginFeedItem() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_1BC766390(v0 + v2, *(uint64_t (**)(_QWORD))(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1BC76B408()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC76B42C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45BAA0)
  {
    sub_1BC6ECA64(255, &qword_1ED6B8D20, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    v0 = sub_1BC817D40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45BAA0);
  }
}

uint64_t sub_1BC76B4C0()
{
  return objectdestroy_65Tm_0((uint64_t (*)(_QWORD))sub_1BC76B42C);
}

uint64_t sub_1BC76B4CC(void *a1, char a2)
{
  char v3;

  v3 = a2 & 1;
  sub_1BC76B42C();
  return sub_1BC76587C(a1, v3);
}

void sub_1BC76B518()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8440)
  {
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    v0 = sub_1BC817D40();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8440);
  }
}

uint64_t sub_1BC76B590()
{
  return objectdestroy_65Tm_0((uint64_t (*)(_QWORD))sub_1BC76B518);
}

uint64_t sub_1BC76B5A0()
{
  return objectdestroy_65Tm_0((uint64_t (*)(_QWORD))sub_1BC76B518);
}

uint64_t sub_1BC76B5AC(void *a1)
{
  sub_1BC76B518();
  return sub_1BC76554C(a1);
}

uint64_t sub_1BC76B5EC()
{
  return objectdestroy_65Tm_0((uint64_t (*)(_QWORD))sub_1BC76B518);
}

uint64_t objectdestroy_65Tm_0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = a1(0);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

unint64_t sub_1BC76B65C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BA510;
  if (!qword_1ED6BA510)
  {
    v1 = sub_1BC6ED7C0(255, &qword_1ED6BA508);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BA510);
  }
  return result;
}

uint64_t *sub_1BC76B704(int a1, void *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void (__cdecl *v14)(int);
  _BYTE v16[12];
  int v17;
  uint64_t v18;
  id v19;
  _QWORD aBlock[6];

  v19 = a2;
  v17 = a1;
  v3 = *v2;
  v18 = sub_1BC817950();
  v4 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1BC817974();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC76BD38();
  v2[2] = sub_1BC818010();
  swift_getObjectType();
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v3;
  aBlock[4] = sub_1BC76BDBC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_12;
  v13 = _Block_copy(aBlock);
  swift_retain();
  sub_1BC772C3C();
  sub_1BC772C40();
  sub_1BC818028();
  _Block_release(v13);
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v18);
  (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  swift_release();
  v14 = (void (__cdecl *)(int))sub_1BC8175A8();
  signal(v17, v14);
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_1BC818064();
  swift_unknownObjectRelease();

  return v2;
}

void sub_1BC76B928(uint64_t a1, uint64_t a2)
{
  uint64_t Strong;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    (*(void (**)(uint64_t))(*(_QWORD *)Strong + 96))(Strong);
    swift_release();
  }
  else
  {
    if (qword_1ED6BB1F8 != -1)
      swift_once();
    v4 = sub_1BC817590();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED6BB228);
    v5 = sub_1BC81756C();
    v6 = sub_1BC817E9C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136315138;
      v12 = a2;
      swift_getMetatypeMetadata();
      v9 = sub_1BC817AF4();
      v12 = sub_1BC6E14D8(v9, v10, &v11);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v5, v6, "[%s]: init()", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v8, -1, -1);
      MEMORY[0x1BCCF5BA4](v7, -1, -1);
    }

  }
}

void sub_1BC76BAE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  NSObject *oslog;
  uint64_t v9;
  uint64_t v10;

  v1 = *v0;
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6BB228);
  oslog = sub_1BC81756C();
  v3 = sub_1BC817E9C();
  if (os_log_type_enabled(oslog, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v9 = v5;
    v10 = v1;
    *(_DWORD *)v4 = 136315138;
    swift_getMetatypeMetadata();
    v6 = sub_1BC817AF4();
    v10 = sub_1BC6E14D8(v6, v7, &v9);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, oslog, v3, "[%s]: sourceNotification() default implementation :(", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
    MEMORY[0x1BCCF5BA4](v4, -1, -1);

  }
  else
  {

  }
}

uint64_t SignalListener.deinit()
{
  uint64_t v0;

  swift_getObjectType();
  sub_1BC81804C();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SignalListener.__deallocating_deinit()
{
  swift_getObjectType();
  sub_1BC81804C();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SignalListener()
{
  return objc_opt_self();
}

uint64_t method lookup function for SignalListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SignalListener.sourceNotification()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

unint64_t sub_1BC76BD38()
{
  unint64_t result;

  result = qword_1ED6BA4E8;
  if (!qword_1ED6BA4E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BA4E8);
  }
  return result;
}

uint64_t sub_1BC76BD74()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC76BD98()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC76BDBC()
{
  uint64_t v0;

  sub_1BC76B928(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t sub_1BC76BDCC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  int v23;
  __int128 v24;
  _OWORD v25[2];
  uint64_t v26;
  __int128 v27;
  _OWORD v28[2];
  uint64_t v29;
  _QWORD v30[2];
  _BYTE v31[40];
  __int128 v32[3];
  uint64_t v33;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v33 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E8CDC(0, v1, 0);
  result = sub_1BC7F3644(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v23 = v5;
  v22 = v1;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_25;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_26;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v14 = *v12;
    v13 = v12[1];
    sub_1BC6FC700(*(_QWORD *)(a1 + 56) + 40 * v6, (uint64_t)v31);
    v30[0] = v14;
    v30[1] = v13;
    *(_QWORD *)&v27 = v14;
    *((_QWORD *)&v27 + 1) = v13;
    sub_1BC6FC700((uint64_t)v31, (uint64_t)v28);
    v24 = v27;
    v25[0] = v28[0];
    v25[1] = v28[1];
    v26 = v29;
    swift_bridgeObjectRetain_n();
    sub_1BC6ED784((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BC772958);
    sub_1BC6FC700((uint64_t)v25, (uint64_t)v32);
    sub_1BC6ED784((uint64_t)&v24, (uint64_t (*)(_QWORD))sub_1BC772958);
    v2 = v33;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BC6E8CDC(0, *(_QWORD *)(v2 + 16) + 1, 1);
      v2 = v33;
    }
    v16 = *(_QWORD *)(v2 + 16);
    v15 = *(_QWORD *)(v2 + 24);
    if (v16 >= v15 >> 1)
    {
      sub_1BC6E8CDC(v15 > 1, v16 + 1, 1);
      v2 = v33;
    }
    *(_QWORD *)(v2 + 16) = v16 + 1;
    result = sub_1BC6FC848(v32, v2 + 40 * v16 + 32);
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_27;
    v17 = *(_QWORD *)(v8 + 8 * v11);
    if ((v17 & (1 << v6)) == 0)
      goto LABEL_28;
    v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23)
      goto LABEL_29;
    v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v22;
    }
    else
    {
      v19 = v11 + 1;
      v20 = (unint64_t)(v9 + 63) >> 6;
      v10 = v22;
      if (v11 + 1 < v20)
      {
        v21 = *(_QWORD *)(v8 + 8 * v19);
        if (v21)
        {
LABEL_22:
          v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            v21 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              v19 = v11 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    ++v7;
    v6 = v9;
    if (v7 == v10)
      return v2;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void sub_1BC76C088(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, void *);
  id v6;

  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

uint64_t sub_1BC76C0E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v3 = 0;
  v4 = MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = *(_QWORD *)(a1 + 8 * v3++ + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC806F44(v5);
    swift_bridgeObjectRelease();
  }
  while (v1 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

id HealthAppNotificationManager.notificationCenter.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

_QWORD *HealthAppNotificationManager.__allocating_init()()
{
  id v0;
  void *v1;
  id v2;

  sub_1BC817AE8();
  v0 = objc_allocWithZone(MEMORY[0x1E0CEC7A0]);
  v1 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_, v1);

  return _s14HealthPlatform0A22AppNotificationManagerC18notificationCenterACSo06UNUserdG0C_tcfC_0((uint64_t)v2);
}

uint64_t HealthAppNotificationManager.__allocating_init(notificationCenter:notificationManagerStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  __int128 v8;

  v4 = swift_allocObject();
  v5 = *(_QWORD *)(a2 + 32);
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  *(_QWORD *)(v4 + 64) = v6;
  *(_QWORD *)(v4 + 72) = sub_1BC710BE0(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v4 + 16) = a1;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 40) = v8;
  *(_QWORD *)(v4 + 56) = v5;
  return v4;
}

uint64_t HealthAppNotificationManager.init(notificationCenter:notificationManagerStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  __int128 v8;

  v5 = *(_QWORD *)(a2 + 32);
  type metadata accessor for UnfairLock();
  v6 = swift_allocObject();
  v7 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v6 + 16) = v7;
  *v7 = 0;
  *(_QWORD *)(v2 + 64) = v6;
  *(_QWORD *)(v2 + 72) = sub_1BC710BE0(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v2 + 16) = a1;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a2;
  *(_OWORD *)(v2 + 40) = v8;
  *(_QWORD *)(v2 + 56) = v5;
  return v2;
}

void sub_1BC76C344(char a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  _QWORD *v27;
  void *v28;
  uint64_t v29;
  uint64_t aBlock[6];

  v4 = v3;
  v7 = *v3;
  v8 = &unk_1ED6BB000;
  if ((a1 & 1) != 0)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v9 = sub_1BC817590();
    __swift_project_value_buffer(v9, (uint64_t)qword_1ED6BB5D0);
    v10 = sub_1BC81756C();
    v11 = sub_1BC817E9C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      aBlock[0] = v13;
      *(_DWORD *)v12 = 136315138;
      v14 = sub_1BC818814();
      sub_1BC6E14D8(v14, v15, aBlock);
      sub_1BC818148();
      v8 = (_QWORD *)&unk_1ED6BB000;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v10, v11, "%s [TCC] requestAuthorization adding .criticalAlert as an authorization option.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v13, -1, -1);
      MEMORY[0x1BCCF5BA4](v12, -1, -1);
    }

    v16 = 55;
  }
  else
  {
    v16 = 39;
  }
  if (v8[182] != -1)
    swift_once();
  v17 = sub_1BC817590();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED6BB5D0);
  v18 = sub_1BC81756C();
  v19 = sub_1BC817E9C();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    v29 = a2;
    v21 = a3;
    v22 = swift_slowAlloc();
    aBlock[0] = v22;
    *(_DWORD *)v20 = 136315138;
    v23 = sub_1BC818814();
    sub_1BC6E14D8(v23, v24, aBlock);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v18, v19, "%s [TCC] requestAuthorization initiating", v20, 0xCu);
    swift_arrayDestroy();
    v25 = v22;
    a3 = v21;
    a2 = v29;
    MEMORY[0x1BCCF5BA4](v25, -1, -1);
    MEMORY[0x1BCCF5BA4](v20, -1, -1);
  }

  v26 = (void *)v4[2];
  v27 = (_QWORD *)swift_allocObject();
  v27[2] = a2;
  v27[3] = a3;
  v27[4] = v7;
  aBlock[4] = (uint64_t)sub_1BC771138;
  aBlock[5] = (uint64_t)v27;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC76C088;
  aBlock[3] = (uint64_t)&block_descriptor_13;
  v28 = _Block_copy(aBlock);
  sub_1BC71C9F8(a2);
  swift_release();
  objc_msgSend(v26, sel_requestAuthorizationWithOptions_completionHandler_, v16, v28);
  _Block_release(v28);
}

void sub_1BC76C6E8(char a1, id a2, void (*a3)(_QWORD, id))
{
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  if (a2)
  {
    v6 = a2;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v7 = sub_1BC817590();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED6BB5D0);
    v8 = a2;
    v9 = a2;
    v10 = sub_1BC81756C();
    v11 = sub_1BC817E84();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v13 = swift_slowAlloc();
      v26 = v13;
      *(_DWORD *)v12 = 136315394;
      v14 = sub_1BC818814();
      sub_1BC6E14D8(v14, v15, &v26);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      v16 = a2;
      sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
      v17 = sub_1BC817B00();
      sub_1BC6E14D8(v17, v18, &v26);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v10, v11, "%s [TCC] requestAuthorization error: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v13, -1, -1);
      MEMORY[0x1BCCF5BA4](v12, -1, -1);

    }
    else
    {

    }
  }
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v19 = sub_1BC817590();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED6BB5D0);
  v20 = sub_1BC81756C();
  v21 = sub_1BC817E9C();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v26 = v23;
    *(_DWORD *)v22 = 136315394;
    v24 = sub_1BC818814();
    sub_1BC6E14D8(v24, v25, &v26);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 1024;
    sub_1BC818148();
    _os_log_impl(&dword_1BC6DD000, v20, v21, "%s [TCC] requestAuthorization success: %{BOOL}d", (uint8_t *)v22, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v23, -1, -1);
    MEMORY[0x1BCCF5BA4](v22, -1, -1);
  }

  if (a3)
    a3(a1 & 1, a2);
}

uint64_t sub_1BC76CAB8()
{
  sub_1BC771208(0, &qword_1ED6B8358, &qword_1ED6B85A8, 0x1E0CEC758, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  return sub_1BC81780C();
}

uint64_t sub_1BC76CB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  _QWORD v11[6];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1BC77294C;
  *(_QWORD *)(v7 + 24) = v6;
  v8 = *(void **)(a3 + 16);
  v11[4] = sub_1BC772A34;
  v11[5] = v7;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 1107296256;
  v11[2] = sub_1BC751D78;
  v11[3] = &block_descriptor_102;
  v9 = _Block_copy(v11);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_getNotificationSettingsWithCompletionHandler_, v9);
  _Block_release(v9);
  return swift_release();
}

void sub_1BC76CC28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD v5[6];

  v3 = *(void **)(v2 + 16);
  v5[4] = a1;
  v5[5] = a2;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 1107296256;
  v5[2] = sub_1BC751D78;
  v5[3] = &block_descriptor_3_0;
  v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_getNotificationSettingsWithCompletionHandler_, v4);
  _Block_release(v4);
}

id sub_1BC76CCC4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_notificationSettings);
}

uint64_t sub_1BC76CCE8(void *a1)
{
  return UNUserNotificationCenter.scheduleNotification(_:)(a1);
}

BOOL sub_1BC76CD08(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE v29[12];
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;

  v7 = *(_QWORD *)(a3 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = &v29[-v12];
  if ((v14 & 1) != 0)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v16 = sub_1BC817590();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED6BB5D0);
    v17 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
    v17(v13, a1, a3);
    v18 = sub_1BC81756C();
    v19 = sub_1BC817E9C();
    v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      v21 = swift_slowAlloc();
      v30 = v20;
      v22 = v21;
      v31 = swift_slowAlloc();
      v34 = v31;
      *(_DWORD *)v22 = 136315394;
      v23 = sub_1BC818814();
      v33 = sub_1BC6E14D8(v23, v24, &v34);
      v32 = a2;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      v17(v10, (uint64_t)v13, a3);
      v25 = sub_1BC817AF4();
      v33 = sub_1BC6E14D8(v25, v26, &v34);
      LOBYTE(a2) = v32;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v13, a3);
      _os_log_impl(&dword_1BC6DD000, v18, (os_log_type_t)v30, "%s Preventing notification coalescing in non-background mode for %s", (uint8_t *)v22, 0x16u);
      v27 = v31;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v27, -1, -1);
      MEMORY[0x1BCCF5BA4](v22, -1, -1);
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v13, a3);
    }

  }
  else
  {
    v34 = *(_QWORD *)(v3 + 64);
    MEMORY[0x1E0C80A78](v11);
    *(_QWORD *)&v29[-32] = a3;
    *(_QWORD *)&v29[-24] = v15;
    *(_QWORD *)&v29[-16] = v3;
    *(_QWORD *)&v29[-8] = a1;
    type metadata accessor for UnfairLock();
    sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
    swift_retain();
    sub_1BC81708C();
    swift_release();
  }
  return (a2 & 1) == 0;
}

uint64_t sub_1BC76D00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  char *v27;
  uint64_t *v28;
  void (*v29)(uint64_t *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;

  v8 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v40 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC818130();
  v45 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v39 - v14;
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  v42 = a2;
  v44 = v16;
  v17 = v16(a3, a4);
  v19 = v18;
  v41 = a1 + 72;
  swift_beginAccess();
  v20 = *(_QWORD *)(a1 + 72);
  if (*(_QWORD *)(v20 + 16))
  {
    swift_bridgeObjectRetain();
    v21 = sub_1BC706608(v17, v19);
    if ((v22 & 1) != 0)
    {
      sub_1BC6FC700(*(_QWORD *)(v20 + 56) + 40 * v21, (uint64_t)&v49);
    }
    else
    {
      v51 = 0;
      v49 = 0u;
      v50 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = 0;
    v49 = 0u;
    v50 = 0u;
  }
  swift_bridgeObjectRelease();
  v23 = v10;
  sub_1BC7729D0();
  v24 = swift_dynamicCast();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v15, v24 ^ 1u, 1, a3);
  v25 = v45;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v13, v15, v23);
  v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, a3);
  v43 = v23;
  if (v26 == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v23);
    v48 = 0;
    v46 = 0u;
    v47 = 0u;
    v27 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v40, v42, a3);
LABEL_11:
    *((_QWORD *)&v50 + 1) = a3;
    v51 = a4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v49);
    (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 32))(boxed_opaque_existential_1, v27, a3);
    sub_1BC6ED784((uint64_t)&v46, (uint64_t (*)(_QWORD))sub_1BC7729D0);
    goto LABEL_12;
  }
  *((_QWORD *)&v50 + 1) = a3;
  v51 = a4;
  v28 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v49);
  v29 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  v30 = v42;
  v29(v28, v42, a3);
  (*(void (**)(__int128 *__return_ptr, __int128 *, uint64_t, uint64_t))(a4 + 32))(&v46, &v49, a3, a4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
  v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  v32 = v30;
  v31(v13, a3);
  v33 = *((_QWORD *)&v47 + 1);
  v27 = v40;
  v29((uint64_t *)v40, v32, a3);
  if (!v33)
    goto LABEL_11;
  v31(v27, a3);
  sub_1BC6FC848(&v46, (uint64_t)&v49);
LABEL_12:
  v35 = v44(a3, a4);
  v37 = v36;
  sub_1BC6FC700((uint64_t)&v49, (uint64_t)&v46);
  swift_beginAccess();
  sub_1BC711938((uint64_t)&v46, v35, v37);
  swift_endAccess();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v15, v43);
}

uint64_t sub_1BC76D390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  sub_1BC771408(0, &qword_1ED6B81B8, (uint64_t (*)(uint64_t))sub_1BC771160, sub_1BC7711EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95C60]);
  v2 = v1;
  v18 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - v3;
  sub_1BC771208(0, &qword_1ED6B8300, (unint64_t *)&qword_1ED6B85A0, 0x1E0CEC740, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
  v6 = v5;
  v16 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - v7;
  sub_1BC771278();
  v10 = v9;
  v17 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v0 + 64);
  v22 = MEMORY[0x1E0DEE9D8];
  v19 = v0;
  v20 = &v22;
  type metadata accessor for UnfairLock();
  sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
  swift_retain();
  sub_1BC81708C();
  swift_release();
  if (*(_QWORD *)(v22 + 16))
  {
    v21 = v22;
    sub_1BC771160();
    sub_1BC6F72FC(0, &qword_1EF45BAA8, (void (*)(uint64_t))sub_1BC771160);
    sub_1BC7711EC();
    sub_1BC6F75D4(&qword_1EF45BAB0, &qword_1EF45BAA8, (void (*)(uint64_t))sub_1BC771160);
    swift_bridgeObjectRetain();
    sub_1BC8176A4();
    sub_1BC7713A0();
    v13 = sub_1BC817854();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v2);
  }
  else
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B85A0);
    sub_1BC8177E8();
    sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
    sub_1BC771330();
    sub_1BC817920();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v6);
    sub_1BC6E1788(&qword_1ED6B8068, (uint64_t (*)(uint64_t))sub_1BC771278, MEMORY[0x1E0C95850]);
    v13 = sub_1BC817854();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v10);
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1BC76D6BC(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v3 = (_QWORD *)(a1 + 72);
  swift_beginAccess();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC76BDCC(v4);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v7 = (_QWORD *)(v5 + 32);
    swift_bridgeObjectRetain();
    do
    {
      v8 = v7[3];
      v9 = v7[4];
      __swift_project_boxed_opaque_existential_1(v7, v8);
      v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
      if (v10)
      {
        v11 = v10;
        UNUserNotificationCenter.scheduleNotification(_:)(v10);
        v12 = swift_retain();
        MEMORY[0x1BCCF48F0](v12);
        if (*(_QWORD *)(*(_QWORD *)a2 + 16) >= *(_QWORD *)(*(_QWORD *)a2 + 24) >> 1)
          sub_1BC817C98();
        sub_1BC817CD4();
        sub_1BC817C74();

        swift_release();
      }
      v7 += 5;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  *v3 = MEMORY[0x1E0DEE9E0];
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC76D818(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  sub_1BC771408(0, &qword_1EF45BAC0, (uint64_t (*)(uint64_t))sub_1BC771478, sub_1BC771600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = sub_1BC77161C;
  v10[3] = v2;
  v10[4] = sub_1BC77164C;
  v10[5] = v9;
  sub_1BC771478();
  sub_1BC771600();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC817824();
  sub_1BC77167C();
  v11 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  return v11;
}

void sub_1BC76D980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC76DB40(a1, a2, a3, (uint64_t)sub_1BC76D99C, (uint64_t)&block_descriptor_93_0, (SEL *)&selRef_getPendingNotificationRequestsWithCompletionHandler_);
}

uint64_t sub_1BC76D99C(uint64_t a1, uint64_t a2)
{
  return sub_1BC76DBE8(a1, a2, (unint64_t *)&qword_1ED6B85A0);
}

uint64_t sub_1BC76D9B0(uint64_t a1, uint64_t a2)
{
  return sub_1BC76DC58(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1BC770880);
}

uint64_t sub_1BC76D9BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  sub_1BC771408(0, &qword_1EF45BAF8, (uint64_t (*)(uint64_t))sub_1BC7716E4, sub_1BC771858, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = sub_1BC771874;
  v10[3] = v2;
  v10[4] = sub_1BC7718C8;
  v10[5] = v9;
  sub_1BC7716E4();
  sub_1BC771858();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC817824();
  sub_1BC7718F8();
  v11 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  return v11;
}

void sub_1BC76DB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC76DB40(a1, a2, a3, (uint64_t)sub_1BC76DBD4, (uint64_t)&block_descriptor_78, (SEL *)&selRef_getDeliveredNotificationsWithCompletionHandler_);
}

void sub_1BC76DB40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  void *v7;
  void *v8;
  _QWORD v9[6];

  v7 = *(void **)(a3 + 16);
  v9[4] = a1;
  v9[5] = a2;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = a4;
  v9[3] = a5;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v7, *a6, v8);
  _Block_release(v8);
}

uint64_t sub_1BC76DBD4(uint64_t a1, uint64_t a2)
{
  return sub_1BC76DBE8(a1, a2, &qword_1EF45B870);
}

uint64_t sub_1BC76DBE8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  void (*v3)(uint64_t);
  uint64_t v4;

  v3 = *(void (**)(uint64_t))(a1 + 32);
  sub_1BC6ED7C0(0, a3);
  v4 = sub_1BC817C5C();
  swift_retain();
  v3(v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC76DC4C(uint64_t a1, uint64_t a2)
{
  return sub_1BC76DC58(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1BC770AA4);
}

uint64_t sub_1BC76DC58(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  if (*(_QWORD *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    v6 = swift_bridgeObjectRetain();
    v7 = a3(v6, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC76DCD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1BC771530(0, &qword_1EF45BAD0, &qword_1EF45BAD8, (unint64_t *)&qword_1ED6B85A0);
  swift_allocObject();
  swift_retain();
  sub_1BC81780C();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  sub_1BC77179C(0, &qword_1EF45BAD8, (unint64_t *)&qword_1ED6B85A0);
  sub_1BC771598();
  swift_retain();
  sub_1BC81786C();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC76DE28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1BC771530(0, &qword_1EF45BB08, &qword_1EF45BB10, &qword_1EF45B870);
  swift_allocObject();
  swift_retain();
  sub_1BC81780C();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a3;
  *(_QWORD *)(v9 + 24) = a4;
  sub_1BC77179C(0, &qword_1EF45BB10, &qword_1EF45B870);
  sub_1BC7717F0();
  swift_retain();
  sub_1BC81786C();
  swift_release();
  return swift_release();
}

uint64_t sub_1BC76DF78(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t), uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1BC77294C;
  *(_QWORD *)(v7 + 24) = v6;
  swift_retain();
  a3(sub_1BC772AE0, v7);
  return swift_release();
}

uint64_t sub_1BC76E00C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t (*)(uint64_t), uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = sub_1BC77294C;
  *(_QWORD *)(v7 + 24) = v6;
  swift_retain();
  a3(sub_1BC772AE0, v7);
  return swift_release();
}

void sub_1BC76E0A0(uint64_t a1)
{
  sub_1BC76E0B8(a1, (SEL *)&selRef_removePendingNotificationRequestsWithIdentifiers_);
}

void sub_1BC76E0AC(uint64_t a1)
{
  sub_1BC76E0B8(a1, (SEL *)&selRef_removeDeliveredNotificationsWithIdentifiers_);
}

void sub_1BC76E0B8(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  v4 = *(void **)(v2 + 16);
  v5 = (id)sub_1BC817C50();
  objc_msgSend(v4, *a2, v5);

}

uint64_t sub_1BC76E104()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  sub_1BC771960(0, &qword_1ED6B80F0, (uint64_t (*)(uint64_t))sub_1BC7719F8, sub_1BC771A74, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95B38]);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v16 - v4;
  sub_1BC771A90();
  v7 = v6;
  v16 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_OWORD *)(v0 + 40);
  v18 = *(_OWORD *)(v0 + 24);
  v19 = v10;
  v20 = *(_QWORD *)(v0 + 56);
  sub_1BC771BAC((uint64_t)&v18);
  v17 = sub_1BC817EC0();
  v11 = swift_allocObject();
  v12 = v19;
  *(_OWORD *)(v11 + 16) = v18;
  *(_OWORD *)(v11 + 32) = v12;
  *(_QWORD *)(v11 + 48) = v20;
  sub_1BC771BAC((uint64_t)&v18);
  sub_1BC7719F8();
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC771A74();
  sub_1BC8178CC();
  swift_release();
  swift_release();
  sub_1BC771C20();
  v13 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BC771C88((uint64_t)&v18);
  v17 = v13;
  swift_retain();
  sub_1BC817710();
  sub_1BC771AFC();
  sub_1BC771B90();
  sub_1BC8178E4();
  swift_release();
  swift_release();
  sub_1BC6E1788(&qword_1ED6B8158, (uint64_t (*)(uint64_t))sub_1BC771A90, MEMORY[0x1E0C95B78]);
  v14 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
  return v14;
}

uint64_t sub_1BC76E370@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t result;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = *a1;
  v4 = MEMORY[0x1E0DEE9E0];
  v21 = MEMORY[0x1E0DEE9E0];
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)(v3 + 80);
    do
    {
      v7 = *(v6 - 1);
      v8 = *v6;
      v9 = *(v6 - 3);
      v10 = *(v6 - 2);
      v11 = *(v6 - 4);
      v15 = *((_OWORD *)v6 - 3);
      v16 = v11;
      v17 = v9;
      v18 = v10;
      v19 = v7;
      v20 = v8;
      v12 = (id)v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC772650(&v21, &v15);
      v6 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v4 = v21;
  }
  v13 = sub_1BC76E8DC(v4, 0);
  result = swift_bridgeObjectRelease();
  *a2 = v13;
  return result;
}

uint64_t sub_1BC76E4B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  __int128 v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  v2 = v1;
  v20 = a1;
  sub_1BC771960(0, &qword_1ED6B80F0, (uint64_t (*)(uint64_t))sub_1BC7719F8, sub_1BC771A74, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95B38]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v19 - v6;
  sub_1BC771A90();
  v9 = v8;
  v21 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_OWORD *)(v1 + 40);
  v23 = *(_OWORD *)(v1 + 24);
  v24 = v12;
  v25 = *(_QWORD *)(v1 + 56);
  sub_1BC771BAC((uint64_t)&v23);
  v22 = sub_1BC817EC0();
  v13 = swift_allocObject();
  v14 = v24;
  *(_OWORD *)(v13 + 16) = v23;
  *(_OWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v13 + 48) = v25;
  sub_1BC771BAC((uint64_t)&v23);
  sub_1BC7719F8();
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC771A74();
  sub_1BC8178CC();
  swift_release();
  swift_release();
  sub_1BC771C20();
  v15 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BC771C88((uint64_t)&v23);
  v22 = v15;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 24) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC817710();
  sub_1BC771AFC();
  sub_1BC771B90();
  sub_1BC8178E4();
  swift_release();
  swift_release();
  sub_1BC6E1788(&qword_1ED6B8158, (uint64_t (*)(uint64_t))sub_1BC771A90, MEMORY[0x1E0C95B78]);
  v17 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  return v17;
}

uint64_t sub_1BC76E74C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC770CE8(v4, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = MEMORY[0x1E0DEE9E0];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = (_QWORD *)(v5 + 80);
    do
    {
      v8 = *(v7 - 1);
      v9 = *v7;
      v10 = *(v7 - 3);
      v11 = *(v7 - 2);
      v12 = *(v7 - 4);
      v17 = *((_OWORD *)v7 - 3);
      v18 = v12;
      v19 = v10;
      v20 = v11;
      v21 = v8;
      v22 = v9;
      v13 = (id)v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC772650(&v23, &v17);
      v7 += 7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease_n();
    v14 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = MEMORY[0x1E0DEE9E0];
  }
  v15 = sub_1BC76E8DC(v14, 1);
  result = swift_bridgeObjectRelease();
  *a2 = v15;
  return result;
}

uint64_t sub_1BC76E8DC(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  _QWORD *v42;
  char v43;
  id v44;
  _QWORD *v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  int64_t v51;
  char isUniquelyReferenced_nonNull_native;
  char v53;
  unint64_t v54;
  uint64_t v55;
  _BOOL8 v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  BOOL v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  int64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  char *v83;
  _QWORD *v84;
  id v85;
  id v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t result;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  unint64_t v116;
  unint64_t v117;
  int64_t v118;
  unint64_t v119;
  unint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  int v130;
  uint64_t v131;
  unint64_t v132;
  id v133;
  id v134;
  uint64_t v135;
  unint64_t v136;
  unint64_t v137;
  unint64_t v138;

  v130 = a2;
  sub_1BC771E3C(0);
  v110 = v3;
  v109 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v107 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC771960(0, (unint64_t *)&unk_1ED6B80C0, v5, sub_1BC771EA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95940]);
  v108 = v6;
  v106 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v105 = (char *)&v102 - v7;
  sub_1BC771E60(0);
  v104 = v8;
  v103 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v102 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC771EBC();
  v128 = *(_QWORD *)(v10 - 8);
  v129 = v10;
  MEMORY[0x1E0C80A78](v10);
  v127 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC771F28();
  v125 = *(_QWORD *)(v12 - 8);
  v126 = v12;
  MEMORY[0x1E0C80A78](v12);
  v124 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC771408(0, &qword_1ED6B8110, v14, sub_1BC7720B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95B50]);
  v122 = *(_QWORD *)(v15 - 8);
  v123 = v15;
  MEMORY[0x1E0C80A78](v15);
  v121 = (char *)&v102 - v16;
  v138 = MEMORY[0x1E0DEE9D8];
  v17 = *(_QWORD *)(a1 + 64);
  v111 = a1 + 64;
  v18 = 1 << *(_BYTE *)(a1 + 32);
  if (v18 < 64)
    v19 = ~(-1 << v18);
  else
    v19 = -1;
  v116 = v19 & v17;
  v112 = (unint64_t)(v18 + 63) >> 6;
  v113 = a1;
  swift_bridgeObjectRetain();
  v20 = 0;
  v119 = 0x80000001BC828A60;
  v120 = 0x80000001BC828A30;
LABEL_6:
  if (v116)
  {
    v21 = __clz(__rbit64(v116));
    v116 &= v116 - 1;
    v22 = v21 | (v20 << 6);
LABEL_22:
    v115 = v20;
    v26 = 8 * v22;
    v27 = *(void **)(*(_QWORD *)(v113 + 48) + v26);
    v28 = *(_QWORD *)(*(_QWORD *)(v113 + 56) + v26);
    v29 = *(_QWORD *)(v28 + 16);
    v133 = v27;
    if (v29)
    {
      swift_bridgeObjectRetain_n();
      v30 = v27;
      v114 = v28;
      v31 = (uint64_t *)(v28 + 80);
      v32 = MEMORY[0x1E0DEE9E0];
      while (1)
      {
        v117 = v29;
        v35 = (void *)*(v31 - 6);
        v34 = *(v31 - 5);
        v36 = *(v31 - 4);
        v132 = *(v31 - 3);
        v37 = *(v31 - 2);
        v118 = *(v31 - 1);
        v38 = *v31;
        v39 = *(_QWORD *)(v32 + 16);
        v40 = v35;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v39)
        {
          swift_bridgeObjectRetain();
          v41 = sub_1BC706608(v34, v36);
          v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          if ((v43 & 1) != 0)
          {
            v42 = *(_QWORD **)(*(_QWORD *)(v32 + 56) + 8 * v41);
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          v42 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        v135 = v34;
        v44 = v40;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        v134 = v44;
        swift_bridgeObjectRetain();
        v45 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v45 = sub_1BC725C5C(0, v42[2] + 1, 1, v42);
        v47 = v45[2];
        v46 = v45[3];
        if (v47 >= v46 >> 1)
          v45 = sub_1BC725C5C((_QWORD *)(v46 > 1), v47 + 1, 1, v45);
        v45[2] = v47 + 1;
        v48 = &v45[7 * v47];
        v49 = v135;
        v48[4] = v35;
        v48[5] = v49;
        v50 = v132;
        v48[6] = v36;
        v48[7] = v50;
        v51 = v118;
        v48[8] = v37;
        v48[9] = v51;
        v48[10] = v38;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v136 = v32;
        v54 = sub_1BC706608(v49, v36);
        v55 = *(_QWORD *)(v32 + 16);
        v56 = (v53 & 1) == 0;
        v57 = v55 + v56;
        if (__OFADD__(v55, v56))
        {
          __break(1u);
          goto LABEL_74;
        }
        v58 = v53;
        if (*(_QWORD *)(v32 + 24) >= v57)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BC70BEDC();
          v59 = v135;
          v32 = v136;
          if ((v58 & 1) == 0)
            goto LABEL_43;
        }
        else
        {
          sub_1BC709348(v57, isUniquelyReferenced_nonNull_native);
          v59 = v135;
          v60 = sub_1BC706608(v135, v36);
          if ((v58 & 1) != (v61 & 1))
            goto LABEL_79;
          v54 = v60;
          v32 = v136;
          if ((v58 & 1) == 0)
          {
LABEL_43:
            *(_QWORD *)(v32 + 8 * (v54 >> 6) + 64) |= 1 << v54;
            v62 = (uint64_t *)(*(_QWORD *)(v32 + 48) + 16 * v54);
            *v62 = v59;
            v62[1] = v36;
            *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v54) = v45;
            v63 = *(_QWORD *)(v32 + 16);
            v64 = __OFADD__(v63, 1);
            v65 = v63 + 1;
            if (v64)
              goto LABEL_75;
            *(_QWORD *)(v32 + 16) = v65;
            swift_bridgeObjectRetain();
            goto LABEL_25;
          }
        }
        v33 = *(_QWORD *)(v32 + 56);
        swift_bridgeObjectRelease();
        *(_QWORD *)(v33 + 8 * v54) = v45;
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v31 += 7;
        v29 = v117 - 1;
        if (v117 == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_47;
        }
      }
    }
    swift_bridgeObjectRetain();
    v66 = v27;
    v32 = MEMORY[0x1E0DEE9E0];
LABEL_47:
    swift_bridgeObjectRelease();
    v67 = 0;
    v68 = *(_QWORD *)(v32 + 64);
    v117 = v32 + 64;
    v69 = 1 << *(_BYTE *)(v32 + 32);
    if (v69 < 64)
      v70 = ~(-1 << v69);
    else
      v70 = -1;
    v71 = v70 & v68;
    v118 = (unint64_t)(v69 + 63) >> 6;
    v132 = v32;
    if (v71)
    {
LABEL_51:
      v134 = (id)((v71 - 1) & v71);
      v135 = v67;
      v72 = __clz(__rbit64(v71)) | (v67 << 6);
      goto LABEL_66;
    }
    while (1)
    {
      v73 = v67 + 1;
      if (__OFADD__(v67, 1))
        break;
      if (v73 >= v118)
        goto LABEL_5;
      v74 = *(_QWORD *)(v117 + 8 * v73);
      v75 = v67 + 1;
      if (!v74)
      {
        v75 = v67 + 2;
        if (v67 + 2 >= v118)
          goto LABEL_5;
        v74 = *(_QWORD *)(v117 + 8 * v75);
        if (!v74)
        {
          v75 = v67 + 3;
          if (v67 + 3 >= v118)
            goto LABEL_5;
          v74 = *(_QWORD *)(v117 + 8 * v75);
          if (!v74)
          {
            v76 = v67 + 4;
            if (v67 + 4 >= v118)
            {
LABEL_5:

              swift_release();
              v20 = v115;
              goto LABEL_6;
            }
            v74 = *(_QWORD *)(v117 + 8 * v76);
            if (!v74)
            {
              while (1)
              {
                v75 = v76 + 1;
                if (__OFADD__(v76, 1))
                  goto LABEL_76;
                if (v75 >= v118)
                  goto LABEL_5;
                v74 = *(_QWORD *)(v117 + 8 * v75);
                ++v76;
                if (v74)
                  goto LABEL_65;
              }
            }
            v75 = v67 + 4;
          }
        }
      }
LABEL_65:
      v134 = (id)((v74 - 1) & v74);
      v135 = v75;
      v72 = __clz(__rbit64(v74)) + (v75 << 6);
LABEL_66:
      v77 = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v72);
      v136 = 0;
      v137 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC8182C8();
      swift_bridgeObjectRelease();
      v136 = 0xD00000000000002FLL;
      v137 = v120;
      sub_1BC817B48();
      v79 = v136;
      v78 = v137;
      v136 = 0;
      v137 = 0xE000000000000000;
      sub_1BC8182C8();
      sub_1BC817B48();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      v80 = v136;
      v81 = v137;
      if ((v130 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v79 = 0;
        v78 = 0;
      }
      v82 = v131;
      sub_1BC76F5B8(v77);
      v136 = v77;
      sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      swift_bridgeObjectRetain();
      v83 = v127;
      sub_1BC8177DC();
      v84 = (_QWORD *)swift_allocObject();
      v84[2] = v79;
      v84[3] = v78;
      v85 = v133;
      v84[4] = v133;
      v84[5] = v80;
      v84[6] = v81;
      v84[7] = v82;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v86 = v85;
      sub_1BC817710();
      sub_1BC772334(0, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
      sub_1BC6E1788(&qword_1ED6B82C0, (uint64_t (*)(uint64_t))sub_1BC771EBC, MEMORY[0x1E0C960B0]);
      sub_1BC772524(&qword_1ED6B8210, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
      v87 = v124;
      v88 = v129;
      sub_1BC817938();
      swift_release();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v83, v88);
      sub_1BC7720B8();
      v89 = v121;
      v90 = v126;
      sub_1BC8178D8();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v87, v90);
      sub_1BC7720DC();
      v91 = v123;
      sub_1BC817854();
      (*(void (**)(char *, uint64_t))(v122 + 8))(v89, v91);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v92 = swift_retain();
      MEMORY[0x1BCCF48F0](v92);
      if (*(_QWORD *)(v138 + 16) >= *(_QWORD *)(v138 + 24) >> 1)
        sub_1BC817C98();
      sub_1BC817CD4();
      sub_1BC817C74();
      swift_release();
      v32 = v132;
      v71 = (unint64_t)v134;
      v67 = v135;
      if (v134)
        goto LABEL_51;
    }
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  v23 = v20 + 1;
  if (!__OFADD__(v20, 1))
  {
    if (v23 < v112)
    {
      v24 = *(_QWORD *)(v111 + 8 * v23);
      ++v20;
      if (v24)
        goto LABEL_21;
      v20 = v23 + 1;
      if (v23 + 1 >= v112)
        goto LABEL_72;
      v24 = *(_QWORD *)(v111 + 8 * v20);
      if (v24)
        goto LABEL_21;
      v20 = v23 + 2;
      if (v23 + 2 >= v112)
        goto LABEL_72;
      v24 = *(_QWORD *)(v111 + 8 * v20);
      if (v24)
      {
LABEL_21:
        v116 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v20 << 6);
        goto LABEL_22;
      }
      v25 = v23 + 3;
      if (v25 < v112)
      {
        v24 = *(_QWORD *)(v111 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v20 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_78;
            if (v20 >= v112)
              goto LABEL_72;
            v24 = *(_QWORD *)(v111 + 8 * v20);
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v20 = v25;
        goto LABEL_21;
      }
    }
LABEL_72:
    swift_release();
    v136 = v138;
    sub_1BC771AFC();
    sub_1BC6F72FC(0, &qword_1ED6B8418, (void (*)(uint64_t))sub_1BC771AFC);
    sub_1BC771B90();
    sub_1BC6F75D4(&qword_1ED6B8420, &qword_1ED6B8418, (void (*)(uint64_t))sub_1BC771AFC);
    v93 = v102;
    sub_1BC8176A4();
    sub_1BC771E84();
    v94 = v107;
    v95 = v104;
    sub_1BC8178D8();
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC771EA0();
    v96 = v105;
    v97 = v110;
    sub_1BC81786C();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v94, v97);
    sub_1BC772144();
    v98 = v108;
    v99 = sub_1BC817854();
    (*(void (**)(char *, uint64_t))(v106 + 8))(v96, v98);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v93, v95);
    v136 = v99;
    v100 = sub_1BC817854();
    swift_release();
    return v100;
  }
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

void sub_1BC76F5B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;

  v2 = v1;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BC6E8A7C(0, v3, 0);
    v5 = (uint64_t *)(a1 + 80);
    do
    {
      v7 = *(v5 - 1);
      v6 = *v5;
      v9 = *(_QWORD *)(v14 + 16);
      v8 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_1BC6E8A7C(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v14 + 16) = v9 + 1;
      v10 = v14 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v7;
      *(_QWORD *)(v10 + 40) = v6;
      v5 += 7;
      --v3;
    }
    while (v3);
  }
  v11 = *(void **)(v2 + 16);
  v12 = (void *)sub_1BC817C50();
  objc_msgSend(v11, sel_removePendingNotificationRequestsWithIdentifiers_, v12);

  v13 = (id)sub_1BC817C50();
  objc_msgSend(v11, sel_removeDeliveredNotificationsWithIdentifiers_, v13);
  swift_bridgeObjectRelease();

}

uint64_t sub_1BC76F6F0(uint64_t a1, uint64_t (*a2)(_OWORD *))
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  char v5;
  _OWORD v7[3];
  uint64_t v8;

  if (a2)
  {
    v2 = *(_QWORD *)(a1 + 48);
    v4 = *(_OWORD *)(a1 + 16);
    v3 = *(_OWORD *)(a1 + 32);
    v7[0] = *(_OWORD *)a1;
    v7[1] = v4;
    v7[2] = v3;
    v8 = v2;
    v5 = a2(v7);
  }
  else
  {
    v5 = 1;
  }
  return v5 & 1;
}

uint64_t sub_1BC76F74C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _QWORD *v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v32 = a2;
  v33 = a5;
  v31 = a3;
  sub_1BC771EBC();
  v34 = v10;
  v37 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC771F28();
  v30 = v13;
  v36 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC771408(0, &qword_1ED6B8110, v16, sub_1BC7720B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95B50]);
  v18 = v17;
  v35 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v29 - v19;
  sub_1BC76F5B8(a1);
  v38 = a1;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_bridgeObjectRetain();
  sub_1BC8177DC();
  v21 = (_QWORD *)swift_allocObject();
  v22 = v32;
  v21[2] = v31;
  v21[3] = a4;
  v23 = v33;
  v21[4] = v22;
  v21[5] = v23;
  v21[6] = a6;
  v21[7] = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v24 = v22;
  sub_1BC817710();
  sub_1BC772334(0, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC6E1788(&qword_1ED6B82C0, (uint64_t (*)(uint64_t))sub_1BC771EBC, MEMORY[0x1E0C960B0]);
  sub_1BC772524(&qword_1ED6B8210, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
  v25 = v34;
  sub_1BC817938();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v25);
  sub_1BC7720B8();
  v26 = v30;
  sub_1BC8178D8();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v26);
  sub_1BC7720DC();
  v27 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v18);
  return v27;
}

uint64_t sub_1BC76FA10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t inited;
  uint64_t v21;
  id v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  id v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  void *v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v42 = a7;
  v43 = a5;
  sub_1BC7721AC();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *a1;
  v45 = MEMORY[0x1E0DEE9D8];
  if (a3)
  {
    type metadata accessor for PluginContentStateManager();
    inited = swift_initStackObject();
    v41 = v16;
    v21 = inited;
    *(_QWORD *)(inited + 16) = a2;
    *(_QWORD *)(inited + 24) = a3;
    v22 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
    v40 = 0;
    v23 = v18;
    v24 = a6;
    v25 = v15;
    v26 = v19;
    v27 = a8;
    v28 = v22;
    swift_bridgeObjectRetain();
    v29 = a4;
    v30 = (void *)sub_1BC817AC4();
    v31 = v28;
    a8 = v27;
    v19 = v26;
    v15 = v25;
    a6 = v24;
    v18 = v23;
    v32 = objc_msgSend(v31, sel_initWithCategory_domainName_healthStore_, 1, v30, v29);

    *(_QWORD *)(v21 + 32) = v32;
    swift_retain();
    v33 = sub_1BC770120(v19, v21);
    swift_release();
    sub_1BC807204(v33);
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    v34 = *(void **)(v21 + 32);
    v16 = v41;

  }
  if (a6)
  {
    type metadata accessor for HealthAppNotificationContentStateManager();
    v35 = *(void **)(v42 + 48);
    swift_bridgeObjectRetain();
    v36 = v35;
    HealthAppNotificationContentStateManager.__allocating_init(healthStore:domain:)(v36, v43, a6);
    v37 = sub_1BC7703DC(v19);
    sub_1BC807204(v37);
    swift_release();
  }
  v44 = v45;
  sub_1BC772334(0, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC772244();
  sub_1BC772524(&qword_1ED6B8210, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
  sub_1BC6E1788(&qword_1ED6B8410, (uint64_t (*)(uint64_t))sub_1BC772244, MEMORY[0x1E0DEAF38]);
  sub_1BC8176A4();
  sub_1BC6E1788(&qword_1ED6B8198, (uint64_t (*)(uint64_t))sub_1BC7721AC, MEMORY[0x1E0C95C80]);
  v38 = sub_1BC817854();
  result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  *a8 = v38;
  return result;
}

uint64_t HealthAppNotificationManager.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t HealthAppNotificationManager.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 48);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC76FDC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  sub_1BC771408(0, &qword_1EF45BAC0, (uint64_t (*)(uint64_t))sub_1BC771478, sub_1BC771600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = sub_1BC77161C;
  v10[3] = v2;
  v10[4] = sub_1BC772A60;
  v10[5] = v9;
  sub_1BC771478();
  sub_1BC771600();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC817824();
  sub_1BC77167C();
  v11 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  return v11;
}

uint64_t sub_1BC76FF2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  sub_1BC771408(0, &qword_1EF45BAF8, (uint64_t (*)(uint64_t))sub_1BC7716E4, sub_1BC771858, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = sub_1BC771874;
  v10[3] = v2;
  v10[4] = sub_1BC772A5C;
  v10[5] = v9;
  sub_1BC7716E4();
  sub_1BC771858();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC817824();
  sub_1BC7718F8();
  v11 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  swift_release();
  return v11;
}

void sub_1BC770094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC7700AC(a1, a2, a3, (SEL *)&selRef_removePendingNotificationRequestsWithIdentifiers_);
}

void sub_1BC7700A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC7700AC(a1, a2, a3, (SEL *)&selRef_removeDeliveredNotificationsWithIdentifiers_);
}

void sub_1BC7700AC(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  void *v6;
  id v7;

  v6 = *(void **)(v4 + 16);
  v7 = (id)sub_1BC817C50();
  objc_msgSend(v6, *a4, v7);

}

uint64_t sub_1BC7700F8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC76C0E8(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC770120(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  __int128 *v12;
  uint64_t v13;
  __int128 v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[24];
  __int128 v33;
  uint64_t v34;

  sub_1BC7722B0();
  v6 = v5;
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v24 = v2;
    v34 = MEMORY[0x1E0DEE9D8];
    v28 = v7;
    sub_1BC81837C();
    v12 = (__int128 *)(a1 + 32);
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v27 = v13;
    v26 = xmmword_1BC81A0F0;
    v25 = MEMORY[0x1E0DEE9C0] + 8;
    do
    {
      v14 = v12[2];
      v31 = v12[1];
      *(_OWORD *)v32 = v14;
      *(_QWORD *)&v32[16] = *((_QWORD *)v12 + 6);
      v30 = *v12;
      v33 = *(_OWORD *)&v32[8];
      v15 = *(void **)(a2 + 32);
      v16 = swift_allocObject();
      v17 = *(_OWORD *)&v32[8];
      *(_OWORD *)(v16 + 16) = v26;
      *(_OWORD *)(v16 + 32) = v17;
      sub_1BC6ED3E8((id *)&v30);
      v18 = v15;
      sub_1BC772410((uint64_t)&v33);
      v19 = a2;
      v20 = sub_1BC817ECC();

      swift_bridgeObjectRelease();
      v29 = v20;
      v21 = swift_allocObject();
      v22 = v31;
      *(_OWORD *)(v21 + 16) = v30;
      *(_OWORD *)(v21 + 32) = v22;
      *(_OWORD *)(v21 + 48) = *(_OWORD *)v32;
      *(_QWORD *)(v21 + 64) = *(_QWORD *)&v32[16];
      v23 = swift_allocObject();
      *(_QWORD *)(v23 + 16) = sub_1BC772AD8;
      *(_QWORD *)(v23 + 24) = v21;
      sub_1BC6ED3E8((id *)&v30);
      sub_1BC772334(0, (unint64_t *)&qword_1ED6B8368, v25, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
      sub_1BC7723AC();
      sub_1BC81786C();
      swift_release();
      swift_release();
      sub_1BC6E1788(&qword_1EF45BB30, (uint64_t (*)(uint64_t))sub_1BC7722B0, MEMORY[0x1E0C95950]);
      sub_1BC817854();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v6);
      sub_1BC732138((void **)&v30);
      sub_1BC818358();
      sub_1BC818388();
      a2 = v19;
      sub_1BC818394();
      sub_1BC818364();
      v12 = (__int128 *)((char *)v12 + 56);
      --v10;
    }
    while (v10);
    return v34;
  }
  return result;
}

uint64_t sub_1BC7703DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  __int128 *v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  sub_1BC772480();
  v4 = v3;
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v18[1] = v1;
    v19 = v5;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BC81837C();
    v10 = (__int128 *)(a1 + 32);
    v11 = MEMORY[0x1E0DEE9C0] + 8;
    do
    {
      v12 = v10[2];
      v22 = v10[1];
      v23 = v12;
      v21 = *v10;
      v24 = *((_QWORD *)v10 + 6);
      v13 = v24;
      v14 = *((_QWORD *)&v12 + 1);
      sub_1BC6ED3E8((id *)&v21);
      v20 = sub_1BC75DF30(v14, v13);
      v15 = swift_allocObject();
      v16 = v22;
      *(_OWORD *)(v15 + 16) = v21;
      *(_OWORD *)(v15 + 32) = v16;
      *(_OWORD *)(v15 + 48) = v23;
      *(_QWORD *)(v15 + 64) = v24;
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = sub_1BC7725AC;
      *(_QWORD *)(v17 + 24) = v15;
      sub_1BC6ED3E8((id *)&v21);
      sub_1BC772334(0, &qword_1ED6B82B0, v11, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
      sub_1BC772524(&qword_1ED6B82A8, &qword_1ED6B82B0, v11);
      sub_1BC81786C();
      swift_release();
      swift_release();
      sub_1BC6E1788(&qword_1EF45BB38, (uint64_t (*)(uint64_t))sub_1BC772480, MEMORY[0x1E0C95950]);
      sub_1BC817854();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v4);
      sub_1BC732138((void **)&v21);
      sub_1BC818358();
      sub_1BC818388();
      sub_1BC818394();
      sub_1BC818364();
      v10 = (__int128 *)((char *)v10 + 56);
      --v8;
    }
    while (v8);
    return v25;
  }
  return result;
}

void sub_1BC77062C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t i;
  int64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t j;
  id v12;
  id v13;
  id v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v18 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  i = 0;
  if (v6)
    goto LABEL_24;
LABEL_6:
  v8 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v8 < v18)
    {
      v9 = *(_QWORD *)(v17 + 8 * v8);
      ++i;
      if (v9)
        goto LABEL_20;
      i = v8 + 1;
      if (v8 + 1 < v18)
      {
        v9 = *(_QWORD *)(v17 + 8 * i);
        if (v9)
          goto LABEL_20;
        i = v8 + 2;
        if (v8 + 2 < v18)
        {
          v9 = *(_QWORD *)(v17 + 8 * i);
          if (v9)
            goto LABEL_20;
          i = v8 + 3;
          if (v8 + 3 < v18)
          {
            v9 = *(_QWORD *)(v17 + 8 * i);
            if (v9)
              goto LABEL_20;
            v10 = v8 + 4;
            if (v10 < v18)
            {
              v9 = *(_QWORD *)(v17 + 8 * v10);
              for (i = v10; !v9; ++v10)
              {
                i = v10 + 1;
                if (__OFADD__(v10, 1))
                  goto LABEL_27;
                if (i >= v18)
                  goto LABEL_25;
                v9 = *(_QWORD *)(v17 + 8 * i);
              }
LABEL_20:
              v6 = (v9 - 1) & v9;
              for (j = __clz(__rbit64(v9)) + (i << 6); ; j = v16 | (i << 6))
              {
                v12 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * j);
                v13 = objc_msgSend(v12, sel_profileIdentifier);
                sub_1BC7320AC(a2, &v19);
                sub_1BC7320AC(&v19, &v20);
                if (v20)
                {
                  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
                  v14 = v13;
                  sub_1BC7320E8(&v19);
                  v15 = sub_1BC8180D0();
                  sub_1BC732110(&v19);

                  if ((v15 & 1) != 0)
                    break;

                  if (!v6)
                    goto LABEL_6;
                }
                else
                {

                  if (!v6)
                    goto LABEL_6;
                }
LABEL_24:
                v16 = __clz(__rbit64(v6));
                v6 &= v6 - 1;
              }
            }
          }
        }
      }
    }
LABEL_25:
    swift_release();
    return;
  }
  __break(1u);
LABEL_27:
  __break(1u);
}

uint64_t sub_1BC770880(unint64_t a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  BOOL v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v3 = a1;
  v25 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_33;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v19 = v3;
      v5 = 0;
      v23 = v3 & 0xFFFFFFFFFFFFFF8;
      v24 = v3 & 0xC000000000000001;
      v21 = v4;
      v22 = (_QWORD *)(v3 + 32);
      v20 = a2 + 7;
      while (1)
      {
        if (v24)
        {
          v6 = (id)MEMORY[0x1BCCF4FB0](v5, v19);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v23 + 16))
          {
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          v6 = (id)v22[v5];
        }
        v7 = v6;
        if (__OFADD__(v5++, 1))
          goto LABEL_31;
        v9 = objc_msgSend(v6, sel_identifier);
        v10 = sub_1BC817AE8();
        v3 = (unint64_t)v11;

        v12 = (_QWORD *)a2[2];
        if (v12)
          break;

        swift_bridgeObjectRelease();
LABEL_5:
        if (v5 == v4)
          return v25;
      }
      v13 = a2;
      v14 = a2[4] == v10 && a2[5] == v3;
      if (v14 || (sub_1BC818694() & 1) != 0)
        break;
      if (v12 == (_QWORD *)1)
      {
LABEL_27:

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      v15 = v20;
      v16 = 1;
      while (1)
      {
        a2 = (_QWORD *)(v16 + 1);
        if (__OFADD__(v16, 1))
          break;
        v17 = *(v15 - 1) == v10 && *v15 == v3;
        if (v17 || (sub_1BC818694() & 1) != 0)
          goto LABEL_16;
        v15 += 2;
        ++v16;
        if (a2 == v12)
          goto LABEL_27;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      v4 = sub_1BC8184E4();
      if (!v4)
        return MEMORY[0x1E0DEE9D8];
    }
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1BC818358();
    sub_1BC818388();
    sub_1BC818394();
    v3 = (unint64_t)&v25;
    sub_1BC818364();
LABEL_17:
    v4 = v21;
    a2 = v13;
    goto LABEL_5;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC770AA4(unint64_t a1, _QWORD *a2)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  id v9;
  id v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  BOOL v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;

  v3 = a1;
  v26 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_33;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v20 = v3;
      v5 = 0;
      v24 = v3 & 0xFFFFFFFFFFFFFF8;
      v25 = v3 & 0xC000000000000001;
      v22 = v4;
      v23 = (_QWORD *)(v3 + 32);
      v21 = a2 + 7;
      while (1)
      {
        if (v25)
        {
          v6 = (id)MEMORY[0x1BCCF4FB0](v5, v20);
        }
        else
        {
          if (v5 >= *(_QWORD *)(v24 + 16))
          {
            __break(1u);
LABEL_31:
            __break(1u);
            goto LABEL_32;
          }
          v6 = (id)v23[v5];
        }
        v7 = v6;
        if (__OFADD__(v5++, 1))
          goto LABEL_31;
        v9 = objc_msgSend(v6, sel_request);
        v10 = objc_msgSend(v9, sel_identifier);

        v11 = sub_1BC817AE8();
        v3 = (unint64_t)v12;

        v13 = (_QWORD *)a2[2];
        if (v13)
          break;

        swift_bridgeObjectRelease();
LABEL_5:
        if (v5 == v4)
          return v26;
      }
      v14 = a2;
      v15 = a2[4] == v11 && a2[5] == v3;
      if (v15 || (sub_1BC818694() & 1) != 0)
        break;
      if (v13 == (_QWORD *)1)
      {
LABEL_27:

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      v16 = v21;
      v17 = 1;
      while (1)
      {
        a2 = (_QWORD *)(v17 + 1);
        if (__OFADD__(v17, 1))
          break;
        v18 = *(v16 - 1) == v11 && *v16 == v3;
        if (v18 || (sub_1BC818694() & 1) != 0)
          goto LABEL_16;
        v16 += 2;
        ++v17;
        if (a2 == v13)
          goto LABEL_27;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      v4 = sub_1BC8184E4();
      if (!v4)
        return MEMORY[0x1E0DEE9D8];
    }
LABEL_16:
    swift_bridgeObjectRelease();
    sub_1BC818358();
    sub_1BC818388();
    sub_1BC818394();
    v3 = (unint64_t)&v26;
    sub_1BC818364();
LABEL_17:
    v4 = v22;
    a2 = v14;
    goto LABEL_5;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC770CE8(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = *(_QWORD *)(result + 16);
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
  v4 = 0;
  v5 = MEMORY[0x1E0DEE9D8];
  v28 = result + 32;
  v26 = *(_QWORD *)(result + 16);
  while (1)
  {
    if (v4 <= v2)
      v6 = v2;
    else
      v6 = v4;
    v29 = v5;
    v27 = v6;
LABEL_7:
    if (v4 == v6)
    {
      __break(1u);
      return result;
    }
    v7 = v28 + 56 * v4;
    v8 = *(_OWORD *)v7;
    v9 = *(_QWORD *)(v7 + 16);
    v10 = *(_QWORD *)(v7 + 32);
    v11 = *(_QWORD *)(v7 + 48);
    ++v4;
    v12 = *(_QWORD *)(a2 + 16);
    v32 = *(_OWORD *)v7;
    v13 = *(_QWORD *)v7;
    v30 = *(_QWORD *)(v7 + 40);
    v31 = *(_QWORD *)(v7 + 24);
    if (v12)
      break;
    v25 = (id)v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_20:
    result = swift_isUniquelyReferenced_nonNull_native();
    v21 = v11;
    if ((result & 1) == 0)
      result = sub_1BC6E8CF8(0, *(_QWORD *)(v5 + 16) + 1, 1);
    v23 = *(_QWORD *)(v5 + 16);
    v22 = *(_QWORD *)(v5 + 24);
    if (v23 >= v22 >> 1)
      result = sub_1BC6E8CF8(v22 > 1, v23 + 1, 1);
    *(_QWORD *)(v5 + 16) = v23 + 1;
    v24 = v5 + 56 * v23;
    *(_OWORD *)(v24 + 32) = v32;
    *(_QWORD *)(v24 + 48) = v9;
    *(_QWORD *)(v24 + 56) = v31;
    *(_QWORD *)(v24 + 64) = v10;
    *(_QWORD *)(v24 + 72) = v30;
    *(_QWORD *)(v24 + 80) = v21;
    if (v4 == v2)
      return v5;
  }
  v14 = (id)v8;
  v35 = v9;
  swift_bridgeObjectRetain();
  v34 = v10;
  swift_bridgeObjectRetain();
  v33 = v11;
  swift_bridgeObjectRetain();
  v15 = v14;
  swift_bridgeObjectRetain();
  v16 = 0;
  while (1)
  {
    v17 = *(void **)(a2 + 8 * v16 + 32);
    if (!v17)
      break;
    if (v13)
    {
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
      v18 = v15;
      v19 = v17;
      v20 = sub_1BC8180D0();

      if ((v20 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v15 = v18;
        goto LABEL_17;
      }
    }
LABEL_11:
    if (v12 == ++v16)
    {

      swift_bridgeObjectRelease();
      v2 = v26;
      v5 = v29;
      v9 = v35;
      v11 = v33;
      v10 = v34;
      goto LABEL_20;
    }
  }
  if (v13)
    goto LABEL_11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_17:
  v2 = v26;
  v5 = v29;

  result = swift_bridgeObjectRelease();
  v6 = v27;
  if (v4 != v26)
    goto LABEL_7;
  return v5;
}

_QWORD *_s14HealthPlatform0A22AppNotificationManagerC18notificationCenterACSo06UNUserdG0C_tcfC_0(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  _DWORD *v13;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  sub_1BC816C60();
  swift_allocObject();
  v3 = sub_1BC816C54();
  sub_1BC816C3C();
  swift_allocObject();
  v4 = sub_1BC816C30();
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  v7 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  v8 = v2;
  v9 = (void *)sub_1BC817AC4();
  v10 = objc_msgSend(v7, sel_initWithCategory_domainName_healthStore_, 1, v9, v8);

  type metadata accessor for HealthAppNotificationManager();
  v11 = (_QWORD *)swift_allocObject();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v12 + 16) = v13;
  *v13 = 0;
  v11[8] = v12;
  v11[9] = sub_1BC710BE0(MEMORY[0x1E0DEE9D8]);
  v11[2] = a1;
  v11[3] = v3;
  v11[4] = v4;
  v11[5] = v5;
  v11[6] = v8;
  v11[7] = v10;
  return v11;
}

uint64_t sub_1BC77110C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC771138(char a1, void *a2)
{
  uint64_t v2;

  sub_1BC76C6E8(a1, a2, *(void (**)(_QWORD, id))(v2 + 16));
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t sub_1BC77114C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC76CB24(a1, a2, v2);
}

uint64_t sub_1BC771154()
{
  uint64_t *v0;

  return sub_1BC76D00C(v0[4], v0[5], v0[2], v0[3]);
}

void sub_1BC771160()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B82A0)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6B85A0);
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    v0 = sub_1BC81771C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B82A0);
  }
}

uint64_t sub_1BC7711EC()
{
  return sub_1BC6E1788(&qword_1ED6B8298, (uint64_t (*)(uint64_t))sub_1BC771160, MEMORY[0x1E0C95D90]);
}

void sub_1BC771208(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, _QWORD, _QWORD))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC6ED7C0(255, a3);
    v9 = a5(a1, v8, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEDD18]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC771278()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8070)
  {
    sub_1BC771208(255, &qword_1ED6B8300, (unint64_t *)&qword_1ED6B85A0, 0x1E0CEC740, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    sub_1BC771330();
    v0 = sub_1BC8175F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8070);
  }
}

unint64_t sub_1BC771330()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B82F8;
  if (!qword_1ED6B82F8)
  {
    sub_1BC771208(255, &qword_1ED6B8300, (unint64_t *)&qword_1ED6B85A0, 0x1E0CEC740, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD))MEMORY[0x1E0C960C0]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C960D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B82F8);
  }
  return result;
}

uint64_t sub_1BC771398()
{
  uint64_t v0;

  return sub_1BC76D6BC(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1BC7713A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BAB8;
  if (!qword_1EF45BAB8)
  {
    sub_1BC771408(255, &qword_1ED6B81B8, (uint64_t (*)(uint64_t))sub_1BC771160, sub_1BC7711EC, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95C60]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95C80], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BAB8);
  }
  return result;
}

void sub_1BC771408(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    v9 = a3(255);
    v10 = a4();
    v11 = a5(a1, v9, v10);
    if (!v12)
      atomic_store(v11, a2);
  }
}

void sub_1BC771478()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45BAC8)
  {
    sub_1BC771530(255, &qword_1EF45BAD0, &qword_1EF45BAD8, (unint64_t *)&qword_1ED6B85A0);
    sub_1BC77179C(255, &qword_1EF45BAD8, (unint64_t *)&qword_1ED6B85A0);
    sub_1BC771598();
    v0 = sub_1BC817614();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45BAC8);
  }
}

void sub_1BC771530(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC77179C(255, a3, a4);
    v5 = sub_1BC817800();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BC771598()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BAE0;
  if (!qword_1EF45BAE0)
  {
    sub_1BC771530(255, &qword_1EF45BAD0, &qword_1EF45BAD8, (unint64_t *)&qword_1ED6B85A0);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BAE0);
  }
  return result;
}

uint64_t sub_1BC771600()
{
  return sub_1BC6E1788(&qword_1EF45BAE8, (uint64_t (*)(uint64_t))sub_1BC771478, MEMORY[0x1E0C95950]);
}

void sub_1BC77161C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC76DB40(a1, a2, v2, (uint64_t)sub_1BC76D99C, (uint64_t)&block_descriptor_93_0, (SEL *)&selRef_getPendingNotificationRequestsWithCompletionHandler_);
}

uint64_t sub_1BC77164C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC76DC58(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(uint64_t, uint64_t))sub_1BC770880);
}

uint64_t sub_1BC771670()
{
  uint64_t *v0;

  return sub_1BC76DCD8(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_1BC77167C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BAF0;
  if (!qword_1EF45BAF0)
  {
    sub_1BC771408(255, &qword_1EF45BAC0, (uint64_t (*)(uint64_t))sub_1BC771478, sub_1BC771600, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96148], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BAF0);
  }
  return result;
}

void sub_1BC7716E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45BB00)
  {
    sub_1BC771530(255, &qword_1EF45BB08, &qword_1EF45BB10, &qword_1EF45B870);
    sub_1BC77179C(255, &qword_1EF45BB10, &qword_1EF45B870);
    sub_1BC7717F0();
    v0 = sub_1BC817614();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45BB00);
  }
}

void sub_1BC77179C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BC6ED7C0(255, a3);
    v4 = sub_1BC817D04();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC7717F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BB18;
  if (!qword_1EF45BB18)
  {
    sub_1BC771530(255, &qword_1EF45BB08, &qword_1EF45BB10, &qword_1EF45B870);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BB18);
  }
  return result;
}

uint64_t sub_1BC771858()
{
  return sub_1BC6E1788(&qword_1EF45BB20, (uint64_t (*)(uint64_t))sub_1BC7716E4, MEMORY[0x1E0C95950]);
}

void sub_1BC771874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC76DB40(a1, a2, v2, (uint64_t)sub_1BC76DBD4, (uint64_t)&block_descriptor_78, (SEL *)&selRef_getDeliveredNotificationsWithCompletionHandler_);
}

uint64_t sub_1BC7718A4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC7718C8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC76DC58(a1, *(_QWORD *)(v1 + 16), (uint64_t (*)(uint64_t, uint64_t))sub_1BC770AA4);
}

uint64_t sub_1BC7718EC()
{
  uint64_t *v0;

  return sub_1BC76DE28(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_1BC7718F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BB28;
  if (!qword_1EF45BB28)
  {
    sub_1BC771408(255, &qword_1EF45BAF8, (uint64_t (*)(uint64_t))sub_1BC7716E4, sub_1BC771858, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C96138]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96148], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BB28);
  }
  return result;
}

void sub_1BC771960(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  if (!*a2)
  {
    v9 = a3(255);
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11 = v10;
    v12 = a4();
    v13 = a5(a1, v9, v11, v12);
    if (!v14)
      atomic_store(v13, a2);
  }
}

void sub_1BC7719F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8330)
  {
    sub_1BC73C9B4();
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    v0 = sub_1BC817800();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8330);
  }
}

uint64_t sub_1BC771A74()
{
  return sub_1BC6E1788(&qword_1ED6B8328, (uint64_t (*)(uint64_t))sub_1BC7719F8, MEMORY[0x1E0C96108]);
}

void sub_1BC771A90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8160)
  {
    sub_1BC771AFC();
    sub_1BC771B90();
    v0 = sub_1BC817674();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8160);
  }
}

void sub_1BC771AFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8250)
  {
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    v0 = sub_1BC81771C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8250);
  }
}

uint64_t sub_1BC771B90()
{
  return sub_1BC6E1788(&qword_1ED6B8248, (uint64_t (*)(uint64_t))sub_1BC771AFC, MEMORY[0x1E0C95D90]);
}

uint64_t sub_1BC771BAC(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;
  id v5;

  v2 = *(void **)(a1 + 24);
  v3 = *(void **)(a1 + 32);
  swift_retain();
  swift_retain();
  swift_retain();
  v4 = v2;
  v5 = v3;
  return a1;
}

uint64_t sub_1BC771C08@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC7555EC(a1, a2);
}

unint64_t sub_1BC771C20()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B80E8;
  if (!qword_1ED6B80E8)
  {
    sub_1BC771960(255, &qword_1ED6B80F0, (uint64_t (*)(uint64_t))sub_1BC7719F8, sub_1BC771A74, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95B38]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B48], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B80E8);
  }
  return result;
}

uint64_t sub_1BC771C88(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);

  swift_release();
  swift_release();
  swift_release();
  return a1;
}

uint64_t sub_1BC771CE4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC76E370(a1, a2);
}

uint64_t objectdestroy_17Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BC771D34()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC771D60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1BC76E74C(*(_QWORD *)(v1 + 16), a1);
}

uint64_t type metadata accessor for HealthAppNotificationManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for HealthAppNotificationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthAppNotificationManager.__allocating_init(notificationCenter:notificationManagerStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.requestAuthorization(addCriticalAlerts:completionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.getNotificationSettings()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.getNotificationSettings(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.scheduleUserNotification(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.scheduleCoalescingNotification<A>(for:environment:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of HealthAppNotificationManager.scheduleAllCoalescedNotifications()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.getPendingNotifications(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.getDeliveredNotifications(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.removePendingNotifications(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.removeDeliveredNotifications(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.removeAllPluginFeedItemNotifications()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of HealthAppNotificationManager.removePluginFeedItemNotificationsWithoutProfiles(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

void sub_1BC771E3C(uint64_t a1)
{
  sub_1BC771408(a1, &qword_1ED6B8120, (uint64_t (*)(uint64_t))sub_1BC771E60, sub_1BC771E84, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95B50]);
}

void sub_1BC771E60(uint64_t a1)
{
  sub_1BC771408(a1, &qword_1ED6B81B0, (uint64_t (*)(uint64_t))sub_1BC771AFC, sub_1BC771B90, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95C60]);
}

uint64_t sub_1BC771E84()
{
  return sub_1BC6E1788(&qword_1ED6B81A8, (uint64_t (*)(uint64_t))sub_1BC771E60, MEMORY[0x1E0C95C80]);
}

uint64_t sub_1BC771EA0()
{
  return sub_1BC6E1788(&qword_1ED6B8118, (uint64_t (*)(uint64_t))sub_1BC771E3C, MEMORY[0x1E0C95B60]);
}

void sub_1BC771EBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B82C8)
  {
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6B83E0, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC8177D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B82C8);
  }
}

void sub_1BC771F28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8140)
  {
    sub_1BC772334(255, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC772004();
    sub_1BC772524(&qword_1ED6B8210, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
    sub_1BC6E1788(&qword_1ED6B8058, (uint64_t (*)(uint64_t))sub_1BC772004, MEMORY[0x1E0C95850]);
    v0 = sub_1BC817674();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8140);
  }
}

void sub_1BC772004()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8060)
  {
    sub_1BC771EBC();
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    sub_1BC6E1788(&qword_1ED6B82C0, (uint64_t (*)(uint64_t))sub_1BC771EBC, MEMORY[0x1E0C960B0]);
    v0 = sub_1BC8175F0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8060);
  }
}

uint64_t sub_1BC7720B8()
{
  return sub_1BC6E1788(&qword_1ED6B8138, (uint64_t (*)(uint64_t))sub_1BC771F28, MEMORY[0x1E0C95B78]);
}

unint64_t sub_1BC7720DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8108;
  if (!qword_1ED6B8108)
  {
    sub_1BC771408(255, &qword_1ED6B8110, (uint64_t (*)(uint64_t))sub_1BC771F28, sub_1BC7720B8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95B50]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8108);
  }
  return result;
}

unint64_t sub_1BC772144()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B80B8;
  if (!qword_1ED6B80B8)
  {
    sub_1BC771960(255, (unint64_t *)&unk_1ED6B80C0, (uint64_t (*)(uint64_t))sub_1BC771E3C, sub_1BC771EA0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))MEMORY[0x1E0C95940]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B80B8);
  }
  return result;
}

void sub_1BC7721AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B81A0)
  {
    sub_1BC772334(255, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC772524(&qword_1ED6B8210, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier);
    v0 = sub_1BC817698();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B81A0);
  }
}

void sub_1BC772244()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8408)
  {
    sub_1BC772334(255, (unint64_t *)&qword_1ED6B8218, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8408);
  }
}

void sub_1BC7722B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B80B0)
  {
    sub_1BC772334(255, (unint64_t *)&qword_1ED6B8368, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC7723AC();
    v0 = sub_1BC817614();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B80B0);
  }
}

void sub_1BC772334(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    v9 = a4(a1, a3, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC7723AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8360;
  if (!qword_1ED6B8360)
  {
    sub_1BC772334(255, (unint64_t *)&qword_1ED6B8368, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8360);
  }
  return result;
}

uint64_t sub_1BC772410(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC77243C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC772460()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1BC772480()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B8098)
  {
    v0 = MEMORY[0x1E0DEE9C0] + 8;
    sub_1BC772334(255, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC772524(&qword_1ED6B82A8, &qword_1ED6B82B0, v0);
    v1 = sub_1BC817614();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B8098);
  }
}

uint64_t sub_1BC772524(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC772334(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95D90], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t objectdestroy_30Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id *sub_1BC7725AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v1 + 64);
  return sub_1BC6ED3E8((id *)(v1 + 16));
}

uint64_t objectdestroy_8Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroy_27Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC772640@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC76FA10(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), a2);
}

uint64_t sub_1BC772650(uint64_t *a1, __int128 *a2)
{
  __int128 v3;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  id v21;
  char v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  id v30;
  char isUniquelyReferenced_nonNull_native;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v3 = a2[1];
  v32 = *a2;
  v33 = v3;
  v34 = a2[2];
  v35 = *((_QWORD *)a2 + 6);
  v4 = *a1;
  swift_bridgeObjectRetain();
  sub_1BC6ED3E8((id *)&v32);
  sub_1BC77062C(v4, &v32);
  v6 = v5;
  sub_1BC732138((void **)&v32);
  result = swift_bridgeObjectRelease();
  if (v6)
  {
    v8 = *a1;
    if (*(_QWORD *)(*a1 + 16))
    {
      v9 = v6;
      v10 = sub_1BC7068E0((uint64_t)v9);
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD **)(*(_QWORD *)(v8 + 56) + 8 * v10);
        swift_bridgeObjectRetain();
      }
      else
      {
        v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      }

    }
    else
    {
      v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    sub_1BC6ED3E8((id *)&v32);
    swift_bridgeObjectRetain();
    v23 = v12;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_1BC725C5C(0, v12[2] + 1, 1, v12);
    v25 = v23[2];
    v24 = v23[3];
    if (v25 >= v24 >> 1)
      v23 = sub_1BC725C5C((_QWORD *)(v24 > 1), v25 + 1, 1, v23);
    v23[2] = v25 + 1;
    v26 = &v23[7 * v25];
    v27 = v32;
    v28 = v33;
    v29 = v34;
    v26[10] = v35;
    *((_OWORD *)v26 + 3) = v28;
    *((_OWORD *)v26 + 4) = v29;
    *((_OWORD *)v26 + 2) = v27;
    swift_bridgeObjectRelease();
    v30 = v6;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v36 = *a1;
    *a1 = 0x8000000000000000;
    sub_1BC71FFC8((uint64_t)v23, v30, isUniquelyReferenced_nonNull_native);
    *a1 = v36;

  }
  else
  {
    v13 = (void *)v32;
    if (!(_QWORD)v32)
      return result;
    v14 = objc_allocWithZone(MEMORY[0x1E0CB6780]);
    v15 = v13;
    v16 = objc_msgSend(v14, sel_init);
    objc_msgSend(v16, sel_setProfileIdentifier_, v15);
    objc_msgSend(v16, sel_resume);

    sub_1BC6E1E98(0, &qword_1EF45AF78, (uint64_t)&type metadata for PluginFeedItem.NotificationIdentifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = swift_allocObject();
    v18 = v32;
    v19 = v33;
    *(_OWORD *)(v17 + 16) = xmmword_1BC81A0F0;
    *(_OWORD *)(v17 + 32) = v18;
    v20 = v34;
    *(_OWORD *)(v17 + 48) = v19;
    *(_OWORD *)(v17 + 64) = v20;
    *(_QWORD *)(v17 + 80) = v35;
    sub_1BC6ED3E8((id *)&v32);
    v21 = v16;
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v36 = *a1;
    *a1 = 0x8000000000000000;
    sub_1BC71FFC8(v17, v21, v22);
    *a1 = v36;

  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC772918(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC76E00C(a1, a2, *(void (**)(uint64_t (*)(uint64_t), uint64_t))(v2 + 16));
}

uint64_t sub_1BC772920@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BC772950(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC76DF78(a1, a2, *(void (**)(uint64_t (*)(uint64_t), uint64_t))(v2 + 16));
}

void sub_1BC772958()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF45BB40)
  {
    sub_1BC6FD528(255, (unint64_t *)&qword_1EF45B1E0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF45BB40);
  }
}

void sub_1BC7729D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B1D8)
  {
    sub_1BC6FD528(255, (unint64_t *)&qword_1EF45B1E0);
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B1D8);
  }
}

uint64_t sub_1BC772A34(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 16))(a1, 0);
}

uint64_t sub_1BC772AB4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BC771C08(a1, a2);
}

id EncodedFeatureTag.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id EncodedFeatureTag.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for EncodedFeatureTag();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for EncodedFeatureTag()
{
  return objc_opt_self();
}

id EncodedFeatureTag.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EncodedFeatureTag();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t FileMonitorPublisher.init(url:event:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_DWORD *)a3 = -1;
  *(_QWORD *)(a3 + 8) = 0;
  v6 = type metadata accessor for FileMonitorPublisher();
  v7 = a3 + *(int *)(v6 + 24);
  v8 = sub_1BC816E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  v9 = a3 + *(int *)(v6 + 28);
  v10 = sub_1BC818004();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9, a2, v10);
}

uint64_t type metadata accessor for FileMonitorPublisher()
{
  uint64_t result;

  result = qword_1ED6BA3D8;
  if (!qword_1ED6BA3D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FileMonitorPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD v21[3];
  _QWORD v22[5];

  v21[1] = a2;
  v21[2] = a3;
  v7 = sub_1BC818004();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC816E40();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FileMonitorPublisher.Inner(0, a2, a3, v15);
  v17 = type metadata accessor for FileMonitorPublisher();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v3 + *(int *)(v17 + 24), v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v3 + *(int *)(v17 + 28), v7);
  v19 = sub_1BC7743F0(a1, (uint64_t)v14, (uint64_t)v10, v18);
  v22[3] = v16;
  v22[4] = MEMORY[0x1BCCF5AB4](&unk_1BC81D528, v16);
  v22[0] = v19;
  sub_1BC8176C8();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
}

uint64_t type metadata accessor for FileMonitorPublisher.Inner(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FileMonitorPublisher.Inner);
}

uint64_t sub_1BC772E80@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1BC6FC700((uint64_t)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x60), a1);
}

uint64_t sub_1BC772EA4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68);
  swift_beginAccess();
  v4 = sub_1BC81717C();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC772F24(uint64_t a1)
{
  _QWORD *v1;
  char *v3;
  uint64_t v4;

  v3 = (char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x68);
  swift_beginAccess();
  v4 = sub_1BC81717C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1BC772FAC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC773000()
{
  _QWORD *v0;

  return *(unsigned int *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88));
}

uint64_t sub_1BC773020(uint64_t result)
{
  _QWORD *v1;

  *(_DWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88)) = result;
  return result;
}

uint64_t sub_1BC773040(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x90)) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1BC773068()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  char *v16;
  void *v17;
  id v18;
  int v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  void *v42;
  uint64_t v43;
  char *v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t aBlock;
  uint64_t v51;
  uint64_t (*v52)(uint64_t);
  void *v53;
  void *v54;
  _QWORD *v55;

  v1 = v0;
  v2 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *v0);
  v3 = sub_1BC817950();
  v45 = *(uint8_t **)(v3 - 8);
  v46 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC817974();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2[11];
  v47 = v2[10];
  v48 = v10;
  v11 = sub_1BC817164();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0D2BF28], v11);
  v12 = sub_1BC8187D8();
  v13 = *(_QWORD *)(v12 - 8);
  result = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v44 - v15;
  if (!*(_QWORD *)((char *)v0 + v2[18]) && *(_DWORD *)((char *)v0 + v2[17]) == -1)
  {
    v44 = (char *)v0 + v2[14];
    v17 = (void *)sub_1BC816DBC();
    objc_msgSend(v17, sel_fileSystemRepresentation);
    v18 = v17;
    v19 = sub_1BC81759C();
    v20 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    *(_DWORD *)((char *)v1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + 0x88)) = v19;
    if (*(_DWORD *)((char *)v1 + *(_QWORD *)((*v20 & *v1) + 0x88)) == -1)
    {
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v29 = sub_1BC817590();
      __swift_project_value_buffer(v29, (uint64_t)qword_1ED6BB5D0);
      v30 = v1;
      v31 = sub_1BC81756C();
      v32 = sub_1BC817E84();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        v46 = swift_slowAlloc();
        aBlock = v46;
        *(_DWORD *)v33 = 136380675;
        v45 = v33 + 4;
        sub_1BC816E40();
        sub_1BC6E1788((unint64_t *)&qword_1EF45BB50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v34 = sub_1BC818670();
        v49 = sub_1BC6E14D8(v34, v35, &aBlock);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v31, v32, "Failed to open file descriptor: %{private}s", v33, 0xCu);
        v36 = v46;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v36, -1, -1);
        MEMORY[0x1BCCF5BA4](v33, -1, -1);

      }
      else
      {

      }
      LOBYTE(aBlock) = 1;
      v43 = type metadata accessor for FileMonitorPublisher.Inner(0, v47, v48, v37);
      MEMORY[0x1BCCF5AB4](&unk_1BC81D4B0, v43);
      sub_1BC8170E0();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    }
    else
    {
      v21 = v20;
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E8);
      *(_QWORD *)((char *)v1 + *(_QWORD *)((*v21 & *v1) + 0x90)) = sub_1BC81801C();
      result = swift_unknownObjectRelease();
      v22 = *v21 & *v1;
      v23 = MEMORY[0x1E0C809B0];
      if (*(_QWORD *)((char *)v1 + *(_QWORD *)(v22 + 0x90)))
      {
        swift_getObjectType();
        v24 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v25 = (_QWORD *)swift_allocObject();
        v26 = v48;
        v25[2] = v47;
        v25[3] = v26;
        v25[4] = v24;
        v54 = sub_1BC774B9C;
        v55 = v25;
        aBlock = v23;
        v51 = 1107296256;
        v52 = sub_1BC719640;
        v53 = &block_descriptor_14;
        v27 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_retain();
        sub_1BC817968();
        sub_1BC773AC0();
        sub_1BC818028();
        _Block_release(v27);
        swift_unknownObjectRelease();
        (*((void (**)(char *, uint64_t))v45 + 1))(v5, v46);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        swift_release();
        v28 = (_QWORD *)MEMORY[0x1E0DEEDD8];
        result = swift_release();
        v22 = *v28 & *v1;
      }
      else
      {
        v28 = v21;
      }
      if (*(_QWORD *)((char *)v1 + *(_QWORD *)(v22 + 144)))
      {
        swift_getObjectType();
        v38 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v39 = (_QWORD *)swift_allocObject();
        v40 = v48;
        v39[2] = v47;
        v39[3] = v40;
        v39[4] = v38;
        v54 = sub_1BC774BB0;
        v55 = v39;
        aBlock = MEMORY[0x1E0C809B0];
        v51 = 1107296256;
        v52 = sub_1BC719640;
        v53 = &block_descriptor_10;
        v41 = v28;
        v42 = _Block_copy(&aBlock);
        swift_unknownObjectRetain();
        swift_retain();
        sub_1BC817968();
        sub_1BC773AC0();
        sub_1BC818034();
        _Block_release(v42);
        swift_unknownObjectRelease();
        (*((void (**)(char *, uint64_t))v45 + 1))(v5, v46);
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        swift_release();
        result = swift_release();
        v22 = *v41 & *v1;
      }
      if (*(_QWORD *)((char *)v1 + *(_QWORD *)(v22 + 144)))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_1BC818058();
        return swift_unknownObjectRelease();
      }
    }
  }
  return result;
}

void sub_1BC773718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1BC817164();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0D2BF28], v6);
  v7 = sub_1BC8187D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - v9;
  v11 = sub_1BC818004();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v15 = (_QWORD *)MEMORY[0x1BCCF5C70](a1 + 16);
  if (v15)
  {
    v16 = v15;
    v19 = v7;
    if (*(_QWORD *)((char *)v15 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v15) + 0x90)))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_1BC818040();
      sub_1BC817FF8();
      v18 = type metadata accessor for FileMonitorPublisher.Inner(0, a2, a3, v17);
      MEMORY[0x1BCCF5AB4](&unk_1BC81D4B0, v18);
      sub_1BC8170D4();
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v19);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    }
    else
    {

    }
  }
}

_QWORD *sub_1BC7738E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *result;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v6 = sub_1BC817164();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0D2BF28], v6);
  v7 = sub_1BC8187D8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - v9;
  swift_beginAccess();
  result = (_QWORD *)MEMORY[0x1BCCF5C70](a1 + 16);
  if (result)
  {
    v12 = result;
    v13 = *result;
    v19 = a3;
    v14 = (_QWORD *)MEMORY[0x1E0DEEDD8];
    v15 = (_QWORD *)((char *)result + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & v13) + 0x60));
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    sub_1BC817068();
    close(*(_DWORD *)((char *)v12 + *(_QWORD *)((*v14 & *v12) + 0x88)));
    *(_DWORD *)((char *)v12 + *(_QWORD *)((*v14 & *v12) + 0x88)) = -1;
    *(_QWORD *)((char *)v12 + *(_QWORD *)((*v14 & *v12) + 0x90)) = 0;
    swift_unknownObjectRelease();
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    sub_1BC817074();
    v20 = 1;
    v17 = type metadata accessor for FileMonitorPublisher.Inner(0, a2, v19, v16);
    MEMORY[0x1BCCF5AB4](&unk_1BC81D4B0, v17);
    sub_1BC8170E0();

    return (_QWORD *)(*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_1BC773AC0()
{
  void (*v0)(uint64_t);

  sub_1BC817950();
  v0 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC6F72FC(0, (unint64_t *)&unk_1ED6BA7D0, v0);
  sub_1BC6F75D4((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v0);
  return sub_1BC818184();
}

uint64_t sub_1BC773B7C()
{
  _QWORD *v0;
  uint64_t result;

  if (*(_QWORD *)((char *)v0 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90)))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BC81804C();
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1BC773BE0(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  sub_1BC773C34();

  v2 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BC773C34()
{
  swift_getObjectType();
  sub_1BC817B48();
  sub_1BC818814();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC8183E8();
  sub_1BC817B48();
  return 0;
}

void sub_1BC773CF0()
{
  sub_1BC774BBC();
}

id sub_1BC773D0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for FileMonitorPublisher.Inner(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1BC773D58(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1 + *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *a1) + 0x60));
  v3 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x68);
  v4 = sub_1BC81717C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x70);
  v6 = sub_1BC816E40();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = (char *)a1 + *(_QWORD *)((*v2 & *a1) + 0x78);
  v8 = sub_1BC818004();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  return swift_unknownObjectRelease();
}

void (*sub_1BC773E68(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1BC772FAC();
  return sub_1BC76A38C;
}

uint64_t sub_1BC773EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for FileMonitorPublisher.Inner(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_1BC8170D4();
}

uint64_t sub_1BC773EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for FileMonitorPublisher.Inner(0, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), a4);
  return sub_1BC8170E0();
}

uint64_t sub_1BC773F4C()
{
  MEMORY[0x1BCCF5AB4](&unk_1BC81D4B0);
  return sub_1BC8170F8();
}

uint64_t sub_1BC773F94(uint64_t a1)
{
  MEMORY[0x1BCCF5AB4](&unk_1BC81D4B0, a1);
  return sub_1BC8170EC();
}

id sub_1BC773FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _DWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  objc_class *v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t ObjectType;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  objc_super v49;
  uint64_t v50;

  v4 = v3;
  v47 = a2;
  v48 = a3;
  v40 = a1;
  ObjectType = swift_getObjectType();
  v5 = (_QWORD *)(*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v3);
  v6 = sub_1BC817FA4();
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = sub_1BC817F5C();
  MEMORY[0x1E0C80A78](v43);
  v42 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v9);
  v37 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v5[11];
  v34 = v5[10];
  v35 = v11;
  v12 = sub_1BC81717C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v34 - v14;
  v16 = (uint64_t *)&v4[v5[12]];
  v17 = type metadata accessor for UnfairLock();
  v18 = swift_allocObject();
  v19 = v4;
  v20 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v18 + 16) = v20;
  *v20 = 0;
  v16[3] = v17;
  v16[4] = sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
  *v16 = v18;
  v21 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_DWORD *)&v19[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v19) + 0x88)] = -1;
  *(_QWORD *)&v19[*(_QWORD *)((*v21 & *(_QWORD *)v19) + 0x90)] = 0;
  v22 = v21;
  v23 = &v19[*(_QWORD *)((*v21 & *(_QWORD *)v19) + 0x70)];
  v24 = sub_1BC816E40();
  v25 = *(_QWORD *)(v24 - 8);
  v38 = v24;
  v39 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v47, v24);
  v26 = &v19[*(_QWORD *)((*v22 & *(_QWORD *)v19) + 0x78)];
  v27 = sub_1BC818004();
  v36 = *(_QWORD *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v26, v48, v27);
  v28 = v35;
  sub_1BC817170();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v19[*(_QWORD *)((*v22 & *(_QWORD *)v19) + 0x68)], v15, v12);
  v40 = sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC818814();
  sub_1BC817968();
  v50 = MEMORY[0x1E0DEE9D8];
  v29 = (void (*)(uint64_t))MEMORY[0x1E0DEF810];
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  sub_1BC6F72FC(0, (unint64_t *)&unk_1ED6BA420, v29);
  sub_1BC6F75D4(qword_1ED6BA430, (unint64_t *)&unk_1ED6BA420, v29);
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v44, *MEMORY[0x1E0DEF8D0], v46);
  *(_QWORD *)&v19[*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v19) + 0x80)] = sub_1BC817FC8();

  v31 = (objc_class *)type metadata accessor for FileMonitorPublisher.Inner(0, v34, v28, v30);
  v49.receiver = v19;
  v49.super_class = v31;
  v32 = objc_msgSendSuper2(&v49, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v48, v27);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v47, v38);
  return v32;
}

id sub_1BC7743F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v8;

  v8 = objc_allocWithZone((Class)type metadata accessor for FileMonitorPublisher.Inner(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_1BC773FD4(a1, a2, a3);
}

uint64_t sub_1BC774440()
{
  return MEMORY[0x1E0DEDD18];
}

uint64_t *initializeBufferWithCopyOfBuffer for FileMonitorPublisher(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[1] = a2[1];
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BC816E40();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_unknownObjectRetain();
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 28);
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1BC818004();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t destroy for FileMonitorPublisher(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1BC816E40();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  v7 = sub_1BC818004();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t initializeWithCopy for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BC816E40();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_unknownObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 28);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BC818004();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BC816E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BC818004();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t initializeWithTake for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BC816E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BC818004();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t assignWithTake for FileMonitorPublisher(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BC816E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1BC818004();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for FileMonitorPublisher()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC774858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1BC816E40();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 24);
    }
    else
    {
      v11 = sub_1BC818004();
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for FileMonitorPublisher()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC774910(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = sub_1BC816E40();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_1BC818004();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1BC7749AC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1BC816E40();
  if (v1 <= 0x3F)
  {
    result = sub_1BC818004();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BC774A48()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1BC81717C();
  if (v1 <= 0x3F)
  {
    result = sub_1BC816E40();
    if (v2 <= 0x3F)
    {
      result = sub_1BC818004();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

void sub_1BC774B1C()
{
  JUMPOUT(0x1BCCF5AB4);
}

uint64_t sub_1BC774B2C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 88);
}

void sub_1BC774B34()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC774B44()
{
  JUMPOUT(0x1BCCF5AB4);
}

uint64_t sub_1BC774B54()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC774B78()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC774B9C()
{
  uint64_t *v0;

  sub_1BC773718(v0[4], v0[2], v0[3]);
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

_QWORD *sub_1BC774BB0()
{
  uint64_t *v0;

  return sub_1BC7738E4(v0[4], v0[2], v0[3]);
}

void sub_1BC774BBC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t static EnvironmentalStateDescription.pinned(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v6;

  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BC6ECA64(0, &qword_1ED6B9760, (uint64_t (*)(uint64_t))sub_1BC774D10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = 0xD000000000000027;
  *(_QWORD *)(inited + 40) = 0x80000001BC828BB0;
  sub_1BC6ECA64(0, &qword_1ED6B9768, (uint64_t (*)(uint64_t))sub_1BC774DD4, v4);
  v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = 0x64656E6E6970;
  *(_QWORD *)(v6 + 56) = 0xE600000000000000;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 48) = sub_1BC710D44(v6);
  sub_1BC710E78(inited);
  sub_1BC710E84(MEMORY[0x1E0DEE9D8]);
  return sub_1BC8174E8();
}

void sub_1BC774D10()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6B9640)
  {
    sub_1BC774D74();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6B9640);
  }
}

void sub_1BC774D74()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9638)
  {
    v0 = sub_1BC817A64();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9638);
  }
}

void sub_1BC774DD4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6B9648)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6B9648);
  }
}

uint64_t SummaryPinnedContentStateComponent.StateValues.rawValue.getter()
{
  return 0x64656E6E6970;
}

uint64_t SummaryPinnedContentStateComponent.StateValues.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC818568();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BC774E9C()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC774EE8()
{
  return sub_1BC817B30();
}

uint64_t sub_1BC774EFC()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC774F44@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC818568();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BC774F94(_QWORD *a1@<X8>)
{
  *a1 = 0x64656E6E6970;
  a1[1] = 0xE600000000000000;
}

unint64_t SummaryPinnedContentStateComponent.identifier.getter()
{
  return 0xD000000000000027;
}

uint64_t SummaryPinnedContentStateComponent.currentState.getter()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v3 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t SummaryPinnedContentStateComponent.__allocating_init(observer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1BC817944();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v6 = 1;
  (*(void (**)(_QWORD *, _QWORD))(v7 + 104))(v6, *MEMORY[0x1E0DEF4A0]);
  v8 = swift_allocObject();
  sub_1BC775154(a1, a2, (_QWORD *(*)(_QWORD *__return_ptr, uint64_t))sub_1BC7750CC, 0, (uint64_t (*)(_QWORD *))sub_1BC775150, 0, (uint64_t)v6);
  return v8;
}

void sub_1BC7750CC(uint64_t *a1@<X8>)
{
  id v2;
  objc_class *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  v3 = (objc_class *)sub_1BC816BB8();
  v4 = objc_allocWithZone(v3);
  v5 = v2;
  v6 = sub_1BC816BAC();
  v7 = MEMORY[0x1E0D28A10];
  a1[3] = (uint64_t)v3;
  a1[4] = v7;

  *a1 = v6;
}

_QWORD *sub_1BC775154(uint64_t a1, uint64_t a2, _QWORD *(*a3)(_QWORD *__return_ptr, uint64_t), uint64_t a4, uint64_t (*a5)(_QWORD *), uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *(*v34)(_QWORD *__return_ptr, uint64_t);
  uint64_t (*v35)(_QWORD *);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[4];

  v37 = a7;
  v38 = a4;
  v39 = a6;
  v34 = a3;
  v35 = a5;
  v36 = a2;
  v30 = *v7;
  v33 = sub_1BC817FA4();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BC817F5C();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v13);
  v7[10] = 0;
  v32 = sub_1BC7764C8();
  sub_1BC817968();
  v40[0] = MEMORY[0x1E0DEE9D8];
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v12, MEMORY[0x1E0DEF828]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA420, v12, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7188D8(qword_1ED6BA430, (unint64_t *)&unk_1ED6BA420, v12);
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v10, *MEMORY[0x1E0DEF8D0], v33);
  v7[11] = sub_1BC817FC8();
  v14 = v7;
  v15 = v36;
  v7[8] = a1;
  v7[9] = v15;
  v36 = a1;
  v16 = swift_unknownObjectRetain();
  v17 = v34(v40, v16);
  v35 = (uint64_t (*)(_QWORD *))v35(v17);
  __swift_project_boxed_opaque_existential_1(v40, v40[3]);
  v18 = (void *)sub_1BC816BE8();
  v19 = sub_1BC77658C();

  v20 = v37;
  v21 = v14;
  sub_1BC776504();
  v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(_QWORD *)(v22 + 16) = v19;
  v14[2] = v22;
  sub_1BC6FC700((uint64_t)v40, (uint64_t)(v14 + 3));
  v23 = (char *)v14 + OBJC_IVAR____TtC14HealthPlatform34SummaryPinnedContentStateComponent_onErrorRetryInterval;
  v24 = sub_1BC817944();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v23, v20, v24);
  sub_1BC817134();
  v26 = (void *)v14[11];
  swift_allocObject();
  swift_weakInit();
  sub_1BC817B0C();
  v27 = v26;
  swift_retain();
  swift_bridgeObjectRelease();
  v28 = sub_1BC817110();
  swift_release();
  swift_release();
  v21[10] = v28;
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v20, v24);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  return v21;
}

uint64_t sub_1BC775710()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC775764();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC775764()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  if (qword_1ED6B8030 != -1)
    swift_once();
  v0 = sub_1BC817590();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6B8018);
  v1 = sub_1BC81756C();
  v2 = sub_1BC817E9C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136446210;
    v5 = sub_1BC818814();
    sub_1BC6E14D8(v5, v6, &v8);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v1, v2, "[%{public}s] Pinned content did update notification received, refetching", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v4, -1, -1);
    MEMORY[0x1BCCF5BA4](v3, -1, -1);
  }

  return sub_1BC775D8C();
}

void sub_1BC7758E8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void *v17;
  unsigned int v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t aBlock[6];

  v34 = *v2;
  v4 = sub_1BC817950();
  v37 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC817974();
  v35 = *(_QWORD *)(v7 - 8);
  v36 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC81798C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v32 - v15;
  v17 = (void *)sub_1BC816D50();
  v18 = objc_msgSend(v17, sel_hk_isDatabaseAccessibilityError);

  if (v18)
  {
    if (qword_1ED6B8030 != -1)
      swift_once();
    v19 = sub_1BC817590();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED6B8018);
    v20 = sub_1BC81756C();
    v21 = sub_1BC817E84();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      aBlock[0] = v23;
      *(_DWORD *)v22 = 136446210;
      v24 = sub_1BC818814();
      v39 = sub_1BC6E14D8(v24, v25, aBlock);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v20, v21, "[%{public}s] Failed to get state due to database inaccessible, scheduling retry when unlocked", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v23, -1, -1);
      MEMORY[0x1BCCF5BA4](v22, -1, -1);
    }

    if (qword_1EF45ABF8 != -1)
      swift_once();
    v26 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_1BC7C3EDC((uint64_t)sub_1BC776780, v26);
    swift_release_n();
  }
  else if ((a2 & 1) != 0)
  {
    v27 = v38;
    v34 = *(_QWORD *)(v38 + 88);
    sub_1BC817980();
    MEMORY[0x1BCCF4674](v14, v27 + OBJC_IVAR____TtC14HealthPlatform34SummaryPinnedContentStateComponent_onErrorRetryInterval);
    v33 = *(void (**)(char *, uint64_t))(v11 + 8);
    v33(v14, v10);
    v28 = swift_allocObject();
    swift_weakInit();
    aBlock[4] = (uint64_t)sub_1BC77675C;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC719640;
    aBlock[3] = (uint64_t)&block_descriptor_15;
    v29 = _Block_copy(aBlock);
    swift_retain();
    sub_1BC817968();
    v39 = MEMORY[0x1E0DEE9D8];
    v30 = v4;
    v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    v38 = sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v31, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v31);
    sub_1BC818184();
    MEMORY[0x1BCCF4C14](v16, v9, v6, v29);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v30);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v36);
    v33(v16, v10);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1BC775D8C()
{
  _QWORD *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(v0 + 3, v0[6]);
  v1 = (void *)sub_1BC816BE8();
  v2 = sub_1BC77658C();
  v3 = v0[2];
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 16) = v2;
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  swift_getObjectType();
  sub_1BC6E1788((unint64_t *)&unk_1ED6B7F60, (uint64_t (*)(uint64_t))type metadata accessor for SummaryPinnedContentStateComponent, (uint64_t)&protocol conformance descriptor for SummaryPinnedContentStateComponent);
  sub_1BC817500();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7760AC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC775D8C();
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall SummaryPinnedContentStateComponent.stopObserving()()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 80))
  {
    swift_retain();
    sub_1BC817128();
    swift_release();
  }
}

uint64_t SummaryPinnedContentStateComponent.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_unknownObjectRelease();
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform34SummaryPinnedContentStateComponent_onErrorRetryInterval;
  v2 = sub_1BC817944();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SummaryPinnedContentStateComponent.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_unknownObjectRelease();
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform34SummaryPinnedContentStateComponent_onErrorRetryInterval;
  v2 = sub_1BC817944();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_1BC77622C()
{
  unint64_t result;

  result = qword_1EF45BB58;
  if (!qword_1EF45BB58)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for SummaryPinnedContentStateComponent.StateValues, &type metadata for SummaryPinnedContentStateComponent.StateValues);
    atomic_store(result, (unint64_t *)&qword_1EF45BB58);
  }
  return result;
}

unint64_t sub_1BC776270()
{
  return 0xD000000000000027;
}

uint64_t sub_1BC77628C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = v1 + 4;
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC7517D8(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1BC7762E8()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 80))
  {
    swift_retain();
    sub_1BC817128();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC776324()
{
  return type metadata accessor for SummaryPinnedContentStateComponent();
}

uint64_t type metadata accessor for SummaryPinnedContentStateComponent()
{
  uint64_t result;

  result = qword_1ED6B9528;
  if (!qword_1ED6B9528)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC776368()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC817944();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SummaryPinnedContentStateComponent()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for SummaryPinnedContentStateComponent.StateValues(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC77645C + 4 * byte_1BC81D560[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC77647C + 4 * byte_1BC81D565[v4]))();
}

_BYTE *sub_1BC77645C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC77647C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC776484(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC77648C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC776494(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC77649C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SummaryPinnedContentStateComponent.StateValues()
{
  return &type metadata for SummaryPinnedContentStateComponent.StateValues;
}

ValueMetadata *type metadata accessor for SummaryPinnedContentStateComponent.InnerState()
{
  return &type metadata for SummaryPinnedContentStateComponent.InnerState;
}

unint64_t sub_1BC7764C8()
{
  unint64_t result;

  result = qword_1ED6BA4E0;
  if (!qword_1ED6BA4E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BA4E0);
  }
  return result;
}

void sub_1BC776504()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8688)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8688);
  }
}

uint64_t sub_1BC776560()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC776584()
{
  return sub_1BC775710();
}

uint64_t sub_1BC77658C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t result;

  v0 = sub_1BC816B94();
  v1 = *(_QWORD *)(v0 + 16);
  if (!v1)
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v3;
  }
  v2 = (uint64_t *)(v0 + 40);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v6 = *(v2 - 1);
    v5 = *v2;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = sub_1BC706608(v6, v5);
    v10 = v3[2];
    v11 = (v8 & 1) == 0;
    v12 = v10 + v11;
    if (__OFADD__(v10, v11))
      break;
    v13 = v8;
    if (v3[3] >= v12)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v8 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BC70C274();
        if ((v13 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BC709968(v12, isUniquelyReferenced_nonNull_native);
      v14 = sub_1BC706608(v6, v5);
      if ((v13 & 1) != (v15 & 1))
        goto LABEL_20;
      v9 = v14;
      if ((v13 & 1) != 0)
      {
LABEL_3:
        v4 = (_QWORD *)(v3[7] + 16 * v9);
        swift_bridgeObjectRelease();
        *v4 = 0x64656E6E6970;
        v4[1] = 0xE600000000000000;
        goto LABEL_4;
      }
    }
    v3[(v9 >> 6) + 8] |= 1 << v9;
    v16 = (uint64_t *)(v3[6] + 16 * v9);
    *v16 = v6;
    v16[1] = v5;
    v17 = (_QWORD *)(v3[7] + 16 * v9);
    *v17 = 0x64656E6E6970;
    v17[1] = 0xE600000000000000;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_19;
    v3[2] = v20;
    swift_bridgeObjectRetain();
LABEL_4:
    v2 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v1)
      goto LABEL_17;
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC77675C()
{
  return sub_1BC7760AC();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t sub_1BC776780()
{
  return sub_1BC7760AC();
}

uint64_t UserProfile.uniqueIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC816F3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t UserProfile.uniqueIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BC816F3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*UserProfile.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

id UserProfile.profileIdentifier.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for UserProfile() + 20));
}

uint64_t type metadata accessor for UserProfile()
{
  uint64_t result;

  result = qword_1ED6BA330;
  if (!qword_1ED6BA330)
    return swift_getSingletonMetadata();
  return result;
}

void UserProfile.profileIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for UserProfile() + 20);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*UserProfile.profileIdentifier.modify())()
{
  type metadata accessor for UserProfile();
  return nullsub_1;
}

uint64_t UserProfile.init(profileIdentifier:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t result;

  v4 = objc_msgSend(a1, sel_identifier);
  sub_1BC816F24();

  result = type metadata accessor for UserProfile();
  *(_QWORD *)(a2 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t UserProfile.hash(into:)()
{
  sub_1BC816F3C();
  sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BC817A7C();
}

uint64_t static UserProfile.== infix(_:_:)()
{
  if ((sub_1BC816F18() & 1) == 0)
    return 0;
  sub_1BC6E1404();
  type metadata accessor for UserProfile();
  return sub_1BC8180D0() & 1;
}

uint64_t UserProfile.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC816F3C();
  sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC817A7C();
  return sub_1BC818778();
}

uint64_t sub_1BC776A60()
{
  sub_1BC81873C();
  sub_1BC816F3C();
  sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC817A7C();
  return sub_1BC818778();
}

uint64_t sub_1BC776ACC()
{
  sub_1BC816F3C();
  sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  return sub_1BC817A7C();
}

uint64_t sub_1BC776B24()
{
  sub_1BC81873C();
  sub_1BC816F3C();
  sub_1BC6E1788(&qword_1ED6BA298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1BC817A7C();
  return sub_1BC818778();
}

uint64_t sub_1BC776B8C()
{
  return sub_1BC6E1788(&qword_1ED6BA328, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, (uint64_t)&protocol conformance descriptor for UserProfile);
}

uint64_t sub_1BC776BB8()
{
  if ((sub_1BC816F18() & 1) == 0)
    return 0;
  sub_1BC6E1404();
  return sub_1BC8180D0() & 1;
}

uint64_t *initializeBufferWithCopyOfBuffer for UserProfile(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BC816F3C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void destroy for UserProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t assignWithCopy for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  v9 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v10 = v8;

  return a1;
}

uint64_t initializeWithTake for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for UserProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for UserProfile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC776E7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BC816F3C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for UserProfile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC776F04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BC816F3C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1BC776F7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC816F3C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static SourceProfile.availableSourceProfiles(from:)(void *a1)
{
  id v2;
  uint64_t v3;
  id v4;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6A18]), sel_initWithHealthStore_, a1);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = a1;
  sub_1BC7771A8();
  swift_allocObject();
  v4 = a1;
  return sub_1BC81780C();
}

void sub_1BC77707C(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  id v11;
  _QWORD v12[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = sub_1BC74D098;
  v9[4] = v8;
  v12[4] = sub_1BC7776AC;
  v12[5] = v9;
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 1107296256;
  v12[2] = sub_1BC7EB6AC;
  v12[3] = &block_descriptor_16;
  v10 = _Block_copy(v12);
  swift_retain();
  v11 = a4;
  swift_release();
  objc_msgSend(a3, sel_fetchAllProfilesWithCompletion_, v10);
  _Block_release(v10);
}

uint64_t sub_1BC777174()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC7771A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC77707C(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1BC7771A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45BB60)
  {
    sub_1BC7776C0(255, &qword_1EF45BB68, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC817800();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45BB60);
  }
}

uint64_t sub_1BC77721C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC777240(unint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  void **v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;

  if (!a1)
  {
    v6 = a3;
    v7 = a2;
    if (qword_1ED6BB338 == -1)
    {
LABEL_13:
      v12 = sub_1BC817590();
      __swift_project_value_buffer(v12, (uint64_t)qword_1ED6BB320);
      v13 = (id)v7;
      v14 = (id)v7;
      v15 = sub_1BC81756C();
      v16 = sub_1BC817E84();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = swift_slowAlloc();
        v18 = swift_slowAlloc();
        v32 = v18;
        *(_DWORD *)v17 = 136446466;
        sub_1BC777708();
        v19 = sub_1BC817AF4();
        sub_1BC6E14D8(v19, v20, &v32);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2082;
        v21 = (id)v7;
        sub_1BC777740();
        v22 = sub_1BC817AF4();
        sub_1BC6E14D8(v22, v23, &v32);
        sub_1BC818148();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC6DD000, v15, v16, "[%{public}s]: Unable to fetch additional profiles. Proceeding with just primary profile: %{public}s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v18, -1, -1);
        MEMORY[0x1BCCF5BA4](v17, -1, -1);
      }
      else
      {

      }
      sub_1BC7776C0(0, &qword_1EF45AF98, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DED1E8]);
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BC81A0F0;
      *(_QWORD *)(v7 + 32) = objc_msgSend((id)v6, sel_profileIdentifier);
      goto LABEL_17;
    }
LABEL_29:
    swift_once();
    goto LABEL_13;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    goto LABEL_17;
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E8D14(0, v6 & ~(v6 >> 63), 0);
  if (v6 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  v7 = v32;
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v6; ++i)
    {
      v9 = MEMORY[0x1BCCF4FB0](i, a1);
      v32 = v7;
      v11 = *(_QWORD *)(v7 + 16);
      v10 = *(_QWORD *)(v7 + 24);
      if (v11 >= v10 >> 1)
      {
        sub_1BC6E8D14(v10 > 1, v11 + 1, 1);
        v7 = v32;
      }
      *(_QWORD *)(v7 + 16) = v11 + 1;
      *(_QWORD *)(v7 + 8 * v11 + 32) = v9;
    }
  }
  else
  {
    v27 = (void **)(a1 + 32);
    do
    {
      v28 = *v27;
      v32 = v7;
      v30 = *(_QWORD *)(v7 + 16);
      v29 = *(_QWORD *)(v7 + 24);
      v31 = v28;
      if (v30 >= v29 >> 1)
      {
        sub_1BC6E8D14(v29 > 1, v30 + 1, 1);
        v7 = v32;
      }
      *(_QWORD *)(v7 + 16) = v30 + 1;
      *(_QWORD *)(v7 + 8 * v30 + 32) = v31;
      ++v27;
      --v6;
    }
    while (v6);
  }
LABEL_17:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v7 = (uint64_t)sub_1BC725EE4(0, *(_QWORD *)(v7 + 16) + 1, 1, (_QWORD *)v7);
  v25 = *(_QWORD *)(v7 + 16);
  v24 = *(_QWORD *)(v7 + 24);
  if (v25 >= v24 >> 1)
    v7 = (uint64_t)sub_1BC725EE4((_QWORD *)(v24 > 1), v25 + 1, 1, (_QWORD *)v7);
  *(_QWORD *)(v7 + 16) = v25 + 1;
  *(_QWORD *)(v7 + 8 * v25 + 32) = 0;
  a4(v7, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC777680()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7776AC(unint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC777240(a1, a2, *(_QWORD *)(v2 + 16), *(void (**)(uint64_t, _QWORD))(v2 + 24));
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

void sub_1BC7776C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for SourceProfile);
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BC777708()
{
  unint64_t result;

  result = qword_1EF45BB70;
  if (!qword_1EF45BB70)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45BB70);
  }
  return result;
}

void sub_1BC777740()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45D080)
  {
    sub_1BC6E1878();
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45D080);
  }
}

uint64_t dispatch thunk of PluginInfo.bundle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PluginInfo.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PluginInfo.init(bundle:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1BC7777AC(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22[2];

  v7 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a1 + 56);
  v11 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v13 = 0;
  if (!v10)
    goto LABEL_5;
LABEL_4:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * i);
    v20 = v19[1];
    v22[0] = *v19;
    v22[1] = v20;
    swift_bridgeObjectRetain();
    sub_1BC779758(v22, a2, a3);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11)
      return swift_release();
    v17 = *(_QWORD *)(v7 + 8 * v13);
    if (!v17)
    {
      v18 = v13 + 1;
      if (v13 + 1 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 2;
      if (v13 + 2 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
        goto LABEL_14;
      v18 = v13 + 3;
      if (v13 + 3 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v18);
      if (v17)
      {
LABEL_14:
        v13 = v18;
        goto LABEL_15;
      }
      v21 = v13 + 4;
      if (v13 + 4 >= v11)
        return swift_release();
      v17 = *(_QWORD *)(v7 + 8 * v21);
      v13 += 4;
      if (!v17)
        break;
    }
LABEL_15:
    v10 = (v17 - 1) & v17;
  }
  while (1)
  {
    v13 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v13 >= v11)
      return swift_release();
    v17 = *(_QWORD *)(v7 + 8 * v13);
    ++v21;
    if (v17)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

BOOL static PluginSharableModelDataError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PluginSharableModelDataError.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t PluginSharableModelDataError.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

id HKSharedSummary.init(model:pluginIdentifier:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (**v28)(_QWORD, _QWORD);
  unint64_t v29;
  id v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  void *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  void *v50;
  void *v51;
  unint64_t v52;
  void *v53;
  char *v54;
  void *v55;
  void *v56;
  _BYTE *v57;
  _QWORD v59[5];
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t *v64;
  void (*v65)(char *, uint64_t, uint64_t);
  id v66;
  void (**v67)(_QWORD, _QWORD);
  uint64_t v68;

  sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  MEMORY[0x1E0C80A78](v6);
  v62 = (char *)v59 - v7;
  sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v8);
  v63 = (char *)v59 - v9;
  v10 = sub_1BC81714C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v59[4] = a1[1];
  v60 = v14;
  v15 = a1[4];
  v16 = *(_QWORD *)(v15 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  v64 = a1;
  if (v16)
  {
    v59[2] = a2;
    v59[3] = a3;
    v68 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BC6E8A7C(0, v16, 0);
    v18 = *(unsigned __int8 *)(v11 + 80);
    v59[1] = v15;
    v19 = v15 + ((v18 + 32) & ~v18);
    v66 = *(id *)(v11 + 72);
    v67 = (void (**)(_QWORD, _QWORD))v11;
    v65 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v65(v13, v19, v10);
      v20 = (void *)sub_1BC817140();
      v21 = objc_msgSend(v20, sel_authorizationIdentifier);

      v22 = sub_1BC817AE8();
      v24 = v23;

      ((void (**)(char *, uint64_t))v67)[1](v13, v10);
      v17 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BC6E8A7C(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v68;
      }
      v26 = *(_QWORD *)(v17 + 16);
      v25 = *(_QWORD *)(v17 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BC6E8A7C(v25 > 1, v26 + 1, 1);
        v17 = v68;
      }
      *(_QWORD *)(v17 + 16) = v26 + 1;
      v27 = v17 + 16 * v26;
      *(_QWORD *)(v27 + 32) = v22;
      *(_QWORD *)(v27 + 40) = v24;
      v19 += (uint64_t)v66;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a1 = v64;
  }
  v28 = (void (**)(_QWORD, _QWORD))sub_1BC6EAD84(v17);
  swift_bridgeObjectRelease();
  v29 = swift_bridgeObjectRetain();
  v30 = (id)sub_1BC6EAFB8(v29);
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D2F6A0]), sel_init);
  v32 = v63;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC77A324();
    swift_allocError();
    *v40 = 0;
    swift_willThrow();
LABEL_20:
    sub_1BC755F9C((uint64_t)a1);
    return v30;
  }
  v33 = v31;
  v67 = v28;
  v34 = (void *)sub_1BC816E58();
  objc_msgSend(v33, sel_setUserData_, v34);

  v35 = type metadata accessor for PluginSharableModel();
  sub_1BC77A368((uint64_t)a1 + *(int *)(v35 + 40), (uint64_t)v32, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  v36 = sub_1BC81702C();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v37 + 48))(v32, 1, v36);
  v66 = v30;
  if (v38 == 1)
  {
    sub_1BC754350((uint64_t)v32, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    v39 = 0;
  }
  else
  {
    v30 = (id)sub_1BC817020();
    (*(void (**)(id, uint64_t))(v37 + 8))(v32, v36);
    v39 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v33, sel_setSourceTimeZoneIdentifier_, v39);

  v41 = (uint64_t)v62;
  sub_1BC77A368((uint64_t)a1 + *(int *)(v35 + 44), (uint64_t)v62, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  v42 = sub_1BC816FCC();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
  {
    sub_1BC754350(v41, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    v44 = 0;
  }
  else
  {
    v30 = (id)sub_1BC816F54();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v42);
    v44 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v33, sel_setSourceLocaleIdentifier_, v44);

  v45 = objc_msgSend(v33, sel_data);
  if (!v45)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC77A324();
    swift_allocError();
    *v57 = 1;
    swift_willThrow();

    goto LABEL_20;
  }
  v46 = v45;
  v47 = sub_1BC816E64();
  v49 = v48;

  v63 = (char *)objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v62 = (char *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v50 = (void *)sub_1BC817AC4();
  v68 = a1[2];
  sub_1BC818670();
  v61 = sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v68 = a1[3];
  sub_1BC818670();
  v65 = (void (*)(char *, uint64_t, uint64_t))sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v60 = sub_1BC817D70();
  swift_bridgeObjectRelease();
  sub_1BC77A3B4();
  sub_1BC74E298();
  v51 = (void *)sub_1BC817D70();
  v67 = (void (**)(_QWORD, _QWORD))v51;
  swift_bridgeObjectRelease();
  v52 = v49;
  v53 = (void *)sub_1BC816E58();
  v54 = v62;
  v55 = (void *)v60;
  v56 = (void *)v61;
  v30 = objc_msgSend(v63, sel_initWithPackage_name_version_compatibilityVersion_authorizationIdentifiers_objectTypes_summaryData_, v62, v50, v61, v65, v60, v51, v53);

  sub_1BC6ECB60(v47, v52);
  sub_1BC755F9C((uint64_t)v64);
  return v30;
}

uint64_t static HKSharedSummary.versionString(for:)()
{
  return sub_1BC818670();
}

uint64_t HKSharedSummary.modelVersion.getter()
{
  void *v0;
  id v1;
  Swift::Int v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  swift_getObjectType();
  v1 = objc_msgSend(v0, sel_version);
  v2 = sub_1BC817AE8();
  v4 = v3;

  v5 = objc_msgSend(v0, sel_compatibilityVersion);
  v6 = sub_1BC817AE8();
  v8 = v7;

  sub_1BC7781AC(v2, v4, v6, v8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Int sub_1BC7781AC(Swift::Int result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  unsigned __int8 *v13;
  unsigned __int8 *v14;
  char v15;
  Swift::Int v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  Swift::Int v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unsigned int v44;
  uint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t v52;

  v5 = v4;
  v9 = HIBYTE(a2) & 0xF;
  v50 = result;
  v10 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v11 = v9;
  else
    v11 = result & 0xFFFFFFFFFFFFLL;
  v12 = &unk_1ED6BB000;
  if (!v11)
    goto LABEL_35;
  if ((a2 & 0x1000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v16 = (Swift::Int)sub_1BC779B08(v50, a2, 10);
    v47 = v46;
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0)
      goto LABEL_40;
    goto LABEL_35;
  }
  if ((a2 & 0x2000000000000000) != 0)
  {
    v51[0] = result;
    v51[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (v9)
      {
        if (v9 != 1 && (BYTE1(result) - 48) <= 9u)
        {
          v16 = (BYTE1(result) - 48);
          if (v9 == 2)
            goto LABEL_40;
          if ((BYTE2(result) - 48) <= 9u)
          {
            v16 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
            v17 = v9 - 3;
            if (v9 == 3)
              goto LABEL_40;
            v18 = (unsigned __int8 *)v51 + 3;
            while (1)
            {
              v19 = *v18 - 48;
              if (v19 > 9)
                break;
              v20 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                break;
              v16 = v20 + v19;
              if (__OFADD__(v20, v19))
                break;
              ++v18;
              if (!--v17)
                goto LABEL_40;
            }
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (result != 45)
      {
        if (v9 && (result - 48) <= 9u)
        {
          v16 = (result - 48);
          if (v9 == 1)
            goto LABEL_40;
          if ((BYTE1(result) - 48) <= 9u)
          {
            v16 = 10 * (result - 48) + (BYTE1(result) - 48);
            v38 = v9 - 2;
            if (v9 == 2)
              goto LABEL_40;
            v39 = (unsigned __int8 *)v51 + 2;
            while (1)
            {
              v40 = *v39 - 48;
              if (v40 > 9)
                break;
              v41 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                break;
              v16 = v41 + v40;
              if (__OFADD__(v41, v40))
                break;
              ++v39;
              if (!--v38)
                goto LABEL_40;
            }
          }
        }
        goto LABEL_35;
      }
      if (v9)
      {
        if (v9 != 1 && (BYTE1(result) - 48) <= 9u)
        {
          if (v9 == 2)
          {
            v16 = -(uint64_t)(BYTE1(result) - 48);
            goto LABEL_40;
          }
          if ((BYTE2(result) - 48) <= 9u)
          {
            v16 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
            v42 = v9 - 3;
            if (v9 == 3)
              goto LABEL_40;
            v43 = (unsigned __int8 *)v51 + 3;
            while (1)
            {
              v44 = *v43 - 48;
              if (v44 > 9)
                break;
              v45 = 10 * v16;
              if ((unsigned __int128)(v16 * (__int128)10) >> 64 != (10 * v16) >> 63)
                break;
              v16 = v45 - v44;
              if (__OFSUB__(v45, v44))
                break;
              ++v43;
              if (!--v42)
                goto LABEL_40;
            }
          }
        }
LABEL_35:
        if (qword_1ED6BB5B0 != -1)
          swift_once();
        v21 = sub_1BC817590();
        __swift_project_value_buffer(v21, (uint64_t)qword_1ED6BB5D0);
        swift_bridgeObjectRetain_n();
        v22 = sub_1BC81756C();
        v23 = sub_1BC817E84();
        if (os_log_type_enabled(v22, v23))
        {
          v24 = swift_slowAlloc();
          v48 = swift_slowAlloc();
          v52 = v48;
          *(_DWORD *)v24 = 136315394;
          v51[0] = v5;
          swift_getMetatypeMetadata();
          v25 = sub_1BC817AF4();
          v51[0] = sub_1BC6E14D8(v25, v26, &v52);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          *(_WORD *)(v24 + 12) = 2080;
          swift_bridgeObjectRetain();
          v51[0] = sub_1BC6E14D8(v50, a2, &v52);
          v16 = -1;
          sub_1BC818148();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BC6DD000, v22, v23, "[%s]: Unable to determine current version number from: %s", (uint8_t *)v24, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v48, -1, -1);
          v27 = v24;
          v12 = (_QWORD *)&unk_1ED6BB000;
          MEMORY[0x1BCCF5BA4](v27, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
          v16 = -1;
        }
        goto LABEL_40;
      }
      __break(1u);
    }
    __break(1u);
    return result;
  }
  if ((result & 0x1000000000000000) != 0)
    v13 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
  else
    v13 = (unsigned __int8 *)sub_1BC81834C();
  v14 = sub_1BC779BEC(v13, v10, 10);
  if ((v15 & 1) != 0)
    goto LABEL_35;
  v16 = (Swift::Int)v14;
LABEL_40:
  swift_bridgeObjectRetain();
  v28 = sub_1BC7788A4(a3, a4);
  if ((v29 & 1) != 0)
  {
    if (v12[182] != -1)
      swift_once();
    v31 = sub_1BC817590();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED6BB5D0);
    swift_bridgeObjectRetain_n();
    v32 = sub_1BC81756C();
    v33 = sub_1BC817E84();
    if (os_log_type_enabled(v32, v33))
    {
      v30 = -1;
      v34 = v5;
      v35 = swift_slowAlloc();
      v49 = swift_slowAlloc();
      v52 = v49;
      *(_DWORD *)v35 = 136315394;
      v51[0] = v34;
      swift_getMetatypeMetadata();
      v36 = sub_1BC817AF4();
      v51[0] = sub_1BC6E14D8(v36, v37, &v52);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      v51[0] = sub_1BC6E14D8(v50, a2, &v52);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v32, v33, "[%s]: Unable to determine minimum supported version number from: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v49, -1, -1);
      MEMORY[0x1BCCF5BA4](v35, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      v30 = -1;
    }
  }
  else
  {
    v30 = v28;
  }
  return SharableModelVersion.init(latestSupported:minimumSupported:)(v16, v30).latestSupported;
}

uint64_t sub_1BC7788A4(uint64_t result, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  v3 = HIBYTE(a2) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_1BC81834C();
      v7 = (uint64_t)sub_1BC779BEC(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_50;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_34;
      v7 = (BYTE1(result) - 48);
      v14 = v3 - 2;
      if (v14)
      {
        v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          v16 = *v15 - 48;
          if (v16 > 9)
            goto LABEL_34;
          v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v17 + v16;
          if (__OFADD__(v17, v16))
            goto LABEL_34;
          v9 = 0;
          ++v15;
          if (!--v14)
            goto LABEL_37;
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            v7 = -(uint64_t)(BYTE1(result) - 48);
            v10 = v3 - 2;
            if (v10)
            {
              v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                v12 = *v11 - 48;
                if (v12 > 9)
                  goto LABEL_34;
                v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  goto LABEL_34;
                v7 = v13 - v12;
                if (__OFSUB__(v13, v12))
                  goto LABEL_34;
                v9 = 0;
                ++v11;
                if (!--v10)
                  goto LABEL_37;
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          v7 = 0;
          v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_34;
      v7 = (result - 48);
      v18 = v3 - 1;
      if (v18)
      {
        v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          v20 = *v19 - 48;
          if (v20 > 9)
            goto LABEL_34;
          v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
            goto LABEL_34;
          v7 = v21 + v20;
          if (__OFADD__(v21, v20))
            goto LABEL_34;
          v9 = 0;
          ++v19;
          if (!--v18)
            goto LABEL_37;
        }
      }
    }
LABEL_36:
    v9 = 0;
    goto LABEL_37;
  }
  v7 = (uint64_t)sub_1BC779B08(result, a2, 10);
  v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    return 0;
  else
    return v7;
}

uint64_t PluginSharableModel.init(sharedSummary:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unsigned int v48;
  id v49;
  void *v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  void *v58;
  uint8_t *v59;
  uint64_t v60;
  uint8_t *v61;
  uint64_t v62;
  unsigned int v63;
  id v64;
  void *v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  void (*v72)(uint64_t);
  uint64_t v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t);
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  uint64_t v113;
  uint64_t v114;

  sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  v6 = MEMORY[0x1E0C80A78](v5);
  v106 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v103 = (uint64_t)&v95 - v9;
  MEMORY[0x1E0C80A78](v8);
  v107 = (char *)&v95 - v10;
  sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v105 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v108 = (uint64_t)&v95 - v14;
  v15 = objc_msgSend(a1, sel_name);
  v104 = sub_1BC817AE8();
  v109 = v16;

  v114 = MEMORY[0x1E0DEE9D8];
  v113 = MEMORY[0x1E0DEE9D8];
  v17 = objc_msgSend(a1, sel_authorizationIdentifiers);
  v18 = sub_1BC817D7C();

  sub_1BC7777AC(v18, (unint64_t *)&v114, &v113);
  v19 = v2;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v113 + 16))
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v20 = sub_1BC817590();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB5D0);
    v21 = sub_1BC81756C();
    v22 = sub_1BC817E84();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = swift_slowAlloc();
      v102 = v2;
      v24 = v23;
      v100 = swift_slowAlloc();
      v101 = a1;
      *(_QWORD *)&v112 = v100;
      *(_DWORD *)v24 = 136315651;
      v110 = sub_1BC6E14D8(0xD000000000000013, 0x80000001BC828CF0, (uint64_t *)&v112);
      sub_1BC818148();
      *(_WORD *)(v24 + 12) = 2048;
      swift_beginAccess();
      *(_QWORD *)&v111 = *(_QWORD *)(v113 + 16);
      sub_1BC818148();
      *(_WORD *)(v24 + 22) = 2081;
      v25 = swift_bridgeObjectRetain();
      v26 = a2;
      v27 = MEMORY[0x1BCCF4914](v25, MEMORY[0x1E0DEA968]);
      v29 = v28;
      swift_bridgeObjectRelease();
      v30 = v27;
      a2 = v26;
      *(_QWORD *)&v111 = sub_1BC6E14D8(v30, v29, (uint64_t *)&v112);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v21, v22, "%s Could not decode %ld authorization categories %{private}s", (uint8_t *)v24, 0x20u);
      v31 = v100;
      swift_arrayDestroy();
      a1 = v101;
      MEMORY[0x1BCCF5BA4](v31, -1, -1);
      v32 = v24;
      v19 = v102;
      MEMORY[0x1BCCF5BA4](v32, -1, -1);
    }

  }
  v33 = objc_msgSend(a1, sel_objectTypes);
  sub_1BC77A3B4();
  sub_1BC74E298();
  v34 = sub_1BC817D7C();

  v35 = sub_1BC706460(v34);
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(a1, sel_summaryData);
  v37 = sub_1BC816E64();
  v39 = v38;

  v40 = objc_allocWithZone(MEMORY[0x1E0D2F6A0]);
  v41 = (void *)sub_1BC816E58();
  sub_1BC6ECB60(v37, v39);
  v42 = objc_msgSend(v40, sel_initWithData_, v41);

  if (!v42)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BC77A324();
    swift_allocError();
    *v53 = 0;
    swift_willThrow();
    goto LABEL_15;
  }
  if ((objc_msgSend(v42, sel_hasUserData) & 1) == 0
    || (v43 = objc_msgSend(v42, sel_userData)) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BC77A324();
    swift_allocError();
    *v52 = 2;
    swift_willThrow();

LABEL_15:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v44 = v43;
  v45 = sub_1BC816E64();
  v47 = v46;

  v48 = objc_msgSend(v42, sel_hasSourceTimeZoneIdentifier);
  v99 = a2;
  v100 = v35;
  v97 = v47;
  v98 = v45;
  if (v48 && (v49 = objc_msgSend(v42, sel_sourceTimeZoneIdentifier)) != 0)
  {
    v50 = v49;
    sub_1BC817AE8();

    sub_1BC817014();
    swift_bridgeObjectRelease();
    v51 = (uint64_t)v107;
  }
  else
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v55 = sub_1BC817590();
    __swift_project_value_buffer(v55, (uint64_t)qword_1ED6BB5D0);
    v56 = sub_1BC81756C();
    v57 = sub_1BC817E84();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = a1;
      v59 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      *(_QWORD *)&v112 = v60;
      *(_DWORD *)v59 = 136315138;
      *(_QWORD *)&v111 = sub_1BC6E14D8(0xD000000000000013, 0x80000001BC828CF0, (uint64_t *)&v112);
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, v56, v57, "[%s] Could not access sourceTimeZoneIdentifier", v59, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v60, -1, -1);
      v61 = v59;
      a1 = v58;
      MEMORY[0x1BCCF5BA4](v61, -1, -1);
    }

    v51 = (uint64_t)v107;
    v62 = sub_1BC81702C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v108, 1, 1, v62);
  }
  v63 = objc_msgSend(v42, sel_hasSourceLocaleIdentifier);
  v102 = v19;
  if (v63 && (v64 = objc_msgSend(v42, sel_sourceLocaleIdentifier)) != 0)
  {
    v65 = v64;
    v66 = sub_1BC817AE8();
    v68 = v67;

    swift_bridgeObjectRetain();
    v96 = v66;
    sub_1BC816F48();
    v69 = sub_1BC816FCC();
    v70 = MEMORY[0x1E0CB0E38];
    v71 = *(_QWORD *)(v69 - 8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v71 + 56))(v51, 0, 1, v69);
    v72 = (void (*)(uint64_t))v70;
    v73 = v103;
    sub_1BC77A368(v51, v103, &qword_1ED6B5CA8, v72);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v73, 1, v69) == 1)
    {
      v101 = a1;
      sub_1BC754350(v73, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v74 = sub_1BC817590();
      __swift_project_value_buffer(v74, (uint64_t)qword_1ED6BB5D0);
      swift_bridgeObjectRetain();
      v75 = sub_1BC81756C();
      v76 = sub_1BC817E84();
      if (os_log_type_enabled(v75, v76))
      {
        v77 = v68;
        v78 = swift_slowAlloc();
        v79 = swift_slowAlloc();
        *(_QWORD *)&v112 = v79;
        *(_DWORD *)v78 = 136315394;
        *(_QWORD *)&v111 = type metadata accessor for PluginSharableModel();
        sub_1BC77A3F0();
        v80 = sub_1BC817AF4();
        *(_QWORD *)&v111 = sub_1BC6E14D8(v80, v81, (uint64_t *)&v112);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v78 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v111 = sub_1BC6E14D8(v96, v77, (uint64_t *)&v112);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BC6DD000, v75, v76, "[%s]: Unable to map locale identifier to locale: %s", (uint8_t *)v78, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v79, -1, -1);
        MEMORY[0x1BCCF5BA4](v78, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      a1 = v101;
      v51 = (uint64_t)v107;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1BC754350(v73, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    }
  }
  else
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v82 = sub_1BC817590();
    __swift_project_value_buffer(v82, (uint64_t)qword_1ED6BB5D0);
    v83 = sub_1BC81756C();
    v84 = sub_1BC817E84();
    if (os_log_type_enabled(v83, v84))
    {
      v85 = (uint8_t *)swift_slowAlloc();
      v86 = swift_slowAlloc();
      *(_QWORD *)&v112 = v86;
      *(_DWORD *)v85 = 136315138;
      *(_QWORD *)&v111 = sub_1BC6E14D8(0xD000000000000013, 0x80000001BC828CF0, (uint64_t *)&v112);
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, v83, v84, "[%s] No sourceLocaleIdentifier was provided", v85, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v86, -1, -1);
      MEMORY[0x1BCCF5BA4](v85, -1, -1);
    }

    v87 = sub_1BC816FCC();
    v51 = (uint64_t)v107;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 56))(v107, 1, 1, v87);
  }
  HKSharedSummary.modelVersion.getter();
  v111 = v112;
  v88 = v114;
  v89 = v108;
  v90 = v105;
  sub_1BC77A368(v108, v105, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  v91 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
  v92 = v106;
  sub_1BC77A368(v51, v106, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  swift_bridgeObjectRetain();
  v93 = v51;
  v94 = a1;
  PluginSharableModel.init(identifier:version:authorizationIdentifiers:objectTypes:data:sourceTimeZone:sourceLocale:sharedSummary:)(v104, v109, (uint64_t *)&v111, v88, v100, v98, v97, v90, v99, v92, (uint64_t)a1);

  sub_1BC754350(v93, &qword_1ED6B5CA8, v91);
  sub_1BC754350(v89, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC779758(uint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  _QWORD *v19;
  uint64_t result;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t *v25;
  unint64_t v26;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t *v31;

  v31 = a2;
  sub_1BC6E1440(0, &qword_1ED6B7F90, (void (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v30 - v6;
  v8 = sub_1BC81714C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  v15 = *a1;
  v16 = a1[1];
  v17 = objc_allocWithZone(MEMORY[0x1E0CB6B90]);
  swift_bridgeObjectRetain();
  v30 = v15;
  v18 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_initWithAuthorizationIdentifier_, v18);

  sub_1BC817158();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1BC754350((uint64_t)v7, &qword_1ED6B7F90, (void (*)(uint64_t))MEMORY[0x1E0D2BEF8]);
    v19 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    *a3 = (uint64_t)v19;
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BC725568(0, v19[2] + 1, 1, v19);
      v19 = (_QWORD *)result;
      *a3 = result;
    }
    v22 = v19[2];
    v21 = v19[3];
    if (v22 >= v21 >> 1)
    {
      result = (uint64_t)sub_1BC725568((_QWORD *)(v21 > 1), v22 + 1, 1, v19);
      v19 = (_QWORD *)result;
      *a3 = result;
    }
    v19[2] = v22 + 1;
    v23 = &v19[2 * v22];
    v23[4] = v30;
    v23[5] = v16;
  }
  else
  {
    v24 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v24(v14, v7, v8);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    v25 = v31;
    v26 = *v31;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v25 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v26 = sub_1BC725FFC(0, *(_QWORD *)(v26 + 16) + 1, 1, v26);
      *v25 = v26;
    }
    v29 = *(_QWORD *)(v26 + 16);
    v28 = *(_QWORD *)(v26 + 24);
    if (v29 >= v28 >> 1)
    {
      v26 = sub_1BC725FFC(v28 > 1, v29 + 1, 1, v26);
      *v25 = v26;
    }
    *(_QWORD *)(v26 + 16) = v29 + 1;
    v24((char *)(v26+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v29), v12, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  return result;
}

_QWORD *sub_1BC779A30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BC77A53C();
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1BC779A90(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1BC817B90();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1BCCF4818](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unsigned __int8 *sub_1BC779B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1BC817BA8();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_1BC779E68();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_1BC81834C();
  }
LABEL_7:
  v11 = sub_1BC779BEC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_1BC779BEC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1BC779E68()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1BC817BB4();
  v4 = sub_1BC779EE4(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1BC779EE4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_1BC77A028(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_1BC779A30(v9, 0);
      v12 = sub_1BC77A114((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v13 = MEMORY[0x1BCCF47D0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1BCCF47D0);
LABEL_9:
      sub_1BC81834C();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1BCCF47D0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1BC77A028(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_1BC779A90(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_1BC779A90(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_1BC817B78();
  }
  __break(1u);
  return result;
}

unint64_t sub_1BC77A114(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_1BC779A90(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_1BC817B84();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_1BC81834C();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_1BC779A90(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_1BC817B60();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

unint64_t sub_1BC77A324()
{
  unint64_t result;

  result = qword_1EF45BB78;
  if (!qword_1EF45BB78)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginSharableModelDataError, &type metadata for PluginSharableModelDataError);
    atomic_store(result, (unint64_t *)&qword_1EF45BB78);
  }
  return result;
}

uint64_t sub_1BC77A368(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC6E1440(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

unint64_t sub_1BC77A3B4()
{
  unint64_t result;

  result = qword_1ED6BB1D0;
  if (!qword_1ED6BB1D0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB1D0);
  }
  return result;
}

unint64_t sub_1BC77A3F0()
{
  unint64_t result;

  result = qword_1EF45BB80;
  if (!qword_1EF45BB80)
  {
    type metadata accessor for PluginSharableModel();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45BB80);
  }
  return result;
}

unint64_t sub_1BC77A42C()
{
  unint64_t result;

  result = qword_1EF45BB88;
  if (!qword_1EF45BB88)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginSharableModelDataError, &type metadata for PluginSharableModelDataError);
    atomic_store(result, (unint64_t *)&qword_1EF45BB88);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PluginSharableModelDataError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC77A4BC + 4 * byte_1BC81D7B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC77A4F0 + 4 * byte_1BC81D7B0[v4]))();
}

uint64_t sub_1BC77A4F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC77A4F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC77A500);
  return result;
}

uint64_t sub_1BC77A50C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC77A514);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC77A518(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC77A520(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PluginSharableModelDataError()
{
  return &type metadata for PluginSharableModelDataError;
}

void sub_1BC77A53C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9DD0)
  {
    v0 = sub_1BC81867C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9DD0);
  }
}

uint64_t sub_1BC77A590()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1BC77A5C0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_1BC77A5FC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t MockNotificationContentStateManager.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 0;
  return result;
}

uint64_t MockNotificationContentStateManager.init()()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

uint64_t sub_1BC77A668()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  sub_1BC77A824(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1EF45BB90, v3, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  sub_1BC77A840();
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for NotificationContentState(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v2, 1, 1, v14);
  sub_1BC8177DC();
  sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
  sub_1BC8177B8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC6F0A44(&qword_1EF45BBA0, 255, (uint64_t (*)(uint64_t))sub_1BC77A840, MEMORY[0x1E0C964C8]);
  v15 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v15;
}

void sub_1BC77A824(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6B8870, type metadata accessor for NotificationContentState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC77A840()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45BB98)
  {
    sub_1BC77A824(255);
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    v0 = sub_1BC8187CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45BB98);
  }
}

uint64_t sub_1BC77A8C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  sub_1BC77B574(0, (unint64_t *)&qword_1ED6B82E0);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v12 - v3;
  sub_1BC77B5B8(0, (unint64_t *)&unk_1ED6B87C0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  sub_1BC8177DC();
  sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
  sub_1BC8177B8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BC77B724((unint64_t *)&qword_1ED6B87B8, (unint64_t *)&unk_1ED6B87C0);
  v10 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t MockNotificationContentStateManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t MockNotificationContentStateManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BC77AA24()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 16);
}

uint64_t sub_1BC77AA60(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = a1;
  return result;
}

uint64_t (*sub_1BC77AAA0())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC77AAE0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1BC6FC700(a1, (uint64_t)v5);
  v3 = *a2 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1BC6FC848(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1BC77AB44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1BC6FC700(v1 + 24, a1);
}

uint64_t sub_1BC77AB8C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 24;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_0(v3);
  sub_1BC6FC848(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1BC77ABE4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MockPluginNotificationManager.__allocating_init(contentStateManager:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  MockPluginNotificationManager.init(contentStateManager:)(a1);
  return v2;
}

uint64_t MockPluginNotificationManager.init(contentStateManager:)(uint64_t a1)
{
  uint64_t v1;
  objc_class *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  objc_super v20;

  v3 = (objc_class *)type metadata accessor for MockUNUserNotificationCenter();
  v4 = (char *)objc_allocWithZone(v3);
  *(_QWORD *)&v4[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_customNotificationSettings] = 0;
  v5 = OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState;
  v6 = v4;
  v7 = MEMORY[0x1E0DEE9D8];
  v8 = sub_1BC7106F4(MEMORY[0x1E0DEE9D8]);
  sub_1BC750384();
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 40) = 0;
  *(_QWORD *)(v9 + 16) = v7;
  *(_QWORD *)(v9 + 24) = v7;
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)&v4[v5] = v9;

  v10 = *MEMORY[0x1E0CB7630];
  v20.receiver = v6;
  v20.super_class = v3;
  *(_QWORD *)(v1 + 16) = objc_msgSendSuper2(&v20, sel_initWithBundleIdentifier_, v10);
  sub_1BC77ADC0(a1, (uint64_t)&v15);
  if (v16)
  {
    sub_1BC77AE88(a1);
    sub_1BC6FC848(&v15, (uint64_t)&v17);
  }
  else
  {
    v11 = type metadata accessor for MockNotificationContentStateManager();
    v12 = swift_allocObject();
    *(_BYTE *)(v12 + 16) = 0;
    v18 = v11;
    v19 = sub_1BC6F0A44(&qword_1EF45BBB8, v13, (uint64_t (*)(uint64_t))type metadata accessor for MockNotificationContentStateManager, (uint64_t)&protocol conformance descriptor for MockNotificationContentStateManager);
    *(_QWORD *)&v17 = v12;
    sub_1BC77AE88(a1);
    sub_1BC77AE88((uint64_t)&v15);
  }
  sub_1BC6FC848(&v17, v1 + 24);
  return v1;
}

uint64_t sub_1BC77ADC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC77AE04();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BC77AE04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45BBA8)
  {
    sub_1BC6FD528(255, &qword_1EF45BBB0);
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45BBA8);
  }
}

uint64_t type metadata accessor for MockNotificationContentStateManager()
{
  return objc_opt_self();
}

uint64_t sub_1BC77AE88(uint64_t a1)
{
  uint64_t v2;

  sub_1BC77AE04();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC77AEC4(void *a1)
{
  uint64_t v1;
  id v3;
  uint64_t v4;

  v3 = *(id *)(v1 + 16);
  v4 = UNUserNotificationCenter.scheduleNotification(_:)(a1);

  return v4;
}

uint64_t sub_1BC77AF04(_OWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  _OWORD *v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _OWORD v37[2];
  __int128 v38;
  __int128 v39;

  sub_1BC77B574(0, &qword_1EF45BBC0);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v29 - v5;
  sub_1BC77B5B8(0, &qword_1EF45BBC8);
  v8 = v7;
  v30 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - v9;
  sub_1BC77B62C();
  v12 = v11;
  v32 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[1];
  v37[0] = *a1;
  v37[1] = v16;
  v17 = a1[3];
  v38 = a1[2];
  v39 = v17;
  v18 = ((uint64_t (*)(uint64_t))v38)(v13);
  if (v18)
  {
    v19 = (void *)v18;
    v20 = *(id *)(v31 + 16);
    v21 = UNUserNotificationCenter.scheduleNotification(_:)(v19);

    *(_QWORD *)&v33 = v21;
    v22 = (_OWORD *)swift_allocObject();
    v23 = a1[1];
    v22[1] = *a1;
    v22[2] = v23;
    v24 = a1[3];
    v22[3] = a1[2];
    v22[4] = v24;
    sub_1BC77B6B0((uint64_t)v37);
    sub_1BC771160();
    sub_1BC6F0A44(&qword_1ED6B8298, 255, (uint64_t (*)(uint64_t))sub_1BC771160, MEMORY[0x1E0C95D90]);
    sub_1BC81786C();
    swift_release();
    swift_release();
    sub_1BC6F0A44(&qword_1EF45BBE0, 255, (uint64_t (*)(uint64_t))sub_1BC77B62C, MEMORY[0x1E0C95950]);
    v25 = sub_1BC817854();

    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v12);
  }
  else
  {
    v26 = a1[1];
    v33 = *a1;
    v34 = v26;
    v27 = a1[3];
    v35 = a1[2];
    v36 = v27;
    sub_1BC77B6B0((uint64_t)v37);
    sub_1BC8177DC();
    sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
    sub_1BC8177B8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_1BC77B724((unint64_t *)&qword_1EF45BBD8, &qword_1EF45BBC8);
    v25 = sub_1BC817854();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v10, v8);
  }
  return v25;
}

void sub_1BC77B1F8(uint64_t a1)
{
  sub_1BC77B210(a1, (SEL *)&selRef_removePendingNotificationRequestsWithIdentifiers_);
}

void sub_1BC77B204(uint64_t a1)
{
  sub_1BC77B210(a1, (SEL *)&selRef_removeDeliveredNotificationsWithIdentifiers_);
}

void sub_1BC77B210(uint64_t a1, SEL *a2)
{
  uint64_t v2;
  id v4;
  id v5;

  v4 = *(id *)(v2 + 16);
  v5 = (id)sub_1BC817C50();
  objc_msgSend(v4, *a2, v5);

}

void sub_1BC77B278()
{
  sub_1BC8184B4();
  __break(1u);
}

void sub_1BC77B2D0()
{
  sub_1BC8184B4();
  __break(1u);
}

uint64_t MockPluginNotificationManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return v0;
}

uint64_t MockPluginNotificationManager.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  return swift_deallocClassInstance();
}

void sub_1BC77B37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC77B394(a1, a2, a3, (SEL *)&selRef_removePendingNotificationRequestsWithIdentifiers_);
}

void sub_1BC77B388(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1BC77B394(a1, a2, a3, (SEL *)&selRef_removeDeliveredNotificationsWithIdentifiers_);
}

void sub_1BC77B394(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v4;
  id v6;
  id v7;

  v6 = *(id *)(v4 + 16);
  v7 = (id)sub_1BC817C50();
  objc_msgSend(v6, *a4, v7);

}

uint64_t sub_1BC77B3FC()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v8;

  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v0 = sub_1BC817590();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6BB5D0);
  v1 = sub_1BC81756C();
  v2 = sub_1BC817E84();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = sub_1BC818814();
    sub_1BC6E14D8(v5, v6, &v8);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v1, v2, "%s This method is not supported!", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v4, -1, -1);
    MEMORY[0x1BCCF5BA4](v3, -1, -1);
  }

  return 0;
}

void sub_1BC77B574(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BC8177D0();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BC77B5B8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_1BC6FD528(255, (unint64_t *)&qword_1ED6B87B0);
    v3 = sub_1BC8187CC();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BC77B62C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45BBD0)
  {
    sub_1BC771160();
    sub_1BC6F0A44(&qword_1ED6B8298, 255, (uint64_t (*)(uint64_t))sub_1BC771160, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC817614();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45BBD0);
  }
}

uint64_t sub_1BC77B6B0(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC77B710(v2, v3);
  return a1;
}

uint64_t sub_1BC77B710(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1BC77B724(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    sub_1BC77B5B8(255, a2);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C964C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC77B764()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(v0 + 72) >= 2uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC77B7A8@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;

  v2 = v1[2];
  *a1 = v1[1];
  a1[1] = v2;
  v3 = v1[4];
  a1[2] = v1[3];
  a1[3] = v3;
  return sub_1BC77B6B0((uint64_t)(v1 + 1));
}

uint64_t sub_1BC77B7C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  os_unfair_lock_s *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  sub_1BC77BD00(0, &qword_1EF45BE58, &qword_1EF45BAD8, (unint64_t *)&qword_1ED6B85A0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v14 - v4;
  v6 = *(char **)(v0 + 16);
  v7 = *(_QWORD *)&v6[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  v8 = (_QWORD *)(v7 + 16);
  v9 = (os_unfair_lock_s *)(v7 + 40);
  v10 = v6;
  os_unfair_lock_lock(v9);
  sub_1BC754410(v8, &v15);
  os_unfair_lock_unlock(v9);
  v11 = v15;

  v15 = v11;
  sub_1BC77179C(0, &qword_1EF45BAD8, (unint64_t *)&qword_1ED6B85A0);
  sub_1BC8177DC();
  sub_1BC77BD58();
  v12 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12;
}

uint64_t sub_1BC77B900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  sub_1BC77BD00(0, &qword_1EF45BE48, &qword_1EF45BB10, &qword_1EF45B870);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v14 - v4;
  v6 = *(char **)(v0 + 16);
  v7 = *(os_unfair_lock_s **)&v6[OBJC_IVAR____TtC14HealthPlatform28MockUNUserNotificationCenter_mockNotificationState];
  v8 = (uint64_t)&v7[4];
  v9 = v7 + 10;
  v10 = v6;
  os_unfair_lock_lock(v9);
  sub_1BC7543E8(v8, &v15);
  os_unfair_lock_unlock(v9);
  v11 = v15;

  v15 = v11;
  sub_1BC77179C(0, &qword_1EF45BB10, &qword_1EF45B870);
  sub_1BC8177DC();
  sub_1BC77BC98();
  v12 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v12;
}

uint64_t sub_1BC77BA40(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1BC6F0A44(&qword_1EF45BBE8, a2, (uint64_t (*)(uint64_t))type metadata accessor for MockNotificationContentStateManager, (uint64_t)&protocol conformance descriptor for MockNotificationContentStateManager);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC77BA7C@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 16);
  return result;
}

uint64_t sub_1BC77BAC0(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_1BC77BB00@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 24;
  swift_beginAccess();
  return sub_1BC6FC700(v3, a2);
}

uint64_t method lookup function for MockNotificationContentStateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.requestSyncOnUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.requestSyncOnUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.requestSyncOnUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.getContentState(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.setContentState(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.setProtectedContentState(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.setUnprotectedContentState(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.removeContentState(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MockNotificationContentStateManager.migrateContentStateIfNecessary(with:notificationIdentifier:keyValueDomain:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t type metadata accessor for MockPluginNotificationManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for MockPluginNotificationManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockPluginNotificationManager.contentStateManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.contentStateManager.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.contentStateManager.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.__allocating_init(contentStateManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.scheduleUserNotification(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.scheduleCoalescingNotification<A>(for:environment:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 160))(a1, a2 & 1);
}

uint64_t dispatch thunk of MockPluginNotificationManager.schedulePluginFeedItemNotification(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.getPendingNotifications(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.getDeliveredNotifications(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.removePendingNotifications(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.removeDeliveredNotifications(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.removeAllPluginFeedItemNotifications()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of MockPluginNotificationManager.removePluginFeedItemNotifications(feedItemIdentifiers:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

unint64_t sub_1BC77BC98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BE50;
  if (!qword_1EF45BE50)
  {
    sub_1BC77BD00(255, &qword_1EF45BE48, &qword_1EF45BB10, &qword_1EF45B870);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BE50);
  }
  return result;
}

void sub_1BC77BD00(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC77179C(255, a3, a4);
    v5 = sub_1BC8177D0();
    if (!v6)
      atomic_store(v5, a2);
  }
}

unint64_t sub_1BC77BD58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BE60;
  if (!qword_1EF45BE60)
  {
    sub_1BC77BD00(255, &qword_1EF45BE58, &qword_1EF45BAD8, (unint64_t *)&qword_1ED6B85A0);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BE60);
  }
  return result;
}

uint64_t OrchestrationRetryManager.__allocating_init(director:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  OrchestrationRetryManager.init(director:)(a1);
  return v2;
}

uint64_t OrchestrationRetryManager.init(director:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  v4 = sub_1BC8174F4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 16) = a1;
  sub_1BC817AE8();
  swift_retain();
  sub_1BC8174C4();
  swift_bridgeObjectRelease();
  v8 = v1 + OBJC_IVAR____TtC14HealthPlatform25OrchestrationRetryManager_foregroundDescription;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8, v7, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_1BC817188();
  sub_1BC817470();
  swift_release();
  LOBYTE(v8) = sub_1BC8174DC();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1BC77BF88();
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 20) = 0;
  *(_BYTE *)(v9 + 16) = v8 & 1;
  *(_QWORD *)(v2 + 24) = v9;
  sub_1BC817188();
  sub_1BC77BFE4();
  swift_retain();
  sub_1BC81747C();
  swift_release();
  swift_release();
  swift_release();
  return v2;
}

void sub_1BC77BF88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8650)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8650);
  }
}

unint64_t sub_1BC77BFE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B7E28;
  if (!qword_1ED6B7E28)
  {
    v1 = type metadata accessor for OrchestrationRetryManager();
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for OrchestrationRetryManager, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B7E28);
  }
  return result;
}

uint64_t type metadata accessor for OrchestrationRetryManager()
{
  uint64_t result;

  result = qword_1ED6B7E30;
  if (!qword_1ED6B7E30)
    return swift_getSingletonMetadata();
  return result;
}

Swift::Void __swiftcall OrchestrationRetryManager.didUpdate(environmentalState:)(Swift::OpaquePointer environmentalState)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  int v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = v1;
  sub_1BC77C254();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC817590();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC8174DC();
  v11 = v10 & 1;
  v12 = *(_QWORD *)(v2 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v12 + 20));
  if (v11 == *(unsigned __int8 *)(v12 + 16))
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 20));
  }
  else
  {
    *(_BYTE *)(v12 + 16) = v11;
    os_unfair_lock_unlock((os_unfair_lock_t)(v12 + 20));
    if ((v10 & 1) != 0)
    {
      sub_1BC8171A0();
      v13 = sub_1BC81756C();
      v14 = sub_1BC817E9C();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v15 = 0;
        _os_log_impl(&dword_1BC6DD000, v13, v14, "Health app has become foreground; retrying failed work criteria.",
          v15,
          2u);
        MEMORY[0x1BCCF5BA4](v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v16 = sub_1BC817278();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
      sub_1BC817194();
      sub_1BC77C2A8((uint64_t)v5);
    }
  }
}

void sub_1BC77C254()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8E88)
  {
    sub_1BC817278();
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8E88);
  }
}

uint64_t sub_1BC77C2A8(uint64_t a1)
{
  uint64_t v2;

  sub_1BC77C254();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t OrchestrationRetryManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform25OrchestrationRetryManager_foregroundDescription;
  v2 = sub_1BC8174F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t OrchestrationRetryManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform25OrchestrationRetryManager_foregroundDescription;
  v2 = sub_1BC8174F4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC77C39C()
{
  return type metadata accessor for OrchestrationRetryManager();
}

uint64_t sub_1BC77C3A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC8174F4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for OrchestrationRetryManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OrchestrationRetryManager.__allocating_init(director:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t getEnumTagSinglePayload for OrchestrationRetryManager.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for OrchestrationRetryManager.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC77C520 + 4 * byte_1BC81D985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC77C554 + 4 * byte_1BC81D980[v4]))();
}

uint64_t sub_1BC77C554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC77C55C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC77C564);
  return result;
}

uint64_t sub_1BC77C570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC77C578);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC77C57C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC77C584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OrchestrationRetryManager.State()
{
  return &type metadata for OrchestrationRetryManager.State;
}

id static Profile.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_allPluginData()
{
  return sel_allPluginData;
}

void sub_1BC77C610(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8428(a1, (SEL *)&selRef_allPluginData, (uint64_t (*)(uint64_t))type metadata accessor for PluginData, (unint64_t *)&qword_1EF45BE68, a2);
}

void sub_1BC77C63C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F84A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for PluginData, (unint64_t *)&qword_1EF45BE68, (SEL *)&selRef_setAllPluginData_);
}

char *keypath_get_selector_encodedHKProfileIdentifier()
{
  return sel_encodedHKProfileIdentifier;
}

void sub_1BC77C674(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_encodedHKProfileIdentifier);
  v4 = sub_1BC816E64();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1BC77C6CC(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC816E58();
  objc_msgSend(v2, sel_setEncodedHKProfileIdentifier_, v3);

}

void sub_1BC77C71C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1BC6F8428(a1, (SEL *)&selRef_feedItems, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, &qword_1EF45AFC0, a2);
}

void sub_1BC77C748(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  sub_1BC6F84A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, &qword_1EF45AFC0, (SEL *)&selRef_setFeedItems_);
}

void sub_1BC77C774(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_1BC816F24();

}

void sub_1BC77C7C4(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC816F0C();
  objc_msgSend(v2, sel_setUniqueIdentifier_, v3);

}

uint64_t sub_1BC77C80C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC77C868()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC77C89C(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC77C8E0@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t *a1, uint64_t *a2, uint64_t *a3)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 32);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1BC77D784;
  a2[1] = (uint64_t (*)(uint64_t *, uint64_t *, uint64_t *))v6;
  return swift_retain();
}

uint64_t sub_1BC77C954(uint64_t *a1, uint64_t *a2, uint64_t *a3, void (*a4)(uint64_t, uint64_t, uint64_t (*)(uint64_t a1), uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *a1;
  v6 = *a2;
  v8 = *a3;
  v7 = a3[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  swift_retain();
  a4(v5, v6, sub_1BC77D78C, v9);
  return swift_release();
}

uint64_t sub_1BC77C9D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v6 + 24) = sub_1BC77D774;
  *(_QWORD *)(v6 + 32) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC77CA5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *, uint64_t *, _QWORD *))
{
  uint64_t v8;
  _QWORD v10[2];
  uint64_t v11;
  uint64_t v12;

  v11 = a2;
  v12 = a1;
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v10[0] = sub_1BC77D77C;
  v10[1] = v8;
  swift_retain();
  a5(&v12, &v11, v10);
  return swift_release();
}

uint64_t sub_1BC77CAE4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  return v1;
}

uint64_t sub_1BC77CB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return swift_release();
}

uint64_t sub_1BC77CB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  void (*v9)(uint64_t, uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 24);
  swift_retain();
  v9(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_1BC77CBF8@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t a1, uint64_t *a2)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 40);
  v4 = *(_QWORD *)(v3 + 48);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1BC77D76C;
  a2[1] = (uint64_t (*)(uint64_t, uint64_t *))v6;
  return swift_retain();
}

uint64_t sub_1BC77CC6C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t (*)(uint64_t a1, char a2), uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v6 = *a2;
  v5 = a2[1];
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v7 + 24) = v5;
  swift_retain();
  a3(a1, sub_1BC74D098, v7);
  return swift_release();
}

uint64_t sub_1BC77CCE0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v6 + 40) = sub_1BC77D764;
  *(_QWORD *)(v6 + 48) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC77CD64(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, _QWORD *))
{
  uint64_t v8;
  _QWORD v10[2];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v10[0] = sub_1BC74D2C8;
  v10[1] = v8;
  swift_retain();
  a4(a1, v10);
  return swift_release();
}

uint64_t sub_1BC77CDE8()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 40);
  swift_retain();
  return v1;
}

uint64_t sub_1BC77CE30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return swift_release();
}

uint64_t (*sub_1BC77CE80())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC77CEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40);
  swift_retain();
  v7(a1, a2, a3);
  return swift_release();
}

_QWORD *MockAnchorStorage.__allocating_init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0 = (_QWORD *)swift_allocObject();
  v0[2] = sub_1BC710FA4(MEMORY[0x1E0DEE9D8]);
  v0[3] = nullsub_1;
  v0[4] = 0;
  v0[5] = nullsub_1;
  v0[6] = 0;
  v1 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v0[3] = sub_1BC77D418;
  v0[4] = v1;
  swift_release();
  v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v0[5] = sub_1BC77D4CC;
  v0[6] = v2;
  swift_release();
  return v0;
}

_QWORD *MockAnchorStorage.init()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v0[2] = sub_1BC710FA4(MEMORY[0x1E0DEE9D8]);
  v0[3] = nullsub_1;
  v0[4] = 0;
  v0[5] = nullsub_1;
  v0[6] = 0;
  v1 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v0[3] = sub_1BC77D418;
  v0[4] = v1;
  swift_release();
  v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v0[5] = sub_1BC77D4CC;
  v0[6] = v2;
  swift_release();
  return v0;
}

uint64_t sub_1BC77D15C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC77D180(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t Strong;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t result;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  _QWORD *v34;

  v6 = sub_1BC817200();
  v31 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return a3();
  v10 = *(_QWORD *)(a2 + 16);
  if (!v10)
    return swift_release();
  v30[0] = Strong;
  v30[1] = a2;
  v11 = (_QWORD *)(Strong + 16);
  v12 = a2 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v32 = *(_QWORD *)(v31 + 72);
  v33 = v13;
  swift_bridgeObjectRetain();
  while (1)
  {
    v33(v8, v12, v6);
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v34 = (_QWORD *)*v11;
    v16 = v34;
    *v11 = 0x8000000000000000;
    v18 = sub_1BC70692C((uint64_t)v8);
    v19 = v16[2];
    v20 = (v17 & 1) == 0;
    v21 = v19 + v20;
    if (__OFADD__(v19, v20))
      break;
    v22 = v17;
    if (v16[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v25 = v34;
        if ((v17 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BC70C428();
        v25 = v34;
        if ((v22 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BC709C88(v21, isUniquelyReferenced_nonNull_native);
      v23 = sub_1BC70692C((uint64_t)v8);
      if ((v22 & 1) != (v24 & 1))
        goto LABEL_23;
      v18 = v23;
      v25 = v34;
      if ((v22 & 1) != 0)
      {
LABEL_4:
        v14 = v25[7];
        swift_release();
        *(_QWORD *)(v14 + 8 * v18) = a1;
        goto LABEL_5;
      }
    }
    v25[(v18 >> 6) + 8] |= 1 << v18;
    v33((char *)(v25[6] + v18 * v32), (uint64_t)v8, v6);
    *(_QWORD *)(v25[7] + 8 * v18) = a1;
    v26 = v25[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
      goto LABEL_22;
    v25[2] = v28;
LABEL_5:
    *v11 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
    swift_endAccess();
    v12 += v32;
    if (!--v10)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

uint64_t sub_1BC77D418(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return sub_1BC77D180(a1, a2, a3);
}

uint64_t sub_1BC77D420(uint64_t a1, void (*a2)(void))
{
  uint64_t v3;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    v3 = swift_bridgeObjectRetain();
    ((void (*)(uint64_t, _QWORD))a2)(v3, 0);
    swift_release();
  }
  else
  {
    sub_1BC710FA4(MEMORY[0x1E0DEE9D8]);
    a2();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC77D4CC(uint64_t a1, void (*a2)(void))
{
  return sub_1BC77D420(a1, a2);
}

uint64_t MockAnchorStorage.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t MockAnchorStorage.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC77D534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v7 = *v3;
  swift_beginAccess();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  swift_retain();
  v8(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BC77D5AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  v9 = *v4;
  swift_beginAccess();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24);
  swift_retain();
  v10(a1, a2, a3, a4);
  return swift_release();
}

uint64_t sub_1BC77D62C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for MockAnchorStorage()
{
  return objc_opt_self();
}

uint64_t method lookup function for MockAnchorStorage()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockAnchorStorage.storage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of MockAnchorStorage.storage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MockAnchorStorage.storage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MockAnchorStorage.storeHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MockAnchorStorage.storeHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MockAnchorStorage.storeHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MockAnchorStorage.store(anchor:for:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MockAnchorStorage.allStoredAnchorsHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MockAnchorStorage.allStoredAnchorsHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MockAnchorStorage.allStoredAnchorsHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MockAnchorStorage.allStoredAnchors(availableSignals:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of MockAnchorStorage.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1BC77D740()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC77D764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BC77CD64(a1, a2, a3, *(void (**)(uint64_t, _QWORD *))(v3 + 16));
}

uint64_t sub_1BC77D76C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BC77CC6C(a1, a2, *(void (**)(uint64_t, uint64_t (*)(uint64_t, char), uint64_t))(v2 + 16));
}

uint64_t sub_1BC77D774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BC77CA5C(a1, a2, a3, a4, *(void (**)(uint64_t *, uint64_t *, _QWORD *))(v4 + 16));
}

uint64_t sub_1BC77D77C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BC7D98A8(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

uint64_t sub_1BC77D784(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1BC77C954(a1, a2, a3, *(void (**)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t))(v3 + 16));
}

uint64_t sub_1BC77D78C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC7D9878(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t FeedItem.FavoriteStatus.rawValue.getter(char a1)
{
  if (!a1)
    return 0x657469726F766166;
  if (a1 == 1)
    return 0x726F766146746F6ELL;
  return 0x626967696C656E69;
}

uint64_t FeedItem.FavoriteStatus.isFavorite.getter(char a1)
{
  char v1;

  if (a1)
    v1 = sub_1BC818694();
  else
    v1 = 1;
  swift_bridgeObjectRelease();
  return v1 & 1;
}

BOOL FeedItem.FavoriteStatus.init(_:)(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t sub_1BC77D8CC(_BYTE *a1, _BYTE *a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;

  v2 = *a1;
  v3 = 0x726F766146746F6ELL;
  v4 = 0xEC00000064657469;
  if (v2 != 1)
  {
    v3 = 0x626967696C656E69;
    v4 = 0xEA0000000000656CLL;
  }
  if (*a1)
    v5 = v3;
  else
    v5 = 0x657469726F766166;
  if (v2)
    v6 = v4;
  else
    v6 = 0xE900000000000064;
  v7 = 0x726F766146746F6ELL;
  v8 = 0xEC00000064657469;
  if (*a2 != 1)
  {
    v7 = 0x626967696C656E69;
    v8 = 0xEA0000000000656CLL;
  }
  if (*a2)
    v9 = v7;
  else
    v9 = 0x657469726F766166;
  if (*a2)
    v10 = v8;
  else
    v10 = 0xE900000000000064;
  if (v5 == v9 && v6 == v10)
    v11 = 1;
  else
    v11 = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1BC77D9E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s14HealthPlatform8FeedItemC14FavoriteStatusO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

void sub_1BC77DA14(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000064;
  v4 = 0xEC00000064657469;
  v5 = 0x726F766146746F6ELL;
  if (v2 != 1)
  {
    v5 = 0x626967696C656E69;
    v4 = 0xEA0000000000656CLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x657469726F766166;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BC77DA84()
{
  sub_1BC81873C();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t sub_1BC77DB34()
{
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC77DBC0()
{
  sub_1BC81873C();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t _s14HealthPlatform8FeedItemC14FavoriteStatusO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1BC818568();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1BC77DCB8()
{
  unint64_t result;

  result = qword_1EF45BF78;
  if (!qword_1EF45BF78)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItem.FavoriteStatus, &type metadata for FeedItem.FavoriteStatus);
    atomic_store(result, (unint64_t *)&qword_1EF45BF78);
  }
  return result;
}

uint64_t _s14FavoriteStatusOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC77DD48 + 4 * byte_1BC81DA6D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC77DD7C + 4 * byte_1BC81DA68[v4]))();
}

uint64_t sub_1BC77DD7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC77DD84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC77DD8CLL);
  return result;
}

uint64_t sub_1BC77DD98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC77DDA0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC77DDA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC77DDAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItem.FavoriteStatus()
{
  return &type metadata for FeedItem.FavoriteStatus;
}

uint64_t (*BasicSharableModelGeneratorPipeline.domain.modify())()
{
  return nullsub_1;
}

double BasicSharableModelGeneratorPipeline.init(generator:domain:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double result;
  double v15[3];
  _BYTE v16[40];

  sub_1BC75487C(0, &qword_1EF45BF80, (void (*)(uint64_t))sub_1BC77DEFC);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v15 - v9;
  v11 = *a2;
  v12 = *((_BYTE *)a2 + 24);
  sub_1BC6FC700(a1, (uint64_t)v16);
  sub_1BC77DEFC();
  *(_OWORD *)v15 = *(_OWORD *)(a2 + 1);
  sub_1BC8177DC();
  sub_1BC7548F0(&qword_1EF45BF90, &qword_1EF45BF80, (void (*)(uint64_t))sub_1BC77DEFC);
  v13 = sub_1BC817854();
  __swift_destroy_boxed_opaque_existential_0(a1);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v11;
  result = v15[0];
  *(_OWORD *)(a3 + 16) = *(_OWORD *)v15;
  *(_BYTE *)(a3 + 32) = v12;
  return result;
}

unint64_t sub_1BC77DEFC()
{
  unint64_t result;

  result = qword_1EF45BF88;
  if (!qword_1EF45BF88)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45BF88);
  }
  return result;
}

uint64_t BasicSharableModelGenerator.publisher.getter()
{
  return swift_retain();
}

uint64_t BasicSharableModelGenerator.publisher.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*BasicSharableModelGenerator.publisher.modify())()
{
  return nullsub_1;
}

__n128 _s14HealthPlatform35BasicSharableModelGeneratorPipelineV6domainAA0F6DomainVvs_0(uint64_t a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  void *v5;
  __n128 result;

  v3 = *(_QWORD *)a1;
  v4 = *(_BYTE *)(a1 + 24);
  v5 = (void *)v1->n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v1->n128_u64[1] = v3;
  result = *(__n128 *)(a1 + 8);
  v1[1] = result;
  v1[2].n128_u8[0] = v4;
  return result;
}

uint64_t (*BasicSharableModelGenerator.domain.modify())()
{
  return nullsub_1;
}

double BasicSharableModelGenerator.init(changes:domain:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  double result;
  double v15[3];
  uint64_t v16;

  sub_1BC75487C(0, &qword_1ED6B82D8, (void (*)(uint64_t))sub_1BC77E118);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v15 - v9;
  v11 = *a2;
  v12 = *((_BYTE *)a2 + 24);
  v16 = a1;
  sub_1BC77E118();
  *(_OWORD *)v15 = *(_OWORD *)(a2 + 1);
  sub_1BC8177DC();
  sub_1BC7548F0(&qword_1ED6B82D0, &qword_1ED6B82D8, (void (*)(uint64_t))sub_1BC77E118);
  v13 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(_QWORD *)a3 = v13;
  *(_QWORD *)(a3 + 8) = v11;
  result = v15[0];
  *(_OWORD *)(a3 + 16) = *(_OWORD *)v15;
  *(_BYTE *)(a3 + 32) = v12;
  return result;
}

void sub_1BC77E118()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B83F0)
  {
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B83F0);
  }
}

ValueMetadata *type metadata accessor for BasicSharableModelGeneratorPipeline()
{
  return &type metadata for BasicSharableModelGeneratorPipeline;
}

ValueMetadata *type metadata accessor for BasicSharableModelGenerator()
{
  return &type metadata for BasicSharableModelGenerator;
}

uint64_t EncodedFeatureTag.__allocating_init(context:name:data:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  objc_class *v5;
  objc_class *v6;
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t result;

  v6 = v5;
  v10 = (void *)objc_opt_self();
  v11 = (void *)sub_1BC817AC4();
  v12 = objc_msgSend(v10, sel_entityForName_inManagedObjectContext_, v11, a1);

  if (v12)
  {
    v13 = objc_msgSend(objc_allocWithZone(v6), sel_initWithEntity_insertIntoManagedObjectContext_, v12, a1);
    v14 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setName_, v14);

    v15 = (void *)sub_1BC816E58();
    objc_msgSend(v13, sel_setData_, v15);
    sub_1BC6ECB60(a4, a5);

    return (uint64_t)v13;
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

HealthPlatform::DailyRoutineKind_optional __swiftcall DailyRoutineKind.init(rawValue:)(Swift::Int rawValue)
{
  HealthPlatform::DailyRoutineKind_optional v1;

  if (rawValue == 10)
    v1.value = HealthPlatform_DailyRoutineKind_evening;
  else
    v1.value = HealthPlatform_DailyRoutineKind_unknownDefault;
  if (rawValue)
    return v1;
  else
    return 0;
}

uint64_t DailyRoutineKind.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 10;
  else
    return 0;
}

uint64_t sub_1BC77E354()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC77E3A0()
{
  return sub_1BC818748();
}

uint64_t sub_1BC77E3D4()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

_QWORD *sub_1BC77E41C@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 10)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_1BC77E43C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 10;
  if (!*v1)
    v2 = 0;
  *a1 = v2;
}

uint64_t sub_1BC77E454()
{
  sub_1BC77E63C();
  return sub_1BC817C38();
}

uint64_t sub_1BC77E4B0()
{
  sub_1BC77E63C();
  return sub_1BC817C20();
}

uint64_t DailyRoutineFeatureTag.value.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

HealthPlatform::DailyRoutineFeatureTag __swiftcall DailyRoutineFeatureTag.init(_:)(HealthPlatform::DailyRoutineFeatureTag result)
{
  _BYTE *v1;

  *v1 = result.value & 1;
  return result;
}

unint64_t sub_1BC77E514()
{
  unint64_t result;

  result = qword_1EF45BF98;
  if (!qword_1EF45BF98)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DailyRoutineKind, &type metadata for DailyRoutineKind);
    atomic_store(result, (unint64_t *)&qword_1EF45BF98);
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyRoutineKind()
{
  return &type metadata for DailyRoutineKind;
}

uint64_t _s14HealthPlatform16DailyRoutineKindOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC77E5BC + 4 * byte_1BC81DBB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC77E5F0 + 4 * asc_1BC81DBB0[v4]))();
}

uint64_t sub_1BC77E5F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC77E5F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC77E600);
  return result;
}

uint64_t sub_1BC77E60C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC77E614);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC77E618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC77E620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DailyRoutineFeatureTag()
{
  return &type metadata for DailyRoutineFeatureTag;
}

unint64_t sub_1BC77E63C()
{
  unint64_t result;

  result = qword_1EF45BFC8;
  if (!qword_1EF45BFC8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DailyRoutineKind, &type metadata for DailyRoutineKind);
    atomic_store(result, (unint64_t *)&qword_1EF45BFC8);
  }
  return result;
}

uint64_t Publisher.tupleWithPrevious()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a3;
  v27 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = sub_1BC818130();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v29 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v7 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v9 = (char *)&v27 - v8;
  v10 = *(_QWORD *)(v5 - 8);
  v11 = MEMORY[0x1E0C80A78](v7);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v27 - v14;
  v28 = sub_1BC817620();
  v30 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v17 = (char *)&v27 - v16;
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v18(v15, 1, 1, AssociatedTypeWitness);
  v18(v13, 1, 1, AssociatedTypeWitness);
  v19 = &v9[*(int *)(TupleTypeMetadata2 + 48)];
  v20 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v20(v9, v15, v5);
  v20(v19, v13, v5);
  v21 = swift_allocObject();
  v22 = v27;
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = v22;
  v23 = v22;
  sub_1BC817878();
  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, TupleTypeMetadata2);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = a1;
  *(_QWORD *)(v24 + 24) = v23;
  swift_getTupleTypeMetadata2();
  v25 = v28;
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C959B8], v28);
  sub_1BC817860();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v17, v25);
}

uint64_t sub_1BC77E92C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v20 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_1BC818130();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v10 = (char *)&v19 - v9;
  v11 = *(int *)(v8 + 48);
  v12 = a3 + v11;
  v13 = &v10[v11];
  v14 = a1 + v11;
  v15 = *(_QWORD *)(v6 - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v16(v10, a1, v6);
  v16(v13, v14, v6);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v13, v6);
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v12, v20, AssociatedTypeWitness);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, AssociatedTypeWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v6);
}

uint64_t sub_1BC77EA7C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC77EA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BC77E92C(a1, a2, a3);
}

uint64_t sub_1BC77EA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v35 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = sub_1BC818130();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v6 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v31 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v28 - v9;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](v8);
  v33 = (char *)&v28 - v13;
  v34 = a1;
  v14 = *(int *)(v12 + 48);
  v15 = &v10[v14];
  v16 = a1 + v14;
  v17 = *(_QWORD *)(v4 - 8);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v18(v10, a1, v4);
  v32 = v16;
  v18(v15, v16, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    v19 = *(void (**)(char *, uint64_t))(v17 + 8);
    v19(v15, v4);
    v19(v10, v4);
    v20 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v35, 1, 1, v20);
  }
  else
  {
    v29 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v22 = v33;
    v29(v33, v15, AssociatedTypeWitness);
    v30 = *(void (**)(char *, uint64_t))(v17 + 8);
    v30(v10, v4);
    v23 = swift_getTupleTypeMetadata2();
    v24 = v35;
    v25 = (char *)(v35 + *(int *)(v23 + 48));
    v26 = v31;
    v27 = &v31[*(int *)(TupleTypeMetadata2 + 48)];
    v18(v31, v34, v4);
    v18(v27, v32, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v24, v26, v4);
    v29(v25, v22, AssociatedTypeWitness);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v24, 0, 1, v23);
    return ((uint64_t (*)(char *, uint64_t))v30)(v27, v4);
  }
}

uint64_t sub_1BC77ED30()
{
  return swift_deallocObject();
}

uint64_t sub_1BC77ED40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC77EA94(a1, a2);
}

uint64_t sub_1BC77ED48()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t result;

  v1 = v0;
  sub_1BC72441C();
  v2 = sub_1BC817AF4();
  v4 = v3;
  v5 = sub_1BC7B7528();
  v7 = v6;
  v8 = objc_msgSend(v0, sel_managedObjectContext);
  if (v8)
  {
    v9 = v8;
    _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(v2, v4);
    type metadata accessor for EncodedFeatureTag();
    v10 = v9;
    swift_bridgeObjectRetain();
    sub_1BC6ECBE8(v5, v7);
    v11 = (void *)EncodedFeatureTag.__allocating_init(context:name:data:)(v10, v2, v4, v5, v7);
    objc_msgSend(v1, sel_addFeatureTagsObject_, v11);

    sub_1BC6ECB60(v5, v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC77EEB0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  uint64_t result;

  v1 = v0;
  sub_1BC739F40();
  v2 = sub_1BC817AF4();
  v4 = v3;
  sub_1BC816C60();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BC816C54();
  sub_1BC780BB4();
  sub_1BC6E1788((unint64_t *)&qword_1ED6BAB00, (uint64_t (*)(uint64_t))sub_1BC780BB4, (uint64_t)&protocol conformance descriptor for ValueJSONWrapper<A>);
  v5 = sub_1BC816C48();
  v7 = v6;
  swift_release();
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v0, sel_managedObjectContext);
  if (v8)
  {
    v9 = v8;
    _s14HealthPlatform8FeedItemC9removeTag4nameySS_tF_0(v2, v4);
    type metadata accessor for EncodedFeatureTag();
    v10 = v9;
    swift_bridgeObjectRetain();
    sub_1BC6ECBE8(v5, v7);
    v11 = (void *)EncodedFeatureTag.__allocating_init(context:name:data:)(v10, v2, v4, v5, v7);
    objc_msgSend(v1, sel_addFeatureTagsObject_, v11);

    sub_1BC6ECB60(v5, v7);
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

void PluginFeedItem.init(feedItem:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  id v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  id v74;
  int64_t v75;
  unint64_t v76;
  char *v77;
  id v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v88;
  char v89;
  unint64_t v90;
  uint64_t v91;
  _BOOL8 v92;
  uint64_t v93;
  char v94;
  unint64_t v95;
  char v96;
  _QWORD *v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t v100;
  BOOL v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  void *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  id v116;
  void *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t *v121;
  id v122;
  void *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int *v127;
  uint64_t *v128;
  char v129;
  int *v130;
  id v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  uint64_t *v137;
  _QWORD v138[2];
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  void *v151;
  _QWORD v152[6];

  v146 = a2;
  sub_1BC6ECA48(0);
  MEMORY[0x1E0C80A78](v3);
  v149 = (char *)v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = (int *)type metadata accessor for PluginFeedItem();
  MEMORY[0x1E0C80A78](v147);
  v6 = (char *)v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_uniqueIdentifier);
  v8 = sub_1BC817AE8();
  v10 = v9;

  v11 = FeedItem.userInterface.getter();
  v13 = v12;
  v15 = v14;
  v139 = a1;
  v16 = objc_msgSend(a1, sel_userData);
  LODWORD(v148) = v15;
  if (v16)
  {
    v17 = v16;
    v18 = sub_1BC816E64();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0xF000000000000000;
  }
  v21 = v139;
  FeedItem.contentKind.getter((char *)v152);
  v22 = FeedItem.associatedProfiles.getter();
  v23 = sub_1BC769D18(v22);
  swift_bridgeObjectRelease();
  v24 = v8;
  v25 = v21;
  PluginFeedItem.init(uniqueIdentifier:userInterface:userData:contentKind:sourceProfile:)(v24, v10, v11, v13, v148, v18, v20, (char *)v152, (uint64_t)v6, v23);
  v26 = v146;
  sub_1BC70F7C8((uint64_t)v6, v146);
  *(_BYTE *)(v26 + 33) = objc_msgSend(v21, sel_usesPlatformView);
  v27 = objc_msgSend(v21, sel_actionHandlerClassName);
  if (v27)
  {
    v28 = v27;
    v29 = sub_1BC817AE8();
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  v32 = (uint64_t)v149;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 40) = v29;
  *(_QWORD *)(v26 + 48) = v31;
  v33 = objc_msgSend(v25, sel_actionHandlerUserData);
  if (v33)
  {
    v34 = v33;
    v35 = sub_1BC816E64();
    v37 = v36;

  }
  else
  {
    v35 = 0;
    v37 = 0xF000000000000000;
  }
  sub_1BC6ECB4C(*(_QWORD *)(v26 + 56), *(_QWORD *)(v26 + 64));
  *(_QWORD *)(v26 + 56) = v35;
  *(_QWORD *)(v26 + 64) = v37;
  v38 = objc_msgSend(v25, sel_baseAutomationIdentifier);
  if (v38)
  {
    v39 = v38;
    v40 = sub_1BC817AE8();
    v42 = v41;

  }
  else
  {
    v40 = 0;
    v42 = 0;
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + 72) = v40;
  *(_QWORD *)(v26 + 80) = v42;
  FeedItem.relevantDateInterval.getter(v32);
  v43 = v147;
  sub_1BC71BFF8(v32, v26 + v147[11]);
  v44 = objc_msgSend(v25, sel_dataTypes);
  type metadata accessor for DataType();
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA3F0, (uint64_t (*)(uint64_t))type metadata accessor for DataType, MEMORY[0x1E0DEFCF8]);
  v45 = sub_1BC817D7C();

  sub_1BC6E3714(v45);
  v47 = v46;
  swift_bridgeObjectRelease();
  v48 = sub_1BC6EAFB8(v47);
  swift_bridgeObjectRelease();
  v49 = v43[13];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + v49) = v48;
  v50 = FeedItem.associatedSharableModelReferences.getter();
  v51 = v43[14];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + v51) = v50;
  v52 = objc_msgSend(v25, sel_categoryIdentifier);
  if (v52)
  {
    v53 = v52;
    v54 = sub_1BC817AE8();
    v56 = v55;

  }
  else
  {
    v54 = 0;
    v56 = 0;
  }
  v57 = (uint64_t *)(v26 + v147[15]);
  swift_bridgeObjectRelease();
  *v57 = v54;
  v57[1] = v56;
  v58 = objc_msgSend(v25, sel_featureTags);
  v59 = type metadata accessor for EncodedFeatureTag();
  sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
  v60 = sub_1BC817D7C();

  v141 = v59;
  if ((v60 & 0xC000000000000001) != 0)
  {
    sub_1BC8181C0();
    sub_1BC817DB8();
    v60 = v152[0];
    v144 = v152[1];
    v61 = v152[2];
    v62 = (char *)v152[3];
    v63 = v152[4];
  }
  else
  {
    v62 = 0;
    v64 = -1 << *(_BYTE *)(v60 + 32);
    v65 = *(_QWORD *)(v60 + 56);
    v144 = v60 + 56;
    v66 = ~v64;
    v67 = -v64;
    if (v67 < 64)
      v68 = ~(-1 << v67);
    else
      v68 = -1;
    v63 = v68 & v65;
    v61 = v66;
  }
  v138[1] = v61;
  v142 = v60 & 0x7FFFFFFFFFFFFFFFLL;
  v143 = (unint64_t)(v61 + 64) >> 6;
  v140 = MEMORY[0x1E0DEE9B0] + 8;
  v145 = v60;
  while (v60 < 0)
  {
    v73 = sub_1BC81822C();
    if (!v73)
      goto LABEL_57;
    v150 = v73;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v74 = v151;
    swift_unknownObjectRelease();
    v72 = v62;
    v70 = v63;
    if (!v74)
      goto LABEL_57;
LABEL_46:
    v148 = v70;
    v149 = v72;
    v78 = objc_msgSend(v74, sel_name);
    v79 = sub_1BC817AE8();
    v81 = v80;

    v82 = objc_msgSend(v74, sel_data);
    v83 = sub_1BC816E64();
    v85 = v84;

    v86 = v147[16];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v151 = *(void **)(v26 + v86);
    v88 = v151;
    *(_QWORD *)(v26 + v86) = 0x8000000000000000;
    v90 = sub_1BC706608(v79, v81);
    v91 = v88[2];
    v92 = (v89 & 1) == 0;
    v93 = v91 + v92;
    if (__OFADD__(v91, v92))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      sub_1BC8186E8();
      __break(1u);
      return;
    }
    v94 = v89;
    if (v88[3] >= v93)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v97 = v151;
        if ((v89 & 1) != 0)
          goto LABEL_23;
      }
      else
      {
        sub_1BC70B448();
        v97 = v151;
        if ((v94 & 1) != 0)
          goto LABEL_23;
      }
    }
    else
    {
      sub_1BC7083F0(v93, isUniquelyReferenced_nonNull_native);
      v95 = sub_1BC706608(v79, v81);
      if ((v94 & 1) != (v96 & 1))
        goto LABEL_76;
      v90 = v95;
      v97 = v151;
      if ((v94 & 1) != 0)
      {
LABEL_23:
        v69 = v97[7] + 16 * v90;
        sub_1BC6ECB60(*(_QWORD *)v69, *(_QWORD *)(v69 + 8));
        *(_QWORD *)v69 = v83;
        *(_QWORD *)(v69 + 8) = v85;
        goto LABEL_24;
      }
    }
    v97[(v90 >> 6) + 8] |= 1 << v90;
    v98 = (uint64_t *)(v97[6] + 16 * v90);
    *v98 = v79;
    v98[1] = v81;
    v99 = (uint64_t *)(v97[7] + 16 * v90);
    *v99 = v83;
    v99[1] = v85;
    v100 = v97[2];
    v101 = __OFADD__(v100, 1);
    v102 = v100 + 1;
    if (v101)
      goto LABEL_74;
    v97[2] = v102;
    swift_bridgeObjectRetain();
LABEL_24:
    v26 = v146;
    *(_QWORD *)(v146 + v86) = v97;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v63 = v148;
    v62 = v149;
    v60 = v145;
  }
  if (v63)
  {
    v70 = (v63 - 1) & v63;
    v71 = __clz(__rbit64(v63)) | ((_QWORD)v62 << 6);
    v72 = v62;
    goto LABEL_45;
  }
  v75 = (int64_t)(v62 + 1);
  if (__OFADD__(v62, 1))
    goto LABEL_75;
  if (v75 >= v143)
    goto LABEL_57;
  v76 = *(_QWORD *)(v144 + 8 * v75);
  v72 = v62 + 1;
  if (v76)
    goto LABEL_44;
  v72 = v62 + 2;
  if ((uint64_t)(v62 + 2) >= v143)
    goto LABEL_57;
  v76 = *(_QWORD *)(v144 + 8 * (_QWORD)v72);
  if (v76)
    goto LABEL_44;
  v72 = v62 + 3;
  if ((uint64_t)(v62 + 3) >= v143)
    goto LABEL_57;
  v76 = *(_QWORD *)(v144 + 8 * (_QWORD)v72);
  if (v76)
    goto LABEL_44;
  v72 = v62 + 4;
  if ((uint64_t)(v62 + 4) >= v143)
    goto LABEL_57;
  v76 = *(_QWORD *)(v144 + 8 * (_QWORD)v72);
  if (v76)
  {
LABEL_44:
    v70 = (v76 - 1) & v76;
    v71 = __clz(__rbit64(v76)) + ((_QWORD)v72 << 6);
LABEL_45:
    v74 = *(id *)(*(_QWORD *)(v60 + 48) + 8 * v71);
    if (!v74)
      goto LABEL_57;
    goto LABEL_46;
  }
  v77 = v62 + 5;
  while ((char *)v143 != v77)
  {
    v76 = *(_QWORD *)(v144 + 8 * (_QWORD)v77++);
    if (v76)
    {
      v72 = v77 - 1;
      goto LABEL_44;
    }
  }
LABEL_57:
  sub_1BC6ECC4C();
  v103 = v139;
  v104 = FeedItem.associatedKeywords.getter();
  v105 = v147;
  v106 = v147[17];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v26 + v106) = v104;
  v107 = FeedItem.associatedProfiles.getter();
  v108 = sub_1BC769D18(v107);
  swift_bridgeObjectRelease();
  v109 = v105[18];

  *(_QWORD *)(v26 + v109) = v108;
  v110 = objc_msgSend(v103, sel_localizedCategoryName);
  if (v110)
  {
    v111 = v110;
    v112 = sub_1BC817AE8();
    v114 = v113;

  }
  else
  {
    v112 = 0;
    v114 = 0;
  }
  v115 = (uint64_t *)(v26 + v147[19]);
  swift_bridgeObjectRelease();
  *v115 = v112;
  v115[1] = v114;
  v116 = objc_msgSend(v103, sel_localizedTitle);
  if (v116)
  {
    v117 = v116;
    v118 = sub_1BC817AE8();
    v120 = v119;

  }
  else
  {
    v118 = 0;
    v120 = 0;
  }
  v121 = (uint64_t *)(v26 + v147[20]);
  swift_bridgeObjectRelease();
  *v121 = v118;
  v121[1] = v120;
  v122 = objc_msgSend(v103, sel_localizedDescription);
  if (v122)
  {
    v123 = v122;
    v124 = sub_1BC817AE8();
    v126 = v125;

  }
  else
  {
    v124 = 0;
    v126 = 0;
  }
  v127 = v147;
  v128 = (uint64_t *)(v26 + v147[21]);
  swift_bridgeObjectRelease();
  *v128 = v124;
  v128[1] = v126;
  *(_QWORD *)(v26 + v127[22]) = objc_msgSend(v103, sel_sortHint);
  if ((objc_msgSend(v103, sel_searchSectionHintRawValue) & 0x80000000) != 0)
    v129 = 13;
  else
    v129 = _s14HealthPlatform13SearchSectionO8rawValueACSgs5Int16V_tcfC_0((uint64_t)objc_msgSend(v103, sel_searchSectionHintRawValue));
  v130 = v147;
  *(_BYTE *)(v26 + v147[23]) = v129;
  *(_BYTE *)(v26 + v130[24]) = objc_msgSend(v103, sel_indexForSearch);
  *(_BYTE *)(v26 + v130[25]) = objc_msgSend(v103, sel_hideInDiscover);
  v131 = objc_msgSend(v103, sel_pinnedContentIdentifier);
  if (v131)
  {
    v132 = v131;
    v133 = sub_1BC817AE8();
    v135 = v134;

  }
  else
  {
    v133 = 0;
    v135 = 0;
  }
  v136 = v147;
  v137 = (uint64_t *)(v26 + v147[26]);
  swift_bridgeObjectRelease();
  *v137 = v133;
  v137[1] = v135;
  FeedItem.hostViewStyle.getter((char *)&v151);

  *(_BYTE *)(v26 + v136[28]) = (_BYTE)v151;
}

uint64_t sub_1BC77FB40(uint64_t a1)
{
  void *v1;
  void **p_weak_ivar_lyt;
  id v4;
  objc_class *v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  void **v17;
  void *v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  void *v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  void *v37;
  const char *v38;
  void *v39;
  id v40;
  uint64_t v41;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  id v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t result;
  uint64_t v51;
  int64_t v52;
  uint64_t v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;

  p_weak_ivar_lyt = &CloudSyncStatusInputSignal.weak_ivar_lyt;
  v4 = objc_msgSend(v1, sel_featureTags);
  v5 = (objc_class *)type metadata accessor for EncodedFeatureTag();
  sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
  v6 = sub_1BC817D7C();

  v7 = v1;
  sub_1BC7808C0(v6, v7);
  swift_bridgeObjectRelease();

  v8 = (void *)sub_1BC817D70();
  objc_msgSend(v7, sel_setFeatureTags_, v8);

  sub_1BC77ED48();
  v9 = sub_1BC6EBB28((uint64_t)&unk_1E75163C0);
  v54 = v7;
  FeedItem.contentKind.getter((char *)&v59);
  LOBYTE(v7) = sub_1BC7CA078(v59, v9);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    v10 = v54;
    v11 = objc_msgSend(v10, sel_uniqueIdentifier);
    sub_1BC817AE8();

    sub_1BC77EEB0();
    swift_bridgeObjectRelease();
  }
  v12 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for PluginFeedItem() + 64));
  v51 = v12 + 64;
  v13 = 1 << *(_BYTE *)(v12 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v12 + 64);
  v52 = (unint64_t)(v13 + 63) >> 6;
  v53 = v12;
  swift_bridgeObjectRetain();
  v16 = 0;
  v17 = &CloudSyncStatusInputSignal.weak_ivar_lyt;
  v18 = v54;
  if (!v15)
    goto LABEL_7;
LABEL_6:
  v55 = (v15 - 1) & v15;
  for (i = __clz(__rbit64(v15)) | (v16 << 6); ; i = __clz(__rbit64(v21)) + (v16 << 6))
  {
    v23 = 16 * i;
    v24 = (uint64_t *)(*(_QWORD *)(v53 + 48) + v23);
    v25 = v24[1];
    v58 = *v24;
    v26 = (uint64_t *)(*(_QWORD *)(v53 + 56) + v23);
    v28 = *v26;
    v27 = v26[1];
    swift_bridgeObjectRetain();
    v56 = v28;
    v57 = v27;
    sub_1BC6ECBE8(v28, v27);
    v29 = objc_msgSend(v18, (SEL)v17[278]);
    if (!v29)
      break;
    v30 = v29;
    v31 = objc_msgSend(v18, (SEL)v17[278]);
    if (!v31)
      break;
    v32 = v31;
    v33 = v18;
    v34 = objc_msgSend(v18, (SEL)p_weak_ivar_lyt[321]);
    v35 = sub_1BC817D7C();

    swift_bridgeObjectRetain();
    sub_1BC780558(v35, v58, v25);
    v37 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v37)
    {
      v38 = (const char *)p_weak_ivar_lyt[321];
      v39 = v33;
      v40 = objc_msgSend(v33, v38);
      v41 = sub_1BC817D7C();

      v59 = v41;
      v42 = (void *)sub_1BC817D70();
      swift_bridgeObjectRelease();
      objc_msgSend(v39, sel_setFeatureTags_, v42);

      objc_msgSend(v32, sel_deleteObject_, v37);
    }

    v43 = (void *)objc_opt_self();
    swift_bridgeObjectRetain();
    sub_1BC6ECBE8(v56, v57);
    v44 = v30;
    v45 = (void *)sub_1BC817AC4();
    v46 = objc_msgSend(v43, sel_entityForName_inManagedObjectContext_, v45, v44);

    if (!v46)
      break;
    v47 = objc_msgSend(objc_allocWithZone(v5), sel_initWithEntity_insertIntoManagedObjectContext_, v46, v44);
    v48 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v47, sel_setName_, v48);

    v49 = (void *)sub_1BC816E58();
    objc_msgSend(v47, sel_setData_, v49);
    sub_1BC6ECB60(v56, v57);

    v18 = v54;
    objc_msgSend(v54, sel_addFeatureTagsObject_, v47);

    sub_1BC6ECB60(v56, v57);
    swift_bridgeObjectRelease();
    p_weak_ivar_lyt = (void **)(&CloudSyncStatusInputSignal + 56);
    v17 = (void **)(&CloudSyncStatusInputSignal + 56);
    v15 = v55;
    if (v55)
      goto LABEL_6;
LABEL_7:
    if (__OFADD__(v16++, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      break;
    }
    if (v16 >= v52)
      return swift_release();
    v21 = *(_QWORD *)(v51 + 8 * v16);
    if (!v21)
    {
      v22 = v16 + 1;
      if (v16 + 1 >= v52)
        return swift_release();
      v21 = *(_QWORD *)(v51 + 8 * v22);
      if (!v21)
      {
        v22 = v16 + 2;
        if (v16 + 2 >= v52)
          return swift_release();
        v21 = *(_QWORD *)(v51 + 8 * v22);
        if (!v21)
        {
          v22 = v16 + 3;
          if (v16 + 3 >= v52)
            return swift_release();
          v21 = *(_QWORD *)(v51 + 8 * v22);
          if (!v21)
          {
            while (1)
            {
              v16 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_31;
              if (v16 >= v52)
                return swift_release();
              v21 = *(_QWORD *)(v51 + 8 * v16);
              ++v22;
              if (v21)
                goto LABEL_17;
            }
          }
        }
      }
      v16 = v22;
    }
LABEL_17:
    v55 = (v21 - 1) & v21;
  }
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

_OWORD *sub_1BC7801B4(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BC6EFBDC(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BC78021C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_1BC817050();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_1BC7802A8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

unint64_t sub_1BC7802F8(unint64_t result, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = a5[7] + 16 * result;
  *(_QWORD *)v5 = a3;
  *(_BYTE *)(v5 + 8) = a4 & 1;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1BC780348(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1BC780390(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_1BC7803DC(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1BC6FC848(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1BC780448(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1BC817200();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

_OWORD *sub_1BC7804E0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  result = sub_1BC6EFBDC(a3, (_OWORD *)(a4[7] + 32 * a1));
  v8 = a4[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a4[2] = v10;
  return result;
}

void sub_1BC780558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  unint64_t v34;
  void *v35;

  v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC8181C0();
    type metadata accessor for EncodedFeatureTag();
    sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
    sub_1BC817DB8();
    v5 = v30;
    v27 = v31;
    v6 = v32;
    v7 = v33;
    v8 = v34;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(a1 + 32);
    v27 = a1 + 56;
    v10 = ~v9;
    v11 = -v9;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v8 = v12 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v6 = v10;
    v7 = 0;
  }
  v25 = v6;
  v26 = (unint64_t)(v6 + 64) >> 6;
  v28 = v7;
  v29 = v8;
  if (v5 < 0)
    goto LABEL_10;
LABEL_8:
  if (v8)
  {
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v14 = v13 | (v7 << 6);
    goto LABEL_29;
  }
  v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 < v26)
    {
      v17 = *(_QWORD *)(v27 + 8 * v16);
      ++v7;
      if (v17)
        goto LABEL_28;
      v7 = v16 + 1;
      if (v16 + 1 >= v26)
        goto LABEL_36;
      v17 = *(_QWORD *)(v27 + 8 * v7);
      if (v17)
        goto LABEL_28;
      v7 = v16 + 2;
      if (v16 + 2 >= v26)
        goto LABEL_36;
      v17 = *(_QWORD *)(v27 + 8 * v7);
      if (v17)
        goto LABEL_28;
      v7 = v16 + 3;
      if (v16 + 3 >= v26)
        goto LABEL_36;
      v17 = *(_QWORD *)(v27 + 8 * v7);
      if (v17)
      {
LABEL_28:
        v8 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_29:
        v15 = *(id *)(*(_QWORD *)(v5 + 48) + 8 * v14);
        if (v15)
        {
          while (1)
          {
            v19 = a3;
            v20 = objc_msgSend(v15, sel_name, v25);
            v21 = sub_1BC817AE8();
            v23 = v22;

            a3 = v19;
            if (v21 == a2 && v23 == v19)
              break;
            v24 = sub_1BC818694();
            swift_bridgeObjectRelease();
            if ((v24 & 1) != 0)
              goto LABEL_36;

            v28 = v7;
            v29 = v8;
            if ((v5 & 0x8000000000000000) == 0)
              goto LABEL_8;
LABEL_10:
            if (sub_1BC81822C())
            {
              type metadata accessor for EncodedFeatureTag();
              swift_unknownObjectRetain();
              swift_dynamicCast();
              v15 = v35;
              swift_unknownObjectRelease();
              v8 = v29;
              if (v35)
                continue;
            }
            goto LABEL_36;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_36;
      }
      v7 = v16 + 4;
      if (v16 + 4 < v26)
      {
        v17 = *(_QWORD *)(v27 + 8 * v7);
        if (!v17)
        {
          v18 = v28 + 6;
          while (v26 != v18)
          {
            v17 = *(_QWORD *)(v27 + 8 * v18++);
            if (v17)
            {
              v7 = v18 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_36;
        }
        goto LABEL_28;
      }
    }
LABEL_36:
    sub_1BC6ECC4C();
    return;
  }
  __break(1u);
}

void sub_1BC7808C0(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;

  v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC8181C0();
    type metadata accessor for EncodedFeatureTag();
    sub_1BC6E1788(&qword_1ED6BA708, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, MEMORY[0x1E0DEFCF8]);
    sub_1BC817DB8();
    v3 = v22;
    v21 = v23;
    v4 = v24;
    v5 = v25;
    v6 = v26;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a1 + 32);
    v21 = a1 + 56;
    v8 = ~v7;
    v9 = -v7;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v6 = v10 & *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    v4 = v8;
    v5 = 0;
  }
  v20 = (unint64_t)(v4 + 64) >> 6;
  while (v3 < 0)
  {
    if (!sub_1BC81822C())
      goto LABEL_34;
    type metadata accessor for EncodedFeatureTag();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v27;
    swift_unknownObjectRelease();
    v13 = v5;
    v11 = v6;
    if (!v27)
      goto LABEL_34;
LABEL_32:
    v18 = objc_msgSend(a2, sel_managedObjectContext);
    if (v18)
    {
      v19 = v18;
      objc_msgSend(v18, sel_deleteObject_, v14);

      v14 = v19;
    }

    v5 = v13;
    v6 = v11;
  }
  if (v6)
  {
    v11 = (v6 - 1) & v6;
    v12 = __clz(__rbit64(v6)) | (v5 << 6);
    v13 = v5;
LABEL_31:
    v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_34;
    goto LABEL_32;
  }
  v15 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v15 >= v20)
      goto LABEL_34;
    v16 = *(_QWORD *)(v21 + 8 * v15);
    v13 = v5 + 1;
    if (!v16)
    {
      v13 = v5 + 2;
      if (v5 + 2 >= v20)
        goto LABEL_34;
      v16 = *(_QWORD *)(v21 + 8 * v13);
      if (!v16)
      {
        v13 = v5 + 3;
        if (v5 + 3 >= v20)
          goto LABEL_34;
        v16 = *(_QWORD *)(v21 + 8 * v13);
        if (!v16)
        {
          v13 = v5 + 4;
          if (v5 + 4 >= v20)
            goto LABEL_34;
          v16 = *(_QWORD *)(v21 + 8 * v13);
          if (!v16)
          {
            v13 = v5 + 5;
            if (v5 + 5 >= v20)
              goto LABEL_34;
            v16 = *(_QWORD *)(v21 + 8 * v13);
            if (!v16)
            {
              v17 = v5 + 6;
              while (v20 != v17)
              {
                v16 = *(_QWORD *)(v21 + 8 * v17++);
                if (v16)
                {
                  v13 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_1BC6ECC4C();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    v11 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

void sub_1BC780BB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BAB08)
  {
    v0 = type metadata accessor for ValueJSONWrapper(0, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970]);
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BAB08);
  }
}

uint64_t static InputSignalIdentifier.healthKitUnitPreferences.getter()
{
  return sub_1BC8173E0();
}

uint64_t static InputSignalSet.LookupKey.healthKitUnitPreferences.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  type metadata accessor for HealthKitUnitPreferencesInputSignal();
  return sub_1BC817260();
}

uint64_t type metadata accessor for HealthKitUnitPreferencesInputSignal()
{
  return objc_opt_self();
}

_QWORD *HealthKitUnitPreferencesInputSignal.__allocating_init(context:observer:healthStore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t ObjectType;

  ObjectType = swift_getObjectType();
  return sub_1BC782AC0(a1, a3, a4, a5, v5, ObjectType, a2);
}

_QWORD *HealthKitUnitPreferencesInputSignal.__allocating_init(context:observer:provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v11 = *(_QWORD *)(a5 + 24);
  v12 = *(_QWORD *)(a5 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a5, v11);
  v14 = sub_1BC782B6C(a1, a2, a3, a4, v13, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a5);
  return v14;
}

_QWORD *HealthKitUnitPreferencesInputSignal.init(context:observer:provider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;

  v11 = *(_QWORD *)(a5 + 24);
  v12 = *(_QWORD *)(a5 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a5, v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_1BC782A20(a1, a2, a3, a4, (uint64_t)v15, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a5);
  return v17;
}

uint64_t (*HealthKitUnitPreferencesInputSignal.Anchor.preferences.modify())()
{
  return nullsub_1;
}

void static HealthKitUnitPreferencesInputSignal.Anchor.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  sub_1BC7027E8(*a1, *a2);
}

void HealthKitUnitPreferencesInputSignal.Anchor.hasDifference(from:for:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  id v15;
  int64_t v16;
  unint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  unint64_t v22;
  char v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  unint64_t v28;
  char v29;
  id v30;
  id v31;
  char v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v3 = *a1;
  v4 = *a2;
  v5 = *v2;
  if ((*a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BC8181C0();
    sub_1BC6ED7C0(0, &qword_1ED6B9658);
    sub_1BC782C3C();
    sub_1BC817DB8();
    v4 = v40;
    v35 = v41;
    v6 = v42;
    v7 = v43;
    v8 = v44;
  }
  else
  {
    v9 = -1 << *(_BYTE *)(v4 + 32);
    v35 = v4 + 56;
    v6 = ~v9;
    v10 = -v9;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v8 = v11 & *(_QWORD *)(v4 + 56);
    swift_bridgeObjectRetain();
    v7 = 0;
  }
  v34 = (unint64_t)(v6 + 64) >> 6;
  v33 = v5;
  v37 = v5 & 0xC000000000000001;
  v36 = v3 & 0xC000000000000001;
  v38 = v3;
  while (1)
  {
    v12 = v7;
    if ((v4 & 0x8000000000000000) == 0)
      break;
    if (!sub_1BC81822C())
      goto LABEL_56;
    sub_1BC6ED7C0(0, &qword_1ED6B9658);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v15 = v39;
    swift_unknownObjectRelease();
    if (!v39)
      goto LABEL_56;
LABEL_30:
    if (v37)
    {
      v19 = v15;
      if (sub_1BC81846C())
      {
        sub_1BC6ED7C0(0, &qword_1ED6B96D0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v20 = v39;
        swift_unknownObjectRelease();

        if (!v38)
          goto LABEL_49;
        goto LABEL_41;
      }

    }
    else if (*(_QWORD *)(v33 + 16))
    {
      v21 = v15;
      v22 = sub_1BC70666C((uint64_t)v21);
      if ((v23 & 1) != 0)
      {
        v20 = *(void **)(*(_QWORD *)(v33 + 56) + 8 * v22);
        v24 = v20;

        if (!v38)
          goto LABEL_49;
        goto LABEL_41;
      }

    }
    v20 = 0;
    if (!v38)
      goto LABEL_49;
LABEL_41:
    if (v36)
    {
      v25 = v15;
      if (!sub_1BC81846C())
      {

LABEL_49:
        v26 = 0;
        goto LABEL_50;
      }
      sub_1BC6ED7C0(0, &qword_1ED6B96D0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v26 = v39;
      swift_unknownObjectRelease();

    }
    else
    {
      if (!*(_QWORD *)(v38 + 16))
        goto LABEL_49;
      v27 = v15;
      v28 = sub_1BC70666C((uint64_t)v27);
      if ((v29 & 1) == 0)
      {

        goto LABEL_49;
      }
      v26 = *(void **)(*(_QWORD *)(v38 + 56) + 8 * v28);
      v30 = v26;

    }
LABEL_50:
    if (v20)
    {
      if (!v26)
      {

        v26 = v20;
LABEL_55:

LABEL_56:
        sub_1BC6ECC4C();
        return;
      }
      sub_1BC6ED7C0(0, &qword_1ED6B96D0);
      v31 = v20;
      v32 = sub_1BC8180D0();

      if ((v32 & 1) == 0)
        goto LABEL_56;
    }
    else
    {

      if (v26)
        goto LABEL_55;
    }
  }
  if (v8)
  {
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v14 = v13 | (v7 << 6);
LABEL_29:
    v15 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    if (!v15)
      goto LABEL_56;
    goto LABEL_30;
  }
  v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 >= v34)
      goto LABEL_56;
    v17 = *(_QWORD *)(v35 + 8 * v16);
    ++v7;
    if (!v17)
    {
      v7 = v12 + 2;
      if (v12 + 2 >= v34)
        goto LABEL_56;
      v17 = *(_QWORD *)(v35 + 8 * v7);
      if (!v17)
      {
        v7 = v12 + 3;
        if (v12 + 3 >= v34)
          goto LABEL_56;
        v17 = *(_QWORD *)(v35 + 8 * v7);
        if (!v17)
        {
          v7 = v12 + 4;
          if (v12 + 4 >= v34)
            goto LABEL_56;
          v17 = *(_QWORD *)(v35 + 8 * v7);
          if (!v17)
          {
            v18 = v12 + 5;
            while (v34 != v18)
            {
              v17 = *(_QWORD *)(v35 + 8 * v18++);
              if (v17)
              {
                v7 = v18 - 1;
                goto LABEL_28;
              }
            }
            goto LABEL_56;
          }
        }
      }
    }
LABEL_28:
    v8 = (v17 - 1) & v17;
    v14 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_29;
  }
  __break(1u);
}

HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor __swiftcall HealthKitUnitPreferencesInputSignal.Anchor.merged(with:)(HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor with)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor result;

  v2 = v1;
  v3 = *(_QWORD *)with.preferences._rawValue;
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC783134(v4, v3);
  result.preferences._rawValue = (void *)swift_bridgeObjectRelease();
  *v2 = v5;
  return result;
}

uint64_t sub_1BC7813E4()
{
  return 0x6E65726566657270;
}

uint64_t sub_1BC781404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E65726566657270 && a2 == 0xEB00000000736563)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC818694();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC7814B0()
{
  sub_1BC7834E8();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7814D8()
{
  sub_1BC7834E8();
  return sub_1BC818808();
}

uint64_t HealthKitUnitPreferencesInputSignal.Anchor.init(from:)@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  _QWORD v15[2];
  unint64_t *v16;

  sub_1BC78352C(0, &qword_1ED6B9748, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7834E8();
  sub_1BC8187E4();
  if (!v2)
  {
    sub_1BC70E978();
    sub_1BC8185C8();
    v16 = a2;
    v11 = v15[0];
    v10 = v15[1];
    sub_1BC6ED7C0(0, &qword_1ED6BB3A0);
    sub_1BC6ED7C0(0, &qword_1ED6B9658);
    sub_1BC6ED7C0(0, &qword_1ED6B96D0);
    v12 = sub_1BC817F44();
    v13 = v16;
    if (!v12)
      v12 = sub_1BC711158(MEMORY[0x1E0DEE9D8]);
    sub_1BC6ECB60(v11, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *v13 = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t HealthKitUnitPreferencesInputSignal.Anchor.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v15;
  id v17[3];

  v17[2] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BC78352C(0, &qword_1ED6B8EE8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17[-1] - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7834E8();
  sub_1BC8187F0();
  v7 = (void *)objc_opt_self();
  sub_1BC6ED7C0(0, &qword_1ED6B9658);
  sub_1BC6ED7C0(0, &qword_1ED6B96D0);
  sub_1BC782C3C();
  v8 = (void *)sub_1BC817A28();
  v17[0] = 0;
  v9 = objc_msgSend(v7, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, v17);

  v10 = v17[0];
  if (v9)
  {
    v11 = (void *)sub_1BC816E64();
    v13 = v12;

    v17[0] = v11;
    v17[1] = v13;
    sub_1BC70EADC();
    sub_1BC818634();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_1BC6ECB60((uint64_t)v11, (unint64_t)v13);
  }
  else
  {
    v15 = v10;
    sub_1BC816D5C();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

uint64_t sub_1BC781920@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC783134(v4, v3);
  result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_1BC781984@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  return HealthKitUnitPreferencesInputSignal.Anchor.init(from:)(a1, a2);
}

uint64_t sub_1BC781998(_QWORD *a1)
{
  return HealthKitUnitPreferencesInputSignal.Anchor.encode(to:)(a1);
}

void sub_1BC7819AC(uint64_t *a1, uint64_t *a2)
{
  sub_1BC7027E8(*a1, *a2);
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.identifier.getter()
{
  return sub_1BC8173E0();
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.quantityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.quantityTypes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*HealthKitUnitPreferencesInputSignal.Configuration.quantityTypes.modify())()
{
  return nullsub_1;
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.init(quantityTypes:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static HealthKitUnitPreferencesInputSignal.Configuration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  sub_1BC704D60(*a1, *a2);
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.hash(into:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1BC70D148(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t HealthKitUnitPreferencesInputSignal.Configuration.hashValue.getter()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70D148((uint64_t)v3, v1);
  return sub_1BC818778();
}

void sub_1BC781AA4(uint64_t *a1, uint64_t *a2)
{
  sub_1BC704D60(*a1, *a2);
}

uint64_t sub_1BC781AB0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70D148((uint64_t)v3, v1);
  return sub_1BC818778();
}

void sub_1BC781AF4(uint64_t a1)
{
  uint64_t *v1;

  sub_1BC70D148(a1, *v1);
}

uint64_t sub_1BC781AFC()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC70D148((uint64_t)v3, v1);
  return sub_1BC818778();
}

uint64_t HealthKitUnitPreferencesInputSignal.identifier.getter()
{
  return sub_1BC8173E0();
}

uint64_t HealthKitUnitPreferencesInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

Swift::Void __swiftcall HealthKitUnitPreferencesInputSignal.beginObservation(from:configurations:)(HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor_optional from, Swift::OpaquePointer configurations)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  unint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;

  v3 = v2;
  v4 = MEMORY[0x1E0DEE9E8];
  v11 = MEMORY[0x1E0DEE9E8];
  v5 = *(_QWORD *)(*(_QWORD *)&from.is_nil + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v5; ++i)
    {
      v7 = swift_bridgeObjectRetain();
      sub_1BC705410(v7);
    }
    swift_bridgeObjectRelease();
    v4 = v11;
  }
  v8 = (os_unfair_lock_s *)v3[4];
  v9 = (uint64_t *)&v8[4];
  v10 = v8 + 8;
  os_unfair_lock_lock(v8 + 8);
  sub_1BC781C34(v9, v4, v3);
  os_unfair_lock_unlock(v10);
  swift_bridgeObjectRelease();
}

uint64_t sub_1BC781C34(uint64_t *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v6;
  void **p_weak_ivar_lyt;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t);
  _QWORD v26[6];

  a1[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *a1;
  p_weak_ivar_lyt = &CloudSyncStatusInputSignal.weak_ivar_lyt;
  if (*a1)
  {
    v8 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v9 = objc_msgSend(v8, sel_defaultCenter);
    v10 = *MEMORY[0x1E0CB60C0];
    v12 = a3[8];
    v11 = a3[9];
    __swift_project_boxed_opaque_existential_1(a3 + 5, v12);
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 16);
    swift_unknownObjectRetain();
    objc_msgSend(v9, sel_removeObserver_name_object_, v6, v10, v13(v12, v11));

    swift_unknownObjectRelease_n();
    p_weak_ivar_lyt = (void **)(&CloudSyncStatusInputSignal + 56);
    swift_unknownObjectRelease();
  }
  else
  {
    v10 = *MEMORY[0x1E0CB60C0];
  }
  v14 = objc_msgSend((id)objc_opt_self(), (SEL)p_weak_ivar_lyt[357]);
  v15 = a3[8];
  v16 = a3[9];
  __swift_project_boxed_opaque_existential_1(a3 + 5, v15);
  v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  v18 = swift_allocObject();
  swift_weakInit();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v18;
  *(_QWORD *)(v19 + 24) = a2;
  v26[4] = sub_1BC783B10;
  v26[5] = v19;
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 1107296256;
  v26[2] = sub_1BC7821D0;
  v26[3] = &block_descriptor_10_0;
  v20 = _Block_copy(v26);
  swift_bridgeObjectRetain();
  swift_release();
  v21 = objc_msgSend(v14, sel_addObserverForName_object_queue_usingBlock_, v10, v17, 0, v20);
  _Block_release(v20);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *a1 = (uint64_t)v21;
  v22 = a3[8];
  v23 = a3[9];
  __swift_project_boxed_opaque_existential_1(a3 + 5, v22);
  v24 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t))(v23 + 8);
  swift_retain();
  v24(a2, sub_1BC783B18, a3, v22, v23);
  return swift_release();
}

_QWORD *sub_1BC781EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t);

  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    v6 = result[8];
    v7 = result[9];
    __swift_project_boxed_opaque_existential_1(result + 5, v6);
    v8 = *(void (**)(uint64_t, uint64_t (*)(uint64_t, void *), _QWORD *, uint64_t, uint64_t))(v7 + 8);
    swift_retain();
    v8(a3, sub_1BC783B20, v5, v6, v7);
    return (_QWORD *)swift_release_n();
  }
  return result;
}

uint64_t sub_1BC781F6C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1BC817590();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_getObjectType();
    v10 = a2;
    sub_1BC8171E8();
    v11 = a2;
    v12 = a2;
    v13 = sub_1BC81756C();
    v14 = sub_1BC817E84();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v23 = v6;
      v17 = (_QWORD *)v16;
      *(_DWORD *)v15 = 138412290;
      v18 = a2;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      v25 = v19;
      sub_1BC818148();
      *v17 = v19;

      _os_log_impl(&dword_1BC6DD000, v13, v14, "Failed to fetch updated unit preferences: %@", v15, 0xCu);
      sub_1BC6EFA40();
      swift_arrayDestroy();
      v20 = v17;
      v6 = v23;
      MEMORY[0x1BCCF5BA4](v20, -1, -1);
      MEMORY[0x1BCCF5BA4](v15, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    swift_getObjectType();
    v24 = a3;
    v25 = a1;
    sub_1BC783764(&qword_1ED6B7CC8, (uint64_t)&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal);
    swift_bridgeObjectRetain();
    sub_1BC817374();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BC7821D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1BC816CE4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1BC816CA8();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC782274(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  os_log_t v21;
  uint8_t *v22;
  os_log_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1BC817590();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    swift_getObjectType();
    v10 = a2;
    sub_1BC8171E8();
    v11 = a2;
    v12 = a2;
    v13 = sub_1BC81756C();
    v14 = sub_1BC817E84();
    if (os_log_type_enabled(v13, v14))
    {
      v26 = v7;
      v15 = swift_slowAlloc();
      v27 = v6;
      v16 = (uint8_t *)v15;
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v17 = a2;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v24 = v13;
      v19 = v18;
      v29 = v18;
      v7 = v26;
      sub_1BC818148();
      v20 = v25;
      *v25 = v19;

      v21 = v24;
      _os_log_impl(&dword_1BC6DD000, v24, v14, "Failed to fetch initial unit preferences; returning no values to avoid blocking observation: %@",
        v16,
        0xCu);
      sub_1BC6EFA40();
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v20, -1, -1);
      v22 = v16;
      v6 = v27;
      MEMORY[0x1BCCF5BA4](v22, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  swift_getObjectType();
  v28 = a3;
  v29 = a1;
  sub_1BC783764(&qword_1ED6B7CC8, (uint64_t)&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal);
  swift_bridgeObjectRetain();
  sub_1BC817374();
  return swift_bridgeObjectRelease();
}

Swift::Void __swiftcall HealthKitUnitPreferencesInputSignal.stopObservation()()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;

  v1 = (os_unfair_lock_s *)v0[4];
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1BC78253C(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t *sub_1BC78253C(uint64_t *result, _QWORD *a2)
{
  uint64_t v2;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);

  v2 = *result;
  if (*result)
  {
    v4 = (void *)objc_opt_self();
    swift_unknownObjectRetain();
    v5 = objc_msgSend(v4, sel_defaultCenter);
    v6 = *MEMORY[0x1E0CB60C0];
    v7 = a2[8];
    v8 = a2[9];
    __swift_project_boxed_opaque_existential_1(a2 + 5, v7);
    v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
    swift_unknownObjectRetain();
    objc_msgSend(v5, sel_removeObserver_name_object_, v2, v6, v9(v7, v8));

    swift_unknownObjectRelease_n();
    return (uint64_t *)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t HealthKitUnitPreferencesInputSignal.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t HealthKitUnitPreferencesInputSignal.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 40);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC782694()
{
  return sub_1BC8173E0();
}

uint64_t sub_1BC7826B0()
{
  return swift_unknownObjectRetain();
}

void sub_1BC7826D8(HealthPlatform::HealthKitUnitPreferencesInputSignal::Anchor_optional a1, Swift::OpaquePointer a2)
{
  HealthKitUnitPreferencesInputSignal.beginObservation(from:configurations:)(a1, a2);
}

void sub_1BC7826F8()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 32);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 8;
  os_unfair_lock_lock(v1 + 8);
  sub_1BC783AA8(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1BC782748()
{
  sub_1BC783764(&qword_1ED6B7CC8, (uint64_t)&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal);
  return sub_1BC8171AC();
}

void HKHealthStore.fetchUnitPreferences(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v6;
  void *v7;
  _QWORD v8[6];

  sub_1BC6ED7C0(0, &qword_1ED6B9658);
  sub_1BC782C3C();
  v6 = (void *)sub_1BC817D70();
  v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1BC782864;
  v8[3] = &block_descriptor_17;
  v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_preferredUnitsForQuantityTypes_completion_, v6, v7);
  _Block_release(v7);

}

void sub_1BC782864(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  sub_1BC6ED7C0(0, &qword_1ED6B9658);
  sub_1BC6ED7C0(0, &qword_1ED6B96D0);
  sub_1BC782C3C();
  v5 = sub_1BC817A34();
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();
  swift_bridgeObjectRelease();

}

uint64_t HKHealthStore.notificationObject.getter()
{
  return swift_unknownObjectRetain();
}

void sub_1BC782930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v9[6];

  v6 = *v3;
  sub_1BC6ED7C0(0, &qword_1ED6B9658);
  sub_1BC782C3C();
  v7 = (void *)sub_1BC817D70();
  v9[4] = a2;
  v9[5] = a3;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1BC782864;
  v9[3] = &block_descriptor_3_1;
  v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_preferredUnitsForQuantityTypes_completion_, v7, v8);
  _Block_release(v8);

}

uint64_t sub_1BC782A18()
{
  return swift_unknownObjectRetain();
}

_QWORD *sub_1BC782A20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v16;
  uint64_t v17;

  a6[8] = a7;
  a6[9] = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a6 + 5);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a5, a7);
  sub_1BC783B28();
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 32) = 0;
  v17 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = v17;
  a6[3] = a2;
  a6[4] = v16;
  a6[2] = a1;
  a6[10] = a3;
  a6[11] = a4;
  return a6;
}

_QWORD *sub_1BC782AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  v12 = (_QWORD *)swift_allocObject();
  v12[8] = sub_1BC6ED7C0(0, &qword_1ED6B84B0);
  v12[9] = &protocol witness table for HKHealthStore;
  v12[5] = a4;
  sub_1BC783B28();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + 32) = 0;
  v14 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v13 + 16) = 0;
  *(_QWORD *)(v13 + 24) = v14;
  v12[3] = a7;
  v12[4] = v13;
  v12[2] = a1;
  v12[10] = a2;
  v12[11] = a3;
  return v12;
}

_QWORD *sub_1BC782B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  uint64_t v20;

  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, a7);
  return sub_1BC782A20(a1, a2, a3, a4, (uint64_t)v17, v18, a7, a8);
}

unint64_t sub_1BC782C3C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B9660;
  if (!qword_1ED6B9660)
  {
    v1 = sub_1BC6ED7C0(255, &qword_1ED6B9658);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B9660);
  }
  return result;
}

void sub_1BC782C94(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  unint64_t v23;
  char v24;
  id v25;
  char v26;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  void *v33;

  v29 = 0;
  v5 = 0;
  v30 = a3 + 64;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 64);
  v31 = (unint64_t)(v6 + 63) >> 6;
  v9 = a4 & 0xC000000000000001;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v5 << 6);
LABEL_18:
    v15 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v11);
    v16 = *(void **)(*(_QWORD *)(a3 + 56) + 8 * v11);
    if (v9)
    {
      v17 = v15;
      v18 = v16;
      if (!sub_1BC81846C())
        goto LABEL_4;
      sub_1BC6ED7C0(0, &qword_1ED6B96D0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v33;
      swift_unknownObjectRelease();
      if (!v33)
        goto LABEL_4;
LABEL_25:
      sub_1BC6ED7C0(0, &qword_1ED6B96D0);
      v25 = v16;
      v26 = sub_1BC8180D0();

      if ((v26 & 1) != 0)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        v12 = __OFADD__(v29++, 1);
        if (v12)
          goto LABEL_36;
      }
    }
    else
    {
      v20 = *(_QWORD *)(a4 + 16);
      v21 = v15;
      v22 = v16;
      if (v20)
      {
        v23 = sub_1BC70666C((uint64_t)v21);
        if ((v24 & 1) != 0)
        {
          v19 = *(id *)(*(_QWORD *)(a4 + 56) + 8 * v23);
          if (v19)
            goto LABEL_25;
        }
      }
LABEL_4:

    }
  }
  v12 = __OFADD__(v5++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v5 >= v31)
    goto LABEL_33;
  v13 = *(_QWORD *)(v30 + 8 * v5);
  if (v13)
  {
LABEL_17:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v5 << 6);
    goto LABEL_18;
  }
  v14 = v5 + 1;
  if (v5 + 1 >= v31)
    goto LABEL_33;
  v13 = *(_QWORD *)(v30 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v5 + 2;
  if (v5 + 2 >= v31)
    goto LABEL_33;
  v13 = *(_QWORD *)(v30 + 8 * v14);
  if (v13)
    goto LABEL_16;
  v14 = v5 + 3;
  if (v5 + 3 >= v31)
  {
LABEL_33:
    sub_1BC7E5834(a1, a2, v29, a3);
    return;
  }
  v13 = *(_QWORD *)(v30 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v5 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v31)
      goto LABEL_33;
    v13 = *(_QWORD *)(v30 + 8 * v5);
    ++v14;
    if (v13)
      goto LABEL_17;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

uint64_t sub_1BC782F80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_1BC782C94((_QWORD *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_1BC782C94((unint64_t *)v12, v7, a1, a2);
    v11 = v13;
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCF5BA4](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_1BC783134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  unint64_t v16;
  char v17;
  id v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  id v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;

  if ((a1 & 0xC000000000000001) == 0)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BC782F80(a1, a2);
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v4 = MEMORY[0x1E0DEE9E0];
  v40 = MEMORY[0x1E0DEE9E0];
  sub_1BC818400();
  swift_bridgeObjectRetain();
  if (!sub_1BC818484())
    goto LABEL_29;
  v6 = v5;
  sub_1BC6ED7C0(0, &qword_1ED6B9658);
  do
  {
    swift_dynamicCast();
    sub_1BC6ED7C0(0, &qword_1ED6B96D0);
    swift_dynamicCast();
    v7 = v38;
    if ((a2 & 0xC000000000000001) != 0)
    {
      v10 = v38;
      v11 = v39;
      if (!sub_1BC81846C())
        goto LABEL_4;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v12 = v6;
      swift_unknownObjectRelease();
      if (!v6)
        goto LABEL_4;
    }
    else
    {
      v13 = *(_QWORD *)(a2 + 16);
      v14 = v38;
      v15 = v39;
      if (!v13
        || (v16 = sub_1BC70666C((uint64_t)v14), (v17 & 1) == 0)
        || (v12 = *(id *)(*(_QWORD *)(a2 + 56) + 8 * v16)) == 0)
      {
LABEL_4:

        v7 = v39;
        goto LABEL_5;
      }
    }
    v18 = v39;
    v19 = sub_1BC8180D0();

    if ((v19 & 1) != 0)
    {
      v20 = v40;
      v21 = *(_QWORD *)(v40 + 16);
      if (*(_QWORD *)(v40 + 24) <= v21)
      {
        v24 = v21 + 1;
        v25 = v38;
        v26 = v18;
        sub_1BC70A01C(v24, 1);
        v20 = v40;
      }
      else
      {
        v22 = v38;
        v23 = v18;
      }
      result = sub_1BC8180C4();
      v28 = v20 + 64;
      v29 = -1 << *(_BYTE *)(v20 + 32);
      v30 = result & ~v29;
      v31 = v30 >> 6;
      if (((-1 << v30) & ~*(_QWORD *)(v20 + 64 + 8 * (v30 >> 6))) != 0)
      {
        v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v20 + 64 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v33 = 0;
        v34 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          v35 = v31 == v34;
          if (v31 == v34)
            v31 = 0;
          v33 |= v35;
          v36 = *(_QWORD *)(v28 + 8 * v31);
        }
        while (v36 == -1);
        v32 = __clz(__rbit64(~v36)) + (v31 << 6);
      }
      *(_QWORD *)(v28 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
      v37 = 8 * v32;
      *(_QWORD *)(*(_QWORD *)(v20 + 48) + v37) = v38;
      *(_QWORD *)(*(_QWORD *)(v20 + 56) + v37) = v18;
      ++*(_QWORD *)(v20 + 16);
    }
LABEL_5:

    v8 = sub_1BC818484();
    v6 = v9;
  }
  while (v8);
  v4 = v40;
LABEL_29:
  sub_1BC6ECC4C();
LABEL_31:
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_1BC7834E8()
{
  unint64_t result;

  result = qword_1ED6B9358;
  if (!qword_1ED6B9358)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E0E0, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B9358);
  }
  return result;
}

void sub_1BC78352C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC7834E8();
    v7 = a3(a1, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

unint64_t sub_1BC783594()
{
  unint64_t result;

  result = qword_1ED6B9388;
  if (!qword_1ED6B9388)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal.Anchor, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B9388);
  }
  return result;
}

unint64_t sub_1BC7835DC()
{
  unint64_t result;

  result = qword_1ED6B9378;
  if (!qword_1ED6B9378)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal.Anchor, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B9378);
  }
  return result;
}

unint64_t sub_1BC783624()
{
  unint64_t result;

  result = qword_1ED6B9380;
  if (!qword_1ED6B9380)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal.Anchor, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B9380);
  }
  return result;
}

unint64_t sub_1BC78366C()
{
  unint64_t result;

  result = qword_1EF45BFD0;
  if (!qword_1EF45BFD0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal.Configuration, &type metadata for HealthKitUnitPreferencesInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1EF45BFD0);
  }
  return result;
}

unint64_t sub_1BC7836B4()
{
  unint64_t result;

  result = qword_1ED6B9348;
  if (!qword_1ED6B9348)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal.Configuration, &type metadata for HealthKitUnitPreferencesInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1ED6B9348);
  }
  return result;
}

unint64_t sub_1BC7836FC()
{
  unint64_t result;

  result = qword_1ED6B9350;
  if (!qword_1ED6B9350)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal.Configuration, &type metadata for HealthKitUnitPreferencesInputSignal.Configuration);
    atomic_store(result, (unint64_t *)&qword_1ED6B9350);
  }
  return result;
}

uint64_t sub_1BC783740()
{
  return sub_1BC783764(&qword_1ED6B9390, (uint64_t)&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal);
}

uint64_t sub_1BC783764(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for HealthKitUnitPreferencesInputSignal();
    result = MEMORY[0x1BCCF5AB4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC7837A4()
{
  unint64_t result;

  result = qword_1ED6B9370;
  if (!qword_1ED6B9370)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthKitUnitPreferencesInputSignal.Anchor, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor);
    atomic_store(result, (unint64_t *)&qword_1ED6B9370);
  }
  return result;
}

uint64_t dispatch thunk of HealthKitUnitPreferencesProvider.fetchUnitPreferences(for:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of HealthKitUnitPreferencesProvider.notificationObject.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for HealthKitUnitPreferencesInputSignal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthKitUnitPreferencesInputSignal.__allocating_init(context:observer:provider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

ValueMetadata *type metadata accessor for HealthKitUnitPreferencesInputSignal.Anchor()
{
  return &type metadata for HealthKitUnitPreferencesInputSignal.Anchor;
}

ValueMetadata *type metadata accessor for HealthKitUnitPreferencesInputSignal.Configuration()
{
  return &type metadata for HealthKitUnitPreferencesInputSignal.Configuration;
}

uint64_t destroy for HealthKitUnitPreferencesInputSignal.State()
{
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14HealthPlatform35HealthKitUnitPreferencesInputSignalC5StateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for HealthKitUnitPreferencesInputSignal.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for HealthKitUnitPreferencesInputSignal.State(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for HealthKitUnitPreferencesInputSignal.State()
{
  return &type metadata for HealthKitUnitPreferencesInputSignal.State;
}

uint64_t storeEnumTagSinglePayload for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC783974 + 4 * asc_1BC81DD30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC783994 + 4 * byte_1BC81DD35[v4]))();
}

_BYTE *sub_1BC783974(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC783994(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC78399C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7839A4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7839AC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7839B4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys()
{
  return &type metadata for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys;
}

unint64_t sub_1BC7839D4()
{
  unint64_t result;

  result = qword_1EF45BFD8;
  if (!qword_1EF45BFD8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E0B8, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45BFD8);
  }
  return result;
}

unint64_t sub_1BC783A1C()
{
  unint64_t result;

  result = qword_1ED6B9368;
  if (!qword_1ED6B9368)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E028, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B9368);
  }
  return result;
}

unint64_t sub_1BC783A64()
{
  unint64_t result;

  result = qword_1ED6B9360;
  if (!qword_1ED6B9360)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E050, &type metadata for HealthKitUnitPreferencesInputSignal.Anchor.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B9360);
  }
  return result;
}

uint64_t *sub_1BC783AA8(uint64_t *a1)
{
  _QWORD *v1;

  return sub_1BC78253C(a1, v1);
}

uint64_t sub_1BC783AC0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC783AE4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BC783B10(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC781EC8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BC783B18(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC782274(a1, a2, v2);
}

uint64_t sub_1BC783B20(uint64_t a1, void *a2)
{
  uint64_t v2;

  return sub_1BC781F6C(a1, a2, v2);
}

void sub_1BC783B28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8620)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8620);
  }
}

Swift::Void __swiftcall PinnedContentManaging.pin(objectType:at:)(HKObjectType objectType, Swift::Int at)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2;
  v4 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();
  (*(void (**)(uint64_t))(v3 + 32))(v4);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PinnedContentManaging.pin(objectType:)(HKObjectType objectType)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1;
  v3 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();
  (*(void (**)(uint64_t))(v2 + 40))(v3);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall PinnedContentManaging.unpin(objectType:)(HKObjectType objectType)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1;
  v3 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();
  (*(void (**)(uint64_t))(v2 + 48))(v3);
  swift_bridgeObjectRelease();
}

uint64_t HKDisplayType.pinnedContentIdentifier.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_objectType);
  v2 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();

  return v2;
}

Swift::Bool_optional __swiftcall PinnedContentManaging.pinnedStatus(for:)(Swift::String a1)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  void *v5;
  _QWORD *v6;
  char v7;

  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v4 = (*(uint64_t (**)())(v1 + 8))();
  if (!v4)
    return (Swift::Bool_optional)2;
  v5 = (void *)v4;
  v6 = (_QWORD *)sub_1BC816B94();

  v7 = sub_1BC6E89B8(countAndFlagsBits, (uint64_t)object, v6);
  swift_bridgeObjectRelease();
  return (Swift::Bool_optional)(v7 & 1);
}

uint64_t dispatch thunk of PinnedContentManaging.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PinnedContentManaging.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PinnedContentManaging.latestState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PinnedContentManaging.pin(identifier:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of PinnedContentManaging.pin(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PinnedContentManaging.unpin(identifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of PinnedContentManaging.unpinAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PinnedContentManaging.apply(differences:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

Swift::Void __swiftcall UserNotificationManager.removePendingOrDeliveredNotifications(with:)(Swift::OpaquePointer with)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2;
  v4 = v1;
  (*(void (**)(void))(v2 + 32))();
  (*(void (**)(void *, uint64_t, uint64_t))(v3 + 40))(with._rawValue, v4, v3);
}

uint64_t UNNotificationRequest.notificationIdentifier.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(v0, sel_identifier);
  v2 = sub_1BC817AE8();

  return v2;
}

uint64_t sub_1BC783E6C()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_identifier);
  v2 = sub_1BC817AE8();

  return v2;
}

uint64_t CoalescingNotification.notificationIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t PluginFeedItem.NotificationRequest.feedItemIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.NotificationRequest.feedItemIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*PluginFeedItem.NotificationRequest.feedItemIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.NotificationRequest.notificationIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.NotificationRequest.notificationIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PluginFeedItem.NotificationRequest.notificationIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC783FA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = sub_1BC78491C;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

uint64_t PluginFeedItem.NotificationRequest.makeNotificationRequest.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t PluginFeedItem.NotificationRequest.makeNotificationRequest.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PluginFeedItem.NotificationRequest.makeNotificationRequest.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.NotificationRequest.ContentState.stringRawValue.getter()
{
  uint64_t *v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0[1];
  v2 = 0x4F656D6954656E6FLL;
  if (v1 != 1)
    v2 = *v0;
  if (v1)
    v3 = v2;
  else
    v3 = 1701736302;
  sub_1BC77B710(*v0, v1);
  return v3;
}

uint64_t PluginFeedItem.NotificationRequest.notificationStateValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BC77B710(v2, v3);
}

uint64_t PluginFeedItem.NotificationRequest.notificationStateValue.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1BC784250(*(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56));
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v3;
  return result;
}

uint64_t (*PluginFeedItem.NotificationRequest.notificationStateValue.modify())()
{
  return nullsub_1;
}

__n128 PluginFeedItem.NotificationRequest.init(feedItemIdentifier:notificationIdentifier:notificationRequest:notificationStateValue:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X6>, __n128 *a8@<X8>)
{
  __n128 result;

  a8->n128_u64[0] = a1;
  a8->n128_u64[1] = a2;
  a8[1].n128_u64[0] = a3;
  a8[1].n128_u64[1] = a4;
  a8[2].n128_u64[0] = a5;
  a8[2].n128_u64[1] = a6;
  result = *a7;
  a8[3] = *a7;
  return result;
}

uint64_t sub_1BC784150()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t _s14HealthPlatform14PluginFeedItemV19NotificationRequestV12ContentStateO2eeoiySbAG_AGtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      v3 = 0;
      v6 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
    if (v5 >= 2)
    {
      if (v2 == v4 && v3 == v5)
        v6 = 1;
      else
        v6 = sub_1BC818694();
      goto LABEL_9;
    }
LABEL_8:
    v6 = 0;
LABEL_9:
    sub_1BC77B710(v4, v5);
    sub_1BC77B710(v2, v3);
    goto LABEL_10;
  }
  if (v5 != 1)
    goto LABEL_8;
  v3 = 1;
  v6 = 1;
LABEL_10:
  sub_1BC784250(v2, v3);
  sub_1BC784250(v4, v5);
  return v6 & 1;
}

uint64_t sub_1BC784250(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1BC784264@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_1BC78494C;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;
  return swift_retain();
}

uint64_t dispatch thunk of NotifiableContent.notificationIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CoalescingNotification.coalesceIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CoalescingNotification.makeNotificationRequest()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoalescingNotification.coalesced(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

unint64_t _s19NotificationRequestVwxx(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  result = *(_QWORD *)(a1 + 56);
  if (result >= 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s19NotificationRequestVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = (_QWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 >= 2)
  {
    *(_QWORD *)(a1 + 48) = *v5;
    *(_QWORD *)(a1 + 56) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v5;
  }
  return a1;
}

_QWORD *_s19NotificationRequestVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  v5 = a2[7];
  if (a1[7] >= 2uLL)
  {
    if (v5 >= 2)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BC7844BC((uint64_t)(a1 + 6));
    goto LABEL_6;
  }
  if (v5 < 2)
  {
LABEL_6:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    return a1;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC7844BC(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEA968] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s19NotificationRequestVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v6 = (_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 56) >= 2uLL)
  {
    v7 = *(_QWORD *)(a2 + 56);
    if (v7 >= 2)
    {
      *(_QWORD *)(a1 + 48) = *v6;
      *(_QWORD *)(a1 + 56) = v7;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BC7844BC(a1 + 48);
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
  return a1;
}

uint64_t _s19NotificationRequestVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s19NotificationRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginFeedItem.NotificationRequest()
{
  return &type metadata for PluginFeedItem.NotificationRequest;
}

unint64_t _s19NotificationRequestV12ContentStateOwxx(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s19NotificationRequestV12ContentStateOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *_s19NotificationRequestV12ContentStateOwca(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19NotificationRequestV12ContentStateOwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19NotificationRequestV12ContentStateOwet(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t _s19NotificationRequestV12ContentStateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1BC78485C(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1BC784874(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginFeedItem.NotificationRequest.ContentState()
{
  return &type metadata for PluginFeedItem.NotificationRequest.ContentState;
}

uint64_t dispatch thunk of UserNotificationManager.scheduleUserNotification(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of UserNotificationManager.getPendingNotifications(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of UserNotificationManager.getDeliveredNotifications(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of UserNotificationManager.removePendingNotifications(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of UserNotificationManager.removeDeliveredNotifications(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PluginNotificationManager.contentStateManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PluginNotificationManager.schedulePluginFeedItemNotification(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PluginNotificationManager.scheduleCoalescingNotification<A>(for:environment:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a6 + 32))(a1, a2 & 1);
}

uint64_t dispatch thunk of PluginNotificationManager.removeAllPluginFeedItemNotifications()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of PluginNotificationManager.removePluginFeedItemNotifications(feedItemIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1BC7848F8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC78491C()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1BC78494C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

_QWORD *PluginContentStateManager.__allocating_init(domain:healthStore:category:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v9 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  swift_bridgeObjectRetain();
  v10 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithCategory_domainName_healthStore_, a4, v10, a3);

  v8[4] = v11;
  return v8;
}

_QWORD *PluginContentStateManager.init(domain:healthStore:category:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  _QWORD *v4;
  id v7;
  void *v8;
  id v9;

  v4[2] = a1;
  v4[3] = a2;
  v7 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v7, sel_initWithCategory_domainName_healthStore_, a4, v8, a3);

  v4[4] = v9;
  return v4;
}

uint64_t sub_1BC784AC4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817EE4();

  return v2;
}

uint64_t sub_1BC784B10()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817EF0();

  return v2;
}

uint64_t sub_1BC784B5C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817EA8();

  return v2;
}

uint64_t sub_1BC784BA8()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817F14();

  return v2;
}

uint64_t sub_1BC784BF4()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817EFC();

  return v2;
}

uint64_t sub_1BC784C48()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817F08();

  return v2;
}

uint64_t sub_1BC784C9C()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817EB4();

  return v2;
}

uint64_t sub_1BC784D00()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817F20();

  return v2;
}

uint64_t sub_1BC784D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  int v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  char *v45;
  uint64_t v46;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v56 = a2;
  v57 = a3;
  sub_1BC785340(0, &qword_1EF45BFE0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C96058]);
  v51 = v6;
  v53 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v48 - v7;
  sub_1BC6F956C();
  v9 = MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v48 - v11;
  v12 = sub_1BC816EF4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v48 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v48 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v27((char *)&v48 - v28, a1, a4);
  if (swift_dynamicCast())
  {
    v29 = *(id *)(v55 + 32);
    v30 = sub_1BC817F20();
    swift_bridgeObjectRelease();

    v58 = v30;
    v31 = MEMORY[0x1E0C960D8];
    sub_1BC785340(0, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC7853AC((unint64_t *)&qword_1ED6B8360, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v31, MEMORY[0x1E0C96108]);
    v32 = sub_1BC817854();
    swift_release();
  }
  else
  {
    v33 = (uint64_t)v54;
    v49 = v16;
    v27(v25, a1, a4);
    if (swift_dynamicCast())
    {
      v34 = *(id *)(v55 + 32);
      v35 = sub_1BC817EB4();
    }
    else
    {
      v27(v22, a1, a4);
      if (!swift_dynamicCast())
      {
        v27(v19, a1, a4);
        v38 = swift_dynamicCast();
        v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
        if (v38)
        {
          v39(v33, 0, 1, v12);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v33, 1, v12) != 1)
          {
            v40 = v49;
            (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v49, v33, v12);
            v41 = (uint64_t)v50;
            (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v40, v12);
            v39(v41, 0, 1, v12);
            v42 = *(id *)(v55 + 32);
            v43 = sub_1BC817F08();

            sub_1BC6E148C(v41);
            v58 = v43;
            v44 = MEMORY[0x1E0C960D8];
            sub_1BC785340(0, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
            sub_1BC7853AC((unint64_t *)&qword_1ED6B8360, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v44, MEMORY[0x1E0C96108]);
            v32 = sub_1BC817854();
            swift_release();
            (*(void (**)(char *, uint64_t))(v13 + 8))(v40, v12);
            return v32;
          }
        }
        else
        {
          v39(v33, 1, 1, v12);
        }
        sub_1BC6E148C(v33);
        sub_1BC7852FC();
        v58 = swift_allocError();
        sub_1BC6E1878();
        v45 = v52;
        sub_1BC8177A0();
        sub_1BC7853AC(&qword_1EF45BFF0, &qword_1EF45BFE0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C96058], MEMORY[0x1E0C96068]);
        v46 = v51;
        v32 = sub_1BC817854();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v45, v46);
        return v32;
      }
      v34 = *(id *)(v55 + 32);
      v35 = sub_1BC817EFC();
    }
    v36 = v35;

    v58 = v36;
    v37 = MEMORY[0x1E0C960D8];
    sub_1BC785340(0, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC7853AC((unint64_t *)&qword_1ED6B8360, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v37, MEMORY[0x1E0C96108]);
    v32 = sub_1BC817854();
    swift_release();
  }
  return v32;
}

unint64_t sub_1BC7852FC()
{
  unint64_t result;

  result = qword_1EF45BFE8;
  if (!qword_1EF45BFE8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E358, &type metadata for PluginContentStateManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF45BFE8);
  }
  return result;
}

void sub_1BC785340(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC6E1878();
    v7 = a3(a1, MEMORY[0x1E0DEE9C0] + 8, v6, MEMORY[0x1E0DEDB38]);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC7853AC(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC785340(255, a2, a3);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC7853EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;

  v5 = *(void **)(v2 + 32);
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 40) = a2;
  v7 = v5;
  swift_bridgeObjectRetain();
  v8 = sub_1BC817ECC();

  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BC785484()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(v0 + 32);
  v2 = sub_1BC817ED8();

  return v2;
}

uint64_t sub_1BC7854B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v9 = *(_QWORD *)(a4 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v13);
  v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a4;
  *(_QWORD *)(v15 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v15 + v14, v11, a4);
  v16 = sub_1BC785644(a1, a2, (uint64_t)sub_1BC785604, v15);
  swift_release();
  return v16;
}

uint64_t sub_1BC7855AC()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

BOOL sub_1BC785604()
{
  return (sub_1BC817AB8() & 1) == 0;
}

uint64_t sub_1BC785644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  _QWORD v62[2];
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v84 = a1;
  v79 = a4;
  v85 = a2;
  v86 = a3;
  sub_1BC818130();
  sub_1BC6E1878();
  v4 = sub_1BC81771C();
  v88 = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95D90], v4);
  v89 = v4;
  v5 = sub_1BC817650();
  v81 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v78 = (char *)v62 - v6;
  v7 = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95AD0], v5);
  v8 = MEMORY[0x1E0DEAFA0];
  v82 = v5;
  v87 = v7;
  v80 = sub_1BC817614();
  v77 = *(_QWORD *)(v80 - 8);
  MEMORY[0x1E0C80A78](v80);
  v90 = (char *)v62 - v9;
  v10 = sub_1BC8177AC();
  v72 = *(_QWORD *)(v10 - 8);
  v73 = v10;
  MEMORY[0x1E0C80A78](v10);
  v71 = (char *)v62 - v11;
  sub_1BC762A34();
  v13 = v12;
  v14 = sub_1BC762AB8();
  v62[1] = v13;
  v62[0] = v14;
  v65 = sub_1BC817614();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v63 = (char *)v62 - v15;
  sub_1BC785EC0(255, &qword_1EF45BFF8, &qword_1EF45C000, v8);
  v17 = v16;
  v18 = sub_1BC785F40(&qword_1EF45C008, &qword_1EF45BFF8, &qword_1EF45C000, v8);
  v67 = v17;
  v66 = v18;
  v70 = sub_1BC817614();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)v62 - v19;
  v20 = MEMORY[0x1E0DEB418];
  sub_1BC785EC0(255, &qword_1EF45C010, &qword_1EF45C018, MEMORY[0x1E0DEB418]);
  v22 = v21;
  v74 = sub_1BC785F40(&qword_1EF45C020, &qword_1EF45C010, &qword_1EF45C018, v20);
  v75 = v22;
  v23 = sub_1BC817614();
  v76 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v62 - v24;
  v26 = MEMORY[0x1E0DEA968];
  sub_1BC785EC0(255, &qword_1ED6B8340, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968]);
  sub_1BC785F40(&qword_1ED6B8338, &qword_1ED6B8340, (unint64_t *)&qword_1ED6BAC70, v26);
  v27 = sub_1BC817614();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)v62 - v30;
  if (v29 == v26)
  {
    v42 = v29;
    v43 = *(id *)(v83 + 32);
    v44 = sub_1BC817F14();

    v91 = v44;
    *(_QWORD *)(swift_allocObject() + 16) = v26;
    sub_1BC81786C();
    swift_release();
    swift_release();
    MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v27);
    v41 = sub_1BC817854();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v31, v27);
    v36 = v42;
  }
  else
  {
    v32 = v83;
    v33 = v84;
    v34 = v85;
    v35 = MEMORY[0x1E0DEB418];
    v36 = v29;
    if (v29 != MEMORY[0x1E0DEB418])
    {
      v37 = MEMORY[0x1E0DEAFA0];
      v38 = v86;
      if (v29 == MEMORY[0x1E0DEAFA0])
      {
        v53 = *(id *)(v83 + 32);
        v54 = sub_1BC817EE4();

        v91 = v54;
        *(_QWORD *)(swift_allocObject() + 16) = v37;
        v55 = v68;
        sub_1BC81786C();
        swift_release();
        swift_release();
        v56 = v70;
        MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v70);
        v41 = sub_1BC817854();
        v57 = &v93;
      }
      else
      {
        if (sub_1BC816EF4() != v29)
        {
          sub_1BC7852FC();
          v91 = swift_allocError();
          v39 = v71;
          sub_1BC817794();
          v40 = v73;
          MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96068], v73);
          v41 = sub_1BC817854();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v39, v40);
LABEL_12:
          v48 = v81;
          v47 = v82;
          v49 = v79;
          v50 = v80;
          v52 = v77;
          v51 = v78;
          goto LABEL_13;
        }
        v91 = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v32 + 144))(v33, v34);
        *(_QWORD *)(swift_allocObject() + 16) = v36;
        v55 = v63;
        sub_1BC81786C();
        swift_release();
        swift_release();
        v56 = v65;
        MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v65);
        v41 = sub_1BC817854();
        v57 = &v92;
      }
      (*(void (**)(char *, uint64_t))(*(v57 - 32) + 8))(v55, v56);
      goto LABEL_12;
    }
    v45 = *(id *)(v83 + 32);
    v46 = sub_1BC817EA8();

    v91 = v46;
    *(_QWORD *)(swift_allocObject() + 16) = v35;
    sub_1BC81786C();
    swift_release();
    swift_release();
    MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v23);
    v41 = sub_1BC817854();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v25, v23);
  }
  v48 = v81;
  v47 = v82;
  v49 = v79;
  v50 = v80;
  v52 = v77;
  v51 = v78;
  v38 = v86;
LABEL_13:
  v91 = v41;
  v58 = (_QWORD *)swift_allocObject();
  v58[2] = v36;
  v58[3] = v38;
  v58[4] = v49;
  swift_retain();
  swift_retain();
  sub_1BC8178C0();
  swift_release();
  swift_release();
  *(_QWORD *)(swift_allocObject() + 16) = v36;
  v59 = v90;
  sub_1BC81786C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v51, v47);
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v50);
  v60 = sub_1BC817854();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v59, v50);
  return v60;
}

void sub_1BC785EC0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC6E1E98(255, a3, a4, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC6E1878();
    v5 = sub_1BC817800();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC785F40(unint64_t *a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC785EC0(255, a2, a3, a4);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96108], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC785F80@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v4;

  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  swift_bridgeObjectRetain();
  v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
}

uint64_t sub_1BC786018@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v4;

  sub_1BC6E1E98(0, &qword_1EF45C018, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
}

uint64_t sub_1BC7860A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  int v4;

  sub_1BC6E1E98(0, &qword_1EF45C000, MEMORY[0x1E0DEAFA0], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 56))(a2, v4 ^ 1u, 1, a1);
}

uint64_t sub_1BC786128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;

  sub_1BC6F956C();
  MEMORY[0x1E0C80A78](v6);
  sub_1BC6F95C0(a1, (uint64_t)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, v8 ^ 1u, 1, a2);
}

uint64_t sub_1BC7861D8(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v17;

  v7 = sub_1BC818130();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v17 - v10;
  v12 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, a4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    v15 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, a4);
    v15 = a2(v14);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, a4);
  }
  return v15 & 1;
}

uint64_t sub_1BC786304()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC786328(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC7861D8(a1, *(uint64_t (**)(char *))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BC786334()
{
  return swift_deallocObject();
}

uint64_t sub_1BC786344()
{
  return swift_deallocObject();
}

uint64_t sub_1BC786354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC786128(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BC78635C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC78636C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC7860A4(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1BC786374()
{
  return swift_deallocObject();
}

uint64_t sub_1BC786384@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC786018(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1BC78638C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC78639C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC785F80(*(_QWORD *)(v1 + 16), a1);
}

uint64_t PluginContentStateManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return v0;
}

uint64_t PluginContentStateManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PluginContentStateManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for PluginContentStateManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PluginContentStateManager.__allocating_init(domain:healthStore:category:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of PluginContentStateManager.getBool(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of PluginContentStateManager.getDate(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of PluginContentStateManager.getInteger(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of PluginContentStateManager.getString(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of PluginContentStateManager.setBool(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of PluginContentStateManager.setDate(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of PluginContentStateManager.setInteger(_:for:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 184))(a1, a2 & 1);
}

uint64_t dispatch thunk of PluginContentStateManager.setString(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of PluginContentStateManager.setValue<A>(_:identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of PluginContentStateManager.removeValue(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of PluginContentStateManager.removeAllValues()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of PluginContentStateManager.publisher<A>(with:currentValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of PluginContentStateManager.publisher<A>(with:filterPreviousState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t storeEnumTagSinglePayload for PluginContentStateManagerError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC786508 + 4 * asc_1BC81E280[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC786528 + 4 * byte_1BC81E285[v4]))();
}

_BYTE *sub_1BC786508(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC786528(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC786530(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC786538(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC786540(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC786548(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PluginContentStateManagerError()
{
  return &type metadata for PluginContentStateManagerError;
}

unint64_t sub_1BC786568()
{
  unint64_t result;

  result = qword_1EF45C028;
  if (!qword_1EF45C028)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E330, &type metadata for PluginContentStateManagerError);
    atomic_store(result, (unint64_t *)&qword_1EF45C028);
  }
  return result;
}

uint64_t NotificationContentState.init(identifier:uuid:contentState:hasGeneratedLocally:isAcknowledged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, _QWORD *a8@<X8>)
{
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;

  *a8 = a1;
  a8[1] = a2;
  v14 = (int *)type metadata accessor for NotificationContentState(0);
  v15 = (char *)a8 + v14[5];
  v16 = sub_1BC816F3C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v15, a3, v16);
  v18 = (_QWORD *)((char *)a8 + v14[6]);
  *v18 = a4;
  v18[1] = a5;
  *((_BYTE *)a8 + v14[7]) = a6;
  *((_BYTE *)a8 + v14[8]) = a7;
  return result;
}

uint64_t type metadata accessor for NotificationContentState(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1ED6B8828);
}

uint64_t NotificationContentState.protectedData()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *v1;
  v3 = v1[1];
  v5 = type metadata accessor for NotificationContentState(0);
  v6 = (char *)v1 + *(int *)(v5 + 20);
  v7 = type metadata accessor for ProtectedNotificationContentState(0);
  v8 = (char *)a1 + *(int *)(v7 + 20);
  v9 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v6, v9);
  v10 = (uint64_t *)((char *)v1 + *(int *)(v5 + 24));
  v11 = *v10;
  v12 = v10[1];
  *a1 = v4;
  a1[1] = v3;
  v13 = (_QWORD *)((char *)a1 + *(int *)(v7 + 24));
  *v13 = v11;
  v13[1] = v12;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t NotificationContentState.unprotectedData()@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  char *v6;
  int *v7;
  char *v8;
  uint64_t v9;
  char v10;
  char v11;

  v4 = *v1;
  v3 = v1[1];
  v5 = (int *)type metadata accessor for NotificationContentState(0);
  v6 = (char *)v1 + v5[5];
  v7 = (int *)type metadata accessor for UnprotectedNotificationContentState(0);
  v8 = (char *)a1 + v7[5];
  v9 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v8, v6, v9);
  v10 = *((_BYTE *)v1 + v5[7]);
  v11 = *((_BYTE *)v1 + v5[8]);
  *a1 = v4;
  a1[1] = v3;
  *((_BYTE *)a1 + v7[6]) = v10;
  *((_BYTE *)a1 + v7[7]) = v11;
  return swift_bridgeObjectRetain();
}

uint64_t NotificationContentState.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1BC8182C8();
  v1 = *v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  type metadata accessor for NotificationContentState(0);
  sub_1BC816F3C();
  sub_1BC788BE8(&qword_1ED6B7C38, MEMORY[0x1E0CB09F0]);
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t ProtectedNotificationContentState.description.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  type metadata accessor for ProtectedNotificationContentState(0);
  sub_1BC816F3C();
  sub_1BC788BE8(&qword_1ED6B7C38, MEMORY[0x1E0CB09F0]);
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t UnprotectedNotificationContentState.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  sub_1BC8182C8();
  v1 = *v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  type metadata accessor for UnprotectedNotificationContentState(0);
  sub_1BC816F3C();
  sub_1BC788BE8(&qword_1ED6B7C38, MEMORY[0x1E0CB09F0]);
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return v1;
}

BOOL static NotificationContentState.DataError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NotificationContentState.DataError.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t NotificationContentState.DataError.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t NotificationContentState.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationContentState.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC7873AC(type metadata accessor for NotificationContentState, a1);
}

uint64_t NotificationContentState.contentState.getter()
{
  return sub_1BC787404(type metadata accessor for NotificationContentState);
}

uint64_t NotificationContentState.hasGeneratedLocally.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NotificationContentState(0) + 28));
}

uint64_t NotificationContentState.isAcknowledged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for NotificationContentState(0) + 32));
}

uint64_t sub_1BC786D04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC786D38 + 4 * byte_1BC81E3A0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BC786D38()
{
  return 1684632949;
}

uint64_t sub_1BC786D48()
{
  return 0x53746E65746E6F63;
}

unint64_t sub_1BC786D68()
{
  return 0xD000000000000013;
}

uint64_t sub_1BC786D84()
{
  return 0x776F6E6B63417369;
}

uint64_t sub_1BC786DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC78A334(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC786DCC(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1BC786DD8()
{
  sub_1BC788BA4();
  return sub_1BC8187FC();
}

uint64_t sub_1BC786E00()
{
  sub_1BC788BA4();
  return sub_1BC818808();
}

uint64_t NotificationContentState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;
  char v14;

  sub_1BC788E10(0, &qword_1EF45C030, (uint64_t (*)(void))sub_1BC788BA4, (uint64_t)&type metadata for NotificationContentState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC788BA4();
  sub_1BC8187F0();
  v14 = 0;
  sub_1BC818604();
  if (!v1)
  {
    type metadata accessor for NotificationContentState(0);
    v13 = 1;
    sub_1BC816F3C();
    sub_1BC788BE8(&qword_1EF45C040, MEMORY[0x1E0CB09B8]);
    sub_1BC818634();
    v12 = 2;
    sub_1BC818604();
    v11 = 3;
    sub_1BC818610();
    v10 = 4;
    sub_1BC818610();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t NotificationContentState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;

  v23 = a2;
  v3 = sub_1BC816F3C();
  v25 = *(_QWORD *)(v3 - 8);
  v26 = v3;
  MEMORY[0x1E0C80A78](v3);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC788E10(0, &qword_1EF45C048, (uint64_t (*)(void))sub_1BC788BA4, (uint64_t)&type metadata for NotificationContentState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v28 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = (int *)type metadata accessor for NotificationContentState(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC788BA4();
  v27 = v8;
  v12 = (uint64_t)v29;
  sub_1BC8187E4();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v13 = v24;
  v14 = v25;
  v29 = a1;
  v15 = v26;
  v34 = 0;
  *v11 = sub_1BC818598();
  v11[1] = v16;
  v33 = 1;
  sub_1BC788BE8(&qword_1EF45C050, MEMORY[0x1E0CB09E0]);
  sub_1BC8185C8();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))((char *)v11 + v9[5], v13, v15);
  v32 = 2;
  v17 = sub_1BC818598();
  v18 = (uint64_t *)((char *)v11 + v9[6]);
  *v18 = v17;
  v18[1] = v19;
  v31 = 3;
  *((_BYTE *)v11 + v9[7]) = sub_1BC8185A4() & 1;
  v30 = 4;
  v20 = sub_1BC8185A4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v27, v28);
  *((_BYTE *)v11 + v9[8]) = v20 & 1;
  sub_1BC6ECB08((uint64_t)v11, v23, type metadata accessor for NotificationContentState);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v29);
  return sub_1BC6ED784((uint64_t)v11, type metadata accessor for NotificationContentState);
}

uint64_t sub_1BC787370@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return NotificationContentState.init(from:)(a1, a2);
}

uint64_t sub_1BC787384(_QWORD *a1)
{
  return NotificationContentState.encode(to:)(a1);
}

uint64_t ProtectedNotificationContentState.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC7873AC(type metadata accessor for ProtectedNotificationContentState, a1);
}

uint64_t sub_1BC7873AC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 20);
  v5 = sub_1BC816F3C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ProtectedNotificationContentState.contentState.getter()
{
  return sub_1BC787404(type metadata accessor for ProtectedNotificationContentState);
}

uint64_t sub_1BC787404(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1(0) + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ProtectedNotificationContentState.init(identifier:uuid:contentState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;

  *a6 = a1;
  a6[1] = a2;
  v10 = type metadata accessor for ProtectedNotificationContentState(0);
  v11 = (char *)a6 + *(int *)(v10 + 20);
  v12 = sub_1BC816F3C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
  v14 = (_QWORD *)((char *)a6 + *(int *)(v10 + 24));
  *v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t type metadata accessor for ProtectedNotificationContentState(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1ED6B88D0);
}

uint64_t sub_1BC7874D8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684632949;
  if (*v0 != 1)
    v1 = 0x53746E65746E6F63;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BC787538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC78A580(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC78755C()
{
  sub_1BC788CDC();
  return sub_1BC8187FC();
}

uint64_t sub_1BC787584()
{
  sub_1BC788CDC();
  return sub_1BC818808();
}

uint64_t ProtectedNotificationContentState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;

  sub_1BC788E10(0, &qword_1EF45C058, (uint64_t (*)(void))sub_1BC788CDC, (uint64_t)&type metadata for ProtectedNotificationContentState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC788CDC();
  sub_1BC8187F0();
  v12 = 0;
  sub_1BC818604();
  if (!v1)
  {
    type metadata accessor for ProtectedNotificationContentState(0);
    v11 = 1;
    sub_1BC816F3C();
    sub_1BC788BE8(&qword_1EF45C040, MEMORY[0x1E0CB09B8]);
    sub_1BC818634();
    v10 = 2;
    sub_1BC818604();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ProtectedNotificationContentState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  char v33;

  v24 = a2;
  v27 = sub_1BC816F3C();
  v25 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v26 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC788E10(0, &qword_1EF45C068, (uint64_t (*)(void))sub_1BC788CDC, (uint64_t)&type metadata for ProtectedNotificationContentState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v29 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - v6;
  v8 = type metadata accessor for ProtectedNotificationContentState(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC788CDC();
  v28 = v7;
  v11 = v30;
  sub_1BC8187E4();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v12 = v5;
  v13 = (uint64_t)a1;
  v15 = v26;
  v14 = v27;
  v33 = 0;
  v16 = (uint64_t)v10;
  *v10 = sub_1BC818598();
  v10[1] = v17;
  v32 = 1;
  sub_1BC788BE8(&qword_1EF45C050, MEMORY[0x1E0CB09E0]);
  sub_1BC8185C8();
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))((char *)v10 + *(int *)(v8 + 20), v15, v14);
  v31 = 2;
  v18 = sub_1BC818598();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v28, v29);
  v21 = (uint64_t *)(v16 + *(int *)(v8 + 24));
  *v21 = v18;
  v21[1] = v20;
  sub_1BC6ECB08(v16, v24, type metadata accessor for ProtectedNotificationContentState);
  __swift_destroy_boxed_opaque_existential_0(v13);
  return sub_1BC6ED784(v16, type metadata accessor for ProtectedNotificationContentState);
}

uint64_t sub_1BC787A20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ProtectedNotificationContentState.init(from:)(a1, a2);
}

uint64_t sub_1BC787A34(_QWORD *a1)
{
  return ProtectedNotificationContentState.encode(to:)(a1);
}

uint64_t sub_1BC787A4C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  sub_1BC816F3C();
  sub_1BC788BE8(&qword_1ED6B7C38, MEMORY[0x1E0CB09F0]);
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t UnprotectedNotificationContentState.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BC7873AC(type metadata accessor for UnprotectedNotificationContentState, a1);
}

uint64_t UnprotectedNotificationContentState.hasGeneratedLocally.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UnprotectedNotificationContentState(0) + 24));
}

uint64_t UnprotectedNotificationContentState.isAcknowledged.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for UnprotectedNotificationContentState(0) + 28));
}

uint64_t UnprotectedNotificationContentState.init(identifier:uuid:hasGeneratedLocally:isAcknowledged:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t result;

  *a6 = a1;
  a6[1] = a2;
  v10 = (int *)type metadata accessor for UnprotectedNotificationContentState(0);
  v11 = (char *)a6 + v10[5];
  v12 = sub_1BC816F3C();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a3, v12);
  *((_BYTE *)a6 + v10[6]) = a4;
  *((_BYTE *)a6 + v10[7]) = a5;
  return result;
}

uint64_t type metadata accessor for UnprotectedNotificationContentState(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1ED6B8968);
}

uint64_t sub_1BC787C10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC787C44 + 4 * byte_1BC81E3A5[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BC787C44()
{
  return 1684632949;
}

unint64_t sub_1BC787C54()
{
  return 0xD000000000000013;
}

uint64_t sub_1BC787C70()
{
  return 0x776F6E6B63417369;
}

uint64_t sub_1BC787C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC78A6E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BC787CB8(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1BC787CC4()
{
  sub_1BC788DCC();
  return sub_1BC8187FC();
}

uint64_t sub_1BC787CEC()
{
  sub_1BC788DCC();
  return sub_1BC818808();
}

uint64_t UnprotectedNotificationContentState.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  char v10;
  char v11;
  char v12;
  char v13;

  sub_1BC788E10(0, &qword_1EF45C070, (uint64_t (*)(void))sub_1BC788DCC, (uint64_t)&type metadata for UnprotectedNotificationContentState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC788DCC();
  sub_1BC8187F0();
  v13 = 0;
  sub_1BC818604();
  if (!v1)
  {
    type metadata accessor for UnprotectedNotificationContentState(0);
    v12 = 1;
    sub_1BC816F3C();
    sub_1BC788BE8(&qword_1EF45C040, MEMORY[0x1E0CB09B8]);
    sub_1BC818634();
    v11 = 2;
    sub_1BC818610();
    v10 = 3;
    sub_1BC818610();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t UnprotectedNotificationContentState.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  char v28;
  char v29;
  char v30;

  v20 = a2;
  v3 = sub_1BC816F3C();
  v22 = *(_QWORD *)(v3 - 8);
  v23 = v3;
  MEMORY[0x1E0C80A78](v3);
  v21 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC788E10(0, &qword_1EF45C080, (uint64_t (*)(void))sub_1BC788DCC, (uint64_t)&type metadata for UnprotectedNotificationContentState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v25 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - v7;
  v9 = (int *)type metadata accessor for UnprotectedNotificationContentState(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC788DCC();
  v24 = v8;
  v12 = (uint64_t)v26;
  sub_1BC8187E4();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v26 = a1;
  v14 = v21;
  v13 = v22;
  v15 = v23;
  v30 = 0;
  *v11 = sub_1BC818598();
  v11[1] = v16;
  v29 = 1;
  sub_1BC788BE8(&qword_1EF45C050, MEMORY[0x1E0CB09E0]);
  sub_1BC8185C8();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))((char *)v11 + v9[5], v14, v15);
  v28 = 2;
  *((_BYTE *)v11 + v9[6]) = sub_1BC8185A4() & 1;
  v27 = 3;
  v17 = sub_1BC8185A4();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v24, v25);
  *((_BYTE *)v11 + v9[7]) = v17 & 1;
  sub_1BC6ECB08((uint64_t)v11, v20, type metadata accessor for UnprotectedNotificationContentState);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
  return sub_1BC6ED784((uint64_t)v11, type metadata accessor for UnprotectedNotificationContentState);
}

uint64_t sub_1BC7881DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return UnprotectedNotificationContentState.init(from:)(a1, a2);
}

uint64_t sub_1BC7881F0(_QWORD *a1)
{
  return UnprotectedNotificationContentState.encode(to:)(a1);
}

uint64_t NotificationContentState.init(protected:unprotected:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t result;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;

  v6 = type metadata accessor for ProtectedNotificationContentState(0);
  v7 = (char *)a1 + *(int *)(v6 + 20);
  v8 = type metadata accessor for UnprotectedNotificationContentState(0);
  if ((sub_1BC816F18() & 1) != 0)
  {
    v9 = (int *)type metadata accessor for NotificationContentState(0);
    v10 = (char *)a3 + v9[5];
    v11 = sub_1BC816F3C();
    v22 = *(_QWORD *)(v11 - 8);
    v23 = v11;
    v24 = v10;
    (*(void (**)(char *, char *))(v22 + 16))(v10, v7);
    v13 = *a1;
    v12 = a1[1];
    if (*a1 == *a2 && v12 == a2[1] || (sub_1BC818694() & 1) != 0)
    {
      *a3 = v13;
      a3[1] = v12;
      v14 = (uint64_t *)((char *)a1 + *(int *)(v6 + 24));
      v16 = *v14;
      v15 = v14[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BC6ED784((uint64_t)a1, type metadata accessor for ProtectedNotificationContentState);
      v17 = (_QWORD *)((char *)a3 + v9[6]);
      *v17 = v16;
      v17[1] = v15;
      *((_BYTE *)a3 + v9[7]) = *((_BYTE *)a2 + *(int *)(v8 + 24));
      v18 = *((_BYTE *)a2 + *(int *)(v8 + 28));
      result = sub_1BC6ED784((uint64_t)a2, type metadata accessor for UnprotectedNotificationContentState);
      *((_BYTE *)a3 + v9[8]) = v18;
    }
    else
    {
      sub_1BC788E6C();
      swift_allocError();
      *v21 = 1;
      swift_willThrow();
      sub_1BC6ED784((uint64_t)a2, type metadata accessor for UnprotectedNotificationContentState);
      sub_1BC6ED784((uint64_t)a1, type metadata accessor for ProtectedNotificationContentState);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v24, v23);
    }
  }
  else
  {
    sub_1BC788E6C();
    swift_allocError();
    *v20 = 0;
    swift_willThrow();
    sub_1BC6ED784((uint64_t)a2, type metadata accessor for UnprotectedNotificationContentState);
    return sub_1BC6ED784((uint64_t)a1, type metadata accessor for ProtectedNotificationContentState);
  }
  return result;
}

uint64_t NotificationContentState.init(protected:)@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;

  v20 = a2;
  v3 = type metadata accessor for ProtectedNotificationContentState(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for UnprotectedNotificationContentState(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (uint64_t *)((char *)&v19 - v11);
  v13 = *a1;
  v14 = a1[1];
  v15 = (char *)a1 + *(int *)(v3 + 20);
  v16 = (char *)&v19 + *(int *)(v10 + 20) - v11;
  v17 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v16, v15, v17);
  *v12 = v13;
  v12[1] = v14;
  *((_BYTE *)v12 + *(int *)(v6 + 24)) = 1;
  *((_BYTE *)v12 + *(int *)(v6 + 28)) = 0;
  sub_1BC6ECB08((uint64_t)a1, (uint64_t)v5, type metadata accessor for ProtectedNotificationContentState);
  sub_1BC6ECB08((uint64_t)v12, (uint64_t)v9, type metadata accessor for UnprotectedNotificationContentState);
  swift_bridgeObjectRetain();
  NotificationContentState.init(protected:unprotected:)(v5, v9, v20);
  sub_1BC6ED784((uint64_t)a1, type metadata accessor for ProtectedNotificationContentState);
  return sub_1BC6ED784((uint64_t)v12, type metadata accessor for UnprotectedNotificationContentState);
}

uint64_t NotificationContentState.dateFromContentState()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  int v8;
  uint64_t v9;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  _QWORD v15[3];
  char v16;
  uint64_t v17;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for NotificationContentState(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  v17 = 0;
  if ((v5 & 0x1000000000000000) != 0 || !(v5 & 0x2000000000000000 | v4 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_1BC8182BC();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_15;
  }
  if ((v5 & 0x2000000000000000) != 0)
  {
    v15[0] = v4;
    v15[1] = v5 & 0xFFFFFFFFFFFFFFLL;
    if (v4 > 0x20u || ((1 << v4) & 0x100003E01) == 0)
    {
      swift_bridgeObjectRetain();
      v13 = (unsigned __int8 *)_swift_stdlib_strtod_clocale();
      if (v13)
      {
        v14 = *v13;
        swift_bridgeObjectRelease();
        if (!v14)
          goto LABEL_8;
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  if ((v4 & 0x1000000000000000) != 0)
  {
    v6 = (v5 & 0xFFFFFFFFFFFFFFFLL) + 32;
    swift_bridgeObjectRetain();
LABEL_6:
    v7 = (_BYTE *)v6;
    goto LABEL_7;
  }
  v6 = sub_1BC81834C();
  swift_bridgeObjectRetain();
  if (v6)
    goto LABEL_6;
  v7 = 0;
LABEL_7:
  sub_1BC788EB0(v7, (BOOL *)v15);
  v8 = LOBYTE(v15[0]);
  swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_8:
    sub_1BC816E7C();
    v9 = sub_1BC816EF4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 0, 1, v9);
  }
LABEL_15:
  v12 = sub_1BC816EF4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a1, 1, 1, v12);
}

Swift::Bool __swiftcall NotificationContentState.shouldGenerateNotification(with:)(Swift::String_optional with)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  BOOL v7;
  char v8;

  object = with.value._object;
  countAndFlagsBits = with.value._countAndFlagsBits;
  v4 = type metadata accessor for NotificationContentState(0);
  if (object
    && ((v5 = v4, v6 = (_QWORD *)(v1 + *(int *)(v4 + 24)), *v6 == countAndFlagsBits)
      ? (v7 = v6[1] == (_QWORD)object)
      : (v7 = 0),
        v7 || (sub_1BC818694() & 1) != 0))
  {
    if ((*(_BYTE *)(v1 + *(int *)(v5 + 32)) & 1) != 0)
      v8 = 0;
    else
      v8 = *(_BYTE *)(v1 + *(int *)(v5 + 28)) ^ 1;
  }
  else
  {
    v8 = 1;
  }
  return v8 & 1;
}

Swift::Bool __swiftcall NotificationContentState.shouldRemoveNotification(with:)(Swift::String_optional with)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char v8;
  Swift::Bool result;

  object = with.value._object;
  countAndFlagsBits = with.value._countAndFlagsBits;
  v4 = type metadata accessor for NotificationContentState(0);
  if (!object)
    return 0;
  v5 = v4;
  v6 = (_QWORD *)(v1 + *(int *)(v4 + 24));
  if (*v6 == countAndFlagsBits && v6[1] == (_QWORD)object)
    return *(_BYTE *)(v1 + *(int *)(v5 + 32));
  v8 = sub_1BC818694();
  result = 0;
  if ((v8 & 1) != 0)
    return *(_BYTE *)(v1 + *(int *)(v5 + 32));
  return result;
}

uint64_t Optional<A>.shouldGenerateNotification(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  char v11;
  char *v12;
  BOOL v13;
  uint64_t v15;

  v3 = v2;
  sub_1BC77A824(0);
  v6 = (uint64_t (*)(_QWORD))sub_1BC77A824;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECB08(v3, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC77A824);
  v10 = (int *)type metadata accessor for NotificationContentState(0);
  v11 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v10 - 1) + 48))(v9, 1, v10) != 1)
  {
    if (a2)
    {
      v12 = &v9[v10[6]];
      v13 = *(_QWORD *)v12 == a1 && *((_QWORD *)v12 + 1) == a2;
      if (v13 || (sub_1BC818694() & 1) != 0)
      {
        if ((v9[v10[8]] & 1) != 0)
          v11 = 0;
        else
          v11 = v9[v10[7]] ^ 1;
      }
    }
    v6 = type metadata accessor for NotificationContentState;
  }
  sub_1BC6ED784((uint64_t)v9, v6);
  return v11 & 1;
}

uint64_t Optional<A>.shouldRemoveNotification(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  BOOL v12;
  uint64_t v14;

  v3 = v2;
  sub_1BC77A824(0);
  v6 = (uint64_t (*)(_QWORD))sub_1BC77A824;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECB08(v3, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BC77A824);
  v10 = type metadata accessor for NotificationContentState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    a2 = 0;
  }
  else
  {
    if (a2)
    {
      v11 = &v9[*(int *)(v10 + 24)];
      v12 = *(_QWORD *)v11 == a1 && *((_QWORD *)v11 + 1) == a2;
      if (v12 || (sub_1BC818694() & 1) != 0)
        a2 = v9[*(int *)(v10 + 32)];
      else
        a2 = 0;
    }
    v6 = type metadata accessor for NotificationContentState;
  }
  sub_1BC6ED784((uint64_t)v9, v6);
  return a2;
}

uint64_t _s14HealthPlatform24NotificationContentStateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  char v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  char v13;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BC818694(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = (int *)type metadata accessor for NotificationContentState(0);
    if ((sub_1BC816F18() & 1) == 0)
    {
LABEL_13:
      v6 = 0;
      return v6 & 1;
    }
    v8 = v7[6];
    v9 = *(_QWORD *)((char *)a1 + v8);
    v10 = *(_QWORD *)((char *)a1 + v8 + 8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v9 == *v11 && v10 == v11[1];
    if (v12 || (v13 = sub_1BC818694(), v6 = 0, (v13 & 1) != 0))
    {
      if (*((unsigned __int8 *)a1 + v7[7]) == *((unsigned __int8 *)a2 + v7[7]))
      {
        v6 = *((_BYTE *)a1 + v7[8]) ^ *((_BYTE *)a2 + v7[8]) ^ 1;
        return v6 & 1;
      }
      goto LABEL_13;
    }
  }
  return v6 & 1;
}

unint64_t sub_1BC788BA4()
{
  unint64_t result;

  result = qword_1EF45C038;
  if (!qword_1EF45C038)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81EA58, &type metadata for NotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C038);
  }
  return result;
}

uint64_t sub_1BC788BE8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC816F3C();
    result = MEMORY[0x1BCCF5AB4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s14HealthPlatform33ProtectedNotificationContentStateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BC818694(), result = 0, (v5 & 1) != 0))
  {
    v7 = type metadata accessor for ProtectedNotificationContentState(0);
    if ((sub_1BC816F18() & 1) != 0)
    {
      v8 = *(int *)(v7 + 24);
      v9 = *(_QWORD *)((char *)a1 + v8);
      v10 = *(_QWORD *)((char *)a1 + v8 + 8);
      v11 = (_QWORD *)((char *)a2 + v8);
      if (v9 == *v11 && v10 == v11[1])
        return 1;
      else
        return sub_1BC818694();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1BC788CDC()
{
  unint64_t result;

  result = qword_1EF45C060;
  if (!qword_1EF45C060)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81EA08, &type metadata for ProtectedNotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C060);
  }
  return result;
}

uint64_t _s14HealthPlatform35UnprotectedNotificationContentStateV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  char v6;
  uint64_t v7;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_1BC818694(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = type metadata accessor for UnprotectedNotificationContentState(0);
    if ((sub_1BC816F18() & 1) != 0
      && *((unsigned __int8 *)a1 + *(int *)(v7 + 24)) == *((unsigned __int8 *)a2 + *(int *)(v7 + 24)))
    {
      v6 = *((_BYTE *)a1 + *(int *)(v7 + 28)) ^ *((_BYTE *)a2 + *(int *)(v7 + 28)) ^ 1;
    }
    else
    {
      v6 = 0;
    }
  }
  return v6 & 1;
}

unint64_t sub_1BC788DCC()
{
  unint64_t result;

  result = qword_1EF45C078;
  if (!qword_1EF45C078)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E9B8, &type metadata for UnprotectedNotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C078);
  }
  return result;
}

void sub_1BC788E10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
}

unint64_t sub_1BC788E6C()
{
  unint64_t result;

  result = qword_1EF45C088;
  if (!qword_1EF45C088)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for NotificationContentState.DataError, &type metadata for NotificationContentState.DataError);
    atomic_store(result, (unint64_t *)&qword_1EF45C088);
  }
  return result;
}

_BYTE *sub_1BC788EB0@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

unint64_t sub_1BC788F20()
{
  unint64_t result;

  result = qword_1EF45C090;
  if (!qword_1EF45C090)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for NotificationContentState.DataError, &type metadata for NotificationContentState.DataError);
    atomic_store(result, (unint64_t *)&qword_1EF45C090);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for NotificationContentState(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC816F3C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[6];
    v14 = a3[7];
    v15 = (_QWORD *)((char *)v4 + v13);
    v16 = (_QWORD *)((char *)a2 + v13);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
    *((_BYTE *)v4 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

_QWORD *initializeWithCopy for NotificationContentState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC816F3C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for NotificationContentState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[6];
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *initializeWithTake for NotificationContentState(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_QWORD *assignWithTake for NotificationContentState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  v16 = a3[8];
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationContentState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for NotificationContentState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC789304()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC816F3C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationContentState.DataError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC7893D0 + 4 * byte_1BC81E3AE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC789404 + 4 * byte_1BC81E3A9[v4]))();
}

uint64_t sub_1BC789404(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC78940C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC789414);
  return result;
}

uint64_t sub_1BC789420(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC789428);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC78942C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC789434(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationContentState.DataError()
{
  return &type metadata for NotificationContentState.DataError;
}

uint64_t *initializeBufferWithCopyOfBuffer for ProtectedNotificationContentState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC816F3C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 24);
    v14 = (uint64_t *)((char *)v4 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s14HealthPlatform24NotificationContentStateVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BC816F3C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ProtectedNotificationContentState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC816F3C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ProtectedNotificationContentState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for ProtectedNotificationContentState(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *assignWithTake for ProtectedNotificationContentState(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)((char *)a1 + v11);
  v13 = (_QWORD *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProtectedNotificationContentState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ProtectedNotificationContentState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC7897E4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC816F3C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for UnprotectedNotificationContentState(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BC816F3C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *((_BYTE *)v4 + v13) = *((_BYTE *)a2 + v13);
  }
  return v4;
}

uint64_t destroy for UnprotectedNotificationContentState(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BC816F3C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for UnprotectedNotificationContentState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC816F3C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v12) = *((_BYTE *)a2 + v12);
  return a1;
}

_QWORD *assignWithCopy for UnprotectedNotificationContentState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  return a1;
}

_OWORD *initializeWithTake for UnprotectedNotificationContentState(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v10) = *((_BYTE *)a2 + v10);
  return a1;
}

_QWORD *assignWithTake for UnprotectedNotificationContentState(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BC816F3C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *((_BYTE *)a1 + v11) = *((_BYTE *)a2 + v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for UnprotectedNotificationContentState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BC816F3C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for UnprotectedNotificationContentState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BC816F3C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BC789CA8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC816F3C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UnprotectedNotificationContentState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for UnprotectedNotificationContentState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC789E04 + 4 * byte_1BC81E3B8[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC789E38 + 4 * byte_1BC81E3B3[v4]))();
}

uint64_t sub_1BC789E38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC789E40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC789E48);
  return result;
}

uint64_t sub_1BC789E54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC789E5CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC789E60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC789E68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UnprotectedNotificationContentState.CodingKeys()
{
  return &type metadata for UnprotectedNotificationContentState.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ProtectedNotificationContentState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC789ED0 + 4 * byte_1BC81E3C2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC789F04 + 4 * byte_1BC81E3BD[v4]))();
}

uint64_t sub_1BC789F04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC789F0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC789F14);
  return result;
}

uint64_t sub_1BC789F20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC789F28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC789F2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC789F34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProtectedNotificationContentState.CodingKeys()
{
  return &type metadata for ProtectedNotificationContentState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NotificationContentState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationContentState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BC78A02C + 4 * byte_1BC81E3CC[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BC78A060 + 4 * byte_1BC81E3C7[v4]))();
}

uint64_t sub_1BC78A060(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC78A068(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC78A070);
  return result;
}

uint64_t sub_1BC78A07C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC78A084);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BC78A088(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC78A090(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NotificationContentState.CodingKeys()
{
  return &type metadata for NotificationContentState.CodingKeys;
}

unint64_t sub_1BC78A0B0()
{
  unint64_t result;

  result = qword_1EF45C098;
  if (!qword_1EF45C098)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E820, &type metadata for NotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C098);
  }
  return result;
}

unint64_t sub_1BC78A0F8()
{
  unint64_t result;

  result = qword_1EF45C0A0;
  if (!qword_1EF45C0A0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E8D8, &type metadata for ProtectedNotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0A0);
  }
  return result;
}

unint64_t sub_1BC78A140()
{
  unint64_t result;

  result = qword_1EF45C0A8;
  if (!qword_1EF45C0A8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E990, &type metadata for UnprotectedNotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0A8);
  }
  return result;
}

unint64_t sub_1BC78A188()
{
  unint64_t result;

  result = qword_1EF45C0B0;
  if (!qword_1EF45C0B0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E900, &type metadata for UnprotectedNotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0B0);
  }
  return result;
}

unint64_t sub_1BC78A1D0()
{
  unint64_t result;

  result = qword_1EF45C0B8;
  if (!qword_1EF45C0B8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E928, &type metadata for UnprotectedNotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0B8);
  }
  return result;
}

unint64_t sub_1BC78A218()
{
  unint64_t result;

  result = qword_1EF45C0C0;
  if (!qword_1EF45C0C0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E848, &type metadata for ProtectedNotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0C0);
  }
  return result;
}

unint64_t sub_1BC78A260()
{
  unint64_t result;

  result = qword_1EF45C0C8;
  if (!qword_1EF45C0C8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E870, &type metadata for ProtectedNotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0C8);
  }
  return result;
}

unint64_t sub_1BC78A2A8()
{
  unint64_t result;

  result = qword_1EF45C0D0;
  if (!qword_1EF45C0D0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E790, &type metadata for NotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0D0);
  }
  return result;
}

unint64_t sub_1BC78A2F0()
{
  unint64_t result;

  result = qword_1EF45C0D8;
  if (!qword_1EF45C0D8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81E7B8, &type metadata for NotificationContentState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0D8);
  }
  return result;
}

uint64_t sub_1BC78A334(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53746E65746E6F63 && a2 == 0xEC00000065746174 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BC829140 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x776F6E6B63417369 && a2 == 0xEE0064656764656CLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BC78A580(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53746E65746E6F63 && a2 == 0xEC00000065746174)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC78A6E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BC829140 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x776F6E6B63417369 && a2 == 0xEE0064656764656CLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

HealthPlatform::SharableModelVersion __swiftcall SharableModelVersion.init(latestSupported:minimumSupported:)(Swift::Int latestSupported, Swift::Int minimumSupported)
{
  Swift::Int *v2;
  Swift::Int v3;
  Swift::Int v4;
  Swift::Int *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  HealthPlatform::SharableModelVersion result;
  uint64_t v14;

  v3 = minimumSupported;
  v4 = latestSupported;
  v5 = v2;
  if (latestSupported < minimumSupported)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v6 = sub_1BC817590();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED6BB5D0);
    v7 = sub_1BC81756C();
    v8 = sub_1BC817E84();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v10 = swift_slowAlloc();
      *(_DWORD *)v9 = 136315650;
      v14 = v10;
      sub_1BC78BC68();
      v11 = sub_1BC817AF4();
      sub_1BC6E14D8(v11, v12, &v14);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2048;
      sub_1BC818148();
      *(_WORD *)(v9 + 22) = 2048;
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, v7, v8, "[%s]: error: Malformed version with %ld < %ld, returning false version", (uint8_t *)v9, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v10, -1, -1);
      MEMORY[0x1BCCF5BA4](v9, -1, -1);
    }

    v3 = -1;
    v4 = -1;
  }
  *v5 = v4;
  v5[1] = v3;
  result.minimumSupported = minimumSupported;
  result.latestSupported = latestSupported;
  return result;
}

void PluginSharableModel.init(identifier:version:authorizationIdentifiers:objectTypes:data:sourceTimeZone:sourceLocale:sharedSummary:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void);
  uint64_t v48;
  uint64_t v49;

  v45 = a5;
  v46 = a8;
  v43 = a2;
  v44 = a4;
  v49 = a11;
  v41 = a1;
  v42 = a10;
  sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  v16 = MEMORY[0x1E0C80A78](v15);
  v40 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v38 - v18;
  v20 = sub_1BC816FCC();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v39 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *a3;
  v24 = a3[1];
  *(_QWORD *)(a9 + 64) = 0;
  v25 = type metadata accessor for PluginSharableModel();
  v26 = a9 + *(int *)(v25 + 40);
  v27 = sub_1BC81702C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  v28 = a9 + *(int *)(v25 + 44);
  v47 = *(void (**)(void))(v21 + 56);
  v48 = v28;
  v47();
  v29 = v43;
  *(_QWORD *)a9 = v41;
  *(_QWORD *)(a9 + 8) = v29;
  *(_QWORD *)(a9 + 16) = v23;
  *(_QWORD *)(a9 + 24) = v24;
  v30 = v42;
  v31 = v45;
  v32 = v46;
  *(_QWORD *)(a9 + 32) = v44;
  *(_QWORD *)(a9 + 40) = v31;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  sub_1BC6ECBE8(a6, a7);
  sub_1BC78BCDC(v32, v26);
  sub_1BC77A368(v30, (uint64_t)v19, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1BC6ECB60(a6, a7);
    v33 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
    sub_1BC754350(v30, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    sub_1BC754350(v32, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    sub_1BC754350((uint64_t)v19, &qword_1ED6B5CA8, v33);
    v34 = v48;
    sub_1BC754350(v48, &qword_1ED6B5CA8, v33);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47)(v34, 1, 1, v20);
  }
  else
  {
    v35 = v39;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v39, v19, v20);
    sub_1BC816F54();
    v36 = (uint64_t)v40;
    sub_1BC816F48();
    sub_1BC6ECB60(a6, a7);
    v37 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
    sub_1BC754350(v30, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    sub_1BC754350(v32, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v35, v20);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v47)(v36, 0, 1, v20);
    sub_1BC78BD30(v36, v48, &qword_1ED6B5CA8, v37);
  }

  *(_QWORD *)(a9 + 64) = v49;
}

uint64_t PluginSharableModel.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

__n128 PluginSharableModel.version.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[1];
  *a1 = result;
  return result;
}

__n128 PluginSharableModel.version.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  v1[1] = *a1;
  return result;
}

uint64_t (*PluginSharableModel.version.modify())()
{
  return nullsub_1;
}

uint64_t PluginSharableModel.authorizationIdentifiers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PluginSharableModel.authorizationIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*PluginSharableModel.authorizationIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t PluginSharableModel.objectTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PluginSharableModel.objectTypes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*PluginSharableModel.objectTypes.modify())()
{
  return nullsub_1;
}

uint64_t PluginSharableModel.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  sub_1BC6ECBE8(v1, *(_QWORD *)(v0 + 56));
  return v1;
}

uint64_t PluginSharableModel.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC6ECB60(*(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*PluginSharableModel.data.modify())()
{
  return nullsub_1;
}

void *PluginSharableModel.sharedSummary.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

void PluginSharableModel.sharedSummary.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
}

uint64_t (*PluginSharableModel.sharedSummary.modify())()
{
  return nullsub_1;
}

int64x2_t static PluginSharableModel.currentCodeVersion.getter@<Q0>(int64x2_t *a1@<X8>)
{
  int64x2_t result;

  result = vdupq_n_s64(1uLL);
  *a1 = result;
  return result;
}

uint64_t PluginSharableModel.sourceTimeZone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PluginSharableModel();
  return sub_1BC77A368(v1 + *(int *)(v3 + 40), a1, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
}

uint64_t PluginSharableModel.sourceTimeZone.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PluginSharableModel();
  return sub_1BC78BD30(a1, v1 + *(int *)(v3 + 40), &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
}

uint64_t (*PluginSharableModel.sourceTimeZone.modify())()
{
  type metadata accessor for PluginSharableModel();
  return nullsub_1;
}

uint64_t PluginSharableModel.sourceLocale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PluginSharableModel();
  return sub_1BC77A368(v1 + *(int *)(v3 + 44), a1, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
}

uint64_t PluginSharableModel.sourceLocale.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for PluginSharableModel();
  return sub_1BC78BD30(a1, v1 + *(int *)(v3 + 44), &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
}

uint64_t (*PluginSharableModel.sourceLocale.modify())()
{
  type metadata accessor for PluginSharableModel();
  return nullsub_1;
}

BOOL static SharableModelVersion.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t PluginSharableModel.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v4 = sub_1BC816FCC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v35 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6E1440(0, &qword_1ED6B5CA8, v7);
  MEMORY[0x1E0C80A78](v8);
  v36 = (uint64_t)&v32 - v9;
  v10 = sub_1BC81702C();
  v37 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v34 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6E1440(0, &qword_1ED6BACF8, v12);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - v14;
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  sub_1BC818748();
  sub_1BC818748();
  v16 = v1[4];
  v17 = *(_QWORD *)(v16 + 16);
  sub_1BC818748();
  if (v17)
  {
    v32 = v5;
    v33 = v4;
    v18 = *(_QWORD *)(sub_1BC81714C() - 8);
    v19 = v16 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    v20 = *(_QWORD *)(v18 + 72);
    sub_1BC6E1788(&qword_1ED6B8AA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], MEMORY[0x1E0D2BF08]);
    swift_bridgeObjectRetain();
    do
    {
      sub_1BC817A7C();
      v19 += v20;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    v5 = v32;
    v4 = v33;
  }
  v21 = v2[5];
  swift_bridgeObjectRetain();
  sub_1BC78BD7C(a1, v21);
  swift_bridgeObjectRelease();
  v22 = v2[6];
  v23 = v2[7];
  sub_1BC6ECBE8(v22, v23);
  sub_1BC816E70();
  sub_1BC6ECB60(v22, v23);
  v24 = (void *)v2[8];
  sub_1BC818754();
  if (v24)
  {
    v25 = v24;
    sub_1BC8180DC();

  }
  v26 = type metadata accessor for PluginSharableModel();
  sub_1BC77A368((uint64_t)v2 + *(int *)(v26 + 40), (uint64_t)v15, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  v27 = v37;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v15, 1, v10) == 1)
  {
    sub_1BC818754();
  }
  else
  {
    v28 = v34;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v34, v15, v10);
    sub_1BC818754();
    sub_1BC6E1788(&qword_1ED6B87F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1490]);
    sub_1BC817A7C();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v10);
  }
  v29 = v36;
  sub_1BC77A368((uint64_t)v2 + *(int *)(v26 + 44), v36, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v29, 1, v4) == 1)
    return sub_1BC818754();
  v31 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v35, v29, v4);
  sub_1BC818754();
  sub_1BC6E1788(&qword_1ED6B87E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E58]);
  sub_1BC817A7C();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v31, v4);
}

uint64_t PluginSharableModel.hashValue.getter()
{
  _BYTE v1[72];

  sub_1BC81873C();
  PluginSharableModel.hash(into:)((uint64_t)v1);
  return sub_1BC818778();
}

uint64_t sub_1BC78B54C()
{
  _BYTE v1[72];

  sub_1BC81873C();
  PluginSharableModel.hash(into:)((uint64_t)v1);
  return sub_1BC818778();
}

uint64_t sub_1BC78B58C()
{
  _BYTE v1[72];

  sub_1BC81873C();
  PluginSharableModel.hash(into:)((uint64_t)v1);
  return sub_1BC818778();
}

uint64_t SharableModelVersion.latestSupported.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SharableModelVersion.latestSupported.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*SharableModelVersion.latestSupported.modify())()
{
  return nullsub_1;
}

uint64_t SharableModelVersion.minimumSupported.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t SharableModelVersion.minimumSupported.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*SharableModelVersion.minimumSupported.modify())()
{
  return nullsub_1;
}

Swift::Bool __swiftcall SharableModelVersion.isCompatible(with:)(HealthPlatform::SharableModelVersion_optional with)
{
  _QWORD *v1;
  uint64_t v3;

  if ((*(_BYTE *)(with.value.latestSupported + 16) & 1) != 0)
    return 0;
  v3 = *(_QWORD *)(with.value.latestSupported + 8);
  return v3 >= v1[1] && *v1 >= v3;
}

unint64_t SharableModelVersion.description.getter()
{
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  return 0xD00000000000001ELL;
}

uint64_t SharableModelVersion.hash(into:)()
{
  sub_1BC818748();
  return sub_1BC818748();
}

uint64_t sub_1BC78B768()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 0x755374736574616CLL;
}

uint64_t sub_1BC78B7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC78DAAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC78B7D8()
{
  sub_1BC78C88C();
  return sub_1BC8187FC();
}

uint64_t sub_1BC78B800()
{
  sub_1BC78C88C();
  return sub_1BC818808();
}

uint64_t SharableModelVersion.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];
  char v11;
  char v12;

  sub_1BC78C8D0(0, &qword_1ED6B8D50, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v10 - v7;
  v10[1] = *(_QWORD *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC78C88C();
  sub_1BC8187F0();
  v12 = 0;
  sub_1BC818628();
  if (!v2)
  {
    v11 = 1;
    sub_1BC818628();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t SharableModelVersion.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t SharableModelVersion.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;

  sub_1BC78C8D0(0, &qword_1EF45C0E8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC78C88C();
  sub_1BC8187E4();
  if (!v2)
  {
    v15 = 0;
    v10 = sub_1BC8185BC();
    v14 = 1;
    v12 = sub_1BC8185BC();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

BOOL sub_1BC78BAF8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1BC78BB10()
{
  sub_1BC81873C();
  sub_1BC818748();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC78BB68()
{
  sub_1BC818748();
  return sub_1BC818748();
}

uint64_t sub_1BC78BBA0()
{
  sub_1BC81873C();
  sub_1BC818748();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC78BBF8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SharableModelVersion.init(from:)(a1, a2);
}

uint64_t sub_1BC78BC0C(_QWORD *a1)
{
  return SharableModelVersion.encode(to:)(a1);
}

unint64_t sub_1BC78BC68()
{
  unint64_t result;

  result = qword_1EF45C0E0;
  if (!qword_1EF45C0E0)
  {
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45C0E0);
  }
  return result;
}

uint64_t type metadata accessor for PluginSharableModel()
{
  uint64_t result;

  result = qword_1ED6BAD98;
  if (!qword_1ED6BAD98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC78BCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC78BD30(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BC6E1440(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

void sub_1BC78BD7C(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t i;
  void **v5;
  void *v6;
  id v7;

  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1BC8184E4();
    swift_bridgeObjectRelease();
    sub_1BC818748();
    swift_bridgeObjectRetain();
    v3 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (!v3)
      return;
  }
  else
  {
    sub_1BC818748();
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3)
      return;
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      MEMORY[0x1BCCF4FB0](i, a2);
      sub_1BC8180DC();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    v5 = (void **)(a2 + 32);
    do
    {
      v6 = *v5++;
      v7 = v6;
      sub_1BC8180DC();

      --v3;
    }
    while (v3);
  }
}

void _s14HealthPlatform25PluginSharableModelChangeO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_1BC78BEC8()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 v2;
  int v3;
  char v4;

  if (v3)
  {
    sub_1BC78D778(v0, v3);
    sub_1BC78D778(v1, v2);
    sub_1BC78D79C(v1, v2);
    sub_1BC78D79C(v0, v3);
    return 0;
  }
  else
  {
    sub_1BC78D778(v0, 0);
    sub_1BC78D778(v1, 0);
    v4 = sub_1BC7CC918(v1, v0);
    sub_1BC78D79C(v1, 0);
    sub_1BC78D79C(v0, 0);
    return v4 & 1;
  }
}

BOOL _s14HealthPlatform19PluginSharableModelV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char v33;
  _BOOL8 result;
  char v35;
  void *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  unsigned int (*v41)(uint64_t, uint64_t, uint64_t);
  void (*v42)(uint64_t);
  void (*v43)(uint64_t);
  unint64_t *v44;
  unint64_t *v45;
  void (*v46)(uint64_t);
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t);
  void (*v50)(char *, uint64_t);
  unint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  void (*v63)(uint64_t);
  char *v64;
  void (*v65)(uint64_t);
  char v66;
  void (*v67)(char *, uint64_t);
  id v68;
  id v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v4 = sub_1BC816FCC();
  v5 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
  v78 = v4;
  v76 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v71 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC78DBBC(0, &qword_1ED6B87F0, &qword_1ED6B5CA8, v5);
  v73 = v7;
  MEMORY[0x1E0C80A78](v7);
  v77 = (uint64_t)&v68 - v8;
  sub_1BC6E1440(0, &qword_1ED6B5CA8, v5);
  v10 = MEMORY[0x1E0C80A78](v9);
  v72 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v74 = (uint64_t)&v68 - v13;
  MEMORY[0x1E0C80A78](v12);
  v75 = (uint64_t)&v68 - v14;
  v15 = sub_1BC81702C();
  v16 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
  v79 = v15;
  v17 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC78DBBC(0, &qword_1ED6B8800, &qword_1ED6BACF8, v16);
  v21 = v20;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v68 - v22;
  sub_1BC6E1440(0, &qword_1ED6BACF8, v16);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v25);
  v30 = (char *)&v68 - v29;
  MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v68 - v31;
  if (*a1 == *a2 && a1[1] == a2[1] || (v33 = sub_1BC818694(), result = 0, (v33 & 1) != 0))
  {
    result = 0;
    if (a1[2] == a2[2] && a1[3] == a2[3])
    {
      if ((sub_1BC7CCB0C(a1[4], a2[4]) & 1) == 0)
        return 0;
      if ((sub_1BC7CCB28(a1[5], a2[5]) & 1) == 0)
        return 0;
      sub_1BC7206DC(a1[6], a1[7]);
      if ((v35 & 1) == 0)
        return 0;
      v36 = (void *)a2[8];
      if (a1[8])
      {
        if (!v36)
          return 0;
        v69 = (id)a1[8];
        v70 = sub_1BC78DC58();
        v68 = v36;
        v69 = v69;
        v37 = sub_1BC8180D0();

        if ((v37 & 1) == 0)
          return 0;
      }
      else if (v36)
      {
        return 0;
      }
      v38 = type metadata accessor for PluginSharableModel();
      sub_1BC77A368((uint64_t)a1 + *(int *)(v38 + 40), (uint64_t)v32, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
      v70 = v38;
      sub_1BC77A368((uint64_t)a2 + *(int *)(v38 + 40), (uint64_t)v30, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
      v39 = (uint64_t)&v23[*(int *)(v21 + 48)];
      v40 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
      sub_1BC77A368((uint64_t)v32, (uint64_t)v23, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
      sub_1BC77A368((uint64_t)v30, v39, &qword_1ED6BACF8, v40);
      v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
      if (v41((uint64_t)v23, 1, v79) == 1)
      {
        v42 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
        sub_1BC754350((uint64_t)v30, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
        sub_1BC754350((uint64_t)v32, &qword_1ED6BACF8, v42);
        if (v41(v39, 1, v79) == 1)
        {
          sub_1BC754350((uint64_t)v23, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
LABEL_21:
          v51 = v70;
          v52 = (uint64_t)a1 + *(int *)(v70 + 44);
          v53 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
          v54 = v75;
          sub_1BC77A368(v52, v75, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
          v55 = v74;
          sub_1BC77A368((uint64_t)a2 + *(int *)(v51 + 44), v74, &qword_1ED6B5CA8, v53);
          v56 = v77;
          v57 = v77 + *(int *)(v73 + 48);
          sub_1BC77A368(v54, v77, &qword_1ED6B5CA8, v53);
          sub_1BC77A368(v55, v57, &qword_1ED6B5CA8, v53);
          v58 = v76;
          v59 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
          v60 = v78;
          if (v59(v56, 1, v78) == 1)
          {
            v61 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
            sub_1BC754350(v55, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
            sub_1BC754350(v54, &qword_1ED6B5CA8, v61);
            if (v59(v57, 1, v60) == 1)
            {
              sub_1BC754350(v56, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
              return 1;
            }
            goto LABEL_26;
          }
          v62 = v72;
          sub_1BC77A368(v56, v72, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
          if (v59(v57, 1, v60) == 1)
          {
            v63 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
            sub_1BC754350(v55, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
            sub_1BC754350(v54, &qword_1ED6B5CA8, v63);
            (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v62, v60);
LABEL_26:
            v44 = &qword_1ED6B87F0;
            v45 = &qword_1ED6B5CA8;
            v46 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
            v47 = v56;
            goto LABEL_27;
          }
          v64 = v71;
          (*(void (**)(char *, uint64_t, uint64_t))(v58 + 32))(v71, v57, v60);
          v65 = (void (*)(uint64_t))MEMORY[0x1E0CB0E38];
          sub_1BC6E1788(&qword_1EF45C100, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CB0E60]);
          v66 = sub_1BC817AB8();
          v67 = *(void (**)(char *, uint64_t))(v58 + 8);
          v67(v64, v60);
          sub_1BC754350(v55, &qword_1ED6B5CA8, v65);
          sub_1BC754350(v54, &qword_1ED6B5CA8, v65);
          v67((char *)v62, v60);
          sub_1BC754350(v56, &qword_1ED6B5CA8, v65);
          return (v66 & 1) != 0;
        }
      }
      else
      {
        sub_1BC77A368((uint64_t)v23, (uint64_t)v27, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
        if (v41(v39, 1, v79) != 1)
        {
          v48 = v79;
          (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(v19, v39, v79);
          v49 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
          sub_1BC6E1788(&qword_1EF45C108, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CB1498]);
          LODWORD(v69) = sub_1BC817AB8();
          v50 = *(void (**)(char *, uint64_t))(v17 + 8);
          v50(v19, v48);
          sub_1BC754350((uint64_t)v30, &qword_1ED6BACF8, v49);
          sub_1BC754350((uint64_t)v32, &qword_1ED6BACF8, v49);
          v50(v27, v48);
          sub_1BC754350((uint64_t)v23, &qword_1ED6BACF8, v49);
          if ((v69 & 1) == 0)
            return 0;
          goto LABEL_21;
        }
        v43 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
        sub_1BC754350((uint64_t)v30, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
        sub_1BC754350((uint64_t)v32, &qword_1ED6BACF8, v43);
        (*(void (**)(char *, uint64_t))(v17 + 8))(v27, v79);
      }
      v44 = &qword_1ED6B8800;
      v45 = &qword_1ED6BACF8;
      v46 = (void (*)(uint64_t))MEMORY[0x1E0CB1470];
      v47 = (uint64_t)v23;
LABEL_27:
      sub_1BC78DC1C(v47, v44, v45, v46);
      return 0;
    }
  }
  return result;
}

unint64_t sub_1BC78C88C()
{
  unint64_t result;

  result = qword_1ED6B8810;
  if (!qword_1ED6B8810)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81EE48, &type metadata for SharableModelVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B8810);
  }
  return result;
}

void sub_1BC78C8D0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC78C88C();
    v7 = a3(a1, &type metadata for SharableModelVersion.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC78C92C()
{
  return sub_1BC6E1788(&qword_1ED6B8808, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, (uint64_t)&protocol conformance descriptor for PluginSharableModel);
}

unint64_t sub_1BC78C95C()
{
  unint64_t result;

  result = qword_1EF45C0F0;
  if (!qword_1EF45C0F0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for SharableModelVersion, &type metadata for SharableModelVersion);
    atomic_store(result, (unint64_t *)&qword_1EF45C0F0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for PluginSharableModel(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(const void *, uint64_t, uint64_t);
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    v9 = a2[6];
    v10 = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC6ECBE8(v9, v10);
    *(_QWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 56) = v10;
    v11 = (void *)a2[8];
    *(_QWORD *)(a1 + 64) = v11;
    v12 = *(int *)(a3 + 40);
    v13 = (void *)(a1 + v12);
    v14 = (char *)a2 + v12;
    v15 = sub_1BC81702C();
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
    v18 = v11;
    if (v17(v14, 1, v15))
    {
      sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v21 = *(int *)(a3 + 44);
    v22 = (void *)(a1 + v21);
    v23 = (char *)a2 + v21;
    v24 = sub_1BC816FCC();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
  }
  return a1;
}

uint64_t destroy for PluginSharableModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC6ECB60(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));

  v4 = a1 + *(int *)(a2 + 40);
  v5 = sub_1BC81702C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 44);
  v8 = sub_1BC816FCC();
  v9 = *(_QWORD *)(v8 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  return result;
}

uint64_t initializeWithCopy for PluginSharableModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC6ECBE8(v8, v9);
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v10;
  v11 = *(int *)(a3 + 40);
  v12 = (void *)(a1 + v11);
  v13 = (const void *)(a2 + v11);
  v14 = sub_1BC81702C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v10;
  if (v16(v13, 1, v14))
  {
    sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v19 = *(int *)(a3 + 44);
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1BC816FCC();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

_QWORD *assignWithCopy for PluginSharableModel(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2[6];
  v7 = a2[7];
  sub_1BC6ECBE8(v6, v7);
  v8 = a1[6];
  v9 = a1[7];
  a1[6] = v6;
  a1[7] = v7;
  sub_1BC6ECB60(v8, v9);
  v10 = (void *)a1[8];
  v11 = (void *)a2[8];
  a1[8] = v11;
  v12 = v11;

  v13 = *(int *)(a3 + 40);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1BC81702C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  v22 = *(int *)(a3 + 44);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_1BC816FCC();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  return a1;
}

uint64_t initializeWithTake for PluginSharableModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  const void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v8 = *(int *)(a3 + 40);
  v9 = (void *)(a1 + v8);
  v10 = (const void *)(a2 + v8);
  v11 = sub_1BC81702C();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = *(int *)(a3 + 44);
  v15 = (void *)(a1 + v14);
  v16 = (const void *)(a2 + v14);
  v17 = sub_1BC816FCC();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t assignWithTake for PluginSharableModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(void *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  sub_1BC6ECB60(v7, v8);
  v9 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);

  v10 = *(int *)(a3 + 40);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1BC81702C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = *(int *)(a3 + 44);
  v20 = (void *)(a1 + v19);
  v21 = (void *)(a2 + v19);
  v22 = sub_1BC816FCC();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v25 = v24(v20, 1, v22);
  v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v20, v21, v22);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginSharableModel()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC78D468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 40);
    }
    else
    {
      sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PluginSharableModel()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC78D534(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BC6E1440(0, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      sub_1BC6E1440(0, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
      v10 = v12;
      v9 = *(_QWORD *)(v12 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1BC78D5F0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1BC6E1440(319, &qword_1ED6BACF8, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  if (v0 <= 0x3F)
  {
    sub_1BC6E1440(319, &qword_1ED6B5CA8, (void (*)(uint64_t))MEMORY[0x1E0CB0E38]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for SharableModelVersion(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SharableModelVersion(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SharableModelVersion()
{
  return &type metadata for SharableModelVersion;
}

uint64_t dispatch thunk of SharableModelGenerator.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SharableModelGenerator.domain.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t initializeBufferWithCopyOfBuffer for PluginSharableModelChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC78D778(*(_QWORD *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1BC78D778(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 4u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for PluginSharableModelChange(uint64_t a1)
{
  return sub_1BC78D79C(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1BC78D79C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t result;

  if (a2 <= 4u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t assignWithCopy for PluginSharableModelChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC78D778(*(_QWORD *)a2, v4);
  v5 = *(_QWORD *)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BC78D79C(v5, v6);
  return a1;
}

uint64_t assignWithTake for PluginSharableModelChange(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BC78D79C(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for PluginSharableModelChange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PluginSharableModelChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC78D8C8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 4u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1BC78D8E0(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(_QWORD *)result = a2 - 5;
    LOBYTE(a2) = 5;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PluginSharableModelChange()
{
  return &type metadata for PluginSharableModelChange;
}

uint64_t storeEnumTagSinglePayload for SharableModelVersion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC78D954 + 4 * byte_1BC81EABB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC78D988 + 4 * byte_1BC81EAB6[v4]))();
}

uint64_t sub_1BC78D988(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC78D990(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC78D998);
  return result;
}

uint64_t sub_1BC78D9A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC78D9ACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC78D9B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC78D9B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SharableModelVersion.CodingKeys()
{
  return &type metadata for SharableModelVersion.CodingKeys;
}

unint64_t sub_1BC78D9D8()
{
  unint64_t result;

  result = qword_1EF45C0F8;
  if (!qword_1EF45C0F8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81EE20, &type metadata for SharableModelVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C0F8);
  }
  return result;
}

unint64_t sub_1BC78DA20()
{
  unint64_t result;

  result = qword_1ED6B8820;
  if (!qword_1ED6B8820)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81ED90, &type metadata for SharableModelVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B8820);
  }
  return result;
}

unint64_t sub_1BC78DA68()
{
  unint64_t result;

  result = qword_1ED6B8818;
  if (!qword_1ED6B8818)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81EDB8, &type metadata for SharableModelVersion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED6B8818);
  }
  return result;
}

uint64_t sub_1BC78DAAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x755374736574616CLL && a2 == 0xEF646574726F7070;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BC8291A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1BC78DBBC(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC6E1440(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BC78DC1C(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5;

  sub_1BC78DBBC(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

unint64_t sub_1BC78DC58()
{
  unint64_t result;

  result = qword_1ED6B84C8;
  if (!qword_1ED6B84C8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B84C8);
  }
  return result;
}

HealthPlatform::ContentKind_optional __swiftcall ContentKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HealthPlatform::ContentKind_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1BC8186B8();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 6;
  switch(v3)
  {
    case 0:
      goto LABEL_7;
    case 1:
      v5 = 1;
      goto LABEL_7;
    case 2:
      v5 = 2;
      goto LABEL_7;
    case 3:
      v5 = 3;
      goto LABEL_7;
    case 4:
      v5 = 4;
      goto LABEL_7;
    case 5:
      v5 = 5;
LABEL_7:
      v6 = v5;
      break;
    case 6:
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    case 20:
      v6 = 20;
      break;
    case 21:
      v6 = 21;
      break;
    case 22:
      v6 = 22;
      break;
    case 23:
      v6 = 23;
      break;
    default:
      v6 = 24;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t ContentKind.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BC78DE0C + 4 * byte_1BC81EEB0[*v0]))(0xD000000000000011, 0x80000001BC824B10);
}

uint64_t sub_1BC78DE0C()
{
  return 0x7472656C61;
}

uint64_t sub_1BC78DE20()
{
  return 7368801;
}

uint64_t sub_1BC78DE30()
{
  return 0x656C6369747261;
}

uint64_t sub_1BC78DE48()
{
  return 0x79726F6765746163;
}

uint64_t sub_1BC78DE60()
{
  return 1635017060;
}

uint64_t sub_1BC78DE70()
{
  return 0x6D6D755361746164;
}

unint64_t sub_1BC78DE90()
{
  return 0xD000000000000010;
}

uint64_t sub_1BC78DEC4()
{
  return 0x5365727574616566;
}

uint64_t sub_1BC78DEE8()
{
  return 0x6867696C68676968;
}

uint64_t sub_1BC78DF08()
{
  return 0x6867696C68676968;
}

uint64_t sub_1BC78DF2C()
{
  return 0x697461676976616ELL;
}

uint64_t sub_1BC78DF48()
{
  return 0x617461446F6ELL;
}

uint64_t sub_1BC78DF5C()
{
  return 0x726568746FLL;
}

uint64_t sub_1BC78DF70()
{
  return 0x6D726F6674616C70;
}

uint64_t sub_1BC78DF94()
{
  return 0x6F69746F6D6F7270;
}

uint64_t sub_1BC78DFB0()
{
  return 0x74706D6F7270;
}

uint64_t sub_1BC78DFC4()
{
  return 0x656C69666F7270;
}

uint64_t sub_1BC78DFDC()
{
  return 0x6E6F6974616C6572;
}

uint64_t sub_1BC78DFFC()
{
  return 0x73676E6974746573;
}

uint64_t sub_1BC78E014()
{
  return 0x657461647075;
}

uint64_t sub_1BC78E028()
{
  return 0x72616265646973;
}

uint64_t ContentKind.Group.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContentKind.Group.elements.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1BC78E074()
{
  qword_1ED6BAAB0 = 0x73656369746F6ELL;
  qword_1ED6BAAB8 = 0xE700000000000000;
  qword_1ED6BAAC0 = (uint64_t)&unk_1E7515C20;
}

uint64_t static ContentKind.Group.notices.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6BACB0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_1ED6BAAB8;
  v3 = qword_1ED6BAAC0;
  *a1 = qword_1ED6BAAB0;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ContentKind.Group.notices.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;

  v1 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  if (qword_1ED6BACB0 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED6BAAB0 = v1;
  *(_OWORD *)&qword_1ED6BAAB8 = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContentKind.Group.notices.modify())()
{
  if (qword_1ED6BACB0 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1BC78E228()
{
  qword_1ED6BB258 = 0x6867696C68676968;
  qword_1ED6BB260 = 0xEA00000000007374;
  qword_1ED6BB268 = (uint64_t)&unk_1E7515D38;
}

uint64_t static ContentKind.Group.highlights.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6BB2C8 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_1ED6BB260;
  v3 = qword_1ED6BB268;
  *a1 = qword_1ED6BB258;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ContentKind.Group.highlights.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;

  v1 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  if (qword_1ED6BB2C8 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED6BB258 = v1;
  *(_OWORD *)&qword_1ED6BB260 = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContentKind.Group.highlights.modify())()
{
  if (qword_1ED6BB2C8 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1BC78E3E0()
{
  qword_1ED6BAA98 = 0x616964656DLL;
  qword_1ED6BAAA0 = 0xE500000000000000;
  qword_1ED6BAAA8 = (uint64_t)&unk_1E7516458;
}

uint64_t static ContentKind.Group.media.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED6BAD00 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_1ED6BAAA0;
  v3 = qword_1ED6BAAA8;
  *a1 = qword_1ED6BAA98;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ContentKind.Group.media.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;

  v1 = *(_QWORD *)a1;
  v3 = *(_OWORD *)(a1 + 8);
  if (qword_1ED6BAD00 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED6BAA98 = v1;
  *(_OWORD *)&qword_1ED6BAAA0 = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContentKind.Group.media.modify())()
{
  if (qword_1ED6BAD00 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC78E590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1BC6E1E98(0, &qword_1ED6BAC98, (uint64_t)&type metadata for ContentKind.Group, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1BC81A0E0;
  if (qword_1ED6BACB0 != -1)
    swift_once();
  swift_beginAccess();
  v1 = qword_1ED6BAAB8;
  v2 = qword_1ED6BAAC0;
  *(_QWORD *)(v0 + 32) = qword_1ED6BAAB0;
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = v2;
  v3 = qword_1ED6BAD00;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v3 != -1)
    swift_once();
  swift_beginAccess();
  v4 = qword_1ED6BAAA0;
  v5 = qword_1ED6BAAA8;
  *(_QWORD *)(v0 + 56) = qword_1ED6BAA98;
  *(_QWORD *)(v0 + 64) = v4;
  *(_QWORD *)(v0 + 72) = v5;
  off_1ED6BAAC8 = (_UNKNOWN *)v0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t static ContentKind.groups.getter()
{
  if (qword_1ED6BACB8 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t ContentKind.groups.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  _OWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v12;

  v1 = *v0;
  if (qword_1ED6BACB8 != -1)
    swift_once();
  v2 = (char *)off_1ED6BAAC8;
  v3 = *((_QWORD *)off_1ED6BAAC8 + 2);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v4 = v2 + 40;
  v5 = MEMORY[0x1E0DEE9D8];
  do
  {
    v6 = *((_QWORD *)v4 - 1);
    v12 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    v7 = sub_1BC6E83B4(v1, *((uint64_t *)&v12 + 1));
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1BC6E8D30(0, *(_QWORD *)(v5 + 16) + 1, 1);
      v9 = *(_QWORD *)(v5 + 16);
      v8 = *(_QWORD *)(v5 + 24);
      if (v9 >= v8 >> 1)
        sub_1BC6E8D30(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v5 + 16) = v9 + 1;
      v10 = v5 + 24 * v9;
      *(_QWORD *)(v10 + 32) = v6;
      *(_OWORD *)(v10 + 40) = v12;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v4 = (_OWORD *)((char *)v4 + 24);
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v5;
}

void *static ContentKind.allCases.getter()
{
  return &unk_1E7516480;
}

uint64_t sub_1BC78E890(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BC7E08A0(*a1, *a2);
}

uint64_t sub_1BC78E89C()
{
  sub_1BC81873C();
  ContentKind.rawValue.getter();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t sub_1BC78E900()
{
  ContentKind.rawValue.getter();
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC78E950()
{
  sub_1BC81873C();
  ContentKind.rawValue.getter();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

HealthPlatform::ContentKind_optional sub_1BC78E9B0(Swift::String *a1)
{
  return ContentKind.init(rawValue:)(*a1);
}

uint64_t sub_1BC78E9BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContentKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC78E9E0()
{
  sub_1BC78EDB8();
  return sub_1BC817C2C();
}

uint64_t sub_1BC78EA3C()
{
  sub_1BC78EDB8();
  return sub_1BC817C14();
}

void sub_1BC78EA88(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7516480;
}

unint64_t sub_1BC78EA9C()
{
  unint64_t result;

  result = qword_1ED6BB270;
  if (!qword_1ED6BB270)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ContentKind, &type metadata for ContentKind);
    atomic_store(result, (unint64_t *)&qword_1ED6BB270);
  }
  return result;
}

unint64_t sub_1BC78EAE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45C110;
  if (!qword_1EF45C110)
  {
    sub_1BC6E1E98(255, &qword_1EF45C118, (uint64_t)&type metadata for ContentKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45C110);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ContentKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1BC78EB90 + 4 * byte_1BC81EECD[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1BC78EBC4 + 4 * byte_1BC81EEC8[v4]))();
}

uint64_t sub_1BC78EBC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC78EBCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC78EBD4);
  return result;
}

uint64_t sub_1BC78EBE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC78EBE8);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1BC78EBEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC78EBF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentKind()
{
  return &type metadata for ContentKind;
}

uint64_t destroy for ContentKind.Group()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s14HealthPlatform11ContentKindO5GroupVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ContentKind.Group(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContentKind.Group(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContentKind.Group(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentKind.Group(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentKind.Group()
{
  return &type metadata for ContentKind.Group;
}

unint64_t sub_1BC78EDB8()
{
  unint64_t result;

  result = qword_1EF45C120;
  if (!qword_1EF45C120)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ContentKind, &type metadata for ContentKind);
    atomic_store(result, (unint64_t *)&qword_1EF45C120);
  }
  return result;
}

uint64_t static Profile.entityName.getter()
{
  return 0x656C69666F7250;
}

uint64_t Profile.hkProfileIdentifier.getter()
{
  void *v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = v0;
  sub_1BC6ED7C0(0, &qword_1ED6BB3A0);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
  v2 = objc_msgSend(v0, sel_encodedHKProfileIdentifier);
  v3 = sub_1BC816E64();
  v5 = v4;

  v6 = sub_1BC817F38();
  sub_1BC6ECB60(v3, v5);
  if (v6)
    return v6;
  sub_1BC8182C8();
  sub_1BC817B48();
  v8 = objc_msgSend(v1, sel_encodedHKProfileIdentifier);
  v9 = sub_1BC816E64();
  v11 = v10;

  sub_1BC816E4C();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC6ECB60(v9, v11);
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

void Profile.hkProfileIdentifier.setter(uint64_t a1)
{
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12[4];

  v12[3] = *(id *)MEMORY[0x1E0C80C00];
  v12[0] = 0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v12);
  v3 = v12[0];
  if (v2)
  {
    v4 = sub_1BC816E64();
    v6 = v5;

    v7 = (void *)sub_1BC816E58();
    sub_1BC6ECB60(v4, v6);
    objc_msgSend(v1, sel_setEncodedHKProfileIdentifier_, v7);

    v8 = objc_msgSend(v1, sel_encodedHKProfileIdentifier);
    sub_1BC816E64();
    v10 = v9;

    __asm { BR              X10 }
  }
  v11 = v3;
  sub_1BC816D5C();

  swift_willThrow();
  v12[0] = 0;
  v12[1] = (id)0xE000000000000000;
  sub_1BC8182C8();
  sub_1BC817B48();
  sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
  sub_1BC8183E8();
  sub_1BC8184B4();
  __break(1u);
  JUMPOUT(0x1BC78F3FCLL);
}

void (*Profile.hkProfileIdentifier.modify(uint64_t *a1))(void **a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = Profile.hkProfileIdentifier.getter();
  return sub_1BC78F440;
}

void sub_1BC78F440(void **a1, char a2)
{
  void *v2;
  id v3;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = v2;
    Profile.hkProfileIdentifier.setter((uint64_t)v3);

  }
  else
  {
    Profile.hkProfileIdentifier.setter((uint64_t)v2);
  }
}

id static Profile.findOrCreate(_:in:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id result;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;

  v4 = sub_1BC816F3C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6FCD7C();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC81A0E0;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BC6ED740();
  *(_QWORD *)(v8 + 32) = 0xD000000000000010;
  *(_QWORD *)(v8 + 40) = 0x80000001BC825700;
  result = objc_msgSend(a1, sel_identifier);
  if (result)
  {
    v10 = result;
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
    *(_QWORD *)(v8 + 96) = sub_1BC6ED7C0(0, &qword_1ED6BA508);
    *(_QWORD *)(v8 + 104) = sub_1BC76B65C();
    *(_QWORD *)(v8 + 72) = v10;
    v11 = (void *)sub_1BC817E3C();
    v12 = (void *)sub_1BC806104(a2, (uint64_t)v11);

    v13 = objc_msgSend(a1, sel_identifier);
    sub_1BC816F24();

    v14 = (void *)sub_1BC816F0C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    objc_msgSend(v12, sel_setUniqueIdentifier_, v14);

    Profile.hkProfileIdentifier.setter((uint64_t)a1);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static Profile.find(_:in:)(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  id v6;
  void *v7;
  unint64_t v8;
  uint64_t result;

  sub_1BC6FCD7C();
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC81A0E0;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BC6ED740();
  *(_QWORD *)(v4 + 32) = 0xD000000000000010;
  *(_QWORD *)(v4 + 40) = 0x80000001BC825700;
  v5 = objc_msgSend(a1, sel_identifier);
  if (v5)
  {
    v6 = v5;
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA460);
    *(_QWORD *)(v4 + 96) = sub_1BC6ED7C0(0, &qword_1ED6BA508);
    *(_QWORD *)(v4 + 104) = sub_1BC76B65C();
    *(_QWORD *)(v4 + 72) = v6;
    v7 = (void *)sub_1BC817E3C();
    v8 = sub_1BC6FD574(a2, (uint64_t)v7, 1);

    return v8;
  }
  else
  {
    __break(1u);
    sub_1BC8182C8();
    sub_1BC817B48();
    sub_1BC6FD528(0, (unint64_t *)&qword_1ED6B87B0);
    sub_1BC8183E8();
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC78F864()
{
  return 0x656C69666F7250;
}

uint64_t Profile.__allocating_init(context:profileIdentifier:)(void *a1, void *a2)
{
  objc_class *v2;
  objc_class *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  uint64_t result;
  uint64_t v17;

  v3 = v2;
  v6 = sub_1BC816F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)objc_opt_self();
  v11 = (void *)sub_1BC817AC4();
  v12 = objc_msgSend(v10, sel_entityForName_inManagedObjectContext_, v11, a1);

  if (v12)
  {
    v13 = objc_msgSend(objc_allocWithZone(v3), sel_initWithEntity_insertIntoManagedObjectContext_, v12, a1);
    v14 = objc_msgSend(a2, sel_identifier);
    sub_1BC816F24();

    v15 = (void *)sub_1BC816F0C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    objc_msgSend(v13, sel_setUniqueIdentifier_, v15);

    Profile.hkProfileIdentifier.setter((uint64_t)a2);
    return (uint64_t)v13;
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC78FA38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Profile.hkProfileIdentifier.getter();
  *a1 = result;
  return result;
}

void sub_1BC78FA60(id *a1)
{
  Profile.hkProfileIdentifier.setter((uint64_t)*a1);
}

uint64_t HealthAppForegroundWorkManager.workRunner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC6FC700(v1 + 16, a1);
}

uint64_t HealthAppForegroundWorkManager.urgentWorkTimeoutInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval;
  v4 = sub_1BC817944();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HealthAppForegroundWorkManager.__allocating_init(workRunner:urgentWorkTimeoutInterval:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  HealthAppForegroundWorkManager.init(workRunner:urgentWorkTimeoutInterval:)(a1, a2);
  return v4;
}

uint64_t HealthAppForegroundWorkManager.init(workRunner:urgentWorkTimeoutInterval:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v2;
  v18 = a1;
  v19 = a2;
  v4 = sub_1BC817FA4();
  v16 = *(_QWORD *)(v4 - 8);
  v17 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC817F5C();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v9);
  v10 = OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState;
  sub_1BC7100F4(0, &qword_1EF45C130);
  v11 = swift_allocObject();
  *(_DWORD *)(v11 + 32) = 0;
  *(_BYTE *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  *(_QWORD *)(v2 + v10) = v11;
  v15 = OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_queue;
  sub_1BC7764C8();
  sub_1BC817968();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v8, MEMORY[0x1E0DEF828]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA420, v8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7188D8(qword_1ED6BA430, (unint64_t *)&unk_1ED6BA420, v8);
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v16 + 104))(v6, *MEMORY[0x1E0DEF8D0], v17);
  *(_QWORD *)(v2 + v15) = sub_1BC817FC8();
  sub_1BC6FC848(v18, v2 + 16);
  v12 = v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval;
  v13 = sub_1BC817944();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, v19, v13);
  return v3;
}

Swift::Void __swiftcall HealthAppForegroundWorkManager.start()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12[2];

  v1 = v0;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6BB5D0);
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v12[0] = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_1BC818814();
    sub_1BC6E14D8(v7, v8, v12);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v3, v4, "[%{public}s] Starting", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
  }

  v9 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  v10 = (uint64_t)&v9[4];
  v11 = v9 + 8;
  os_unfair_lock_lock(v9 + 8);
  sub_1BC78FF30(v10, v1, (char *)v12);
  os_unfair_lock_unlock(v11);
}

void sub_1BC78FF30(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  __int128 v16[2];

  v7 = sub_1BC817944();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)a1 & 1) != 0)
  {
    v11 = 0;
LABEL_10:
    *a3 = v11;
    return;
  }
  *(_BYTE *)a1 = 1;
  if (*(_QWORD *)(a1 + 8))
  {
    v12 = *(_QWORD *)(a1 + 8);
  }
  else
  {
    sub_1BC6FC700(a2 + 16, (uint64_t)v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval, v7);
    type metadata accessor for ForegroundTask(0);
    swift_allocObject();
    v12 = sub_1BC791800(v16, (uint64_t)v10);
    *(_QWORD *)(a1 + 8) = v12;
    swift_retain();
  }
  v13 = *(_QWORD *)(v12
                  + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 64));
  if ((*(_BYTE *)(v13 + 16) & 1) == 0)
  {
    *(_BYTE *)(v13 + 16) = 1;
    sub_1BC791B20();
  }
  v14 = (os_unfair_lock_s *)(v13 + 64);
  if (!v3)
  {
    os_unfair_lock_unlock(v14);
    swift_release();
    v11 = 1;
    goto LABEL_10;
  }
  os_unfair_lock_unlock(v14);
  __break(1u);
}

void HealthAppForegroundWorkManager.forceStart(within:)(void (*a1)(char *, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;

  v3 = *v1;
  v4 = *(os_unfair_lock_s **)((char *)v1
                            + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  v5 = v4 + 4;
  v6 = v4 + 8;
  os_unfair_lock_lock(v4 + 8);
  sub_1BC790100(v5, a1, (uint64_t)v1, v3);
  os_unfair_lock_unlock(v6);
}

uint64_t sub_1BC790100(_BYTE *a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  os_log_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  char *v41;
  uint64_t (*v42)(uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  os_log_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  uint64_t v61;
  uint64_t aBlock[7];
  uint64_t v63;

  v59 = a4;
  v60 = a2;
  v53 = a3;
  v6 = sub_1BC817950();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v58 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC817974();
  v56 = *(_QWORD *)(v9 - 8);
  v57 = v9;
  MEMORY[0x1E0C80A78](v9);
  v55 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1BC81798C();
  v52 = *(_QWORD *)(v61 - 8);
  v11 = MEMORY[0x1E0C80A78](v61);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v45 - v14;
  v15 = sub_1BC817944();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v45 - v21;
  if ((*a1 & 1) == 0)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v49 = v7;
    v50 = v6;
    v51 = v4;
    v23 = sub_1BC817590();
    __swift_project_value_buffer(v23, (uint64_t)qword_1ED6BB5D0);
    v24 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v16 + 16);
    v24(v22, (void (*)(_QWORD, _QWORD))v60, v15);
    v25 = sub_1BC81756C();
    v26 = sub_1BC817E9C();
    v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      v28 = swift_slowAlloc();
      v47 = v27;
      v29 = v28;
      v48 = swift_slowAlloc();
      aBlock[0] = v48;
      *(_DWORD *)v29 = 136446466;
      v46 = v25;
      v45 = v29 + 4;
      v30 = sub_1BC818814();
      v63 = sub_1BC6E14D8(v30, v31, aBlock);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v29 + 12) = 2082;
      v24(v19, (void (*)(_QWORD, _QWORD))v22, v15);
      v32 = sub_1BC817AF4();
      v63 = sub_1BC6E14D8(v32, v33, aBlock);
      v34 = v59;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
      v35 = v46;
      _os_log_impl(&dword_1BC6DD000, v46, (os_log_type_t)v47, "[%{public}s] Not yet started, enqueueing a start deadline within %{public}s", (uint8_t *)v29, 0x16u);
      v36 = v48;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v36, -1, -1);
      MEMORY[0x1BCCF5BA4](v29, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);

      v34 = v59;
    }
    v59 = *(_QWORD *)(v53 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_queue);
    sub_1BC817980();
    v37 = v54;
    MEMORY[0x1BCCF4674](v13, v60);
    v60 = *(void (**)(char *, uint64_t))(v52 + 8);
    v60(v13, v61);
    v38 = swift_allocObject();
    swift_weakInit();
    v39 = swift_allocObject();
    *(_QWORD *)(v39 + 16) = v38;
    *(_QWORD *)(v39 + 24) = v34;
    aBlock[4] = (uint64_t)sub_1BC79604C;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC719640;
    aBlock[3] = (uint64_t)&block_descriptor_70;
    v40 = _Block_copy(aBlock);
    swift_retain();
    v41 = v55;
    sub_1BC817968();
    v63 = MEMORY[0x1E0DEE9D8];
    v42 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v42, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v42);
    v43 = v58;
    v44 = v50;
    sub_1BC818184();
    MEMORY[0x1BCCF4C14](v37, v41, v43, v40);
    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v57);
    v60(v37, v61);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC790654()
{
  uint64_t result;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12[2];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    v2 = *(os_unfair_lock_s **)(result + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
    v3 = (uint64_t)&v2[4];
    v4 = v2 + 8;
    os_unfair_lock_lock(v2 + 8);
    sub_1BC78FF30(v3, v1, (char *)v12);
    os_unfair_lock_unlock(v4);
    if (LOBYTE(v12[0]) == 1)
    {
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v5 = sub_1BC817590();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED6BB5D0);
      v6 = sub_1BC81756C();
      v7 = sub_1BC817E84();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = swift_slowAlloc();
        v12[0] = v9;
        *(_DWORD *)v8 = 136446210;
        v10 = sub_1BC818814();
        sub_1BC6E14D8(v10, v11, v12);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v6, v7, "[%{public}s] Start was forcefully triggered since it was unexpectedly not yet started.", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v9, -1, -1);
        MEMORY[0x1BCCF5BA4](v8, -1, -1);
      }

    }
    return swift_release();
  }
  return result;
}

void HealthAppForegroundWorkManager.foregroundWithFireOnceBarrier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v5 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 8;
  os_unfair_lock_lock(v5 + 8);
  sub_1BC7908AC(v6, v2, a1, a2);
  os_unfair_lock_unlock(v7);
}

void sub_1BC7908AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  __int128 v17[2];

  v9 = sub_1BC817944();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 8))
  {
    v13 = *(_QWORD *)(a1 + 8);
  }
  else
  {
    sub_1BC6FC700(a2 + 16, (uint64_t)v17);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval, v9);
    type metadata accessor for ForegroundTask(0);
    swift_allocObject();
    v13 = sub_1BC791800(v17, (uint64_t)v12);
    *(_QWORD *)(a1 + 8) = v13;
    swift_retain();
  }
  swift_retain();
  sub_1BC790A08(a3, a4);
  if (*(_BYTE *)a1 != 1)
    goto LABEL_9;
  v14 = *(_QWORD *)(v13
                  + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 64));
  if ((*(_BYTE *)(v14 + 16) & 1) == 0)
  {
    *(_BYTE *)(v14 + 16) = 1;
    sub_1BC791B20();
  }
  v15 = (os_unfair_lock_s *)(v14 + 64);
  if (!v4)
  {
    os_unfair_lock_unlock(v15);
LABEL_9:
    swift_release();
    return;
  }
  os_unfair_lock_unlock(v15);
  __break(1u);
}

void sub_1BC790A08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint8_t *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v6 = sub_1BC817590();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v7 = sub_1BC81756C();
  v8 = sub_1BC817E9C();
  if (os_log_type_enabled(v7, v8))
  {
    v15 = a1;
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    *(_DWORD *)v9 = 136446210;
    v16 = v10;
    sub_1BC818814();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    swift_bridgeObjectRetain();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    sub_1BC6E14D8(91, 0xE100000000000000, &v16);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v7, v8, "%{public}s Requesting fire once barrier", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v10, -1, -1);
    v11 = v9;
    a1 = v15;
    MEMORY[0x1BCCF5BA4](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v12 = *(os_unfair_lock_s **)(v2
                             + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  v13 = (uint64_t)&v12[4];
  v14 = v12 + 16;
  os_unfair_lock_lock(v12 + 16);
  sub_1BC794580(v13, v3, a1, a2);
  os_unfair_lock_unlock(v14);
}

Swift::Void __swiftcall HealthAppForegroundWorkManager.endForeground()()
{
  sub_1BC791388((void (*)(os_unfair_lock_s *))sub_1BC790C8C);
}

void sub_1BC790C8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  os_unfair_lock_s *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v2 = *(uint64_t **)(a1 + 8);
  if (v2)
  {
    v4 = *(os_unfair_lock_s **)((char *)v2
                              + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
    v5 = (uint64_t)&v4[4];
    v6 = v4 + 16;
    swift_retain();
    os_unfair_lock_lock(v6);
    sub_1BC793894(v5, v2);
    if (v1)
    {
      os_unfair_lock_unlock(v6);
      __break(1u);
    }
    else
    {
      os_unfair_lock_unlock(v6);
      swift_release();
      swift_release();
      *(_QWORD *)(a1 + 8) = 0;
    }
  }
}

uint64_t HealthAppForegroundWorkManager.foregroundWithLegacyGeneration(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v9;

  v5 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 8;
  os_unfair_lock_lock(v5 + 8);
  sub_1BC790DA8(v6, v2, a1, a2, &v9);
  os_unfair_lock_unlock(v7);
  return v9;
}

void sub_1BC790DA8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  __int128 v20[2];

  v11 = sub_1BC817944();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 8))
  {
    v15 = *(_QWORD *)(a1 + 8);
  }
  else
  {
    sub_1BC6FC700(a2 + 16, (uint64_t)v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval, v11);
    type metadata accessor for ForegroundTask(0);
    swift_allocObject();
    v15 = sub_1BC791800(v20, (uint64_t)v14);
    *(_QWORD *)(a1 + 8) = v15;
    swift_retain();
  }
  swift_retain();
  v16 = sub_1BC790F18(a3, a4);
  if (*(_BYTE *)a1 != 1)
    goto LABEL_9;
  v17 = *(_QWORD *)(v15
                  + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 64));
  if ((*(_BYTE *)(v17 + 16) & 1) == 0)
  {
    *(_BYTE *)(v17 + 16) = 1;
    sub_1BC791B20();
  }
  v18 = (os_unfair_lock_s *)(v17 + 64);
  if (!v5)
  {
    os_unfair_lock_unlock(v18);
LABEL_9:
    swift_release();
    *a5 = v16;
    return;
  }
  os_unfair_lock_unlock(v18);
  __break(1u);
}

id sub_1BC790F18(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42[2];

  v3 = v2;
  v39 = a1;
  v5 = sub_1BC816F3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC816F30();
  sub_1BC816F00();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v9 = sub_1BC795E80(6);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  swift_bridgeObjectRelease();
  sub_1BC6ECA64(0, &qword_1EF45C2F8, (uint64_t (*)(uint64_t))sub_1BC714E14, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = sub_1BC817AC4();
  v17 = MEMORY[0x1BCCF47C4](v9, v11, v13, v15);
  v19 = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 40) = v17;
  *(_QWORD *)(inited + 48) = v19;
  sub_1BC71127C(inited);
  v20 = objc_allocWithZone(MEMORY[0x1E0CB38A8]);
  type metadata accessor for ProgressUserInfoKey(0);
  sub_1BC6E1788((unint64_t *)&unk_1ED6B8580, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819EA4);
  v21 = (void *)sub_1BC817A28();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v20, sel_initWithParent_userInfo_, 0, v21);

  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v23 = sub_1BC817590();
  __swift_project_value_buffer(v23, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v24 = v22;
  v25 = sub_1BC81756C();
  v26 = sub_1BC817E9C();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v38 = a2;
    v29 = v28;
    *(_DWORD *)v27 = 136446466;
    v40 = 91;
    v41 = 0xE100000000000000;
    v42[0] = v28;
    sub_1BC818814();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    swift_bridgeObjectRetain();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    v40 = sub_1BC6E14D8(v40, v41, v42);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    v30 = sub_1BC7949C4();
    v40 = sub_1BC6E14D8(v30, v31, v42);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v25, v26, "%{public}s Requesting legacy generation with created progress %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    v32 = v29;
    a2 = v38;
    MEMORY[0x1BCCF5BA4](v32, -1, -1);
    MEMORY[0x1BCCF5BA4](v27, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v33 = *(os_unfair_lock_s **)((char *)v3
                             + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  v34 = (uint64_t)&v33[4];
  v35 = v33 + 16;
  os_unfair_lock_lock(v33 + 16);
  sub_1BC794B08(v34, v3, v39, a2, v24);
  os_unfair_lock_unlock(v35);
  return v24;
}

Swift::Void __swiftcall HealthAppForegroundWorkManager.cancelLegacyGeneration()()
{
  sub_1BC791388((void (*)(os_unfair_lock_s *))sub_1BC7913E4);
}

void sub_1BC791388(void (*a1)(os_unfair_lock_s *))
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_protectedState);
  v4 = v3 + 4;
  v5 = v3 + 8;
  os_unfair_lock_lock(v3 + 8);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1BC7913E4(uint64_t result)
{
  if (*(_QWORD *)(result + 8))
  {
    swift_retain();
    sub_1BC791420();
    return swift_release();
  }
  return result;
}

void sub_1BC791420()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;

  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v1 = sub_1BC817590();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v2 = sub_1BC81756C();
  v3 = sub_1BC817E9C();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    *(_DWORD *)v4 = 136446210;
    v9 = v5;
    sub_1BC818814();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    swift_bridgeObjectRetain();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    sub_1BC6E14D8(91, 0xE100000000000000, &v9);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v2, v3, "%{public}s Request to cancel legacy generation", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
    MEMORY[0x1BCCF5BA4](v4, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v6 = *(os_unfair_lock_s **)(v0
                            + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
  v7 = (uint64_t)&v6[4];
  v8 = v6 + 16;
  os_unfair_lock_lock(v6 + 16);
  sub_1BC793EEC(v7);
  os_unfair_lock_unlock(v8);
}

uint64_t HealthAppForegroundWorkManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval;
  v2 = sub_1BC817944();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return v0;
}

uint64_t HealthAppForegroundWorkManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform30HealthAppForegroundWorkManager_urgentWorkTimeoutInterval;
  v2 = sub_1BC817944();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC791754()
{
  sub_1BC818814();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  return 91;
}

uint64_t sub_1BC791800(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[2];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v36 = a1;
  v37 = a2;
  v4 = sub_1BC816F3C();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC817FA4();
  v32 = *(_QWORD *)(v7 - 8);
  v33 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC817F5C();
  v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v10);
  v12 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v12);
  v13 = OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState;
  sub_1BC7100F4(0, &qword_1EF45C300);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 64) = 0;
  *(_DWORD *)(v14 + 16) = 0;
  v15 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v14 + 24) = MEMORY[0x1E0DEE9D8];
  *(_OWORD *)(v14 + 32) = 0u;
  *(_OWORD *)(v14 + 48) = 0u;
  *(_QWORD *)(v2 + v13) = v14;
  v31 = OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue;
  v30[1] = sub_1BC7764C8();
  sub_1BC817968();
  v38 = v15;
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v11, MEMORY[0x1E0DEF828]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA420, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7188D8(qword_1ED6BA430, (unint64_t *)&unk_1ED6BA420, v11);
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v32 + 104))(v9, *MEMORY[0x1E0DEF8D0], v33);
  *(_QWORD *)(v2 + v31) = sub_1BC817FC8();
  v16 = (uint64_t *)(v2 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_identifier);
  sub_1BC816F30();
  sub_1BC816F00();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v6, v35);
  v17 = sub_1BC795E80(6);
  v19 = v18;
  v21 = v20;
  v23 = v22;
  swift_bridgeObjectRelease();
  v24 = MEMORY[0x1BCCF47C4](v17, v19, v21, v23);
  v26 = v25;
  swift_bridgeObjectRelease();
  *v16 = v24;
  v16[1] = v26;
  sub_1BC6FC848(v36, v3 + 16);
  v27 = v3
      + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_urgentWorkTimeoutInterval;
  v28 = sub_1BC817944();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, v37, v28);
  return v3;
}

uint64_t sub_1BC791B20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  CFAbsoluteTime Current;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  CFAbsoluteTime *v17;
  void (*v18)(uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t);
  char *v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  char *v22;
  uint64_t v23;
  uint8_t *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t aBlock;
  unint64_t v32;
  uint64_t (*v33)(uint64_t);
  void *v34;
  uint64_t (*v35)();
  uint64_t v36;

  v29 = sub_1BC81798C();
  v27 = *(_QWORD *)(v29 - 8);
  v1 = MEMORY[0x1E0C80A78](v29);
  v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v25 - v3;
  v4 = sub_1BC817950();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  MEMORY[0x1E0C80A78](v4);
  v6 = swift_allocObject();
  swift_weakInit();
  v35 = sub_1BC795DBC;
  v36 = v6;
  aBlock = MEMORY[0x1E0C809B0];
  v32 = 1107296256;
  v33 = sub_1BC719640;
  v34 = &block_descriptor_6_0;
  _Block_copy(&aBlock);
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, v5, MEMORY[0x1E0DEF510]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v5, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v5);
  swift_retain();
  sub_1BC818184();
  sub_1BC8179B0();
  swift_allocObject();
  v7 = sub_1BC817998();
  swift_release();
  swift_release();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v8 = sub_1BC817590();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v9 = sub_1BC81756C();
  v10 = sub_1BC817E9C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    *(_DWORD *)v11 = 136446210;
    v25 = v11 + 4;
    v30 = v12;
    aBlock = 91;
    v32 = 0xE100000000000000;
    sub_1BC818814();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    swift_bridgeObjectRetain();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    aBlock = sub_1BC6E14D8(aBlock, v32, &v30);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v9, v10, "%{public}s Starting urgent work", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v12, -1, -1);
    MEMORY[0x1BCCF5BA4](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  Current = CFAbsoluteTimeGetCurrent();
  v14 = v0[5];
  v15 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v14);
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = (CFAbsoluteTime *)swift_allocObject();
  *((_QWORD *)v17 + 2) = v16;
  *((_QWORD *)v17 + 3) = v7;
  v17[4] = Current;
  v18 = *(void (**)(uint64_t (*)(), CFAbsoluteTime *, uint64_t, uint64_t))(v15 + 8);
  swift_retain();
  swift_retain();
  v18(sub_1BC795DCC, v17, v14, v15);
  swift_release();
  swift_release();
  v19 = v26;
  sub_1BC817980();
  v20 = v28;
  MEMORY[0x1BCCF4674](v19, (char *)v0+ OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_urgentWorkTimeoutInterval);
  v21 = *(void (**)(char *, uint64_t))(v27 + 8);
  v22 = v19;
  v23 = v29;
  v21(v22, v29);
  sub_1BC817F74();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v21)(v20, v23);
}

uint64_t sub_1BC792014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v0 = sub_1BC817944();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v6 = sub_1BC817590();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    v7 = sub_1BC81756C();
    v8 = sub_1BC817E84();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v17 = v15;
      *(_DWORD *)v9 = 136446466;
      v10 = sub_1BC791754();
      v16 = sub_1BC6E14D8(v10, v11, &v17);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v9 + 12) = 2082;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5+ OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_urgentWorkTimeoutInterval, v0);
      v12 = sub_1BC817AF4();
      v16 = sub_1BC6E14D8(v12, v13, &v17);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v7, v8, "%{public}s Urgent work completion timed out: %{public}s", (uint8_t *)v9, 0x16u);
      v14 = v15;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v14, -1, -1);
      MEMORY[0x1BCCF5BA4](v9, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1BC79319C((void (*)(os_unfair_lock_s *, uint64_t))sub_1BC7927B8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC79229C(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v5 = sub_1BC817950();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC817974();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = result;
    v22 = *(_QWORD *)(result + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a3;
    *(double *)(v15 + 24) = a1;
    *(_QWORD *)(v15 + 32) = v14;
    aBlock[4] = sub_1BC795E04;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC719640;
    aBlock[3] = &block_descriptor_16;
    v16 = _Block_copy(aBlock);
    v21 = v10;
    v17 = v16;
    swift_retain();
    swift_retain();
    sub_1BC817968();
    v23 = MEMORY[0x1E0DEE9D8];
    v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v18, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v20 = v9;
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v18);
    sub_1BC818184();
    MEMORY[0x1BCCF4C68](0, v12, v8, v17);
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v20);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BC7924F8(double a1)
{
  double Current;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;

  sub_1BC8179A4();
  Current = CFAbsoluteTimeGetCurrent();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v3 = sub_1BC817590();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v4 = sub_1BC81756C();
  v5 = sub_1BC817E9C();
  if (!os_log_type_enabled(v4, v5))
  {

    swift_release_n();
    goto LABEL_9;
  }
  v6 = swift_slowAlloc();
  v7 = swift_slowAlloc();
  *(_DWORD *)v6 = 136446466;
  v9 = v7;
  sub_1BC818814();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC6E14D8(91, 0xE100000000000000, &v9);
  sub_1BC818148();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v6 + 12) = 2048;
  v8 = (Current - a1) * 1000.0;
  if ((~*(_QWORD *)&v8 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v8 < 9.22337204e18)
  {
    sub_1BC818148();
    _os_log_impl(&dword_1BC6DD000, v4, v5, "%{public}s Urgent work completed after %ldms", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v7, -1, -1);
    MEMORY[0x1BCCF5BA4](v6, -1, -1);

LABEL_9:
    sub_1BC79319C((void (*)(os_unfair_lock_s *, uint64_t))sub_1BC7927B8);
    return;
  }
LABEL_12:
  __break(1u);
}

void sub_1BC7927B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  _BOOL4 v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(void (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if ((*(_BYTE *)(a1 + 1) & 1) == 0 && (*(_BYTE *)(a1 + 2) & 1) == 0)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v4 = sub_1BC817590();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    v5 = sub_1BC81756C();
    v6 = sub_1BC817E9C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      *(_DWORD *)v7 = 136446210;
      v26 = v8;
      sub_1BC818814();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      swift_bridgeObjectRetain();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      sub_1BC6E14D8(91, 0xE100000000000000, &v26);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v5, v6, "%{public}s Starting fire once", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v8, -1, -1);
      MEMORY[0x1BCCF5BA4](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *(_BYTE *)(a1 + 2) = 1;
    v9 = a2[5];
    v10 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v9);
    v11 = swift_allocObject();
    swift_weakInit();
    v12 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v10 + 16);
    swift_retain();
    v12(sub_1BC795E14, v11, v9, v10);
    swift_release_n();
    v13 = *(_QWORD *)(a1 + 16);
    swift_retain_n();
    v14 = sub_1BC81756C();
    v15 = sub_1BC817E9C();
    v16 = os_log_type_enabled(v14, v15);
    if (v13)
    {
      if (v16)
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        *(_DWORD *)v17 = 136446210;
        v26 = v25;
        sub_1BC818814();
        sub_1BC817B48();
        swift_bridgeObjectRelease();
        sub_1BC817B48();
        swift_bridgeObjectRetain();
        sub_1BC817B48();
        swift_bridgeObjectRelease();
        sub_1BC817B48();
        sub_1BC6E14D8(91, 0xE100000000000000, &v26);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v14, v15, "%{public}s Starting legacy generation", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v25, -1, -1);
        MEMORY[0x1BCCF5BA4](v17, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v20 = a2[5];
      v21 = a2[6];
      __swift_project_boxed_opaque_existential_1(a2 + 2, v20);
      v22 = swift_allocObject();
      swift_weakInit();
      v23 = *(uint64_t (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v21 + 24);
      swift_retain();
      v24 = v23(sub_1BC795E1C, v22, v20, v21);
      swift_release_n();

      *(_QWORD *)(a1 + 40) = v24;
    }
    else if (v16)
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_DWORD *)v18 = 136446210;
      v26 = v19;
      sub_1BC818814();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      swift_bridgeObjectRetain();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      sub_1BC6E14D8(91, 0xE100000000000000, &v26);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v14, v15, "%{public}s No requests for legacy generation", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v19, -1, -1);
      MEMORY[0x1BCCF5BA4](v18, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1BC792E14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t (*v20)(uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t aBlock[6];

  v0 = sub_1BC817950();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC817974();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    v22 = v5;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v23 = v4;
    v24 = v1;
    v10 = sub_1BC817590();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    v11 = sub_1BC81756C();
    v12 = sub_1BC817E9C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v21 = v0;
      v15 = v14;
      aBlock[0] = v14;
      *(_DWORD *)v13 = 136446210;
      v16 = sub_1BC791754();
      v25 = sub_1BC6E14D8(v16, v17, aBlock);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v11, v12, "%{public}s Fire once completed", v13, 0xCu);
      swift_arrayDestroy();
      v18 = v15;
      v0 = v21;
      MEMORY[0x1BCCF5BA4](v18, -1, -1);
      MEMORY[0x1BCCF5BA4](v13, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    aBlock[4] = (uint64_t)sub_1BC795E24;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC719640;
    aBlock[3] = (uint64_t)&block_descriptor_21;
    v19 = _Block_copy(aBlock);
    swift_retain();
    sub_1BC817968();
    v25 = MEMORY[0x1E0DEE9D8];
    v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v20);
    sub_1BC818184();
    MEMORY[0x1BCCF4C68](0, v7, v3, v19);
    _Block_release(v19);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v23);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BC79319C(void (*a1)(os_unfair_lock_s *, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  os_unfair_lock_s *v9;
  os_unfair_lock_s *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;

  v3 = sub_1BC8179BC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  LOBYTE(v7) = sub_1BC8179E0();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    v9 = *(os_unfair_lock_s **)(v1
                              + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
    v10 = v9 + 4;
    v11 = v9 + 16;
    os_unfair_lock_lock(v9 + 16);
    a1(v10, v1);
    os_unfair_lock_unlock(v11);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1BC793290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  os_log_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t (*v28)(uint64_t);
  uint8_t *v29;
  uint8_t *v30;
  os_log_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock;
  unint64_t v38;
  uint64_t (*v39)(uint64_t);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;

  v5 = sub_1BC817950();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BC817974();
  v10 = *(_QWORD *)(v9 - 8);
  result = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(a1 + 1) & 1) == 0 && (*(_BYTE *)(a1 + 3) & 1) == 0)
  {
    v34 = result;
    v35 = v6;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v36 = v2;
    v14 = sub_1BC817590();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    v15 = sub_1BC81756C();
    v16 = sub_1BC817E9C();
    v17 = v16;
    if (os_log_type_enabled(v15, v16))
    {
      v18 = swift_slowAlloc();
      LODWORD(v33) = v17;
      v19 = (uint8_t *)v18;
      v20 = swift_slowAlloc();
      v32 = v20;
      v30 = v19;
      v31 = v15;
      *(_DWORD *)v19 = 136446210;
      v43 = v20;
      v29 = v19 + 4;
      aBlock = 91;
      v38 = 0xE100000000000000;
      sub_1BC818814();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      swift_bridgeObjectRetain();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      aBlock = sub_1BC6E14D8(aBlock, v38, &v43);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      v22 = v30;
      v21 = v31;
      _os_log_impl(&dword_1BC6DD000, v31, (os_log_type_t)v33, "%{public}s Calling all fire once barriers", v30, 0xCu);
      v23 = v32;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v23, -1, -1);
      MEMORY[0x1BCCF5BA4](v22, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *(_BYTE *)(a1 + 3) = 1;
    v24 = MEMORY[0x1E0DEE9D8];
    v25 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)(a1 + 8) = MEMORY[0x1E0DEE9D8];
    v33 = *(_QWORD *)(a2 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = v25;
    v41 = sub_1BC795E64;
    v42 = v26;
    aBlock = MEMORY[0x1E0C809B0];
    v38 = 1107296256;
    v39 = sub_1BC719640;
    v40 = &block_descriptor_27;
    v27 = _Block_copy(&aBlock);
    sub_1BC817968();
    v43 = v24;
    v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v28, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v28);
    sub_1BC818184();
    MEMORY[0x1BCCF4C68](0, v13, v8, v27);
    _Block_release(v27);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v34);
    return swift_release();
  }
  return result;
}

void sub_1BC7936A4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v0 = sub_1BC817590();
    __swift_project_value_buffer(v0, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    v1 = sub_1BC81756C();
    v2 = sub_1BC817E9C();
    if (os_log_type_enabled(v1, v2))
    {
      v3 = swift_slowAlloc();
      v4 = swift_slowAlloc();
      v7 = v4;
      *(_DWORD *)v3 = 136446466;
      v5 = sub_1BC791754();
      sub_1BC6E14D8(v5, v6, &v7);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v3 + 12) = 1024;
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, v1, v2, "%{public}s Legacy generation completed: %{BOOL}d", (uint8_t *)v3, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v4, -1, -1);
      MEMORY[0x1BCCF5BA4](v3, -1, -1);
      swift_release();

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1BC793894(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t (*v24)(uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t result;
  uint8_t *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock;
  unint64_t v38;
  uint64_t (*v39)(uint64_t);
  void *v40;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;

  v36 = *a2;
  v4 = sub_1BC817950();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC817974();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x1E0C80A78](v6);
  v30 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v8 = sub_1BC817590();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v10 = sub_1BC81756C();
  v11 = sub_1BC817E9C();
  if (os_log_type_enabled(v10, v11))
  {
    v29 = v9;
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    *(_DWORD *)v12 = 136446210;
    v43 = v13;
    v28 = v12 + 4;
    aBlock = 91;
    v38 = 0xE100000000000000;
    sub_1BC818814();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    swift_bridgeObjectRetain();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    aBlock = sub_1BC6E14D8(aBlock, v38, &v43);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v10, v11, "%{public}s Cancelling", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v13, -1, -1);
    MEMORY[0x1BCCF5BA4](v12, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v14 = MEMORY[0x1E0DEE9D8];
  if ((*(_BYTE *)(a1 + 3) & 1) == 0)
  {
    swift_retain_n();
    v15 = sub_1BC81756C();
    v16 = sub_1BC817E9C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v29 = v18;
      *(_DWORD *)v17 = 136446210;
      v43 = v18;
      v28 = v17 + 4;
      aBlock = 91;
      v38 = 0xE100000000000000;
      sub_1BC818814();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      swift_bridgeObjectRetain();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      aBlock = sub_1BC6E14D8(aBlock, v38, &v43);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v15, v16, "%{public}s Cancelled, but fire once has not completed, calling all the completion with success false", v17, 0xCu);
      v19 = v29;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v19, -1, -1);
      MEMORY[0x1BCCF5BA4](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v20 = *(_QWORD *)(a1 + 8);
    v36 = *(uint64_t *)((char *)a2
                     + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v20;
    v41 = sub_1BC795FC4;
    v42 = v21;
    aBlock = MEMORY[0x1E0C809B0];
    v38 = 1107296256;
    v39 = sub_1BC719640;
    v40 = &block_descriptor_51_0;
    v22 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    v23 = v30;
    sub_1BC817968();
    v43 = v14;
    v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v24, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v24);
    v25 = v33;
    v26 = v35;
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BC818184();
    MEMORY[0x1BCCF4C68](0, v23, v25, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v32);
    swift_release();
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v14;
  result = sub_1BC793EEC(a1);
  *(_BYTE *)(a1 + 1) = 1;
  return result;
}

uint64_t sub_1BC793E5C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(char *);
  char v6;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v4 = swift_bridgeObjectRetain() + 40;
    do
    {
      v5 = *(void (**)(char *))(v4 - 8);
      v6 = a2;
      swift_retain();
      v5(&v6);
      swift_release();
      v4 += 16;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BC793EEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  _BOOL4 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  void *v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  char *v35;
  uint64_t (*v36)(uint64_t);
  char *v37;
  uint64_t v38;
  _QWORD v39[2];
  int v40;
  uint64_t v41;
  uint8_t *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t aBlock;
  unint64_t v54;
  uint64_t (*v55)(uint64_t);
  void *v56;
  uint64_t (*v57)();
  uint64_t v58;

  v2 = sub_1BC817950();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BC817974();
  result = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v45 = *(_QWORD *)(a1 + 16);
    v46 = v10;
    v47 = v8;
    v48 = result;
    v49 = v5;
    v51 = v2;
    v11 = *(_QWORD *)(a1 + 32);
    v44 = *(_QWORD *)(a1 + 24);
    swift_retain();
    if (v11)
    {
      v12 = sub_1BC7949C4();
      v14 = v13;
    }
    else
    {
      v14 = 0xE300000000000000;
      v12 = 7104878;
    }
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v15 = sub_1BC817590();
    v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v17 = sub_1BC81756C();
    v18 = sub_1BC817E9C();
    v19 = v18;
    v20 = os_log_type_enabled(v17, v18);
    v50 = v3;
    if (v20)
    {
      v21 = swift_slowAlloc();
      v43 = (id)v16;
      v41 = v12;
      v22 = v21;
      v23 = swift_slowAlloc();
      v42 = (uint8_t *)v23;
      *(_DWORD *)v22 = 136446466;
      v39[1] = v22 + 4;
      v52 = v23;
      aBlock = 91;
      v54 = 0xE100000000000000;
      sub_1BC818814();
      v40 = v19;
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      swift_bridgeObjectRetain();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      aBlock = sub_1BC6E14D8(aBlock, v54, &v52);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      swift_bridgeObjectRetain();
      aBlock = sub_1BC6E14D8(v41, v14, &v52);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v17, (os_log_type_t)v40, "%{public}s Cancelling legacy generation for progress %s", (uint8_t *)v22, 0x16u);
      v24 = v42;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v24, -1, -1);
      MEMORY[0x1BCCF5BA4](v22, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    sub_1BC6F748C(*(_QWORD *)(a1 + 16));
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 0;

    *(_QWORD *)(a1 + 32) = 0;
    v25 = *(void **)(a1 + 40);
    if (v25)
    {
      swift_retain_n();
      v26 = v25;
      v27 = sub_1BC81756C();
      v28 = sub_1BC817E9C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v30 = swift_slowAlloc();
        v43 = v26;
        *(_DWORD *)v29 = 136446210;
        v42 = v29 + 4;
        v52 = v30;
        aBlock = 91;
        v54 = 0xE100000000000000;
        sub_1BC818814();
        sub_1BC817B48();
        swift_bridgeObjectRelease();
        sub_1BC817B48();
        swift_bridgeObjectRetain();
        sub_1BC817B48();
        swift_bridgeObjectRelease();
        sub_1BC817B48();
        aBlock = sub_1BC6E14D8(aBlock, v54, &v52);
        v26 = v43;
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v27, v28, "%{public}s Cancelling original legacy generation progress", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v30, -1, -1);
        MEMORY[0x1BCCF5BA4](v29, -1, -1);

      }
      else
      {

        swift_release_n();
      }

      *(_QWORD *)(a1 + 40) = 0;
      objc_msgSend(v26, sel_cancel);

    }
    v31 = swift_allocObject();
    v33 = v44;
    v32 = v45;
    *(_QWORD *)(v31 + 16) = v45;
    *(_QWORD *)(v31 + 24) = v33;
    v57 = sub_1BC795D6C;
    v58 = v31;
    aBlock = MEMORY[0x1E0C809B0];
    v54 = 1107296256;
    v55 = sub_1BC719640;
    v56 = &block_descriptor_18;
    v34 = _Block_copy(&aBlock);
    swift_retain();
    v35 = v46;
    sub_1BC817968();
    v52 = MEMORY[0x1E0DEE9D8];
    v36 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v36, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v36);
    v37 = v49;
    v38 = v51;
    sub_1BC818184();
    MEMORY[0x1BCCF4C68](0, v35, v37, v34);
    _Block_release(v34);
    sub_1BC6F748C(v32);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v38);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v48);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC794580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t result;
  unint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t aBlock[6];
  uint64_t v43;

  v8 = sub_1BC817950();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC817974();
  v13 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(a1 + 3) == 1)
  {
    v36 = a3;
    v37 = v14;
    v38 = v13;
    v40 = v8;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v39 = v9;
    v41 = v4;
    v17 = sub_1BC817590();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    v18 = sub_1BC81756C();
    v19 = sub_1BC817E9C();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      aBlock[0] = v21;
      v35 = a4;
      *(_DWORD *)v20 = 136446210;
      v34 = v20 + 4;
      v22 = sub_1BC791754();
      v43 = sub_1BC6E14D8(v22, v23, aBlock);
      a4 = v35;
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v18, v19, "%{public}s Fire once already completed before, calling barrier immediately", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v21, -1, -1);
      MEMORY[0x1BCCF5BA4](v20, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v30 = swift_allocObject();
    *(_QWORD *)(v30 + 16) = v36;
    *(_QWORD *)(v30 + 24) = a4;
    aBlock[4] = (uint64_t)sub_1BC796004;
    aBlock[5] = v30;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1BC719640;
    aBlock[3] = (uint64_t)&block_descriptor_61;
    v31 = _Block_copy(aBlock);
    swift_retain();
    sub_1BC817968();
    v43 = MEMORY[0x1E0DEE9D8];
    v32 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v32, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v32);
    v33 = v40;
    sub_1BC818184();
    MEMORY[0x1BCCF4C68](0, v16, v11, v31);
    _Block_release(v31);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v33);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
    return swift_release();
  }
  else
  {
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = a3;
    *(_QWORD *)(v24 + 24) = a4;
    v25 = *(_QWORD **)(a1 + 8);
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BC726010(0, v25[2] + 1, 1, v25);
      v25 = (_QWORD *)result;
    }
    v28 = v25[2];
    v27 = v25[3];
    if (v28 >= v27 >> 1)
    {
      result = (uint64_t)sub_1BC726010((_QWORD *)(v27 > 1), v28 + 1, 1, v25);
      v25 = (_QWORD *)result;
    }
    v25[2] = v28 + 1;
    v29 = &v25[2 * v28];
    v29[4] = sub_1BC795FE0;
    v29[5] = v24;
    *(_QWORD *)(a1 + 8) = v25;
  }
  return result;
}

uint64_t sub_1BC7949C4()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  char v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;

  v1 = objc_msgSend(v0, sel_userInfo);
  type metadata accessor for ProgressUserInfoKey(0);
  sub_1BC6E1788((unint64_t *)&unk_1ED6B8580, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819EA4);
  v2 = sub_1BC817A34();

  v3 = sub_1BC817AC4();
  v4 = (void *)v3;
  if (!*(_QWORD *)(v2 + 16) || (v5 = sub_1BC70699C(v3), (v6 & 1) == 0))
  {
    v9 = 0u;
    v10 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1BC6E1A84(*(_QWORD *)(v2 + 56) + 32 * v5, (uint64_t)&v9);

  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v10 + 1))
  {
LABEL_7:
    sub_1BC6EF7BC((uint64_t)&v9);
    return 0x6E776F6E6B6E753CLL;
  }
  if (swift_dynamicCast())
    return v8;
  return 0x6E776F6E6B6E753CLL;
}

void sub_1BC794B08(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t aBlock[6];
  uint64_t v34;

  sub_1BC793EEC(a1);
  v10 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_1BC6F748C(v10);
  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = a4;
  v11 = *(void **)(a1 + 32);
  v12 = a5;

  *(_QWORD *)(a1 + 32) = a5;
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v14;
  aBlock[4] = (uint64_t)sub_1BC795F6C;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC719640;
  aBlock[3] = (uint64_t)&block_descriptor_37;
  v16 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v12, sel_setCancellationHandler_, v16);
  _Block_release(v16);
  if (*(_BYTE *)a1 == 1 && *(_BYTE *)(a1 + 2) == 1)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v17 = sub_1BC817590();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED6BB5D0);
    v18 = v12;
    swift_retain_n();
    v19 = v18;
    v20 = sub_1BC81756C();
    v21 = sub_1BC817E9C();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v32 = swift_slowAlloc();
      aBlock[0] = v32;
      *(_DWORD *)v22 = 136446466;
      v23 = sub_1BC791754();
      v34 = sub_1BC6E14D8(v23, v24, aBlock);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      v25 = sub_1BC7949C4();
      v34 = sub_1BC6E14D8(v25, v26, aBlock);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v20, v21, "%{public}s Ready, and urgent work already completed, starting legacy generation with progress %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v32, -1, -1);
      MEMORY[0x1BCCF5BA4](v22, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v27 = a2[5];
    v28 = a2[6];
    __swift_project_boxed_opaque_existential_1(a2 + 2, v27);
    v29 = swift_allocObject();
    swift_weakInit();
    v30 = *(uint64_t (**)(void (*)(), uint64_t, uint64_t, uint64_t))(v28 + 24);
    swift_retain();
    v31 = v30(sub_1BC795E1C, v29, v27, v28);
    swift_release_n();

    *(_QWORD *)(a1 + 40) = v31;
  }
}

uint64_t sub_1BC794EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  uint64_t (*v29)(uint64_t);
  _BYTE v30[4];
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock[6];

  v3 = sub_1BC817950();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1BC817974();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result;
    swift_beginAccess();
    v13 = MEMORY[0x1BCCF5C70](a2 + 16);
    if (v13)
    {
      v14 = (void *)v13;
      v34 = v7;
      v35 = v4;
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v33 = v8;
      v15 = sub_1BC817590();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED6BB5D0);
      swift_retain_n();
      v16 = v14;
      v17 = sub_1BC81756C();
      v18 = sub_1BC817E9C();
      v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v20 = swift_slowAlloc();
        v32 = swift_slowAlloc();
        aBlock[0] = v32;
        *(_DWORD *)v20 = 136446466;
        v31 = v19;
        v21 = sub_1BC791754();
        v36 = sub_1BC6E14D8(v21, v22, aBlock);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v20 + 12) = 2080;
        v23 = sub_1BC7949C4();
        v36 = sub_1BC6E14D8(v23, v24, aBlock);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v17, (os_log_type_t)v31, "%{public}s Progress %s cancellation handler called", (uint8_t *)v20, 0x16u);
        v25 = v32;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v25, -1, -1);
        MEMORY[0x1BCCF5BA4](v20, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v32 = *(_QWORD *)(v12 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
      v26 = swift_allocObject();
      *(_QWORD *)(v26 + 16) = v12;
      *(_QWORD *)(v26 + 24) = v16;
      aBlock[4] = (uint64_t)sub_1BC795FA0;
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1BC719640;
      aBlock[3] = (uint64_t)&block_descriptor_45;
      v27 = _Block_copy(aBlock);
      swift_retain();
      v28 = v16;
      sub_1BC817968();
      v36 = MEMORY[0x1E0DEE9D8];
      v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
      sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v29, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v29);
      sub_1BC818184();
      MEMORY[0x1BCCF4C68](0, v10, v6, v27);
      _Block_release(v27);

      (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v6, v3);
      (*(void (**)(_BYTE *, uint64_t))(v33 + 8))(v10, v34);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

void sub_1BC7952F8(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;

  v3 = sub_1BC8179BC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(void **)(v1 + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_queue);
  *v6 = v7;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF740], v3);
  v8 = v7;
  LOBYTE(v7) = sub_1BC8179E0();
  (*(void (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) != 0)
  {
    v9 = *(os_unfair_lock_s **)(v1
                              + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_protectedState);
    v10 = (uint64_t)&v9[4];
    v11 = v9 + 16;
    os_unfair_lock_lock(v9 + 16);
    sub_1BC7953F8(v10, a1);
    os_unfair_lock_unlock(v11);
  }
  else
  {
    __break(1u);
  }
}

void sub_1BC7953F8(uint64_t a1, void *a2)
{
  void *v3;
  BOOL v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v21;
  uint64_t v22;
  os_log_type_t v23;
  uint64_t v24;

  v3 = *(void **)(a1 + 32);
  if (v3)
    v4 = v3 == a2;
  else
    v4 = 0;
  if (v4)
  {
    v21 = a2;
    sub_1BC793EEC(a1);

  }
  else
  {
    v5 = qword_1ED6BB5B0;
    v6 = v3;
    if (v5 != -1)
      swift_once();
    v7 = sub_1BC817590();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED6BB5D0);
    v8 = v6;
    swift_retain_n();
    v9 = a2;
    v10 = v8;
    v11 = v9;
    v12 = sub_1BC81756C();
    v13 = sub_1BC817E9C();
    if (os_log_type_enabled(v12, v13))
    {
      v23 = v13;
      v14 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v24 = v22;
      *(_DWORD *)v14 = 136446722;
      sub_1BC818814();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      swift_bridgeObjectRetain();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      sub_1BC6E14D8(91, 0xE100000000000000, &v24);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      v15 = sub_1BC7949C4();
      sub_1BC6E14D8(v15, v16, &v24);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2080;
      if (v3)
      {
        v17 = sub_1BC7949C4();
        v19 = v18;
      }
      else
      {
        v19 = 0xE300000000000000;
        v17 = 7104878;
      }
      sub_1BC6E14D8(v17, v19, &v24);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v12, v23, "%{public}s Legacy generation for progress %s cancelled, but already different current progress: %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v22, -1, -1);
      MEMORY[0x1BCCF5BA4](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1BC79574C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  v1 = v0
     + OBJC_IVAR____TtC14HealthPlatformP33_5822D1995F2B4EBEEC835C675644E4E314ForegroundTask_urgentWorkTimeoutInterval;
  v2 = sub_1BC817944();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7957D8()
{
  return type metadata accessor for HealthAppForegroundWorkManager(0);
}

uint64_t type metadata accessor for HealthAppForegroundWorkManager(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1EF45C168);
}

uint64_t sub_1BC7957F4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC817944();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for HealthAppForegroundWorkManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthAppForegroundWorkManager.__allocating_init(workRunner:urgentWorkTimeoutInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of HealthAppForegroundWorkManager.WorkRunner.runUrgentWork(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of HealthAppForegroundWorkManager.WorkRunner.runFireOnce(barrier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of HealthAppForegroundWorkManager.WorkRunner.runLegacyGeneration(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_1BC7958B4()
{
  return type metadata accessor for ForegroundTask(0);
}

uint64_t type metadata accessor for ForegroundTask(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1EF45C250);
}

uint64_t sub_1BC7958D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC817944();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void destroy for ForegroundTask.State(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 16))
    swift_release();

}

uint64_t initializeWithCopy for ForegroundTask.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  id v10;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v5 = (_OWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v4;
    *(_QWORD *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v9 = v7;
  v10 = v8;
  return a1;
}

uint64_t assignWithCopy for ForegroundTask.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 24) = v6;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
LABEL_8:
  v7 = *(void **)(a1 + 32);
  v8 = *(void **)(a2 + 32);
  *(_QWORD *)(a1 + 32) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 40);
  v11 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v11;
  v12 = v11;

  return a1;
}

uint64_t assignWithTake for ForegroundTask.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 2) = *(_BYTE *)(a2 + 2);
  *(_BYTE *)(a1 + 3) = *(_BYTE *)(a2 + 3);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 24) = v6;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  swift_release();
LABEL_8:

  v7 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for ForegroundTask.State()
{
  return &type metadata for ForegroundTask.State;
}

uint64_t initializeBufferWithCopyOfBuffer for HealthAppForegroundWorkManager.State(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for HealthAppForegroundWorkManager.State()
{
  return swift_release();
}

uint64_t assignWithCopy for HealthAppForegroundWorkManager.State(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for HealthAppForegroundWorkManager.State(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthAppForegroundWorkManager.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthAppForegroundWorkManager.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthAppForegroundWorkManager.State()
{
  return &type metadata for HealthAppForegroundWorkManager.State;
}

uint64_t sub_1BC795D48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC795D6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(0);
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t sub_1BC795D98()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC795DBC()
{
  return sub_1BC792014();
}

uint64_t sub_1BC795DC4()
{
  return objectdestroy_9Tm();
}

uint64_t sub_1BC795DCC()
{
  uint64_t v0;

  return sub_1BC79229C(*(double *)(v0 + 32), *(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC795DD8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC795E04()
{
  uint64_t v0;

  sub_1BC7924F8(*(double *)(v0 + 24));
}

uint64_t sub_1BC795E14()
{
  return sub_1BC792E14();
}

void sub_1BC795E1C()
{
  sub_1BC7936A4();
}

void sub_1BC795E24()
{
  sub_1BC79319C((void (*)(os_unfair_lock_s *, uint64_t))sub_1BC793290);
}

uint64_t sub_1BC795E40()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC795E64()
{
  uint64_t v0;

  return sub_1BC793E5C(*(_QWORD *)(v0 + 16), 1);
}

uint64_t sub_1BC795E80(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1BC817B3C();
    return sub_1BC817BB4();
  }
  return result;
}

uint64_t sub_1BC795F08()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC795F2C()
{
  return objectdestroy_9Tm();
}

uint64_t objectdestroy_9Tm()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC795F6C()
{
  uint64_t v0;

  return sub_1BC794EB8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC795F74()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC795FA0()
{
  uint64_t v0;

  sub_1BC7952F8(*(void **)(v0 + 24));
}

uint64_t sub_1BC795FC4()
{
  uint64_t v0;

  return sub_1BC793E5C(*(_QWORD *)(v0 + 16), 0);
}

uint64_t sub_1BC795FE0(unsigned __int8 *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1BC796004()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1BC796028()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC79604C()
{
  return sub_1BC790654();
}

id static PluginData.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1BC796118(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_uniqueIdentifier);
  v4 = sub_1BC817AE8();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1BC796170(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC817AC4();
  objc_msgSend(v2, sel_setUniqueIdentifier_, v3);

}

void sub_1BC7961C0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v3 = objc_msgSend(*a1, sel_data);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC816E64();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1BC796228(uint64_t a1, void **a2)
{
  void *v2;
  uint64_t v3;
  id v4;

  v2 = *a2;
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
    v3 = 0;
  else
    v3 = sub_1BC816E58();
  v4 = (id)v3;
  objc_msgSend(v2, sel_setData_);

}

void sub_1BC796290(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_profiles);
  type metadata accessor for Profile();
  sub_1BC6EC424();
  v4 = sub_1BC817D7C();

  *a2 = v4;
}

void sub_1BC796300(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  type metadata accessor for Profile();
  sub_1BC6EC424();
  v3 = (id)sub_1BC817D70();
  objc_msgSend(v2, sel_setProfiles_, v3);

}

char *keypath_get_selector_plugin()
{
  return sel_plugin;
}

id sub_1BC79637C@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_plugin);
  *a2 = result;
  return result;
}

id sub_1BC7963B4(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlugin_, *a1);
}

BOOL static SourceProfile.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  _BOOL8 result;
  id v5;
  id v6;
  char v7;

  result = (a1 | a2) == 0;
  if (a1)
  {
    if (a2)
    {
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
      v5 = (id)a1;
      v6 = (id)a2;
      v7 = sub_1BC8180D0();

      return v7 & 1;
    }
  }
  return result;
}

uint64_t SourceProfile.identifier.getter(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  v2 = sub_1BC816F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0x636974736F6E6761;
  v6 = a1;
  v7 = objc_msgSend(v6, sel_identifier);
  sub_1BC816F24();

  v8 = sub_1BC816F00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8;
}

void *SourceProfile.singleProfileIdentifier.getter(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

id static SourceProfile.primary.getter()
{
  return objc_msgSend((id)objc_opt_self(), sel_primaryProfile);
}

uint64_t sub_1BC796578()
{
  _BYTE *v0;

  if (*v0)
    return 0x656C676E6973;
  else
    return 0x636974736F6E6761;
}

uint64_t sub_1BC7965B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC796DB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC7965D4()
{
  sub_1BC796844();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7965FC()
{
  sub_1BC796844();
  return sub_1BC818808();
}

uint64_t SourceProfile.encode(to:)(_QWORD *a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v15;
  char v16;
  char v17;

  sub_1BC7967E0();
  v5 = v4;
  v15 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7972A0(0, &qword_1EF45C310, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v15 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC796844();
  sub_1BC8187F0();
  if (a2)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
    v13 = a2;
    sub_1BC817A10();
    v17 = 1;
    sub_1BC7972FC(&qword_1EF45C320, MEMORY[0x1E0CB4358]);
    sub_1BC818634();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v7, v5);
  }
  else
  {
    v16 = 0;
    sub_1BC818640();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

void sub_1BC7967E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45C308)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB1E0);
    v0 = sub_1BC817A04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45C308);
  }
}

unint64_t sub_1BC796844()
{
  unint64_t result;

  result = qword_1EF45C318;
  if (!qword_1EF45C318)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F31C, &type metadata for SourceProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C318);
  }
  return result;
}

uint64_t SourceProfile.init(from:)(_QWORD *a1)
{
  return sub_1BC796E98(a1);
}

uint64_t SourceProfile.description.getter(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD v13[2];

  v2 = sub_1BC816F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
    return 0x636974736F6E6761;
  v6 = a1;
  objc_msgSend(v6, sel_type);
  v7 = (id)HKStringFromProfileType();
  v8 = sub_1BC817AE8();
  v10 = v9;

  v13[0] = v8;
  v13[1] = v10;
  sub_1BC817B48();
  v11 = objc_msgSend(v6, sel_identifier);
  sub_1BC816F24();

  sub_1BC816F00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1BC817B48();

  swift_bridgeObjectRelease();
  return v13[0];
}

void SourceProfile.hash(into:)(uint64_t a1, void *a2)
{
  id v3;

  if (a2)
  {
    sub_1BC818748();
    v3 = a2;
    sub_1BC8180DC();

  }
  else
  {
    sub_1BC818748();
  }
}

uint64_t SourceProfile.hashValue.getter(void *a1)
{
  id v2;

  sub_1BC81873C();
  sub_1BC818748();
  if (a1)
  {
    v2 = a1;
    sub_1BC8180DC();

  }
  return sub_1BC818778();
}

BOOL sub_1BC796AAC(void **a1, void **a2)
{
  void *v2;
  void *v3;
  _BOOL8 result;
  BOOL v5;
  id v6;
  id v7;
  char v8;

  v2 = *a1;
  v3 = *a2;
  result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2)
    v5 = v3 == 0;
  else
    v5 = 1;
  if (!v5)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
    v6 = v2;
    v7 = v3;
    v8 = sub_1BC8180D0();

    return v8 & 1;
  }
  return result;
}

uint64_t sub_1BC796B34()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC818748();
  if (v1)
  {
    v2 = v1;
    sub_1BC8180DC();

  }
  return sub_1BC818778();
}

void sub_1BC796B9C()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  if (*v0)
  {
    sub_1BC818748();
    v2 = v1;
    sub_1BC8180DC();

  }
  else
  {
    sub_1BC818748();
  }
}

uint64_t sub_1BC796C18()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC818748();
  if (v1)
  {
    v2 = v1;
    sub_1BC8180DC();

  }
  return sub_1BC818778();
}

uint64_t sub_1BC796C7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC796E98(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BC796CA4(_QWORD *a1)
{
  void **v1;

  return SourceProfile.encode(to:)(a1, *v1);
}

uint64_t sub_1BC796CBC()
{
  void **v0;

  return SourceProfile.description.getter(*v0);
}

unint64_t SourceProfile.debugDescription.getter(void *a1)
{
  id v1;
  id v2;

  if (!a1)
    return 0xD000000000000016;
  v1 = a1;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
  v2 = v1;
  sub_1BC817B00();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();

  return 0xD000000000000015;
}

unint64_t sub_1BC796DA8()
{
  void **v0;

  return SourceProfile.debugDescription.getter(*v0);
}

uint64_t sub_1BC796DB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x636974736F6E6761 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C676E6973 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC796E98(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;

  sub_1BC7967E0();
  v21 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7972A0(0, &qword_1EF45C340, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v19 - v9;
  v11 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC796844();
  v12 = (uint64_t)v22;
  sub_1BC8187E4();
  if (v12)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v11;
  }
  v22 = a1;
  v20 = v8;
  v13 = v21;
  v14 = sub_1BC8185D4();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v16 = *(_BYTE *)(v15 + v14 + 31);
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      v23 = 1;
      sub_1BC7972FC(&qword_1EF45C348, MEMORY[0x1E0CB4370]);
      sub_1BC8185C8();
      v17 = v20;
      v11 = sub_1BC8179EC();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v13);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v7);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v7);
      v11 = 0;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    return v11;
  }
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

unint64_t sub_1BC7970A8()
{
  unint64_t result;

  result = qword_1ED6B5CB8;
  if (!qword_1ED6B5CB8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for SourceProfile, &type metadata for SourceProfile);
    atomic_store(result, (unint64_t *)&qword_1ED6B5CB8);
  }
  return result;
}

ValueMetadata *type metadata accessor for SourceProfile()
{
  return &type metadata for SourceProfile;
}

uint64_t storeEnumTagSinglePayload for SourceProfile.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC797148 + 4 * byte_1BC81F135[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC79717C + 4 * asc_1BC81F130[v4]))();
}

uint64_t sub_1BC79717C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC797184(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC79718CLL);
  return result;
}

uint64_t sub_1BC797198(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7971A0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC7971A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7971AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SourceProfile.CodingKeys()
{
  return &type metadata for SourceProfile.CodingKeys;
}

unint64_t sub_1BC7971CC()
{
  unint64_t result;

  result = qword_1EF45C328;
  if (!qword_1EF45C328)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F2F4, &type metadata for SourceProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C328);
  }
  return result;
}

unint64_t sub_1BC797214()
{
  unint64_t result;

  result = qword_1EF45C330;
  if (!qword_1EF45C330)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F264, &type metadata for SourceProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C330);
  }
  return result;
}

unint64_t sub_1BC79725C()
{
  unint64_t result;

  result = qword_1EF45C338;
  if (!qword_1EF45C338)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F28C, &type metadata for SourceProfile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C338);
  }
  return result;
}

void sub_1BC7972A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC796844();
    v7 = a3(a1, &type metadata for SourceProfile.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC7972FC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC7967E0();
    result = MEMORY[0x1BCCF5AB4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC79733C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v4;
  char v5;

  v4 = a1;
  v5 = a2 & 1;
  return a3(&v4);
}

uint64_t Publisher<>.addSummaries(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v25 = a1;
  v8 = *(_QWORD *)(a4 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(255, &qword_1ED6B8270, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v13 = v12;
  v23[1] = v12;
  v14 = sub_1BC79D82C(&qword_1ED6B8268, &qword_1ED6B8270, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v11, MEMORY[0x1E0C95D90]);
  v26 = v13;
  v27 = a4;
  v28 = v14;
  v29 = a5;
  v15 = sub_1BC817674();
  v24 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v23 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v5, a4);
  v18 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a4;
  *(_QWORD *)(v20 + 24) = a5;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v20 + v18, v10, a4);
  *(_QWORD *)(v20 + v19) = v25;
  swift_bridgeObjectRetain();
  sub_1BC817710();
  sub_1BC79756C();
  sub_1BC8178E4();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v15);
  v21 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v15);
  return v21;
}

void sub_1BC79756C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8430)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6B84C8);
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8430);
  }
}

uint64_t sub_1BC7975D0()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC79763C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BC79DC74(*(_QWORD *)(v2+ ((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 64)+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 80))+ 7) & 0xFFFFFFFFFFFFF8)), *a1);
  *a2 = result;
  return result;
}

uint64_t Publisher<>.addModels(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = v5;
  v25 = a2;
  v26 = a3;
  v10 = *(_QWORD *)(a4 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](a1);
  v12 = MEMORY[0x1E0C95D78];
  sub_1BC79DD80(255, &qword_1ED6B8260, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v14 = v13;
  v28 = v13;
  v27 = sub_1BC79DE08(&qword_1ED6B8258, &qword_1ED6B8260, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v12, MEMORY[0x1E0C95D90]);
  v30 = v14;
  v31 = a4;
  v32 = v27;
  v33 = a5;
  v15 = sub_1BC817674();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v6, a4);
  v18 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v19 = (char *)swift_allocObject();
  *((_QWORD *)v19 + 2) = a4;
  *((_QWORD *)v19 + 3) = a5;
  v20 = v25;
  v21 = v26;
  *((_QWORD *)v19 + 4) = a1;
  *((_QWORD *)v19 + 5) = v20;
  *((_QWORD *)v19 + 6) = v21;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v19[v18], (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC817710();
  sub_1BC6ECA64(0, &qword_1ED6B83E8, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC8178E4();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v15);
  v22 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v15);
  return v22;
}

uint64_t sub_1BC7978A4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(void);
  char *v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v43 = a5;
  v44 = a6;
  v46 = a3;
  sub_1BC79DD80(0, &qword_1ED6B82B8, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C96058]);
  v41 = *(_QWORD *)(v11 - 8);
  v42 = v11;
  MEMORY[0x1E0C80A78](v11);
  v40 = (char *)&v34 - v12;
  sub_1BC79909C();
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for PluginSharableModel();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (uint64_t *)((char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = *a1;
  v23 = MEMORY[0x1E0DEE9D8];
  v48 = MEMORY[0x1E0DEE9D8];
  v24 = *(_QWORD *)(a2 + 16);
  v45 = v17;
  if (v24)
  {
    v35 = v22;
    v36 = v15;
    v37 = v14;
    v39 = a7;
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B84C8);
    v25 = a2 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v26 = *(_QWORD *)(v19 + 72);
    v38 = a2;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BC75630C(v25, (uint64_t)v21);
      swift_bridgeObjectRetain();
      v27 = HKSharedSummary.init(model:pluginIdentifier:)(v21, v46, a4);
      MEMORY[0x1BCCF48F0]();
      if (*(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1BC817C98();
      sub_1BC817CD4();
      sub_1BC817C74();

      v25 += v26;
      --v24;
    }
    while (v24);
    v28 = v38;
    swift_bridgeObjectRelease();
    v23 = v48;
    a7 = v39;
    v15 = v36;
    v14 = v37;
    v22 = v35;
  }
  else
  {
    v28 = a2;
  }
  v29 = sub_1BC79DC74(v23, v22);
  swift_bridgeObjectRelease();
  v47 = v29;
  *(_QWORD *)(swift_allocObject() + 16) = v28;
  v30 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(0, &qword_1ED6B8270, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC6ECA64(0, &qword_1ED6B83E8, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC79D82C(&qword_1ED6B8268, &qword_1ED6B8270, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v30, MEMORY[0x1E0C95D90]);
  swift_bridgeObjectRetain();
  v31 = v45;
  sub_1BC81786C();
  swift_release();
  swift_release();
  sub_1BC6E1788(&qword_1ED6B8088, (uint64_t (*)(uint64_t))sub_1BC79909C, MEMORY[0x1E0C95950]);
  v32 = sub_1BC817854();
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v31, v14);
  *a7 = v32;
  return result;
}

uint64_t sub_1BC797CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC797D34@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BC7978A4(a1, v2[4], v2[5], v2[6], v2[2], v2[3], a2);
}

uint64_t Publisher<>.getSummaries(pluginIdentifier:modelIdentifiers:modelObjectTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a6;
  v22 = a1;
  v11 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(255, &qword_1ED6B8270, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v24 = v12;
  v25 = a5;
  v26 = sub_1BC79D82C(&qword_1ED6B8268, &qword_1ED6B8270, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v11, MEMORY[0x1E0C95D90]);
  v27 = a6;
  v13 = sub_1BC817674();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v21 - v15;
  v17 = (_QWORD *)swift_allocObject();
  v18 = v22;
  v17[2] = a3;
  v17[3] = v18;
  v17[4] = a2;
  v17[5] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC817710();
  sub_1BC79756C();
  sub_1BC8178E4();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v13);
  v19 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return v19;
}

uint64_t sub_1BC797EF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t *v21;

  v21 = a6;
  sub_1BC79D71C();
  v12 = v11;
  v20 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = v15;
  v16[4] = a3;
  v16[5] = a4;
  v16[6] = a5;
  v17 = MEMORY[0x1E0C960D8];
  sub_1BC79D7BC(0, &qword_1ED6B8350, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC79D82C(&qword_1ED6B8348, &qword_1ED6B8350, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v17, MEMORY[0x1E0C96108]);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC817824();
  sub_1BC6E1788(&qword_1ED6B8380, (uint64_t (*)(uint64_t))sub_1BC79D71C, MEMORY[0x1E0C96148]);
  v18 = sub_1BC817854();
  result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v14, v12);
  *v21 = v18;
  return result;
}

uint64_t sub_1BC798084()
{
  return objectdestroy_5Tm_3((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BC798094@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BC797EF8(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_1BC7980A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  _QWORD *v12;
  uint64_t result;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = a5;
  sub_1BC79D7BC(0, &qword_1ED6B8350, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_1BC81780C();
  *a6 = result;
  return result;
}

uint64_t sub_1BC798174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  swift_retain();
  if (a3)
  {
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BC7060D8(v15);
    swift_bridgeObjectRelease();
  }
  else
  {
    v16 = 0;
  }
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = a6;
  v17[5] = a3;
  v17[6] = sub_1BC77294C;
  v17[7] = v14;
  v17[8] = a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC6F2664(a5, a6, (uint64_t)v16, (uint64_t)sub_1BC79D920, (uint64_t)v17);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1BC798280(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *, uint64_t), uint64_t a8, uint64_t a9)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  unsigned __int8 v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  NSObject *v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  os_log_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  os_log_t v88;
  uint64_t v89;
  void (*v90)(void *, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[2];

  v17 = sub_1BC816F3C();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v21;
  v94 = v18;
  if ((a2 & 1) != 0)
  {
    v23 = a1;
    v24 = (void *)sub_1BC816D50();
    v25 = objc_msgSend(v24, sel_hk_isObjectNotFoundError);

    if ((v25 & 1) != 0)
    {
      if (qword_1ED6BB338 != -1)
        swift_once();
      v26 = sub_1BC817590();
      __swift_project_value_buffer(v26, (uint64_t)qword_1ED6BB320);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      v27 = sub_1BC81756C();
      v28 = sub_1BC817E9C();
      v29 = v28;
      if (os_log_type_enabled(v27, v28))
      {
        v30 = swift_slowAlloc();
        v92 = a4;
        v31 = v30;
        v89 = swift_slowAlloc();
        v97[0] = v89;
        *(_DWORD *)v31 = 136315650;
        v91 = a8;
        v32 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
        v88 = v27;
        v33 = v32;
        sub_1BC816F24();

        v34 = sub_1BC816F00();
        v87 = v29;
        v35 = a5;
        v37 = v36;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v20, v94);
        v95 = sub_1BC6E14D8(v34, v37, v97);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 12) = 2080;
        v95 = v92;
        v96 = v35;
        sub_1BC79DBB0();
        swift_bridgeObjectRetain();
        v38 = sub_1BC817AF4();
        v95 = sub_1BC6E14D8(v38, v39, v97);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v31 + 22) = 2080;
        v95 = a6;
        sub_1BC6ECA64(0, &qword_1ED6B8448, (uint64_t (*)(uint64_t))sub_1BC714F04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        swift_bridgeObjectRetain();
        v40 = sub_1BC817AF4();
        v95 = sub_1BC6E14D8(v40, v41, v97);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v42 = v88;
        _os_log_impl(&dword_1BC6DD000, v88, (os_log_type_t)v87, "[Transaction] No summaries were found for transaction %s with identifier %s and names %s", (uint8_t *)v31, 0x20u);
        v43 = v89;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v43, -1, -1);
        MEMORY[0x1BCCF5BA4](v31, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      a7((void *)MEMORY[0x1E0DEE9D8], 0);
    }
    else
    {
      if (qword_1ED6BB338 != -1)
        swift_once();
      v44 = sub_1BC817590();
      __swift_project_value_buffer(v44, (uint64_t)qword_1ED6BB320);
      sub_1BC79DD74(a1, 1);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1BC79DD74(a1, 1);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = sub_1BC81756C();
      v46 = sub_1BC817E84();
      v47 = v46;
      if (os_log_type_enabled(v45, v46))
      {
        v48 = swift_slowAlloc();
        v92 = a4;
        v49 = v48;
        v89 = swift_slowAlloc();
        v97[0] = v89;
        *(_DWORD *)v49 = 136315906;
        v91 = a8;
        v50 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
        v88 = v45;
        v51 = v50;
        sub_1BC816F24();

        v52 = sub_1BC816F00();
        v87 = v47;
        v53 = a5;
        v55 = v54;
        (*(void (**)(char *, uint64_t))(v93 + 8))(v20, v94);
        v95 = sub_1BC6E14D8(v52, v55, v97);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 12) = 2080;
        v95 = v92;
        v96 = v53;
        sub_1BC79DBB0();
        swift_bridgeObjectRetain();
        v56 = sub_1BC817AF4();
        v95 = sub_1BC6E14D8(v56, v57, v97);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 22) = 2080;
        v95 = a6;
        sub_1BC6ECA64(0, &qword_1ED6B8448, (uint64_t (*)(uint64_t))sub_1BC714F04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        swift_bridgeObjectRetain();
        v58 = sub_1BC817AF4();
        v95 = sub_1BC6E14D8(v58, v59, v97);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 32) = 2082;
        v95 = (uint64_t)a1;
        v60 = a1;
        sub_1BC6E1878();
        v61 = sub_1BC817B00();
        v95 = sub_1BC6E14D8(v61, v62, v97);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        sub_1BC79DBA4(a1, 1);
        sub_1BC79DBA4(a1, 1);
        v45 = v88;
        _os_log_impl(&dword_1BC6DD000, v88, (os_log_type_t)v87, "[Transaction] Could not get summaries for transaction %s with identifier %s and names %s. %{public}s", (uint8_t *)v49, 0x2Au);
        v63 = v89;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v63, -1, -1);
        MEMORY[0x1BCCF5BA4](v49, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
        sub_1BC79DBA4(a1, 1);
        sub_1BC79DBA4(a1, 1);
      }

      v83 = a1;
      a7(a1, 1);
      sub_1BC79DBA4(a1, 1);
    }
    sub_1BC79DBA4(a1, 1);
  }
  else
  {
    v92 = a4;
    if (a9)
    {
      swift_bridgeObjectRetain();
      v22 = a9;
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1BC8184E4())
      {
        sub_1BC731808(MEMORY[0x1E0DEE9D8]);
        v22 = v84;
      }
      else
      {
        v22 = MEMORY[0x1E0DEE9E8];
      }
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v64 = sub_1BC79D954((unint64_t)a1, a6, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC79DBA4(a1, 0);
    if (qword_1ED6BB338 != -1)
      swift_once();
    v65 = sub_1BC817590();
    __swift_project_value_buffer(v65, (uint64_t)qword_1ED6BB320);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v66 = sub_1BC81756C();
    v67 = sub_1BC817E9C();
    if (os_log_type_enabled(v66, (os_log_type_t)v67))
    {
      v89 = a5;
      v68 = swift_slowAlloc();
      v86 = swift_slowAlloc();
      v97[0] = v86;
      *(_DWORD *)v68 = 134219010;
      v90 = a7;
      v91 = a8;
      v88 = v66;
      v87 = v67;
      if (v64 >> 62)
      {
        swift_bridgeObjectRetain();
        v69 = sub_1BC8184E4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v69 = *(_QWORD *)((v64 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v95 = v69;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      v70 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v71 = sub_1BC816F00();
      v73 = v72;
      (*(void (**)(char *, uint64_t))(v93 + 8))(v20, v94);
      v95 = sub_1BC6E14D8(v71, v73, v97);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 22) = 2080;
      v95 = v92;
      v96 = v89;
      sub_1BC79DBB0();
      swift_bridgeObjectRetain();
      v74 = sub_1BC817AF4();
      v95 = sub_1BC6E14D8(v74, v75, v97);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 32) = 2080;
      v95 = a6;
      v76 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      sub_1BC6ECA64(0, &qword_1ED6B8448, (uint64_t (*)(uint64_t))sub_1BC714F04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_bridgeObjectRetain();
      v77 = sub_1BC817AF4();
      v95 = sub_1BC6E14D8(v77, v78, v97);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 42) = 2080;
      v95 = a9;
      sub_1BC6ECA64(0, &qword_1ED6B8458, (uint64_t (*)(uint64_t))sub_1BC79DC04, v76);
      swift_bridgeObjectRetain();
      v79 = sub_1BC817AF4();
      v95 = sub_1BC6E14D8(v79, v80, v97);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v81 = v88;
      _os_log_impl(&dword_1BC6DD000, v88, (os_log_type_t)v87, "[Transaction] Retrieved %ld summaries for transaction %s with identifier %s and filters %s %s", (uint8_t *)v68, 0x34u);
      v82 = v86;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v82, -1, -1);
      MEMORY[0x1BCCF5BA4](v68, -1, -1);

      v90((void *)v64, 0);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
      a7((void *)v64, 0);
    }
    swift_bridgeObjectRelease();
  }
}

uint64_t Publisher<>.getModels(pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(void);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  sub_1BC79909C();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = Publisher<>.getSummaries(pluginIdentifier:modelIdentifiers:modelObjectTypes:)(a1, a2, 0, 0, a3, a4);
  v13 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(0, &qword_1ED6B8270, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC6ECA64(0, &qword_1ED6B83E8, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v14 = MEMORY[0x1E0C95D90];
  sub_1BC79D82C(&qword_1ED6B8268, &qword_1ED6B8270, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v13, MEMORY[0x1E0C95D90]);
  sub_1BC81786C();
  sub_1BC6E1788(&qword_1ED6B8088, (uint64_t (*)(uint64_t))sub_1BC79909C, MEMORY[0x1E0C95950]);
  v15 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_release();
  v19 = v15;
  sub_1BC79DD80(0, &qword_1ED6B8260, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v13);
  sub_1BC79DE08(&qword_1ED6B8258, &qword_1ED6B8260, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v13, v14);
  v16 = sub_1BC817854();
  swift_release();
  return v16;
}

void sub_1BC79909C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B8090)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC79D7BC(255, &qword_1ED6B8270, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC6ECA64(255, &qword_1ED6B83E8, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC79D82C(&qword_1ED6B8268, &qword_1ED6B8270, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC817614();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B8090);
  }
}

uint64_t Publisher<>.reuse(summaries:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[4];

  v6 = MEMORY[0x1E0C960D8];
  sub_1BC79D7BC(255, &qword_1ED6B8320, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  v14[0] = v7;
  v14[1] = a2;
  v14[2] = sub_1BC79D34C((unint64_t *)&qword_1ED6B8318, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v6, MEMORY[0x1E0C96108]);
  v14[3] = a3;
  v8 = sub_1BC817674();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - v10;
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1BC817710();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1BC8178E4();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v8);
  v12 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1BC7992E4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = *a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = a2;
  sub_1BC79D7BC(0, &qword_1ED6B8320, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  result = sub_1BC81780C();
  *a3 = result;
  return result;
}

uint64_t sub_1BC79938C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a3;
  v9[4] = sub_1BC77294C;
  v9[5] = v8;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = sub_1BC79D6F0;
  v10[5] = v9;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BC79D6F0;
  *(_QWORD *)(v11 + 24) = v9;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1BC6F4C60((uint64_t)sub_1BC79D710, (uint64_t)v10, (uint64_t)sub_1BC79D448, v11);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC7994B0(void *a1, unint64_t a2, uint64_t a3, void (*a4)(_QWORD, _QWORD), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v10 = sub_1BC816F3C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v46 = v11;
    v14 = a1;
    if (qword_1ED6BB338 != -1)
      swift_once();
    v15 = sub_1BC817590();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED6BB320);
    swift_bridgeObjectRetain();
    swift_retain();
    v16 = a1;
    swift_bridgeObjectRetain();
    swift_retain();
    v17 = a1;
    v18 = sub_1BC81756C();
    v19 = sub_1BC817E84();
    if (os_log_type_enabled(v18, v19))
    {
      v43 = v10;
      v20 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v48 = v42;
      *(_DWORD *)v20 = 134218498;
      v44 = a5;
      v45 = a4;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        v21 = sub_1BC8184E4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v21 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v47 = v21;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 12) = 2080;
      v22 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v23 = sub_1BC816F00();
      v25 = v24;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v43);
      v47 = sub_1BC6E14D8(v23, v25, &v48);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v20 + 22) = 2082;
      v47 = (uint64_t)a1;
      v26 = a1;
      sub_1BC6E1878();
      v27 = sub_1BC817B00();
      v47 = sub_1BC6E14D8(v27, v28, &v48);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v18, v19, "[Transaction] Could not reuse %ld summaries for transaction %s. %{public}s", (uint8_t *)v20, 0x20u);
      v29 = v42;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v29, -1, -1);
      MEMORY[0x1BCCF5BA4](v20, -1, -1);

      a4 = v45;
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

    }
    v40 = a1;
    a4(a1, 1);

  }
  else
  {
    if (qword_1ED6BB338 != -1)
      swift_once();
    v30 = sub_1BC817590();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED6BB320);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v31 = sub_1BC81756C();
    v32 = sub_1BC817E9C();
    if (os_log_type_enabled(v31, v32))
    {
      v46 = v11;
      v44 = a5;
      v33 = swift_slowAlloc();
      v34 = swift_slowAlloc();
      v48 = v34;
      *(_DWORD *)v33 = 134218242;
      v45 = a4;
      v43 = v10;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        v35 = sub_1BC8184E4();
        swift_bridgeObjectRelease();
      }
      else
      {
        v35 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      v47 = v35;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      v36 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v37 = sub_1BC816F00();
      v39 = v38;
      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v43);
      v47 = sub_1BC6E14D8(v37, v39, &v48);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v31, v32, "[Transaction] Reusing %ld summaries for transaction %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v34, -1, -1);
      MEMORY[0x1BCCF5BA4](v33, -1, -1);

      v45(a3, 0);
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      a4(a3, 0);
    }
  }
}

uint64_t Publisher<>.removeSummaries(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD v19[6];

  v19[0] = a5;
  v10 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(255, &qword_1ED6B6340, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v19[2] = v11;
  v19[3] = a4;
  v19[4] = sub_1BC79D34C(&qword_1ED6B8230, &qword_1ED6B6340, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v10, MEMORY[0x1E0C95D90]);
  v19[5] = a5;
  v12 = sub_1BC817674();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v19 - v14;
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a2;
  v16[3] = a3;
  v16[4] = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC817710();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1BC8178E4();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v12);
  v17 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v17;
}

uint64_t sub_1BC799C20@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(void);
  uint64_t v12;
  uint64_t result;

  v9 = *a1;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = v9;
  v10[3] = a2;
  v10[4] = a3;
  v10[5] = a4;
  v11 = MEMORY[0x1E0C960D8];
  sub_1BC79D7BC(0, &qword_1ED6B8320, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC81780C();
  sub_1BC79D34C((unint64_t *)&qword_1ED6B8318, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v11, MEMORY[0x1E0C96108]);
  v12 = sub_1BC817854();
  result = swift_release();
  *a5 = v12;
  return result;
}

uint64_t sub_1BC799D40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a3;
  v13[3] = sub_1BC77294C;
  v13[4] = v12;
  v13[5] = a6;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a5;
  v14[5] = a6;
  v14[6] = sub_1BC79D664;
  v14[7] = v13;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = sub_1BC79D664;
  *(_QWORD *)(v15 + 24) = v13;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F6668, (uint64_t)v14, (uint64_t)sub_1BC79D448, v15);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC799E78(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint8_t *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD);
  uint64_t v63;
  uint64_t v64;

  v10 = sub_1BC816F3C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v14 = (void *)sub_1BC816D50();
    if ((objc_msgSend(v14, sel_hk_isObjectNotFoundError) & 1) != 0)
    {
      if (qword_1ED6BB338 != -1)
        swift_once();
      v15 = sub_1BC817590();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED6BB320);
      swift_retain_n();
      v16 = sub_1BC81756C();
      v17 = sub_1BC817E9C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v62 = a3;
        v19 = (uint8_t *)v18;
        v20 = swift_slowAlloc();
        v60 = v20;
        v61 = a4;
        *(_DWORD *)v19 = 136315138;
        v64 = v20;
        v59 = (uint64_t)(v19 + 4);
        v21 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
        sub_1BC816F24();

        v22 = sub_1BC816F00();
        v23 = v10;
        v25 = v24;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v23);
        v63 = sub_1BC6E14D8(v22, v25, &v64);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v16, v17, "[Transaction] Some summaries were not found and could not be removed in transaction %s", v19, 0xCu);
        v26 = v60;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v26, -1, -1);
        v27 = v19;
        a3 = v62;
        MEMORY[0x1BCCF5BA4](v27, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      a3(a2, 0);

    }
    else
    {
      v60 = v10;
      if (qword_1ED6BB338 != -1)
        swift_once();
      v40 = sub_1BC817590();
      __swift_project_value_buffer(v40, (uint64_t)qword_1ED6BB320);
      swift_bridgeObjectRetain_n();
      swift_retain_n();
      v41 = v14;
      v42 = sub_1BC81756C();
      v43 = sub_1BC817E84();
      v44 = v43;
      if (os_log_type_enabled(v42, v43))
      {
        v45 = swift_slowAlloc();
        v61 = a4;
        v46 = v45;
        v59 = swift_slowAlloc();
        v64 = v59;
        *(_DWORD *)v46 = 134349570;
        v58 = v44;
        v47 = *(_QWORD *)(a5 + 16);
        swift_bridgeObjectRelease();
        v62 = a3;
        v63 = v47;
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 12) = 2080;
        v48 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
        sub_1BC816F24();

        v49 = sub_1BC816F00();
        v51 = v50;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v60);
        v63 = sub_1BC6E14D8(v49, v51, &v64);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 22) = 2082;
        v63 = (uint64_t)v41;
        sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA830);
        v52 = v41;
        v53 = sub_1BC817B00();
        v63 = sub_1BC6E14D8(v53, v54, &v64);
        sub_1BC818148();

        a3 = v62;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v42, (os_log_type_t)v58, "[Transaction] Could not remove %{public}ld summaries from transaction %s. %{public}s", (uint8_t *)v46, 0x20u);
        v55 = v59;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v55, -1, -1);
        MEMORY[0x1BCCF5BA4](v46, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      v56 = v41;
      a3(v41, 1);

    }
  }
  else
  {
    if (qword_1ED6BB338 != -1)
      swift_once();
    v28 = sub_1BC817590();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED6BB320);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v29 = sub_1BC81756C();
    v30 = sub_1BC817E9C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v62 = a3;
      v32 = v31;
      v33 = swift_slowAlloc();
      v60 = v10;
      v34 = v33;
      *(_DWORD *)v32 = 134349314;
      v63 = *(_QWORD *)(a5 + 16);
      v64 = v33;
      v61 = a4;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2080;
      v59 = v32 + 14;
      v35 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v36 = sub_1BC816F00();
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v60);
      v63 = sub_1BC6E14D8(v36, v38, &v64);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v29, v30, "[Transaction] Removed %{public}ld existing summaries from transaction %s", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v34, -1, -1);
      v39 = v32;
      a3 = v62;
      MEMORY[0x1BCCF5BA4](v39, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease();
    }
    a3(a2, 0);
  }
}

uint64_t Publisher<>.removeAllSummaries(pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];

  v8 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(255, &qword_1ED6B6340, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v17[2] = v9;
  v17[3] = a3;
  v17[4] = sub_1BC79D34C(&qword_1ED6B8230, &qword_1ED6B6340, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v8, MEMORY[0x1E0C95D90]);
  v17[5] = a4;
  v10 = sub_1BC817674();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v17 - v12;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  swift_bridgeObjectRetain();
  sub_1BC817710();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1BC8178E4();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v10);
  v15 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v15;
}

uint64_t sub_1BC79A730@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t result;

  v7 = *a1;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = v7;
  v8[3] = a2;
  v8[4] = a3;
  v9 = MEMORY[0x1E0C960D8];
  sub_1BC79D7BC(0, &qword_1ED6B8320, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC81780C();
  sub_1BC79D34C((unint64_t *)&qword_1ED6B8318, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v9, MEMORY[0x1E0C96108]);
  v10 = sub_1BC817854();
  result = swift_release();
  *a4 = v10;
  return result;
}

uint64_t sub_1BC79A83C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  v11 = (_QWORD *)swift_allocObject();
  v11[2] = a4;
  v11[3] = a5;
  v11[4] = a3;
  v11[5] = sub_1BC77294C;
  v11[6] = v10;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  v12[5] = sub_1BC79D5AC;
  v12[6] = v11;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1BC79D5AC;
  *(_QWORD *)(v13 + 24) = v11;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F661C, (uint64_t)v12, (uint64_t)sub_1BC79D448, v13);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC79A96C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, void (*a5)(_QWORD, _QWORD), uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  id v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(_QWORD, _QWORD);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v12 = sub_1BC816F3C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v63 = a6;
    v16 = (void *)sub_1BC816D50();
    v17 = objc_msgSend(v16, sel_hk_isObjectNotFoundError);
    v61 = v12;
    if ((v17 & 1) != 0)
    {
      if (qword_1ED6BB338 != -1)
        swift_once();
      v18 = sub_1BC817590();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED6BB320);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      v19 = sub_1BC81756C();
      v20 = sub_1BC817E9C();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = swift_slowAlloc();
        v62 = a5;
        v22 = v21;
        v60 = swift_slowAlloc();
        v65 = v60;
        *(_DWORD *)v22 = 136446466;
        swift_bridgeObjectRetain();
        v64 = sub_1BC6E14D8(a2, a3, &v65);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v22 + 12) = 2080;
        v59 = v22 + 14;
        v23 = objc_msgSend(*(id *)(a4 + 16), sel_transactionUUID);
        sub_1BC816F24();

        v24 = sub_1BC816F00();
        v26 = v25;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v61);
        v64 = sub_1BC6E14D8(v24, v26, &v65);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v19, v20, "[Transaction] No summaries to remove for package %{public}s in transaction %s", (uint8_t *)v22, 0x16u);
        v27 = v60;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v27, -1, -1);
        v28 = v22;
        a5 = v62;
        MEMORY[0x1BCCF5BA4](v28, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      a5(a4, 0);

    }
    else
    {
      if (qword_1ED6BB338 != -1)
        swift_once();
      v42 = sub_1BC817590();
      __swift_project_value_buffer(v42, (uint64_t)qword_1ED6BB320);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      v43 = v16;
      v44 = sub_1BC81756C();
      v45 = sub_1BC817E84();
      v46 = v45;
      if (os_log_type_enabled(v44, v45))
      {
        v47 = swift_slowAlloc();
        LODWORD(v60) = v46;
        v48 = v47;
        v59 = swift_slowAlloc();
        v65 = v59;
        *(_DWORD *)v48 = 136446722;
        swift_bridgeObjectRetain();
        v64 = sub_1BC6E14D8(a2, a3, &v65);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v48 + 12) = 2080;
        v49 = objc_msgSend(*(id *)(a4 + 16), sel_transactionUUID);
        sub_1BC816F24();

        v50 = sub_1BC816F00();
        v62 = a5;
        v52 = v51;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v61);
        v64 = sub_1BC6E14D8(v50, v52, &v65);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 22) = 2082;
        v64 = (uint64_t)v43;
        sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA830);
        v53 = v43;
        v54 = sub_1BC817B00();
        v64 = sub_1BC6E14D8(v54, v55, &v65);
        sub_1BC818148();

        a5 = v62;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v44, (os_log_type_t)v60, "[Transaction] Could not remove all summaries in %{public}s for transaction %s. %{public}s", (uint8_t *)v48, 0x20u);
        v56 = v59;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v56, -1, -1);
        MEMORY[0x1BCCF5BA4](v48, -1, -1);

      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      v57 = v43;
      a5(v43, 1);

    }
  }
  else
  {
    if (qword_1ED6BB338 != -1)
      swift_once();
    v29 = sub_1BC817590();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED6BB320);
    swift_retain_n();
    v30 = sub_1BC81756C();
    v31 = sub_1BC817E9C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = swift_slowAlloc();
      v62 = a5;
      v33 = (uint8_t *)v32;
      v34 = swift_slowAlloc();
      v63 = a6;
      v35 = v34;
      *(_DWORD *)v33 = 136315138;
      v65 = v34;
      v60 = (uint64_t)(v33 + 4);
      v36 = objc_msgSend(*(id *)(a4 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v37 = sub_1BC816F00();
      v38 = v12;
      v40 = v39;
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v38);
      v64 = sub_1BC6E14D8(v37, v40, &v65);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v30, v31, "[Transaction] Removed all summaries from transaction %s", v33, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v35, -1, -1);
      v41 = v33;
      a5 = v62;
      MEMORY[0x1BCCF5BA4](v41, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    a5(a4, 0);
  }
}

uint64_t Publisher<>.addMetadata(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[4];

  v6 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(255, &qword_1ED6B6340, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v14[0] = v7;
  v14[1] = a2;
  v14[2] = sub_1BC79D34C(&qword_1ED6B8230, &qword_1ED6B6340, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v6, MEMORY[0x1E0C95D90]);
  v14[3] = a3;
  v8 = sub_1BC817674();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - v10;
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  sub_1BC817710();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1BC8178E4();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v8);
  v12 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1BC79B244@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t result;

  v5 = *a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = MEMORY[0x1E0C960D8];
  sub_1BC79D7BC(0, &qword_1ED6B8320, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC81780C();
  sub_1BC79D34C((unint64_t *)&qword_1ED6B8318, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x1E0C96108]);
  v8 = sub_1BC817854();
  result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_1BC79B348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = sub_1BC77294C;
  v9[4] = v8;
  v9[5] = a4;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = sub_1BC79D508;
  v10[5] = v9;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BC79D508;
  *(_QWORD *)(v11 + 24) = v9;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F65DC, (uint64_t)v10, (uint64_t)sub_1BC74C8A0, v11);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC79B46C(void *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(_QWORD, _QWORD);
  uint64_t v46;
  uint64_t v47;

  v8 = sub_1BC816F3C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = a1;
    if (qword_1ED6BB338 != -1)
      swift_once();
    v13 = sub_1BC817590();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED6BB320);
    swift_retain();
    v14 = a1;
    swift_retain();
    v15 = a1;
    v16 = sub_1BC81756C();
    v17 = sub_1BC817E84();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v44 = a4;
      v19 = v18;
      v43 = swift_slowAlloc();
      v47 = v43;
      *(_DWORD *)v19 = 136315394;
      v42 = v19 + 4;
      v20 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID, v19 + 4);
      sub_1BC816F24();

      v21 = sub_1BC816F00();
      v45 = a3;
      v23 = v22;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v46 = sub_1BC6E14D8(v21, v23, &v47);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      v46 = (uint64_t)a1;
      v24 = a1;
      sub_1BC6E1878();
      v25 = sub_1BC817B00();
      v46 = sub_1BC6E14D8(v25, v26, &v47);
      a3 = v45;
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v16, v17, "[Transaction] Could not add metadata to transaction %s. %{public}s", (uint8_t *)v19, 0x16u);
      v27 = v43;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v27, -1, -1);
      MEMORY[0x1BCCF5BA4](v19, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    v41 = a1;
    a3(a1, 1);

  }
  else
  {
    if (qword_1ED6BB338 != -1)
      swift_once();
    v28 = sub_1BC817590();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED6BB320);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v29 = sub_1BC81756C();
    v30 = sub_1BC817E9C();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v44 = a4;
      v32 = v31;
      v43 = swift_slowAlloc();
      v47 = v43;
      *(_DWORD *)v32 = 136315395;
      v42 = v32 + 4;
      v33 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID, v32 + 4);
      sub_1BC816F24();

      v34 = sub_1BC816F00();
      v45 = a3;
      v36 = v35;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      v46 = sub_1BC6E14D8(v34, v36, &v47);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2081;
      swift_bridgeObjectRetain();
      v37 = sub_1BC817A40();
      v39 = v38;
      swift_bridgeObjectRelease();
      v46 = sub_1BC6E14D8(v37, v39, &v47);
      a3 = v45;
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v29, v30, "[Transaction] Transaction %s metadata successfully added: %{private}s", (uint8_t *)v32, 0x16u);
      v40 = v43;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v40, -1, -1);
      MEMORY[0x1BCCF5BA4](v32, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    a3(a2, 0);
  }
}

uint64_t Publisher<>.commit(asUrgent:)(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD v14[4];

  v6 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(255, &qword_1ED6B6340, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v14[0] = v7;
  v14[1] = a2;
  v14[2] = sub_1BC79D34C(&qword_1ED6B8230, &qword_1ED6B6340, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v6, MEMORY[0x1E0C95D90]);
  v14[3] = a3;
  v8 = sub_1BC817674();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v14 - v10;
  *(_BYTE *)(swift_allocObject() + 16) = a1;
  sub_1BC817710();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1BC8178E4();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v8);
  v12 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v12;
}

uint64_t sub_1BC79BB3C@<X0>(uint64_t *a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t result;

  v5 = *a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_BYTE *)(v6 + 24) = a2;
  v7 = MEMORY[0x1E0C960D8];
  sub_1BC79D7BC(0, &qword_1ED6B8320, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  sub_1BC81780C();
  sub_1BC79D34C((unint64_t *)&qword_1ED6B8318, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x1E0C96108]);
  v8 = sub_1BC817854();
  result = swift_release();
  *a3 = v8;
  return result;
}

uint64_t sub_1BC79BC38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = a4;
  *(_QWORD *)(v9 + 24) = sub_1BC77294C;
  *(_QWORD *)(v9 + 32) = v8;
  *(_QWORD *)(v9 + 40) = a3;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a3;
  *(_BYTE *)(v10 + 24) = a4;
  *(_QWORD *)(v10 + 32) = sub_1BC79D4AC;
  *(_QWORD *)(v10 + 40) = v9;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BC79D4AC;
  *(_QWORD *)(v11 + 24) = v9;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F65C8, v10, (uint64_t)sub_1BC74D1C0, v11);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC79BD50(void *a1, int a2, int a3, void (*a4)(_QWORD, _QWORD), uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  id v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  void (*v53)(_QWORD, _QWORD);
  uint64_t v54;
  uint64_t v55;

  v51 = a3;
  v11 = sub_1BC816F3C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v15 = a1;
    if (qword_1ED6BB338 != -1)
      swift_once();
    v16 = sub_1BC817590();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED6BB320);
    sub_1BC74D1C8(a1);
    swift_retain();
    sub_1BC74D1C8(a1);
    swift_retain();
    v17 = sub_1BC81756C();
    v18 = sub_1BC817E84();
    v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v20 = swift_slowAlloc();
      v50 = a2;
      v21 = v20;
      v49 = swift_slowAlloc();
      v55 = v49;
      *(_DWORD *)v21 = 136315650;
      v53 = a4;
      v22 = objc_msgSend(*(id *)(a6 + 16), sel_transactionUUID);
      v48 = v19;
      v23 = v22;
      sub_1BC816F24();

      v24 = sub_1BC816F00();
      v52 = a5;
      v26 = v25;
      (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
      v54 = sub_1BC6E14D8(v24, v26, &v55);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2082;
      if ((v51 & 1) != 0)
        v27 = 0x6E65677275207361;
      else
        v27 = 0;
      if ((v51 & 1) != 0)
        v28 = 0xE900000000000074;
      else
        v28 = 0xE000000000000000;
      v54 = sub_1BC6E14D8(v27, v28, &v55);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 22) = 2082;
      v54 = (uint64_t)a1;
      v29 = a1;
      sub_1BC6E1878();
      v30 = sub_1BC817B00();
      v54 = sub_1BC6E14D8(v30, v31, &v55);
      sub_1BC818148();
      a4 = v53;
      swift_bridgeObjectRelease();
      sub_1BC74D1D4(a1);
      sub_1BC74D1D4(a1);
      _os_log_impl(&dword_1BC6DD000, v17, (os_log_type_t)v48, "[Transaction] Could not commit transaction %s %{public}s. %{public}s", (uint8_t *)v21, 0x20u);
      v32 = v49;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v32, -1, -1);
      MEMORY[0x1BCCF5BA4](v21, -1, -1);
    }
    else
    {
      swift_release_n();
      sub_1BC74D1D4(a1);
      sub_1BC74D1D4(a1);
    }

    v46 = a1;
    a4(a1, 1);
    sub_1BC74D1D4(a1);
  }
  else
  {
    v52 = a5;
    v53 = a4;
    v33 = qword_1ED6BB338;
    v34 = a1;
    if (v33 != -1)
      swift_once();
    v35 = sub_1BC817590();
    __swift_project_value_buffer(v35, (uint64_t)qword_1ED6BB320);
    v36 = v34;
    v37 = sub_1BC81756C();
    v38 = sub_1BC817E9C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v54 = (uint64_t)v36;
      v55 = v40;
      *(_DWORD *)v39 = 136446466;
      v50 = a2;
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6B85C0);
      v41 = v36;
      v42 = sub_1BC817B00();
      v54 = sub_1BC6E14D8(v42, v43, &v55);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      sub_1BC74D1D4(a1);
      sub_1BC74D1D4(a1);
      *(_WORD *)(v39 + 12) = 2082;
      if ((v51 & 1) != 0)
        v44 = 0x6E65677275207361;
      else
        v44 = 0;
      if ((v51 & 1) != 0)
        v45 = 0xE900000000000074;
      else
        v45 = 0xE000000000000000;
      v54 = sub_1BC6E14D8(v44, v45, &v55);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v37, v38, "[Transaction] Transaction %{public}s successfully committed %{public}s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v40, -1, -1);
      MEMORY[0x1BCCF5BA4](v39, -1, -1);
    }
    else
    {
      sub_1BC74D1D4(a1);
      sub_1BC74D1D4(a1);
    }

    v53(a6, 0);
  }
  sub_1BC74D1D4(a1);
}

uint64_t Publisher<>.discard()(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[4];

  v4 = MEMORY[0x1E0C95D78];
  sub_1BC79D7BC(255, &qword_1ED6B6340, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  v12[0] = v5;
  v12[1] = a1;
  v12[2] = sub_1BC79D34C(&qword_1ED6B8230, &qword_1ED6B6340, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v4, MEMORY[0x1E0C95D90]);
  v12[3] = a2;
  v6 = sub_1BC817674();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v12 - v8;
  sub_1BC817710();
  type metadata accessor for CachingSharedSummaryTransactionBuilder();
  sub_1BC8178E4();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v6);
  v10 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

uint64_t sub_1BC79C44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t (*v2)(void);
  uint64_t v3;
  uint64_t result;

  v2 = MEMORY[0x1E0C960D8];
  sub_1BC79D7BC(0, &qword_1ED6B8320, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  sub_1BC81780C();
  sub_1BC79D34C((unint64_t *)&qword_1ED6B8318, &qword_1ED6B8320, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v2, MEMORY[0x1E0C96108]);
  v3 = sub_1BC817854();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BC79C520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = a3;
  v7[3] = sub_1BC77294C;
  v7[4] = v6;
  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a3;
  v8[3] = sub_1BC79D430;
  v8[4] = v7;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BC79D430;
  *(_QWORD *)(v9 + 24) = v7;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1BC6F4C60((uint64_t)sub_1BC6F6590, (uint64_t)v8, (uint64_t)sub_1BC79D448, v9);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC79C62C(void *a1, uint64_t a2, void (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  id v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD);
  uint64_t v44;
  uint64_t v45;

  v8 = sub_1BC816F3C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v12 = a1;
    if (qword_1ED6BB338 != -1)
      swift_once();
    v13 = sub_1BC817590();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED6BB320);
    swift_retain();
    v14 = a1;
    swift_retain();
    v15 = a1;
    v16 = sub_1BC81756C();
    v17 = sub_1BC817E84();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v42 = a4;
      v19 = v18;
      v41 = swift_slowAlloc();
      v45 = v41;
      *(_DWORD *)v19 = 136315394;
      v43 = a3;
      v20 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID);
      sub_1BC816F24();

      v21 = sub_1BC816F00();
      v22 = v8;
      v24 = v23;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v22);
      v44 = sub_1BC6E14D8(v21, v24, &v45);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      v44 = (uint64_t)a1;
      v25 = a1;
      sub_1BC6E1878();
      v26 = sub_1BC817B00();
      v44 = sub_1BC6E14D8(v26, v27, &v45);
      a3 = v43;
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v16, v17, "[Transaction] Could not discard failed transaction %s. %{public}s", (uint8_t *)v19, 0x16u);
      v28 = v41;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v28, -1, -1);
      MEMORY[0x1BCCF5BA4](v19, -1, -1);
    }
    else
    {
      swift_release_n();

    }
    v39 = a1;
    a3(a1, 1);

  }
  else
  {
    v41 = v8;
    if (qword_1ED6BB338 != -1)
      swift_once();
    v29 = sub_1BC817590();
    __swift_project_value_buffer(v29, (uint64_t)qword_1ED6BB320);
    swift_retain_n();
    v30 = sub_1BC81756C();
    v31 = sub_1BC817E9C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      v33 = swift_slowAlloc();
      v42 = a4;
      v34 = v33;
      v43 = a3;
      *(_DWORD *)v32 = 136315138;
      v45 = v33;
      v40 = v32 + 4;
      v35 = objc_msgSend(*(id *)(a2 + 16), sel_transactionUUID, v32 + 4);
      sub_1BC816F24();

      v36 = sub_1BC816F00();
      v38 = v37;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v41);
      v44 = sub_1BC6E14D8(v36, v38, &v45);
      a3 = v43;
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v30, v31, "[Transaction] Transaction %s successfully discarded", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v34, -1, -1);
      MEMORY[0x1BCCF5BA4](v32, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    a3(a2, 0);
  }
}

uint64_t sub_1BC79CAF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a4;
  v9[3] = a3;
  v9[4] = sub_1BC77294C;
  v9[5] = v8;
  v10 = (_QWORD *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = sub_1BC79DE98;
  v10[5] = v9;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = sub_1BC79DE98;
  *(_QWORD *)(v11 + 24) = v9;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  sub_1BC6F4C60((uint64_t)sub_1BC79DEFC, (uint64_t)v10, (uint64_t)sub_1BC79D448, v11);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_1BC79CC1C(void *a1, unint64_t a2, uint64_t a3, void (*a4)(unint64_t, _QWORD), uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  id v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(unint64_t, _QWORD);
  uint64_t v53;
  uint64_t v54[2];
  uint64_t v55;

  v10 = sub_1BC816F3C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    if (qword_1ED6BB338 != -1)
      swift_once();
    v30 = sub_1BC817590();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED6BB320);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v31 = sub_1BC81756C();
    v32 = sub_1BC817E6C();
    if (!os_log_type_enabled(v31, (os_log_type_t)v32))
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
LABEL_25:
      a4(a2, 0);
      return;
    }
    LODWORD(v50) = v32;
    v53 = v11;
    v33 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v55 = v49;
    *(_DWORD *)v33 = 134218499;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = sub_1BC8184E4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v34 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v54[0] = v34;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2081;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v35 = sub_1BC8184E4();
      v51 = a5;
      v52 = a4;
      if (v35)
        goto LABEL_15;
    }
    else
    {
      v35 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v51 = a5;
      v52 = a4;
      if (v35)
      {
LABEL_15:
        if ((a2 & 0xC000000000000001) != 0)
        {
          v36 = (id)MEMORY[0x1BCCF4FB0](0, a2);
        }
        else
        {
          if (!*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          v36 = *(id *)(a2 + 32);
        }
        v37 = v36;
        swift_bridgeObjectRelease();
        v38 = objc_msgSend(v37, sel_package);

        v35 = sub_1BC817AE8();
        v40 = v39;

        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
    v40 = 0;
LABEL_24:
    v54[0] = v35;
    v54[1] = v40;
    sub_1BC79DBB0();
    v42 = sub_1BC817AF4();
    v54[0] = sub_1BC6E14D8(v42, v43, &v55);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 22) = 2080;
    v44 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
    sub_1BC816F24();

    sub_1BC6E1788(&qword_1ED6B7C38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v45 = sub_1BC818670();
    v47 = v46;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v10);
    v54[0] = sub_1BC6E14D8(v45, v47, &v55);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v31, (os_log_type_t)v50, "[Transaction] %ld sharable model(s) from %{private}s added to transaction %s", (uint8_t *)v33, 0x20u);
    v48 = v49;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v48, -1, -1);
    MEMORY[0x1BCCF5BA4](v33, -1, -1);

    a4 = v52;
    goto LABEL_25;
  }
  v53 = v11;
  v14 = a1;
  if (qword_1ED6BB338 != -1)
    swift_once();
  v15 = sub_1BC817590();
  __swift_project_value_buffer(v15, (uint64_t)qword_1ED6BB320);
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  v17 = a1;
  v18 = sub_1BC81756C();
  v19 = sub_1BC817E84();
  if (os_log_type_enabled(v18, v19))
  {
    v50 = v10;
    v20 = swift_slowAlloc();
    v49 = swift_slowAlloc();
    v54[0] = v49;
    *(_DWORD *)v20 = 134349570;
    v51 = a5;
    v52 = a4;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v21 = sub_1BC8184E4();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v55 = v21;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    v22 = objc_msgSend(*(id *)(a3 + 16), sel_transactionUUID);
    sub_1BC816F24();

    v23 = sub_1BC816F00();
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v50);
    v55 = sub_1BC6E14D8(v23, v25, v54);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 22) = 2082;
    v55 = (uint64_t)a1;
    v26 = a1;
    sub_1BC6E1878();
    v27 = sub_1BC817B00();
    v55 = sub_1BC6E14D8(v27, v28, v54);
    sub_1BC818148();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC6DD000, v18, v19, "[Transaction] Could not add %{public}ld summaries to transaction %s. %{public}s", (uint8_t *)v20, 0x20u);
    v29 = v49;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v29, -1, -1);
    MEMORY[0x1BCCF5BA4](v20, -1, -1);

    a4 = v52;
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();

  }
  v41 = a1;
  a4((unint64_t)a1, 1);

}

uint64_t sub_1BC79D344@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC7992E4(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BC79D34C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC79D7BC(255, a2, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, a3);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC79D398()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC79D3C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1BC799C20(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1BC79D3D0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC79D3F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC79A730(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BC79D3FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC79B244(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BC79D404()
{
  return swift_deallocObject();
}

uint64_t sub_1BC79D414@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC79BB3C(a1, *(_BYTE *)(v2 + 16), a2);
}

uint64_t sub_1BC79D41C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC79C520(a1, a2, v2);
}

uint64_t sub_1BC79D424()
{
  return objectdestroy_26Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1BC79D430(void *a1)
{
  uint64_t v1;

  sub_1BC79C62C(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BC79D43C()
{
  return objectdestroy_26Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BC79D448(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC6F7C38(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1BC79D450()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC79D474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC79BC38(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_1BC79D480()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC79D4AC(void *a1, char a2)
{
  uint64_t v2;

  sub_1BC79BD50(a1, a2 & 1, *(unsigned __int8 *)(v2 + 16), *(void (**)(_QWORD, _QWORD))(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
}

uint64_t sub_1BC79D4C0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC79D4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC79B348(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC79D4F8()
{
  return objectdestroy_5Tm_3((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1BC79D508(void *a1)
{
  uint64_t v1;

  sub_1BC79B46C(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BC79D514()
{
  return objectdestroy_61Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BC79D528()
{
  return objectdestroy_26Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_26Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_1BC79D56C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BC79A83C(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1BC79D578()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC79D5AC(uint64_t a1)
{
  uint64_t v1;

  sub_1BC79A96C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(void (**)(_QWORD, _QWORD))(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t sub_1BC79D5BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC79D5F0()
{
  return objectdestroy_5Tm_3((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BC79D604(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BC799D40(a1, a2, v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1BC79D610()
{
  return objectdestroy_5Tm_3((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_5Tm_3(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 32));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC79D664(uint64_t a1)
{
  uint64_t v1;

  sub_1BC799E78(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD, _QWORD))(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BC79D670()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC79D6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC79938C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC79D6B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC79D6DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1BC79D6F0(void *a1)
{
  uint64_t v1;

  sub_1BC7994B0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BC79D6FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

void sub_1BC79D710()
{
  uint64_t *v0;

  sub_1BC6F21BC(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1BC79D71C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B8388)
  {
    v0 = MEMORY[0x1E0C960D8];
    sub_1BC79D7BC(255, &qword_1ED6B8350, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC79D82C(&qword_1ED6B8348, &qword_1ED6B8350, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C96108]);
    v1 = sub_1BC817830();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B8388);
  }
}

void sub_1BC79D7BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = sub_1BC6E1878();
    v9 = a4(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC79D82C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC79D7BC(255, a2, (uint64_t (*)(uint64_t))sub_1BC79756C, a3);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC79D87C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BC7980A0(v1[2], v1[3], v1[4], v1[5], v1[6], a1);
}

uint64_t objectdestroy_115Tm()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC79D8CC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1BC798174(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_1BC79D8DC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC79D920(void *a1, char a2)
{
  uint64_t v2;

  sub_1BC798280(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(void (**)(void *, uint64_t))(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

uint64_t sub_1BC79D954(unint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  void *v18;
  id v20;
  unint64_t v21;
  uint64_t v23;

  v4 = v3;
  v23 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_24;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      v8 = 0;
      v21 = a3 & 0xC000000000000001;
      v20 = v4;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v9 = (id)MEMORY[0x1BCCF4FB0](v8, a1);
LABEL_9:
        v10 = v9;
        v11 = v8 + 1;
        if (__OFADD__(v8, 1))
          goto LABEL_23;
        if (a2)
        {
          v4 = objc_msgSend(v9, sel_name);
          v12 = sub_1BC817AE8();
          v14 = v13;

          v15 = sub_1BC7C9F44(v12, v14, a2);
          swift_bridgeObjectRelease();
          if (v21)
            goto LABEL_12;
        }
        else
        {
          v15 = 1;
          if (v21)
          {
LABEL_12:
            if (!sub_1BC8181FC())
              goto LABEL_18;
            goto LABEL_13;
          }
        }
        if (!*(_QWORD *)(a3 + 16))
        {
LABEL_18:
          if ((v15 & 1) != 0)
            goto LABEL_19;
          goto LABEL_4;
        }
LABEL_13:
        v16 = objc_msgSend(v10, sel_objectTypes, v20);
        sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1D0);
        sub_1BC74E298();
        v17 = sub_1BC817D7C();

        sub_1BC7CA6D4(a3, v17);
        v4 = v18;
        swift_bridgeObjectRelease();
        if ((v15 & 1) != 0 && (v4 & 1) != 0)
        {
LABEL_19:
          sub_1BC818358();
          v4 = *(id *)(v23 + 16);
          sub_1BC818388();
          sub_1BC818394();
          sub_1BC818364();
          goto LABEL_5;
        }
LABEL_4:

LABEL_5:
        ++v8;
        if (v11 == v7)
          return v23;
      }
      if (v8 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      v7 = sub_1BC8184E4();
      if (!v7)
        return MEMORY[0x1E0DEE9D8];
    }
    v9 = *(id *)(a1 + 8 * v8 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BC79DBA4(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_1BC79DBB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BAC70)
  {
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BAC70);
  }
}

void sub_1BC79DC04()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8450)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB1D0);
    sub_1BC74E298();
    v0 = sub_1BC817DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8450);
  }
}

uint64_t sub_1BC79DC74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(void);
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a2;
  *(_QWORD *)(v4 + 24) = a1;
  v5 = MEMORY[0x1E0C960D8];
  sub_1BC79D7BC(0, &qword_1ED6B8350, (uint64_t (*)(uint64_t))sub_1BC79756C, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BC81780C();
  sub_1BC79D82C(&qword_1ED6B8348, &qword_1ED6B8350, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v5, MEMORY[0x1E0C96108]);
  v6 = sub_1BC817854();
  swift_release();
  return v6;
}

id sub_1BC79DD74(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1BC79DD80(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC6ECA64(255, &qword_1ED6B83E8, (uint64_t (*)(uint64_t))type metadata accessor for PluginSharableModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v7 = v6;
    v8 = sub_1BC6E1878();
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC79DE08(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC79DD80(255, a2, a3);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC79DE48()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC79DE6C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC79DE7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC79CAF8(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC79DE84()
{
  return objectdestroy_61Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08], (void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1BC79DE98(void *a1)
{
  uint64_t v1;

  sub_1BC79CC1C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(unint64_t, _QWORD))(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BC79DEA4()
{
  return objectdestroy_61Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30], (void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_61Tm(void (*a1)(_QWORD), void (*a2)(_QWORD))
{
  uint64_t v2;

  a1(*(_QWORD *)(v2 + 16));
  a2(*(_QWORD *)(v2 + 24));
  swift_release();
  return swift_deallocObject();
}

void sub_1BC79DEFC()
{
  uint64_t *v0;

  sub_1BC6F10F4(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1BC79DF48(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  _QWORD *v17;
  id v18[7];

  v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1BC8181C0();
    sub_1BC7A5CBC();
    sub_1BC6E1788(&qword_1ED6BA4B8, (uint64_t (*)(uint64_t))sub_1BC7A5CBC, MEMORY[0x1E0DEFCF8]);
    sub_1BC817DB8();
    v2 = (unint64_t)v18[2];
    v17 = v18[3];
    v3 = (uint64_t)v18[4];
    v4 = v18[5];
    v5 = (unint64_t)v18[6];
  }
  else
  {
    v4 = 0;
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = (_QWORD *)(a1 + 56);
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | ((_QWORD)v4 << 6);
      v12 = (char *)v4;
      goto LABEL_29;
    }
    v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_32;
    v15 = v17[v14];
    v12 = (char *)v4 + 1;
    if (!v15)
    {
      v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9)
        goto LABEL_32;
      v15 = v17[(_QWORD)v12];
      if (!v15)
      {
        v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9)
          goto LABEL_32;
        v15 = v17[(_QWORD)v12];
        if (!v15)
        {
          v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9)
            goto LABEL_32;
          v15 = v17[(_QWORD)v12];
          if (!v15)
          {
            v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9)
              goto LABEL_32;
            v15 = v17[(_QWORD)v12];
            if (!v15)
            {
              v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                v15 = v17[(_QWORD)v16++];
                if (v15)
                {
                  v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1BC6ECC4C();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + ((_QWORD)v12 << 6);
LABEL_29:
    v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_32;
    while (1)
    {
      sub_1BC727678(v18, v13);

      v4 = v12;
      v5 = v10;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1BC81822C())
      {
        sub_1BC7A5CBC();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v18[0];
        swift_unknownObjectRelease();
        v12 = (char *)v4;
        v10 = v5;
        if (v13)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

void sub_1BC79E1DC(uint64_t a1, void *a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  id v14[2];

  v3 = 0;
  v14[1] = a2;
  v4 = a1 + 56;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    sub_1BC727EFC(v14, *(id *)(*(_QWORD *)(a1 + 48) + 8 * v10));

  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1BC79E344(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = result;
  v3 = 0;
  v18 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BC726514(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1BC79E4C0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  uint64_t v15;

  v2 = result;
  v3 = 0;
  v15 = a2;
  v4 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(result + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      v3 = v11 + 1;
      if (v11 + 1 >= v8)
        goto LABEL_23;
      v12 = *(_QWORD *)(v4 + 8 * v3);
      if (!v12)
      {
        v3 = v11 + 2;
        if (v11 + 2 >= v8)
          goto LABEL_23;
        v12 = *(_QWORD *)(v4 + 8 * v3);
        if (!v12)
        {
          v3 = v11 + 3;
          if (v11 + 3 >= v8)
            goto LABEL_23;
          v12 = *(_QWORD *)(v4 + 8 * v3);
          if (!v12)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    result = sub_1BC72969C(&v14, *(_BYTE *)(*(_QWORD *)(v2 + 48) + v10));
  }
  v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  v12 = *(_QWORD *)(v4 + 8 * v13);
  if (v12)
  {
    v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v12 = *(_QWORD *)(v4 + 8 * v3);
    ++v13;
    if (v12)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t PluginIdentifierSet.description.getter(uint64_t a1)
{
  if (a1)
    return sub_1BC817D88();
  else
    return 7105633;
}

uint64_t PluginIdentifierSet.union(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = 0;
  if (a2)
  {
    if (a1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return sub_1BC79E344(a1, a2);
    }
  }
  return result;
}

uint64_t static PluginIdentifierSet.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (a1 && a2)
    return sub_1BC7047E8(a1, a2);
  else
    return (a1 | a2) == 0;
}

uint64_t sub_1BC79E6B8()
{
  sub_1BC79EB4C();
  return sub_1BC8187FC();
}

uint64_t sub_1BC79E6E0()
{
  sub_1BC79EB4C();
  return sub_1BC818808();
}

uint64_t sub_1BC79E708()
{
  _BYTE *v0;

  if (*v0)
    return 0x696669746E656469;
  else
    return 7105633;
}

uint64_t sub_1BC79E744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7A3924(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC79E768()
{
  sub_1BC79EB90();
  return sub_1BC8187FC();
}

uint64_t sub_1BC79E790()
{
  sub_1BC79EB90();
  return sub_1BC818808();
}

uint64_t sub_1BC79E7B8()
{
  return 12383;
}

uint64_t sub_1BC79E7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BC818694();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BC79E840()
{
  sub_1BC79EB08();
  return sub_1BC8187FC();
}

uint64_t sub_1BC79E868()
{
  sub_1BC79EB08();
  return sub_1BC818808();
}

uint64_t PluginIdentifierSet.encode(to:)(_QWORD *a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v23 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC788E10(0, &qword_1EF45C358, (uint64_t (*)(void))sub_1BC79EB08, (uint64_t)&type metadata for PluginIdentifierSet.IdentifiersCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v21 = *(_QWORD *)(v4 - 8);
  v22 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - v5;
  sub_1BC788E10(0, &qword_1EF45C368, (uint64_t (*)(void))sub_1BC79EB4C, (uint64_t)&type metadata for PluginIdentifierSet.AllCodingKeys, v3);
  v19 = *(_QWORD *)(v7 - 8);
  v20 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  sub_1BC788E10(0, &qword_1EF45C378, (uint64_t (*)(void))sub_1BC79EB90, (uint64_t)&type metadata for PluginIdentifierSet.CodingKeys, v3);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC79EB90();
  v15 = v23;
  sub_1BC8187F0();
  if (v15)
  {
    v26 = 1;
    sub_1BC79EB08();
    sub_1BC8185EC();
    v24 = v15;
    sub_1BC714F04();
    sub_1BC7A5C60(&qword_1EF45C388, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    v16 = v22;
    sub_1BC818634();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v16);
  }
  else
  {
    v25 = 0;
    sub_1BC79EB4C();
    sub_1BC8185EC();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v20);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_1BC79EB08()
{
  unint64_t result;

  result = qword_1EF45C360;
  if (!qword_1EF45C360)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FDA8, &type metadata for PluginIdentifierSet.IdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C360);
  }
  return result;
}

unint64_t sub_1BC79EB4C()
{
  unint64_t result;

  result = qword_1EF45C370;
  if (!qword_1EF45C370)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FD58, &type metadata for PluginIdentifierSet.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C370);
  }
  return result;
}

unint64_t sub_1BC79EB90()
{
  unint64_t result;

  result = qword_1EF45C380;
  if (!qword_1EF45C380)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FD08, &type metadata for PluginIdentifierSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C380);
  }
  return result;
}

_QWORD *PluginIdentifierSet.init(from:)(_QWORD *a1)
{
  return sub_1BC7A3A1C(a1);
}

uint64_t sub_1BC79EBE8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = *a1;
  v3 = *a2;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    return (v2 | v3) == 0;
  else
    return sub_1BC7047E8(v2, v3);
}

_QWORD *sub_1BC79EC14@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BC7A3A1C(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BC79EC3C(_QWORD *a1)
{
  uint64_t *v1;

  return PluginIdentifierSet.encode(to:)(a1, *v1);
}

uint64_t sub_1BC79EC54()
{
  _QWORD *v0;

  if (*v0)
    return sub_1BC817D88();
  else
    return 7105633;
}

BOOL static GenerationPhase.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GenerationPhase.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t sub_1BC79ECD4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6D65744964656566;
  else
    return 0x656C626172616873;
}

uint64_t sub_1BC79ED20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7A5770(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC79ED44()
{
  sub_1BC7A3EB0();
  return sub_1BC8187FC();
}

uint64_t sub_1BC79ED6C()
{
  sub_1BC7A3EB0();
  return sub_1BC818808();
}

uint64_t sub_1BC79ED94()
{
  sub_1BC7A3E28();
  return sub_1BC8187FC();
}

uint64_t sub_1BC79EDBC()
{
  sub_1BC7A3E28();
  return sub_1BC818808();
}

uint64_t sub_1BC79EDE4()
{
  sub_1BC7A3E6C();
  return sub_1BC8187FC();
}

uint64_t sub_1BC79EE0C()
{
  sub_1BC7A3E6C();
  return sub_1BC818808();
}

void *static GenerationPhase.allCases.getter()
{
  return &unk_1E75164B8;
}

uint64_t GenerationPhase.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC788E10(0, &qword_1EF45C390, (uint64_t (*)(void))sub_1BC7A3E28, (uint64_t)&type metadata for GenerationPhase.FeedItemsCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v20 = *(_QWORD *)(v4 - 8);
  v21 = v4;
  MEMORY[0x1E0C80A78](v4);
  v19 = (char *)&v16 - v5;
  sub_1BC788E10(0, &qword_1EF45C3A0, (uint64_t (*)(void))sub_1BC7A3E6C, (uint64_t)&type metadata for GenerationPhase.SharableModelsCodingKeys, v3);
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - v7;
  sub_1BC788E10(0, &qword_1EF45C3B0, (uint64_t (*)(void))sub_1BC7A3EB0, (uint64_t)&type metadata for GenerationPhase.CodingKeys, v3);
  v10 = v9;
  v22 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - v11;
  v13 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7A3EB0();
  sub_1BC8187F0();
  if ((v13 & 1) != 0)
  {
    v24 = 1;
    sub_1BC7A3E28();
    v14 = v19;
    sub_1BC8185EC();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v21);
  }
  else
  {
    v23 = 0;
    sub_1BC7A3E6C();
    sub_1BC8185EC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v12, v10);
}

uint64_t GenerationPhase.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _BYTE *v34;
  uint64_t v35;
  char v36;
  char v37;

  v34 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC788E10(0, &qword_1EF45C3C0, (uint64_t (*)(void))sub_1BC7A3E28, (uint64_t)&type metadata for GenerationPhase.FeedItemsCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v32 = v4;
  v29 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - v5;
  sub_1BC788E10(0, &qword_1EF45C3C8, (uint64_t (*)(void))sub_1BC7A3E6C, (uint64_t)&type metadata for GenerationPhase.SharableModelsCodingKeys, v3);
  v30 = *(_QWORD *)(v6 - 8);
  v31 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  sub_1BC788E10(0, &qword_1EF45C3D0, (uint64_t (*)(void))sub_1BC7A3EB0, (uint64_t)&type metadata for GenerationPhase.CodingKeys, v3);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v28 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7A3EB0();
  v14 = v35;
  sub_1BC8187E4();
  if (v14)
    goto LABEL_6;
  v35 = v11;
  v15 = v33;
  v16 = v34;
  v28 = a1;
  v17 = v13;
  v18 = sub_1BC8185D4();
  v19 = v10;
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v22 = sub_1BC818334();
    swift_allocError();
    v24 = v23;
    sub_1BC7A3EF4();
    *v24 = &type metadata for GenerationPhase;
    sub_1BC818580();
    sub_1BC81831C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    a1 = v28;
LABEL_6:
    v25 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v25);
  }
  v20 = *(_BYTE *)(v18 + 32);
  if ((v20 & 1) != 0)
  {
    v37 = 1;
    sub_1BC7A3E28();
    sub_1BC818574();
    v21 = v35;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v15, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v19);
  }
  else
  {
    v36 = 0;
    sub_1BC7A3E6C();
    sub_1BC818574();
    v27 = v35;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v19);
  }
  *v16 = v20;
  v25 = (uint64_t)v28;
  return __swift_destroy_boxed_opaque_existential_0(v25);
}

void sub_1BC79F3DC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E75164E0;
}

uint64_t sub_1BC79F3EC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return GenerationPhase.init(from:)(a1, a2);
}

uint64_t sub_1BC79F400(_QWORD *a1)
{
  return GenerationPhase.encode(to:)(a1);
}

uint64_t BackgroundGenerationWorkDescription.pluginIdentifierSetToRun.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BackgroundGenerationWorkDescription.pluginIdentifierSetToRun.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*BackgroundGenerationWorkDescription.pluginIdentifierSetToRun.modify())()
{
  return nullsub_1;
}

uint64_t BackgroundGenerationWorkDescription.generationPhases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t BackgroundGenerationWorkDescription.generationPhases.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*BackgroundGenerationWorkDescription.generationPhases.modify())()
{
  return nullsub_1;
}

uint64_t BackgroundGenerationWorkDescription.commitUrgentTransaction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t BackgroundGenerationWorkDescription.commitUrgentTransaction.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*BackgroundGenerationWorkDescription.commitUrgentTransaction.modify())()
{
  return nullsub_1;
}

unint64_t sub_1BC79F4B4(char a1)
{
  if (!a1)
    return 0xD000000000000018;
  if (a1 == 1)
    return 0xD000000000000010;
  return 0xD000000000000017;
}

unint64_t sub_1BC79F510()
{
  char *v0;

  return sub_1BC79F4B4(*v0);
}

uint64_t sub_1BC79F518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7A5890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC79F53C()
{
  sub_1BC7A3F9C();
  return sub_1BC8187FC();
}

uint64_t sub_1BC79F564()
{
  sub_1BC7A3F9C();
  return sub_1BC818808();
}

uint64_t BackgroundGenerationWorkDescription.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1BC788E10(0, &qword_1EF45C3E0, (uint64_t (*)(void))sub_1BC7A3F9C, (uint64_t)&type metadata for BackgroundGenerationWorkDescription.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v11 - v6;
  v8 = *v1;
  v12 = v1[1];
  v11[1] = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7A3F9C();
  sub_1BC8187F0();
  v15 = v8;
  v14 = 0;
  sub_1BC7A3FE0();
  v9 = v13;
  sub_1BC818634();
  if (!v9)
  {
    v15 = v12;
    v14 = 1;
    sub_1BC788E10(0, &qword_1EF45C3F8, (uint64_t (*)(void))sub_1BC73201C, (uint64_t)&type metadata for GenerationPhase, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BC7A40AC(&qword_1EF45C400, (uint64_t (*)(void))sub_1BC7A4024, MEMORY[0x1E0DEB3B8]);
    sub_1BC818634();
    LOBYTE(v15) = 2;
    sub_1BC818610();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BackgroundGenerationWorkDescription.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;

  sub_1BC788E10(0, &qword_1EF45C410, (uint64_t (*)(void))sub_1BC7A3F9C, (uint64_t)&type metadata for BackgroundGenerationWorkDescription.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v19 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7A3F9C();
  sub_1BC8187E4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v9 = v6;
  v20 = 0;
  sub_1BC7A4068();
  v10 = v19;
  sub_1BC8185C8();
  v11 = v21;
  sub_1BC788E10(0, &qword_1EF45C3F8, (uint64_t (*)(void))sub_1BC73201C, (uint64_t)&type metadata for GenerationPhase, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
  v20 = 1;
  sub_1BC7A40AC(&qword_1EF45C420, (uint64_t (*)(void))sub_1BC7A4130, MEMORY[0x1E0DEB3D8]);
  swift_bridgeObjectRetain();
  sub_1BC8185C8();
  v12 = v21;
  LOBYTE(v21) = 2;
  v18 = v12;
  swift_bridgeObjectRetain();
  v13 = sub_1BC8185A4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v14 = v13 & 1;
  v15 = v18;
  *(_QWORD *)a2 = v11;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v14;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC79FA04@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return BackgroundGenerationWorkDescription.init(from:)(a1, a2);
}

uint64_t sub_1BC79FA18(_QWORD *a1)
{
  return BackgroundGenerationWorkDescription.encode(to:)(a1);
}

uint64_t GenerationWorkRequest.environment.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t GenerationWorkRequest.environment.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t (*GenerationWorkRequest.environment.modify())()
{
  return nullsub_1;
}

uint64_t GenerationWorkRequest.pluginIdentifierSetToRun.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerationWorkRequest.pluginIdentifierSetToRun.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*GenerationWorkRequest.pluginIdentifierSetToRun.modify())()
{
  return nullsub_1;
}

uint64_t GenerationWorkRequest.generationPhases.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t GenerationWorkRequest.generationPhases.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*GenerationWorkRequest.generationPhases.modify())()
{
  return nullsub_1;
}

uint64_t GenerationWorkRequest.commitUrgentTransaction.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t GenerationWorkRequest.commitUrgentTransaction.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*GenerationWorkRequest.commitUrgentTransaction.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC79FAF0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = sub_1BC7A59F0;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

uint64_t GenerationWorkRequest.makeGenerationWorkBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t GenerationWorkRequest.makeGenerationWorkBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*GenerationWorkRequest.makeGenerationWorkBlock.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC79FBC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 48) = sub_1BC75BF20;
  *(_QWORD *)(a2 + 56) = v5;
  return result;
}

uint64_t GenerationWorkRequest.completionBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t GenerationWorkRequest.completionBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*GenerationWorkRequest.completionBlock.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC79FC98(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 64) = sub_1BC6EF990;
  *(_QWORD *)(a2 + 72) = v5;
  return result;
}

uint64_t GenerationWorkRequest.notStartedCancellationBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  return v1;
}

uint64_t GenerationWorkRequest.notStartedCancellationBlock.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*GenerationWorkRequest.notStartedCancellationBlock.modify())()
{
  return nullsub_1;
}

uint64_t GenerationWorkRequest.init(environment:pluginIdentifierSetToRun:generationPhases:commitUrgentTransaction:makeGenerationWorkBlock:completionBlock:notStartedCancellationBlock:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  *(_BYTE *)a9 = result & 1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_BYTE *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  return result;
}

uint64_t sub_1BC79FD90(uint64_t a1, uint64_t a2, char a3)
{
  int v4;
  uint64_t ObjectType;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t result;

  v4 = a3 & 1;
  ObjectType = swift_getObjectType();
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  result = v6(ObjectType, a2);
  if (v4 != (result & 1))
  {
    sub_1BC8182C8();
    sub_1BC817B48();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    v6(ObjectType, a2);
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

double sub_1BC79FF48@<D0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  __int128 v66;
  double result;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70[3];
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;

  v5 = a1[3];
  v83 = a1[2];
  v84 = v5;
  v85 = a1[4];
  v6 = a1[1];
  v81 = *a1;
  v82 = v6;
  v7 = v2[1];
  v8 = v2[3];
  v78 = v2[2];
  v79 = v8;
  v9 = v2[3];
  v80 = v2[4];
  v10 = v2[1];
  v76 = *v2;
  v77 = v10;
  v73 = v78;
  v74 = v9;
  v75 = v2[4];
  v71 = v76;
  v72 = v7;
  v11 = (_OWORD *)swift_allocObject();
  v12 = v2[3];
  v11[3] = v2[2];
  v11[4] = v12;
  v13 = v2[1];
  v11[1] = *v2;
  v11[2] = v13;
  v14 = a1[2];
  v15 = a1[3];
  v16 = *a1;
  v11[7] = a1[1];
  v11[8] = v14;
  v17 = a1[4];
  v11[9] = v15;
  v11[10] = v17;
  v11[5] = v2[4];
  v11[6] = v16;
  *(_QWORD *)&v74 = sub_1BC7A5ACC;
  *((_QWORD *)&v74 + 1) = v11;
  sub_1BC7A5AF8((uint64_t)&v76);
  sub_1BC7A5AF8((uint64_t)&v76);
  sub_1BC7A5AF8((uint64_t)&v81);
  swift_release();
  v18 = (_OWORD *)swift_allocObject();
  v19 = v79;
  v18[3] = v78;
  v18[4] = v19;
  v20 = v77;
  v18[1] = v76;
  v18[2] = v20;
  v21 = v83;
  v22 = v84;
  v23 = v81;
  v18[7] = v82;
  v18[8] = v21;
  v24 = v85;
  v18[9] = v22;
  v18[10] = v24;
  v18[5] = v80;
  v18[6] = v23;
  *(_QWORD *)&v75 = sub_1BC7A5BD0;
  *((_QWORD *)&v75 + 1) = v18;
  sub_1BC7A5AF8((uint64_t)&v76);
  sub_1BC7A5AF8((uint64_t)&v81);
  swift_release();
  v25 = 0;
  v26 = *((_QWORD *)&v76 + 1);
  v27 = *((_QWORD *)&v81 + 1);
  if (*((_QWORD *)&v76 + 1) && *((_QWORD *)&v81 + 1))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25 = sub_1BC79E344(v27, v26);
  }
  swift_bridgeObjectRelease();
  *((_QWORD *)&v71 + 1) = v25;
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v28 = sub_1BC817590();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED6BB228);
  sub_1BC7A5AF8((uint64_t)&v76);
  sub_1BC7A5AF8((uint64_t)&v81);
  sub_1BC7A5AF8((uint64_t)&v76);
  sub_1BC7A5AF8((uint64_t)&v81);
  v29 = sub_1BC81756C();
  v30 = sub_1BC817E9C();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = swift_slowAlloc();
    v32 = swift_slowAlloc();
    v70[0] = v32;
    *(_DWORD *)v31 = 136446978;
    sub_1BC6E14D8(0xD000000000000015, 0x80000001BC81F6C0, v70);
    sub_1BC818148();
    *(_WORD *)(v31 + 12) = 2082;
    if (v26)
    {
      swift_bridgeObjectRetain();
      v33 = sub_1BC817D88();
      v35 = v34;
      swift_bridgeObjectRelease();
    }
    else
    {
      v35 = 0xE300000000000000;
      v33 = 7105633;
    }
    sub_1BC6E14D8(v33, v35, v70);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    sub_1BC7A5BFC((uint64_t)&v76);
    sub_1BC7A5BFC((uint64_t)&v76);
    *(_WORD *)(v31 + 22) = 2082;
    if (v27)
    {
      swift_bridgeObjectRetain();
      v36 = sub_1BC817D88();
      v38 = v37;
      swift_bridgeObjectRelease();
    }
    else
    {
      v38 = 0xE300000000000000;
      v36 = 7105633;
    }
    sub_1BC6E14D8(v36, v38, v70);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    sub_1BC7A5BFC((uint64_t)&v81);
    sub_1BC7A5BFC((uint64_t)&v81);
    *(_WORD *)(v31 + 32) = 2082;
    swift_beginAccess();
    if (*((_QWORD *)&v71 + 1))
    {
      swift_bridgeObjectRetain();
      v39 = sub_1BC817D88();
      v41 = v40;
      swift_bridgeObjectRelease();
    }
    else
    {
      v41 = 0xE300000000000000;
      v39 = 7105633;
    }
    v69 = sub_1BC6E14D8(v39, v41, v70);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v29, v30, "[%{public}s] Coalesced pluginIdentifierSetToRun %{public}s and %{public}s into %{public}s", (uint8_t *)v31, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v32, -1, -1);
    MEMORY[0x1BCCF5BA4](v31, -1, -1);

  }
  else
  {
    sub_1BC7A5BFC((uint64_t)&v76);
    sub_1BC7A5BFC((uint64_t)&v76);
    sub_1BC7A5BFC((uint64_t)&v81);
    sub_1BC7A5BFC((uint64_t)&v81);

  }
  v42 = BYTE8(v77) | BYTE8(v82);
  swift_beginAccess();
  BYTE8(v72) = v42 & 1;
  sub_1BC7A5AF8((uint64_t)&v76);
  sub_1BC7A5AF8((uint64_t)&v81);
  v43 = sub_1BC81756C();
  v44 = sub_1BC817E9C();
  if (os_log_type_enabled(v43, v44))
  {
    v45 = swift_slowAlloc();
    v46 = swift_slowAlloc();
    v69 = v46;
    *(_DWORD *)v45 = 136446978;
    sub_1BC6E14D8(0xD000000000000015, 0x80000001BC81F6C0, &v69);
    sub_1BC818148();
    *(_WORD *)(v45 + 12) = 1026;
    sub_1BC818148();
    sub_1BC7A5BFC((uint64_t)&v76);
    *(_WORD *)(v45 + 18) = 1026;
    sub_1BC818148();
    sub_1BC7A5BFC((uint64_t)&v81);
    *(_WORD *)(v45 + 24) = 1026;
    sub_1BC818148();
    _os_log_impl(&dword_1BC6DD000, v43, v44, "[%{public}s] Coalesced commitUrgentTransaction %{BOOL,public}d and %{BOOL,public}d into %{BOOL,public}d", (uint8_t *)v45, 0x1Eu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v46, -1, -1);
    MEMORY[0x1BCCF5BA4](v45, -1, -1);
  }
  else
  {
    sub_1BC7A5BFC((uint64_t)&v76);
    sub_1BC7A5BFC((uint64_t)&v81);
  }

  v47 = v77;
  swift_bridgeObjectRetain();
  v48 = swift_bridgeObjectRetain();
  *(_QWORD *)&v72 = sub_1BC79E4C0(v48, v47);
  swift_bridgeObjectRelease();
  sub_1BC7A5AF8((uint64_t)&v76);
  sub_1BC7A5AF8((uint64_t)&v81);
  sub_1BC7A5AF8((uint64_t)&v76);
  sub_1BC7A5AF8((uint64_t)&v81);
  v49 = sub_1BC81756C();
  v50 = sub_1BC817E9C();
  if (os_log_type_enabled(v49, v50))
  {
    v51 = swift_slowAlloc();
    v68 = swift_slowAlloc();
    v69 = v68;
    *(_DWORD *)v51 = 136446978;
    sub_1BC6E14D8(0xD000000000000015, 0x80000001BC81F6C0, &v69);
    sub_1BC818148();
    *(_WORD *)(v51 + 12) = 2082;
    sub_1BC73201C();
    swift_bridgeObjectRetain();
    v52 = a2;
    v53 = sub_1BC817D88();
    v55 = v54;
    swift_bridgeObjectRelease();
    v56 = v53;
    a2 = v52;
    sub_1BC6E14D8(v56, v55, &v69);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    sub_1BC7A5BFC((uint64_t)&v76);
    sub_1BC7A5BFC((uint64_t)&v76);
    *(_WORD *)(v51 + 22) = 2082;
    swift_bridgeObjectRetain();
    v57 = sub_1BC817D88();
    v59 = v58;
    swift_bridgeObjectRelease();
    sub_1BC6E14D8(v57, v59, &v69);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    sub_1BC7A5BFC((uint64_t)&v81);
    sub_1BC7A5BFC((uint64_t)&v81);
    *(_WORD *)(v51 + 32) = 2082;
    swift_bridgeObjectRetain();
    v60 = sub_1BC817D88();
    v62 = v61;
    swift_bridgeObjectRelease();
    sub_1BC6E14D8(v60, v62, &v69);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v49, v50, "[%{public}s] Coalesced generationPhases %{public}s and %{public}s into %{public}s", (uint8_t *)v51, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v68, -1, -1);
    MEMORY[0x1BCCF5BA4](v51, -1, -1);
  }
  else
  {
    sub_1BC7A5BFC((uint64_t)&v76);
    sub_1BC7A5BFC((uint64_t)&v76);
    sub_1BC7A5BFC((uint64_t)&v81);
    sub_1BC7A5BFC((uint64_t)&v81);
  }

  v63 = *((_QWORD *)&v71 + 1);
  v64 = v72;
  v65 = BYTE8(v72);
  *(_BYTE *)a2 = v71;
  *(_QWORD *)(a2 + 8) = v63;
  *(_QWORD *)(a2 + 16) = v64;
  *(_BYTE *)(a2 + 24) = v65;
  v66 = v74;
  *(_OWORD *)(a2 + 32) = v73;
  *(_OWORD *)(a2 + 48) = v66;
  result = *(double *)&v75;
  *(_OWORD *)(a2 + 64) = v75;
  return result;
}

BOOL static GenerationQueue.EnqueueResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return ((v3 ^ v2) & 1) == 0;
}

BOOL sub_1BC7A094C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 2)
    return v3 == 2;
  if (v2 == 3)
    return v3 == 3;
  if ((v3 & 0xFE) == 2)
    return 0;
  return ((v3 ^ v2) & 1) == 0;
}

void sub_1BC7A09A4(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  void *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_unfair_lock_s *v16;

  v3 = v1[16];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v3 + 16));
  v4 = (void *)v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  v9 = v1[9];
  v10 = v1[10];
  v11 = v1[11];
  v12 = v1[12];
  v13 = v1[13];
  v14 = v1[14];
  v15 = v1[15];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  v16 = *(os_unfair_lock_s **)(v3 + 16);
  sub_1BC7A4174(v4, v5, v6, v7, v8);
  os_unfair_lock_unlock(v16);
}

uint64_t GenerationQueue.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  GenerationQueue.init()();
  return v0;
}

uint64_t GenerationQueue.init()()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;
  _DWORD *v6;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  v2 = (void *)sub_1BC817AC4();
  objc_msgSend(v1, sel_setName_, v2);

  objc_msgSend(v1, sel_setMaxConcurrentOperationCount_, 1);
  *(_QWORD *)(v0 + 16) = v1;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3828]), sel_init);
  v4 = (void *)sub_1BC817AC4();
  objc_msgSend(v3, sel_setName_, v4);

  objc_msgSend(v3, sel_setMaxConcurrentOperationCount_, 1);
  *(_QWORD *)(v0 + 24) = v3;
  *(_OWORD *)(v0 + 32) = xmmword_1BC81F3A0;
  type metadata accessor for UnfairLock();
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v5 + 16) = v6;
  *v6 = 0;
  *(_QWORD *)(v0 + 128) = v5;
  return v0;
}

uint64_t GenerationQueue.deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1BC7A3554();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));

  sub_1BC7A4268(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_release();
  return v0;
}

uint64_t GenerationQueue.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1BC7A3554();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));

  sub_1BC7A4268(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BC7A0CAC(char *a1@<X0>, char *a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void);
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  unsigned __int8 v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char v22;
  uint64_t v23;
  _OWORD *v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  __n128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __n128 v51;
  uint64_t v52;
  NSObject *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  os_unfair_lock_s *v60;
  os_unfair_lock_s *v61;
  os_unfair_lock_s *v62;
  __n128 v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint8_t *v78;
  uint64_t v79;
  uint8_t *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  id v104;
  id v105;
  uint64_t v106;
  NSObject *v107;
  os_log_type_t v108;
  uint8_t *v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  void *v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  os_log_type_t type;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  id v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  void (*v141)(void);
  void (*v142)(void);
  void (*v143)(void);
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  __int128 v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  void *v152;
  __int128 v154;
  uint64_t v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  uint64_t v162[3];
  char v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unsigned __int8 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;

  v3 = v2;
  v4 = *v2;
  v5 = *a1;
  v149 = *((_QWORD *)a1 + 1);
  v151 = *((_QWORD *)a1 + 2);
  v145 = a1[24];
  v6 = *((_QWORD *)a1 + 6);
  v147 = *((_OWORD *)a1 + 2);
  v7 = *((_QWORD *)a1 + 7);
  v8 = (void (*)(void))*((_QWORD *)a1 + 8);
  v9 = *((_QWORD *)a1 + 9);
  v10 = v2[16];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v10 + 16));
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend(v11, sel_healthAppHiddenOrNotInstalled);

    if ((v13 & 1) != 0)
    {
      if (qword_1ED6BB1F8 != -1)
        swift_once();
      v14 = sub_1BC817590();
      __swift_project_value_buffer(v14, (uint64_t)qword_1ED6BB228);
      v15 = sub_1BC81756C();
      v16 = sub_1BC817E9C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v18 = swift_slowAlloc();
        v162[0] = v18;
        *(_DWORD *)v17 = 136315138;
        v170 = v4;
        swift_getMetatypeMetadata();
        v19 = sub_1BC817AF4();
        v170 = sub_1BC6E14D8(v19, v20, v162);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v15, v16, "[%s] health is not installed or is hidden, exiting generation immediately", v17, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v18, -1, -1);
        MEMORY[0x1BCCF5BA4](v17, -1, -1);
      }

      v21 = a2;
      v8();
      v22 = 1;
      goto LABEL_57;
    }
    *((_QWORD *)&v140 + 1) = v9;
    v24 = v3 + 6;
    v23 = v3[6];
    v25 = v3[5];
    if (v25 >> 62)
    {
      v138 = v10;
      v139 = v7;
      v144 = v6;
      if (v25 >> 62 == 1)
      {
        *(_QWORD *)&v140 = v8;
        v26 = (void *)v3[4];
        v27 = v3[7];
        v28 = v3[10];
        v29 = v3[11];
        v30 = v3[12];
        v31 = v3[13];
        if ((v5 & 1) == 0)
        {
          v132 = v3[15];
          v133 = v3[14];
          v68 = v3[7];
          v69 = v3[9];
          v129 = v25 & 0x3FFFFFFFFFFFFFFFLL;
          v130 = v3[4];
          if (v3[8])
          {
            v70 = v3[8];
            v71 = v26;
            v128 = v31;
            v135 = v69;
            v72 = v29;
            sub_1BC7A420C(v23, v68, v70);
            if (qword_1ED6BB1F8 != -1)
              swift_once();
            v73 = sub_1BC817590();
            __swift_project_value_buffer(v73, (uint64_t)qword_1ED6BB228);
            v74 = sub_1BC81756C();
            v75 = sub_1BC817E9C();
            if (os_log_type_enabled(v74, v75))
            {
              type = v75;
              v76 = (uint8_t *)swift_slowAlloc();
              v77 = swift_slowAlloc();
              v170 = v77;
              v78 = v76;
              *(_DWORD *)v76 = 136446210;
              v79 = v30;
              v80 = v78;
              v81 = sub_1BC818814();
              v162[0] = sub_1BC6E14D8(v81, v82, &v170);
              sub_1BC818148();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1BC6DD000, v74, type, "[%{public}s] Queue is running background generation, coalescing background generation request with existing enqueued generation request", v80, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1BCCF5BA4](v77, -1, -1);
              MEMORY[0x1BCCF5BA4](v80, -1, -1);

              v83 = *((_QWORD *)&v147 + 1);
              v84 = v147;
              v85 = v151;
              v86 = v145;
            }
            else
            {

              v83 = *((_QWORD *)&v147 + 1);
              v84 = v147;
              v85 = v151;
              v86 = v145;
              v79 = v30;
            }
            LOBYTE(v162[0]) = v23 & 1;
            v162[1] = v68;
            v162[2] = v70;
            v163 = v135 & 1;
            v164 = v28;
            v165 = v72;
            v166 = v79;
            v167 = v128;
            v168 = v133;
            v169 = v132;
            LOBYTE(v154) = 0;
            *((_QWORD *)&v154 + 1) = v149;
            v155 = v85;
            v156 = v86;
            v157 = v84;
            v158 = v83;
            v159 = v144;
            v160 = v139;
            v161 = v140;
            sub_1BC79FF48(&v154, (uint64_t)&v170);
            v115 = v170;
            v116 = v171;
            v117 = v172;
            v118 = v173;
            v119 = v174;
            v120 = v175;
            v121 = v176;
            v122 = (void *)v3[4];
            v123 = v3[5];
            v124 = v3[6];
            v125 = v3[7];
            v126 = v3[8];
            v3[4] = v130;
            v3[5] = v129 | 0x4000000000000000;
            v3[6] = v115;
            v3[7] = v116;
            v3[8] = v117;
            v3[9] = v118;
            *((_OWORD *)v3 + 5) = v119;
            *((_OWORD *)v3 + 6) = v120;
            *((_OWORD *)v3 + 7) = v121;
            sub_1BC7A4268(v122, v123, v124, v125, v126);
            sub_1BC6F07B0(v23, v68, v70);
          }
          else
          {
            v105 = v26;
            sub_1BC7A420C(v23, v27, 0);
            if (qword_1ED6BB1F8 != -1)
              swift_once();
            v106 = sub_1BC817590();
            __swift_project_value_buffer(v106, (uint64_t)qword_1ED6BB228);
            v107 = sub_1BC81756C();
            v108 = sub_1BC817E9C();
            if (os_log_type_enabled(v107, v108))
            {
              v109 = (uint8_t *)swift_slowAlloc();
              v110 = swift_slowAlloc();
              v170 = v110;
              *(_DWORD *)v109 = 136446210;
              v111 = sub_1BC818814();
              v162[0] = sub_1BC6E14D8(v111, v112, &v170);
              sub_1BC818148();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_1BC6DD000, v107, v108, "[%{public}s] Queue is running background generation, enqueuing background generation request", v109, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1BCCF5BA4](v110, -1, -1);
              MEMORY[0x1BCCF5BA4](v109, -1, -1);
            }

            v113 = v147;
            v114 = v145;
            *(_QWORD *)&v147 = v3[4];
            v146 = v3[5];
            v137 = v3[6];
            v136 = v3[7];
            v134 = v3[8];
            v3[4] = v130;
            v3[5] = v129 | 0x4000000000000000;
            v3[6] = 0;
            v3[7] = v149;
            v3[8] = v151;
            v3[9] = v114;
            v3[10] = v113;
            v3[11] = *((_QWORD *)&v147 + 1);
            v3[12] = v144;
            v3[13] = v139;
            *((_OWORD *)v3 + 7) = v140;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1BC7A4268((void *)v147, v146, v137, v136, v134);
          }
          v22 = 3;
          goto LABEL_56;
        }
        v32 = v3[8];
        v131 = v26;
        sub_1BC7A420C(v23, v27, v32);
        sub_1BC6F07B0(v23, v27, v32);

        if (qword_1ED6BB1F8 != -1)
          swift_once();
        v33 = sub_1BC817590();
        __swift_project_value_buffer(v33, (uint64_t)qword_1ED6BB228);
        v34 = sub_1BC81756C();
        v35 = sub_1BC817E9C();
        v24 = v3 + 6;
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          v37 = swift_slowAlloc();
          v170 = v37;
          *(_DWORD *)v36 = 136446210;
          v38 = sub_1BC818814();
          v162[0] = sub_1BC6E14D8(v38, v39, &v170);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC6DD000, v34, v35, "[%{public}s] Queue is running background generation, cancelling and starting foreground generation", v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v37, -1, -1);
          MEMORY[0x1BCCF5BA4](v36, -1, -1);
        }

        v40 = sub_1BC7A3554();
        LOBYTE(v170) = 1;
        v171 = v149;
        v172 = v151;
        v173 = v145;
        v174 = v147;
        *(_QWORD *)&v175 = v144;
        *((_QWORD *)&v175 + 1) = v139;
        v176 = v140;
        v41 = ((uint64_t (*)(uint64_t *, __n128))v147)(&v170, v40);
      }
      else
      {
        if ((v5 & 1) == 0)
        {
          if (qword_1ED6BB1F8 != -1)
            swift_once();
          v95 = sub_1BC817590();
          __swift_project_value_buffer(v95, (uint64_t)qword_1ED6BB228);
          v96 = sub_1BC81756C();
          v97 = sub_1BC817E9C();
          if (os_log_type_enabled(v96, v97))
          {
            v98 = (uint8_t *)swift_slowAlloc();
            v143 = v8;
            v99 = swift_slowAlloc();
            v170 = v99;
            *(_DWORD *)v98 = 136446210;
            v100 = sub_1BC818814();
            v162[0] = sub_1BC6E14D8(v100, v101, &v170);
            sub_1BC818148();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BC6DD000, v96, v97, "[%{public}s] Queue is idle, starting background generation", v98, 0xCu);
            swift_arrayDestroy();
            v102 = v99;
            v8 = v143;
            MEMORY[0x1BCCF5BA4](v102, -1, -1);
            MEMORY[0x1BCCF5BA4](v98, -1, -1);
          }

          LOBYTE(v170) = 0;
          v171 = v149;
          v172 = v151;
          v173 = v145;
          v174 = v147;
          *(_QWORD *)&v175 = v144;
          *((_QWORD *)&v175 + 1) = v7;
          *(_QWORD *)&v176 = v8;
          *((_QWORD *)&v176 + 1) = *((_QWORD *)&v140 + 1);
          v64 = (void *)((uint64_t (*)(uint64_t *))v147)(&v170);
          v65 = v103;
          sub_1BC79FD90((uint64_t)v64, v103, 0);
          v150 = v3[5];
          v152 = (void *)v3[4];
          v66 = v3[7];
          v67 = v3[8];
          v148 = v3[6];
          v3[4] = v64;
          v3[5] = v65 | 0x4000000000000000;
          goto LABEL_45;
        }
        if (qword_1ED6BB1F8 != -1)
          swift_once();
        v52 = sub_1BC817590();
        __swift_project_value_buffer(v52, (uint64_t)qword_1ED6BB228);
        v53 = sub_1BC81756C();
        v54 = sub_1BC817E9C();
        if (os_log_type_enabled(v53, v54))
        {
          v55 = (uint8_t *)swift_slowAlloc();
          v142 = v8;
          v56 = swift_slowAlloc();
          v170 = v56;
          *(_DWORD *)v55 = 136446210;
          v57 = sub_1BC818814();
          v162[0] = sub_1BC6E14D8(v57, v58, &v170);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC6DD000, v53, v54, "[%{public}s] Queue is idle, starting foreground generation", v55, 0xCu);
          swift_arrayDestroy();
          v59 = v56;
          v8 = v142;
          MEMORY[0x1BCCF5BA4](v59, -1, -1);
          MEMORY[0x1BCCF5BA4](v55, -1, -1);
        }

        if (qword_1ED6B7CC0 != -1)
          swift_once();
        v60 = (os_unfair_lock_s *)*((_QWORD *)off_1ED6B7CB0 + 2);
        v61 = v60 + 4;
        v62 = v60 + 6;
        os_unfair_lock_lock(v60 + 6);
        sub_1BC759BE8(v61);
        os_unfair_lock_unlock(v62);
        LOBYTE(v170) = 1;
        v171 = v149;
        v172 = v151;
        v173 = v145;
        v174 = v147;
        *(_QWORD *)&v175 = v144;
        *((_QWORD *)&v175 + 1) = v7;
        *(_QWORD *)&v176 = v8;
        *((_QWORD *)&v176 + 1) = *((_QWORD *)&v140 + 1);
        v41 = ((uint64_t (*)(uint64_t *, __n128))v147)(&v170, v63);
      }
    }
    else
    {
      if ((v5 & 1) == 0)
      {
        if (qword_1ED6BB1F8 != -1)
          swift_once();
        v87 = sub_1BC817590();
        __swift_project_value_buffer(v87, (uint64_t)qword_1ED6BB228);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        v88 = sub_1BC81756C();
        v89 = sub_1BC817E9C();
        if (os_log_type_enabled(v88, v89))
        {
          v90 = swift_slowAlloc();
          v91 = swift_slowAlloc();
          v170 = v91;
          *(_DWORD *)v90 = 136446466;
          v92 = sub_1BC818814();
          sub_1BC6E14D8(v92, v93, &v170);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          *(_WORD *)(v90 + 12) = 2082;
          v162[0] = sub_1BC6E14D8(0x756F72676B636162, 0xEA0000000000646ELL, &v170);
          sub_1BC818148();
          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_1BC6DD000, v88, v89, "[%{public}s] Queue is running foreground generation, dropping generation request with environment %{public}s", (uint8_t *)v90, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v91, -1, -1);
          MEMORY[0x1BCCF5BA4](v90, -1, -1);

        }
        else
        {

          swift_release_n();
          swift_release_n();
          swift_release_n();
          swift_bridgeObjectRelease_n();
          v94 = swift_bridgeObjectRelease_n();
        }
        v21 = a2;
        ((void (*)(uint64_t))v8)(v94);
        v22 = 0;
        goto LABEL_57;
      }
      v144 = v6;
      if (qword_1ED6BB1F8 != -1)
        swift_once();
      v138 = v10;
      v43 = sub_1BC817590();
      __swift_project_value_buffer(v43, (uint64_t)qword_1ED6BB228);
      v44 = sub_1BC81756C();
      v45 = sub_1BC817E9C();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v141 = v8;
        v47 = swift_slowAlloc();
        v170 = v47;
        *(_DWORD *)v46 = 136446210;
        v48 = sub_1BC818814();
        v162[0] = sub_1BC6E14D8(v48, v49, &v170);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v44, v45, "[%{public}s] Queue is running foreground generation, cancelling and restarting foreground generation", v46, 0xCu);
        swift_arrayDestroy();
        v50 = v47;
        v8 = v141;
        MEMORY[0x1BCCF5BA4](v50, -1, -1);
        MEMORY[0x1BCCF5BA4](v46, -1, -1);
      }

      v139 = v7;
      v51 = sub_1BC7A3554();
      LOBYTE(v170) = 1;
      v171 = v149;
      v172 = v151;
      v173 = v145;
      v174 = v147;
      *(_QWORD *)&v175 = v144;
      *((_QWORD *)&v175 + 1) = v7;
      *(_QWORD *)&v176 = v8;
      *((_QWORD *)&v176 + 1) = *((_QWORD *)&v140 + 1);
      v41 = ((uint64_t (*)(uint64_t *, __n128))v147)(&v170, v51);
    }
    v64 = (void *)v41;
    v65 = v42;
    sub_1BC79FD90(v41, v42, 1);
    v150 = v3[5];
    v152 = (void *)v3[4];
    v66 = v3[7];
    v67 = v3[8];
    v148 = v3[6];
    v3[4] = v64;
    v3[5] = v65;
LABEL_45:
    *v24 = 0u;
    v24[1] = 0u;
    v24[2] = 0u;
    v24[3] = 0u;
    v24[4] = 0u;
    v104 = v64;
    sub_1BC7A4268(v152, v150, v148, v66, v67);
    sub_1BC7A1EB8(v104, v65, v144, v139);

    v22 = 2;
LABEL_56:
    v21 = a2;
    v10 = v138;
LABEL_57:
    *v21 = v22;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
    return;
  }
  __break(1u);
}

void sub_1BC7A1EB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  _QWORD v14[6];

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v4 + 128) + 16));
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = a3;
  v9[3] = a4;
  v9[4] = v4;
  v9[5] = a1;
  v9[6] = a2;
  v14[4] = sub_1BC7A5A7C;
  v14[5] = v9;
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 1107296256;
  v14[2] = sub_1BC719640;
  v14[3] = &block_descriptor_19;
  v10 = _Block_copy(v14);
  v11 = (void *)objc_opt_self();
  swift_retain();
  swift_retain();
  v12 = a1;
  v13 = objc_msgSend(v11, sel_blockOperationWithBlock_, v10);
  _Block_release(v10);
  swift_release();
  objc_msgSend(v13, sel_addDependency_, v12);
  objc_msgSend(*(id *)(v4 + 24), sel_addOperation_, v13);
  objc_msgSend(*(id *)(v4 + 16), sel_addOperation_, v12);

}

void sub_1BC7A1FFC(void *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  _OWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  BOOL v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  BOOL v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  NSObject *v50;
  os_log_type_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  BOOL v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t ObjectType;
  void *v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  id v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  BOOL v77;
  uint64_t v78;
  unint64_t v79;
  id v80;
  uint64_t v81;
  id v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  BOOL v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char v101;
  BOOL v102;
  uint64_t v103;
  unint64_t v104;
  void *v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  id v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  BOOL v118;
  uint64_t v119;
  unint64_t v120;
  void *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  void *v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  os_log_type_t type;
  uint64_t v132;
  uint64_t v133;
  id v134;
  os_log_t log;
  NSObject *loga;
  os_log_t logb;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  os_log_type_t v146[8];
  id v147;
  os_log_type_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  uint64_t v152;
  unint64_t v153;
  NSObject *v154;
  os_log_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t (*v162)(_QWORD);
  uint64_t v164;
  id v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168[3];
  char v169;
  uint64_t (*v170)(_QWORD);
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;

  v3 = v2;
  v5 = v2[16];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v5 + 16));
  v6 = v3 + 6;
  v160 = v3[6];
  v7 = v3[5];
  v8 = v3[7];
  v9 = v3[8];
  v10 = v3[9];
  v162 = (uint64_t (*)(_QWORD))v3[10];
  v166 = v3[11];
  v161 = v3[12];
  v11 = v3[15];
  if (v7 >> 62)
  {
    if (v7 >> 62 == 1)
    {
      *(_QWORD *)v146 = v3[14];
      v12 = v3[13];
      v138 = v3;
      v13 = (void *)v3[4];
      v158 = v8;
      if (!v9)
      {
        v143 = a2;
        ObjectType = swift_getObjectType();
        if (v13 != a1)
        {
          v67 = v13;
          v68 = v5;
          v69 = v67;
          sub_1BC7A420C(v160, v158, 0);

          if (qword_1ED6BB1F8 != -1)
            swift_once();
          v70 = sub_1BC817590();
          __swift_project_value_buffer(v70, (uint64_t)qword_1ED6BB228);
          v71 = a1;
          v20 = sub_1BC81756C();
          v72 = sub_1BC817E9C();
          if (!os_log_type_enabled(v20, v72))
          {

            v22 = v5;
            goto LABEL_96;
          }
          v23 = swift_slowAlloc();
          v73 = swift_slowAlloc();
          v168[0] = v73;
          *(_DWORD *)v23 = 136446466;
          v74 = sub_1BC818814();
          v176 = sub_1BC6E14D8(v74, v75, v168);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2082;
          v76 = (*(uint64_t (**)(uint64_t))(v143 + 8))(ObjectType);
          v77 = (v76 & 1) == 0;
          if ((v76 & 1) != 0)
            v78 = 0x65746E4972657375;
          else
            v78 = 0x756F72676B636162;
          if (v77)
            v79 = 0xEA0000000000646ELL;
          else
            v79 = 0xEF65766974636172;
          v176 = sub_1BC6E14D8(v78, v79, v168);
          sub_1BC818148();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC6DD000, v20, v72, "[%{public}s] work with environment %{public}s completed, no enqueued background generation, but active work is already different, keeping state as backgroundGeneration(_, nil)", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          v31 = v73;
          v22 = v68;
          goto LABEL_55;
        }
        v157 = v5;
        v110 = a1;
        sub_1BC7A420C(v160, v158, 0);
        if (qword_1ED6BB1F8 != -1)
          swift_once();
        v111 = sub_1BC817590();
        __swift_project_value_buffer(v111, (uint64_t)qword_1ED6BB228);
        v19 = v110;
        v112 = sub_1BC81756C();
        v113 = sub_1BC817E9C();
        if (os_log_type_enabled(v112, v113))
        {
          v114 = swift_slowAlloc();
          v167 = swift_slowAlloc();
          v168[0] = v167;
          *(_DWORD *)v114 = 136446466;
          v115 = sub_1BC818814();
          v176 = sub_1BC6E14D8(v115, v116, v168);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          *(_WORD *)(v114 + 12) = 2082;
          v117 = (*(uint64_t (**)(uint64_t))(v143 + 8))(ObjectType);
          v118 = (v117 & 1) == 0;
          if ((v117 & 1) != 0)
            v119 = 0x65746E4972657375;
          else
            v119 = 0x756F72676B636162;
          if (v118)
            v120 = 0xEA0000000000646ELL;
          else
            v120 = 0xEF65766974636172;
          v176 = sub_1BC6E14D8(v119, v120, v168);
          sub_1BC818148();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC6DD000, v112, v113, "[%{public}s] work with environment %{public}s completed, no enqueued background generation, updating state to idle", (uint8_t *)v114, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v167, -1, -1);
          MEMORY[0x1BCCF5BA4](v114, -1, -1);

        }
        else
        {

        }
        v22 = v157;
        v126 = (void *)v138[4];
        v127 = v138[5];
        v128 = v138[6];
        v129 = v138[7];
        v130 = v138[8];
        *((_OWORD *)v138 + 2) = xmmword_1BC81F3A0;
        *v6 = 0u;
        v6[1] = 0u;
        v6[2] = 0u;
        v6[3] = 0u;
        v6[4] = 0u;
        sub_1BC7A4268(v126, v127, v128, v129, v130);
LABEL_95:

        goto LABEL_96;
      }
      v14 = v9;
      log = (os_log_t)swift_getObjectType();
      sub_1BC7A4174(v13, v7, v160, v158, v14);
      if (v13 != a1)
      {
        v15 = v13;
        v16 = a2;
        v17 = v15;
        sub_1BC6F07B0(v160, v158, v14);

        if (qword_1ED6BB1F8 != -1)
          swift_once();
        v18 = sub_1BC817590();
        __swift_project_value_buffer(v18, (uint64_t)qword_1ED6BB228);
        v19 = a1;
        v20 = sub_1BC81756C();
        v21 = sub_1BC817E9C();
        v22 = v5;
        if (os_log_type_enabled(v20, v21))
        {
          v23 = swift_slowAlloc();
          v24 = swift_slowAlloc();
          v168[0] = v24;
          *(_DWORD *)v23 = 136446466;
          v25 = sub_1BC818814();
          v176 = sub_1BC6E14D8(v25, v26, v168);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          *(_WORD *)(v23 + 12) = 2082;
          v27 = (*(uint64_t (**)(os_log_t, uint64_t))(v16 + 8))(log, v16);
          v28 = (v27 & 1) == 0;
          if ((v27 & 1) != 0)
            v29 = 0x65746E4972657375;
          else
            v29 = 0x756F72676B636162;
          if (v28)
            v30 = 0xEA0000000000646ELL;
          else
            v30 = 0xEF65766974636172;
          v176 = sub_1BC6E14D8(v29, v30, v168);
          sub_1BC818148();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1BC6DD000, v20, v21, "[%{public}s] work with environment %{public}s completed, had enqueued background generation request, but activeWork is already different, keeping state as backgroundGeneration(some)", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          v31 = v24;
LABEL_55:
          MEMORY[0x1BCCF5BA4](v31, -1, -1);
          MEMORY[0x1BCCF5BA4](v23, -1, -1);

          goto LABEL_96;
        }

        goto LABEL_95;
      }
      v144 = a2;
      v140 = v11;
      v93 = v12;
      sub_1BC7A420C(v160, v158, v14);
      v94 = v14;
      if (qword_1ED6BB1F8 != -1)
        swift_once();
      v95 = sub_1BC817590();
      __swift_project_value_buffer(v95, (uint64_t)qword_1ED6BB228);
      v165 = a1;
      v96 = sub_1BC81756C();
      v97 = sub_1BC817E9C();
      v150 = v14;
      if (os_log_type_enabled(v96, v97))
      {
        v98 = swift_slowAlloc();
        v152 = swift_slowAlloc();
        v168[0] = v152;
        *(_DWORD *)v98 = 136446466;
        v99 = sub_1BC818814();
        v176 = sub_1BC6E14D8(v99, v100, v168);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v98 + 12) = 2082;
        v101 = (*(uint64_t (**)(os_log_t))(v144 + 8))(log);
        v102 = (v101 & 1) == 0;
        if ((v101 & 1) != 0)
          v103 = 0x65746E4972657375;
        else
          v103 = 0x756F72676B636162;
        if (v102)
          v104 = 0xEA0000000000646ELL;
        else
          v104 = 0xEF65766974636172;
        v176 = sub_1BC6E14D8(v103, v104, v168);
        v94 = v150;
        sub_1BC818148();

        v93 = v12;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v96, v97, "[%{public}s] work with environment %{public}s completed, has enqueued background generation request, updating state to backgroundGeneration(nil) and starting enqueued background generation request", (uint8_t *)v98, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v152, -1, -1);
        MEMORY[0x1BCCF5BA4](v98, -1, -1);

      }
      else
      {

      }
      LOBYTE(v168[0]) = v160 & 1;
      v168[1] = v158;
      v168[2] = v94;
      v169 = v10 & 1;
      v170 = v162;
      v171 = v166;
      v172 = v161;
      v173 = v93;
      v174 = *(_QWORD *)v146;
      v175 = v140;
      v121 = (void *)v162(v168);
      v123 = v122;
      sub_1BC79FD90((uint64_t)v121, v122, v160 & 1);
      v153 = v138[5];
      v155 = (os_log_t)v138[4];
      v124 = v138[7];
      v145 = v138[6];
      logb = (os_log_t)v138[8];
      v138[4] = v121;
      v138[5] = v123 | 0x4000000000000000;
      *v6 = 0u;
      v6[1] = 0u;
      v6[2] = 0u;
      v6[3] = 0u;
      v6[4] = 0u;
      v125 = v121;
      sub_1BC7A4268(v155, v153, v145, v124, (uint64_t)logb);
      sub_1BC7A1EB8(v125, v123, v161, v93);

      sub_1BC6F07B0(v160, v158, v150);
      sub_1BC6F07B0(v160, v158, v150);
      v22 = v5;
    }
    else
    {
      v22 = v5;
      v142 = a2;
      if (qword_1ED6BB1F8 != -1)
        swift_once();
      v48 = sub_1BC817590();
      __swift_project_value_buffer(v48, (uint64_t)qword_1ED6BB228);
      v49 = a1;
      v50 = sub_1BC81756C();
      v51 = sub_1BC817E9C();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = swift_slowAlloc();
        v53 = swift_slowAlloc();
        v168[0] = v53;
        *(_DWORD *)v52 = 136446466;
        v54 = sub_1BC818814();
        v176 = sub_1BC6E14D8(v54, v55, v168);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v52 + 12) = 2082;
        v56 = swift_getObjectType();
        v57 = (*(uint64_t (**)(uint64_t))(v142 + 8))(v56);
        v58 = (v57 & 1) == 0;
        if ((v57 & 1) != 0)
          v59 = 0x65746E4972657375;
        else
          v59 = 0x756F72676B636162;
        if (v58)
          v60 = 0xEA0000000000646ELL;
        else
          v60 = 0xEF65766974636172;
        v176 = sub_1BC6E14D8(v59, v60, v168);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v50, v51, "[%{public}s] work with environment %{public}s completed, but state is already idle", (uint8_t *)v52, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v53, -1, -1);
        MEMORY[0x1BCCF5BA4](v52, -1, -1);

      }
      else
      {

      }
      v61 = (void *)v3[4];
      v62 = v3[5];
      v63 = v3[6];
      v64 = v3[7];
      v65 = v3[8];
      *((_OWORD *)v3 + 2) = xmmword_1BC81F3A0;
      *v6 = 0u;
      *((_OWORD *)v3 + 4) = 0u;
      *((_OWORD *)v3 + 5) = 0u;
      *((_OWORD *)v3 + 6) = 0u;
      *((_OWORD *)v3 + 7) = 0u;
      sub_1BC7A4268(v61, v62, v63, v64, v65);
    }
  }
  else
  {
    v149 = v3[8];
    v151 = (void *)v3[4];
    v141 = a2;
    v159 = v3[7];
    v139 = swift_getObjectType();
    v32 = swift_getObjectType();
    v33 = qword_1ED6BB1F8;
    v156 = v5;
    if (v151 == a1)
    {
      v80 = a1;
      if (v33 != -1)
        swift_once();
      v81 = sub_1BC817590();
      __swift_project_value_buffer(v81, (uint64_t)qword_1ED6BB228);
      v82 = v80;
      v83 = sub_1BC81756C();
      v84 = sub_1BC817E9C();
      if (os_log_type_enabled(v83, v84))
      {
        v148 = v84;
        v85 = swift_slowAlloc();
        v164 = swift_slowAlloc();
        v168[0] = v164;
        *(_DWORD *)v85 = 136446466;
        v86 = sub_1BC818814();
        v154 = v83;
        v176 = sub_1BC6E14D8(v86, v87, v168);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v85 + 12) = 2082;
        v88 = (*(uint64_t (**)(uint64_t))(v141 + 8))(v139);
        v89 = (v88 & 1) == 0;
        if ((v88 & 1) != 0)
          v90 = 0x65746E4972657375;
        else
          v90 = 0x756F72676B636162;
        if (v89)
          v91 = 0xEA0000000000646ELL;
        else
          v91 = 0xEF65766974636172;
        v176 = sub_1BC6E14D8(v90, v91, v168);
        v92 = v149;
        sub_1BC818148();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v154, v148, "[%{public}s] work with environment %{public}s completed, updating state from foregroundGeneration to idle", (uint8_t *)v85, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v164, -1, -1);
        MEMORY[0x1BCCF5BA4](v85, -1, -1);

      }
      else
      {

        v92 = v149;
      }
      v105 = (void *)v3[4];
      v106 = v3[5];
      v107 = v3[6];
      v108 = v3[7];
      v109 = v3[8];
      *((_OWORD *)v3 + 2) = xmmword_1BC81F3A0;
      *v6 = 0u;
      *((_OWORD *)v3 + 4) = 0u;
      *((_OWORD *)v3 + 5) = 0u;
      *((_OWORD *)v3 + 6) = 0u;
      *((_OWORD *)v3 + 7) = 0u;
      sub_1BC7A4268(v105, v106, v107, v108, v109);
      sub_1BC7A4268(v151, v7, v160, v159, v92);
      v22 = v156;
    }
    else
    {
      v133 = v32;
      v151;
      if (v33 != -1)
        swift_once();
      v34 = sub_1BC817590();
      __swift_project_value_buffer(v34, (uint64_t)qword_1ED6BB228);
      v147 = a1;
      sub_1BC7A4174(v151, v7, v160, v159, v149);
      v134 = v147;
      sub_1BC7A4174(v151, v7, v160, v159, v149);
      v35 = sub_1BC81756C();
      v36 = sub_1BC817E9C();
      loga = v35;
      if (os_log_type_enabled(v35, v36))
      {
        type = v36;
        v37 = swift_slowAlloc();
        v132 = swift_slowAlloc();
        v168[0] = v132;
        *(_DWORD *)v37 = 136446722;
        v38 = sub_1BC818814();
        v176 = sub_1BC6E14D8(v38, v39, v168);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 12) = 2082;
        v40 = (*(uint64_t (**)(uint64_t))(v141 + 8))(v139);
        v41 = (v40 & 1) == 0;
        if ((v40 & 1) != 0)
          v42 = 0x65746E4972657375;
        else
          v42 = 0x756F72676B636162;
        if (v41)
          v43 = 0xEA0000000000646ELL;
        else
          v43 = 0xEF65766974636172;
        v176 = sub_1BC6E14D8(v42, v43, v168);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        *(_WORD *)(v37 + 22) = 2082;
        v44 = (*(uint64_t (**)(uint64_t, unint64_t))(v7 + 8))(v133, v7);
        v45 = (v44 & 1) == 0;
        if ((v44 & 1) != 0)
          v46 = 0x65746E4972657375;
        else
          v46 = 0x756F72676B636162;
        if (v45)
          v47 = 0xEA0000000000646ELL;
        else
          v47 = 0xEF65766974636172;
        v22 = v156;
        v176 = sub_1BC6E14D8(v46, v47, v168);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        sub_1BC7A4268(v151, v7, v160, v159, v149);
        sub_1BC7A4268(v151, v7, v160, v159, v149);
        _os_log_impl(&dword_1BC6DD000, loga, type, "[%{public}s] work with environment %{public}s completed, but active work (environment: %{public}s) is already different, keeping state as foregroundGeneration", (uint8_t *)v37, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v132, -1, -1);
        MEMORY[0x1BCCF5BA4](v37, -1, -1);

        sub_1BC7A4268(v151, v7, v160, v159, v149);
      }
      else
      {
        sub_1BC7A4268(v151, v7, v160, v159, v149);

        sub_1BC7A4268(v151, v7, v160, v159, v149);
        sub_1BC7A4268(v151, v7, v160, v159, v149);

        v22 = v156;
      }
    }
  }
LABEL_96:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v22 + 16));
}

__n128 sub_1BC7A3554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 result;
  void (*v27)(uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 128) + 16));
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6BB228);
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v30 = v6;
    *(_DWORD *)v5 = 136446210;
    v7 = sub_1BC818814();
    sub_1BC6E14D8(v7, v8, &v30);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v3, v4, "[%{public}s] Cancelling all operations", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
  }

  objc_msgSend(*(id *)(v0 + 16), sel_cancelAllOperations);
  v9 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v0 + 40) >> 62 == 1)
  {
    v11 = *(_QWORD *)(v0 + 56);
    v10 = *(_QWORD *)(v0 + 64);
    v12 = *(void (**)(uint64_t, uint64_t))(v0 + 112);
    v13 = *(id *)(v0 + 32);
    v27 = v12;
    v28 = v11;
    sub_1BC7A420C(v9, v11, v10);

    if (v10)
    {
      v14 = sub_1BC81756C();
      v15 = sub_1BC817E9C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v30 = v29;
        *(_DWORD *)v16 = 136446210;
        v17 = sub_1BC818814();
        sub_1BC6E14D8(v17, v18, &v30);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v14, v15, "[%{public}s] Calling notStartedCancellationBlock of enqueued work requests", v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v29, -1, -1);
        MEMORY[0x1BCCF5BA4](v16, -1, -1);
      }

      v27(v19, v20);
      sub_1BC6F07B0(v9, v28, v10);
    }
  }
  v21 = *(void **)(v1 + 32);
  v22 = *(_QWORD *)(v1 + 40);
  v23 = *(_QWORD *)(v1 + 48);
  v24 = *(_QWORD *)(v1 + 56);
  v25 = *(_QWORD *)(v1 + 64);
  *(_OWORD *)(v1 + 32) = xmmword_1BC81F3A0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  sub_1BC7A4268(v21, v22, v23, v24, v25);
  return result;
}

void sub_1BC7A38F8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 128);
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  sub_1BC7A3554();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
}

uint64_t sub_1BC7A3924(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEB00000000737265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1BC7A3A1C(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _QWORD *v32;
  _QWORD *v33;
  char v34;
  char v35;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC788E10(0, &qword_1EF45C4D8, (uint64_t (*)(void))sub_1BC79EB08, (uint64_t)&type metadata for PluginIdentifierSet.IdentifiersCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  v29 = v4;
  MEMORY[0x1E0C80A78](v3);
  v31 = (char *)&v26 - v5;
  sub_1BC788E10(0, &qword_1EF45C4E0, (uint64_t (*)(void))sub_1BC79EB4C, (uint64_t)&type metadata for PluginIdentifierSet.AllCodingKeys, v2);
  v27 = v6;
  v30 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  sub_1BC788E10(0, &qword_1EF45C4E8, (uint64_t (*)(void))sub_1BC79EB90, (uint64_t)&type metadata for PluginIdentifierSet.CodingKeys, v2);
  v10 = v9;
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - v12;
  v14 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC79EB90();
  v15 = (uint64_t)v32;
  sub_1BC8187E4();
  if (v15)
    goto LABEL_7;
  v16 = v8;
  v17 = v30;
  v18 = v31;
  v26 = v11;
  v32 = a1;
  v19 = sub_1BC8185D4();
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v14 = v13;
    v22 = sub_1BC818334();
    swift_allocError();
    v24 = v23;
    sub_1BC7A3EF4();
    *v24 = &type metadata for PluginIdentifierSet;
    sub_1BC818580();
    sub_1BC81831C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
    a1 = v32;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v14;
  }
  if ((*(_BYTE *)(v19 + 32) & 1) != 0)
  {
    v35 = 1;
    sub_1BC79EB08();
    sub_1BC818574();
    sub_1BC714F04();
    sub_1BC7A5C60((unint64_t *)&unk_1EF45C4F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    v20 = v28;
    sub_1BC8185C8();
    v21 = v26;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v10);
    v14 = v33;
  }
  else
  {
    v34 = 0;
    sub_1BC79EB4C();
    sub_1BC818574();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v16, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v10);
    v14 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return v14;
}

unint64_t sub_1BC7A3E28()
{
  unint64_t result;

  result = qword_1EF45C398;
  if (!qword_1EF45C398)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FCB8, &type metadata for GenerationPhase.FeedItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C398);
  }
  return result;
}

unint64_t sub_1BC7A3E6C()
{
  unint64_t result;

  result = qword_1EF45C3A8;
  if (!qword_1EF45C3A8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FC68, &type metadata for GenerationPhase.SharableModelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C3A8);
  }
  return result;
}

unint64_t sub_1BC7A3EB0()
{
  unint64_t result;

  result = qword_1EF45C3B8;
  if (!qword_1EF45C3B8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FC18, &type metadata for GenerationPhase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C3B8);
  }
  return result;
}

void sub_1BC7A3EF4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF45C3D8)
  {
    sub_1BC7A3F60();
    sub_1BC818328();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF45C3D8);
  }
}

unint64_t sub_1BC7A3F60()
{
  unint64_t result;

  result = qword_1EF45D150;
  if (!qword_1EF45D150)
  {
    result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF45D150);
  }
  return result;
}

unint64_t sub_1BC7A3F9C()
{
  unint64_t result;

  result = qword_1EF45C3E8;
  if (!qword_1EF45C3E8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FBC8, &type metadata for BackgroundGenerationWorkDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C3E8);
  }
  return result;
}

unint64_t sub_1BC7A3FE0()
{
  unint64_t result;

  result = qword_1EF45C3F0;
  if (!qword_1EF45C3F0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginIdentifierSet, &type metadata for PluginIdentifierSet);
    atomic_store(result, (unint64_t *)&qword_1EF45C3F0);
  }
  return result;
}

unint64_t sub_1BC7A4024()
{
  unint64_t result;

  result = qword_1EF45C408;
  if (!qword_1EF45C408)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for GenerationPhase, &type metadata for GenerationPhase);
    atomic_store(result, (unint64_t *)&qword_1EF45C408);
  }
  return result;
}

unint64_t sub_1BC7A4068()
{
  unint64_t result;

  result = qword_1EF45C418;
  if (!qword_1EF45C418)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginIdentifierSet, &type metadata for PluginIdentifierSet);
    atomic_store(result, (unint64_t *)&qword_1EF45C418);
  }
  return result;
}

uint64_t sub_1BC7A40AC(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BC788E10(255, &qword_1EF45C3F8, (uint64_t (*)(void))sub_1BC73201C, (uint64_t)&type metadata for GenerationPhase, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCF5AB4](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC7A4130()
{
  unint64_t result;

  result = qword_1EF45C428;
  if (!qword_1EF45C428)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for GenerationPhase, &type metadata for GenerationPhase);
    atomic_store(result, (unint64_t *)&qword_1EF45C428);
  }
  return result;
}

id sub_1BC7A4174(id result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v8;

  if (a2 >> 62 == 1)
  {
    v8 = result;
    return (id)sub_1BC7A420C(a3, a4, a5);
  }
  else if (!(a2 >> 62))
  {
    return result;
  }
  return result;
}

uint64_t sub_1BC7A420C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void sub_1BC7A4268(void *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2 >> 62 == 1)
  {

    sub_1BC6F07B0(a3, a4, a5);
  }
  else if (!(a2 >> 62))
  {

  }
}

unint64_t sub_1BC7A4304()
{
  unint64_t result;

  result = qword_1ED6B7D40;
  if (!qword_1ED6B7D40)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for GenerationPhase, &type metadata for GenerationPhase);
    atomic_store(result, (unint64_t *)&qword_1ED6B7D40);
  }
  return result;
}

uint64_t sub_1BC7A4348()
{
  return sub_1BC6E1788(&qword_1EF45C430, (uint64_t (*)(uint64_t))sub_1BC7A4374, MEMORY[0x1E0DEAF50]);
}

void sub_1BC7A4374()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45C438)
  {
    v0 = sub_1BC817D04();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45C438);
  }
}

unint64_t sub_1BC7A43CC()
{
  unint64_t result;

  result = qword_1EF45C440;
  if (!qword_1EF45C440)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for GenerationQueue.EnqueueResult.DropReason, &type metadata for GenerationQueue.EnqueueResult.DropReason);
    atomic_store(result, (unint64_t *)&qword_1EF45C440);
  }
  return result;
}

uint64_t sub_1BC7A4410@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_1BC7A5A20;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;
  return swift_retain();
}

uint64_t sub_1BC7A4464@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 56);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_1BC75BF20;
  a2[1] = (uint64_t (*)())v5;
  return swift_retain();
}

uint64_t sub_1BC7A44B8@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a1 + 64);
  v3 = *(_QWORD *)(a1 + 72);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a2 = sub_1BC6EF990;
  a2[1] = (uint64_t (*)())v5;
  return swift_retain();
}

_QWORD *initializeBufferWithCopyOfBuffer for PluginIdentifierSet(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PluginIdentifierSet(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for PluginIdentifierSet(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PluginIdentifierSet()
{
  return &type metadata for PluginIdentifierSet;
}

uint64_t dispatch thunk of GenerationWork.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))() & 1;
}

ValueMetadata *type metadata accessor for GenerationPhase()
{
  return &type metadata for GenerationPhase;
}

uint64_t sub_1BC7A45EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BackgroundGenerationWorkDescription(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for BackgroundGenerationWorkDescription(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for BackgroundGenerationWorkDescription(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BackgroundGenerationWorkDescription(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for BackgroundGenerationWorkDescription()
{
  return &type metadata for BackgroundGenerationWorkDescription;
}

uint64_t destroy for GenerationWorkRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for GenerationWorkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for GenerationWorkRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for GenerationWorkRequest(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerationWorkRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenerationWorkRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationWorkRequest()
{
  return &type metadata for GenerationWorkRequest;
}

uint64_t type metadata accessor for GenerationQueue()
{
  return objc_opt_self();
}

uint64_t method lookup function for GenerationQueue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GenerationQueue.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of GenerationQueue.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of GenerationQueue.enqueue(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of GenerationQueue.cancelAllOperations()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t getEnumTagSinglePayload for GenerationQueue.EnqueueResult(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
  {
    v6 = *a1;
    if (v6 >= 2)
      v7 = v6 - 1;
    else
      v7 = 0;
    if (v7 >= 3)
      return v7 - 2;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BC7A4AE4 + 4 * byte_1BC81F3B0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for GenerationQueue.EnqueueResult(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFD)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC7A4B90 + 4 * byte_1BC81F3BA[v5]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC7A4BC4 + 4 * byte_1BC81F3B5[v5]))();
}

uint64_t sub_1BC7A4BC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7A4BCC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7A4BD4);
  return result;
}

uint64_t sub_1BC7A4BE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7A4BE8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC7A4BEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7A4BF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7A4C00(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 2)
    return v1 - 1;
  else
    return 0;
}

_BYTE *sub_1BC7A4C14(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for GenerationQueue.EnqueueResult()
{
  return &type metadata for GenerationQueue.EnqueueResult;
}

ValueMetadata *type metadata accessor for GenerationQueue.EnqueueResult.DropReason()
{
  return &type metadata for GenerationQueue.EnqueueResult.DropReason;
}

void destroy for GenerationQueue.State(uint64_t a1)
{
  sub_1BC7A4268(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
}

_QWORD *initializeWithCopy for GenerationQueue.State(_QWORD *a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  sub_1BC7A4174(*(id *)a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  return a1;
}

uint64_t assignWithCopy for GenerationQueue.State(uint64_t a1, uint64_t a2)
{
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v18 = *(_QWORD *)(a2 + 72);
  v19 = *(_QWORD *)(a2 + 80);
  v20 = *(_QWORD *)(a2 + 88);
  sub_1BC7A4174(*(id *)a2, v4, v5, v6, v7);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v18;
  *(_QWORD *)(a1 + 80) = v19;
  *(_QWORD *)(a1 + 88) = v20;
  sub_1BC7A4268(v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for GenerationQueue.State(uint64_t a1, _OWORD *a2)
{
  void *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v3 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v9;
  v10 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v10;
  sub_1BC7A4268(v3, v5, v4, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenerationQueue.State(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 126);
  v3 = (((*(_QWORD *)(a1 + 8) >> 57) >> 5) | (4
                                                          * ((*(_QWORD *)(a1 + 8) >> 57) & 0x18 | *(_QWORD *)(a1 + 8) & 7))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for GenerationQueue.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7D)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 126;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)(result + 48) = 0u;
      *(_OWORD *)(result + 64) = 0u;
      *(_OWORD *)(result + 80) = 0u;
    }
  }
  return result;
}

uint64_t sub_1BC7A4F78(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BC7A4F94(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1BC7A4FA4(uint64_t result, uint64_t a2)
{
  if (a2 < 2)
  {
    *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  }
  else
  {
    *(_QWORD *)result = (a2 - 2);
    *(_QWORD *)(result + 8) = 0x8000000000000000;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenerationQueue.State()
{
  return &type metadata for GenerationQueue.State;
}

uint64_t storeEnumTagSinglePayload for BackgroundGenerationWorkDescription.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC7A5038 + 4 * byte_1BC81F3C4[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC7A506C + 4 * byte_1BC81F3BF[v4]))();
}

uint64_t sub_1BC7A506C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7A5074(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7A507CLL);
  return result;
}

uint64_t sub_1BC7A5088(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7A5090);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC7A5094(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7A509C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for BackgroundGenerationWorkDescription.CodingKeys()
{
  return &type metadata for BackgroundGenerationWorkDescription.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerationPhase.CodingKeys()
{
  return &type metadata for GenerationPhase.CodingKeys;
}

ValueMetadata *type metadata accessor for GenerationPhase.SharableModelsCodingKeys()
{
  return &type metadata for GenerationPhase.SharableModelsCodingKeys;
}

ValueMetadata *type metadata accessor for GenerationPhase.FeedItemsCodingKeys()
{
  return &type metadata for GenerationPhase.FeedItemsCodingKeys;
}

uint64_t _s14HealthPlatform15GenerationPhaseOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC7A5134 + 4 * byte_1BC81F3CE[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC7A5168 + 4 * byte_1BC81F3C9[v4]))();
}

uint64_t sub_1BC7A5168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7A5170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7A5178);
  return result;
}

uint64_t sub_1BC7A5184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7A518CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC7A5190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7A5198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PluginIdentifierSet.CodingKeys()
{
  return &type metadata for PluginIdentifierSet.CodingKeys;
}

ValueMetadata *type metadata accessor for PluginIdentifierSet.AllCodingKeys()
{
  return &type metadata for PluginIdentifierSet.AllCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PluginIdentifierSet.IdentifiersCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC7A5204 + 4 * byte_1BC81F3D3[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC7A5224 + 4 * byte_1BC81F3D8[v4]))();
}

_BYTE *sub_1BC7A5204(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC7A5224(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7A522C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7A5234(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7A523C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7A5244(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PluginIdentifierSet.IdentifiersCodingKeys()
{
  return &type metadata for PluginIdentifierSet.IdentifiersCodingKeys;
}

unint64_t sub_1BC7A5264()
{
  unint64_t result;

  result = qword_1EF45C448;
  if (!qword_1EF45C448)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F888, &type metadata for PluginIdentifierSet.IdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C448);
  }
  return result;
}

unint64_t sub_1BC7A52AC()
{
  unint64_t result;

  result = qword_1EF45C450;
  if (!qword_1EF45C450)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F990, &type metadata for PluginIdentifierSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C450);
  }
  return result;
}

unint64_t sub_1BC7A52F4()
{
  unint64_t result;

  result = qword_1EF45C458;
  if (!qword_1EF45C458)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FAE8, &type metadata for GenerationPhase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C458);
  }
  return result;
}

unint64_t sub_1BC7A533C()
{
  unint64_t result;

  result = qword_1EF45C460;
  if (!qword_1EF45C460)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FBA0, &type metadata for BackgroundGenerationWorkDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C460);
  }
  return result;
}

unint64_t sub_1BC7A5384()
{
  unint64_t result;

  result = qword_1EF45C468;
  if (!qword_1EF45C468)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FB10, &type metadata for BackgroundGenerationWorkDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C468);
  }
  return result;
}

unint64_t sub_1BC7A53CC()
{
  unint64_t result;

  result = qword_1EF45C470;
  if (!qword_1EF45C470)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FB38, &type metadata for BackgroundGenerationWorkDescription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C470);
  }
  return result;
}

unint64_t sub_1BC7A5414()
{
  unint64_t result;

  result = qword_1EF45C478;
  if (!qword_1EF45C478)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FA58, &type metadata for GenerationPhase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C478);
  }
  return result;
}

unint64_t sub_1BC7A545C()
{
  unint64_t result;

  result = qword_1EF45C480;
  if (!qword_1EF45C480)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FA80, &type metadata for GenerationPhase.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C480);
  }
  return result;
}

unint64_t sub_1BC7A54A4()
{
  unint64_t result;

  result = qword_1EF45C488;
  if (!qword_1EF45C488)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FA08, &type metadata for GenerationPhase.SharableModelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C488);
  }
  return result;
}

unint64_t sub_1BC7A54EC()
{
  unint64_t result;

  result = qword_1EF45C490;
  if (!qword_1EF45C490)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81FA30, &type metadata for GenerationPhase.SharableModelsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C490);
  }
  return result;
}

unint64_t sub_1BC7A5534()
{
  unint64_t result;

  result = qword_1EF45C498;
  if (!qword_1EF45C498)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F9B8, &type metadata for GenerationPhase.FeedItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C498);
  }
  return result;
}

unint64_t sub_1BC7A557C()
{
  unint64_t result;

  result = qword_1EF45C4A0;
  if (!qword_1EF45C4A0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F9E0, &type metadata for GenerationPhase.FeedItemsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C4A0);
  }
  return result;
}

unint64_t sub_1BC7A55C4()
{
  unint64_t result;

  result = qword_1EF45C4A8;
  if (!qword_1EF45C4A8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F900, &type metadata for PluginIdentifierSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C4A8);
  }
  return result;
}

unint64_t sub_1BC7A560C()
{
  unint64_t result;

  result = qword_1EF45C4B0;
  if (!qword_1EF45C4B0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F928, &type metadata for PluginIdentifierSet.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C4B0);
  }
  return result;
}

unint64_t sub_1BC7A5654()
{
  unint64_t result;

  result = qword_1EF45C4B8;
  if (!qword_1EF45C4B8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F8B0, &type metadata for PluginIdentifierSet.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C4B8);
  }
  return result;
}

unint64_t sub_1BC7A569C()
{
  unint64_t result;

  result = qword_1EF45C4C0;
  if (!qword_1EF45C4C0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F8D8, &type metadata for PluginIdentifierSet.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C4C0);
  }
  return result;
}

unint64_t sub_1BC7A56E4()
{
  unint64_t result;

  result = qword_1EF45C4C8;
  if (!qword_1EF45C4C8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F7F8, &type metadata for PluginIdentifierSet.IdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C4C8);
  }
  return result;
}

unint64_t sub_1BC7A572C()
{
  unint64_t result;

  result = qword_1EF45C4D0;
  if (!qword_1EF45C4D0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC81F820, &type metadata for PluginIdentifierSet.IdentifiersCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C4D0);
  }
  return result;
}

uint64_t sub_1BC7A5770(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C626172616873 && a2 == 0xEE00736C65646F4DLL;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D65744964656566 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC7A5890(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001BC8294E0 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BC829500 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BC829520)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BC7A59CC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7A59F0()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1BC7A5A20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BC7A5A48()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1BC7A5A7C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = *(void **)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 48);
  (*(void (**)(void))(v0 + 16))();
  sub_1BC7A1FFC(v1, v2);
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t sub_1BC7A5ACC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(void))(v0 + 64))();
  return (*(uint64_t (**)(uint64_t))(v0 + 144))(v1);
}

uint64_t sub_1BC7A5AF8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t objectdestroy_27Tm_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7A5BD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = (*(uint64_t (**)(void))(v0 + 80))();
  return (*(uint64_t (**)(uint64_t))(v0 + 160))(v1);
}

uint64_t sub_1BC7A5BFC(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC7A5C60(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    sub_1BC714F04();
    v8 = a2;
    result = MEMORY[0x1BCCF5AB4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC7A5CBC()
{
  unint64_t result;

  result = qword_1ED6BA4B0;
  if (!qword_1ED6BA4B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BA4B0);
  }
  return result;
}

_QWORD *DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)(uint64_t a1, int a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  _QWORD v38[2];
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  void *v51;
  uint64_t v52;

  v3 = v2;
  v50 = a2;
  v38[0] = *v2;
  sub_1BC6ECA64(0, &qword_1ED6B9DC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF868], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v41 = (char *)v38 - v6;
  v42 = sub_1BC817F98();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v39 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7A66F0();
  v44 = *(_QWORD *)(v8 - 8);
  v45 = v8;
  MEMORY[0x1E0C80A78](v8);
  v43 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC817FA4();
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  MEMORY[0x1E0C80A78](v10);
  v47 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BC817F5C();
  v13 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v12);
  v14 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v14);
  v2[2] = 50;
  sub_1BC7A67A4();
  v38[1] = v15;
  swift_allocObject();
  v2[3] = sub_1BC81774C();
  v2[5] = 0;
  type metadata accessor for DiskHealthExperienceStore.MutableState();
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = 0;
  *(_QWORD *)(v16 + 24) = 0;
  v17 = v16
      + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_overrideStoreLocation;
  v18 = sub_1BC816E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  *(_QWORD *)(v16
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_mergeChangesCancellable) = 0;
  v19 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v16
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_observers) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v16
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext) = 0;
  *(_QWORD *)(v16
            + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_allEntities) = 0;
  swift_beginAccess();
  v46 = a1;
  sub_1BC7A6848(a1, v17);
  swift_endAccess();
  sub_1BC7A68A4();
  v20 = swift_allocObject();
  *(_DWORD *)(v20 + 24) = 0;
  *(_QWORD *)(v20 + 16) = v16;
  v3[4] = v20;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  swift_retain();
  sub_1BC817968();
  v52 = v19;
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v13, MEMORY[0x1E0DEF828]);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA420, v13, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7188D8(qword_1ED6BA430, (unint64_t *)&unk_1ED6BA420, v13);
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, *MEMORY[0x1E0DEF8D0], v49);
  v21 = sub_1BC817FC8();
  v22 = (void *)v21;
  if ((v50 & 1) != 0)
  {
    v52 = v3[3];
    swift_retain();
    v23 = v39;
    sub_1BC817F8C();
    v51 = v22;
    v24 = sub_1BC817F80();
    v25 = MEMORY[0x1E0DEF868];
    v26 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v41, 1, 1, v24);
    sub_1BC6E1788(&qword_1ED6BA408, (uint64_t (*)(uint64_t))sub_1BC7A67A4, MEMORY[0x1E0C95F48]);
    sub_1BC7619BC();
    v27 = v43;
    sub_1BC817908();
    sub_1BC7AFBE4(v26, (uint64_t)&qword_1ED6B9DC8, (uint64_t)v25, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v42);
    swift_release();
    v28 = swift_allocObject();
    swift_weakInit();
    v29 = swift_allocObject();
    *(_QWORD *)(v29 + 16) = sub_1BC7AEC3C;
    *(_QWORD *)(v29 + 24) = v28;
    sub_1BC6E1788(&qword_1ED6BA400, (uint64_t (*)(uint64_t))sub_1BC7A66F0, MEMORY[0x1E0C95BB0]);
    v30 = v45;
    v31 = sub_1BC81792C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v27, v30);
    v32 = v3[4];
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v32 + 24));
    *(_QWORD *)(*(_QWORD *)(v32 + 16)
              + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_mergeChangesCancellable) = v31;
    swift_release();
    swift_retain();
    os_unfair_lock_unlock((os_unfair_lock_t)(v32 + 24));
    swift_release();
    v21 = swift_release();
  }
  if (((*(uint64_t (**)(uint64_t))(*v3 + 112))(v21) & 1) != 0)
  {
    sub_1BC7A71F0();
    v33 = objc_allocWithZone(MEMORY[0x1E0C97BA8]);
    v34 = objc_msgSend(v33, sel_initWithMergeType_, 1, v38[0]);
    v35 = sub_1BC7A73E4();
    v36 = objc_msgSend(v35, sel_viewContext);

    objc_msgSend(v36, sel_setMergePolicy_, v34);
    swift_release();

    sub_1BC7AFBE4(v46, (uint64_t)&qword_1ED6BA290, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
  }
  else
  {
    sub_1BC7AFBE4(v46, (uint64_t)&qword_1ED6BA290, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
    swift_release();

  }
  return v3;
}

void sub_1BC7A66F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9C50)
  {
    sub_1BC7A67A4();
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BA4E0);
    sub_1BC6E1788(&qword_1ED6BA408, (uint64_t (*)(uint64_t))sub_1BC7A67A4, MEMORY[0x1E0C95F48]);
    sub_1BC7619BC();
    v0 = sub_1BC817680();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9C50);
  }
}

void sub_1BC7A67A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B9C58)
  {
    v0 = sub_1BC817758();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B9C58);
  }
}

uint64_t type metadata accessor for DiskHealthExperienceStore.MutableState()
{
  uint64_t result;

  result = qword_1ED6BA2E8;
  if (!qword_1ED6BA2E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC7A6848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA290, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1BC7A68A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA528)
  {
    type metadata accessor for DiskHealthExperienceStore.MutableState();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA528);
  }
}

uint64_t DiskHealthExperienceStore.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_1BC7A6934()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 32);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC7ABE54(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1BC7A6990()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  char v5;
  id v6;
  id v7;
  uint64_t result;

  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_currentQueue);
  v2 = objc_msgSend(v0, sel_mainQueue);
  v3 = v2;
  if (v1)
  {
    if (v2)
    {
      sub_1BC6ED7C0(0, &qword_1ED6B64F8);
      v4 = v1;
      v5 = sub_1BC8180D0();

      if ((v5 & 1) == 0)
        goto LABEL_9;
LABEL_6:
      v6 = sub_1BC7A73E4();
      v7 = objc_msgSend(v6, sel_viewContext);

      return (uint64_t)v7;
    }
    v3 = v1;
  }
  else if (!v2)
  {
    goto LABEL_6;
  }

LABEL_9:
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t sub_1BC7A6ADC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 32);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC7ABF3C(v2, &v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_1BC7A6B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v0 = sub_1BC816E40();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v15 - v6;
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v15 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v15 - v11;
  type metadata accessor for StorageLocations();
  static StorageLocations.homeMobileDirectory.getter();
  sub_1BC816DC8();
  v13 = *(void (**)(char *, uint64_t))(v1 + 8);
  v13(v4, v0);
  sub_1BC816DC8();
  v13(v7, v0);
  sub_1BC816DD4();
  v13(v10, v0);
  sub_1BC816DE0();
  return ((uint64_t (*)(char *, uint64_t))v13)(v12, v0);
}

id sub_1BC7A6CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v0 = sub_1BC816E40();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7A6EB4((uint64_t)v3);
  v4 = objc_allocWithZone(MEMORY[0x1E0C97C08]);
  v5 = (void *)sub_1BC816DBC();
  v6 = objc_msgSend(v4, sel_initWithURL_, v5);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1BC6ED7C0(0, &qword_1ED6BA520);
  v7 = (void *)sub_1BC8180B8();
  objc_msgSend(v6, sel_setOption_forKey_, v7, *MEMORY[0x1E0C97900]);

  v8 = (void *)sub_1BC8180B8();
  objc_msgSend(v6, sel_setOption_forKey_, v8, *MEMORY[0x1E0C97970]);

  sub_1BC817AE8();
  v9 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setOption_forKey_, v9, *MEMORY[0x1E0C97940]);

  v10 = (void *)sub_1BC8180B8();
  objc_msgSend(v6, sel_setOption_forKey_, v10, *MEMORY[0x1E0C979D8]);

  return v6;
}

id sub_1BC7A6E74()
{
  id v0;
  id v1;

  v0 = sub_1BC7A73E4();
  v1 = objc_msgSend(v0, sel_persistentStoreCoordinator);

  return v1;
}

uint64_t sub_1BC7A6EB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  id v20;
  void *v21;
  unsigned int v22;
  id v23;
  uint64_t result;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  unint64_t v29;
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v3 = sub_1BC816E40();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA290, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - v15;
  v17 = *(_QWORD *)(v1 + 32);
  v18 = (os_unfair_lock_s *)(v17 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v17 + 24));
  v19 = *(_QWORD *)(v17 + 16)
      + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_overrideStoreLocation;
  swift_beginAccess();
  sub_1BC71A13C(v19, (uint64_t)v16);
  os_unfair_lock_unlock(v18);
  sub_1BC71A13C((uint64_t)v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v14, 1, v3) != 1)
    goto LABEL_3;
  sub_1BC7AFBE4((uint64_t)v14, (uint64_t)&qword_1ED6BA290, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
  sub_1BC7A6B38();
  v20 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1BC816DEC();
  v21 = (void *)sub_1BC816DBC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  v28 = 0;
  v22 = objc_msgSend(v20, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v28);

  v23 = v28;
  v14 = v9;
  if (!v22)
  {
    v25 = v23;
    v26 = sub_1BC816D5C();

    swift_willThrow();
    v28 = 0;
    v29 = 0xE000000000000000;
    sub_1BC8182C8();
    swift_bridgeObjectRelease();
    v28 = (id)0xD00000000000002ALL;
    v29 = 0x80000001BC829B50;
    v27 = v26;
    sub_1BC6E1878();
    sub_1BC817B00();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    result = sub_1BC8184B4();
    __break(1u);
  }
  else
  {
LABEL_3:
    sub_1BC7AFBE4((uint64_t)v16, (uint64_t)&qword_1ED6BA290, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v14, v3);
  }
  return result;
}

id sub_1BC7A71F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id result;
  void *v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *v0;
  v3 = type metadata accessor for FileMonitorPublisher();
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = (id)(*(uint64_t (**)(uint64_t))(v2 + 240))(v4);
  if (!v1)
  {
    v8 = (void *)v0[5];
    v0[5] = result;

    v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
    v16 = v2;
    v10 = *MEMORY[0x1E0C97968];
    v11 = sub_1BC7A73E4();
    v12 = objc_msgSend(v11, sel_persistentStoreCoordinator);

    v13 = v0;
    v14 = v16;
    objc_msgSend(v9, sel_addObserver_selector_name_object_, v13, sel_mergeExternalChanges, v10, v12);

    result = objc_msgSend((id)objc_opt_self(), sel_isAppleInternalInstall);
    if ((_DWORD)result)
    {
      sub_1BC7A6B38();
      sub_1BC817FEC();
      *(_DWORD *)v6 = -1;
      *((_QWORD *)v6 + 1) = 0;
      *(_QWORD *)(swift_allocObject() + 16) = v14;
      sub_1BC6E1788((unint64_t *)&unk_1ED6BA3C8, (uint64_t (*)(uint64_t))type metadata accessor for FileMonitorPublisher, (uint64_t)&protocol conformance descriptor for FileMonitorPublisher);
      sub_1BC81783C();
      swift_release();
      swift_release();
      return (id)sub_1BC7AEC80((uint64_t)v6);
    }
  }
  return result;
}

uint64_t type metadata accessor for DiskHealthExperienceStore()
{
  return objc_opt_self();
}

id sub_1BC7A73E4()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;

  v1 = *(void **)(v0 + 40);
  if (v1)
  {
    v2 = *(id *)(v0 + 40);
  }
  else
  {
    v3 = (void *)sub_1BC7AC474(v0);
    v4 = *(void **)(v0 + 40);
    *(_QWORD *)(v0 + 40) = v3;
    v2 = v3;

    v1 = 0;
  }
  v5 = v1;
  return v2;
}

void sub_1BC7A743C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = a1;

}

void (*sub_1BC7A7448(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = sub_1BC7A73E4();
  return sub_1BC7A747C;
}

void sub_1BC7A747C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = v2;

}

id sub_1BC7A748C()
{
  id v0;
  id v1;
  id v2;

  v0 = sub_1BC7A73E4();
  v1 = objc_msgSend(v0, sel_newBackgroundContext);

  objc_msgSend(v1, sel_setAutomaticallyMergesChangesFromParent_, 1);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97BA8]), sel_initWithMergeType_, 1);
  objc_msgSend(v1, sel_setMergePolicy_, v2);

  return v1;
}

void sub_1BC7A7510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  _BOOL4 v13;
  uint8_t *v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;

  v2 = v0;
  sub_1BC7AA3C4((char *)&v19);
  if (!v1)
  {
    v3 = v19;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v4 = sub_1BC817590();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED6BB5D0);
    v5 = sub_1BC81756C();
    v6 = sub_1BC817E9C();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v19 = v8;
      *(_DWORD *)v7 = 136446210;
      v9 = sub_1BC817AF4();
      sub_1BC6E14D8(v9, v10, &v19);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v5, v6, "destroyStoreIfNeededAndMakePersistentContainer - storeState: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v8, -1, -1);
      MEMORY[0x1BCCF5BA4](v7, -1, -1);
    }

    v11 = sub_1BC81756C();
    v12 = sub_1BC817E9C();
    v13 = os_log_type_enabled(v11, v12);
    if ((v3 - 1) > 1)
    {
      if (v13)
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_1BC6DD000, v11, v12, "destroyStoreIfNeededAndMakePersistentContainer - fast path", v18, 2u);
        MEMORY[0x1BCCF5BA4](v18, -1, -1);
      }

      LOBYTE(v19) = v3;
      sub_1BC7A8498((unsigned __int8 *)&v19, 1);
    }
    else
    {
      if (v13)
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_1BC6DD000, v11, v12, "destroyStoreIfNeededAndMakePersistentContainer - safe path", v14, 2u);
        MEMORY[0x1BCCF5BA4](v14, -1, -1);
      }

      v15 = sub_1BC81756C();
      v16 = sub_1BC817E9C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_1BC6DD000, v15, v16, "destroyStoreIfNeededAndMakePersistentContainer - removeAllFeedItemNotifications", v17, 2u);
        MEMORY[0x1BCCF5BA4](v17, -1, -1);
      }

      sub_1BC7A7F50();
      LOBYTE(v19) = v3;
      (*(void (**)(uint64_t *, uint64_t))(*(_QWORD *)v2 + 288))(&v19, 1);
    }
  }
}

void sub_1BC7A7844()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  os_unfair_lock_s *v6;
  uint64_t *v7;
  os_unfair_lock_s *v8;
  unint64_t v9;
  id v10;
  unint64_t v11;

  v1 = v0;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6BB5D0);
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BC6DD000, v3, v4, "deleteAllObjects - removeAllFeedItemNotifications", v5, 2u);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
  }

  sub_1BC7A7F50();
  v6 = (os_unfair_lock_s *)v1[4];
  v7 = (uint64_t *)&v6[4];
  v8 = v6 + 6;
  os_unfair_lock_lock(v6 + 6);
  sub_1BC7ABF3C(v7, (uint64_t *)&v11);
  os_unfair_lock_unlock(v8);
  v9 = v11;
  v10 = (id)(*(uint64_t (**)(void))(*v1 + 120))();
  sub_1BC7A79E0(v9, v10);
  swift_bridgeObjectRelease();

}

void sub_1BC7A7984()
{
  sub_1BC7A7844();
  sub_1BC8184B4();
  __break(1u);
}

id sub_1BC7A79E0(unint64_t a1, void *a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t (*i)();
  uint64_t (*v5)();
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  id result;
  void *v13;
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  void *v20;
  char isEscapingClosureAtFileLocation;
  uint64_t (*v22)();
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t aBlock;
  uint64_t v33;
  uint64_t (*v34)(uint64_t);
  void *v35;
  uint64_t (*v36)();
  uint64_t v37;

  v2 = a1;
  if (a1 >> 62)
    goto LABEL_15;
  v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (i = swift_weakDestroy; v3; i = swift_weakDestroy)
  {
    v5 = 0;
    v28 = v2 & 0xC000000000000001;
    v6 = 4;
    v7 = *((_QWORD *)i + 187);
    v27 = v2;
    while (1)
    {
      v8 = v6 - 4;
      if (!v28)
        break;
      v9 = (id)MEMORY[0x1BCCF4FB0](v6 - 4, v2);
      v10 = v6 - 3;
      if (__OFADD__(v8, 1))
        goto LABEL_13;
LABEL_9:
      v31 = v10;
      v11 = v9;
      result = objc_msgSend(v9, sel_name);
      if (!result)
        goto LABEL_19;
      v13 = result;
      sub_1BC817AE8();

      v14 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
      v15 = (void *)sub_1BC817AC4();
      swift_bridgeObjectRelease();
      v16 = objc_msgSend(v14, sel_initWithEntityName_, v15);

      objc_msgSend(v16, sel_setIncludesPropertyValues_, 0);
      v17 = (_QWORD *)swift_allocObject();
      v17[2] = a2;
      v17[3] = v16;
      v17[4] = v30;
      v2 = a2;
      v18 = v16;
      swift_retain();
      sub_1BC6F748C((uint64_t)v5);
      v19 = swift_allocObject();
      *(_QWORD *)(v19 + 16) = sub_1BC7AFC60;
      *(_QWORD *)(v19 + 24) = v17;
      v36 = sub_1BC6EF990;
      v37 = v19;
      aBlock = MEMORY[0x1E0C809B0];
      v33 = v7;
      v34 = sub_1BC6E0C04;
      v35 = &block_descriptor_25;
      v20 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      objc_msgSend((id)v2, sel_performBlockAndWait_, v20);

      _Block_release(v20);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) != 0)
        goto LABEL_14;
      ++v6;
      v5 = sub_1BC7AFC60;
      v2 = v27;
      if (v31 == v3)
      {
        swift_bridgeObjectRelease();
        v22 = sub_1BC7AFC60;
        goto LABEL_17;
      }
    }
    v9 = *(id *)(v2 + 8 * v6);
    v10 = v6 - 3;
    if (!__OFADD__(v8, 1))
      goto LABEL_9;
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v3 = sub_1BC8184E4();
  }
  swift_bridgeObjectRelease();
  v22 = 0;
LABEL_17:
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a2;
  *(_QWORD *)(v23 + 24) = v30;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1BC7AFCA8;
  *(_QWORD *)(v24 + 24) = v23;
  v36 = sub_1BC75BF20;
  v37 = v24;
  aBlock = MEMORY[0x1E0C809B0];
  v33 = 1107296256;
  v34 = sub_1BC6E0C04;
  v35 = &block_descriptor_35;
  v25 = _Block_copy(&aBlock);
  v26 = a2;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v26, sel_performBlockAndWait_, v25);
  _Block_release(v25);
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  sub_1BC6F748C((uint64_t)v22);
  result = (id)swift_release();
  if ((v26 & 1) != 0)
  {
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

void sub_1BC7A7DC0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  uint64_t v8;

  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v0 = sub_1BC817590();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6BB5D0);
  v1 = sub_1BC81756C();
  v2 = sub_1BC817E9C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = sub_1BC818814();
    sub_1BC6E14D8(v5, v6, &v8);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v1, v2, "%s destroyPersistentContainerDescription", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v4, -1, -1);
    MEMORY[0x1BCCF5BA4](v3, -1, -1);
  }

  sub_1BC7A7F50();
  v7 = sub_1BC7A6CD4();
  sub_1BC80C41C();

}

uint64_t sub_1BC7A7F50()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v1 = v0;
  v2 = *(os_unfair_lock_s **)(v0 + 32);
  v3 = v2 + 4;
  v4 = v2 + 6;
  os_unfair_lock_lock(v2 + 6);
  sub_1BC7AC9A8(v3, &v11);
  os_unfair_lock_unlock(v4);
  v5 = *(_QWORD *)(v11 + 16);
  if (v5)
  {
    v6 = (uint64_t *)(v11 + 40);
    do
    {
      v7 = *v6;
      ObjectType = swift_getObjectType();
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
      swift_unknownObjectRetain();
      v9(v1, ObjectType, v7);
      swift_unknownObjectRelease();
      v6 += 2;
      --v5;
    }
    while (v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7A8010(char *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char v14;
  id v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t result;
  id v25;
  uint64_t v26;
  id aBlock;
  unint64_t v28;
  uint64_t (*v29)(uint64_t);
  void *v30;
  uint64_t (*v31)();
  uint64_t v32;
  id v33;
  id v34;
  _QWORD v35[2];

  v2 = v1;
  v35[1] = *MEMORY[0x1E0C80C00];
  v4 = sub_1BC816E40();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v26 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26 - v12;
  v14 = *a1;
  v34 = 0;
  v35[0] = 0;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3600]), sel_init);
  type metadata accessor for StorageLocations();
  static StorageLocations.homeMobileDirectory.getter();
  sub_1BC816DC8();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  sub_1BC816DC8();
  v16(v11, v4);
  v17 = sub_1BC816DBC();
  v16(v13, v4);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v35;
  *(_QWORD *)(v18 + 24) = v2;
  *(_BYTE *)(v18 + 32) = v14;
  *(_QWORD *)(v18 + 40) = &v34;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1BC7AECE0;
  *(_QWORD *)(v19 + 24) = v18;
  v31 = sub_1BC6E15EC;
  v32 = v19;
  aBlock = (id)MEMORY[0x1E0C809B0];
  v28 = 1107296256;
  v29 = sub_1BC7ACB64;
  v30 = &block_descriptor_20;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock = 0;
  objc_msgSend(v15, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v17, 8, &aBlock, v20);
  _Block_release(v20);

  v21 = aBlock;
  LOBYTE(v17) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v17 & 1) != 0)
    __break(1u);
  if (v34)
  {
    v22 = v34;
    swift_willThrow();

    v23 = (void *)v35[0];
    swift_release();

    return (uint64_t)v21;
  }
  if (v21)
  {
    aBlock = 0;
    v28 = 0xE000000000000000;
    sub_1BC8182C8();
    v33 = v2;
    type metadata accessor for DiskHealthExperienceStore();
    sub_1BC8183E8();
    sub_1BC817B48();
    v33 = v21;
    sub_1BC7AED08(0, (unint64_t *)&unk_1EF45C500, (unint64_t *)&qword_1ED6BA830, 0x1E0CB35C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    v25 = v21;
    sub_1BC817AF4();
    sub_1BC817B48();
    swift_bridgeObjectRelease();
  }
  else
  {
    v21 = (id)v35[0];
    if (v35[0])
    {
      swift_release();
      return (uint64_t)v21;
    }
    aBlock = 0;
    v28 = 0xE000000000000000;
    sub_1BC8182C8();
    v33 = v2;
    type metadata accessor for DiskHealthExperienceStore();
    sub_1BC8183E8();
    sub_1BC817B48();
  }
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t sub_1BC7A8498(unsigned __int8 *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  _BYTE *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  id v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  NSObject *v67;
  os_log_type_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  id v72;
  id v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  NSObject *v78;
  os_log_type_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  id v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  id v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  _BYTE *v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  NSObject *v102;
  os_log_type_t v103;
  uint8_t *v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  id v109;
  id v110;
  id v111;
  id v112;
  unint64_t v113;
  uint64_t v114;
  NSObject *v115;
  os_log_type_t v116;
  uint8_t *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  id v122;
  id v123;
  unint64_t v124;
  id v125;
  void *v126;
  id v127;
  uint64_t v128;
  os_unfair_lock_s *v129;
  uint64_t v130;
  void *v131;
  id v132;
  uint64_t v133;
  NSObject *v134;
  os_log_type_t v135;
  uint64_t v136;
  id v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t result;
  id v143;
  id v144;
  id v145;
  id v146;
  os_log_type_t type;
  id v148;
  id v149;
  void *v150;
  void *v151;
  int v152;
  int v153;
  uint64_t v154;
  void *v155;
  void *v156;
  void *v157;
  _QWORD *v159;
  uint64_t v160;
  id v161;
  id v162;
  uint64_t v163;
  unint64_t v164;
  _QWORD aBlock[7];
  id v166;

  v4 = v3;
  v5 = (uint64_t)v2;
  v160 = *v2;
  v6 = *a1;
  if (v6 == 2)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v7 = sub_1BC817590();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED6BB5D0);
    v8 = sub_1BC81756C();
    v9 = sub_1BC817E9C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1BC6DD000, v8, v9, "The store version does not exist or does not match the current version. Deleting Database.", v10, 2u);
      MEMORY[0x1BCCF5BA4](v10, -1, -1);
    }

    sub_1BC7A7DC0();
  }
  v11 = qword_1ED6B9C38;
  swift_retain();
  if (v11 != -1)
    swift_once();
  v12 = (id)qword_1ED6C1BE0;
  swift_release();
  v13 = objc_allocWithZone(MEMORY[0x1E0C97BC8]);
  v14 = (void *)sub_1BC817AC4();
  v15 = objc_msgSend(v13, sel_initWithName_managedObjectModel_, v14, v12);

  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1BC81A120;
  v17 = v15;
  *(_QWORD *)(v16 + 32) = sub_1BC7A6CD4();
  sub_1BC817C74();
  sub_1BC6ED7C0(0, &qword_1ED6BA4F8);
  v18 = (void *)sub_1BC817C50();
  swift_bridgeObjectRelease();
  objc_msgSend(v17, sel_setPersistentStoreDescriptions_, v18);

  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  aBlock[4] = sub_1BC7AFCE4;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC73D764;
  aBlock[3] = &block_descriptor_41;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v17, sel_loadPersistentStoresWithCompletionHandler_, v20);
  _Block_release(v20);

  swift_beginAccess();
  v21 = *(void **)(v19 + 16);
  v161 = (id)v5;
  if (!v21)
    goto LABEL_64;
  v154 = v4;
  v155 = v17;
  v22 = v21;
  v23 = (uint64_t)objc_msgSend(v22, sel_code);
  if (v23 <= 134109)
  {
    if (v23 != 11)
    {
      if (v23 != 256)
        goto LABEL_39;
      if ((sub_1BC7AD144() & 0x1FFFFFFFFLL) == 0x17)
      {
        sub_1BC7AED68();
        v35 = (id)swift_allocError();
        *v36 = 1;
        swift_willThrow();
        swift_release();

        return (uint64_t)v35;
      }
      if ((sub_1BC7AD144() & 0x1FFFFFFFFLL) == 0x120A || (sub_1BC7AD144() & 0x1FFFFFFFFLL) == 0xD)
      {
        if (qword_1ED6BB5B0 != -1)
          swift_once();
        v77 = sub_1BC817590();
        __swift_project_value_buffer(v77, (uint64_t)qword_1ED6BB5D0);
        v35 = v22;
        v78 = sub_1BC81756C();
        v79 = sub_1BC817E84();
        if (os_log_type_enabled(v78, v79))
        {
          v80 = swift_slowAlloc();
          v159 = (_QWORD *)swift_slowAlloc();
          v162 = (id)swift_slowAlloc();
          v166 = v162;
          *(_DWORD *)v80 = 136315394;
          swift_getMetatypeMetadata();
          v81 = sub_1BC817AF4();
          sub_1BC6E14D8(v81, v82, (uint64_t *)&v166);
          sub_1BC818148();
          swift_bridgeObjectRelease();
          *(_WORD *)(v80 + 12) = 2112;
          v163 = (uint64_t)v35;
          v83 = v35;
          sub_1BC818148();
          *v159 = v21;

          _os_log_impl(&dword_1BC6DD000, v78, v79, "[%s] Received a CoreData error %@", (uint8_t *)v80, 0x16u);
          sub_1BC7AED08(0, (unint64_t *)&qword_1ED6BA800, (unint64_t *)&qword_1ED6BB280, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v159, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v162, -1, -1);
          MEMORY[0x1BCCF5BA4](v80, -1, -1);

        }
        else
        {

        }
        sub_1BC7AED68();
        swift_allocError();
        *v97 = 2;
        swift_willThrow();
        swift_release();

        return (uint64_t)v35;
      }
LABEL_96:
      v163 = 0;
      v164 = 0xE000000000000000;
      sub_1BC8182C8();
      v166 = (id)v5;
      type metadata accessor for DiskHealthExperienceStore();
      sub_1BC8183E8();
      sub_1BC817B48();
      v145 = objc_msgSend(v22, sel_description);
      sub_1BC817AE8();

      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      v166 = objc_msgSend(v22, sel_code);
      sub_1BC818670();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      v146 = objc_msgSend(v22, sel_userInfo);
      sub_1BC817A34();

      sub_1BC817A40();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_97;
    }
    if ((sub_1BC7AD144() & 0x1FFFFFFFFLL) != 0xB)
      goto LABEL_96;
    if ((a2 & 1) == 0)
    {
      v163 = 0;
      v164 = 0xE000000000000000;
      sub_1BC8182C8();
      v166 = (id)v5;
      type metadata accessor for DiskHealthExperienceStore();
      sub_1BC8183E8();
      sub_1BC817B48();
      goto LABEL_97;
    }
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v51 = sub_1BC817590();
    __swift_project_value_buffer(v51, (uint64_t)qword_1ED6BB5D0);
    v52 = sub_1BC81756C();
    v53 = sub_1BC817E84();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      v55 = (id)swift_slowAlloc();
      v166 = v55;
      *(_DWORD *)v54 = 136315138;
      swift_getMetatypeMetadata();
      v56 = sub_1BC817AF4();
      v163 = sub_1BC6E14D8(v56, v57, (uint64_t *)&v166);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v52, v53, "[%s] SQLITE_CORRUPT: CORRUPTION DETECTED", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v55, -1, -1);
      MEMORY[0x1BCCF5BA4](v54, -1, -1);
    }

    v58 = sub_1BC81756C();
    v59 = sub_1BC817E84();
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v61 = (id)swift_slowAlloc();
      v166 = v61;
      *(_DWORD *)v60 = 136315138;
      swift_getMetatypeMetadata();
      v62 = sub_1BC817AF4();
      v163 = sub_1BC6E14D8(v62, v63, (uint64_t *)&v166);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v58, v59, "[%s] Attempting to recover by destroying persistent store and regenerating", v60, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v61, -1, -1);
      MEMORY[0x1BCCF5BA4](v60, -1, -1);
    }

    v35 = v155;
    sub_1BC7A7DC0();
    LOBYTE(v163) = v6;
    v64 = sub_1BC7A8498(&v163, 0);
    if (v154)
    {
      swift_release();

      return (uint64_t)v35;
    }
    v17 = (id)v64;

    v91 = sub_1BC81756C();
    v92 = sub_1BC817E84();
    if (os_log_type_enabled(v91, v92))
    {
      v93 = (uint8_t *)swift_slowAlloc();
      v94 = swift_slowAlloc();
      v163 = v94;
      *(_DWORD *)v93 = 136315138;
      v95 = sub_1BC734AE0();
      v166 = (id)sub_1BC6E14D8(v95, v96, &v163);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v91, v92, "[%s] Successfully recreated Core Data persistent store", v93, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v94, -1, -1);
      MEMORY[0x1BCCF5BA4](v93, -1, -1);

    }
    else
    {

    }
    v4 = 0;
LABEL_64:
    v157 = v17;
    if ((v6 - 1) >= 2)
    {
      if (v6 != 3)
      {
LABEL_78:
        v122 = objc_msgSend(v17, sel_persistentStoreCoordinator);
        v123 = objc_msgSend(v122, sel_persistentStores);

        sub_1BC6ED7C0(0, &qword_1ED6B9C80);
        v124 = sub_1BC817C5C();

        v125 = objc_msgSend(v17, sel_persistentStoreCoordinator);
        sub_1BC7EB738(v124);
        swift_bridgeObjectRelease();
        v126 = (void *)sub_1BC817C50();
        swift_bridgeObjectRelease();
        v127 = objc_msgSend(v125, sel_currentPersistentHistoryTokenFromStores_, v126);

        v128 = *(_QWORD *)(v5 + 32);
        v129 = (os_unfair_lock_s *)(v128 + 24);
        os_unfair_lock_lock((os_unfair_lock_t)(v128 + 24));
        v130 = *(_QWORD *)(v128 + 16);
        v131 = *(void **)(v130 + 24);
        *(_QWORD *)(v130 + 24) = v127;
        v132 = v127;

        if (!v4)
        {
          os_unfair_lock_unlock(v129);
          if (qword_1ED6BB5B0 != -1)
            swift_once();
          v133 = sub_1BC817590();
          __swift_project_value_buffer(v133, (uint64_t)qword_1ED6BB5D0);
          v134 = sub_1BC81756C();
          v135 = sub_1BC817E9C();
          if (os_log_type_enabled(v134, v135))
          {
            v136 = swift_slowAlloc();
            v137 = (id)swift_slowAlloc();
            v166 = v137;
            *(_DWORD *)v136 = 136315394;
            v163 = v160;
            swift_getMetatypeMetadata();
            v138 = sub_1BC817AF4();
            v163 = sub_1BC6E14D8(v138, v139, (uint64_t *)&v166);
            sub_1BC818148();
            swift_bridgeObjectRelease();
            *(_WORD *)(v136 + 12) = 2080;
            if ((a2 & 1) != 0)
              v140 = 0x7972746572;
            else
              v140 = 0x7972746572206F6ELL;
            if ((a2 & 1) != 0)
              v141 = 0xE500000000000000;
            else
              v141 = 0xE800000000000000;
            v163 = sub_1BC6E14D8(v140, v141, (uint64_t *)&v166);
            sub_1BC818148();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1BC6DD000, v134, v135, "[%s] unsafeMakePersistentContainer(retryOnFailure: %s)", (uint8_t *)v136, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1BCCF5BA4](v137, -1, -1);
            MEMORY[0x1BCCF5BA4](v136, -1, -1);
          }

          v35 = v157;
          sub_1BC7AF658(v157);
          swift_release();

          return (uint64_t)v35;
        }
        os_unfair_lock_unlock(v129);
        __break(1u);
        goto LABEL_92;
      }
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v98 = sub_1BC817590();
      __swift_project_value_buffer(v98, (uint64_t)qword_1ED6BB5D0);
      v99 = sub_1BC81756C();
      v100 = sub_1BC817E9C();
      if (os_log_type_enabled(v99, v100))
      {
        v101 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v101 = 0;
        _os_log_impl(&dword_1BC6DD000, v99, v100, "destroyStoreIfNeededAndMakePersistentContainer - removeAllFeedItemNotifications", v101, 2u);
        MEMORY[0x1BCCF5BA4](v101, -1, -1);
      }

      sub_1BC7A7F50();
      v102 = sub_1BC81756C();
      v103 = sub_1BC817E9C();
      if (os_log_type_enabled(v102, v103))
      {
        v104 = (uint8_t *)swift_slowAlloc();
        v105 = swift_slowAlloc();
        v163 = v105;
        *(_DWORD *)v104 = 136315138;
        LOBYTE(v166) = 3;
        v106 = sub_1BC817AF4();
        v166 = (id)sub_1BC6E14D8(v106, v107, &v163);
        sub_1BC818148();
        v5 = (uint64_t)v161;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v102, v103, "destroyStoreIfNeededAndMakePersistentContainer - wiping data due to storeState %s", v104, 0xCu);
        swift_arrayDestroy();
        v108 = v105;
        v17 = v157;
        MEMORY[0x1BCCF5BA4](v108, -1, -1);
        MEMORY[0x1BCCF5BA4](v104, -1, -1);
      }

      v109 = objc_msgSend(v17, sel_newBackgroundContext);
      objc_msgSend(v109, sel_setAutomaticallyMergesChangesFromParent_, 1);
      v110 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97BA8]), sel_initWithMergeType_, 1);
      objc_msgSend(v109, sel_setMergePolicy_, v110);

      v111 = objc_msgSend(v17, sel_managedObjectModel);
      v112 = objc_msgSend(v111, sel_entities);

      sub_1BC6ED7C0(0, &qword_1EF45C598);
      v113 = sub_1BC817C5C();

      sub_1BC7A79E0(v113, v109);
      swift_bridgeObjectRelease();
    }
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v114 = sub_1BC817590();
    __swift_project_value_buffer(v114, (uint64_t)qword_1ED6BB5D0);
    v115 = sub_1BC81756C();
    v116 = sub_1BC817E9C();
    if (os_log_type_enabled(v115, v116))
    {
      v117 = (uint8_t *)swift_slowAlloc();
      v118 = swift_slowAlloc();
      v163 = v118;
      *(_DWORD *)v117 = 136315138;
      LOBYTE(v166) = v6;
      v119 = sub_1BC817AF4();
      v166 = (id)sub_1BC6E14D8(v119, v120, &v163);
      sub_1BC818148();
      v5 = (uint64_t)v161;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v115, v116, "destroyStoreIfNeededAndMakePersistentContainer - updating metadata due to storeState %s", v117, 0xCu);
      swift_arrayDestroy();
      v121 = v118;
      v17 = v157;
      MEMORY[0x1BCCF5BA4](v121, -1, -1);
      MEMORY[0x1BCCF5BA4](v117, -1, -1);
    }

    sub_1BC7AF104(v17);
    goto LABEL_78;
  }
  if (v23 != 134110 && v23 != 134190 && v23 != 134170)
  {
LABEL_39:
    if ((a2 & 1) == 0)
    {
      v163 = 0;
      v164 = 0xE000000000000000;
      sub_1BC8182C8();
      v166 = (id)v5;
      type metadata accessor for DiskHealthExperienceStore();
      sub_1BC8183E8();
      sub_1BC817B48();
      v143 = objc_msgSend(v22, sel_description);
      sub_1BC817AE8();

      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      v144 = objc_msgSend(v22, sel_userInfo);
      sub_1BC817A34();

      sub_1BC817A40();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_97;
    }
    v153 = v6;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v65 = sub_1BC817590();
    __swift_project_value_buffer(v65, (uint64_t)qword_1ED6BB5D0);
    v66 = v22;
    v67 = sub_1BC81756C();
    v68 = sub_1BC817E84();
    v150 = v66;
    if (os_log_type_enabled(v67, v68))
    {
      v69 = swift_slowAlloc();
      v149 = (id)swift_slowAlloc();
      v166 = v149;
      *(_DWORD *)v69 = 136315394;
      swift_getMetatypeMetadata();
      v70 = sub_1BC817AF4();
      sub_1BC6E14D8(v70, v71, (uint64_t *)&v166);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v69 + 12) = 2082;
      v72 = v66;
      v73 = objc_msgSend(v72, sel_description);
      v74 = sub_1BC817AE8();
      v76 = v75;

      v163 = sub_1BC6E14D8(v74, v76, (uint64_t *)&v166);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v67, v68, "[%s] UNKNOWN CORE DATA ERROR DETECTED: %{public}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v149, -1, -1);
      MEMORY[0x1BCCF5BA4](v69, -1, -1);

    }
    else
    {

    }
    v4 = v154;
    v84 = sub_1BC81756C();
    v85 = sub_1BC817E84();
    if (os_log_type_enabled(v84, v85))
    {
      v86 = (uint8_t *)swift_slowAlloc();
      v87 = (id)swift_slowAlloc();
      v166 = v87;
      *(_DWORD *)v86 = 136315138;
      swift_getMetatypeMetadata();
      v88 = sub_1BC817AF4();
      v163 = sub_1BC6E14D8(v88, v89, (uint64_t *)&v166);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v84, v85, "[%s] Attempting to recover by destroying persistent store and regenerating", v86, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v87, -1, -1);
      MEMORY[0x1BCCF5BA4](v86, -1, -1);
    }

    v5 = (uint64_t)v161;
    v6 = v153;
    v35 = v155;
    v43 = v150;
    sub_1BC7A7DC0();
    LOBYTE(v163) = v153;
    v90 = sub_1BC7A8498(&v163, 0);
    if (!v154)
    {
      v17 = (id)v90;

      goto LABEL_64;
    }
LABEL_56:
    swift_release();

    return (uint64_t)v35;
  }
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v24 = sub_1BC817590();
  __swift_project_value_buffer(v24, (uint64_t)qword_1ED6BB5D0);
  v25 = v22;
  v26 = sub_1BC81756C();
  v27 = sub_1BC817E84();
  v152 = v6;
  v151 = v25;
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v148 = (id)swift_slowAlloc();
    v166 = v148;
    *(_DWORD *)v28 = 136315394;
    swift_getMetatypeMetadata();
    type = v27;
    v29 = sub_1BC817AF4();
    sub_1BC6E14D8(v29, v30, (uint64_t *)&v166);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    v31 = objc_msgSend(v25, sel_userInfo);
    sub_1BC817A34();

    v32 = sub_1BC817A40();
    v34 = v33;
    swift_bridgeObjectRelease();
    v163 = sub_1BC6E14D8(v32, v34, (uint64_t *)&v166);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v26, type, "[%s] Migration error when loading Core Data persistent store: %s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v148, -1, -1);
    MEMORY[0x1BCCF5BA4](v28, -1, -1);

  }
  else
  {

  }
  v4 = v154;
  if ((a2 & 1) != 0)
  {
    v37 = sub_1BC81756C();
    v38 = sub_1BC817E6C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      v40 = (id)swift_slowAlloc();
      v166 = v40;
      *(_DWORD *)v39 = 136315138;
      swift_getMetatypeMetadata();
      v41 = sub_1BC817AF4();
      v163 = sub_1BC6E14D8(v41, v42, (uint64_t *)&v166);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v37, v38, "[%s] Attempting to recover by destroying persistent store and regenerating", v39, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v40, -1, -1);
      MEMORY[0x1BCCF5BA4](v39, -1, -1);
    }

    v6 = v152;
    v35 = v155;
    v43 = v151;
    sub_1BC7A7DC0();
    LOBYTE(v163) = v152;
    v44 = sub_1BC7A8498(&v163, 0);
    if (!v154)
    {
      v156 = (void *)v44;

      v45 = sub_1BC81756C();
      v46 = sub_1BC817E6C();
      if (os_log_type_enabled(v45, v46))
      {
        v47 = (uint8_t *)swift_slowAlloc();
        v48 = (id)swift_slowAlloc();
        v166 = v48;
        *(_DWORD *)v47 = 136315138;
        v163 = v160;
        swift_getMetatypeMetadata();
        v49 = sub_1BC817AF4();
        v163 = sub_1BC6E14D8(v49, v50, (uint64_t *)&v166);
        v4 = 0;
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v45, v46, "[%s] Successfully recreated Core Data persistent store", v47, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v48, -1, -1);
        MEMORY[0x1BCCF5BA4](v47, -1, -1);

      }
      else
      {

      }
      v17 = v156;
      goto LABEL_64;
    }
    goto LABEL_56;
  }
LABEL_92:
  v163 = 0;
  v164 = 0xE000000000000000;
  sub_1BC8182C8();
  v166 = v161;
  type metadata accessor for DiskHealthExperienceStore();
  sub_1BC8183E8();
  sub_1BC817B48();
LABEL_97:
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

void sub_1BC7AA3C4(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  void (*v19)(_QWORD, _QWORD);
  void *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  id v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(_BYTE *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char v55;
  id v56;
  void *v57;
  void *v58;
  uint64_t v59;
  id v60;
  NSObject *v61;
  os_log_type_t v62;
  uint64_t v63;
  id v64;
  _QWORD *v65;
  NSObject *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  id v85;
  void *v86;
  unsigned __int8 v87;
  uint64_t v88;
  NSObject *v89;
  os_log_type_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  os_log_type_t v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  os_log_type_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _BYTE v127[4];
  int v128;
  uint64_t v129;
  void (*v130)(_QWORD *, uint64_t);
  uint64_t v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _BYTE *v137;
  NSObject *v138;
  char *v139;
  id v140;
  unint64_t v141;
  __int128 v142;
  __int128 v143;
  uint64_t v144;

  v139 = a1;
  v144 = *MEMORY[0x1E0C80C00];
  v136 = sub_1BC816FCC();
  v2 = *(_QWORD *)(v136 - 8);
  v3 = MEMORY[0x1E0C80A78](v136);
  v135 = &v127[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v3);
  v6 = &v127[-v5];
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA290, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v127[-v8];
  v10 = sub_1BC816E40();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = &v127[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v137 = &v127[-v15];
  v16 = v1;
  v17 = sub_1BC7A6CD4();
  v18 = objc_msgSend(v17, sel_URL);

  if (!v18)
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_18;
  }
  sub_1BC816DF8();

  v19 = *(void (**)(_QWORD, _QWORD))(v11 + 32);
  ((void (*)(_BYTE *, _BYTE *, uint64_t))v19)(v9, v14, v10);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_18:
    sub_1BC7AFBE4((uint64_t)v9, (uint64_t)&qword_1ED6BA290, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v42 = sub_1BC817590();
    __swift_project_value_buffer(v42, (uint64_t)qword_1ED6BB5D0);
    v43 = sub_1BC81756C();
    v44 = sub_1BC817E84();
    if (os_log_type_enabled(v43, v44))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      *(_QWORD *)&v142 = v46;
      *(_DWORD *)v45 = 136315138;
      v140 = (id)sub_1BC6E14D8(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v142);
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, v43, v44, "%s no url, store doesn't exist, storeState=.missing", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v46, -1, -1);
      MEMORY[0x1BCCF5BA4](v45, -1, -1);

      *v139 = 1;
      return;
    }

    v47 = 1;
    goto LABEL_23;
  }
  v133 = v10;
  v134 = v11;
  v19(v137, v9);
  v20 = (void *)objc_opt_self();
  v21 = (id)*MEMORY[0x1E0C979E8];
  v22 = (void *)sub_1BC816DBC();
  *(_QWORD *)&v142 = 0;
  v23 = objc_msgSend(v20, sel_metadataForPersistentStoreOfType_URL_options_error_, v21, v22, 0, &v142);

  v24 = (void *)v142;
  if (!v23)
  {
    v56 = (id)v142;
    v57 = (void *)sub_1BC816D5C();

    swift_willThrow();
    v58 = (void *)sub_1BC816D50();
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v59 = sub_1BC817590();
    __swift_project_value_buffer(v59, (uint64_t)qword_1ED6BB5D0);
    v60 = v58;
    v61 = sub_1BC81756C();
    v62 = sub_1BC817E84();
    v138 = v61;
    if (os_log_type_enabled(v61, v62))
    {
      v63 = swift_slowAlloc();
      v135 = (_QWORD *)swift_slowAlloc();
      v136 = swift_slowAlloc();
      *(_QWORD *)&v142 = v136;
      *(_DWORD *)v63 = 136315394;
      v140 = (id)sub_1BC6E14D8(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v142);
      sub_1BC818148();
      *(_WORD *)(v63 + 12) = 2112;
      v140 = v60;
      v64 = v60;
      sub_1BC818148();
      v65 = v135;
      *v135 = v60;

      v66 = v138;
      _os_log_impl(&dword_1BC6DD000, v138, v62, "%s could not get metadata for store with error %@)", (uint8_t *)v63, 0x16u);
      sub_1BC7AED08(0, (unint64_t *)&qword_1ED6BA800, (unint64_t *)&qword_1ED6BB280, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v65, -1, -1);
      v67 = v136;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v67, -1, -1);
      MEMORY[0x1BCCF5BA4](v63, -1, -1);

    }
    else
    {

    }
    v76 = v133;
    v75 = v134;
    if ((sub_1BC7AD144() & 0x1FFFFFFFFLL) == 0x17)
    {
      v77 = 1;
    }
    else
    {
      if ((sub_1BC7AD144() & 0x1FFFFFFFFLL) != 0x120A && (sub_1BC7AD144() & 0x1FFFFFFFFLL) != 0xD)
      {

        v79 = sub_1BC81756C();
        v80 = sub_1BC817E84();
        if (os_log_type_enabled(v79, v80))
        {
          v81 = (uint8_t *)swift_slowAlloc();
          v82 = v75;
          v83 = swift_slowAlloc();
          *(_QWORD *)&v142 = v83;
          *(_DWORD *)v81 = 136315138;
          v140 = (id)sub_1BC6E14D8(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v142);
          sub_1BC818148();
          _os_log_impl(&dword_1BC6DD000, v79, v80, "%s no metadata, storeState=.needsUpgrade", v81, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v83, -1, -1);
          MEMORY[0x1BCCF5BA4](v81, -1, -1);

          (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v137, v76);
        }
        else
        {

          (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v137, v76);
        }
        *v139 = 2;
        return;
      }
      v77 = 2;
    }
    sub_1BC7AED68();
    swift_allocError();
    *v78 = v77;
    swift_willThrow();

    (*(void (**)(_BYTE *, uint64_t))(v75 + 8))(v137, v76);
    return;
  }
  v25 = sub_1BC817A34();
  v26 = v24;

  if (!*(_QWORD *)(v25 + 16) || (v27 = sub_1BC706608(0xD000000000000023, 0x80000001BC826480), (v28 & 1) == 0))
  {
    v30 = v134;
    goto LABEL_25;
  }
  sub_1BC6E1A84(*(_QWORD *)(v25 + 56) + 32 * v27, (uint64_t)&v142);
  v29 = swift_dynamicCast();
  v30 = v134;
  if ((v29 & 1) == 0)
  {
LABEL_25:
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v48 = sub_1BC817590();
    __swift_project_value_buffer(v48, (uint64_t)qword_1ED6BB5D0);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    v49 = sub_1BC81756C();
    v50 = sub_1BC817E9C();
    if (!os_log_type_enabled(v49, v50))
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(_BYTE *, uint64_t))(v30 + 8))(v137, v133);
LABEL_43:
      *v139 = 2;
      return;
    }
    v51 = swift_slowAlloc();
    v136 = swift_slowAlloc();
    v140 = (id)v136;
    *(_DWORD *)v51 = 136315906;
    v52 = DiskHealthExperienceStore.debugDescription.getter();
    *(_QWORD *)&v142 = sub_1BC6E14D8(v52, v53, (uint64_t *)&v140);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 12) = 2080;
    *(_QWORD *)&v142 = sub_1BC6E14D8(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v140);
    sub_1BC818148();
    *(_WORD *)(v51 + 22) = 2080;
    if (*(_QWORD *)(v25 + 16) && (v54 = sub_1BC706608(0xD000000000000023, 0x80000001BC826480), (v55 & 1) != 0))
    {
      sub_1BC6E1A84(*(_QWORD *)(v25 + 56) + 32 * v54, (uint64_t)&v142);
    }
    else
    {
      v142 = 0u;
      v143 = 0u;
    }
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B9DE0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v68 = sub_1BC817AF4();
    *(_QWORD *)&v142 = sub_1BC6E14D8(v68, v69, (uint64_t *)&v140);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v51 + 32) = 2080;
    if (*(_QWORD *)(v25 + 16) && (v70 = sub_1BC706608(0xD000000000000022, 0x80000001BC8296F0), (v71 & 1) != 0))
    {
      sub_1BC6E1A84(*(_QWORD *)(v25 + 56) + 32 * v70, (uint64_t)&v142);
    }
    else
    {
      v142 = 0u;
      v143 = 0u;
    }
    v72 = sub_1BC817AF4();
    *(_QWORD *)&v142 = sub_1BC6E14D8(v72, v73, (uint64_t *)&v140);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v49, v50, "%s %s storeState=.needsUpgrade, storeVersion=%s, storeLocale=%s", (uint8_t *)v51, 0x2Au);
    v74 = v136;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v74, -1, -1);
    MEMORY[0x1BCCF5BA4](v51, -1, -1);
LABEL_42:

    (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v137, v133);
    goto LABEL_43;
  }
  v31 = v141;
  if (!*(_QWORD *)(v25 + 16)
    || (v32 = (uint64_t)v140, v33 = sub_1BC706608(0xD000000000000022, 0x80000001BC8296F0), (v34 & 1) == 0)
    || (sub_1BC6E1A84(*(_QWORD *)(v25 + 56) + 32 * v33, (uint64_t)&v142), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  swift_bridgeObjectRelease();
  v35 = v141;
  v132 = v140;
  if (qword_1ED6B9C18 != -1)
    swift_once();
  if (__PAIR128__(v31, v32) != xmmword_1ED6B9C00 && (sub_1BC818694() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v107 = sub_1BC817590();
    __swift_project_value_buffer(v107, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    swift_bridgeObjectRetain();
    v49 = sub_1BC81756C();
    v108 = sub_1BC817E9C();
    v109 = v108;
    if (os_log_type_enabled(v49, v108))
    {
      v110 = swift_slowAlloc();
      v131 = v32;
      v111 = v110;
      v136 = swift_slowAlloc();
      *(_QWORD *)&v142 = v136;
      *(_DWORD *)v111 = 136315906;
      LODWORD(v135) = v109;
      v112 = DiskHealthExperienceStore.debugDescription.getter();
      v140 = (id)sub_1BC6E14D8(v112, v113, (uint64_t *)&v142);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v111 + 12) = 2080;
      v140 = (id)sub_1BC6E14D8(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v142);
      sub_1BC818148();
      *(_WORD *)(v111 + 22) = 2080;
      v114 = xmmword_1ED6B9C00;
      swift_bridgeObjectRetain();
      v140 = (id)sub_1BC6E14D8(v114, *((unint64_t *)&v114 + 1), (uint64_t *)&v142);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v111 + 32) = 2080;
      swift_bridgeObjectRetain();
      v140 = (id)sub_1BC6E14D8(v131, v31, (uint64_t *)&v142);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v49, (os_log_type_t)v135, "%s %s storeState=.needsUpgrade due to mismatch in storeVersion: requiredVersion=%s, currentVersion=%s", (uint8_t *)v111, 0x2Au);
      v115 = v136;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v115, -1, -1);
      MEMORY[0x1BCCF5BA4](v111, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v137, v133);
      *v139 = 2;
      return;
    }
    swift_release_n();
    swift_bridgeObjectRelease_n();
    goto LABEL_42;
  }
  v131 = v32;
  sub_1BC816F9C();
  v36 = sub_1BC7ACBF8();
  v38 = v37;
  v39 = *(void (**)(_BYTE *, uint64_t))(v2 + 8);
  v39(v6, v136);
  if (v132 == (id)v36 && v35 == v38)
  {
    v40 = swift_bridgeObjectRelease();
    v41 = v16;
  }
  else
  {
    v84 = sub_1BC818694();
    v40 = swift_bridgeObjectRelease();
    v41 = v16;
    if ((v84 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v116 = sub_1BC817590();
      __swift_project_value_buffer(v116, (uint64_t)qword_1ED6BB5D0);
      swift_retain_n();
      swift_bridgeObjectRetain();
      v89 = sub_1BC81756C();
      v117 = sub_1BC817E9C();
      v118 = v117;
      if (!os_log_type_enabled(v89, v117))
      {
        swift_release_n();
        swift_bridgeObjectRelease_n();
LABEL_81:

        (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v137, v133);
        v47 = 3;
LABEL_23:
        *v139 = v47;
        return;
      }
      v119 = swift_slowAlloc();
      v131 = swift_slowAlloc();
      *(_QWORD *)&v142 = v131;
      *(_DWORD *)v119 = 136315906;
      v130 = (void (*)(_QWORD *, uint64_t))v39;
      LODWORD(v129) = v118;
      v120 = DiskHealthExperienceStore.debugDescription.getter();
      v140 = (id)sub_1BC6E14D8(v120, v121, (uint64_t *)&v142);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v119 + 12) = 2080;
      v140 = (id)sub_1BC6E14D8(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v142);
      sub_1BC818148();
      *(_WORD *)(v119 + 22) = 2080;
      swift_bridgeObjectRetain();
      v140 = (id)sub_1BC6E14D8((uint64_t)v132, v35, (uint64_t *)&v142);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v119 + 32) = 2080;
      v122 = v135;
      sub_1BC816F9C();
      v123 = sub_1BC7ACBF8();
      v125 = v124;
      v130(v122, v136);
      v140 = (id)sub_1BC6E14D8(v123, v125, (uint64_t *)&v142);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v89, (os_log_type_t)v129, "%s %s storeState=.needsDataWipe due to mismatch in locale: storeLocale=%s, Locale.current=%s", (uint8_t *)v119, 0x2Au);
      v126 = v131;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v126, -1, -1);
      MEMORY[0x1BCCF5BA4](v119, -1, -1);

      (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v137, v133);
      *v139 = 3;
      return;
    }
  }
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v41 + 112))(v40) & 1) == 0)
  {
    v85 = objc_msgSend((id)objc_opt_self(), sel_sharedBehavior);
    if (!v85)
    {
      __break(1u);
      return;
    }
    v86 = v85;
    v87 = objc_msgSend(v85, sel_healthAppHiddenOrNotInstalled);

    if ((v87 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v88 = sub_1BC817590();
      __swift_project_value_buffer(v88, (uint64_t)qword_1ED6BB5D0);
      swift_retain_n();
      v89 = sub_1BC81756C();
      v90 = sub_1BC817E9C();
      if (os_log_type_enabled(v89, v90))
      {
        v91 = swift_slowAlloc();
        v92 = swift_slowAlloc();
        *(_QWORD *)&v142 = v92;
        *(_DWORD *)v91 = 136315394;
        v93 = DiskHealthExperienceStore.debugDescription.getter();
        v140 = (id)sub_1BC6E14D8(v93, v94, (uint64_t *)&v142);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v91 + 12) = 2080;
        v140 = (id)sub_1BC6E14D8(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v142);
        sub_1BC818148();
        _os_log_impl(&dword_1BC6DD000, v89, v90, "%s %s storeState=.needsDataWipe due health app installation state", (uint8_t *)v91, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v92, -1, -1);
        MEMORY[0x1BCCF5BA4](v91, -1, -1);
      }
      else
      {
        swift_release_n();
      }
      goto LABEL_81;
    }
  }
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v95 = sub_1BC817590();
  __swift_project_value_buffer(v95, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v96 = sub_1BC81756C();
  v97 = sub_1BC817E9C();
  v98 = v97;
  if (os_log_type_enabled(v96, v97))
  {
    v99 = swift_slowAlloc();
    v129 = swift_slowAlloc();
    *(_QWORD *)&v142 = v129;
    *(_DWORD *)v99 = 136316162;
    v130 = (void (*)(_QWORD *, uint64_t))v39;
    v128 = v98;
    v100 = DiskHealthExperienceStore.debugDescription.getter();
    v140 = (id)sub_1BC6E14D8(v100, v101, (uint64_t *)&v142);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v99 + 12) = 2080;
    v140 = (id)sub_1BC6E14D8(0x65726F7453746567, 0xEF29286574617453, (uint64_t *)&v142);
    sub_1BC818148();
    *(_WORD *)(v99 + 22) = 2080;
    swift_bridgeObjectRetain();
    v140 = (id)sub_1BC6E14D8(v131, v31, (uint64_t *)&v142);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v99 + 32) = 2080;
    swift_bridgeObjectRetain();
    v140 = (id)sub_1BC6E14D8((uint64_t)v132, v35, (uint64_t *)&v142);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v99 + 42) = 2080;
    v102 = v135;
    sub_1BC816F9C();
    v103 = sub_1BC7ACBF8();
    v105 = v104;
    v130(v102, v136);
    v140 = (id)sub_1BC6E14D8(v103, v105, (uint64_t *)&v142);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v96, (os_log_type_t)v128, "%s %s storeState=.ready, storeVersion=%s, storeLocale=%s, Locale.current=%s", (uint8_t *)v99, 0x34u);
    v106 = v129;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v106, -1, -1);
    MEMORY[0x1BCCF5BA4](v99, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(_BYTE *, uint64_t))(v134 + 8))(v137, v133);
  *v139 = 0;
}

void sub_1BC7ABB34(uint64_t a1, uint64_t a2)
{
  sub_1BC7ABB4C(a1, a2, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t))sub_1BC7AD408);
}

void sub_1BC7ABB40(uint64_t a1, uint64_t a2)
{
  sub_1BC7ABB4C(a1, a2, (void (*)(os_unfair_lock_s *, uint64_t, uint64_t))sub_1BC7AD5C4);
}

void sub_1BC7ABB4C(uint64_t a1, uint64_t a2, void (*a3)(os_unfair_lock_s *, uint64_t, uint64_t))
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  os_unfair_lock_s *v9;

  v7 = *(os_unfair_lock_s **)(v3 + 32);
  v8 = v7 + 4;
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  a3(v8, a1, a2);
  os_unfair_lock_unlock(v9);
}

BOOL static DiskHealthExperienceStore.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DiskHealthExperienceStore.State.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t DiskHealthExperienceStore.State.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t sub_1BC7ABC34()
{
  uint64_t v0;

  sub_1BC7AFBE4(v0+ OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_overrideStoreLocation, (uint64_t)&qword_1ED6BA290, (uint64_t)MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
  swift_release();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

_QWORD *sub_1BC7ABCC4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA290, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - v1;
  v3 = sub_1BC816E40();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for DiskHealthExperienceStore();
  v4 = swift_allocObject();
  result = DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)((uint64_t)v2, 1);
  qword_1ED6BA300 = v4;
  return result;
}

uint64_t DiskHealthExperienceStore.__allocating_init(overrideStoreLocation:observeExternalChanges:)(uint64_t a1, int a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  DiskHealthExperienceStore.init(overrideStoreLocation:observeExternalChanges:)(a1, a2);
  return v4;
}

uint64_t static DiskHealthExperienceStore.shared.getter()
{
  if (qword_1ED6B99D0 != -1)
    swift_once();
  return swift_retain();
}

unint64_t static DiskHealthExperienceStore.diskHealthExperienceStoreVersionKey.getter()
{
  return 0xD000000000000023;
}

unint64_t static DiskHealthExperienceStore.diskHealthExperienceStoreLocaleKey.getter()
{
  return 0xD000000000000022;
}

unint64_t static DiskHealthExperienceStore.disableSpotlightForSearchKey.getter()
{
  return 0xD000000000000019;
}

id sub_1BC7ABE54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  void *v10;

  v3 = *a1;
  v4 = OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext;
  v5 = *(void **)(*a1
                + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext);
  if (v5)
  {
    v6 = *(id *)(*a1
               + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_sharedBackgroundContext);
  }
  else
  {
    v7 = sub_1BC7A73E4();
    v8 = objc_msgSend(v7, sel_newBackgroundContext);

    objc_msgSend(v8, sel_setAutomaticallyMergesChangesFromParent_, 1);
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97BA8]), sel_initWithMergeType_, 1);
    objc_msgSend(v8, sel_setMergePolicy_, v9);

    v10 = *(void **)(v3 + v4);
    *(_QWORD *)(v3 + v4) = v8;
    v6 = v8;

    v5 = 0;
  }
  *a2 = v6;
  return v5;
}

uint64_t sub_1BC7ABF3C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;

  v3 = *a1;
  v4 = OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_allEntities;
  v5 = *(_QWORD *)(*a1
                 + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_allEntities);
  if (v5)
  {
    v6 = v5;
  }
  else
  {
    v7 = sub_1BC7A73E4();
    v8 = objc_msgSend(v7, sel_managedObjectModel);

    v9 = objc_msgSend(v8, sel_entities);
    sub_1BC6ED7C0(0, &qword_1EF45C598);
    v6 = sub_1BC817C5C();

    *(_QWORD *)(v3 + v4) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *a2 = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC7AC030()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC7AC084();
    return swift_release();
  }
  return result;
}

void sub_1BC7AC084()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v0 = sub_1BC817590();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v1 = sub_1BC81756C();
  v2 = sub_1BC817E9C();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v20 = v4;
    *(_DWORD *)v3 = 136315138;
    v5 = DiskHealthExperienceStore.debugDescription.getter();
    sub_1BC6E14D8(v5, v6, &v20);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v1, v2, "%s mergeExternalChanges() starting", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v4, -1, -1);
    MEMORY[0x1BCCF5BA4](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v7 = sub_1BC7A73E4();
  v8 = objc_msgSend(v7, sel_newBackgroundContext);

  do
    v9 = sub_1BC7ADAB0(v8);
  while (v9 == 1);
  v10 = (void *)v9;
  if (v9)
  {
    swift_retain();
    sub_1BC7AFD0C(v10);
    swift_retain();
    sub_1BC7AFD0C(v10);
    v11 = sub_1BC81756C();
    v12 = sub_1BC817E90();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = (_QWORD *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v20 = v18;
      *(_DWORD *)v13 = 136315394;
      v15 = DiskHealthExperienceStore.debugDescription.getter();
      sub_1BC6E14D8(v15, v16, &v20);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      v17 = v10;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      sub_1BC818148();
      *v14 = v19;
      sub_1BC7AFD1C(v10);
      sub_1BC7AFD1C(v10);
      _os_log_impl(&dword_1BC6DD000, v11, v12, "%s mergeExternalChanges() abandoning merge after too many errors: %@", (uint8_t *)v13, 0x16u);
      sub_1BC7AED08(0, (unint64_t *)&qword_1ED6BA800, (unint64_t *)&qword_1ED6BB280, 0x1E0DE7910, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v14, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v18, -1, -1);
      MEMORY[0x1BCCF5BA4](v13, -1, -1);

      sub_1BC7AFD1C(v10);
    }
    else
    {
      sub_1BC7AFD1C(v10);
      swift_release_n();
      sub_1BC7AFD1C(v10);
      sub_1BC7AFD1C(v10);

    }
  }
  else
  {

  }
}

uint64_t sub_1BC7AC474(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)a1 + 240))();
}

uint64_t sub_1BC7AC584(void *a1)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  sub_1BC73E0EC();
  v2 = sub_1BC8180AC();
  v3 = v2;
  if (v2 >> 62)
  {
    sub_1BC6ED7C0(0, &qword_1EF45AFE8);
    swift_bridgeObjectRetain();
    v11 = sub_1BC8184CC();
    swift_bridgeObjectRelease_n();
    v3 = v11;
  }
  else
  {
    v4 = v2 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    sub_1BC8186A0();
    sub_1BC6ED7C0(0, &qword_1EF45AFE8);
    if (swift_dynamicCastMetatype() || (v9 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) == 0)
    {
LABEL_3:
      swift_bridgeObjectRelease();
    }
    else
    {
      v10 = v4 + 32;
      while (1)
      {
        objc_opt_self();
        if (!swift_dynamicCastObjCClass())
          break;
        v10 += 8;
        if (!--v9)
          goto LABEL_3;
      }
      swift_bridgeObjectRelease();
      v3 = v4 | 1;
    }
  }
  if (!(v3 >> 62))
  {
    v5 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
      goto LABEL_6;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  v5 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  if (!v5)
    return swift_bridgeObjectRelease();
LABEL_6:
  if (v5 >= 1)
  {
    for (i = 0; i != v5; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1BCCF4FB0](i, v3);
      else
        v7 = *(id *)(v3 + 8 * i + 32);
      v8 = v7;
      objc_msgSend(a1, sel_deleteObject_, v7);

    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  sub_1BC8182C8();
  type metadata accessor for DiskHealthExperienceStore();
  sub_1BC8183E8();
  sub_1BC817B48();
  sub_1BC6E1878();
  sub_1BC8183E8();
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

id sub_1BC7AC844(void *a1)
{
  id result;
  id v2;
  id v3[4];

  v3[3] = *(id *)MEMORY[0x1E0C80C00];
  v3[0] = 0;
  if (objc_msgSend(a1, sel_save_, v3))
    return v3[0];
  v2 = v3[0];
  sub_1BC816D5C();

  swift_willThrow();
  v3[0] = 0;
  v3[1] = (id)0xE000000000000000;
  sub_1BC8182C8();
  type metadata accessor for DiskHealthExperienceStore();
  sub_1BC8183E8();
  sub_1BC817B48();
  sub_1BC6E1878();
  sub_1BC8183E8();
  result = (id)sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t sub_1BC7AC9A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void (*v9)(__int128 *__return_ptr, uint64_t);
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  _QWORD *v14;
  __int128 v15;
  __int128 v16;

  v3 = *a1
     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_observers;
  result = swift_beginAccess();
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = v5 + 40;
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v9 = *(void (**)(__int128 *__return_ptr, uint64_t))(v7 - 8);
      v10 = swift_retain();
      v9(&v16, v10);
      swift_release();
      if ((_QWORD)v16)
      {
        v15 = v16;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v8 = sub_1BC726024(0, v8[2] + 1, 1, v8);
        v12 = v8[2];
        v11 = v8[3];
        v13 = v15;
        if (v12 >= v11 >> 1)
        {
          v14 = sub_1BC726024((_QWORD *)(v11 > 1), v12 + 1, 1, v8);
          v13 = v15;
          v8 = v14;
        }
        v8[2] = v12 + 1;
        *(_OWORD *)&v8[2 * v12 + 4] = v13;
      }
      v7 += 16;
      --v6;
    }
    while (v6);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  *a2 = v8;
  return result;
}

void sub_1BC7ACAF4(uint64_t a1, void **a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v5;
  void *v6;
  unsigned __int8 v7;

  v7 = a4;
  v5 = sub_1BC7A8498(&v7, 1);
  v6 = *a2;
  *a2 = (void *)v5;

}

uint64_t sub_1BC7ACB64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void (*v6)(char *);
  uint64_t v8;

  v2 = sub_1BC816E40();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(void (**)(char *))(a1 + 32);
  sub_1BC816DF8();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1BC7ACBF8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v37[2];
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BC6ECA64(0, &qword_1ED6B9BF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v37 - v3;
  v5 = sub_1BC816FB4();
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1ED6BA2A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], v1);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v37 - v9;
  v11 = sub_1BC816FCC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = objc_msgSend((id)objc_opt_self(), sel_preferredLanguages);
  v16 = (_QWORD *)sub_1BC817C5C();

  v17 = v16[2];
  v39 = v4;
  if (!v17)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v0, v11);
LABEL_5:
    v37[1] = v0;
    sub_1BC816FC0();
    sub_1BC816FA8();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v7, v5);
    v21 = sub_1BC816F6C();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v21) == 1)
    {
      sub_1BC7AFBE4((uint64_t)v10, (uint64_t)&qword_1ED6BA2A0, (uint64_t)MEMORY[0x1E0CB0AE8], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
      v18 = 0xE200000000000000;
      v20 = 28261;
    }
    else
    {
      v20 = sub_1BC816F60();
      v18 = v23;
      (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v21);
    }
    goto LABEL_8;
  }
  v19 = v16[4];
  v18 = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v0, v11);
  if (!v18)
    goto LABEL_5;
  v20 = v19;
LABEL_8:
  v24 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_1BC816F90();
  v25 = sub_1BC816F84();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) == 1)
  {
    sub_1BC7AFBE4(v24, (uint64_t)&qword_1ED6B9BF8, (uint64_t)MEMORY[0x1E0CB0C48], (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6ECA64);
    v27 = 0xE200000000000000;
    v28 = 21333;
  }
  else
  {
    v28 = sub_1BC816F60();
    v27 = v29;
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  }
  v42 = v20;
  v43 = v18;
  v40 = 45;
  v41 = 0xE100000000000000;
  sub_1BC738B38();
  v30 = (_QWORD *)sub_1BC818160();
  if (v30[2] < 2uLL)
    goto LABEL_18;
  v32 = v30[4];
  v31 = v30[5];
  v34 = v30[6];
  v33 = v30[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v34 != v28 || v33 != v27)
  {
    v35 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v35 & 1) != 0)
      goto LABEL_17;
LABEL_18:
    swift_bridgeObjectRelease();
    v42 = v20;
    v43 = v18;
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
LABEL_17:
  swift_bridgeObjectRelease();
  v42 = v32;
  v43 = v31;
LABEL_19:
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return v42;
}

id sub_1BC7AD008(void *a1)
{
  id result;
  id v2;
  id v3[2];

  v3[1] = *(id *)MEMORY[0x1E0C80C00];
  v3[0] = 0;
  if (objc_msgSend(a1, sel_save_, v3))
    return v3[0];
  v2 = v3[0];
  sub_1BC816D5C();

  swift_willThrow();
  result = (id)sub_1BC8184B4();
  __break(1u);
  return result;
}

void sub_1BC7AD0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;

  if (a2)
    v4 = sub_1BC816D50();
  else
    v4 = 0;
  swift_beginAccess();
  v5 = *(void **)(a3 + 16);
  *(_QWORD *)(a3 + 16) = v4;

}

unint64_t sub_1BC7AD144()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unsigned int v8;
  unsigned __int8 v9;
  uint64_t v10;
  id v12;
  __int128 v13;
  __int128 v14;

  v1 = objc_msgSend(v0, sel_userInfo);
  v2 = MEMORY[0x1E0DEE9B8];
  v3 = sub_1BC817A34();

  v4 = sub_1BC817AE8();
  if (!*(_QWORD *)(v3 + 16) || (v6 = sub_1BC706608(v4, v5), (v7 & 1) == 0))
  {
    v13 = 0u;
    v14 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1BC6E1A84(*(_QWORD *)(v3 + 56) + 32 * v6, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v14 + 1))
  {
LABEL_7:
    sub_1BC7AFBE4((uint64_t)&v13, (uint64_t)&qword_1ED6B9DE0, v2 + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6E1E98);
    goto LABEL_8;
  }
  sub_1BC6ED7C0(0, &qword_1ED6BA520);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_8:
    v10 = 0;
    v9 = 1;
    return v10 | ((unint64_t)v9 << 32);
  }
  v8 = objc_msgSend(v12, sel_intValue);

  v9 = 0;
  v10 = v8;
  return v10 | ((unint64_t)v9 << 32);
}

void sub_1BC7AD2A4(void *a1)
{
  id v1;

  v1 = objc_msgSend(a1, sel_viewContext);
  objc_msgSend(v1, sel_setAutomaticallyMergesChangesFromParent_, 1);

}

uint64_t DiskHealthExperienceStore.debugDescription.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v5[2];

  v1 = *(os_unfair_lock_s **)(v0 + 32);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC7AD790(v2, v5);
  os_unfair_lock_unlock(v3);
  v5[0] = 0;
  v5[1] = 0xE000000000000000;
  sub_1BC818814();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC8183E8();
  sub_1BC817B48();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  return v5[0];
}

uint64_t sub_1BC7AD408(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *__return_ptr, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD v19[3];

  v5 = *a1
     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_observers;
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v8 = v6 + 40;
    do
    {
      v9 = *(void (**)(_QWORD *__return_ptr, uint64_t))(v8 - 8);
      v10 = swift_retain();
      v9(v19, v10);
      v11 = v19[0];
      swift_release();
      if (v11)
      {
        swift_unknownObjectRelease();
        if (v11 == a2)
          return swift_bridgeObjectRelease();
      }
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 24) = a3;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  v14 = *(_QWORD **)v5;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v5 = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v14 = sub_1BC72613C(0, v14[2] + 1, 1, v14);
    *(_QWORD *)v5 = v14;
  }
  v17 = v14[2];
  v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    v14 = sub_1BC72613C((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
    *(_QWORD *)v5 = v14;
  }
  v14[2] = v17 + 1;
  v18 = &v14[2 * v17];
  v18[4] = sub_1BC7AFB90;
  v18[5] = v13;
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC7AD5C4(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int64_t v6;

  v3 = *a1
     + OBJC_IVAR____TtCC14HealthPlatform25DiskHealthExperienceStoreP33_1ADB8C54860F87AD2EA0C72047ADEDD912MutableState_observers;
  swift_beginAccess();
  swift_unknownObjectRetain();
  v4 = sub_1BC7AF978(v3, a2);
  result = swift_unknownObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (v6 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_1BC753AD8(v4, v6);
    return swift_endAccess();
  }
  return result;
}

uint64_t DiskHealthExperienceStore.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC7AD6A4()
{
  return sub_1BC7A6990();
}

uint64_t sub_1BC7AD6C4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 120))();
}

id sub_1BC7AD6EC()
{
  return sub_1BC7A73E4();
}

id sub_1BC7AD70C()
{
  id v0;
  id v1;

  v0 = sub_1BC7A73E4();
  v1 = objc_msgSend(v0, sel_persistentStoreCoordinator);

  return v1;
}

id sub_1BC7AD750()
{
  return sub_1BC7A6CD4();
}

id sub_1BC7AD770()
{
  return sub_1BC7A71F0();
}

void sub_1BC7AD790(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(void **)(*(_QWORD *)a1 + 24);
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_description);
    v5 = sub_1BC817AE8();
    v7 = v6;

  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

uint64_t sub_1BC7AD808()
{
  return DiskHealthExperienceStore.debugDescription.getter();
}

void sub_1BC7AD828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;

  v0 = sub_1BC816E40();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v4 = sub_1BC817590();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED6BB5D0);
  v12 = sub_1BC81756C();
  v5 = sub_1BC817E84();
  if (os_log_type_enabled(v12, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v14 = v7;
    *(_DWORD *)v6 = 136315138;
    sub_1BC7A6B38();
    sub_1BC6E1788((unint64_t *)&qword_1EF45BB50, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v8 = sub_1BC818670();
    v10 = v9;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    v13 = sub_1BC6E14D8(v8, v10, &v14);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v12, v5, "Store cache file has been deleted! Store File URL: %s", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v7, -1, -1);
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
  }

}

uint64_t sub_1BC7ADAB0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t result;
  uint64_t v17;
  uint64_t aBlock[6];
  uint64_t v19;

  v2 = v1;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v4 = sub_1BC817590();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED6BB5D0);
  swift_retain_n();
  v5 = sub_1BC81756C();
  v6 = sub_1BC817E9C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    aBlock[0] = v8;
    *(_DWORD *)v7 = 136315138;
    v9 = DiskHealthExperienceStore.debugDescription.getter();
    v19 = sub_1BC6E14D8(v9, v10, aBlock);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v5, v6, "%s mergeExternalChangesUsing(tempMoc:) merging", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v8, -1, -1);
    MEMORY[0x1BCCF5BA4](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v11 = sub_1BC7ADD78();
  v19 = 0;
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = v2;
  v12[3] = a1;
  v12[4] = v11;
  v12[5] = &v19;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = sub_1BC7AFD60;
  *(_QWORD *)(v13 + 24) = v12;
  aBlock[4] = (uint64_t)sub_1BC75BF20;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC6E0C04;
  aBlock[3] = (uint64_t)&block_descriptor_67;
  v14 = _Block_copy(aBlock);
  swift_retain();
  v15 = a1;
  swift_retain();
  swift_release();
  objc_msgSend(v15, sel_performBlockAndWait_, v14);
  _Block_release(v14);
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((v15 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v17 = v19;
    swift_release();
    return v17;
  }
  return result;
}

uint64_t sub_1BC7ADD78()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  unsigned int v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v36;

  v1 = v0;
  if (((*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))() & 1) != 0)
  {
    v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v3 = (void *)sub_1BC817AC4();
    v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);

    if (v4)
    {
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v5 = sub_1BC817590();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED6BB5D0);
      swift_retain_n();
      v6 = sub_1BC81756C();
      v7 = sub_1BC817E9C();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = swift_slowAlloc();
        v36 = v9;
        *(_DWORD *)v8 = 136315138;
        v10 = DiskHealthExperienceStore.debugDescription.getter();
        sub_1BC6E14D8(v10, v11, &v36);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v6, v7, "%s mergeExternalChanges() viewContext then sharedBackgroundContext", v8, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v9, -1, -1);
        MEMORY[0x1BCCF5BA4](v8, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BC81D180;
      v28 = sub_1BC7A73E4();
      v29 = objc_msgSend(v28, sel_viewContext);

      *(_QWORD *)(v26 + 32) = v29;
      *(_QWORD *)(v26 + 40) = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 120))(v30, v31);
    }
    else
    {
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v19 = sub_1BC817590();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED6BB5D0);
      swift_retain_n();
      v20 = sub_1BC81756C();
      v21 = sub_1BC817E9C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v36 = v23;
        *(_DWORD *)v22 = 136315138;
        v24 = DiskHealthExperienceStore.debugDescription.getter();
        sub_1BC6E14D8(v24, v25, &v36);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v20, v21, "%s mergeExternalChanges() sharedBackgroundContext then viewContext", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v23, -1, -1);
        MEMORY[0x1BCCF5BA4](v22, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BC81D180;
      *(_QWORD *)(v26 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 120))(v26, v32);
      v33 = sub_1BC7A73E4();
      v34 = objc_msgSend(v33, sel_viewContext);

      *(_QWORD *)(v26 + 40) = v34;
    }
  }
  else
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v12 = sub_1BC817590();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED6BB5D0);
    swift_retain_n();
    v13 = sub_1BC81756C();
    v14 = sub_1BC817E9C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v36 = v16;
      *(_DWORD *)v15 = 136315138;
      v17 = DiskHealthExperienceStore.debugDescription.getter();
      sub_1BC6E14D8(v17, v18, &v36);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v13, v14, "%s mergeExternalChanges() Not running in the app - only merging to background context", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v16, -1, -1);
      MEMORY[0x1BCCF5BA4](v15, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1BC81A120;
    *(_QWORD *)(v26 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v0 + 120))(v26, v27);
  }
  v36 = v26;
  sub_1BC817C74();
  return v36;
}

void sub_1BC7AE3A8(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  void *v8;
  uint64_t v9;

  v8 = (void *)MEMORY[0x1BCCF5574]();
  sub_1BC7AE66C(a1, a2, a3, a4);
  objc_autoreleasePoolPop(v8);
  v9 = *(_QWORD *)(a1 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
  *(_BYTE *)(*(_QWORD *)(v9 + 16) + 16) = 0;
  os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
}

void sub_1BC7AE66C(uint64_t a1, void *a2, uint64_t a3, void **a4)
{
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  id v33;
  void *v36;
  void *v37;
  unint64_t v38;
  _OWORD v39[2];
  id v40[5];

  v40[4] = *(id *)MEMORY[0x1E0C80C00];
  v8 = *(_QWORD *)(a1 + 32);
  os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
  v9 = *(id *)(*(_QWORD *)(v8 + 16) + 24);
  if (v4)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
    __break(1u);
    goto LABEL_27;
  }
  v10 = v9;
  os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
  v11 = objc_msgSend((id)objc_opt_self(), sel_fetchHistoryAfterToken_, v10);
  objc_msgSend(v11, sel_setFetchLimit_, 50);
  v40[0] = 0;
  v12 = objc_msgSend(a2, sel_executeRequest_error_, v11, v40);
  v5 = v40[0];
  if (!v12)
  {
    v16 = v40[0];
    sub_1BC816D5C();

    swift_willThrow();
    v17 = v10;
LABEL_23:

    return;
  }
  v6 = v12;
  v37 = v10;
  objc_opt_self();
  v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {
LABEL_27:
    v33 = v5;

    v40[0] = 0;
    v40[1] = (id)0xE000000000000000;
    sub_1BC8182C8();
    type metadata accessor for DiskHealthExperienceStore();
    sub_1BC8183E8();
    sub_1BC817B48();
    sub_1BC8184B4();
    __break(1u);
    return;
  }
  v14 = (void *)v13;
  v15 = v5;
  if (objc_msgSend(v14, sel_result))
  {
    sub_1BC818178();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v39, 0, sizeof(v39));
  }
  sub_1BC7AFD7C((uint64_t)v39, (uint64_t)v40);
  if (!v40[3])
  {
    sub_1BC7AFBE4((uint64_t)v40, (uint64_t)&qword_1ED6B9DE0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, _QWORD))sub_1BC6E1E98);
    goto LABEL_17;
  }
  sub_1BC7AED08(0, &qword_1ED6BA448, &qword_1ED6BA500, 0x1E0C97BF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v25 = sub_1BC817590();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED6BB5D0);
    v17 = v6;
    v26 = sub_1BC81756C();
    v27 = sub_1BC817E90();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v36 = (void *)swift_slowAlloc();
      v40[0] = v36;
      *(_DWORD *)v28 = 134218242;
      *(_QWORD *)&v39[0] = objc_msgSend(v14, sel_resultType);
      sub_1BC818148();

      *(_WORD *)(v28 + 12) = 2080;
      v17 = v17;
      v29 = objc_msgSend(v14, sel_description);
      v30 = sub_1BC817AE8();
      v32 = v31;

      *(_QWORD *)&v39[0] = sub_1BC6E14D8(v30, v32, (uint64_t *)v40);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v26, v27, "could not get transactions from result of type %ld: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v36, -1, -1);
      MEMORY[0x1BCCF5BA4](v28, -1, -1);

    }
    else
    {

    }
    sub_1BC7AFDDC();
    swift_allocError();
    swift_willThrow();

    goto LABEL_23;
  }
  sub_1BC6ED8F8(v38, a3);
  if (v18)
  {
    v19 = v18;
    os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
    v20 = *(_QWORD *)(v8 + 16);
    v21 = *(void **)(v20 + 24);
    *(_QWORD *)(v20 + 24) = v19;

    v22 = v19;
    os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));

  }
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_1BC8184E4();

    swift_bridgeObjectRelease_n();
  }
  else
  {
    v23 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

  }
  if (v23 == 50)
  {
    v24 = *a4;
    *a4 = (void *)1;
    sub_1BC7AFD1C(v24);
  }
}

uint64_t sub_1BC7AEC18()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7AEC3C()
{
  return sub_1BC7AC030();
}

uint64_t sub_1BC7AEC44()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7AEC68()
{
  return swift_deallocObject();
}

void sub_1BC7AEC78()
{
  sub_1BC7AD828();
}

uint64_t sub_1BC7AEC80(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FileMonitorPublisher();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC7AECBC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC7AECE0(uint64_t a1)
{
  uint64_t v1;

  sub_1BC7ACAF4(a1, *(void ***)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1BC7AECF0()
{
  return swift_deallocObject();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

void sub_1BC7AED08(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC6ED7C0(255, a3);
    v9 = a5(a1, v8);
    if (!v10)
      atomic_store(v9, a2);
  }
}

unint64_t sub_1BC7AED68()
{
  unint64_t result;

  result = qword_1EF45C510;
  if (!qword_1EF45C510)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthExperienceStoreCreationError, &type metadata for HealthExperienceStoreCreationError);
    atomic_store(result, (unint64_t *)&qword_1EF45C510);
  }
  return result;
}

unint64_t sub_1BC7AEDB0()
{
  unint64_t result;

  result = qword_1EF45C520;
  if (!qword_1EF45C520)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for DiskHealthExperienceStore.State, &type metadata for DiskHealthExperienceStore.State);
    atomic_store(result, (unint64_t *)&qword_1EF45C520);
  }
  return result;
}

id sub_1BC7AEDF4@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = sub_1BC7A73E4();
  *a1 = result;
  return result;
}

void sub_1BC7AEE1C(void **a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*(_QWORD *)a2 + 40);
  *(_QWORD *)(*(_QWORD *)a2 + 40) = *a1;
  v3 = v2;

}

uint64_t dispatch thunk of DiskHealthExperienceStoreObserver.willDestroy(store:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for DiskHealthExperienceStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.isRunningInApplicationProcess.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.sharedBackgroundContext.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.viewContext.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.allEntities.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentStoreDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentStoreCoordinator.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.__allocating_init(overrideStoreLocation:observeExternalChanges:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.initPersistentContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentContainer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentContainer.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.persistentContainer.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.makeManagedObjectContext()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.destroyStoreIfNeededAndMakePersistentContainer()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.deleteAllObjects()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.obliterateAndExit(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.makePersistentContainer(currentStoreState:retryOnFailure:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.getStoreState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.register(observer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DiskHealthExperienceStore.unregister(observer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t storeEnumTagSinglePayload for DiskHealthExperienceStore.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC7AEFD0 + 4 * byte_1BC81FE05[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC7AF004 + 4 * byte_1BC81FE00[v4]))();
}

uint64_t sub_1BC7AF004(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7AF00C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7AF014);
  return result;
}

uint64_t sub_1BC7AF020(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7AF028);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC7AF02C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7AF034(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiskHealthExperienceStore.State()
{
  return &type metadata for DiskHealthExperienceStore.State;
}

uint64_t sub_1BC7AF050()
{
  return type metadata accessor for DiskHealthExperienceStore.MutableState();
}

void sub_1BC7AF058()
{
  unint64_t v0;

  sub_1BC6ECA64(319, (unint64_t *)&qword_1ED6BA290, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1BC7AF104(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  void *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  id v23;
  void *v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  __int128 aBlock;
  uint64_t (*v45)(uint64_t);
  void *v46;
  uint64_t (*v47)();
  uint64_t v48;
  uint64_t v49;
  _OWORD v50[2];

  v2 = sub_1BC816FCC();
  v42 = *(_QWORD *)(v2 - 8);
  v43 = v2;
  MEMORY[0x1E0C80A78](v2);
  v41 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  v5 = objc_msgSend(v4, sel_persistentStores);

  sub_1BC6ED7C0(0, &qword_1ED6B9C80);
  v6 = sub_1BC817C5C();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (!v7)
      goto LABEL_16;
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      goto LABEL_16;
  }
  if (v7 < 1)
    goto LABEL_18;
  v8 = 0;
  v38 = v6 & 0xC000000000000001;
  v9 = (void *)MEMORY[0x1E0DEA968];
  v37 = MEMORY[0x1E0DEE9B8] + 8;
  v34 = 0x80000001BC8296F0;
  v35 = 0x80000001BC826480;
  v39 = v7;
  v40 = v6;
  v36 = a1;
  do
  {
    if (v38)
      v10 = (id)MEMORY[0x1BCCF4FB0](v8, v6);
    else
      v10 = *(id *)(v6 + 8 * v8 + 32);
    v11 = v10;
    v12 = objc_msgSend(a1, sel_persistentStoreCoordinator, v34);
    v13 = objc_msgSend(v12, sel_metadataForPersistentStore_, v11);

    v14 = sub_1BC817A34();
    if (qword_1ED6B9C18 != -1)
      swift_once();
    v46 = v9;
    aBlock = xmmword_1ED6B9C00;
    sub_1BC6EFBDC(&aBlock, v50);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v49 = v14;
    sub_1BC71F4FC(v50, 0xD000000000000023, v35, isUniquelyReferenced_nonNull_native);
    v16 = v49;
    swift_bridgeObjectRelease();
    v17 = v9;
    v18 = v41;
    sub_1BC816F9C();
    v19 = sub_1BC7ACBF8();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v43);
    v46 = v17;
    *(_QWORD *)&aBlock = v19;
    *((_QWORD *)&aBlock + 1) = v21;
    sub_1BC6EFBDC(&aBlock, v50);
    v22 = swift_isUniquelyReferenced_nonNull_native();
    v49 = v16;
    sub_1BC71F4FC(v50, 0xD000000000000022, v34, v22);
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(a1, sel_persistentStoreCoordinator);
    v9 = v17;
    v24 = (void *)sub_1BC817A28();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_setMetadata_forPersistentStore_, v24, v11);

    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v25 = sub_1BC817590();
    __swift_project_value_buffer(v25, (uint64_t)qword_1ED6BB5D0);
    v26 = sub_1BC81756C();
    v27 = sub_1BC817E9C();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v28 = 0;
      _os_log_impl(&dword_1BC6DD000, v26, v27, "Saved new store version and localization for database.", v28, 2u);
      MEMORY[0x1BCCF5BA4](v28, -1, -1);
    }
    ++v8;

    v6 = v40;
    a1 = v36;
  }
  while (v39 != v8);
LABEL_16:
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(a1, sel_newBackgroundContext);
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v29;
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = sub_1BC7AFCEC;
  *(_QWORD *)(v31 + 24) = v30;
  v47 = sub_1BC75BF20;
  v48 = v31;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v45 = sub_1BC6E0C04;
  v46 = &block_descriptor_51_1;
  v32 = _Block_copy(&aBlock);
  v33 = v29;
  swift_retain();
  swift_release();
  objc_msgSend(v33, sel_performBlockAndWait_, v32);

  _Block_release(v32);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if ((v33 & 1) == 0)
    return;
  __break(1u);
LABEL_18:
  __break(1u);
}

void sub_1BC7AF658(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  char v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t (*v21)(uint64_t);
  void *v22;
  uint64_t v23;
  id v24;
  _QWORD aBlock[6];

  v3 = sub_1BC817950();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)sub_1BC817974();
  v8 = *(v7 - 1);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 112))(v9) & 1) != 0)
  {
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_currentQueue);
    v14 = objc_msgSend(v12, sel_mainQueue);
    v15 = v14;
    v24 = v7;
    if (v13)
    {
      if (v14)
      {
        sub_1BC6ED7C0(0, &qword_1ED6B64F8);
        v16 = v13;
        v17 = sub_1BC8180D0();

        if ((v17 & 1) == 0)
          goto LABEL_10;
LABEL_7:
        v24 = objc_msgSend(a1, sel_viewContext);
        objc_msgSend(v24, sel_setAutomaticallyMergesChangesFromParent_, 1);

        return;
      }
      v15 = v13;
    }
    else if (!v14)
    {
      goto LABEL_7;
    }

LABEL_10:
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
    v23 = sub_1BC817FB0();
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a1;
    aBlock[4] = sub_1BC7AFD04;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BC719640;
    aBlock[3] = &block_descriptor_57;
    v19 = _Block_copy(aBlock);
    v20 = a1;
    swift_release();
    sub_1BC817968();
    aBlock[0] = MEMORY[0x1E0DEE9D8];
    v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
    sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BA7D0, v21, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7188D8((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v21);
    sub_1BC818184();
    v22 = (void *)v23;
    MEMORY[0x1BCCF4C68](0, v11, v6, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, id))(v8 + 8))(v11, v24);
  }
}

uint64_t sub_1BC7AF978(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  void (*v8)(_QWORD *__return_ptr, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v15;
  void (*v16)(_QWORD *__return_ptr, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  __int128 v23;
  _QWORD v24[2];

  v2 = *(_QWORD **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if (!v3)
    return 0;
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = 0;
  while (1)
  {
    v8 = (void (*)(_QWORD *__return_ptr, uint64_t))v2[v6 + 4];
    v9 = swift_retain();
    v8(v24, v9);
    v10 = v24[0];
    swift_release();
    if (v10)
    {
      swift_unknownObjectRelease();
      if (v10 == a2)
        break;
    }
    ++v7;
    v6 += 2;
    if (v3 == v7)
    {
      swift_bridgeObjectRelease();
      return v2[2];
    }
  }
  result = swift_bridgeObjectRelease();
  v12 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    v13 = v2[2];
    while (v12 != v13)
    {
      if (v12 >= v13)
      {
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      v15 = &v2[v6];
      v16 = (void (*)(_QWORD *__return_ptr, uint64_t))v2[v6 + 6];
      v17 = swift_retain();
      v16(v24, v17);
      v18 = v24[0];
      result = swift_release();
      if (!v18 || (result = swift_unknownObjectRelease(), v18 != a2))
      {
        if (v12 != v7)
        {
          if ((v7 & 0x8000000000000000) != 0)
            goto LABEL_28;
          v19 = v2[2];
          if (v7 >= v19)
            goto LABEL_29;
          if (v12 >= v19)
            goto LABEL_30;
          v21 = v15[6];
          v20 = v15[7];
          v23 = *(_OWORD *)&v2[2 * v7 + 4];
          swift_retain();
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v2 = sub_1BC7523B8(v2);
          v22 = &v2[2 * v7];
          v22[4] = v21;
          v22[5] = v20;
          result = swift_release();
          if (v12 >= v2[2])
            goto LABEL_31;
          *(_OWORD *)&v2[v6 + 6] = v23;
          result = swift_release();
          *(_QWORD *)a1 = v2;
        }
        if (__OFADD__(v7++, 1))
          goto LABEL_27;
      }
      ++v12;
      v13 = v2[2];
      v6 += 2;
    }
    return v7;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1BC7AFB6C()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7AFB90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  swift_beginAccess();
  result = MEMORY[0x1BCCF5C70](v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BC7AFBE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, _QWORD))
{
  uint64_t v5;

  v5 = a4(0, a2, a3, MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1BC7AFC2C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7AFC60()
{
  uint64_t v0;

  return sub_1BC7AC584(*(void **)(v0 + 16));
}

uint64_t sub_1BC7AFC6C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC7AFC7C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

id sub_1BC7AFCA8()
{
  uint64_t v0;

  return sub_1BC7AC844(*(void **)(v0 + 16));
}

uint64_t sub_1BC7AFCB0()
{
  return swift_deallocObject();
}

uint64_t sub_1BC7AFCC0()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC7AFCE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC7AD0E8(a1, a2, v2);
}

id sub_1BC7AFCEC()
{
  uint64_t v0;

  return sub_1BC7AD008(*(void **)(v0 + 16));
}

uint64_t sub_1BC7AFCF4()
{
  return swift_deallocObject();
}

void sub_1BC7AFD04()
{
  uint64_t v0;

  sub_1BC7AD2A4(*(void **)(v0 + 16));
}

id sub_1BC7AFD0C(id result)
{
  if ((unint64_t)result >= 2)
    return result;
  return result;
}

void sub_1BC7AFD1C(id a1)
{
  if ((unint64_t)a1 >= 2)

}

uint64_t sub_1BC7AFD2C()
{
  uint64_t v0;

  swift_release();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BC7AFD60()
{
  uint64_t v0;

  sub_1BC7AE3A8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(void ***)(v0 + 40));
}

uint64_t sub_1BC7AFD6C()
{
  return swift_deallocObject();
}

uint64_t sub_1BC7AFD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B9DE0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC7AFDDC()
{
  unint64_t result;

  result = qword_1EF45C5A0;
  if (!qword_1EF45C5A0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820044, &type metadata for DiskHealthExperienceStore.MergeError);
    atomic_store(result, (unint64_t *)&qword_1EF45C5A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DiskHealthExperienceStore.MergeError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC7AFE60 + 4 * byte_1BC81FE0A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC7AFE80 + 4 * byte_1BC81FE0F[v4]))();
}

_BYTE *sub_1BC7AFE60(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC7AFE80(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7AFE88(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7AFE90(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7AFE98(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7AFEA0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DiskHealthExperienceStore.MergeError()
{
  return &type metadata for DiskHealthExperienceStore.MergeError;
}

unint64_t sub_1BC7AFEC0()
{
  unint64_t result;

  result = qword_1EF45C5A8;
  if (!qword_1EF45C5A8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC82001C, &type metadata for DiskHealthExperienceStore.MergeError);
    atomic_store(result, (unint64_t *)&qword_1EF45C5A8);
  }
  return result;
}

uint64_t static NSManagedObjectUnique<>.findOrCreate(context:uniquenessPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC7AFF60(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC7B0190);
}

uint64_t static NSManagedObjectUnique<>.find(context:uniquenessPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BC7AFF60(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BC7B024C);
}

uint64_t sub_1BC7AFF60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a5(a1, a2, 1, a3, a4);
}

uint64_t sub_1BC7B0044()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC7B0098()
{
  return sub_1BC817B30();
}

uint64_t sub_1BC7B00B4()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC7B0104@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC818568();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BC7B0154(_QWORD *a1@<X8>)
{
  *a1 = 0x7571696E55746F6ELL;
  a1[1] = 0xE900000000000065;
}

uint64_t sub_1BC7B0174()
{
  return 0x7571696E55746F6ELL;
}

void sub_1BC7B0190(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;

  sub_1BC7B024C(a1, a2, a3, a4, a5);
  if (!v5 && !v9)
  {
    v10 = (void *)objc_opt_self();
    (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
    v11 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v10, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v11, a1);

    swift_dynamicCastUnknownClassUnconditional();
  }
}

void sub_1BC7B024C(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[4];
  _QWORD v28[2];
  void *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;

  v7 = v5;
  v31 = a3;
  sub_1BC6ED7C0(0, &qword_1ED6BA468);
  (*(void (**)(uint64_t, uint64_t))(a5 + 16))(a4, a5);
  v12 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v13 = sub_1BC7B0CE0();
  v14 = a1;
  objc_msgSend(v13, sel_setPredicate_, a2);
  v15 = sub_1BC8180AC();
  if (v6)
  {
LABEL_2:

    return;
  }
  v16 = a5;
  v17 = v31;
  if (MEMORY[0x1BCCF498C](v15, a4) > 1)
  {
    v29 = v14;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v30 = v7;
    v18 = sub_1BC817590();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED6BB5D0);
    v19 = sub_1BC81756C();
    v20 = sub_1BC817E84();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_1BC6DD000, v19, v20, "Error: duplicate feed item created...", v21, 2u);
      MEMORY[0x1BCCF5BA4](v21, -1, -1);
    }

    v22 = sub_1BC817D04();
    MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF38], v22);
    sub_1BC817BCC();
    v23 = swift_bridgeObjectRelease();
    v28[1] = v28;
    v32 = v33;
    v24 = MEMORY[0x1E0C80A78](v23);
    v28[0] = v27;
    v27[2] = a4;
    v27[3] = v16;
    MEMORY[0x1E0C80A78](v24);
    v25 = sub_1BC8184D8();
    MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DECC68], v25);
    sub_1BC817BFC();
    swift_bridgeObjectRelease();
    sub_1BC7B07B0(v29, v17 & 1);
    sub_1BC6FE97C();
    swift_allocError();
    swift_willThrow();
    goto LABEL_2;
  }
  v26 = sub_1BC817D04();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF50], v26);
  sub_1BC817DF4();
  swift_bridgeObjectRelease();

}

uint64_t dispatch thunk of static NSManagedObjectUnique.findOrCreate(context:uniquenessPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of static NSManagedObjectUnique.entityName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1BC7B05B8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;

  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v5 = sub_1BC817590();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED6BB5D0);
  v12 = a2;
  v6 = sub_1BC81756C();
  v7 = sub_1BC817E84();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v13 = v9;
    *(_DWORD *)v8 = 134218242;
    sub_1BC818148();
    *(_WORD *)(v8 + 12) = 2080;
    MEMORY[0x1BCCF5AB4](MEMORY[0x1E0CB2120], a3);
    v10 = sub_1BC818670();
    sub_1BC6E14D8(v10, v11, &v13);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v6, v7, "Existing item %ld: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v9, -1, -1);
    MEMORY[0x1BCCF5BA4](v8, -1, -1);

  }
  else
  {

  }
}

void sub_1BC7B07B0(void *a1, char a2)
{
  id v4;
  void *v5;
  id v6;
  unint64_t v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  unsigned int v12;
  void *v13;
  id v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  id v25;
  _OWORD v26[2];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v4 = objc_msgSend(a1, sel_persistentStoreCoordinator);
  if (!v4)
  {
    if (qword_1ED6BB5B0 == -1)
    {
LABEL_11:
      v15 = sub_1BC817590();
      __swift_project_value_buffer(v15, (uint64_t)qword_1ED6BB5D0);
      v16 = sub_1BC81756C();
      v17 = sub_1BC817E90();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_1BC6DD000, v16, v17, "No coordinator, unable to reset cache version", v18, 2u);
        MEMORY[0x1BCCF5BA4](v18, -1, -1);
      }

      return;
    }
LABEL_23:
    swift_once();
    goto LABEL_11;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_persistentStores);
  sub_1BC6ED7C0(0, &qword_1ED6B9C80);
  v7 = sub_1BC817C5C();

  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    v20 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (v20)
      goto LABEL_4;
  }
  else if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_4:
    if ((v7 & 0xC000000000000001) != 0)
    {
      v8 = (id)MEMORY[0x1BCCF4FB0](0, v7);
LABEL_7:
      v9 = v8;
      swift_bridgeObjectRelease();
      v10 = objc_msgSend(v5, sel_metadataForPersistentStore_, v9);
      sub_1BC817A34();

      sub_1BC71DFC0(0xD000000000000023, 0x80000001BC826480, v26);
      sub_1BC6EF7BC((uint64_t)v26);
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1BC817A28();
      swift_bridgeObjectRelease();
      objc_msgSend(v5, sel_setMetadata_forPersistentStore_, v11, v9);

      *(_QWORD *)&v26[0] = 0;
      v12 = objc_msgSend(a1, sel_save_, v26);
      v13 = *(void **)&v26[0];
      if (v12)
      {
        if ((a2 & 1) != 0)
        {
          *(_QWORD *)&v26[0] = 0;
          *((_QWORD *)&v26[0] + 1) = 0xE000000000000000;
          v25 = v13;
          sub_1BC8182C8();
          sub_1BC817B48();
          swift_getMetatypeMetadata();
          sub_1BC817AF4();
          sub_1BC817B48();
          swift_bridgeObjectRelease();
          sub_1BC817B48();
          sub_1BC8184B4();
          __break(1u);
        }
        else
        {
          v14 = *(id *)&v26[0];

          swift_bridgeObjectRelease();
        }
      }
      else
      {
        v19 = *(id *)&v26[0];
        swift_bridgeObjectRelease();
        sub_1BC816D5C();

        swift_willThrow();
      }
      return;
    }
    if (*(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v8 = *(id *)(v7 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v21 = sub_1BC817590();
  __swift_project_value_buffer(v21, (uint64_t)qword_1ED6BB5D0);
  v22 = sub_1BC81756C();
  v23 = sub_1BC817E90();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v24 = 0;
    _os_log_impl(&dword_1BC6DD000, v22, v23, "No persistent stores, unable to reset cache version", v24, 2u);
    MEMORY[0x1BCCF5BA4](v24, -1, -1);
  }

}

void sub_1BC7B0CA8(uint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1BC7B05B8(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BC7B0CB0(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 32))(*a1, a1[1]);
}

id sub_1BC7B0CE0()
{
  void *v0;
  void *v1;
  id v2;

  v1 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t storeEnumTagSinglePayload for NSManagedObjectUniqueError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC7B0D74 + 4 * byte_1BC820090[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC7B0D94 + 4 * byte_1BC820095[v4]))();
}

_BYTE *sub_1BC7B0D74(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC7B0D94(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7B0D9C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7B0DA4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7B0DAC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7B0DB4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NSManagedObjectUniqueError()
{
  return &type metadata for NSManagedObjectUniqueError;
}

unint64_t sub_1BC7B0DD4()
{
  unint64_t result;

  result = qword_1EF45C5B0;
  if (!qword_1EF45C5B0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820104, &type metadata for NSManagedObjectUniqueError);
    atomic_store(result, (unint64_t *)&qword_1EF45C5B0);
  }
  return result;
}

uint64_t static FeedItem.noSampleTypeCodeDefined.getter()
{
  return -1;
}

id FeedItem.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id FeedItem.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for FeedItem();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for FeedItem()
{
  return objc_opt_self();
}

id FeedItem.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FeedItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t static FeedItemPredicate.itemWithIdentifier(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;

  sub_1BC7B1018();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1BC731B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  return v5;
}

void sub_1BC7B1018()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BB1F0)
  {
    v0 = sub_1BC81867C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BB1F0);
  }
}

BOOL sub_1BC7B1070(uint64_t a1, uint64_t a2)
{
  return _s14HealthPlatform17FeedItemPredicateO2eeoiySbAC_ACtFZ_0(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24), *(void **)a2, *(void **)(a2 + 8), *(void **)(a2 + 16), *(_BYTE *)(a2 + 24));
}

BOOL _s14HealthPlatform17FeedItemPredicateO2eeoiySbAC_ACtFZ_0(void *a1, void *a2, void *a3, char a4, void *a5, void *a6, void *a7, char a8)
{
  void *v8;
  uint64_t v14;
  char v15;
  char v16;
  void *v17;
  char v19;

  v8 = a6;
  if (!a4)
  {
    if (a8)
      return 0;
    sub_1BC7158F8(a2);
    sub_1BC7158F8(v8);
    if ((sub_1BC7047E8((uint64_t)a1, (uint64_t)a5) & 1) == 0)
    {
      sub_1BC716D1C(v8);
      v17 = a2;
LABEL_34:
      sub_1BC716D1C(v17);
      return 0;
    }
    if (a2 == (void *)1)
    {
      if (v8 == (void *)1)
        return 1;
      goto LABEL_33;
    }
    if (v8 != (void *)1)
    {
      if (!a2)
      {
        if (!v8)
          return 1;
        sub_1BC716D1C(v8);
        v8 = 0;
        goto LABEL_33;
      }
      if (v8)
      {
        sub_1BC6E1404();
        sub_1BC7158F8(a2);
        sub_1BC7158F8(v8);
        v19 = sub_1BC8180D0();
        sub_1BC716D1C(v8);
        sub_1BC716D1C(v8);
        sub_1BC716D1C(a2);
        sub_1BC716D1C(a2);
        return (v19 & 1) != 0;
      }
    }
    v8 = a2;
LABEL_33:
    v17 = v8;
    goto LABEL_34;
  }
  if (a4 == 1)
  {
    if (a8 != 1)
      return 0;
    if (a1 == a5 && a2 == a6 || (v14 = 0, (sub_1BC818694() & 1) != 0))
    {
      if (a3 == (void *)1)
        return a7 == (void *)1;
      if (a7 != (void *)1)
      {
        if (a3)
        {
          if (!a7)
            return 0;
          sub_1BC6E1404();
          sub_1BC7158F8(a3);
          sub_1BC7158F8(a7);
          v16 = sub_1BC8180D0();
          sub_1BC716D1C(a7);
          sub_1BC716D1C(a3);
          return (v16 & 1) != 0;
        }
        if (!a7)
          return 1;
      }
      return 0;
    }
  }
  else
  {
    if (a8 != 2)
      return 0;
    if (a1 != (void *)1)
    {
      if (a5 != (void *)1)
      {
        if (a1)
        {
          if (!a5)
            return 0;
          sub_1BC6E1404();
          sub_1BC7158A4(a5, v8, a7, 2);
          sub_1BC7158A4(a1, a2, a3, 2);
          v15 = sub_1BC8180D0();
          sub_1BC716CC8(a5, v8, a7, 2);
          sub_1BC716CC8(a1, a2, a3, 2);
          return (v15 & 1) != 0;
        }
        if (!a5)
          return 1;
      }
      return 0;
    }
    if (a5 != (void *)1)
    {
      sub_1BC716CC8((void *)1, a2, a3, 2);
      return 0;
    }
    v14 = 1;
    sub_1BC7158F8((id)1);
  }
  return v14;
}

void destroy for FeedItemPredicate(uint64_t a1)
{
  sub_1BC716CC8(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FeedItemPredicate(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BC7158A4(*(id *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FeedItemPredicate(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BC7158A4(*(id *)a2, v4, v5, v6);
  v7 = *(void **)a1;
  v8 = *(void **)(a1 + 8);
  v9 = *(void **)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v10 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BC716CC8(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FeedItemPredicate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v8 = *(_BYTE *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BC716CC8(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemPredicate(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemPredicate(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC7B1500(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_1BC7B1508(uint64_t result, char a2)
{
  *(_BYTE *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemPredicate()
{
  return &type metadata for FeedItemPredicate;
}

uint64_t (*MockHealthPlatformOrchestrationContext.feedItemStorageHandler.getter())(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v8;

  sub_1BC7B15FC(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1BC7B183C;
}

void sub_1BC7B15FC(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1EF45C5B8, (uint64_t (*)(uint64_t))sub_1BC7B1618, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D1E0]);
}

unint64_t sub_1BC7B1618()
{
  unint64_t result;

  result = qword_1EF45C5C0;
  if (!qword_1EF45C5C0)
  {
    sub_1BC6ED814(255, &qword_1EF45C5C8);
    sub_1BC6ED814(255, &qword_1ED6B8010);
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BA460);
    result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_1EF45C5C0);
  }
  return result;
}

_QWORD *sub_1BC7B16BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  v2 = type metadata accessor for MockFeedItemStorage();
  result = (_QWORD *)swift_allocObject();
  result[2] = sub_1BC7DA928;
  result[3] = 0;
  result[4] = sub_1BC7DA928;
  result[5] = 0;
  result[6] = sub_1BC7D9C78;
  result[7] = 0;
  result[8] = sub_1BC7D9F5C;
  result[9] = 0;
  a1[3] = v2;
  a1[4] = &protocol witness table for MockFeedItemStorage;
  *a1 = result;
  return result;
}

uint64_t sub_1BC7B1740(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v1 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BC7B183C;
  *(_QWORD *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1BC7B15FC(0);
  swift_retain();
  swift_retain();
  sub_1BC8174AC();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC7B1818()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7B183C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BC7B4DEC(a1, a2, a3);
}

uint64_t MockHealthPlatformOrchestrationContext.feedItemStorageHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BC7B2EE0(a1, a2, (uint64_t)&unk_1E751FC30, (uint64_t)sub_1BC7B1874, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler, sub_1BC7B15FC);
}

uint64_t sub_1BC7B1874(_QWORD *a1, _QWORD *a2)
{
  return sub_1BC7B4E24(a1, a2);
}

void (*MockHealthPlatformOrchestrationContext.feedItemStorageHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1BC7B15FC(0);
  v2[9] = sub_1BC817494();
  v2[10] = v3;
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v2[7] = sub_1BC7B183C;
  v2[8] = v6;
  swift_retain();
  return sub_1BC7B1934;
}

void sub_1BC7B1934(uint64_t a1, char a2)
{
  sub_1BC7B1DE0(a1, a2, (uint64_t)&unk_1E751FCA8, (uint64_t)sub_1BC7B1874, (uint64_t)&unk_1E751FC80, (uint64_t)sub_1BC7B1874);
}

uint64_t MockHealthPlatformOrchestrationContext.feedItemStorage(for:scope:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, uint64_t *);
  _QWORD v16[2];
  uint64_t v17;

  sub_1BC7B15FC(0);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v3 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = (void (*)(_QWORD *, uint64_t *))v16[0];
  v16[0] = a1;
  v16[1] = a2;
  v17 = a3;
  v13(v16, &v17);
  return swift_release();
}

uint64_t (*MockHealthPlatformOrchestrationContext.anchorStorageHandler.getter())(uint64_t a1, uint64_t a2)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v8;

  sub_1BC7B1B44(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1BC7B1CD8;
}

void sub_1BC7B1B44(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1EF45C5D8, (uint64_t (*)(uint64_t))sub_1BC7B1B60, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D1E0]);
}

unint64_t sub_1BC7B1B60()
{
  unint64_t result;

  result = qword_1EF45C5E0;
  if (!qword_1EF45C5E0)
  {
    sub_1BC6ED814(255, &qword_1EF45C5E8);
    sub_1BC6ED814(255, &qword_1EF45C5F0);
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EF45C5E0);
  }
  return result;
}

uint64_t sub_1BC7B1BE4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BC7B1EBC(a1);
}

uint64_t sub_1BC7B1C00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v1 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BC7B1CD8;
  *(_QWORD *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1BC7B1B44(0);
  swift_retain();
  swift_retain();
  sub_1BC8174AC();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC7B1CD8(uint64_t a1, uint64_t a2)
{
  return sub_1BC7B4DBC(a1, a2);
}

uint64_t MockHealthPlatformOrchestrationContext.anchorStorageHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BC7B2EE0(a1, a2, (uint64_t)&unk_1E751FCF8, (uint64_t)sub_1BC761B7C, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler, sub_1BC7B1B44);
}

void (*MockHealthPlatformOrchestrationContext.anchorStorageHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1BC7B1B44(0);
  v2[9] = sub_1BC817494();
  v2[10] = v3;
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v2[7] = sub_1BC7B1CD8;
  v2[8] = v6;
  swift_retain();
  return sub_1BC7B1DBC;
}

void sub_1BC7B1DBC(uint64_t a1, char a2)
{
  sub_1BC7B1DE0(a1, a2, (uint64_t)&unk_1E751FD70, (uint64_t)sub_1BC7B4F14, (uint64_t)&unk_1E751FD48, (uint64_t)sub_1BC7B4F14);
}

void sub_1BC7B1DE0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v6;
  uint64_t v7;
  void (*v8)(void *, _QWORD);
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v14;

  v6 = *(void **)a1;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  v8 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  v9 = *(_QWORD **)(*(_QWORD *)a1 + 80);
  v10 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v7;
    *(_QWORD *)(v12 + 24) = v10;
    *v9 = a6;
    v9[1] = v12;
    swift_retain();
    swift_release();
    swift_release();
    v8(v6, 0);
    swift_endAccess();
  }
  else
  {
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v7;
    *(_QWORD *)(v14 + 24) = v10;
    *v9 = a4;
    v9[1] = v14;
    v8(v6, 0);
    swift_endAccess();
    swift_release();
  }
  free(v6);
}

uint64_t sub_1BC7B1EBC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = type metadata accessor for MockAnchorStorage();
  v3 = (_QWORD *)swift_allocObject();
  v3[2] = sub_1BC710FA4(MEMORY[0x1E0DEE9D8]);
  v3[3] = nullsub_1;
  v3[4] = 0;
  v3[5] = nullsub_1;
  v3[6] = 0;
  v4 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v3[3] = sub_1BC77D418;
  v3[4] = v4;
  swift_release();
  v5 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  v3[5] = sub_1BC77D4CC;
  v3[6] = v5;
  result = swift_release();
  a1[3] = v2;
  a1[4] = &protocol witness table for MockAnchorStorage;
  *a1 = v3;
  return result;
}

uint64_t MockHealthPlatformOrchestrationContext.anchorStorage(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(_QWORD *);
  _QWORD v14[2];

  sub_1BC7B1B44(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = (void (*)(_QWORD *))v14[0];
  v14[0] = a1;
  v14[1] = a2;
  v11(v14);
  return swift_release();
}

_QWORD *(*MockHealthPlatformOrchestrationContext.notificationManagerHandler.getter())(uint64_t a1, uint64_t a2)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v8;

  sub_1BC7B21DC(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1BC7B23C0;
}

void sub_1BC7B21DC(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1EF45C600, (uint64_t (*)(uint64_t))sub_1BC7B21F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D1E0]);
}

unint64_t sub_1BC7B21F8()
{
  unint64_t result;

  result = qword_1EF45C608;
  if (!qword_1EF45C608)
  {
    sub_1BC6ED814(255, &qword_1EF45C610);
    sub_1BC6ED814(255, &qword_1ED6B8010);
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EF45C608);
  }
  return result;
}

uint64_t sub_1BC7B227C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  _OWORD v3[2];
  uint64_t v4;

  type metadata accessor for MockPluginNotificationManager();
  memset(v3, 0, sizeof(v3));
  v4 = 0;
  swift_allocObject();
  result = MockPluginNotificationManager.init(contentStateManager:)((uint64_t)v3);
  *a1 = result;
  a1[1] = (uint64_t)&protocol witness table for MockPluginNotificationManager;
  return result;
}

uint64_t sub_1BC7B22E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v1 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BC7B23C0;
  *(_QWORD *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1BC7B21DC(0);
  swift_retain();
  swift_retain();
  sub_1BC8174AC();
  swift_endAccess();
  return swift_release();
}

_QWORD *sub_1BC7B23C0(uint64_t a1, uint64_t a2)
{
  return sub_1BC7B4D48(a1, a2);
}

uint64_t MockHealthPlatformOrchestrationContext.notificationManagerHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BC7B2EE0(a1, a2, (uint64_t)&unk_1E751FDC0, (uint64_t)sub_1BC7B23F8, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler, sub_1BC7B21DC);
}

uint64_t sub_1BC7B23F8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BC7B4D88(a1, a2);
}

void (*MockHealthPlatformOrchestrationContext.notificationManagerHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1BC7B21DC(0);
  v2[9] = sub_1BC817494();
  v2[10] = v3;
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v2[7] = sub_1BC7B23C0;
  v2[8] = v6;
  swift_retain();
  return sub_1BC7B24B8;
}

void sub_1BC7B24B8(uint64_t a1, char a2)
{
  sub_1BC7B1DE0(a1, a2, (uint64_t)&unk_1E751FE38, (uint64_t)sub_1BC7B23F8, (uint64_t)&unk_1E751FE10, (uint64_t)sub_1BC7B23F8);
}

uint64_t MockHealthPlatformOrchestrationContext.notificationManager(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(uint64_t *__return_ptr, _QWORD *);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  sub_1BC7B21DC(0);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  v12 = (void (*)(uint64_t *__return_ptr, _QWORD *))v16[0];
  v16[0] = a1;
  v16[1] = a2;
  v12(&v15, v16);
  result = swift_release();
  if (!v3)
    return v15;
  return result;
}

uint64_t (*MockHealthPlatformOrchestrationContext.sharedSummaryTransactionBuilderHandler.getter())(uint64_t a1, uint64_t a2)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v8;

  sub_1BC7B26BC();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1BC7B2978;
}

void sub_1BC7B26BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45C620)
  {
    sub_1BC7B2740(255, &qword_1EF45C628, (void (*)(uint64_t))sub_1BC7B2728);
    v0 = sub_1BC8174B8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45C620);
  }
}

uint64_t sub_1BC7B2728(uint64_t a1)
{
  return sub_1BC7B2740(a1, &qword_1EF45C630, (void (*)(uint64_t))sub_1BC7321D8);
}

uint64_t sub_1BC7B2740(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    a3(255);
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, a2);
  }
  return result;
}

void sub_1BC7B2790(void (**a1)(id *))
{
  void (*v1)(id *);
  id v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v1 = *a1;
  v2 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  v3 = (void *)sub_1BC817AC4();
  v4 = objc_msgSend(v2, sel_initWithDomain_code_userInfo_, v3, -1, 0);

  v5 = v4;
  v6 = 1;
  v1(&v5);

}

uint64_t sub_1BC7B282C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v1 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BC7B4F10;
  *(_QWORD *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1BC7B26BC();
  swift_retain();
  swift_retain();
  sub_1BC8174AC();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1BC7B2904(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  uint64_t v6;
  _QWORD v8[2];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v8[0] = sub_1BC74D2A0;
  v8[1] = v6;
  a3(v8);
  return swift_release();
}

uint64_t sub_1BC7B2978(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BC7B2904(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

uint64_t MockHealthPlatformOrchestrationContext.sharedSummaryTransactionBuilderHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BC7B2EE0(a1, a2, (uint64_t)&unk_1E751FE88, (uint64_t)sub_1BC7B29A4, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler, (void (*)(_QWORD))sub_1BC7B26BC);
}

void (*MockHealthPlatformOrchestrationContext.sharedSummaryTransactionBuilderHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1BC7B26BC();
  v2[9] = sub_1BC817494();
  v2[10] = v3;
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v2[7] = sub_1BC7B4F10;
  v2[8] = v6;
  swift_retain();
  return sub_1BC7B2A54;
}

void sub_1BC7B2A54(uint64_t a1, char a2)
{
  sub_1BC7B1DE0(a1, a2, (uint64_t)&unk_1E751FF00, (uint64_t)sub_1BC7B29A4, (uint64_t)&unk_1E751FED8, (uint64_t)sub_1BC7B29A4);
}

uint64_t MockHealthPlatformOrchestrationContext.sharedSummaryTransactionBuilder(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(_QWORD *);
  uint64_t v12;
  _QWORD v15[2];

  sub_1BC7B26BC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2
      + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = (void (*)(_QWORD *))v15[0];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  v15[0] = sub_1BC74D2A0;
  v15[1] = v12;
  v11(v15);
  swift_release();
  return swift_release();
}

uint64_t sub_1BC7B2B80()
{
  return swift_deallocObject();
}

uint64_t (*MockHealthPlatformOrchestrationContext.sharingSummaryProfileTransactionBuilderHandler.getter())(uint64_t)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  __int128 v8;

  sub_1BC7B2C6C(0);
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_OWORD *)(swift_allocObject() + 16) = v8;
  return sub_1BC7B2EB8;
}

void sub_1BC7B2C6C(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1EF45C640, (uint64_t (*)(uint64_t))sub_1BC7B2C88, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0D2D1E0]);
}

unint64_t sub_1BC7B2C88()
{
  unint64_t result;

  result = qword_1EF45C648;
  if (!qword_1EF45C648)
  {
    sub_1BC6ECA64(255, &qword_1ED6B6320, (uint64_t (*)(uint64_t))type metadata accessor for CachingSharedSummaryTransactionBuilder, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6B85C0);
    result = swift_getFunctionTypeMetadata1();
    atomic_store(result, (unint64_t *)&qword_1EF45C648);
  }
  return result;
}

double sub_1BC7B2D0C@<D0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X4>, _OWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  double result;
  double v13[3];

  v7 = a2(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v13 - v9;
  v11 = *a1 + *a3;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  result = v13[0];
  *a4 = *(_OWORD *)v13;
  return result;
}

void sub_1BC7B2DD8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1BC7B2DE0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v1 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = sub_1BC7B2EB8;
  *(_QWORD *)(v4 + 24) = v3;
  swift_beginAccess();
  sub_1BC7B2C6C(0);
  swift_retain();
  swift_retain();
  sub_1BC8174AC();
  swift_endAccess();
  return swift_release();
}

uint64_t MockHealthPlatformOrchestrationContext.sharingSummaryProfileTransactionBuilderHandler.setter(uint64_t a1, uint64_t a2)
{
  return sub_1BC7B2EE0(a1, a2, (uint64_t)&unk_1E751FF78, (uint64_t)sub_1BC772920, (uint64_t)&OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler, sub_1BC7B2C6C);
}

uint64_t sub_1BC7B2EE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_QWORD))
{
  uint64_t v9;

  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_beginAccess();
  a6(0);
  swift_retain();
  sub_1BC8174AC();
  swift_endAccess();
  return swift_release();
}

void (*MockHealthPlatformOrchestrationContext.sharingSummaryProfileTransactionBuilderHandler.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = malloc(0x58uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1BC7B2C6C(0);
  v2[9] = sub_1BC817494();
  v2[10] = v3;
  v5 = *v3;
  v4 = v3[1];
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  v2[7] = sub_1BC7B2EB8;
  v2[8] = v6;
  swift_retain();
  return sub_1BC7B3034;
}

void sub_1BC7B3034(uint64_t a1, char a2)
{
  sub_1BC7B1DE0(a1, a2, (uint64_t)&unk_1E751FFF0, (uint64_t)sub_1BC772A58, (uint64_t)&unk_1E751FFC8, (uint64_t)sub_1BC772A58);
}

uint64_t MockHealthPlatformOrchestrationContext.sharingSummaryProfileTransactionBuilder(transaction:)(void (*a1)(uint64_t *__return_ptr, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void (*v9)(uint64_t *__return_ptr, _QWORD);
  uint64_t v11;
  void (*v12)(uint64_t *__return_ptr, _QWORD);

  sub_1BC7B2C6C(0);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v9 = v12;
  v12 = a1;
  v9(&v11, &v12);
  swift_release();
  return v11;
}

void *MockHealthPlatformOrchestrationContext.optionalHealthStore.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
  v2 = v1;
  return v1;
}

id MockHealthPlatformOrchestrationContext.primaryProfileHealthStore.getter()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore));
}

uint64_t MockHealthPlatformOrchestrationContext.__allocating_init(healthStore:primaryProfileHealthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  MockHealthPlatformOrchestrationContext.init(healthStore:primaryProfileHealthStore:)(a1, a2);
  return v4;
}

uint64_t MockHealthPlatformOrchestrationContext.init(healthStore:primaryProfileHealthStore:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;

  v36 = a1;
  v37 = a2;
  sub_1BC7B2C6C(0);
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x1E0C80A78](v3);
  v33 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7B26BC();
  v31 = *(_QWORD *)(v5 - 8);
  v32 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7B21DC(0);
  v29 = *(_QWORD *)(v8 - 8);
  v30 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7B1B44(0);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7B15FC(0);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  v38 = sub_1BC7B16BC;
  v39 = 0;
  sub_1BC7B1618();
  sub_1BC817488();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v20, v17);
  v22 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  v38 = sub_1BC7B1BE4;
  v39 = 0;
  sub_1BC7B1B60();
  sub_1BC817488();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v22, v15, v12);
  v23 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  v38 = sub_1BC7B227C;
  v39 = 0;
  sub_1BC7B21F8();
  sub_1BC817488();
  (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v23, v10, v30);
  v24 = v2
      + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  v38 = sub_1BC7B2790;
  v39 = 0;
  sub_1BC7B2740(0, &qword_1EF45C628, (void (*)(uint64_t))sub_1BC7B2728);
  sub_1BC817488();
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v24, v7, v32);
  v25 = v2
      + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  v38 = sub_1BC7B2DD8;
  v39 = 0;
  sub_1BC7B2C88();
  v26 = v33;
  sub_1BC817488();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v25, v26, v35);
  sub_1BC817584();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore) = v36;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore) = v37;
  return v2;
}

uint64_t MockHealthPlatformOrchestrationContext.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  swift_beginAccess();
  v4 = sub_1BC817590();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t MockHealthPlatformOrchestrationContext.logger.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  swift_beginAccess();
  v4 = sub_1BC817590();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*MockHealthPlatformOrchestrationContext.logger.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC7B35D8()
{
  _BYTE *v0;

  if (*v0)
    return 0x696669746E656469;
  else
    return 1701869940;
}

uint64_t sub_1BC7B3610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7B4BE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC7B3634()
{
  sub_1BC7B37E0();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7B365C()
{
  sub_1BC7B37E0();
  return sub_1BC818808();
}

uint64_t MockHealthPlatformOrchestrationContext.Description.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BC7B3A84(0, &qword_1EF45C658, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7B37E0();
  sub_1BC8187F0();
  v9[15] = 0;
  sub_1BC818628();
  if (!v1)
  {
    type metadata accessor for MockHealthPlatformOrchestrationContext.Description(0);
    v9[14] = 1;
    sub_1BC816F3C();
    sub_1BC6E1788(&qword_1EF45C040, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1BC8185F8();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BC7B37E0()
{
  unint64_t result;

  result = qword_1EF45C660;
  if (!qword_1EF45C660)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC8204B0, &type metadata for MockHealthPlatformOrchestrationContext.Description.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C660);
  }
  return result;
}

uint64_t type metadata accessor for MockHealthPlatformOrchestrationContext.Description(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1EF45C7E0);
}

uint64_t MockHealthPlatformOrchestrationContext.Description.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char v20;
  char v21;

  v17 = a2;
  sub_1BC7B3A68(0);
  MEMORY[0x1E0C80A78](v4);
  v18 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7B3A84(0, &qword_1EF45C668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v19 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - v8;
  v10 = type metadata accessor for MockHealthPlatformOrchestrationContext.Description(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7B37E0();
  sub_1BC8187E4();
  if (v2)
  {
    v15 = (uint64_t)a1;
  }
  else
  {
    v16 = a1;
    v13 = (uint64_t)v18;
    v21 = 0;
    *v12 = sub_1BC8185BC();
    sub_1BC816F3C();
    v20 = 1;
    sub_1BC6E1788(&qword_1EF45C050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1BC81858C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v19);
    sub_1BC6ECBA4(v13, (uint64_t)v12 + *(int *)(v10 + 20), (uint64_t (*)(_QWORD))sub_1BC7B3A68);
    sub_1BC6ECBA4((uint64_t)v12, v17, type metadata accessor for MockHealthPlatformOrchestrationContext.Description);
    v15 = (uint64_t)v16;
  }
  return __swift_destroy_boxed_opaque_existential_0(v15);
}

void sub_1BC7B3A68(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6B7C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BC7B3A84(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC7B37E0();
    v7 = a3(a1, &type metadata for MockHealthPlatformOrchestrationContext.Description.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC7B3AE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MockHealthPlatformOrchestrationContext.Description.init(from:)(a1, a2);
}

uint64_t sub_1BC7B3AF4(_QWORD *a1)
{
  return MockHealthPlatformOrchestrationContext.Description.encode(to:)(a1);
}

uint64_t MockHealthPlatformOrchestrationContext.contextDescription.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  uint64_t v12;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
  if (v3 && (v4 = objc_msgSend(v3, sel_profileIdentifier)) != 0)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_type);
    v7 = (char *)a1 + *(int *)(type metadata accessor for MockHealthPlatformOrchestrationContext.Description(0) + 20);
    v8 = objc_msgSend(v5, sel_identifier);
    sub_1BC816F24();

    v9 = sub_1BC816F3C();
    result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
  }
  else
  {
    v11 = (char *)a1 + *(int *)(type metadata accessor for MockHealthPlatformOrchestrationContext.Description(0) + 20);
    v12 = sub_1BC816F3C();
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
    v6 = 0;
  }
  *a1 = v6;
  return result;
}

uint64_t MockHealthPlatformOrchestrationContext.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  sub_1BC7B15FC(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  sub_1BC7B1B44(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  sub_1BC7B21DC(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  sub_1BC7B26BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  sub_1BC7B2C6C(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore));
  v11 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  v12 = sub_1BC817590();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return v0;
}

uint64_t MockHealthPlatformOrchestrationContext.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler;
  sub_1BC7B15FC(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  sub_1BC7B1B44(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler;
  sub_1BC7B21DC(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler;
  sub_1BC7B26BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0
     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler;
  sub_1BC7B2C6C(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore));
  v11 = v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  v12 = sub_1BC817590();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7B3E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MockHealthPlatformOrchestrationContext.feedItemStorage(for:scope:)(a1, a2, a3);
}

uint64_t sub_1BC7B3E8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void (*v11)(_QWORD *);
  _QWORD v14[2];

  sub_1BC7B1B44(0);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1BC8174A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v11 = (void (*)(_QWORD *))v14[0];
  v14[0] = a1;
  v14[1] = a2;
  v11(v14);
  return swift_release();
}

uint64_t sub_1BC7B3F88(uint64_t a1, uint64_t a2)
{
  return MockHealthPlatformOrchestrationContext.notificationManager(for:)(a1, a2);
}

void *sub_1BC7B3FA4()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
  v2 = v1;
  return v1;
}

id sub_1BC7B3FD0()
{
  uint64_t v0;

  return objc_retain(*(id *)(v0
                           + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_primaryProfileHealthStore));
}

uint64_t sub_1BC7B3FE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_logger;
  swift_beginAccess();
  v4 = sub_1BC817590();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC7B4048(uint64_t *a1, uint64_t *a2)
{
  return _s14HealthPlatform04MockaB20OrchestrationContextC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s14HealthPlatform04MockaB20OrchestrationContextC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  char v9;

  v3 = *(void **)(a1 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
  if (v3)
  {
    v4 = objc_msgSend(v3, sel_profileIdentifier);
    v5 = *(void **)(a2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
    if (!v5)
    {
      if (!v4)
        goto LABEL_14;
      goto LABEL_10;
    }
  }
  else
  {
    v5 = *(void **)(a2 + OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext_optionalHealthStore);
    if (!v5)
      goto LABEL_14;
    v4 = 0;
  }
  v6 = objc_msgSend(v5, sel_profileIdentifier);
  v7 = v6;
  if (!v4)
  {
    if (v6)
    {
      v9 = 0;
      goto LABEL_13;
    }
LABEL_14:
    v9 = 1;
    return v9 & 1;
  }
  if (!v6)
  {
LABEL_10:
    v9 = 0;
    v7 = v4;
    goto LABEL_13;
  }
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
  v8 = v4;
  v9 = sub_1BC8180D0();

LABEL_13:
  return v9 & 1;
}

uint64_t sub_1BC7B413C()
{
  return sub_1BC6E1788(&qword_1EF45C670, type metadata accessor for MockHealthPlatformOrchestrationContext.Description, (uint64_t)&protocol conformance descriptor for MockHealthPlatformOrchestrationContext.Description);
}

uint64_t sub_1BC7B4168()
{
  return sub_1BC6E1788(&qword_1EF45C678, type metadata accessor for MockHealthPlatformOrchestrationContext.Description, (uint64_t)&protocol conformance descriptor for MockHealthPlatformOrchestrationContext.Description);
}

uint64_t sub_1BC7B4194(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC6E1788(&qword_1EF45C680, type metadata accessor for MockHealthPlatformOrchestrationContext, (uint64_t)&protocol conformance descriptor for MockHealthPlatformOrchestrationContext);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for MockHealthPlatformOrchestrationContext(uint64_t a1)
{
  return sub_1BC738C70(a1, qword_1EF45C6C8);
}

uint64_t sub_1BC7B41E4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BC6E1788(&qword_1EF45C688, type metadata accessor for MockHealthPlatformOrchestrationContext, (uint64_t)&protocol conformance descriptor for MockHealthPlatformOrchestrationContext);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BC7B4220()
{
  return sub_1BC6E1788(&qword_1EF45C690, type metadata accessor for MockHealthPlatformOrchestrationContext, (uint64_t)&protocol conformance descriptor for MockHealthPlatformOrchestrationContext);
}

uint64_t sub_1BC7B424C()
{
  return sub_1BC6E1788(&qword_1EF45C698, type metadata accessor for MockHealthPlatformOrchestrationContext.Description, (uint64_t)&protocol conformance descriptor for MockHealthPlatformOrchestrationContext.Description);
}

double sub_1BC7B4278@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BC7B2D0C(a1, (uint64_t (*)(_QWORD))sub_1BC7B15FC, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__feedItemStorageHandler, a2);
}

double sub_1BC7B42A0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BC7B2D0C(a1, (uint64_t (*)(_QWORD))sub_1BC7B1B44, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__anchorStorageHandler, a2);
}

double sub_1BC7B42C8@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BC7B2D0C(a1, (uint64_t (*)(_QWORD))sub_1BC7B21DC, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__notificationManagerHandler, a2);
}

double sub_1BC7B42F0@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BC7B2D0C(a1, (uint64_t (*)(_QWORD))sub_1BC7B26BC, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharedSummaryTransactionBuilderHandler, a2);
}

double sub_1BC7B4318@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BC7B2D0C(a1, (uint64_t (*)(_QWORD))sub_1BC7B2C6C, &OBJC_IVAR____TtC14HealthPlatform38MockHealthPlatformOrchestrationContext__sharingSummaryProfileTransactionBuilderHandler, a2);
}

uint64_t sub_1BC7B4340()
{
  return type metadata accessor for MockHealthPlatformOrchestrationContext(0);
}

void sub_1BC7B4348()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1BC7B15FC(319);
  if (v0 <= 0x3F)
  {
    sub_1BC7B1B44(319);
    if (v1 <= 0x3F)
    {
      sub_1BC7B21DC(319);
      if (v2 <= 0x3F)
      {
        sub_1BC7B26BC();
        if (v3 <= 0x3F)
        {
          sub_1BC7B2C6C(319);
          if (v4 <= 0x3F)
          {
            sub_1BC817590();
            if (v5 <= 0x3F)
              swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t method lookup function for MockHealthPlatformOrchestrationContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockHealthPlatformOrchestrationContext.__allocating_init(healthStore:primaryProfileHealthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t *initializeBufferWithCopyOfBuffer for MockHealthPlatformOrchestrationContext.Description(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1BC816F3C();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1BC7B3A68(0);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  return v3;
}

uint64_t destroy for MockHealthPlatformOrchestrationContext.Description(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1BC816F3C();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_QWORD *initializeWithCopy for MockHealthPlatformOrchestrationContext.Description(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BC816F3C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BC7B3A68(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithCopy for MockHealthPlatformOrchestrationContext.Description(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BC816F3C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1BC7B3A68(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_QWORD *initializeWithTake for MockHealthPlatformOrchestrationContext.Description(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BC816F3C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BC7B3A68(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_QWORD *assignWithTake for MockHealthPlatformOrchestrationContext.Description(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BC816F3C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1BC7B3A68(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for MockHealthPlatformOrchestrationContext.Description()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC7B493C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  sub_1BC7B3A68(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for MockHealthPlatformOrchestrationContext.Description()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC7B4988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  sub_1BC7B3A68(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

void sub_1BC7B49CC()
{
  unint64_t v0;

  sub_1BC7B3A68(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for MockHealthPlatformOrchestrationContext.Description.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC7B4A90 + 4 * byte_1BC820255[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC7B4AC4 + 4 * asc_1BC820250[v4]))();
}

uint64_t sub_1BC7B4AC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7B4ACC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7B4AD4);
  return result;
}

uint64_t sub_1BC7B4AE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7B4AE8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC7B4AEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7B4AF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MockHealthPlatformOrchestrationContext.Description.CodingKeys()
{
  return &type metadata for MockHealthPlatformOrchestrationContext.Description.CodingKeys;
}

unint64_t sub_1BC7B4B14()
{
  unint64_t result;

  result = qword_1EF45C818;
  if (!qword_1EF45C818)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820488, &type metadata for MockHealthPlatformOrchestrationContext.Description.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C818);
  }
  return result;
}

unint64_t sub_1BC7B4B5C()
{
  unint64_t result;

  result = qword_1EF45C820;
  if (!qword_1EF45C820)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC8203F8, &type metadata for MockHealthPlatformOrchestrationContext.Description.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C820);
  }
  return result;
}

unint64_t sub_1BC7B4BA4()
{
  unint64_t result;

  result = qword_1EF45C828;
  if (!qword_1EF45C828)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820420, &type metadata for MockHealthPlatformOrchestrationContext.Description.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C828);
  }
  return result;
}

uint64_t sub_1BC7B4BE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BC7B4CD4(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16);
  v5 = a1;
  v2(&v4, &v5);
  return v4;
}

uint64_t sub_1BC7B4D0C(_OWORD *a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD, _OWORD *);
  _OWORD v4[2];

  v2 = *(uint64_t (**)(_QWORD, _OWORD *))(v1 + 16);
  v4[1] = *a1;
  return v2(sub_1BC74D098, v4);
}

_QWORD *sub_1BC7B4D48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *(*v4)(uint64_t *__return_ptr, _QWORD *);
  _QWORD *result;
  uint64_t v6;
  _QWORD v7[2];

  v7[1] = a2;
  v4 = *(_QWORD *(**)(uint64_t *__return_ptr, _QWORD *))(v2 + 16);
  v7[0] = a1;
  result = v4(&v6, v7);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_1BC7B4D88@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v6;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 16))(*a1, a1[1]);
  if (!v3)
  {
    *a2 = result;
    a2[1] = v6;
  }
  return result;
}

uint64_t sub_1BC7B4DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v5[1] = a2;
  v3 = *(uint64_t (**)(_QWORD *))(v2 + 16);
  v5[0] = a1;
  return v3(v5);
}

uint64_t sub_1BC7B4DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v4)(_QWORD *, uint64_t *);
  _QWORD v6[2];
  uint64_t v7;

  v6[1] = a2;
  v4 = *(uint64_t (**)(_QWORD *, uint64_t *))(v3 + 16);
  v6[0] = a1;
  v7 = a3;
  return v4(v6, &v7);
}

uint64_t sub_1BC7B4E24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v2 + 16))(*a1, a1[1], *a2);
}

uint64_t sub_1BC7B4E54()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7B4E78()
{
  return swift_deallocObject();
}

uint64_t sub_1BC7B4F14(_QWORD *a1)
{
  return sub_1BC761B7C(a1);
}

id static FeedSection.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1BC7B4F98(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC817AC4();
  objc_msgSend(v2, sel_setIdentifier_, v3);

}

char *keypath_get_selector_feed()
{
  return sel_feed;
}

id sub_1BC7B4FF4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_feed);
  *a2 = result;
  return result;
}

id sub_1BC7B502C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeed_, *a1);
}

id sub_1BC7B5040@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_feedItems);
  *a2 = result;
  return result;
}

id sub_1BC7B5078(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeedItems_, *a1);
}

char *keypath_get_selector_isCollapsible()
{
  return sel_isCollapsible;
}

id sub_1BC7B5098@<X0>(id *a1@<X0>, _BYTE *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_isCollapsible);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1BC7B50C8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsCollapsible_, *a1);
}

id sub_1BC7B50DC@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sortOrder);
  *a2 = result;
  return result;
}

id sub_1BC7B510C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortOrder_, *a1);
}

uint64_t Publisher.signposted(dso:log:name:signpostID:metadata:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;

  v12 = v11;
  v30 = a7;
  v29 = a5;
  v27 = a3;
  v28 = a4;
  sub_1BC6ECA64(0, qword_1ED6BA738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2118], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v27 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v23, v12, a10);
  sub_1BC7B5260(a6, (uint64_t)v21);
  v25 = a2;
  swift_bridgeObjectRetain();
  return Publishers.Signpost.init(_:dso:log:name:signpostID:metadata:)((uint64_t)v23, a1, v25, v27, v28, v29, (uint64_t)v21, v30, a9, a8, a10, a11);
}

uint64_t sub_1BC7B5260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, qword_1ED6BA738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2118], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Publishers.Signpost.init(_:dso:log:name:signpostID:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t result;
  void (*v33)(char *, char *, uint64_t);
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v36 = a7;
  v37 = a2;
  v40 = a6;
  v38 = a4;
  v39 = a5;
  v42 = a10;
  v43 = a8;
  sub_1BC6ECA64(0, qword_1ED6BA738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2118], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - v16;
  v18 = sub_1BC817548();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a11 - 8);
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
  v41 = a1;
  v24 = a1;
  v25 = a3;
  v26 = v36;
  v23(a9, v24, a11);
  v28 = (int *)type metadata accessor for Publishers.Signpost(0, a11, a12, v27);
  *(_QWORD *)(a9 + v28[9]) = v37;
  *(_QWORD *)(a9 + v28[10]) = v25;
  v29 = a9 + v28[11];
  v30 = v39;
  *(_QWORD *)v29 = v38;
  *(_QWORD *)(v29 + 8) = v30;
  *(_BYTE *)(v29 + 16) = v40;
  sub_1BC7B5260(v26, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    v31 = v25;
    sub_1BC81753C();
    sub_1BC7B54C4(v26);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v41, a11);
    sub_1BC7B54C4((uint64_t)v17);
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a9 + v28[12], v21, v18);
  }
  else
  {
    sub_1BC7B54C4(v26);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v41, a11);
    v33 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v33(v21, v17, v18);
    result = ((uint64_t (*)(uint64_t, char *, uint64_t))v33)(a9 + v28[12], v21, v18);
  }
  v34 = (_QWORD *)(a9 + v28[13]);
  v35 = v42;
  *v34 = v43;
  v34[1] = v35;
  return result;
}

uint64_t type metadata accessor for Publishers.Signpost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Publishers.Signpost);
}

uint64_t sub_1BC7B54C4(uint64_t a1)
{
  uint64_t v2;

  sub_1BC6ECA64(0, qword_1ED6BA738, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF2118], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Publishers.Signpost.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Publishers.Signpost.dso.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 36));
}

id Publishers.Signpost.log.getter(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 40));
}

uint64_t Publishers.Signpost.name.getter(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 44));
}

uint64_t Publishers.Signpost.signpostID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 48);
  v5 = sub_1BC817548();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t Publishers.Signpost.metadata.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

void Publishers.Signpost.receive<A>(subscriber:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1BC817548();
  v1 = MEMORY[0x1E0C80A78](v0);
  MEMORY[0x1E0C80A78](v1);
  _s8SignpostV5InnerCMa();
}

uint64_t sub_1BC7B5684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v6, v8, v7);
  v12 = *(_QWORD *)(v1 + v5[9]);
  v13 = *(void **)(v1 + v5[10]);
  v14 = v5[12];
  v15 = v1 + v5[11];
  v16 = *(_QWORD *)v15;
  *(_QWORD *)(v10 - 144) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v10 - 136) = v12;
  v17 = *(_BYTE *)(v15 + 16);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1 + v14, v9);
  v18 = (uint64_t *)(v1 + v5[13]);
  v19 = *v18;
  v20 = v18[1];
  swift_allocObject();
  *(_QWORD *)(v10 - 112) = sub_1BC7B582C(v6, *(_QWORD *)(v10 - 136), (uint64_t)v13, v16, *(_QWORD *)(v10 - 144), v17, v2, v19, v20);
  v21 = v13;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCF5AB4](&unk_1BC820718, a1);
  sub_1BC817914();
  return swift_release();
}

void _s8SignpostV5InnerCMa()
{
  JUMPOUT(0x1BCCF5A3CLL);
}

uint64_t *sub_1BC7B578C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  swift_allocObject();
  return sub_1BC7B582C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t *sub_1BC7B582C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t *v9;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v17 = *v9;
  v18 = *(_QWORD *)(*v9 + 160);
  sub_1BC7B7098();
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(uint64_t *)((char *)v9 + v18) = v19;
  v20 = (uint64_t)v9 + *(_QWORD *)(*v9 + 168);
  *(_QWORD *)(v20 + 32) = 0;
  *(_OWORD *)v20 = 0u;
  *(_OWORD *)(v20 + 16) = 0u;
  *(_BYTE *)(v20 + 40) = 2;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v17 + 88) - 8) + 32))((uint64_t)v9 + *(_QWORD *)(*v9 + 112), a1);
  *(uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 120)) = a2;
  *(uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 128)) = a3;
  v21 = (uint64_t)v9 + *(_QWORD *)(*v9 + 136);
  *(_QWORD *)v21 = a4;
  *(_QWORD *)(v21 + 8) = a5;
  *(_BYTE *)(v21 + 16) = a6;
  v22 = (uint64_t)v9 + *(_QWORD *)(*v9 + 144);
  v23 = sub_1BC817548();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a7, v23);
  v24 = (uint64_t *)((char *)v9 + *(_QWORD *)(*v9 + 152));
  *v24 = a8;
  v24[1] = a9;
  return v9;
}

uint64_t sub_1BC7B596C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v1 = sub_1BC81879C();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, &qword_1EF45B380, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEDFC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  v10 = v0;
  v7 = sub_1BC818790();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1BC71A928((uint64_t)v3);
  swift_retain();
  return sub_1BC8187C0();
}

void sub_1BC7B5A80(_QWORD *a1@<X8>)
{
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = 0x74736F706E676953;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BC7B5AA8(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  int8x16_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  int8x16_t v14;
  int8x16_t v15;
  char v16;

  v3 = *v1;
  v4 = (os_unfair_lock_s *)(*(uint64_t *)((char *)v1 + *(_QWORD *)(*v1 + 160)) + 16);
  os_unfair_lock_lock(v4);
  v5 = (uint64_t)v1 + *(_QWORD *)(*v1 + 168);
  swift_beginAccess();
  sub_1BC6FC690(v5, (uint64_t)&v13);
  if (v16 == 2
    && (v6 = vorrq_s8(v14, v15),
        !(*(_QWORD *)&vorr_s8(*(int8x8_t *)v6.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v6, v6, 8uLL)) | (unint64_t)v13)))
  {
    sub_1BC6FC6CC((uint64_t)&v13);
    sub_1BC6FC700((uint64_t)a1, (uint64_t)&v13);
    v16 = 0;
    swift_beginAccess();
    sub_1BC6FC54C((uint64_t)&v13, v5);
    swift_endAccess();
    os_unfair_lock_unlock(v4);
    sub_1BC81807C();
    v8 = *v1;
    sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA818, (uint64_t (*)(uint64_t))sub_1BC6EF9EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BC81A0F0;
    v10 = (uint64_t *)((char *)v1 + *(_QWORD *)(v8 + 152));
    v12 = *v10;
    v11 = v10[1];
    *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v9 + 64) = sub_1BC6ED740();
    *(_QWORD *)(v9 + 32) = v12;
    *(_QWORD *)(v9 + 40) = v11;
    swift_bridgeObjectRetain();
    sub_1BC817530();
    swift_bridgeObjectRelease();
    v15.i64[0] = v3;
    v15.i64[1] = MEMORY[0x1BCCF5AB4](&unk_1BC8206E0, v3);
    v13 = v1;
    swift_retain();
    sub_1BC8176C8();
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v13);
  }
  else
  {
    sub_1BC6FC6CC((uint64_t)&v13);
    os_unfair_lock_unlock(v4);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1BC8176E0();
  }
}

uint64_t sub_1BC7B5D08()
{
  return sub_1BC8176D4();
}

void sub_1BC7B5D34(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _DWORD v30[2];
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  unsigned __int8 v42;

  v2 = v1;
  v36 = a1;
  v3 = *v1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v6 = (char *)v30 - v5;
  swift_getAssociatedConformanceWitness();
  v37 = AssociatedTypeWitness;
  v7 = sub_1BC8176EC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v30 - v9;
  v11 = (os_unfair_lock_s *)(*(_QWORD *)((char *)v2 + *(_QWORD *)(v3 + 160)) + 16);
  os_unfair_lock_lock(v11);
  v12 = (uint64_t)v2 + *(_QWORD *)(*v2 + 168);
  swift_beginAccess();
  sub_1BC6FC690(v12, (uint64_t)&v39);
  v13 = v42;
  sub_1BC6FC6CC((uint64_t)&v39);
  if (v13)
  {
    os_unfair_lock_unlock(v11);
  }
  else
  {
    v35 = v3;
    v39 = 1;
    v40 = 0u;
    v41 = 0u;
    v42 = 2;
    swift_beginAccess();
    sub_1BC6FC54C((uint64_t)&v39, v12);
    swift_endAccess();
    os_unfair_lock_unlock(v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v36, v7);
    v14 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v10, 1, v37) == 1)
    {
      sub_1BC818070();
      v15 = *v2;
      v16 = *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 128));
      v37 = *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 120));
      v38 = v16;
      sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA818, (uint64_t (*)(uint64_t))sub_1BC6EF9EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1BC81A0F0;
      v18 = (_QWORD *)((char *)v2 + *(_QWORD *)(v15 + 152));
      v20 = *v18;
      v19 = v18[1];
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v17 + 64) = sub_1BC6ED740();
      *(_QWORD *)(v17 + 32) = v20;
      *(_QWORD *)(v17 + 40) = v19;
      swift_bridgeObjectRetain();
      sub_1BC817530();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = v38;
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v6, v10, v14);
      sub_1BC818070();
      v22 = *v2;
      v23 = *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 128));
      v33 = *(_QWORD *)((char *)v2 + *(_QWORD *)(*v2 + 120));
      v34 = v23;
      v24 = (char *)v2 + *(_QWORD *)(v22 + 136);
      v25 = (char *)v2 + *(_QWORD *)(v22 + 144);
      v31 = *((_QWORD *)v24 + 1);
      v32 = v25;
      v30[1] = v24[16];
      sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6BA818, (uint64_t (*)(uint64_t))sub_1BC6EF9EC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_1BC81A0F0;
      v27 = sub_1BC8186F4();
      v29 = v28;
      *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v26 + 64) = sub_1BC6ED740();
      *(_QWORD *)(v26 + 32) = v27;
      *(_QWORD *)(v26 + 40) = v29;
      sub_1BC817530();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v14);
    }
    sub_1BC8176BC();
  }
}

void sub_1BC7B613C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  __int128 v3[2];
  char v4;
  _QWORD v5[4];

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160)) + 16);
  os_unfair_lock_lock(v1);
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_beginAccess();
  sub_1BC6FC690(v2, (uint64_t)v3);
  if (v4)
  {
    sub_1BC6FC6CC((uint64_t)v3);
    os_unfair_lock_unlock(v1);
  }
  else
  {
    sub_1BC6FC848(v3, (uint64_t)v5);
    os_unfair_lock_unlock(v1);
    __swift_project_boxed_opaque_existential_1(v5, v5[3]);
    sub_1BC817728();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v5);
  }
}

void sub_1BC7B6208()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  char v6;
  _QWORD v7[4];

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160)) + 16);
  os_unfair_lock_lock(v1);
  v2 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 168);
  swift_beginAccess();
  sub_1BC6FC690(v2, (uint64_t)&v3);
  if (v6)
  {
    sub_1BC6FC6CC((uint64_t)&v3);
    os_unfair_lock_unlock(v1);
  }
  else
  {
    sub_1BC6FC848((__int128 *)&v3, (uint64_t)v7);
    v3 = 1;
    v4 = 0u;
    v5 = 0u;
    v6 = 2;
    swift_beginAccess();
    sub_1BC6FC54C((uint64_t)&v3, v2);
    swift_endAccess();
    os_unfair_lock_unlock(v1);
    sub_1BC818070();
    sub_1BC817530();
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    sub_1BC8176E0();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
  }
}

uint64_t sub_1BC7B635C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 144);
  v2 = sub_1BC817548();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BC6FC6CC(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  return v0;
}

uint64_t sub_1BC7B6400()
{
  sub_1BC7B635C();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7B6420(_QWORD *a1)
{
  return sub_1BC7B5AA8(a1);
}

uint64_t sub_1BC7B6440()
{
  return sub_1BC7B5D08();
}

void sub_1BC7B6460(uint64_t a1)
{
  sub_1BC7B5D34(a1);
}

void sub_1BC7B6480()
{
  sub_1BC7B613C();
}

uint64_t sub_1BC7B64A0()
{
  return 0x74736F706E676953;
}

uint64_t sub_1BC7B64B8()
{
  return sub_1BC7B596C();
}

void sub_1BC7B64D8(_QWORD *a1@<X8>)
{
  sub_1BC7B5A80(a1);
}

void sub_1BC7B64F8()
{
  sub_1BC7B6208();
}

void sub_1BC7B6518()
{
  Publishers.Signpost.receive<A>(subscriber:)();
}

uint64_t sub_1BC7B652C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1BC817548();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1BC7B65E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  void **v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  __int128 v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(unint64_t, unint64_t, uint64_t);
  id v30;
  _QWORD *v31;
  _QWORD *v32;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1BC817548();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 + 17;
  v12 = *(_QWORD *)(v9 + 64) + 7;
  v13 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || ((v12
       + ((v10 + 17 + ((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    v17 = v8;
    v18 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v19 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8);
    v22 = (void **)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
    v23 = *v22;
    *v21 = *v22;
    v24 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_OWORD *)v25;
    *(_BYTE *)(v24 + 16) = *(_BYTE *)(v25 + 16);
    *(_OWORD *)v24 = v26;
    v27 = (v11 + v24) & v18;
    v28 = (v11 + v25) & v18;
    v29 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v30 = v23;
    v29(v27, v28, v17);
    v31 = (_QWORD *)((v12 + v27) & 0xFFFFFFFFFFFFFFF8);
    v32 = (_QWORD *)((v12 + v28) & 0xFFFFFFFFFFFFFFF8);
    *v31 = *v32;
    v31[1] = v32[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BC7B6770(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id *v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (id *)((((a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);

  v5 = sub_1BC817548();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(((((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80), v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7B6800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  void **v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  *v9 = *v10;
  v12 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v10) = *(_BYTE *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = (_BYTE)v10;
  v14 = sub_1BC817548();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 17 + v12) & ~v16;
  v18 = (v16 + 17 + v13) & ~v16;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v20 = v11;
  v19(v17, v18, v14);
  v21 = *(_QWORD *)(v15 + 64) + 7;
  v22 = (_QWORD *)((v21 + v17) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BC7B6900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void **v10;
  void *v11;
  void *v12;
  id v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (void **)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v10;
  v12 = *v9;
  *v9 = *v10;
  v13 = v11;

  v14 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v15 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_BYTE *)(v14 + 16) = *(_BYTE *)(v15 + 16);
  v16 = sub_1BC817548();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v18 + 17 + v14) & ~v18;
  v20 = (v18 + 17 + v15) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(v19, v20, v16);
  v21 = *(_QWORD *)(v17 + 64) + 7;
  v22 = (_QWORD *)((v21 + v19) & 0xFFFFFFFFFFFFFFF8);
  v23 = (_QWORD *)((v21 + v20) & 0xFFFFFFFFFFFFFFF8);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC7B6A08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v12 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v10) = *(_BYTE *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_BYTE *)(v11 + 16) = (_BYTE)v10;
  v13 = sub_1BC817548();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned __int8 *)(v14 + 80);
  v16 = (v15 + 17 + v11) & ~v15;
  v17 = (v15 + 17 + v12) & ~v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v16, v17, v13);
  *(_OWORD *)((*(_QWORD *)(v14 + 64) + 7 + v16) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v14 + 64) + 7 + v17) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BC7B6AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void **v9;
  void **v10;
  void *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (void **)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (void **)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *v9;
  *v9 = *v10;

  v12 = ((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  v13 = ((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v14 = sub_1BC817548();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = (v16 + 17 + v12) & ~v16;
  v18 = (v16 + 17 + v13) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40))(v17, v18, v14);
  v19 = *(_QWORD *)(v15 + 64) + 7;
  v20 = (_QWORD *)((v19 + v17) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)((v19 + v18) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BC7B6BE0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t *v20;
  uint64_t v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = sub_1BC817548();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10)
    v11 = *(_DWORD *)(v9 + 84);
  else
    v11 = v7;
  if (v11 <= 0x7FFFFFFF)
    v12 = 0x7FFFFFFF;
  else
    v12 = v11;
  if (!a2)
    return 0;
  v13 = *(_QWORD *)(v6 + 64);
  v14 = *(unsigned __int8 *)(v9 + 80);
  v15 = v14 + 17;
  if (v12 < a2)
  {
    if (((((*(_QWORD *)(v9 + 64)
           + ((v15 + ((((((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v16 = 2;
    else
      v16 = a2 - v12 + 1;
    if (v16 >= 0x10000)
      v17 = 4;
    else
      v17 = 2;
    if (v16 < 0x100)
      v17 = 1;
    if (v16 >= 2)
      v18 = v17;
    else
      v18 = 0;
    __asm { BR              X0 }
  }
  if ((_DWORD)v7 == v12)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v20 = (uint64_t *)((((a1 + v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v11 & 0x80000000) != 0)
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))((v15 + (((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14, v10, v8);
  v21 = *v20;
  if ((unint64_t)*v20 >= 0xFFFFFFFF)
    LODWORD(v21) = -1;
  return (v21 + 1);
}

void sub_1BC7B6D9C(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  unsigned int v15;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1BC817548() - 8);
  if (v8 <= *(_DWORD *)(v9 + 84))
    v10 = *(_DWORD *)(v9 + 84);
  else
    v10 = v8;
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  if (v11 >= a3)
  {
    v14 = 0u;
    if (a2 <= v11)
      goto LABEL_20;
  }
  else
  {
    if (((*(_DWORD *)(v9 + 64)
         + ((*(unsigned __int8 *)(v9 + 80)
           + 17
           + ((((((*(_DWORD *)(v7 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~*(unsigned __int8 *)(v9 + 80))
         + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v12 = a3 - v11 + 1;
    else
      v12 = 2;
    if (v12 >= 0x10000)
      v13 = 4;
    else
      v13 = 2;
    if (v12 < 0x100)
      v13 = 1;
    if (v12 >= 2)
      v14 = v13;
    else
      v14 = 0;
    if (a2 <= v11)
LABEL_20:
      __asm { BR              X16 }
  }
  if (((*(_DWORD *)(v9 + 64)
       + ((*(unsigned __int8 *)(v9 + 80)
         + 17
         + ((((((*(_DWORD *)(v7 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)) & ~*(unsigned __int8 *)(v9 + 80))
       + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v15 = ~v11 + a2;
    bzero(a1, ((*(_QWORD *)(v9 + 64)+ ((*(unsigned __int8 *)(v9 + 80)+ 17+ ((((((*(_QWORD *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v15;
  }
  __asm { BR              X10 }
}

void sub_1BC7B6EE8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
  JUMPOUT(0x1BC7B6F90);
}

void sub_1BC7B6EF0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v1 + v2) = 0;
  if (v0)
    JUMPOUT(0x1BC7B6EF8);
  JUMPOUT(0x1BC7B6F90);
}

void sub_1BC7B6F3C()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
  JUMPOUT(0x1BC7B6F90);
}

void sub_1BC7B6F44()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = v1;
  JUMPOUT(0x1BC7B6F90);
}

void sub_1BC7B6F4C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (v2)
  {
    if (v4 != v1)
    {
      if ((v0 & 0x80000000) == 0)
      {
        if ((v2 & 0x80000000) == 0)
          JUMPOUT(0x1BC7B6F8CLL);
        JUMPOUT(0x1BC7B6F88);
      }
      JUMPOUT(0x1BC7B6F58);
    }
    JUMPOUT(0x1BC7B6F70);
  }
  JUMPOUT(0x1BC7B6F90);
}

uint64_t sub_1BC7B6FAC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = sub_1BC817548();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

void sub_1BC7B7078()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC7B7088()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC7B7098()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BA808)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BA808);
  }
}

uint64_t sub_1BC7B70F8()
{
  return sub_1BC7B791C();
}

uint64_t sub_1BC7B7110()
{
  uint64_t v0;

  sub_1BC816C60();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BC816C54();
  sub_1BC7B883C(0);
  sub_1BC7B88E0();
  v0 = sub_1BC816C48();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC7B7264()
{
  uint64_t v0;

  sub_1BC816C60();
  swift_allocObject();
  swift_bridgeObjectRetain();
  sub_1BC816C54();
  sub_1BC743F54(0, (unint64_t *)&qword_1ED6BAB08, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970]);
  sub_1BC7B8704();
  v0 = sub_1BC816C48();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BC7B73D8()
{
  uint64_t v0;

  sub_1BC816C60();
  swift_allocObject();
  sub_1BC816C54();
  sub_1BC743DF4(0, &qword_1ED6BAAE8, (uint64_t (*)(void))sub_1BC743B24, (uint64_t (*)(void))sub_1BC743B68, (uint64_t)&type metadata for FeedItemTimeScope);
  sub_1BC7B876C();
  v0 = sub_1BC816C48();
  swift_release();
  return v0;
}

uint64_t sub_1BC7B7528()
{
  uint64_t v0;

  sub_1BC816C60();
  swift_allocObject();
  sub_1BC816C54();
  sub_1BC743DF4(0, &qword_1ED6BB038, (uint64_t (*)(void))sub_1BC743C14, (uint64_t (*)(void))sub_1BC743C58, (uint64_t)&type metadata for FeedItemProminence);
  sub_1BC7B87D4();
  v0 = sub_1BC816C48();
  swift_release();
  return v0;
}

uint64_t sub_1BC7B7678()
{
  uint64_t v0;

  sub_1BC816C60();
  swift_allocObject();
  sub_1BC816C54();
  sub_1BC743DF4(0, &qword_1EF45C848, (uint64_t (*)(void))sub_1BC7B8A60, (uint64_t (*)(void))sub_1BC7B8AA4, (uint64_t)&type metadata for ContentKind);
  sub_1BC7B8AE8();
  v0 = sub_1BC816C48();
  swift_release();
  return v0;
}

uint64_t sub_1BC7B77C8()
{
  uint64_t v0;

  sub_1BC816C60();
  swift_allocObject();
  sub_1BC816C54();
  sub_1BC743DF4(0, &qword_1EF45B790, (uint64_t (*)(void))sub_1BC743D04, (uint64_t (*)(void))sub_1BC743D48, (uint64_t)&type metadata for DailyRoutineKind);
  sub_1BC7B8928();
  v0 = sub_1BC816C48();
  swift_release();
  return v0;
}

uint64_t sub_1BC7B791C()
{
  uint64_t v0;

  sub_1BC816C60();
  swift_allocObject();
  sub_1BC816C54();
  sub_1BC743F54(0, &qword_1ED6BAB18, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEB080]);
  sub_1BC7B89F8();
  v0 = sub_1BC816C48();
  swift_release();
  return v0;
}

uint64_t sub_1BC7B7A6C()
{
  uint64_t v0;

  sub_1BC816C60();
  swift_allocObject();
  sub_1BC816C54();
  sub_1BC743DF4(0, &qword_1ED6BAAF8, (uint64_t (*)(void))sub_1BC743E64, (uint64_t (*)(void))sub_1BC743EA8, (uint64_t)&type metadata for DataVisualizationKind);
  sub_1BC7B8990();
  v0 = sub_1BC816C48();
  swift_release();
  return v0;
}

uint64_t RelevanceFeatureTagEncodable<>.makeEncodedValue()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v7 = *(_QWORD *)(a2 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v11 = (char *)&v18 - v10;
  v12 = type metadata accessor for ValueJSONWrapper(0, AssociatedTypeWitness, a3, a4);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v18 - v14;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(a1, v7);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v11, AssociatedTypeWitness);
  sub_1BC816C60();
  swift_allocObject();
  sub_1BC816C54();
  MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v12);
  v16 = sub_1BC816C48();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  swift_release();
  return v16;
}

uint64_t type metadata accessor for ValueJSONWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueJSONWrapper);
}

uint64_t sub_1BC7B7DF4()
{
  return sub_1BC7B7678();
}

uint64_t sub_1BC7B7DFC()
{
  return sub_1BC7B7A6C();
}

uint64_t sub_1BC7B7E04()
{
  return sub_1BC7B77C8();
}

uint64_t ValueJSONWrapper.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ValueJSONWrapper.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ValueJSONWrapper.value.modify())()
{
  return nullsub_1;
}

uint64_t sub_1BC7B7E50(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1BC818694();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1BC7B7ECC()
{
  return 0x65756C6176;
}

uint64_t sub_1BC7B7EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7B7E50(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BC7B7F14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BC6E7F34();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1BC7B7F48(uint64_t a1)
{
  MEMORY[0x1BCCF5AB4](&unk_1BC8208E0, a1);
  return sub_1BC8187FC();
}

uint64_t sub_1BC7B7F7C(uint64_t a1)
{
  MEMORY[0x1BCCF5AB4](&unk_1BC8208E0, a1);
  return sub_1BC818808();
}

uint64_t ValueJSONWrapper.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = a2[3];
  v10 = a2[2];
  v4 = type metadata accessor for ValueJSONWrapper.CodingKeys(255, v10, v3, a2[4]);
  MEMORY[0x1BCCF5AB4](&unk_1BC8208E0, v4);
  v5 = sub_1BC81864C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC8187F0();
  sub_1BC818634();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ValueJSONWrapper.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v28 = a5;
  v33 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v34 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ValueJSONWrapper.CodingKeys(255, v10, v11, v12);
  MEMORY[0x1BCCF5AB4](&unk_1BC8208E0, v13);
  v35 = sub_1BC8185E0();
  v29 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v15 = (char *)&v26 - v14;
  v31 = a2;
  v32 = a3;
  v27 = type metadata accessor for ValueJSONWrapper(0, a2, a3, a4);
  v16 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v18 = (char *)&v26 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v30 = v15;
  v19 = v36;
  sub_1BC8187E4();
  if (!v19)
  {
    v36 = v16;
    v20 = v29;
    v21 = v30;
    v22 = v33;
    v23 = v34;
    v24 = v31;
    sub_1BC8185C8();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v35);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v18, v23, v24);
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v28, v18, v27);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t type metadata accessor for ValueJSONWrapper.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ValueJSONWrapper.CodingKeys);
}

uint64_t sub_1BC7B82D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return ValueJSONWrapper.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1BC7B82F0(_QWORD *a1, _QWORD *a2)
{
  return ValueJSONWrapper.encode(to:)(a1, a2);
}

uint64_t sub_1BC7B8304()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC7B830C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BC7B8378(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC7B8428 + 4 * byte_1BC820770[(v7 - 1)]))();
}

void sub_1BC7B8478(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t sub_1BC7B8628(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC7B8668 + 4 * byte_1BC82077E[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC7B8688 + 4 * byte_1BC820783[v4]))();
}

_BYTE *sub_1BC7B8668(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC7B8688(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7B8690(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7B8698(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7B86A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7B86A8(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1BC7B86B4()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC7B86C4()
{
  JUMPOUT(0x1BCCF5AB4);
}

void sub_1BC7B86D4()
{
  JUMPOUT(0x1BCCF5AB4);
}

uint64_t sub_1BC7B86E4()
{
  return sub_1BC7B7110();
}

uint64_t sub_1BC7B86EC()
{
  return sub_1BC7B7528();
}

uint64_t sub_1BC7B86F4()
{
  return sub_1BC7B73D8();
}

uint64_t sub_1BC7B86FC()
{
  return sub_1BC7B7264();
}

unint64_t sub_1BC7B8704()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BAB00;
  if (!qword_1ED6BAB00)
  {
    sub_1BC743F54(255, (unint64_t *)&qword_1ED6BAB08, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970]);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BAB00);
  }
  return result;
}

unint64_t sub_1BC7B876C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BAAE0;
  if (!qword_1ED6BAAE0)
  {
    sub_1BC743DF4(255, &qword_1ED6BAAE8, (uint64_t (*)(void))sub_1BC743B24, (uint64_t (*)(void))sub_1BC743B68, (uint64_t)&type metadata for FeedItemTimeScope);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BAAE0);
  }
  return result;
}

unint64_t sub_1BC7B87D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BB030;
  if (!qword_1ED6BB030)
  {
    sub_1BC743DF4(255, &qword_1ED6BB038, (uint64_t (*)(void))sub_1BC743C14, (uint64_t (*)(void))sub_1BC743C58, (uint64_t)&type metadata for FeedItemProminence);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BB030);
  }
  return result;
}

void sub_1BC7B883C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF45C830)
  {
    sub_1BC714F04();
    v3 = v2;
    v4 = sub_1BC7A5C60((unint64_t *)&unk_1EF45C4F0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
    v5 = sub_1BC7A5C60(&qword_1EF45C388, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    v6 = type metadata accessor for ValueJSONWrapper(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF45C830);
  }
}

unint64_t sub_1BC7B88E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45C838;
  if (!qword_1EF45C838)
  {
    sub_1BC7B883C(255);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF45C838);
  }
  return result;
}

unint64_t sub_1BC7B8928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45C840;
  if (!qword_1EF45C840)
  {
    sub_1BC743DF4(255, &qword_1EF45B790, (uint64_t (*)(void))sub_1BC743D04, (uint64_t (*)(void))sub_1BC743D48, (uint64_t)&type metadata for DailyRoutineKind);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF45C840);
  }
  return result;
}

unint64_t sub_1BC7B8990()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BAAF0;
  if (!qword_1ED6BAAF0)
  {
    sub_1BC743DF4(255, &qword_1ED6BAAF8, (uint64_t (*)(void))sub_1BC743E64, (uint64_t (*)(void))sub_1BC743EA8, (uint64_t)&type metadata for DataVisualizationKind);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BAAF0);
  }
  return result;
}

unint64_t sub_1BC7B89F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6BAB10;
  if (!qword_1ED6BAB10)
  {
    sub_1BC743F54(255, &qword_1ED6BAB18, MEMORY[0x1E0DEB070], MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEB080]);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED6BAB10);
  }
  return result;
}

unint64_t sub_1BC7B8A60()
{
  unint64_t result;

  result = qword_1EF45C850;
  if (!qword_1EF45C850)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ContentKind, &type metadata for ContentKind);
    atomic_store(result, (unint64_t *)&qword_1EF45C850);
  }
  return result;
}

unint64_t sub_1BC7B8AA4()
{
  unint64_t result;

  result = qword_1EF45C858;
  if (!qword_1EF45C858)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ContentKind, &type metadata for ContentKind);
    atomic_store(result, (unint64_t *)&qword_1EF45C858);
  }
  return result;
}

unint64_t sub_1BC7B8AE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45C860;
  if (!qword_1EF45C860)
  {
    sub_1BC743DF4(255, &qword_1EF45C848, (uint64_t (*)(void))sub_1BC7B8A60, (uint64_t (*)(void))sub_1BC7B8AA4, (uint64_t)&type metadata for ContentKind);
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ValueJSONWrapper<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF45C860);
  }
  return result;
}

uint64_t CancellableProgressList.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;

  v0 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v1 = swift_allocObject();
  v2 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = 0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v3;
  return v0;
}

uint64_t CancellableProgressList.init()()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;

  type metadata accessor for UnfairLock();
  v1 = swift_allocObject();
  v2 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = 0;
  v3 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v3;
  return v0;
}

id sub_1BC7B8C10(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  void *v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  void *v22;
  _QWORD aBlock[7];

  v5 = sub_1BC816F3C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  aBlock[6] = *(_QWORD *)(v2 + 16);
  v20 = v2;
  v21 = a2;
  v22 = a1;
  type metadata accessor for UnfairLock();
  sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
  swift_retain();
  sub_1BC81708C();
  swift_release();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  v9 = (void *)sub_1BC816F0C();
  v10 = (void *)sub_1BC817AC4();
  objc_msgSend(a1, sel_setUserInfoObject_forKey_, v9, v10);

  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  v11 = (uint64_t (*)())objc_msgSend(a1, sel_cancellationHandler);
  if (v11)
  {
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = v11;
    v11 = sub_1BC7BA8EC;
  }
  else
  {
    v12 = 0;
  }
  sub_1BC71C9F8((uint64_t)v11);
  sub_1BC6F748C((uint64_t)v11);
  v13 = swift_allocObject();
  swift_weakInit();
  v14 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v13;
  v15[3] = v14;
  v15[4] = v11;
  v15[5] = v12;
  aBlock[4] = sub_1BC7BA8D8;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_21;
  v16 = _Block_copy(aBlock);
  sub_1BC71C9F8((uint64_t)v11);
  swift_retain();
  swift_retain();
  sub_1BC71C9F8((uint64_t)sub_1BC7BA8D8);
  swift_release();
  objc_msgSend(a1, sel_setCancellationHandler_, v16);
  _Block_release(v16);
  swift_release();
  swift_release();
  swift_release();
  v17 = a1;
  sub_1BC6F748C((uint64_t)v11);
  return v17;
}

uint64_t sub_1BC7B8EF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25[3];

  v6 = sub_1BC816F3C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v10 = sub_1BC817590();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB228);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  swift_retain_n();
  v11 = sub_1BC81756C();
  v12 = sub_1BC817E9C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v22 = swift_slowAlloc();
    v25[0] = v22;
    *(_DWORD *)v13 = 136315394;
    v14 = sub_1BC7BA4B0();
    v16 = sub_1BC6E14D8(v14, v15, v25);
    v23 = a3;
    v24 = v16;
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    sub_1BC6E1788(&qword_1ED6B7C38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v17 = sub_1BC818670();
    v24 = sub_1BC6E14D8(v17, v18, v25);
    a3 = v23;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl(&dword_1BC6DD000, v11, v12, "%s: add(uuid:) %s", (uint8_t *)v13, 0x16u);
    v19 = v22;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v19, -1, -1);
    MEMORY[0x1BCCF5BA4](v13, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  swift_beginAccess();
  v20 = a3;
  MEMORY[0x1BCCF48F0]();
  if (*(_QWORD *)((*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a1 + 24) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1BC817C98();
  sub_1BC817CD4();
  sub_1BC817C74();
  return swift_endAccess();
}

uint64_t sub_1BC7B91D8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result;
  uint64_t v5;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    MEMORY[0x1E0C80A78](result);
    type metadata accessor for UnfairLock();
    sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
    swift_retain();
    sub_1BC81708C();
    v5 = swift_release();
    if (a3)
      a3(v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC7B92E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  swift_retain();
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BC7BAE90(v4, a2);
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(a1 + 24) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7B936C()
{
  type metadata accessor for UnfairLock();
  sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
  swift_retain();
  sub_1BC81708C();
  return swift_release();
}

uint64_t sub_1BC7B93F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[2];
  uint64_t v29;
  unint64_t v30;

  v4 = sub_1BC816F3C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v8 = sub_1BC817590();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED6BB228);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  swift_retain_n();
  v9 = sub_1BC81756C();
  v10 = sub_1BC817E9C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v26 = a2;
    v12 = v11;
    v25 = swift_slowAlloc();
    v28[0] = v25;
    *(_DWORD *)v12 = 136315394;
    v24[1] = v12 + 4;
    v29 = 0;
    v30 = 0xE000000000000000;
    sub_1BC8182C8();
    sub_1BC817B48();
    v27 = a1;
    sub_1BC8183E8();
    sub_1BC817B48();
    swift_beginAccess();
    v13 = sub_1BC7BA968();
    v14 = swift_bridgeObjectRetain();
    MEMORY[0x1BCCF4914](v14, v13);
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    v29 = sub_1BC6E14D8(v29, v30, v28);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    sub_1BC6E1788(&qword_1ED6B7C38, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v15 = sub_1BC818670();
    v29 = sub_1BC6E14D8(v15, v16, v28);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1BC6DD000, v9, v10, "%s: clearProgress(for uuid:) %s", (uint8_t *)v12, 0x16u);
    v17 = v25;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v17, -1, -1);
    v18 = v12;
    a2 = v26;
    MEMORY[0x1BCCF5BA4](v18, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  MEMORY[0x1E0C80A78](v19);
  v24[-2] = a2;
  swift_beginAccess();
  result = sub_1BC7BAA24((uint64_t (*)(id *))sub_1BC7BAA08, (uint64_t)&v24[-4]);
  v21 = result;
  v22 = *(_QWORD *)(a1 + 24);
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v23 = sub_1BC8184E4();
    result = swift_bridgeObjectRelease();
    if (v23 >= v21)
      goto LABEL_8;
  }
  else
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v23 >= result)
    {
LABEL_8:
      sub_1BC753C44(v21, v23);
      return swift_endAccess();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC7B97F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  char v4;
  uint64_t v6;

  v0 = sub_1BC816F3C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7B989C((uint64_t)v3);
  v4 = sub_1BC816F18();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

uint64_t sub_1BC7B989C@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  __int128 v17;
  __int128 v18;

  sub_1BC7B3A68(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(v1, sel_userInfo);
  type metadata accessor for ProgressUserInfoKey(0);
  sub_1BC6E1788((unint64_t *)&unk_1ED6B8580, (uint64_t (*)(uint64_t))type metadata accessor for ProgressUserInfoKey, (uint64_t)&unk_1BC819EA4);
  v7 = sub_1BC817A34();

  v8 = sub_1BC817AC4();
  v9 = (void *)v8;
  if (!*(_QWORD *)(v7 + 16) || (v10 = sub_1BC70699C(v8), (v11 & 1) == 0))
  {
    v17 = 0u;
    v18 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1BC6E1A84(*(_QWORD *)(v7 + 56) + 32 * v10, (uint64_t)&v17);

  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v18 + 1))
  {
LABEL_7:
    sub_1BC6ED784((uint64_t)&v17, (uint64_t (*)(_QWORD))sub_1BC6EF7F8);
    v16 = sub_1BC816F3C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v5, 1, 1, v16);
    goto LABEL_8;
  }
  v12 = sub_1BC816F3C();
  v13 = swift_dynamicCast();
  v14 = *(_QWORD *)(v12 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v5, v13 ^ 1u, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v5, 1, v12) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a1, v5, v12);
LABEL_8:
  sub_1BC6ED784((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC7B3A68);
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t sub_1BC7B9AD0()
{
  type metadata accessor for UnfairLock();
  sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
  swift_retain();
  sub_1BC81708C();
  return swift_release();
}

uint64_t sub_1BC7B9B5C(uint64_t *a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)();
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t aBlock;
  unint64_t v39;
  uint64_t (*v40)(uint64_t);
  void *v41;
  void (*v42)();
  _QWORD *v43;
  uint64_t v44[4];

  v36 = *a1;
  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6BB228);
  swift_retain_n();
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    *(_DWORD *)v5 = 136315138;
    v44[0] = v6;
    v39 = 0xE000000000000000;
    sub_1BC8182C8();
    sub_1BC817B48();
    sub_1BC8183E8();
    sub_1BC817B48();
    swift_beginAccess();
    v7 = sub_1BC7BA968();
    v8 = swift_bridgeObjectRetain();
    MEMORY[0x1BCCF4914](v8, v7);
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    aBlock = sub_1BC6E14D8(0, 0xE000000000000000, v44);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v3, v4, "%s: cancelAll()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v32 = a1 + 3;
  swift_beginAccess();
  v9 = a1[3];
  if (!(v9 >> 62))
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_8;
LABEL_21:
    swift_bridgeObjectRelease();
    *v32 = MEMORY[0x1E0DEE9D8];
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BC8184E4();
  v10 = result;
  if (!result)
    goto LABEL_21;
LABEL_8:
  if (v10 >= 1)
  {
    v12 = 0;
    v33 = v9 & 0xC000000000000001;
    v34 = v10;
    v35 = v9;
    do
    {
      if (v33)
        v18 = (id)MEMORY[0x1BCCF4FB0](v12, v9);
      else
        v18 = *(id *)(v9 + 8 * v12 + 32);
      v19 = v18;
      swift_retain_n();
      v20 = v19;
      v21 = sub_1BC81756C();
      v22 = sub_1BC817E9C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = swift_slowAlloc();
        v24 = swift_slowAlloc();
        v37 = v24;
        aBlock = 0;
        *(_DWORD *)v23 = 136315394;
        v39 = 0xE000000000000000;
        sub_1BC8182C8();
        sub_1BC817B48();
        sub_1BC8183E8();
        sub_1BC817B48();
        v25 = sub_1BC7BA968();
        v26 = swift_bridgeObjectRetain();
        MEMORY[0x1BCCF4914](v26, v25);
        sub_1BC817B48();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BC817B48();
        *(_QWORD *)(v23 + 4) = sub_1BC6E14D8(aBlock, v39, &v37);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v23 + 12) = 2080;
        v27 = v20;
        v28 = objc_msgSend(v27, sel_description);
        v29 = sub_1BC817AE8();
        v31 = v30;

        *(_QWORD *)(v23 + 14) = sub_1BC6E14D8(v29, v31, &v37);
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v21, v22, "%s: cancelAll() progress: %s", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v24, -1, -1);
        MEMORY[0x1BCCF5BA4](v23, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      v14 = (uint64_t (*)())objc_msgSend(v20, sel_cancellationHandler);
      if (v14)
      {
        v13 = swift_allocObject();
        *(_QWORD *)(v13 + 16) = v14;
        v14 = sub_1BC7BB040;
      }
      else
      {
        v13 = 0;
      }
      ++v12;
      sub_1BC71C9F8((uint64_t)v14);
      sub_1BC6F748C((uint64_t)v14);
      v15 = (_QWORD *)swift_allocObject();
      v15[2] = v20;
      v15[3] = v14;
      v15[4] = v13;
      v15[5] = v36;
      v42 = sub_1BC7BA9D8;
      v43 = v15;
      aBlock = MEMORY[0x1E0C809B0];
      v39 = 1107296256;
      v40 = sub_1BC719640;
      v41 = &block_descriptor_16_0;
      v16 = _Block_copy(&aBlock);
      v17 = v20;
      sub_1BC71C9F8((uint64_t)v14);
      sub_1BC71C9F8((uint64_t)sub_1BC7BA9D8);
      swift_release();
      objc_msgSend(v17, sel_setCancellationHandler_, v16);
      _Block_release(v16);
      swift_release();
      objc_msgSend(v17, sel_cancel);
      sub_1BC6F748C((uint64_t)v14);

      v9 = v35;
    }
    while (v34 != v12);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

void sub_1BC7BA248(void *a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;

  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v7 = sub_1BC817590();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED6BB228);
  v8 = a1;
  v9 = sub_1BC81756C();
  v10 = sub_1BC817E9C();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v20 = swift_slowAlloc();
    v22 = v20;
    v23 = a4;
    *(_DWORD *)v11 = 136315394;
    swift_getMetatypeMetadata();
    v21 = a2;
    v12 = sub_1BC817AF4();
    v23 = sub_1BC6E14D8(v12, v13, &v22);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v14 = v8;
    v15 = objc_msgSend(v14, sel_description);
    v16 = sub_1BC817AE8();
    v18 = v17;

    v19 = v16;
    a2 = v21;
    v23 = sub_1BC6E14D8(v19, v18, &v22);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v9, v10, "[%s]: cancelAll() cancelProgressButHoldOntoItUntilCancellationCompletes(): %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v20, -1, -1);
    MEMORY[0x1BCCF5BA4](v11, -1, -1);

    if (!v21)
      goto LABEL_8;
    goto LABEL_7;
  }

  if (a2)
LABEL_7:
    a2();
LABEL_8:
  objc_msgSend(v8, sel_setCancellationHandler_, 0);
  _Block_release(0);
}

uint64_t sub_1BC7BA4B0()
{
  unint64_t v0;
  uint64_t v1;

  sub_1BC8182C8();
  sub_1BC817B48();
  sub_1BC8183E8();
  sub_1BC817B48();
  swift_beginAccess();
  v0 = sub_1BC7BA968();
  v1 = swift_bridgeObjectRetain();
  MEMORY[0x1BCCF4914](v1, v0);
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  return 0;
}

uint64_t CancellableProgressList.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t CancellableProgressList.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t CancellableProgressList.description.getter()
{
  uint64_t v1;

  type metadata accessor for UnfairLock();
  sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
  swift_retain();
  sub_1BC817080();
  swift_release();
  return v1;
}

uint64_t sub_1BC7BA6A0@<X0>(_QWORD *a1@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  sub_1BC8182C8();
  sub_1BC817B48();
  sub_1BC8183E8();
  sub_1BC817B48();
  swift_beginAccess();
  v2 = sub_1BC7BA968();
  v3 = swift_bridgeObjectRetain();
  MEMORY[0x1BCCF4914](v3, v2);
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = sub_1BC817B48();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1BC7BA7AC()
{
  uint64_t v1;

  type metadata accessor for UnfairLock();
  sub_1BC6E1788((unint64_t *)&qword_1ED6BA6F0, (uint64_t (*)(uint64_t))type metadata accessor for UnfairLock, (uint64_t)&protocol conformance descriptor for UnfairLock);
  swift_retain();
  sub_1BC817080();
  swift_release();
  return v1;
}

uint64_t sub_1BC7BA848()
{
  uint64_t v0;

  return sub_1BC7B8EF0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1BC7BA854()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7BA878()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7BA89C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 32))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7BA8D8()
{
  uint64_t v0;

  return sub_1BC7B91D8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32));
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t sub_1BC7BA8EC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1BC7BA8F8()
{
  uint64_t v0;

  return sub_1BC7B93F8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BC7BA900()
{
  uint64_t *v0;

  return sub_1BC7B9B5C(v0);
}

uint64_t sub_1BC7BA908@<X0>(_QWORD *a1@<X8>)
{
  return sub_1BC7BA6A0(a1);
}

uint64_t type metadata accessor for CancellableProgressList()
{
  return objc_opt_self();
}

uint64_t method lookup function for CancellableProgressList()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CancellableProgressList.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of CancellableProgressList.add(_:uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of CancellableProgressList.clearProgress(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of CancellableProgressList.cancelAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

unint64_t sub_1BC7BA968()
{
  unint64_t result;

  result = qword_1ED6B6358;
  if (!qword_1ED6B6358)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B6358);
  }
  return result;
}

uint64_t sub_1BC7BA9A4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

void sub_1BC7BA9D8()
{
  uint64_t v0;

  sub_1BC7BA248(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BC7BA9E4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BC7BAA08()
{
  return sub_1BC7B97F8() & 1;
}

uint64_t sub_1BC7BAA24(uint64_t (*a1)(id *), uint64_t a2)
{
  unint64_t *v2;
  uint64_t v3;
  unint64_t *v4;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  void *v15;
  char v16;
  unint64_t v17;
  id v18;
  id v19;
  int isUniquelyReferenced_nonNull_bridgeObject;
  void *v21;
  unint64_t v22;
  int v23;
  uint64_t v24;
  void *v25;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;

  v4 = v2;
  v7 = *v2;
  swift_bridgeObjectRetain();
  v8 = sub_1BC7BAD7C(a1, a2, v7);
  v10 = v9;
  swift_bridgeObjectRelease();
  if (v3)
    return v8;
  if ((v10 & 1) == 0)
  {
    v11 = v8 + 1;
    if (__OFADD__(v8, 1))
      goto LABEL_54;
    if (*v4 >> 62)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      v30 = sub_1BC8184E4();
      swift_bridgeObjectRelease();
      if (v11 != v30)
        goto LABEL_6;
    }
    else if (v11 != *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_6:
      v11 = v8 + 5;
      v32 = a2;
      while (1)
      {
        v12 = v11 - 4;
        v13 = *v4;
        if ((*v4 & 0xC000000000000001) != 0)
        {
          v14 = (id)MEMORY[0x1BCCF4FB0](v11 - 4);
        }
        else
        {
          if ((v12 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
LABEL_52:
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            __break(1u);
            goto LABEL_55;
          }
          if (v12 >= *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_45;
          v14 = *(id *)(v13 + 8 * v11);
        }
        v15 = v14;
        v33 = v14;
        v16 = a1(&v33);

        if ((v16 & 1) == 0)
          break;
LABEL_32:
        v27 = v11 - 3;
        if (__OFADD__(v12, 1))
          goto LABEL_46;
        if (*v4 >> 62)
        {
          swift_bridgeObjectRetain();
          v28 = sub_1BC8184E4();
          swift_bridgeObjectRelease();
        }
        else
        {
          v28 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        ++v11;
        if (v27 == v28)
          return v8;
      }
      if (v12 == v8)
      {
LABEL_31:
        if (__OFADD__(v8++, 1))
          goto LABEL_47;
        goto LABEL_32;
      }
      v17 = *v4;
      if ((*v4 & 0xC000000000000001) != 0)
      {
        v18 = (id)MEMORY[0x1BCCF4FB0](v8, *v4);
        v17 = *v4;
        if ((*v4 & 0xC000000000000001) == 0)
        {
LABEL_17:
          if ((v12 & 0x8000000000000000) != 0)
            goto LABEL_50;
          if (v12 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_51;
          v19 = *(id *)(v17 + 8 * v11);
          goto LABEL_20;
        }
      }
      else
      {
        if ((v8 & 0x8000000000000000) != 0)
          goto LABEL_48;
        if (v8 >= *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_49;
        v18 = *(id *)(v17 + 8 * v8 + 32);
        if ((v17 & 0xC000000000000001) == 0)
          goto LABEL_17;
      }
      v19 = (id)MEMORY[0x1BCCF4FB0](v11 - 4, v17);
      v17 = *v4;
LABEL_20:
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v4 = v17;
      if (!isUniquelyReferenced_nonNull_bridgeObject
        || (v17 & 0x8000000000000000) != 0
        || (v17 & 0x4000000000000000) != 0)
      {
        sub_1BC7523CC(v17);
      }
      v21 = *(void **)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20);
      *(_QWORD *)((v17 & 0xFFFFFFFFFFFFFF8) + 8 * v8 + 0x20) = v19;

      sub_1BC817C74();
      v22 = *v4;
      v23 = swift_isUniquelyReferenced_nonNull_bridgeObject();
      *v4 = v22;
      if (!v23 || (v22 & 0x8000000000000000) != 0 || (v22 & 0x4000000000000000) != 0)
        sub_1BC7523CC(v22);
      a2 = v32;
      if ((v12 & 0x8000000000000000) != 0)
        goto LABEL_52;
      v24 = v22 & 0xFFFFFFFFFFFFFF8;
      if (v12 >= *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_53;
      v25 = *(void **)(v24 + 8 * v11);
      *(_QWORD *)(v24 + 8 * v11) = v18;

      sub_1BC817C74();
      goto LABEL_31;
    }
    return v8;
  }
  if (!(*v4 >> 62))
    return *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v31 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  return v31;
}

uint64_t sub_1BC7BAD7C(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  char v10;
  uint64_t v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_14;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  v7 = 0;
  if (v6)
  {
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1BCCF4FB0](v7, a3) : *(id *)(a3 + 8 * v7 + 32);
      v9 = v8;
      v13 = v8;
      v10 = a1(&v13);

      if (v3 || (v10 & 1) != 0)
        break;
      v11 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        v6 = sub_1BC8184E4();
        swift_bridgeObjectRelease();
        v7 = 0;
        if (!v6)
          return v7;
      }
      else
      {
        ++v7;
        if (v11 == v6)
          return 0;
      }
    }
  }
  return v7;
}

uint64_t sub_1BC7BAE90(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v15;

  v15 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
    goto LABEL_17;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      v5 = 0;
      v6 = a2 + 16;
      while ((a1 & 0xC000000000000001) != 0)
      {
        v7 = (id)MEMORY[0x1BCCF4FB0](v5, a1);
LABEL_9:
        v8 = v7;
        v9 = v5 + 1;
        if (__OFADD__(v5, 1))
          goto LABEL_16;
        v10 = v4;
        swift_beginAccess();
        v11 = MEMORY[0x1BCCF5C70](v6);
        if (v11
          && (v12 = (void *)v11,
              sub_1BC7BA968(),
              v13 = v8,
              a2 = sub_1BC8180D0(),
              v13,
              v13,
              v12,
              (a2 & 1) != 0))
        {

        }
        else
        {
          sub_1BC818358();
          sub_1BC818388();
          sub_1BC818394();
          a2 = (uint64_t)&v15;
          sub_1BC818364();
        }
        ++v5;
        v4 = v10;
        if (v9 == v10)
          return v15;
      }
      if (v5 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        break;
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      v4 = sub_1BC8184E4();
      if (!v4)
        return MEMORY[0x1E0DEE9D8];
    }
    v7 = *(id *)(a1 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC7BB038()
{
  uint64_t v0;

  return sub_1BC7B92E8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

char *HealthExperienceStoreOracle.init(healthExperienceStore:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_1BC7BC628((uint64_t)v7, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v9;
}

void sub_1BC7BB0F0(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState);
  os_unfair_lock_lock(v3 + 16);
  sub_1BC7BCFA0((uint64_t)&v3[6], a1);
  os_unfair_lock_unlock(v3 + 16);
}

id sub_1BC7BB13C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BC7BC8E4(a1, v1);
}

id sub_1BC7BB144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  ObjectType = swift_getObjectType();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v3 = sub_1BC817590();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED6BB5D0);
  v4 = sub_1BC81756C();
  v5 = sub_1BC817E6C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v12 = v7;
    v13 = ObjectType;
    *(_DWORD *)v6 = 136315138;
    swift_getMetatypeMetadata();
    v8 = sub_1BC817AF4();
    v13 = sub_1BC6E14D8(v8, v9, &v12);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v4, v5, "[%s] notifyClients()", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v7, -1, -1);
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
  }

  v10 = *(void **)(v1 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter);
  if (qword_1ED6B6388 != -1)
    swift_once();
  return objc_msgSend(v10, sel_postNotificationName_object_, qword_1ED6B8520, v1, v12);
}

uint64_t sub_1BC7BB324(uint64_t a1)
{
  char *v1;
  char *v2;
  void *ObjectType;
  uint64_t v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  void *v45;
  uint64_t v46[2];
  id v47[5];

  v2 = v1;
  ObjectType = (void *)swift_getObjectType();
  v5 = a1 + 8;
  sub_1BC7BCFA0(a1 + 8, (uint64_t)v47);
  v6 = v47[3];
  sub_1BC6ED784((uint64_t)v47, (uint64_t (*)(_QWORD))sub_1BC7BCBB0);
  if (v6)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v7 = sub_1BC817590();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED6BB5D0);
    v8 = sub_1BC81756C();
    v9 = sub_1BC817E6C();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v46[0] = v11;
      *(_DWORD *)v10 = 136315138;
      v47[0] = ObjectType;
      swift_getMetatypeMetadata();
      v12 = sub_1BC817AF4();
      v47[0] = (id)sub_1BC6E14D8(v12, v13, v46);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v8, v9, "[%s] attemptToInitializeStore(state:) but we have a health store - dropping", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v11, -1, -1);
      MEMORY[0x1BCCF5BA4](v10, -1, -1);
    }

    return 0;
  }
  else
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v14 = sub_1BC817590();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED6BB5D0);
    v15 = sub_1BC81756C();
    v16 = sub_1BC817E6C();
    v45 = ObjectType;
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v19 = ObjectType;
      v20 = v18;
      v46[0] = v18;
      *(_DWORD *)v17 = 136315138;
      v47[0] = v19;
      swift_getMetatypeMetadata();
      v21 = sub_1BC817AF4();
      v47[0] = (id)sub_1BC6E14D8(v21, v22, v46);
      v5 = a1 + 8;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v15, v16, "[%s] attemptToInitializeStore(state:)", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v20, -1, -1);
      MEMORY[0x1BCCF5BA4](v17, -1, -1);
    }

    v23 = (uint64_t)&v2[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore];
    v24 = *(_QWORD *)&v2[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore + 24];
    v25 = *(_QWORD *)&v2[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore + 32];
    __swift_project_boxed_opaque_existential_1(&v2[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore], v24);
    (*(void (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
    v27 = v2;
    v28 = sub_1BC81756C();
    v29 = sub_1BC817E6C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v31 = swift_slowAlloc();
      v46[0] = v31;
      *(_DWORD *)v30 = 136315394;
      v47[0] = v45;
      swift_getMetatypeMetadata();
      v32 = sub_1BC817AF4();
      v47[0] = (id)sub_1BC6E14D8(v32, v33, v46);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2080;
      sub_1BC6FC700(v23, (uint64_t)v47);
      sub_1BC6FD528(0, &qword_1ED6B7C78);
      v34 = sub_1BC817AF4();
      v47[0] = (id)sub_1BC6E14D8(v34, v35, v46);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v28, v29, "[%s] calling performCacheInvalidationIfNecessary with %s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v31, -1, -1);
      MEMORY[0x1BCCF5BA4](v30, -1, -1);

    }
    else
    {

    }
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *(_QWORD *)v27) + 0xB8))(v23);
    v36 = v27;
    v37 = sub_1BC81756C();
    v38 = sub_1BC817E6C();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v46[0] = v40;
      *(_DWORD *)v39 = 136315394;
      v47[0] = v45;
      swift_getMetatypeMetadata();
      v41 = sub_1BC817AF4();
      v47[0] = (id)sub_1BC6E14D8(v41, v42, v46);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2080;
      sub_1BC6FC700(v23, (uint64_t)v47);
      sub_1BC6FD528(0, &qword_1ED6B7C78);
      v43 = sub_1BC817AF4();
      v47[0] = (id)sub_1BC6E14D8(v43, v44, v46);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v37, v38, "[%s] attemptToInitializeStore(shouldListen:): initPersistentContainer() success %s", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v40, -1, -1);
      MEMORY[0x1BCCF5BA4](v39, -1, -1);

    }
    else
    {

    }
    sub_1BC6ED784(v5, (uint64_t (*)(_QWORD))sub_1BC7BCBB0);
    sub_1BC6FC700(v23, v5);
    return 1;
  }
}

void sub_1BC7BBB20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ObjectType;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  os_unfair_lock_s *v10;
  os_unfair_lock_s *v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  ObjectType = swift_getObjectType();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v3 = sub_1BC817590();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED6BB5D0);
  v4 = sub_1BC81756C();
  v5 = sub_1BC817E6C();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = swift_slowAlloc();
    v13 = v7;
    v14 = ObjectType;
    *(_DWORD *)v6 = 136315138;
    swift_getMetatypeMetadata();
    v8 = sub_1BC817AF4();
    v14 = sub_1BC6E14D8(v8, v9, &v13);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v4, v5, "[%s] dataNowAccessible() attempting to initialize store", v6, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v7, -1, -1);
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
  }

  v10 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState);
  v11 = v10 + 4;
  v12 = v10 + 16;
  os_unfair_lock_lock(v10 + 16);
  LOBYTE(v11) = sub_1BC7BB324(v11);
  os_unfair_lock_unlock(v12);
  if ((v11 & 1) != 0)
    sub_1BC7BB144();
}

uint64_t sub_1BC7BBCF8(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[2];

  v3 = sub_1BC8170B0();
  v4 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*a1)
  {
    (*(void (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v1) + 0xA0))(result);
    sub_1BC8170C8();
    v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BE60];
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x1E0D2BE30], v3);
    v12[1] = sub_1BC8170BC();
    v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_1BC7BCF74;
    *(_QWORD *)(v10 + 24) = v9;
    sub_1BC6E1788((unint64_t *)&unk_1ED6B9C40, v8, MEMORY[0x1E0D2BE58]);
    v11 = sub_1BC81792C();
    swift_release();
    swift_release();
    result = swift_release();
    *a1 = v11;
  }
  return result;
}

void sub_1BC7BBE78()
{
  uint64_t ObjectType;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  ObjectType = swift_getObjectType();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v1 = sub_1BC817590();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6BB5D0);
  v2 = sub_1BC81756C();
  v3 = sub_1BC817E90();
  if (os_log_type_enabled(v2, v3))
  {
    v4 = (uint8_t *)swift_slowAlloc();
    v5 = swift_slowAlloc();
    v8 = v5;
    v9 = ObjectType;
    *(_DWORD *)v4 = 136315138;
    swift_getMetatypeMetadata();
    v6 = sub_1BC817AF4();
    v9 = sub_1BC6E14D8(v6, v7, &v8);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v2, v3, "[%s] handleUnrecoverableError() exiting", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
    MEMORY[0x1BCCF5BA4](v4, -1, -1);
  }

  exit(0);
}

uint64_t Notification.oracle.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD v6[2];
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = sub_1BC816CE4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC816CCC();
  if (v9)
  {
    type metadata accessor for HealthExperienceStoreOracle();
    if (swift_dynamicCast())
      return v6[0];
  }
  else
  {
    sub_1BC6ED784((uint64_t)&v7, (uint64_t (*)(_QWORD))sub_1BC6EF7F8);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
  v7 = 0;
  v8 = 0xE000000000000000;
  sub_1BC8182C8();
  v6[0] = v7;
  v6[1] = v8;
  sub_1BC817B48();
  sub_1BC816CCC();
  sub_1BC6EF7F8();
  sub_1BC817AF4();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC6E1788(&qword_1EF45C870, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE648], MEMORY[0x1E0CAE658]);
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t sub_1BC7BC1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC7BCFA0(a1 + 8, a2);
}

uint64_t HealthExperienceStoreOracle.healthExperienceStore.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC6FC700(v1 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore, a1);
}

char *HealthExperienceStoreOracle.__allocating_init(healthExperienceStore:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v3 = (char *)objc_allocWithZone(v1);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = __swift_mutable_project_boxed_opaque_existential_1(a1, v4);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v8);
  v10 = sub_1BC7BC628((uint64_t)v8, v3, v4, v5);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v10;
}

uint64_t sub_1BC7BC298@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC7BB324(a1);
  *a2 = result & 1;
  return result;
}

void sub_1BC7BC2D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF5C70](v1);
  if (v2)
  {
    v3 = (void *)v2;
    sub_1BC7BBB20();

  }
}

id HealthExperienceStoreOracle.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HealthExperienceStoreOracle.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HealthExperienceStoreOracle.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthExperienceStoreOracle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t HealthExperienceStoreOracle.description.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  _QWORD v3[5];
  uint64_t v4;
  unint64_t v5;

  v3[1] = 0xE000000000000000;
  sub_1BC8182C8();
  v4 = 0;
  v5 = 0xE000000000000000;
  sub_1BC817B48();
  swift_getObjectType();
  sub_1BC7BCB7C();
  sub_1BC817AF4();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  v3[0] = v0;
  sub_1BC8183E8();
  sub_1BC817B48();
  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState);
  os_unfair_lock_lock(v1 + 16);
  sub_1BC7BCFA0((uint64_t)&v1[6], (uint64_t)v3);
  os_unfair_lock_unlock(v1 + 16);
  sub_1BC7BCBB0();
  sub_1BC817AF4();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  return v4;
}

uint64_t sub_1BC7BC5B4()
{
  uint64_t result;

  result = sub_1BC817AC4();
  qword_1ED6B8520 = result;
  return result;
}

id static NSNotificationName.HealthExperienceStoreOracleHasStore.getter()
{
  if (qword_1ED6B6388 != -1)
    swift_once();
  return (id)qword_1ED6B8520;
}

char *sub_1BC7BC628(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  objc_super v29;
  _OWORD v30[3];
  uint64_t v31[5];

  ObjectType = swift_getObjectType();
  v31[3] = a3;
  v31[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v31);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(boxed_opaque_existential_1, a1, a3);
  v10 = OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter;
  v11 = objc_allocWithZone(MEMORY[0x1E0CB37D0]);
  v12 = a2;
  *(_QWORD *)&a2[v10] = objc_msgSend(v11, sel_init);
  v13 = OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState;
  sub_1BC75978C();
  memset(v30, 0, sizeof(v30));
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 64) = 0;
  sub_1BC7597E8(v30, v14 + 16);
  sub_1BC759824((uint64_t)v30);
  *(_QWORD *)&v12[v13] = v14;
  sub_1BC6FC700((uint64_t)v31, (uint64_t)&v12[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_healthExperienceStore]);

  v29.receiver = v12;
  v29.super_class = (Class)type metadata accessor for HealthExperienceStoreOracle();
  v15 = (char *)objc_msgSendSuper2(&v29, sel_init);
  v16 = *(os_unfair_lock_s **)&v15[OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState];
  v17 = (uint64_t)&v16[4];
  v18 = v16 + 16;
  v19 = v15;
  os_unfair_lock_lock(v18);
  LOBYTE(v17) = sub_1BC7BB324(v17);
  os_unfair_lock_unlock(v18);
  if ((v17 & 1) != 0)
    sub_1BC7BB144();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v20 = sub_1BC817590();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB5D0);
  v21 = sub_1BC81756C();
  v22 = sub_1BC817E6C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v24 = swift_slowAlloc();
    v28 = v24;
    *(_DWORD *)v23 = 136315138;
    *(_QWORD *)&v30[0] = ObjectType;
    swift_getMetatypeMetadata();
    v25 = sub_1BC817AF4();
    *(_QWORD *)&v30[0] = sub_1BC6E14D8(v25, v26, &v28);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v21, v22, "[%s] init()", v23, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v24, -1, -1);
    MEMORY[0x1BCCF5BA4](v23, -1, -1);
  }

  __swift_destroy_boxed_opaque_existential_0((uint64_t)v31);
  return v19;
}

id sub_1BC7BC8E4(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;

  ObjectType = swift_getObjectType();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v5 = sub_1BC817590();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED6BB5D0);
  swift_unknownObjectRetain_n();
  v6 = sub_1BC81756C();
  v7 = sub_1BC817E6C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v16 = v9;
    v17 = ObjectType;
    *(_DWORD *)v8 = 136315394;
    swift_getMetatypeMetadata();
    v10 = sub_1BC817AF4();
    v17 = sub_1BC6E14D8(v10, v11, &v16);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v17 = a1;
    sub_1BC7BCFE4();
    swift_unknownObjectRetain();
    v12 = sub_1BC817AF4();
    v17 = sub_1BC6E14D8(v12, v13, &v16);
    sub_1BC818148();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v6, v7, "[%s] register(observer:): %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v9, -1, -1);
    MEMORY[0x1BCCF5BA4](v8, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v14 = *(void **)(a2 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter);
  if (qword_1ED6B6388 != -1)
    swift_once();
  return objc_msgSend(v14, sel_addObserver_selector_name_object_, a1, sel_storeDidUpdateWithNote_, qword_1ED6B8520, a2, v16);
}

uint64_t type metadata accessor for HealthExperienceStoreOracle()
{
  return objc_opt_self();
}

unint64_t sub_1BC7BCB7C()
{
  unint64_t result;

  result = qword_1ED6B7C80;
  if (!qword_1ED6B7C80)
  {
    type metadata accessor for HealthExperienceStoreOracle();
    result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B7C80);
  }
  return result;
}

void sub_1BC7BCBB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B63C0)
  {
    sub_1BC6FD528(255, &qword_1ED6B7C78);
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B63C0);
  }
}

uint64_t method lookup function for HealthExperienceStoreOracle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.readyHealthExperienceStore.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.register(observer:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.__allocating_init(healthExperienceStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.beginListeningToDataAccessChanges()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.handleUnrecoverableError()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of HealthExperienceStoreOracle.performCacheInvalidationIfNecessary(store:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t destroy for HealthExperienceStoreOracle.State(uint64_t a1)
{
  uint64_t result;

  result = swift_release();
  if (*(_QWORD *)(a1 + 32))
    return __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  return result;
}

uint64_t initializeWithCopy for HealthExperienceStoreOracle.State(uint64_t a1, _QWORD *a2)
{
  _OWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  *(_QWORD *)a1 = *a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = a2 + 1;
  v6 = a2[4];
  swift_retain();
  if (v6)
  {
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v7;
    (**(void (***)(uint64_t, _QWORD *, uint64_t))(v6 - 8))(a1 + 8, v5, v6);
  }
  else
  {
    v8 = *((_OWORD *)v5 + 1);
    *v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 24) = v8;
    *(_QWORD *)(a1 + 40) = v5[4];
  }
  return a1;
}

uint64_t assignWithCopy for HealthExperienceStoreOracle.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 32) = v4;
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 8);
    v6 = *(_OWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 8) = v5;
    *(_OWORD *)(a1 + 24) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_0(a1 + 8);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t assignWithTake for HealthExperienceStoreOracle.State(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  if (*(_QWORD *)(a1 + 32))
    __swift_destroy_boxed_opaque_existential_0(a1 + 8);
  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthExperienceStoreOracle.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 48))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthExperienceStoreOracle.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 48) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthExperienceStoreOracle.State()
{
  return &type metadata for HealthExperienceStoreOracle.State;
}

uint64_t sub_1BC7BCF50()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC7BCF74()
{
  uint64_t v0;

  sub_1BC7BC2D4(v0);
}

uint64_t sub_1BC7BCF7C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7BCFA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC7BCBB0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BC7BCFE4()
{
  unint64_t result;

  result = qword_1ED6B7CE0;
  if (!qword_1ED6B7CE0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6B7CE0);
  }
  return result;
}

id OrchestrationAnchor.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id OrchestrationAnchor.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for OrchestrationAnchor();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for OrchestrationAnchor()
{
  return objc_opt_self();
}

id OrchestrationAnchor.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OrchestrationAnchor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

BOOL static FeedItemContextEnvironment.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t FeedItemContextEnvironment.description.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x65746E4972657375;
  else
    return 0x756F72676B636162;
}

uint64_t FeedItemContextEnvironment.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t sub_1BC7BD20C()
{
  sub_1BC7BD5C4();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7BD234()
{
  sub_1BC7BD5C4();
  return sub_1BC818808();
}

uint64_t sub_1BC7BD25C()
{
  _BYTE *v0;

  if (*v0)
    return 0x65746E4972657375;
  else
    return 0x756F72676B636162;
}

uint64_t sub_1BC7BD2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7BDA28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC7BD2CC()
{
  sub_1BC7BD608();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7BD2F4()
{
  sub_1BC7BD608();
  return sub_1BC818808();
}

uint64_t sub_1BC7BD31C()
{
  sub_1BC7BD580();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7BD344()
{
  sub_1BC7BD580();
  return sub_1BC818808();
}

uint64_t FeedItemContextEnvironment.encode(to:)(_QWORD *a1, int a2)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  char v22;
  char v23;

  v21 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BC788E10(0, &qword_1EF45C888, (uint64_t (*)(void))sub_1BC7BD580, (uint64_t)&type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - v5;
  sub_1BC788E10(0, &qword_1EF45C898, (uint64_t (*)(void))sub_1BC7BD5C4, (uint64_t)&type metadata for FeedItemContextEnvironment.BackgroundCodingKeys, v3);
  v17 = *(_QWORD *)(v7 - 8);
  v18 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  sub_1BC788E10(0, &qword_1EF45C8A8, (uint64_t (*)(void))sub_1BC7BD608, (uint64_t)&type metadata for FeedItemContextEnvironment.CodingKeys, v3);
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v16 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7BD608();
  sub_1BC8187F0();
  if ((v21 & 1) != 0)
  {
    v23 = 1;
    sub_1BC7BD580();
    sub_1BC8185EC();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v20);
  }
  else
  {
    v22 = 0;
    sub_1BC7BD5C4();
    sub_1BC8185EC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

unint64_t sub_1BC7BD580()
{
  unint64_t result;

  result = qword_1EF45C890;
  if (!qword_1EF45C890)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820E34, &type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C890);
  }
  return result;
}

unint64_t sub_1BC7BD5C4()
{
  unint64_t result;

  result = qword_1EF45C8A0;
  if (!qword_1EF45C8A0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820DE4, &type metadata for FeedItemContextEnvironment.BackgroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8A0);
  }
  return result;
}

unint64_t sub_1BC7BD608()
{
  unint64_t result;

  result = qword_1EF45C8B0;
  if (!qword_1EF45C8B0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820D94, &type metadata for FeedItemContextEnvironment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8B0);
  }
  return result;
}

uint64_t FeedItemContextEnvironment.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

unint64_t FeedItemContextEnvironment.init(from:)(_QWORD *a1)
{
  return (unint64_t)sub_1BC7BDB48(a1) & 1;
}

_QWORD *sub_1BC7BD6A8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_1BC7BDB48(a1);
  if (!v2)
    *a2 = result & 1;
  return result;
}

uint64_t sub_1BC7BD6D4(_QWORD *a1)
{
  unsigned __int8 *v1;

  return FeedItemContextEnvironment.encode(to:)(a1, *v1);
}

uint64_t sub_1BC7BD6F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FeedItemContext.commit(_:)(a1, a2, a3);
}

uint64_t FeedItemContext.commit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t FeedItemContext.previousFeedItems()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(a2 + 96))(1, 0, 0, 2, a1, a2);
}

uint64_t FeedItemContext.previousFeedItems(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(a3 + 96))(a1, 0, 0, 2, a2, a3);
}

uint64_t FeedItemContext.previousFeedItems(uniqueIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;

  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = a1;
  *(_QWORD *)(inited + 40) = a2;
  swift_bridgeObjectRetain();
  v11 = sub_1BC731B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a4 + 96))(v11, 1, 0, 0, a3, a4);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13 > 1)
  {
    sub_1BC8182C8();
    sub_1BC817B48();
    v18 = type metadata accessor for PluginFeedItem();
    MEMORY[0x1BCCF4914](v12, v18);
    sub_1BC817B48();
    swift_bridgeObjectRelease();
    sub_1BC817B48();
    sub_1BC817B48();
    result = sub_1BC8184B4();
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for PluginFeedItem();
    v15 = *(_QWORD *)(v14 - 8);
    if (v13)
    {
      sub_1BC70F784(v12 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), a5);
      v16 = 0;
    }
    else
    {
      v16 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(a5, v16, 1, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t FeedItemContext.previousFeedItems(uniqueIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(a3 + 96))(a1, 1, 0, 0, a2, a3);
}

uint64_t FeedItemContext.previousFeedItems(withUniqueIdentifierContaining:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 96))(a1, a2, 1, 1, a3, a4);
}

uint64_t FeedItemContext.previousFeedItems(with:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 96))(a1, a2, a3, 1, a4);
}

uint64_t FeedItemContext.isUserInteractive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))() & 1;
}

id FeedItemContext.sourceProfile.getter(uint64_t a1, uint64_t a2)
{
  void *v2;
  id v3;

  v2 = (void *)(*(uint64_t (**)(void))(a2 + 8))();
  v3 = objc_msgSend(v2, sel_profileIdentifier);

  return v3;
}

uint64_t sub_1BC7BDA28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F72676B636162 && a2 == 0xEA0000000000646ELL;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746E4972657375 && a2 == 0xEF65766974636172)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

_QWORD *sub_1BC7BDB48(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  char v32;
  char v33;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BC788E10(0, &qword_1EF45C910, (uint64_t (*)(void))sub_1BC7BD580, (uint64_t)&type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v26 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v24 - v4;
  sub_1BC788E10(0, &qword_1EF45C918, (uint64_t (*)(void))sub_1BC7BD5C4, (uint64_t)&type metadata for FeedItemContextEnvironment.BackgroundCodingKeys, v2);
  v6 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  v29 = v6;
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - v7;
  sub_1BC788E10(0, &qword_1EF45C920, (uint64_t (*)(void))sub_1BC7BD608, (uint64_t)&type metadata for FeedItemContextEnvironment.CodingKeys, v2);
  v10 = v9;
  v11 = *(_QWORD **)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v24 - v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7BD608();
  v14 = v31;
  sub_1BC8187E4();
  if (v14)
    goto LABEL_7;
  v16 = v29;
  v15 = v30;
  v31 = v11;
  v25 = a1;
  v17 = v13;
  v18 = sub_1BC8185D4();
  if (*(_QWORD *)(v18 + 16) != 1)
  {
    v21 = sub_1BC818334();
    swift_allocError();
    v11 = v22;
    sub_1BC7A3EF4();
    *v11 = &type metadata for FeedItemContextEnvironment;
    sub_1BC818580();
    sub_1BC81831C();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v11, *MEMORY[0x1E0DEC450], v21);
    swift_willThrow();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v31[1])(v13, v10);
    a1 = v25;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v11;
  }
  v11 = (_QWORD *)*(unsigned __int8 *)(v18 + 32);
  if ((v11 & 1) != 0)
  {
    v33 = 1;
    sub_1BC7BD580();
    v19 = v15;
    sub_1BC818574();
    v20 = v31;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v19, v27);
  }
  else
  {
    v32 = 0;
    sub_1BC7BD5C4();
    sub_1BC818574();
    v20 = v31;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v28);
  }
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v20[1])(v17, v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  return v11;
}

uint64_t _s14HealthPlatform15FeedItemContextPAAE20displayNamePublisher7Combine03AnyH0VyAA014ProfileDisplayG0Vs5Error_pGvg_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v12[6];

  sub_1BC6E1E98(0, &qword_1EF45C8F8, (uint64_t)&type metadata for ProfileDisplayName, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)v12 - v3;
  sub_1BC7BE8D8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[1] = 0;
  v12[2] = 0xE000000000000000;
  v12[3] = 0;
  v12[4] = 0xE000000000000000;
  v12[5] = MEMORY[0x1E0DEE9D8];
  sub_1BC8177DC();
  sub_1BC6E1878();
  sub_1BC8177B8();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1BC7BE93C();
  v10 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

unint64_t sub_1BC7BDFE4()
{
  unint64_t result;

  result = qword_1EF45C8B8;
  if (!qword_1EF45C8B8)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for FeedItemContextEnvironment, &type metadata for FeedItemContextEnvironment);
    atomic_store(result, (unint64_t *)&qword_1EF45C8B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextEnvironment()
{
  return &type metadata for FeedItemContextEnvironment;
}

uint64_t sub_1BC7BE03C(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  uint64_t result;
  char v9;

  switch(a5 >> 5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      result = swift_bridgeObjectRetain();
      break;
    case 4:
      v9 = a5 & 0x1F;
      swift_bridgeObjectRetain();
      result = (uint64_t)sub_1BC7158A4(a2, a3, a4, v9);
      break;
    default:
      return result;
  }
  return result;
}

void destroy for FeedItemContextChange(uint64_t a1)
{
  sub_1BC7BE0C0(*(_QWORD *)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(_BYTE *)(a1 + 32));
}

void sub_1BC7BE0C0(uint64_t a1, void *a2, void *a3, void *a4, unsigned __int8 a5)
{
  char v8;

  switch(a5 >> 5)
  {
    case 0:
    case 1:
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      break;
    case 4:
      v8 = a5 & 0x1F;
      swift_bridgeObjectRelease();
      sub_1BC716CC8(a2, a3, a4, v8);
      break;
    default:
      return;
  }
}

uint64_t initializeWithCopy for FeedItemContextChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BC7BE03C(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FeedItemContextChange(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  unsigned __int8 v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;

  v3 = *(_QWORD *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BC7BE03C(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BC7BE0C0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FeedItemContextChange(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  __int128 v8;
  unsigned __int8 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  v7 = *(void **)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BC7BE0C0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemContextChange(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3B && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 59);
  v3 = ((*(unsigned __int8 *)(a1 + 32) >> 5) & 0xFFFFFFC7 | (8 * ((*(unsigned __int8 *)(a1 + 32) >> 2) & 7))) ^ 0x3F;
  if (v3 >= 0x3A)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FeedItemContextChange(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3A)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 59;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3B)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0x3B)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
    {
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_BYTE *)(result + 32) = 4 * (((-a2 >> 3) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1BC7BE2F8(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 <= 0x9F)
    return v1 >> 5;
  else
    return (*(_DWORD *)a1 + 5);
}

uint64_t sub_1BC7BE314(uint64_t result)
{
  *(_BYTE *)(result + 32) &= 0x1Fu;
  return result;
}

uint64_t sub_1BC7BE324(uint64_t result, unsigned int a2)
{
  if (a2 < 5)
  {
    *(_BYTE *)(result + 32) = *(_BYTE *)(result + 32) & 3 | (32 * a2);
  }
  else
  {
    *(_QWORD *)result = a2 - 5;
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = -96;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextChange()
{
  return &type metadata for FeedItemContextChange;
}

uint64_t initializeBufferWithCopyOfBuffer for FeedItemContextChangeError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC7BE3A8(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1BC7BE3A8(id result, char a2)
{
  if (a2 == 1)
    return result;
  if (!a2)
    return (id)swift_bridgeObjectRetain();
  return result;
}

void destroy for FeedItemContextChangeError(uint64_t a1)
{
  sub_1BC7BE3D4(*(void **)a1, *(_BYTE *)(a1 + 8));
}

void sub_1BC7BE3D4(void *a1, char a2)
{
  if (a2 == 1)
  {

  }
  else if (!a2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t assignWithCopy for FeedItemContextChangeError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  void *v5;
  char v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BC7BE3A8(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BC7BE3D4(v5, v6);
  return a1;
}

uint64_t assignWithTake for FeedItemContextChangeError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  char v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BC7BE3D4(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemContextChangeError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemContextChangeError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BC7BE508(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BC7BE520(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextChangeError()
{
  return &type metadata for FeedItemContextChangeError;
}

uint64_t dispatch thunk of FeedItemContext.healthStore.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeedItemContext.environment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))() & 1;
}

uint64_t dispatch thunk of FeedItemContext.pinnedContentManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedItemContext.notificationManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FeedItemContext.boundingRange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FeedItemContext.unitPreferenceController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FeedItemContext.displayNamePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FeedItemContext.queue(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FeedItemContext.scheduler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of FeedItemContext.commit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of FeedItemContext.previousFeedItems(predicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 96))();
}

uint64_t dispatch thunk of FeedItemContext.fetchPluginStorage(havingUniqueIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of FeedItemContext.fetchAllPluginStorage()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t _s14HealthPlatform26FeedItemContextEnvironmentOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC7BE640 + 4 * byte_1BC820A3F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC7BE674 + 4 * byte_1BC820A3A[v4]))();
}

uint64_t sub_1BC7BE674(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7BE67C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7BE684);
  return result;
}

uint64_t sub_1BC7BE690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7BE698);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC7BE69C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7BE6A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemContextEnvironment.CodingKeys()
{
  return &type metadata for FeedItemContextEnvironment.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedItemContextEnvironment.BackgroundCodingKeys()
{
  return &type metadata for FeedItemContextEnvironment.BackgroundCodingKeys;
}

ValueMetadata *type metadata accessor for FeedItemContextEnvironment.UserInteractiveCodingKeys()
{
  return &type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys;
}

unint64_t sub_1BC7BE6E4()
{
  unint64_t result;

  result = qword_1EF45C8C0;
  if (!qword_1EF45C8C0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820D6C, &type metadata for FeedItemContextEnvironment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8C0);
  }
  return result;
}

unint64_t sub_1BC7BE72C()
{
  unint64_t result;

  result = qword_1EF45C8C8;
  if (!qword_1EF45C8C8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820CDC, &type metadata for FeedItemContextEnvironment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8C8);
  }
  return result;
}

unint64_t sub_1BC7BE774()
{
  unint64_t result;

  result = qword_1EF45C8D0;
  if (!qword_1EF45C8D0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820D04, &type metadata for FeedItemContextEnvironment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8D0);
  }
  return result;
}

unint64_t sub_1BC7BE7BC()
{
  unint64_t result;

  result = qword_1EF45C8D8;
  if (!qword_1EF45C8D8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820C8C, &type metadata for FeedItemContextEnvironment.BackgroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8D8);
  }
  return result;
}

unint64_t sub_1BC7BE804()
{
  unint64_t result;

  result = qword_1EF45C8E0;
  if (!qword_1EF45C8E0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820CB4, &type metadata for FeedItemContextEnvironment.BackgroundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8E0);
  }
  return result;
}

unint64_t sub_1BC7BE84C()
{
  unint64_t result;

  result = qword_1EF45C8E8;
  if (!qword_1EF45C8E8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820C3C, &type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8E8);
  }
  return result;
}

unint64_t sub_1BC7BE894()
{
  unint64_t result;

  result = qword_1EF45C8F0;
  if (!qword_1EF45C8F0)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC820C64, &type metadata for FeedItemContextEnvironment.UserInteractiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45C8F0);
  }
  return result;
}

void sub_1BC7BE8D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45C900)
  {
    sub_1BC6E1878();
    v0 = sub_1BC8187CC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45C900);
  }
}

unint64_t sub_1BC7BE93C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45C908;
  if (!qword_1EF45C908)
  {
    sub_1BC7BE8D8();
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C964C8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45C908);
  }
  return result;
}

uint64_t AnchoredChangeSet.changes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnchoredChangeSet.changes.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*AnchoredChangeSet.changes.modify())()
{
  return nullsub_1;
}

void *AnchoredChangeSet.newAnchor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void AnchoredChangeSet.newAnchor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*AnchoredChangeSet.newAnchor.modify())()
{
  return nullsub_1;
}

uint64_t AnchoredChangeSet.init(changes:newAnchor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t AnchoredDatabaseState.anchoredChangeSet.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  id v3;

  v2 = (void *)v1[1];
  *a1 = *v1;
  a1[1] = v2;
  v3 = v2;
  return swift_bridgeObjectRetain();
}

uint64_t AnchoredDatabaseState.dateRanges.getter()
{
  return swift_bridgeObjectRetain();
}

_QWORD *AnchoredDatabaseState.init(anchoredChangeSet:dateRanges:)@<X0>(_QWORD *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  v3 = result[1];
  *a3 = *result;
  a3[1] = v3;
  a3[2] = a2;
  return result;
}

id AnchoredTypeChangeSet.hkType.getter()
{
  id *v0;

  return *v0;
}

void *AnchoredTypeChangeSet.change.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void AnchoredTypeChangeSet.change.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*AnchoredTypeChangeSet.change.modify())()
{
  return nullsub_1;
}

void *AnchoredTypeChangeSet.newAnchor.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void AnchoredTypeChangeSet.newAnchor.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
}

uint64_t (*AnchoredTypeChangeSet.newAnchor.modify())()
{
  return nullsub_1;
}

uint64_t AnchoredTypeChangeSet.init(hkType:change:newAnchor:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

id AnchoredTypeState.anchoredTypeChangeSet.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v7;

  v2 = *(void **)v1;
  v7 = *(id *)(v1 + 8);
  v3 = *(void **)(v1 + 16);
  *a1 = *(_QWORD *)v1;
  a1[1] = v7;
  a1[2] = v3;
  v4 = v3;
  v5 = v2;
  return v7;
}

__n128 AnchoredTypeState.anchoredTypeChangeSet.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;
  __n128 result;

  v3 = *a1;
  v4 = *(void **)(v1 + 8);
  v5 = *(void **)(v1 + 16);

  *(_QWORD *)v1 = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 8) = result;
  return result;
}

uint64_t (*AnchoredTypeState.anchoredTypeChangeSet.modify())()
{
  return nullsub_1;
}

uint64_t AnchoredTypeState.dataPresentDateInterval.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AnchoredTypeState() + 20);
  return sub_1BC7BF02C(v3, a1);
}

uint64_t AnchoredTypeState.dataPresentDateInterval.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for AnchoredTypeState() + 20);
  return sub_1BC7BF070(a1, v3);
}

uint64_t (*AnchoredTypeState.dataPresentDateInterval.modify())()
{
  type metadata accessor for AnchoredTypeState();
  return nullsub_1;
}

id AnchoredTypeState.hkType.getter()
{
  id *v0;

  return *v0;
}

uint64_t AnchoredTypeState.init(anchoredTypeChangeSet:dataPresentDateInterval:)@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;

  v9 = *a1;
  v5 = *((_QWORD *)a1 + 2);
  v6 = a3 + *(int *)(type metadata accessor for AnchoredTypeState() + 20);
  v7 = sub_1BC816C9C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_OWORD *)a3 = v9;
  *(_QWORD *)(a3 + 16) = v5;
  return sub_1BC7BF070(a2, v6);
}

uint64_t _s14HealthPlatform17AnchoredChangeSetV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  void *v2;
  void *v3;
  char v4;
  id v5;
  id v6;
  char v7;

  v2 = (void *)a1[1];
  v3 = (void *)a2[1];
  sub_1BC701B04(*a1, *a2);
  if ((v4 & 1) != 0)
  {
    if (v2)
    {
      if (v3)
      {
        sub_1BC6ED7C0(0, &qword_1ED6B84B8);
        v5 = v3;
        v6 = v2;
        v7 = sub_1BC8180D0();

        if ((v7 & 1) != 0)
          return 1;
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t _s14HealthPlatform21AnchoredTypeChangeSetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  id v9;
  id v10;
  char v11;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  v4 = *(void **)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
  if ((sub_1BC8180D0() & 1) == 0)
    return 0;
  if (v2)
  {
    if (!v4)
      return 0;
    sub_1BC6ED7C0(0, &qword_1ED6B8518);
    v6 = v4;
    v7 = v2;
    v8 = sub_1BC8180D0();

    if ((v8 & 1) == 0)
      return 0;
  }
  else if (v4)
  {
    return 0;
  }
  if (v3)
  {
    if (v5)
    {
      sub_1BC6ED7C0(0, &qword_1ED6B84B8);
      v9 = v5;
      v10 = v3;
      v11 = sub_1BC8180D0();

      if ((v11 & 1) != 0)
        return 1;
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

uint64_t _s14HealthPlatform21AnchoredDatabaseStateV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  id v8;
  id v9;
  char v10;
  id v11;
  id v12;
  char v13;

  v2 = *a1;
  v3 = (void *)a1[1];
  v4 = a1[2];
  v5 = *a2;
  v6 = (void *)a2[1];
  v7 = a2[2];
  v8 = v6;
  swift_bridgeObjectRetain();
  v9 = v3;
  swift_bridgeObjectRetain();
  sub_1BC701B04(v2, v5);
  if ((v10 & 1) == 0)
    goto LABEL_6;
  if (v3)
  {
    if (v6)
    {
      sub_1BC6ED7C0(0, &qword_1ED6B84B8);
      v11 = v8;
      v12 = v9;
      v13 = sub_1BC8180D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      if ((v13 & 1) != 0)
        return sub_1BC7016C4(v4, v7);
      return 0;
    }
LABEL_6:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
    return 0;
  return sub_1BC7016C4(v4, v7);
}

uint64_t type metadata accessor for AnchoredTypeState()
{
  uint64_t result;

  result = qword_1ED6BAD08;
  if (!qword_1ED6BAD08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BC7BF02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECAEC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC7BF070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECAEC(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s14HealthPlatform17AnchoredTypeStateV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  __int128 v33;

  v4 = sub_1BC816C9C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7BFE54();
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECAEC(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v28 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v28 - v19;
  v32 = *a1;
  v33 = *(_OWORD *)(a1 + 1);
  v30 = *a2;
  v31 = *(_OWORD *)(a2 + 1);
  if ((_s14HealthPlatform21AnchoredTypeChangeSetV2eeoiySbAC_ACtFZ_0((uint64_t)&v32, (uint64_t)&v30) & 1) == 0)
    return 0;
  v29 = v7;
  v21 = type metadata accessor for AnchoredTypeState();
  sub_1BC7BF02C((uint64_t)a1 + *(int *)(v21 + 20), (uint64_t)v20);
  sub_1BC7BF02C((uint64_t)a2 + *(int *)(v21 + 20), (uint64_t)v18);
  v22 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1BC7BF02C((uint64_t)v20, (uint64_t)v11);
  sub_1BC7BF02C((uint64_t)v18, v22);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v23((uint64_t)v11, 1, v4) == 1)
  {
    sub_1BC6ED784((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
    sub_1BC6ED784((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
    if (v23(v22, 1, v4) == 1)
    {
      sub_1BC6ED784((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
      return 1;
    }
    goto LABEL_7;
  }
  sub_1BC7BF02C((uint64_t)v11, (uint64_t)v15);
  if (v23(v22, 1, v4) == 1)
  {
    sub_1BC6ED784((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
    sub_1BC6ED784((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v4);
LABEL_7:
    sub_1BC6ED784((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC7BFE54);
    return 0;
  }
  v24 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v22, v4);
  sub_1BC7BFEB4();
  v25 = sub_1BC817AB8();
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v24, v4);
  sub_1BC6ED784((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
  sub_1BC6ED784((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
  v26(v15, v4);
  sub_1BC6ED784((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BC6ECAEC);
  return (v25 & 1) != 0;
}

_QWORD *initializeBufferWithCopyOfBuffer for AnchoredChangeSet(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  v4 = v3;
  return a1;
}

void destroy for AnchoredChangeSet(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *assignWithCopy for AnchoredChangeSet(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  return a1;
}

uint64_t assignWithTake for AnchoredChangeSet(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for AnchoredChangeSet()
{
  return &type metadata for AnchoredChangeSet;
}

uint64_t destroy for AnchoredDatabaseState(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *_s14HealthPlatform21AnchoredDatabaseStateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AnchoredDatabaseState(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a1[1];
  v5 = (void *)a2[1];
  a1[1] = v5;
  v6 = v5;

  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnchoredDatabaseState(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AnchoredDatabaseState()
{
  return &type metadata for AnchoredDatabaseState;
}

_QWORD *initializeBufferWithCopyOfBuffer for AnchoredTypeChangeSet(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for AnchoredTypeChangeSet(id *a1)
{

}

uint64_t assignWithCopy for AnchoredTypeChangeSet(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  v10 = *(void **)(a1 + 16);
  v11 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v11;
  v12 = v11;

  return a1;
}

uint64_t assignWithTake for AnchoredTypeChangeSet(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

ValueMetadata *type metadata accessor for AnchoredTypeChangeSet()
{
  return &type metadata for AnchoredTypeChangeSet;
}

char *initializeBufferWithCopyOfBuffer for AnchoredTypeState(char *a1, char **a2, uint64_t a3)
{
  int v3;
  char *v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[1];
    v7 = a2[2];
    *((_QWORD *)a1 + 1) = v6;
    *((_QWORD *)a1 + 2) = v7;
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = sub_1BC816C9C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v14 = v4;
    v15 = v6;
    v16 = v7;
    if (v13(v10, 1, v11))
    {
      sub_1BC6ECAEC(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return v5;
}

uint64_t destroy for AnchoredTypeState(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_1BC816C9C();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for AnchoredTypeState(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  id v13;
  id v14;
  id v15;
  uint64_t v16;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(void **)(a2 + 16);
  a1[2] = v6;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (const void *)(a2 + v7);
  v10 = sub_1BC816C9C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v4;
  v14 = v5;
  v15 = v6;
  if (v12(v9, 1, v10))
  {
    sub_1BC6ECAEC(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t assignWithCopy for AnchoredTypeState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a1 + 8);
  v10 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v10;
  v11 = v10;

  v12 = *(void **)(a1 + 16);
  v13 = *(void **)(a2 + 16);
  *(_QWORD *)(a1 + 16) = v13;
  v14 = v13;

  v15 = *(int *)(a3 + 20);
  v16 = (void *)(a1 + v15);
  v17 = (void *)(a2 + v15);
  v18 = sub_1BC816C9C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v16, v17, v18);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_6;
  }
  if (v22)
  {
LABEL_6:
    sub_1BC6ECAEC(0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t initializeWithTake for AnchoredTypeState(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = sub_1BC816C9C();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    sub_1BC6ECAEC(0);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for AnchoredTypeState(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  v9 = *(int *)(a3 + 20);
  v10 = (void *)(a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = sub_1BC816C9C();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    sub_1BC6ECAEC(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnchoredTypeState()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC7BFCE4(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BC6ECAEC(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for AnchoredTypeState()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BC7BFD6C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1BC6ECAEC(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1BC7BFDE0()
{
  unint64_t v0;

  sub_1BC6ECAEC(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1BC7BFE54()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF45C928)
  {
    sub_1BC6ECAEC(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF45C928);
  }
}

unint64_t sub_1BC7BFEB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45B0E8;
  if (!qword_1EF45B0E8)
  {
    v1 = sub_1BC816C9C();
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0CAE5F8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45B0E8);
  }
  return result;
}

void SharableModelReference.asPluginFeedItemSharableModelReference()(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(v1, sel_identifier);
  v4 = sub_1BC817AE8();
  v6 = v5;

  *a1 = v4;
  a1[1] = v6;
}

uint64_t SharableModelReference.__allocating_init(context:pluginSharableModelReference:)(void *a1)
{
  objc_class *v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t result;

  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_1BC817AC4();
  v5 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v4, a1);

  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEntity_insertIntoManagedObjectContext_, v5, a1);
    v7 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setIdentifier_, v7);

    return (uint64_t)v6;
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

unint64_t static SharableModelReference.entityName.getter()
{
  return 0xD000000000000016;
}

void *static SharableModelReference.findOrCreate(pluginSharableModelReference:in:for:)(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;

  v6 = *a1;
  v7 = a1[1];
  sub_1BC6FCD40();
  sub_1BC6FCD7C();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BC81AB00;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  v10 = sub_1BC6ED740();
  *(_QWORD *)(v8 + 32) = 0x696669746E656469;
  *(_QWORD *)(v8 + 40) = 0xEA00000000007265;
  *(_QWORD *)(v8 + 96) = v9;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 72) = v6;
  *(_QWORD *)(v8 + 80) = v7;
  *(_QWORD *)(v8 + 136) = v9;
  *(_QWORD *)(v8 + 144) = v10;
  *(_QWORD *)(v8 + 112) = 0x6D65744964656566;
  *(_QWORD *)(v8 + 120) = 0xE800000000000000;
  *(_QWORD *)(v8 + 176) = type metadata accessor for FeedItem();
  *(_QWORD *)(v8 + 184) = sub_1BC7C023C();
  *(_QWORD *)(v8 + 152) = a3;
  swift_bridgeObjectRetain();
  v11 = a3;
  v12 = (void *)sub_1BC817E3C();
  v13 = (void *)static NSManagedObjectUnique<>.findOrCreate(context:uniquenessPredicate:)(a2, (uint64_t)v12, v3, (uint64_t)&protocol witness table for SharableModelReference);
  v14 = (void *)sub_1BC817AC4();
  objc_msgSend(v13, sel_setIdentifier_, v14);

  objc_msgSend(v13, sel_setFeedItem_, v11);
  return v13;
}

unint64_t sub_1BC7C023C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B7F88;
  if (!qword_1ED6B7F88)
  {
    v1 = type metadata accessor for FeedItem();
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEFD08], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B7F88);
  }
  return result;
}

id static SharableModelReference.fetchRequest(predicate:)(uint64_t a1)
{
  id v2;
  void *v3;
  id v4;

  v2 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v3 = (void *)sub_1BC817AC4();
  v4 = objc_msgSend(v2, sel_initWithEntityName_, v3);

  objc_msgSend(v4, sel_setPredicate_, a1);
  return v4;
}

unint64_t sub_1BC7C030C()
{
  return 0xD000000000000016;
}

uint64_t FeedItemGenerator.domain.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  id v6;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  v6 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemGenerator.publisher.getter()
{
  return swift_retain();
}

void *FeedItemGenerator.feedItemPredicate.getter()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 40);
  sub_1BC7158A4(v1, *(void **)(v0 + 48), *(void **)(v0 + 56), *(_BYTE *)(v0 + 64));
  return v1;
}

double FeedItemGenerator.init<A>(context:domain:feedItemPredicate:feedItemsPublisher:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  void *v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  double result;
  void *v37;
  void *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;

  v54 = a7;
  v45 = a6;
  v10 = a5;
  v37 = a3;
  v38 = a5;
  v43 = a4;
  *(_QWORD *)&v53 = a2;
  v47 = a1;
  v14 = type metadata accessor for GeneratorContext();
  v44 = *(_QWORD *)(v14 - 8);
  v15 = *(_QWORD *)(v44 + 64);
  MEMORY[0x1E0C80A78](v14);
  v40 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a8;
  v16 = sub_1BC817644();
  v52 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v39 = (char *)&v37 - v17;
  sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6BAC80, (uint64_t)&type metadata for FeedItemContextChange, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v42 = v18;
  v41 = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95A38], v16);
  v48 = sub_1BC817614();
  v51 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v20 = (char *)&v37 - v19;
  v49 = *(_QWORD *)v53;
  v50 = *(unsigned __int8 *)(v53 + 24);
  v21 = a3;
  v22 = v43;
  v23 = v10;
  LOBYTE(v10) = v45;
  sub_1BC7158A4(v21, v43, v23, v45);
  sub_1BC8178A8();
  v24 = v40;
  sub_1BC6ECB08(a1, v40, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v25 = (*(unsigned __int8 *)(v44 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  v27 = swift_allocObject();
  sub_1BC6ECBA4(v24, v27 + v25, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v28 = v27 + v26;
  v29 = v37;
  v30 = v38;
  *(_QWORD *)v28 = v37;
  *(_QWORD *)(v28 + 8) = v22;
  v31 = v22;
  *(_QWORD *)(v28 + 16) = v30;
  *(_BYTE *)(v28 + 24) = (_BYTE)v10;
  v32 = v29;
  LOBYTE(v26) = (_BYTE)v10;
  sub_1BC7158A4(v29, v31, v30, (char)v10);
  v53 = *(_OWORD *)(v53 + 8);
  v33 = v39;
  sub_1BC81786C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v16);
  v34 = v48;
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v48);
  v35 = sub_1BC817854();
  sub_1BC716CC8(v32, v31, v30, v26);
  (*(void (**)(uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v54);
  sub_1BC6ED784(v47, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v34);
  *(_QWORD *)a9 = v49;
  result = *(double *)&v53;
  *(_OWORD *)(a9 + 8) = v53;
  *(_BYTE *)(a9 + 24) = v50;
  *(_QWORD *)(a9 + 32) = v35;
  *(_QWORD *)(a9 + 40) = v32;
  *(_QWORD *)(a9 + 48) = v31;
  *(_QWORD *)(a9 + 56) = v30;
  *(_BYTE *)(a9 + 64) = v26;
  return result;
}

id sub_1BC7C06F0@<X0>(uint64_t *a1@<X0>, void *a2@<X2>, void *a3@<X3>, void *a4@<X4>, char a5@<W5>, uint64_t *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;

  v11 = *a1;
  sub_1BC6E1E98(0, &qword_1ED6BACA8, (uint64_t)&type metadata for FeedItemContextChange, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v12 + 32) = v11;
  *(_QWORD *)(v12 + 40) = a2;
  *(_QWORD *)(v12 + 48) = a3;
  *(_QWORD *)(v12 + 56) = a4;
  *(_BYTE *)(v12 + 64) = a5 | 0x80;
  *a6 = v12;
  swift_bridgeObjectRetain();
  return sub_1BC7158A4(a2, a3, a4, a5);
}

double sub_1BC7C079C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  double result;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char *v65;

  v54 = a8;
  *(_QWORD *)&v51 = a7;
  v50 = a6;
  v64 = a5;
  v62 = a3;
  v63 = a4;
  v61 = a2;
  v55 = a1;
  sub_1BC7C269C();
  v57 = v11;
  v59 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v52 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7C2588(0, &qword_1ED6B8C20, v13, (void (*)(void))sub_1BC7C2790);
  v58 = v14;
  v60 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v56 = (char *)&v45 - v15;
  v16 = type metadata accessor for GeneratorContext();
  v49 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v49 + 64);
  v18 = MEMORY[0x1E0C80A78](v16);
  v47 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - v19;
  sub_1BC7C24AC(0, &qword_1ED6B8BE0, (void (*)(uint64_t))sub_1BC7C2064, (void (*)(void))sub_1BC7C2714);
  v22 = v21;
  v46 = *(_QWORD *)(v21 - 8);
  v23 = v46;
  v24 = MEMORY[0x1E0C80A78](v21);
  v65 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v45 - v26;
  sub_1BC7C2064();
  v53 = v28;
  sub_1BC7C13E0(0);
  sub_1BC7C2714();
  v48 = v27;
  sub_1BC81786C();
  v45 = v20;
  sub_1BC6ECB08(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = v50;
  *(_QWORD *)(inited + 40) = v51;
  v30 = sub_1BC731B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v65, v27, v22);
  sub_1BC7C2730();
  swift_bridgeObjectRetain();
  v31 = v52;
  sub_1BC8178A8();
  v32 = (uint64_t)v20;
  v33 = v47;
  sub_1BC6ECB08(v32, v47, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v34 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v35 = (v17 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  sub_1BC6ECBA4(v33, v36 + v34, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v37 = v36 + v35;
  *(_QWORD *)v37 = v30;
  v51 = xmmword_1BC81B340;
  *(_OWORD *)(v37 + 8) = xmmword_1BC81B340;
  *(_BYTE *)(v37 + 24) = 0;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BAC80, (uint64_t)&type metadata for FeedItemContextChange, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7C2790();
  swift_bridgeObjectRetain();
  v39 = v56;
  v38 = v57;
  sub_1BC81786C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v38);
  sub_1BC7C2928();
  v40 = v58;
  v41 = sub_1BC817854();
  swift_bridgeObjectRelease();
  v42 = *(void (**)(char *, uint64_t))(v46 + 8);
  v42(v65, v22);
  sub_1BC6ED784((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v40);
  (*(void (**)(uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v54);
  sub_1BC6ED784(v55, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v42(v48, v22);
  v43 = v62;
  *(_QWORD *)a9 = v61;
  *(_QWORD *)(a9 + 8) = v43;
  *(_QWORD *)(a9 + 16) = v63;
  *(_BYTE *)(a9 + 24) = v64;
  *(_QWORD *)(a9 + 32) = v41;
  *(_QWORD *)(a9 + 40) = v30;
  result = *(double *)&v51;
  *(_OWORD *)(a9 + 48) = v51;
  *(_BYTE *)(a9 + 64) = 0;
  return result;
}

double sub_1BC7C0C58@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  double result;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char *v65;

  v54 = a8;
  *(_QWORD *)&v51 = a7;
  v50 = a6;
  v64 = a5;
  v62 = a3;
  v63 = a4;
  v61 = a2;
  v55 = a1;
  sub_1BC7C2434();
  v57 = v11;
  v59 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v52 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7C2588(0, &qword_1ED6B8C10, v13, (void (*)(void))sub_1BC7C261C);
  v58 = v14;
  v60 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v56 = (char *)&v45 - v15;
  v16 = type metadata accessor for GeneratorContext();
  v49 = *(_QWORD *)(v16 - 8);
  v17 = *(_QWORD *)(v49 + 64);
  v18 = MEMORY[0x1E0C80A78](v16);
  v47 = (uint64_t)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v45 - v19;
  sub_1BC7C24AC(0, &qword_1ED6B8BD0, sub_1BC7C20C4, (void (*)(void))sub_1BC7C20FC);
  v22 = v21;
  v46 = *(_QWORD *)(v21 - 8);
  v23 = v46;
  v24 = MEMORY[0x1E0C80A78](v21);
  v65 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v45 - v26;
  sub_1BC7C20C4(0);
  v53 = v28;
  sub_1BC7C13E0(0);
  sub_1BC7C20FC();
  v48 = v27;
  sub_1BC81786C();
  v45 = v20;
  sub_1BC6ECB08(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = v50;
  *(_QWORD *)(inited + 40) = v51;
  v30 = sub_1BC731B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v65, v27, v22);
  sub_1BC7C2528();
  swift_bridgeObjectRetain();
  v31 = v52;
  sub_1BC8178A8();
  v32 = (uint64_t)v20;
  v33 = v47;
  sub_1BC6ECB08(v32, v47, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v34 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  v35 = (v17 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = swift_allocObject();
  sub_1BC6ECBA4(v33, v36 + v34, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v37 = v36 + v35;
  *(_QWORD *)v37 = v30;
  v51 = xmmword_1BC81B340;
  *(_OWORD *)(v37 + 8) = xmmword_1BC81B340;
  *(_BYTE *)(v37 + 24) = 0;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BAC80, (uint64_t)&type metadata for FeedItemContextChange, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7C261C();
  swift_bridgeObjectRetain();
  v39 = v56;
  v38 = v57;
  sub_1BC81786C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v31, v38);
  sub_1BC7C263C();
  v40 = v58;
  v41 = sub_1BC817854();
  swift_bridgeObjectRelease();
  v42 = *(void (**)(char *, uint64_t))(v46 + 8);
  v42(v65, v22);
  sub_1BC6ED784((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v39, v40);
  (*(void (**)(uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v54);
  sub_1BC6ED784(v55, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v42(v48, v22);
  v43 = v62;
  *(_QWORD *)a9 = v61;
  *(_QWORD *)(a9 + 8) = v43;
  *(_QWORD *)(a9 + 16) = v63;
  *(_BYTE *)(a9 + 24) = v64;
  *(_QWORD *)(a9 + 32) = v41;
  *(_QWORD *)(a9 + 40) = v30;
  result = *(double *)&v51;
  *(_OWORD *)(a9 + 48) = v51;
  *(_BYTE *)(a9 + 64) = 0;
  return result;
}

__n128 FeedItemGenerator.init<A>(context:domain:feedItemIdentifier:feedItemPublisher:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t inited;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __n128 result;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  char v42;
  uint64_t v43;
  __n128 v44;
  char v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  char v49;

  v38 = a4;
  v39 = a5;
  v37 = a3;
  v33 = a1;
  v10 = type metadata accessor for GeneratorContext();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7C13E0(255);
  v36 = a6;
  v13 = sub_1BC817614();
  v35 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v34 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v32 - v16;
  v18 = *a2;
  v19 = *((_BYTE *)a2 + 24);
  v32 = *(_OWORD *)(a2 + 1);
  sub_1BC81786C();
  v20 = v33;
  sub_1BC6ECB08(v33, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v40 = v18;
  v41 = v32;
  v42 = v19;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BB1F0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = v37;
  *(_QWORD *)(inited + 40) = v38;
  v22 = (void *)sub_1BC731B80(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  v23 = v35;
  v24 = (uint64_t)v34;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v34, v17, v13);
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v13);
  v25 = FeedItemGenerator.init<A>(context:domain:feedItemPredicate:feedItemsPublisher:)((uint64_t)v12, (uint64_t)&v40, v22, (void *)1, 0, 0, v24, v13, (uint64_t)&v43);
  (*(void (**)(uint64_t, double))(*(_QWORD *)(v36 - 8) + 8))(v39, v25);
  sub_1BC6ED784(v20, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v17, v13);
  v26 = v45;
  v27 = v46;
  v28 = v48;
  v29 = v49;
  result = v44;
  v31 = v47;
  *(_QWORD *)a7 = v43;
  *(__n128 *)(a7 + 8) = result;
  *(_BYTE *)(a7 + 24) = v26;
  *(_QWORD *)(a7 + 32) = v27;
  *(_OWORD *)(a7 + 40) = v31;
  *(_QWORD *)(a7 + 56) = v28;
  *(_BYTE *)(a7 + 64) = v29;
  return result;
}

void sub_1BC7C13E0(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6B8D20, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BC7C13FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for PluginFeedItem();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7C20E0(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECB08(a1, (uint64_t)v10, v11);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if ((_DWORD)result == 1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    sub_1BC6ECBA4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    sub_1BC6ECA64(0, &qword_1ED6BACA0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1BC81A0F0;
    result = sub_1BC6ECBA4((uint64_t)v7, v13 + v14, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
  }
  *a2 = v13;
  return result;
}

double FeedItemGenerator.init(context:domain:feedItemPredicate:feedItemsProvider:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  id v32;
  void *v33;
  void *v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  double result;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  char *v60;
  void *v61;
  void *v62;
  int v63;
  uint64_t v64;
  __int128 v65;
  char *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;

  v63 = a6;
  v61 = a4;
  v62 = a5;
  v59 = a3;
  v76 = a1;
  v54 = a9;
  sub_1BC7C1E28();
  v13 = *(_QWORD *)(v12 - 8);
  v70 = v12;
  v71 = v13;
  MEMORY[0x1E0C80A78](v12);
  v75 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7C2588(0, &qword_1ED6B8C00, v15, (void (*)(void))sub_1BC7C1F78);
  v69 = v16;
  v72 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v66 = (char *)&v53 - v17;
  v18 = type metadata accessor for GeneratorContext();
  v58 = *(_QWORD *)(v18 - 8);
  v19 = *(_QWORD *)(v58 + 64);
  v20 = MEMORY[0x1E0C80A78](v18);
  v56 = (uint64_t)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v73 = (uint64_t)&v53 - v21;
  sub_1BC7C1EA0();
  v74 = v22;
  v57 = *(_QWORD *)(v22 - 8);
  v23 = v57;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v53 - v27;
  v67 = *a2;
  v68 = *((unsigned __int8 *)a2 + 24);
  v29 = swift_allocObject();
  *(_QWORD *)(v29 + 16) = a7;
  *(_QWORD *)(v29 + 24) = a8;
  v64 = a8;
  sub_1BC6ECA64(0, &qword_1ED6B8CD0, (uint64_t (*)(uint64_t))sub_1BC7C13E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
  sub_1BC7C1F18();
  swift_retain();
  v65 = *(_OWORD *)(a2 + 1);
  v60 = v28;
  sub_1BC817824();
  v30 = v73;
  sub_1BC6ECB08(v76, v73, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v31 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
  v55 = v26;
  v31(v26, v28, v74);
  v32 = v59;
  v33 = v61;
  v34 = v62;
  v35 = v63;
  sub_1BC7158A4(v59, v61, v62, v63);
  sub_1BC6E1788(&qword_1ED6B8D10, (uint64_t (*)(uint64_t))sub_1BC7C1EA0, MEMORY[0x1E0C96148]);
  sub_1BC8178A8();
  v36 = v30;
  v37 = v56;
  sub_1BC6ECB08(v36, v56, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v38 = (*(unsigned __int8 *)(v58 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
  v39 = (v19 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  v40 = swift_allocObject();
  sub_1BC6ECBA4(v37, v40 + v38, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v41 = v40 + v39;
  v42 = v32;
  *(_QWORD *)v41 = v32;
  *(_QWORD *)(v41 + 8) = v33;
  *(_QWORD *)(v41 + 16) = v34;
  *(_BYTE *)(v41 + 24) = v35;
  sub_1BC7158A4(v32, v33, v34, v35);
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BAC80, (uint64_t)&type metadata for FeedItemContextChange, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BC7C1F78();
  v43 = v66;
  v44 = v70;
  v45 = v75;
  sub_1BC81786C();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v44);
  sub_1BC7C2004();
  v46 = v69;
  v47 = v43;
  v48 = sub_1BC817854();
  sub_1BC716CC8(v42, v33, v34, v35);
  v49 = *(void (**)(char *, uint64_t))(v57 + 8);
  v50 = v74;
  v49(v55, v74);
  sub_1BC6ED784(v73, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v47, v46);
  swift_release();
  sub_1BC6ED784(v76, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  v49(v60, v50);
  v51 = v54;
  *v54 = v67;
  result = *(double *)&v65;
  *(_OWORD *)(v51 + 1) = v65;
  *((_BYTE *)v51 + 24) = v68;
  v51[4] = v48;
  v51[5] = v42;
  v51[6] = v33;
  v51[7] = v34;
  *((_BYTE *)v51 + 64) = v35;
  return result;
}

__n128 FeedItemGenerator.init(context:domain:feedItemIdentifier:feedItemProvider:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  __n128 result;
  __int128 v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __n128 v40;
  char v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  char v45;

  v37 = a3;
  v38 = a4;
  v36 = a1;
  v11 = type metadata accessor for GeneratorContext();
  MEMORY[0x1E0C80A78](v11);
  v13 = &v31[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BC7C2064();
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = &v31[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v17);
  v21 = &v31[-v20];
  v22 = *(_QWORD *)a2;
  v34 = *(_QWORD *)(a2 + 8);
  v35 = v22;
  v33 = *(_QWORD *)(a2 + 16);
  v32 = *(unsigned __int8 *)(a2 + 24);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = a5;
  *(_QWORD *)(v23 + 24) = a6;
  sub_1BC7C20C4(0);
  sub_1BC7C20FC();
  swift_retain();
  sub_1BC817824();
  v24 = v36;
  sub_1BC6ECB08(v36, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v16 + 16))(v19, v21, v15);
  sub_1BC7C079C((uint64_t)v13, v35, v34, v33, v32, v37, v38, (uint64_t)v19, (uint64_t)&v39);
  swift_release();
  sub_1BC6ED784(v24, (uint64_t (*)(_QWORD))type metadata accessor for GeneratorContext);
  (*(void (**)(_BYTE *, uint64_t))(v16 + 8))(v21, v15);
  v25 = v41;
  v26 = v42;
  v27 = v44;
  v28 = v45;
  result = v40;
  v30 = v43;
  *(_QWORD *)a7 = v39;
  *(__n128 *)(a7 + 8) = result;
  *(_BYTE *)(a7 + 24) = v25;
  *(_QWORD *)(a7 + 32) = v26;
  *(_OWORD *)(a7 + 40) = v30;
  *(_QWORD *)(a7 + 56) = v27;
  *(_BYTE *)(a7 + 64) = v28;
  return result;
}

uint64_t sub_1BC7C1BCC(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  sub_1BC7C20E0(0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v10 - v7;
  a1(v6);
  sub_1BC6ECB08((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BC7C20E0);
  sub_1BC8177DC();
  return sub_1BC6ED784((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BC7C20E0);
}

double static FeedItemGenerator.delete(context:domain:feedItemIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  id v22;
  uint64_t v24;
  uint64_t v25;

  v24 = a5;
  v25 = a3;
  sub_1BC7C20E0(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7C20C4(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for GeneratorContext();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(void **)a2;
  v17 = *(_QWORD *)(a2 + 8);
  v19 = *(_QWORD *)(a2 + 16);
  LODWORD(a2) = *(unsigned __int8 *)(a2 + 24);
  sub_1BC6ECB08(a1, (uint64_t)v16, v20);
  v21 = type metadata accessor for PluginFeedItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 1, 1, v21);
  v22 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC8177DC();
  return sub_1BC7C0C58((uint64_t)v16, (uint64_t)v18, v17, v19, a2, v25, a4, (uint64_t)v13, v24);
}

uint64_t sub_1BC7C1E20()
{
  return swift_retain();
}

void sub_1BC7C1E28()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8C48)
  {
    sub_1BC7C1EA0();
    sub_1BC6E1788(&qword_1ED6B8D10, (uint64_t (*)(uint64_t))sub_1BC7C1EA0, MEMORY[0x1E0C96148]);
    v0 = sub_1BC817644();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8C48);
  }
}

void sub_1BC7C1EA0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8D18)
  {
    sub_1BC6ECA64(255, &qword_1ED6B8CD0, (uint64_t (*)(uint64_t))sub_1BC7C13E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    sub_1BC7C1F18();
    v0 = sub_1BC817830();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8D18);
  }
}

unint64_t sub_1BC7C1F18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8CC8;
  if (!qword_1ED6B8CC8)
  {
    sub_1BC6ECA64(255, &qword_1ED6B8CD0, (uint64_t (*)(uint64_t))sub_1BC7C13E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C960B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8CC8);
  }
  return result;
}

uint64_t sub_1BC7C1F78()
{
  return sub_1BC6E1788(&qword_1ED6B8C40, (uint64_t (*)(uint64_t))sub_1BC7C1E28, MEMORY[0x1E0C95A38]);
}

uint64_t sub_1BC7C1F94()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7C1FB8()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  sub_1BC7C13E0(0);
  return sub_1BC8177DC();
}

unint64_t sub_1BC7C2004()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8BF8;
  if (!qword_1ED6B8BF8)
  {
    sub_1BC7C2588(255, &qword_1ED6B8C00, (void (*)(uint64_t))sub_1BC7C1E28, (void (*)(void))sub_1BC7C1F78);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8BF8);
  }
  return result;
}

void sub_1BC7C2064()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8D08)
  {
    sub_1BC7C20C4(255);
    sub_1BC7C20FC();
    v0 = sub_1BC817830();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8D08);
  }
}

void sub_1BC7C20C4(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6B8CC0, (uint64_t (*)(uint64_t))sub_1BC7C20E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96098]);
}

void sub_1BC7C20E0(uint64_t a1)
{
  sub_1BC6ECA64(a1, &qword_1ED6BAAD0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BC7C20FC()
{
  return sub_1BC6E1788(&qword_1ED6B8CB8, (uint64_t (*)(uint64_t))sub_1BC7C20C4, MEMORY[0x1E0C960B0]);
}

uint64_t sub_1BC7C2118()
{
  uint64_t v0;

  return sub_1BC7C1BCC(*(void (**)(uint64_t))(v0 + 16));
}

void destroy for FeedItemGenerator(uint64_t a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BC716CC8(*(void **)(a1 + 40), *(void **)(a1 + 48), *(void **)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for FeedItemGenerator(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  id v9;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *(void **)(a2 + 48);
  v7 = *(void **)(a2 + 56);
  v8 = *(_BYTE *)(a2 + 64);
  v9 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BC7158A4(v5, v6, v7, v8);
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = v8;
  return a1;
}

uint64_t assignWithCopy for FeedItemGenerator(uint64_t a1, void **a2)
{
  void **v2;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  char v13;

  v2 = a2;
  v4 = *(void **)a1;
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *((_BYTE *)v2 + 24);
  *(_QWORD *)(a1 + 32) = v2[4];
  swift_retain();
  swift_release();
  v7 = v2[5];
  v8 = v2[6];
  v9 = v2[7];
  LOBYTE(v2) = *((_BYTE *)v2 + 64);
  sub_1BC7158A4(v7, v8, v9, (char)v2);
  v10 = *(void **)(a1 + 40);
  v11 = *(void **)(a1 + 48);
  v12 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  v13 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = (_BYTE)v2;
  sub_1BC716CC8(v10, v11, v12, v13);
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for FeedItemGenerator(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  char v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_release();
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_BYTE *)(a2 + 64);
  v6 = *(void **)(a1 + 40);
  v7 = *(void **)(a1 + 48);
  v8 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v4;
  v9 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v5;
  sub_1BC716CC8(v6, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedItemGenerator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedItemGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemGenerator()
{
  return &type metadata for FeedItemGenerator;
}

void sub_1BC7C2434()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8C58)
  {
    sub_1BC7C24AC(255, &qword_1ED6B8BD0, sub_1BC7C20C4, (void (*)(void))sub_1BC7C20FC);
    sub_1BC7C2528();
    v0 = sub_1BC817644();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8C58);
  }
}

void sub_1BC7C24AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC7C13E0(255);
    a4();
    v6 = sub_1BC817614();
    if (!v7)
      atomic_store(v6, a2);
  }
}

unint64_t sub_1BC7C2528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8BC8;
  if (!qword_1ED6B8BC8)
  {
    sub_1BC7C24AC(255, &qword_1ED6B8BD0, sub_1BC7C20C4, (void (*)(void))sub_1BC7C20FC);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8BC8);
  }
  return result;
}

void sub_1BC7C2588(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6BAC80, (uint64_t)&type metadata for FeedItemContextChange, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    a4();
    v6 = sub_1BC817614();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BC7C261C()
{
  return sub_1BC6E1788(&qword_1ED6B8C50, (uint64_t (*)(uint64_t))sub_1BC7C2434, MEMORY[0x1E0C95A38]);
}

unint64_t sub_1BC7C263C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8C08;
  if (!qword_1ED6B8C08)
  {
    sub_1BC7C2588(255, &qword_1ED6B8C10, (void (*)(uint64_t))sub_1BC7C2434, (void (*)(void))sub_1BC7C261C);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8C08);
  }
  return result;
}

void sub_1BC7C269C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8C68)
  {
    sub_1BC7C24AC(255, &qword_1ED6B8BE0, (void (*)(uint64_t))sub_1BC7C2064, (void (*)(void))sub_1BC7C2714);
    sub_1BC7C2730();
    v0 = sub_1BC817644();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8C68);
  }
}

uint64_t sub_1BC7C2714()
{
  return sub_1BC6E1788(&qword_1ED6B8D00, (uint64_t (*)(uint64_t))sub_1BC7C2064, MEMORY[0x1E0C96148]);
}

unint64_t sub_1BC7C2730()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8BD8;
  if (!qword_1ED6B8BD8)
  {
    sub_1BC7C24AC(255, &qword_1ED6B8BE0, (void (*)(uint64_t))sub_1BC7C2064, (void (*)(void))sub_1BC7C2714);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8BD8);
  }
  return result;
}

uint64_t sub_1BC7C2790()
{
  return sub_1BC6E1788(&qword_1ED6B8C60, (uint64_t (*)(uint64_t))sub_1BC7C269C, MEMORY[0x1E0C95A38]);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id *v6;
  char *v7;
  uint64_t v8;

  v1 = (int *)type metadata accessor for GeneratorContext();
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = v0 + v3;

  v6 = (id *)(v0 + v3 + v1[5]);
  sub_1BC716020();
  if (swift_getEnumCaseMultiPayload() == 1)
  {

  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = (char *)v6 + *(int *)(type metadata accessor for CountryRetrievalRecord() + 24);
    v8 = sub_1BC816EF4();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[7]);
  __swift_destroy_boxed_opaque_existential_0(v5 + v1[8]);
  sub_1BC716CC8(*(void **)(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16), *(_BYTE *)(v0 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 24));
  return swift_deallocObject();
}

id sub_1BC7C28BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  v5 = type metadata accessor for GeneratorContext();
  v6 = v2
     + ((*(_QWORD *)(*(_QWORD *)(v5 - 8) + 64)
       + ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80))
       + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1BC7C06F0(a1, *(void **)v6, *(void **)(v6 + 8), *(void **)(v6 + 16), *(_BYTE *)(v6 + 24), a2);
}

unint64_t sub_1BC7C2928()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8C18;
  if (!qword_1ED6B8C18)
  {
    sub_1BC7C2588(255, &qword_1ED6B8C20, (void (*)(uint64_t))sub_1BC7C269C, (void (*)(void))sub_1BC7C2790);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8C18);
  }
  return result;
}

id static Feed.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_dateUpdated()
{
  return sel_dateUpdated;
}

void sub_1BC7C29F4(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_dateUpdated);
  sub_1BC816ED0();

}

void sub_1BC7C2A44(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC816EAC();
  objc_msgSend(v2, sel_setDateUpdated_, v3);

}

char *keypath_get_selector_associatedProfile()
{
  return sel_associatedProfile;
}

id sub_1BC7C2A98@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_associatedProfile);
  *a2 = result;
  return result;
}

id sub_1BC7C2AD0(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAssociatedProfile_, *a1);
}

char *keypath_get_selector_kindRawValue()
{
  return sel_kindRawValue;
}

void sub_1BC7C2AF0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_kindRawValue);
  v4 = sub_1BC817AE8();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1BC7C2B48(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC817AC4();
  objc_msgSend(v2, sel_setKindRawValue_, v3);

}

char *keypath_get_selector_sections()
{
  return sel_sections;
}

id sub_1BC7C2BA4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_sections);
  *a2 = result;
  return result;
}

id sub_1BC7C2BDC(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSections_, *a1);
}

Swift::Void __swiftcall DebuggingResponder.registerForDebuggingRequests()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6BB5D0);
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E6C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_getMetatypeMetadata();
    v7 = sub_1BC817AF4();
    v10 = sub_1BC6E14D8(v7, v8, &v11);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v3, v4, "[%s] registerForDebuggingRequests()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED6B8530 != -1)
    swift_once();
  objc_msgSend(v9, sel_addObserver_selector_name_object_, v1, sel_debuggingInfoRequestedWithNote_, qword_1ED6B8528, 0, v10, v11);

}

Swift::Void __swiftcall DebuggingResponder.deregisterForDebuggingRequests()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6BB5D0);
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E6C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v11 = v6;
    *(_DWORD *)v5 = 136315138;
    swift_getMetatypeMetadata();
    v7 = sub_1BC817AF4();
    v10 = sub_1BC6E14D8(v7, v8, &v11);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v3, v4, "[%s] deregisterForDebuggingRequests()", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);
  }

  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED6B8530 != -1)
    swift_once();
  objc_msgSend(v9, sel_removeObserver_name_object_, v1, qword_1ED6B8528, 0, v10, v11);

}

uint64_t *USR1SignalDebuggingResponderListener.__allocating_init()()
{
  swift_allocObject();
  return USR1SignalDebuggingResponderListener.init()();
}

uint64_t *USR1SignalDebuggingResponderListener.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_1BC81795C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_allocWithZone(MEMORY[0x1E0CB37D0]);
  swift_retain();
  *(_QWORD *)(v1 + 24) = objc_msgSend(v6, sel_init);
  swift_release();
  sub_1BC7764C8();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DEF530], v2);
  v7 = (void *)sub_1BC817FD4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v8 = sub_1BC76B704(30, v7);
  v9 = qword_1ED6BB1F8;
  swift_retain();
  if (v9 != -1)
    swift_once();
  v10 = sub_1BC817590();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB228);
  swift_retain_n();
  v11 = sub_1BC81756C();
  v12 = sub_1BC817E9C();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = (uint64_t)v8;
    v19 = v14;
    *(_DWORD *)v13 = 136315138;
    type metadata accessor for USR1SignalDebuggingResponderListener();
    swift_retain();
    v15 = sub_1BC817B00();
    v18 = sub_1BC6E14D8(v15, v16, &v19);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v11, v12, "%s: init()", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v14, -1, -1);
    MEMORY[0x1BCCF5BA4](v13, -1, -1);

    swift_release();
  }
  else
  {

    swift_release_n();
  }
  return v8;
}

void sub_1BC7C32A8()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  _QWORD *v4;
  uint8_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (qword_1ED6BB1F8 != -1)
    swift_once();
  v1 = sub_1BC817590();
  __swift_project_value_buffer(v1, (uint64_t)qword_1ED6BB228);
  swift_retain_n();
  v2 = sub_1BC81756C();
  v3 = sub_1BC817E9C();
  v4 = &unk_1BC81A000;
  if (os_log_type_enabled(v2, v3))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    v6 = swift_slowAlloc();
    v17 = v6;
    *(_DWORD *)v5 = 136315138;
    type metadata accessor for USR1SignalDebuggingResponderListener();
    swift_retain();
    v7 = sub_1BC817B00();
    v16 = sub_1BC6E14D8(v7, v8, &v17);
    sub_1BC818148();
    swift_release_n();
    v4 = (_QWORD *)&unk_1BC81A000;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v2, v3, "%s: sourceNotification() sending message", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v9 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  if (qword_1ED6B8530 != -1)
    swift_once();
  objc_msgSend(v9, sel_postNotificationName_object_, qword_1ED6B8528, v0, v16, v17);

  swift_retain_n();
  v10 = sub_1BC81756C();
  v11 = sub_1BC817E9C();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v17 = v13;
    *(_DWORD *)v12 = v4[26];
    type metadata accessor for USR1SignalDebuggingResponderListener();
    swift_retain();
    v14 = sub_1BC817B00();
    sub_1BC6E14D8(v14, v15, &v17);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v10, v11, "%s: sourceNotification() complete", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v13, -1, -1);
    MEMORY[0x1BCCF5BA4](v12, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

void sub_1BC7C3600()
{
  uint64_t v0;

}

uint64_t USR1SignalDebuggingResponderListener.deinit()
{
  uint64_t v0;

  swift_getObjectType();
  sub_1BC81804C();
  swift_unknownObjectRelease();

  return v0;
}

uint64_t USR1SignalDebuggingResponderListener.__deallocating_deinit()
{
  uint64_t v0;

  swift_getObjectType();
  sub_1BC81804C();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1BC7C3690()
{
  uint64_t result;

  result = sub_1BC817AC4();
  qword_1ED6B8528 = result;
  return result;
}

id static NSNotificationName.DebuggingResponderRequest.getter()
{
  if (qword_1ED6B8530 != -1)
    swift_once();
  return (id)qword_1ED6B8528;
}

uint64_t type metadata accessor for USR1SignalDebuggingResponderListener()
{
  return objc_opt_self();
}

uint64_t method lookup function for USR1SignalDebuggingResponderListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of USR1SignalDebuggingResponderListener.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

id SharableModelReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id SharableModelReference.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for SharableModelReference();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for SharableModelReference()
{
  return objc_opt_self();
}

id SharableModelReference.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SharableModelReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC7C3890()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for FileProtectionStateMonitor();
  v0 = swift_allocObject();
  result = FileProtectionStateMonitor.init()();
  qword_1EF45C930 = v0;
  return result;
}

uint64_t FileProtectionStateMonitor.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  FileProtectionStateMonitor.init()();
  return v0;
}

uint64_t static FileProtectionStateMonitor.shared.getter()
{
  if (qword_1EF45ABF8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t FileProtectionStateMonitor.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  int v7;
  char v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  int *v11;
  _QWORD v13[4];

  v13[0] = sub_1BC817FA4();
  v1 = *(_QWORD *)(v13[0] - 8);
  MEMORY[0x1E0C80A78](v13[0]);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC817F5C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1BC817974();
  MEMORY[0x1E0C80A78](v6);
  v13[1] = sub_1BC7764C8();
  sub_1BC817968();
  v13[3] = MEMORY[0x1E0DEE9D8];
  sub_1BC6E1788((unint64_t *)&unk_1ED6BA4C0, v5, MEMORY[0x1E0DEF828]);
  sub_1BC6F72FC(0, (unint64_t *)&unk_1ED6BA420, (void (*)(uint64_t))v5);
  sub_1BC6F75D4(qword_1ED6BA430, (unint64_t *)&unk_1ED6BA420, (void (*)(uint64_t))v5);
  sub_1BC818184();
  (*(void (**)(char *, _QWORD, _QWORD))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D0], v13[0]);
  *(_QWORD *)(v0 + 24) = sub_1BC817FC8();
  v7 = MKBGetDeviceLockState();
  if (v7 == 2)
    v8 = 1;
  else
    v8 = 2 * (v7 != 1);
  sub_1BC7C3B94();
  v9 = swift_allocObject();
  *(_DWORD *)(v9 + 36) = 0;
  v10 = (os_unfair_lock_s *)(v9 + 36);
  *(_DWORD *)(v9 + 16) = -1;
  v11 = (int *)(v9 + 16);
  *(_QWORD *)(v9 + 24) = MEMORY[0x1E0DEE9D8];
  *(_BYTE *)(v9 + 32) = v8;
  *(_QWORD *)(v0 + 16) = v9;
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_1BC7C3BF0(v11, v0);
  os_unfair_lock_unlock(v10);
  swift_release();
  return v0;
}

void sub_1BC7C3B94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45C938)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45C938);
  }
}

void sub_1BC7C3BF0(int *a1, uint64_t a2)
{
  NSObject *v3;
  uint64_t v4;
  void *v5;
  _QWORD v6[6];

  v3 = *(NSObject **)(a2 + 24);
  v4 = swift_allocObject();
  swift_weakInit();
  v6[4] = sub_1BC7C44AC;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BC7C3D10;
  v6[3] = &block_descriptor_9_0;
  v5 = _Block_copy(v6);
  swift_release();
  notify_register_dispatch("com.apple.mobile.keybagd.lock_status", a1, v3, v5);
  _Block_release(v5);
}

uint64_t sub_1BC7C3CBC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC7C4244();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BC7C3D10(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void sub_1BC7C3D4C(void (*a1)(void), uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  char v8;

  v5 = *(os_unfair_lock_s **)(v2 + 16);
  v6 = (uint64_t)&v5[4];
  v7 = v5 + 9;
  os_unfair_lock_lock(v5 + 9);
  sub_1BC7C3DD4(v6, (uint64_t)a1, a2, &v8);
  os_unfair_lock_unlock(v7);
  if (v8 == 1)
    a1();
}

uint64_t sub_1BC7C3DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  _QWORD *v14;

  result = MKBGetDeviceLockState();
  if ((result - 1) > 1)
  {
    v13 = 1;
  }
  else
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a2;
    *(_QWORD *)(v9 + 24) = a3;
    v10 = *(_QWORD **)(a1 + 8);
    swift_retain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1BC726150(0, v10[2] + 1, 1, v10);
      v10 = (_QWORD *)result;
    }
    v12 = v10[2];
    v11 = v10[3];
    if (v12 >= v11 >> 1)
    {
      result = (uint64_t)sub_1BC726150((_QWORD *)(v11 > 1), v12 + 1, 1, v10);
      v10 = (_QWORD *)result;
    }
    v13 = 0;
    v10[2] = v12 + 1;
    v14 = &v10[2 * v12];
    v14[4] = sub_1BC6E15EC;
    v14[5] = v9;
    *(_QWORD *)(a1 + 8) = v10;
  }
  *a4 = v13;
  return result;
}

uint64_t sub_1BC7C3EDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  void (*v25)(uint64_t);
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v30 = a1;
  v4 = sub_1BC817950();
  v35 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BC817974();
  v33 = *(_QWORD *)(v7 - 8);
  v34 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BC81798C();
  v11 = *(_QWORD *)(v10 - 8);
  v29 = v10;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - v15;
  v17 = sub_1BC817944();
  v18 = *(_QWORD *)(v17 - 8);
  v31 = v17;
  v32 = v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (uint64_t *)((char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v20 = 250;
  (*(void (**)(_QWORD *, _QWORD))(v21 + 104))(v20, *MEMORY[0x1E0DEF490]);
  v27 = *(_QWORD *)(v2 + 24);
  sub_1BC817980();
  MEMORY[0x1BCCF4674](v14, v20);
  v28 = *(void (**)(char *, uint64_t))(v11 + 8);
  v28(v14, v10);
  v22 = (_QWORD *)swift_allocObject();
  v23 = v30;
  v22[2] = v2;
  v22[3] = v23;
  v22[4] = a2;
  aBlock[4] = sub_1BC7C4214;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_22;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1BC817968();
  v36 = MEMORY[0x1E0DEE9D8];
  v25 = (void (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BC6E1788((unint64_t *)&qword_1ED6B9DC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BC6F72FC(0, (unint64_t *)&unk_1ED6BA7D0, v25);
  sub_1BC6F75D4((unint64_t *)&qword_1ED6BA7E0, (unint64_t *)&unk_1ED6BA7D0, v25);
  sub_1BC818184();
  MEMORY[0x1BCCF4C14](v16, v9, v6, v24);
  _Block_release(v24);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  v28(v16, v29);
  (*(void (**)(_QWORD *, uint64_t))(v32 + 8))(v20, v31);
  return swift_release();
}

uint64_t sub_1BC7C41E8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BC7C4214()
{
  uint64_t v0;

  sub_1BC7C3D4C(*(void (**)(void))(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t sub_1BC7C4244()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 36));
  v2 = MKBGetDeviceLockState();
  v3 = MEMORY[0x1E0DEE9D8];
  if ((v2 - 1) >= 2)
  {
    v4 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v1 + 24) = MEMORY[0x1E0DEE9D8];
    v3 = v4;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 36));
  v5 = *(_QWORD *)(v3 + 16);
  if (v5)
  {
    v6 = v3 + 40;
    do
    {
      v7 = *(void (**)(uint64_t))(v6 - 8);
      v8 = swift_retain();
      v7(v8);
      swift_release();
      v6 += 16;
      --v5;
    }
    while (v5);
  }
  return swift_bridgeObjectRelease();
}

uint64_t FileProtectionStateMonitor.deinit()
{
  uint64_t v0;

  swift_release();

  return v0;
}

uint64_t FileProtectionStateMonitor.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileProtectionStateMonitor()
{
  return objc_opt_self();
}

uint64_t method lookup function for FileProtectionStateMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FileProtectionStateMonitor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of FileProtectionStateMonitor.whenUnlocked(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of FileProtectionStateMonitor.retryWhenUnlocked(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1BC7C4380(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FileProtectionStateMonitor.ProtectedState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FileProtectionStateMonitor.ProtectedState(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FileProtectionStateMonitor.ProtectedState()
{
  return &type metadata for FileProtectionStateMonitor.ProtectedState;
}

uint64_t sub_1BC7C4464()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7C4488()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7C44AC()
{
  return sub_1BC7C3CBC();
}

uint64_t storeEnumTagSinglePayload for FileProtectionStateMonitor.LockState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC7C4500 + 4 * byte_1BC8210C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC7C4534 + 4 * byte_1BC8210C0[v4]))();
}

uint64_t sub_1BC7C4534(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7C453C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7C4544);
  return result;
}

uint64_t sub_1BC7C4550(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7C4558);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC7C455C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7C4564(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FileProtectionStateMonitor.LockState()
{
  return &type metadata for FileProtectionStateMonitor.LockState;
}

unint64_t sub_1BC7C4584()
{
  unint64_t result;

  result = qword_1EF45CA00;
  if (!qword_1EF45CA00)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC82116C, &type metadata for FileProtectionStateMonitor.LockState);
    atomic_store(result, (unint64_t *)&qword_1EF45CA00);
  }
  return result;
}

uint64_t MockPinnedContentUpdateNotifier.publisher.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t MockPinnedContentUpdateNotifier.publisher.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*MockPinnedContentUpdateNotifier.publisher.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MockPinnedContentUpdateNotifier.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_1BC7A67A4();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BC81774C();
  return v0;
}

uint64_t MockPinnedContentUpdateNotifier.init()()
{
  uint64_t v0;

  sub_1BC7A67A4();
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1BC81774C();
  return v0;
}

uint64_t MockPinnedContentUpdateNotifier.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t MockPinnedContentUpdateNotifier.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7C4754()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1BC7C4794(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;

  v2 = v1;
  sub_1BC7A67A4();
  swift_allocObject();
  *(_QWORD *)(v1 + 24) = sub_1BC81774C();
  sub_1BC816BC4();
  v4 = objc_allocWithZone(MEMORY[0x1E0CB67F0]);
  v5 = a1;
  v6 = (void *)sub_1BC817AC4();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(v4, sel_initWithCategory_domainName_healthStore_, 1, v6, v5);

  *(_QWORD *)(v2 + 16) = v7;
  v8 = v7;
  swift_retain();
  objc_msgSend(v8, sel_startObservation_, v2);

  swift_release();
  return v2;
}

uint64_t sub_1BC7C4884()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_stopObservation_, v0);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7C4950()
{
  return swift_retain();
}

uint64_t static PinnedContentManager.pin(objectType:healthStore:)(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;

  v3 = _sSo12HKObjectTypeC14HealthPlatformE23pinnedContentIdentifierSSvg_0();
  v5 = v4;
  type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier();
  v6 = swift_allocObject();
  v7 = a2;
  sub_1BC7C4794(v7);
  v8 = objc_allocWithZone((Class)sub_1BC816BB8());
  v9 = v7;
  v10 = sub_1BC816BAC();
  v11 = swift_allocObject();
  swift_retain();
  sub_1BC7C6B10(v10, v6, v11);
  swift_release();

  v12._countAndFlagsBits = v3;
  v12._object = v5;
  PinnedContentManager.pin(identifier:)(v12);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t static PinnedContentManager.pin(identifier:healthStore:)(uint64_t a1, void *a2, void *a3)
{
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;

  type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier();
  v6 = swift_allocObject();
  v7 = a3;
  sub_1BC7C4794(v7);
  v8 = objc_allocWithZone((Class)sub_1BC816BB8());
  v9 = v7;
  v10 = sub_1BC816BAC();
  v11 = swift_allocObject();
  swift_retain();
  sub_1BC7C6B10(v10, v6, v11);
  swift_release();

  v12._countAndFlagsBits = a1;
  v12._object = a2;
  PinnedContentManager.pin(identifier:)(v12);
  return swift_release();
}

uint64_t PinnedContentManager.__allocating_init(healthStore:domain:)(void *a1)
{
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier();
  v2 = swift_allocObject();
  v3 = a1;
  sub_1BC7C4794(v3);
  v4 = objc_allocWithZone((Class)sub_1BC816BB8());
  v5 = v3;
  v6 = sub_1BC816BAC();
  v7 = swift_allocObject();
  swift_retain();
  v8 = sub_1BC7C6B10(v6, v2, v7);
  swift_release();

  return v8;
}

uint64_t type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier()
{
  return objc_opt_self();
}

Swift::Void __swiftcall PinnedContentManager.pin(identifier:)(Swift::String identifier)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1BC817590();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));

}

uint64_t PinnedContentManager.state.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  uint64_t v5;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC7C55A0(v2, v0, &v5);
  os_unfair_lock_unlock(v3);
  sub_1BC817764();
  swift_release();
  return v5;
}

uint64_t PinnedContentManager.publisher.getter()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  v2 = (uint64_t *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC7C55A0(v2, v0, &v6);
  os_unfair_lock_unlock(v3);
  sub_1BC7C6CA8();
  sub_1BC6E1788(&qword_1ED6B9608, (uint64_t (*)(uint64_t))sub_1BC7C6CA8, MEMORY[0x1E0C95FB8]);
  v4 = sub_1BC817854();
  swift_release();
  return v4;
}

uint64_t PinnedContentManager.__allocating_init(pinnedContentStore:notifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = __swift_mutable_project_boxed_opaque_existential_1(a1, v5);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = __swift_mutable_project_boxed_opaque_existential_1(a2, v8);
  v11 = sub_1BC7C6EE8(v7, v10, v2, v5, v8, v6, v9);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v11;
}

uint64_t PinnedContentManager.init(pinnedContentStore:notifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = __swift_mutable_project_boxed_opaque_existential_1(a1, v6);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v11 + 16))(v10);
  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v14 = __swift_mutable_project_boxed_opaque_existential_1(a2, v12);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  v18 = sub_1BC7C6D1C((uint64_t)v10, (uint64_t)v16, v3, v6, v12, v7, v13);
  __swift_destroy_boxed_opaque_existential_0(a2);
  __swift_destroy_boxed_opaque_existential_0(a1);
  return v18;
}

uint64_t sub_1BC7C51AC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BC7C5200();
    return swift_release();
  }
  return result;
}

void sub_1BC7C5200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  _QWORD v16[4];
  uint64_t v17;

  v1 = v0;
  v2 = sub_1BC817590();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v16 - v7;
  sub_1BC817554();
  v9 = sub_1BC81756C();
  v10 = sub_1BC817E9C();
  if (os_log_type_enabled(v9, v10))
  {
    v16[2] = v6;
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    v16[0] = v3;
    v16[1] = v1;
    *(_DWORD *)v11 = 136315138;
    v13 = sub_1BC818814();
    v16[3] = sub_1BC6E14D8(v13, v14, &v17);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v9, v10, "[%s] Pinned content did change notification received, fetching latest value", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v12, -1, -1);
    MEMORY[0x1BCCF5BA4](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v16[0] + 8))(v8, v2);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
  sub_1BC7C5844();

}

uint64_t sub_1BC7C55A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = *a1;
  if (v6)
  {
    *a3 = v6;
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 48));
    v7 = sub_1BC816BE8();
    if (v3)
    {
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v8 = sub_1BC817590();
      __swift_project_value_buffer(v8, (uint64_t)qword_1ED6BB5D0);
      v9 = v3;
      v10 = v3;
      v11 = sub_1BC81756C();
      v12 = sub_1BC817E84();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = swift_slowAlloc();
        v14 = swift_slowAlloc();
        v22 = v14;
        *(_DWORD *)v13 = 136446466;
        v15 = sub_1BC818814();
        sub_1BC6E14D8(v15, v16, &v22);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2080;
        v17 = v3;
        sub_1BC6E1878();
        v18 = sub_1BC817AF4();
        sub_1BC6E14D8(v18, v19, &v22);
        sub_1BC818148();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1BC6DD000, v11, v12, "[%{public}s]: Failed to fetch initial pinned content: %s", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v14, -1, -1);
        MEMORY[0x1BCCF5BA4](v13, -1, -1);

      }
      else
      {

      }
      v7 = 0;
    }
    v22 = v7;
    sub_1BC7C6CA8();
    swift_allocObject();
    v20 = sub_1BC817788();
    *a1 = v20;
    *a3 = v20;
    swift_retain();
  }
  return swift_retain();
}

void sub_1BC7C5844()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t *v21;
  os_unfair_lock_s *v22;
  id v23;
  _QWORD v24[3];
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = (uint64_t)v0;
  v3 = *v0;
  v4 = sub_1BC817590();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v0 + 3, v0[6]);
  v30 = (id)sub_1BC816BE8();
  if (!v1)
  {
    v28 = v5;
    v29 = v4;
    v8 = v3;
    sub_1BC817554();
    v9 = v30;
    v10 = sub_1BC81756C();
    v11 = sub_1BC817E9C();
    v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      v13 = swift_slowAlloc();
      v26 = swift_slowAlloc();
      v33 = v26;
      *(_DWORD *)v13 = 136315394;
      v25 = v12;
      v27 = v8;
      v14 = sub_1BC818814();
      v31 = sub_1BC6E14D8(v14, v15, &v33);
      v24[2] = &v32;
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2080;
      v24[1] = v13 + 14;
      sub_1BC816B94();
      v16 = MEMORY[0x1BCCF4914]();
      v18 = v17;
      swift_bridgeObjectRelease();
      v31 = sub_1BC6E14D8(v16, v18, &v33);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v10, (os_log_type_t)v25, "[%s] Pinned content refetch result %s", (uint8_t *)v13, 0x16u);
      v19 = v26;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v19, -1, -1);
      MEMORY[0x1BCCF5BA4](v13, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v29);
    v20 = *(os_unfair_lock_s **)(v2 + 16);
    v21 = (uint64_t *)&v20[4];
    v22 = v20 + 6;
    os_unfair_lock_lock(v20 + 6);
    sub_1BC7C55A0(v21, v2, &v33);
    os_unfair_lock_unlock(v22);
    v33 = (uint64_t)v9;
    v23 = v9;
    sub_1BC817770();
    swift_release();
  }
}

void PinnedContentManager.latestState()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  os_unfair_lock_s *v7;
  uint64_t *v8;
  os_unfair_lock_s *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint8_t *v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v0;
  v3 = sub_1BC817590();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(os_unfair_lock_s **)(v0 + 16);
  v8 = (uint64_t *)&v7[4];
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_1BC7C55A0(v8, v2, &v21);
  if (v1)
  {
    os_unfair_lock_unlock(v9);
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock(v9);
    sub_1BC817764();
    swift_release();
    if (!v21)
    {
      sub_1BC817554();
      v10 = sub_1BC81756C();
      v11 = sub_1BC817E84();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v21 = v19;
        v18 = v12;
        *(_DWORD *)v12 = 136315138;
        v17 = v12 + 4;
        v13 = sub_1BC818814();
        v20 = sub_1BC6E14D8(v13, v14, &v21);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        v15 = v18;
        _os_log_impl(&dword_1BC6DD000, v10, v11, "[%s] Fetch latest pinned content because no cached state found", v18, 0xCu);
        v16 = v19;
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v16, -1, -1);
        MEMORY[0x1BCCF5BA4](v15, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_1BC7C5844();
    }
  }
}

Swift::Void __swiftcall PinnedContentManager.apply(differences:)(Swift::OpaquePointer differences)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1BC817590();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));

}

Swift::Void __swiftcall PinnedContentManager.pin(identifier:at:)(Swift::String identifier, Swift::Int at)
{
  uint64_t v2;
  uint64_t v3;

  v3 = sub_1BC817590();
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 48));

}

Swift::Void __swiftcall PinnedContentManager.unpin(identifier:)(Swift::String identifier)
{
  uint64_t v1;
  uint64_t v2;

  v2 = sub_1BC817590();
  MEMORY[0x1E0C80A78](v2);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 48));

}

char *sub_1BC7C6700@<X0>(const char **a1@<X0>, int *a2@<X1>, char **a3@<X8>)
{
  char *result;

  result = index(*a1, *a2);
  *a3 = result;
  return result;
}

Swift::Void __swiftcall PinnedContentManager.unpinAll()()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BC817590();
  MEMORY[0x1E0C80A78](v1);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 48));

}

uint64_t PinnedContentManager.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  swift_release();
  return v0;
}

uint64_t PinnedContentManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  __swift_destroy_boxed_opaque_existential_0(v0 + 64);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7C6A10()
{
  return PinnedContentManager.state.getter();
}

uint64_t sub_1BC7C6A30()
{
  return PinnedContentManager.publisher.getter();
}

void sub_1BC7C6A50()
{
  PinnedContentManager.latestState()();
}

void sub_1BC7C6A70(uint64_t a1, uint64_t a2, Swift::Int a3)
{
  PinnedContentManager.pin(identifier:at:)(*(Swift::String *)&a1, a3);
}

void sub_1BC7C6A90(uint64_t a1, uint64_t a2)
{
  PinnedContentManager.pin(identifier:)(*(Swift::String *)&a1);
}

void sub_1BC7C6AB0(uint64_t a1, uint64_t a2)
{
  PinnedContentManager.unpin(identifier:)(*(Swift::String *)&a1);
}

void sub_1BC7C6AD0()
{
  PinnedContentManager.unpinAll()();
}

void sub_1BC7C6AF0(Swift::OpaquePointer a1)
{
  PinnedContentManager.apply(differences:)(a1);
}

uint64_t sub_1BC7C6B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[5];
  _QWORD v12[5];

  v12[3] = sub_1BC816BB8();
  v12[4] = MEMORY[0x1E0D28A10];
  v12[0] = a1;
  v11[3] = type metadata accessor for KeyValueDomainPinnedContentUpdateNotifier();
  v11[4] = &off_1E7521388;
  v11[0] = a2;
  sub_1BC7C7194();
  v6 = swift_allocObject();
  *(_DWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(a3 + 16) = v6;
  *(_QWORD *)(a3 + 104) = 0;
  sub_1BC816C18();
  sub_1BC6FC700((uint64_t)v12, a3 + 24);
  sub_1BC6FC700((uint64_t)v11, a3 + 64);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = sub_1BC7C722C;
  *(_QWORD *)(v8 + 24) = v7;
  sub_1BC7A67A4();
  sub_1BC6E1788(&qword_1ED6BA408, (uint64_t (*)(uint64_t))sub_1BC7A67A4, MEMORY[0x1E0C95F48]);
  swift_retain();
  v9 = sub_1BC817884();
  swift_release();
  swift_release();
  *(_QWORD *)(a3 + 104) = v9;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return a3;
}

void sub_1BC7C6CA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BAA00)
  {
    sub_1BC6E1440(255, &qword_1ED6BA910, MEMORY[0x1E0D289F8]);
    v0 = sub_1BC81777C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6BAA00);
  }
}

uint64_t sub_1BC7C6D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20[5];
  uint64_t v21[5];

  v21[3] = a4;
  v21[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_1, a1, a4);
  v20[3] = a5;
  v20[4] = a7;
  v14 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v14, a2, a5);
  sub_1BC7C7194();
  v15 = swift_allocObject();
  *(_DWORD *)(v15 + 24) = 0;
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(a3 + 16) = v15;
  *(_QWORD *)(a3 + 104) = 0;
  sub_1BC816C18();
  sub_1BC6FC700((uint64_t)v21, a3 + 24);
  sub_1BC6FC700((uint64_t)v20, a3 + 64);
  (*(void (**)(uint64_t, uint64_t))(a7 + 8))(a5, a7);
  v16 = swift_allocObject();
  swift_weakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = sub_1BC7C722C;
  *(_QWORD *)(v17 + 24) = v16;
  sub_1BC7A67A4();
  sub_1BC6E1788(&qword_1ED6BA408, (uint64_t (*)(uint64_t))sub_1BC7A67A4, MEMORY[0x1E0C95F48]);
  v18 = sub_1BC817884();
  swift_release();
  swift_release();
  *(_QWORD *)(a3 + 104) = v18;
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
  return a3;
}

uint64_t sub_1BC7C6EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a7;
  v12 = *(_QWORD *)(a5 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v13);
  v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, a5);
  return sub_1BC7C6D1C((uint64_t)v19, (uint64_t)v15, v20, a4, a5, a6, v23);
}

unint64_t sub_1BC7C6FF4()
{
  unint64_t result;

  result = qword_1EF45CA08;
  if (!qword_1EF45CA08)
  {
    sub_1BC7C7088(255, &qword_1EF45CA10, &qword_1EF45CA18, MEMORY[0x1E0DEB910]);
    sub_1BC7C7088(255, &qword_1EF45CA20, &qword_1EF45CA28, MEMORY[0x1E0DEA548]);
    result = swift_getFunctionTypeMetadata2();
    atomic_store(result, (unint64_t *)&qword_1EF45CA08);
  }
  return result;
}

void sub_1BC7C7088(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC7C70DC(255, a3, a4);
    v5 = sub_1BC818130();
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_1BC7C70DC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, MEMORY[0x1E0DEDA70]);
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t dispatch thunk of PinnedContentUpdateNotifier.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for MockPinnedContentUpdateNotifier()
{
  return objc_opt_self();
}

uint64_t method lookup function for MockPinnedContentUpdateNotifier()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockPinnedContentUpdateNotifier.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t type metadata accessor for PinnedContentManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for PinnedContentManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PinnedContentManager.__allocating_init(pinnedContentStore:notifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_1BC7C7194()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6BAA10[0])
  {
    sub_1BC6E1440(255, &qword_1ED6BAA08, (void (*)(uint64_t))sub_1BC7C6CA8);
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, qword_1ED6BAA10);
  }
}

uint64_t sub_1BC7C7208()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7C722C()
{
  return sub_1BC7C51AC();
}

uint64_t sub_1BC7C7234()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC7C7260(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1BC816D50();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

id HealthAppOrchestrationServer.__allocating_init(connection:coordinator:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return HealthAppOrchestrationServer.init(connection:coordinator:)(a1, a2, a3);
}

id HealthAppOrchestrationServer.init(connection:coordinator:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  void *v24;
  void *v25;
  uint64_t v26;
  objc_super v27;

  sub_1BC7C757C();
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_protectedState] = v7;
  *(_QWORD *)(v7 + 16) = a1;
  v8 = &v3[OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator];
  *(_QWORD *)v8 = a2;
  *((_QWORD *)v8 + 1) = a3;
  v27.receiver = v3;
  v27.super_class = (Class)type metadata accessor for HealthAppOrchestrationServer();
  v9 = a1;
  swift_unknownObjectRetain();
  v10 = objc_msgSendSuper2(&v27, sel_init);
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_1EF46AC50);
  objc_msgSend(v9, sel_setExportedInterface_, v13);

  v14 = objc_msgSend(v11, sel_interfaceWithProtocol_, &unk_1EF46DE68);
  objc_msgSend(v9, sel_setRemoteObjectInterface_, v14);

  objc_msgSend(v9, sel_setExportedObject_, v12);
  objc_msgSend(v9, sel_resume);
  v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v25 = sub_1BC7C769C;
  v26 = v15;
  v16 = MEMORY[0x1E0C809B0];
  v21 = MEMORY[0x1E0C809B0];
  v22 = 1107296256;
  v23 = sub_1BC719640;
  v24 = &block_descriptor_23;
  v17 = _Block_copy(&v21);
  swift_release();
  objc_msgSend(v9, sel_setInterruptionHandler_, v17);
  _Block_release(v17);
  v18 = objc_msgSend(v9, sel_interruptionHandler);
  if (v18)
  {
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v18;
    v25 = sub_1BC7BA8EC;
    v26 = v19;
    v21 = v16;
    v22 = 1107296256;
    v23 = sub_1BC719640;
    v24 = &block_descriptor_6_1;
    v18 = _Block_copy(&v21);
    swift_release();
  }
  objc_msgSend(v9, sel_setInvalidationHandler_, v18);

  swift_unknownObjectRelease();
  _Block_release(v18);
  return v12;
}

void sub_1BC7C757C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B6398)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B6398);
  }
}

uint64_t type metadata accessor for HealthAppOrchestrationServer()
{
  return objc_opt_self();
}

uint64_t sub_1BC7C75F8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BC7C761C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCF5C70](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_protectedState);
    os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));

    *(_QWORD *)(v4 + 16) = 0;
    os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));

  }
}

void sub_1BC7C769C()
{
  uint64_t v0;

  sub_1BC7C761C(v0);
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t sub_1BC7C76AC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1BC7C76D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 8);
  swift_retain();
  v8(sub_1BC6E15EC, v5, ObjectType, v6);
  return swift_release();
}

uint64_t sub_1BC7C7838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v8(sub_1BC6F7CBC, v5, ObjectType, v6);
  return swift_release();
}

uint64_t sub_1BC7C78C8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7C79C4(void (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(ObjectType, v3);
  a1(v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7C7AC8(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 32))(ObjectType, v3);
  a1();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7C7BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 40);
  swift_retain();
  v8(sub_1BC6E15EC, v5, ObjectType, v6);
  return swift_release();
}

uint64_t sub_1BC7C7D3C(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(ObjectType, v3);
  return a1(v5);
}

uint64_t sub_1BC7C7E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t ObjectType;
  uint64_t v7;
  uint64_t (*v8)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  v8 = *(uint64_t (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_retain();
  v9 = v8(sub_1BC7C8880, v7, ObjectType, v5);
  swift_release();
  return v9;
}

uint64_t sub_1BC7C7F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t ObjectType;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, void (*)(char), uint64_t, uint64_t, uint64_t);

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  v12 = *(_QWORD *)(v5 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = sub_1BC6F7CBC;
  *(_QWORD *)(v14 + 24) = v11;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, void (*)(char), uint64_t, uint64_t, uint64_t))(v12 + 64);
  swift_retain();
  swift_retain();
  v15(a1, a2, a3, sub_1BC7C8100, v14, ObjectType, v12);
  swift_release();
  return swift_release();
}

void sub_1BC7C8088(char a1, void (*a2)(void))
{
  id v3;

  if ((a1 & 1) != 0)
  {
    ((void (*)(_QWORD))a2)(0);
  }
  else
  {
    v3 = objc_msgSend((id)objc_opt_self(), sel_hk_error_userInfo_, 0, 0);
    a2();

  }
}

void sub_1BC7C8100(char a1)
{
  uint64_t v1;

  sub_1BC7C8088(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_1BC7C8270(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 72))(ObjectType, v3);
  return a1(v5);
}

uint64_t sub_1BC7C8350(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t ObjectType;
  uint64_t v5;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 80))(ObjectType, v3);
  return a1(v5);
}

uint64_t sub_1BC7C8430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  void (*v8)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC14HealthPlatform28HealthAppOrchestrationServer_coordinator + 8);
  ObjectType = swift_getObjectType();
  v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 88);
  swift_retain();
  v8(sub_1BC6F7CBC, v5, ObjectType, v6);
  return swift_release();
}

id HealthAppOrchestrationServer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HealthAppOrchestrationServer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HealthAppOrchestrationServer.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthAppOrchestrationServer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.fireOnce(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.resetAndFireOnce(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.orchestrationStatus()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.orchestrationGraph()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.deleteCacheAndTerminate(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.cancelLegacyGeneration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.runForegroundGeneration(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.runBackgroundGeneration(plugins:commitAsUrgent:generationType:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.requestBackgroundGenerationForFeedItemsAfterUnlock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.requestBackgroundGenerationForAllModelsAfterUnlock()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HealthAppOrchestrationCoordinator.runOrRequestBackgroundGeneration(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t method lookup function for HealthAppOrchestrationServer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.__allocating_init(connection:coordinator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_fireOnce(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_resetAndFire(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_fetchOrchestrationStatus(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_fetchOrchestrationGraph(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_deleteCacheAndTerminate(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_cancelAllGeneration(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_runForegroundGeneration(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_runBackgroundGeneration(plugins:commitAsUrgent:generationType:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_requestBackgroundGenerationForFeedItemsAfterUnlock(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_requestBackgroundGenerationForAllModelsAfterUnlock(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of HealthAppOrchestrationServer.remote_runOrRequestBackgroundGeneration(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

ValueMetadata *type metadata accessor for HealthAppOrchestrationServer.State()
{
  return &type metadata for HealthAppOrchestrationServer.State;
}

uint64_t static InputSignalIdentifier.summaryTransaction.getter()
{
  return sub_1BC8173E0();
}

uint64_t static InputSignalSet.LookupKey.summaryTransaction.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  type metadata accessor for SummaryTransactionInputSignal();
  return sub_1BC817260();
}

uint64_t type metadata accessor for SummaryTransactionInputSignal()
{
  uint64_t result;

  result = qword_1ED6B94B8;
  if (!qword_1ED6B94B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SummaryTransactionInputSignal.__allocating_init(context:observer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v11 = *(_QWORD *)(a5 + 24);
  v12 = *(_QWORD *)(a5 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a5, v11);
  v14 = sub_1BC7C9930(a1, a2, a3, a4, v13, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a5);
  return v14;
}

uint64_t SummaryTransactionInputSignal.init(context:observer:source:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v11 = *(_QWORD *)(a5 + 24);
  v12 = *(_QWORD *)(a5 + 32);
  v13 = __swift_mutable_project_boxed_opaque_existential_1(a5, v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v16 + 16))(v15);
  v17 = sub_1BC7C978C(a1, a2, a3, a4, (uint64_t)v15, v5, v11, v12);
  __swift_destroy_boxed_opaque_existential_0(a5);
  return v17;
}

uint64_t static SummaryTransactionInputSignal.identityConfiguration.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  return sub_1BC8173C8();
}

uint64_t SummaryTransactionInputSignal.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier;
  v4 = sub_1BC8173EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SummaryTransactionInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SummaryTransactionInputSignal.beginObservation(from:configurations:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(void (*)(void *, char), uint64_t, uint64_t, uint64_t);

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
  v3 = v0[5];
  v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = *(void (**)(void (*)(void *, char), uint64_t, uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  v6(sub_1BC7C9A24, v5, v3, v4);
  return swift_release_n();
}

void sub_1BC7C8C74(void *a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t Strong;
  _QWORD *v17;
  uint64_t v18;
  id v19;
  void *v20;
  unsigned __int8 v21;
  id v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;

  v4 = sub_1BC8173EC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7C9A88();
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BC817590();
  v32 = *(_QWORD *)(v13 - 8);
  v33 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v17 = (_QWORD *)Strong;
    if ((a2 & 1) != 0)
    {
      v19 = a1;
      v20 = (void *)sub_1BC816D50();
      v21 = objc_msgSend(v20, sel_hk_isDatabaseAccessibilityError);

      if ((v21 & 1) == 0)
      {
        swift_getObjectType();
        sub_1BC8171E8();
        v22 = a1;
        v23 = a1;
        v24 = sub_1BC81756C();
        v25 = sub_1BC817E84();
        if (os_log_type_enabled(v24, v25))
        {
          v26 = (uint8_t *)swift_slowAlloc();
          v27 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v26 = 138412290;
          v28 = a1;
          v29 = _swift_stdlib_bridgeErrorToNSError();
          v34 = (_QWORD *)v29;
          sub_1BC818148();
          *v27 = v29;
          sub_1BC79DBA4(a1, 1);
          sub_1BC79DBA4(a1, 1);
          _os_log_impl(&dword_1BC6DD000, v24, v25, "Transaction observation query failed, restarting: %@", v26, 0xCu);
          sub_1BC6EFA40();
          swift_arrayDestroy();
          MEMORY[0x1BCCF5BA4](v27, -1, -1);
          MEMORY[0x1BCCF5BA4](v26, -1, -1);
        }
        else
        {
          sub_1BC79DBA4(a1, 1);
          sub_1BC79DBA4(a1, 1);
        }

        (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v33);
      }
      v30 = v17[5];
      v31 = v17[6];
      __swift_project_boxed_opaque_existential_1(v17 + 2, v30);
      (*(void (**)(uint64_t, uint64_t))(v31 + 16))(v30, v31);
      if (qword_1EF45ABF8 != -1)
        swift_once();
      swift_retain();
      sub_1BC7C3EDC((uint64_t)sub_1BC7C9DC0, (uint64_t)v17);
      swift_release_n();
      sub_1BC79DBA4(a1, 1);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, Strong + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier, v4);
      sub_1BC79DD74(a1, 0);
      v18 = sub_1BC6EBEDC((unint64_t)a1);
      sub_1BC79DBA4(a1, 0);
      v34 = (_QWORD *)v18;
      sub_1BC7C9B4C();
      sub_1BC6E1788(&qword_1ED6B8480, (uint64_t (*)(uint64_t))sub_1BC7C9B4C, MEMORY[0x1E0D2D290]);
      sub_1BC6E1788(&qword_1ED6B8488, (uint64_t (*)(uint64_t))sub_1BC7C9B4C, MEMORY[0x1E0DEB3C8]);
      sub_1BC7C9BCC(&qword_1ED6B85B8, (uint64_t)&protocol conformance descriptor for HKSharedSummaryTransaction);
      sub_1BC81744C();
      swift_getObjectType();
      v34 = v17;
      type metadata accessor for SummaryTransactionInputSignal();
      sub_1BC6E1788(&qword_1ED6B7F10, (uint64_t (*)(uint64_t))type metadata accessor for SummaryTransactionInputSignal, (uint64_t)&protocol conformance descriptor for SummaryTransactionInputSignal);
      sub_1BC817374();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      swift_release();
    }
  }
}

uint64_t sub_1BC7C90E4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v1 = a1[5];
  v2 = a1[6];
  __swift_project_boxed_opaque_existential_1(a1 + 2, v1);
  v3 = swift_allocObject();
  swift_weakInit();
  v4 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v2 + 8);
  swift_retain();
  v4(sub_1BC7C9DD0, v3, v1, v2);
  return swift_release_n();
}

Swift::Void __swiftcall SummaryTransactionInputSignal.stopObservation()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

void sub_1BC7C91BC(id *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t aBlock;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, void *, uint64_t, void *);
  void *v17;
  void (*v18)(int, uint64_t, void *);
  uint64_t v19;

  if (*a1)
    objc_msgSend(*(id *)(a2 + 16), sel_stopQuery_);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a3;
  *(_QWORD *)(v8 + 24) = a4;
  v9 = objc_allocWithZone(MEMORY[0x1E0CB6B88]);
  v18 = sub_1BC7C9D54;
  v19 = v8;
  v10 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v15 = 1107296256;
  v16 = sub_1BC74C608;
  v17 = &block_descriptor_24;
  v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  v12 = objc_msgSend(v9, sel_initWithHandler_, v11);
  _Block_release(v11);
  swift_release();
  v18 = sub_1BC7C9D54;
  v19 = v8;
  aBlock = v10;
  v15 = 1107296256;
  v16 = sub_1BC74C608;
  v17 = &block_descriptor_6_2;
  v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_setUpdateHandler_, v13);
  _Block_release(v13);
  objc_msgSend(*(id *)(a2 + 16), sel_executeQuery_, v12);
  swift_release();

  *a1 = v12;
}

void sub_1BC7C9358(int a1, uint64_t a2, id a3, void (*a4)(id, uint64_t))
{
  id v6;
  void *v7;
  void *v8;
  id v9;

  if (a2)
  {
    ((void (*)(uint64_t, _QWORD, id))a4)(a2, 0, a3);
  }
  else
  {
    if (a3)
    {
      v6 = a3;
    }
    else
    {
      v7 = (void *)objc_opt_self();
      v8 = (void *)sub_1BC817AC4();
      v6 = objc_msgSend(v7, sel_hk_error_description_, 0, v8);

    }
    v9 = a3;
    a4(v6, 1);

  }
}

uint64_t sub_1BC7C942C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BC7C9458()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  id *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 24);
  v2 = (id *)&v1[4];
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC7C9D14(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1BC7C94B4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  os_unfair_lock_s *v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 24);
  v2 = v1 + 4;
  v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_1BC7C9CF8(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t SummaryTransactionInputSignal.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier;
  v2 = sub_1BC8173EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t SummaryTransactionInputSignal.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_unknownObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier;
  v2 = sub_1BC8173EC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7C95CC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_identifier;
  v4 = sub_1BC8173EC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC7C9614()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC7C9648()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t (*)(), uint64_t, uint64_t, uint64_t);

  v1 = *v0;
  v2 = (_QWORD *)(*v0 + 16);
  v3 = *(_QWORD *)(*v0 + 40);
  v4 = *(_QWORD *)(*v0 + 48);
  __swift_project_boxed_opaque_existential_1(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(v2, v5);
  v7 = swift_allocObject();
  swift_weakInit();
  v8 = *(void (**)(uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v6 + 8);
  swift_retain();
  v8(sub_1BC7C9DD0, v7, v5, v6);
  return swift_release_n();
}

uint64_t sub_1BC7C9704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 48);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v0 + 16), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v1, v2);
}

uint64_t sub_1BC7C974C()
{
  sub_1BC6E1788(&qword_1ED6B7F10, (uint64_t (*)(uint64_t))type metadata accessor for SummaryTransactionInputSignal, (uint64_t)&protocol conformance descriptor for SummaryTransactionInputSignal);
  return sub_1BC8171AC();
}

uint64_t sub_1BC7C978C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a7;
  v20 = a8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(boxed_opaque_existential_1, a5, a7);
  sub_1BC8173E0();
  sub_1BC6FC848(&v18, a6 + 16);
  *(_QWORD *)(a6 + 56) = a1;
  *(_QWORD *)(a6 + 64) = a2;
  v16 = (_QWORD *)(a6 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_observer);
  *v16 = a3;
  v16[1] = a4;
  return a6;
}

_QWORD *sub_1BC7C984C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t Source;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  Source = type metadata accessor for SummaryTransactionInputSignal.QuerySource();
  v13 = swift_allocObject();
  sub_1BC7C9D64();
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 24) = 0;
  *(_QWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v13 + 16) = a4;
  *(_QWORD *)(v13 + 24) = v14;
  v15 = (_QWORD *)swift_allocObject();
  v15[5] = Source;
  v15[6] = &off_1E7521910;
  v15[2] = v13;
  sub_1BC8173E0();
  v15[7] = a1;
  v15[8] = a7;
  v16 = (_QWORD *)((char *)v15 + OBJC_IVAR____TtC14HealthPlatform29SummaryTransactionInputSignal_observer);
  *v16 = a2;
  v16[1] = a3;
  return v15;
}

uint64_t sub_1BC7C9930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  v15 = *(_QWORD *)(a7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, a7);
  return sub_1BC7C978C(a1, a2, a3, a4, (uint64_t)v17, v18, a7, a8);
}

uint64_t sub_1BC7C9A00()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1BC7C9A24(void *a1, char a2)
{
  sub_1BC7C8C74(a1, a2 & 1);
}

uint64_t sub_1BC7C9A30()
{
  return sub_1BC6E1788(&qword_1ED6B94B0, (uint64_t (*)(uint64_t))type metadata accessor for SummaryTransactionInputSignal, (uint64_t)&protocol conformance descriptor for SummaryTransactionInputSignal);
}

uint64_t sub_1BC7C9A5C()
{
  return sub_1BC6E1788(&qword_1ED6B8000, (uint64_t (*)(uint64_t))sub_1BC7C9A88, MEMORY[0x1E0D2D1A8]);
}

void sub_1BC7C9A88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8008)
  {
    sub_1BC7C9B4C();
    sub_1BC6E1788(&qword_1ED6B8480, (uint64_t (*)(uint64_t))sub_1BC7C9B4C, MEMORY[0x1E0D2D290]);
    sub_1BC6E1788(&qword_1ED6B8488, (uint64_t (*)(uint64_t))sub_1BC7C9B4C, MEMORY[0x1E0DEB3C8]);
    sub_1BC7C9BCC(&qword_1ED6B85B8, (uint64_t)&protocol conformance descriptor for HKSharedSummaryTransaction);
    v0 = sub_1BC817464();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8008);
  }
}

void sub_1BC7C9B4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8478)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6B85C0);
    sub_1BC7C9BCC(&qword_1ED6B85D0, MEMORY[0x1E0DEFCF8]);
    v0 = sub_1BC817DC4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8478);
  }
}

uint64_t sub_1BC7C9BCC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6B85C0);
    result = MEMORY[0x1BCCF5AB4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of SummaryTransactionSource.fetchAndObserve(handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of SummaryTransactionSource.stop()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1BC7C9C2C()
{
  return type metadata accessor for SummaryTransactionInputSignal();
}

uint64_t sub_1BC7C9C34()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BC8173EC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SummaryTransactionInputSignal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SummaryTransactionInputSignal.__allocating_init(context:observer:source:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for SummaryTransactionInputSignal.QuerySource()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for SummaryTransactionInputSignal.QuerySource.ProtectedState()
{
  return &type metadata for SummaryTransactionInputSignal.QuerySource.ProtectedState;
}

_QWORD *sub_1BC7C9CF8(_QWORD *result)
{
  uint64_t v1;

  if (*result)
    return objc_msgSend(*(id *)(v1 + 16), sel_stopQuery_);
  return result;
}

void sub_1BC7C9D14(id *a1)
{
  uint64_t *v1;

  sub_1BC7C91BC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BC7C9D30()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC7C9D54(int a1, uint64_t a2, void *a3)
{
  uint64_t v3;

  sub_1BC7C9358(a1, a2, a3, *(void (**)(id, uint64_t))(v3 + 16));
}

uint64_t block_destroy_helper_25()
{
  return swift_release();
}

void sub_1BC7C9D64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8670)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8670);
  }
}

uint64_t sub_1BC7C9DC0()
{
  _QWORD *v0;

  return sub_1BC7C90E4(v0);
}

_QWORD *sub_1BC7C9DD4(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  unsigned __int8 v20;
  void (*v21)(uint64_t *__return_ptr, uint64_t *);

  v21 = a1;
  v4 = v3;
  v5 = *(_QWORD *)(a3 + 16);
  if (!v5)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v7 = (unsigned __int8 *)(a3 + 40);
  v8 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v10 = *((_QWORD *)v7 - 1);
    v11 = *v7;
    v19 = v10;
    v20 = v11;
    sub_1BC78D778(v10, v11);
    v21(&v17, &v19);
    if (v4)
    {
      sub_1BC78D79C(v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    sub_1BC78D79C(v10, v11);
    v12 = v18;
    if (v18 != 255)
    {
      v13 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1BC726178(0, v8[2] + 1, 1, v8);
      v15 = v8[2];
      v14 = v8[3];
      if (v15 >= v14 >> 1)
        v8 = sub_1BC726178((_QWORD *)(v14 > 1), v15 + 1, 1, v8);
      v8[2] = v15 + 1;
      v9 = &v8[2 * v15];
      v9[4] = v13;
      *((_BYTE *)v9 + 40) = v12;
    }
    v7 += 16;
    --v5;
  }
  while (v5);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1BC7C9F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  BOOL v17;

  if (*(_QWORD *)(a3 + 16))
  {
    sub_1BC81873C();
    sub_1BC817B30();
    v6 = sub_1BC818778();
    v7 = -1 << *(_BYTE *)(a3 + 32);
    v8 = v6 & ~v7;
    v9 = a3 + 56;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
    {
      v10 = *(_QWORD *)(a3 + 48);
      v11 = (_QWORD *)(v10 + 16 * v8);
      v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1BC818694() & 1) != 0)
        return 1;
      v14 = ~v7;
      v15 = (v8 + 1) & v14;
      if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
      {
        while (1)
        {
          v16 = (_QWORD *)(v10 + 16 * v15);
          v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1BC818694() & 1) != 0)
            break;
          result = 0;
          v15 = (v15 + 1) & v14;
          if (((*(_QWORD *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
            return result;
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1BC7CA078(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BC81873C();
    ContentKind.rawValue.getter();
    sub_1BC817B30();
    swift_bridgeObjectRelease();
    v3 = sub_1BC818778() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

void sub_1BC7CA6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  char v28;
  uint64_t v29;
  id v30;
  char v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v2 = a2;
  v4 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    v5 = sub_1BC8181FC();
    v6 = a1 & 0xC000000000000001;
    if ((a1 & 0xC000000000000001) != 0)
      goto LABEL_3;
LABEL_6:
    if (*(_QWORD *)(a1 + 16) < v5)
      return;
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 16);
  v6 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
    goto LABEL_6;
LABEL_3:
  if (sub_1BC8181FC() < v5)
    return;
LABEL_7:
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1BC8181C0();
    sub_1BC77A3B4();
    sub_1BC6E1788((unint64_t *)&qword_1ED6B97F8, (uint64_t (*)(uint64_t))sub_1BC77A3B4, MEMORY[0x1E0DEFCF8]);
    sub_1BC817DB8();
    v2 = v37;
    v33 = v38;
    v7 = v39;
    v8 = v40;
    v9 = v41;
  }
  else
  {
    v10 = -1 << *(_BYTE *)(v2 + 32);
    v33 = v2 + 56;
    v7 = ~v10;
    v11 = -v10;
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v9 = v12 & *(_QWORD *)(v2 + 56);
    swift_bridgeObjectRetain();
    v8 = 0;
  }
  sub_1BC77A3B4();
  v32 = (unint64_t)(v7 + 64) >> 6;
  v35 = a1 + 56;
  while (1)
  {
    while (1)
    {
      v14 = v9;
      v15 = v8;
      if ((v2 & 0x8000000000000000) == 0)
        break;
      if (!sub_1BC81822C())
        goto LABEL_46;
      swift_dynamicCast();
      v17 = v36;
      v34 = v14;
      if (v6)
        goto LABEL_14;
LABEL_36:
      v22 = v2;
      if (!*(_QWORD *)(a1 + 16))
        goto LABEL_43;
      v23 = v6;
      v24 = sub_1BC8180C4();
      v25 = -1 << *(_BYTE *)(a1 + 32);
      v26 = v24 & ~v25;
      if (((*(_QWORD *)(v35 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
        goto LABEL_43;
      v27 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v26);
      v28 = sub_1BC8180D0();

      if ((v28 & 1) == 0)
      {
        v29 = ~v25;
        while (1)
        {
          v26 = (v26 + 1) & v29;
          if (((*(_QWORD *)(v35 + ((v26 >> 3) & 0xFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
            break;
          v30 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v26);
          v31 = sub_1BC8180D0();

          if ((v31 & 1) != 0)
            goto LABEL_42;
        }
LABEL_43:

LABEL_44:
        sub_1BC6ECC4C();
        return;
      }
LABEL_42:

      v2 = v22;
      v6 = v23;
      v9 = v34;
    }
    if (v9)
    {
      v34 = (v9 - 1) & v9;
      v16 = __clz(__rbit64(v9)) | (v8 << 6);
      goto LABEL_35;
    }
    v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      return;
    }
    if (v18 >= v32)
      goto LABEL_46;
    v19 = *(_QWORD *)(v33 + 8 * v18);
    ++v8;
    if (!v19)
    {
      v8 = v15 + 2;
      if (v15 + 2 >= v32)
        goto LABEL_46;
      v19 = *(_QWORD *)(v33 + 8 * v8);
      if (!v19)
      {
        v8 = v15 + 3;
        if (v15 + 3 >= v32)
          goto LABEL_46;
        v19 = *(_QWORD *)(v33 + 8 * v8);
        if (!v19)
        {
          v8 = v15 + 4;
          if (v15 + 4 >= v32)
            goto LABEL_46;
          v19 = *(_QWORD *)(v33 + 8 * v8);
          if (!v19)
            break;
        }
      }
    }
LABEL_34:
    v34 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_35:
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v16);
    v36 = v17;
    v21 = v17;
    if (!v6)
      goto LABEL_36;
LABEL_14:
    v13 = sub_1BC818238();

    v9 = v34;
    if ((v13 & 1) == 0)
      goto LABEL_44;
  }
  v20 = v15 + 5;
  while (v32 != v20)
  {
    v19 = *(_QWORD *)(v33 + 8 * v20++);
    if (v19)
    {
      v8 = v20 - 1;
      goto LABEL_34;
    }
  }
LABEL_46:
  sub_1BC6ECC4C();
}

uint64_t Publisher<>.mapSharedSummaryToPluginSharableModel()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  sub_1BC7CC874(255, &qword_1ED6B83E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v0 = sub_1BC817614();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - v2;
  sub_1BC81786C();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v0);
  v4 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t Publisher<>.createPluginSharableModelChangeInitialPublisher()()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[2];

  v0 = MEMORY[0x1E0DEAEC8];
  sub_1BC7CC874(255, &qword_1ED6B83E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v1 = sub_1BC81771C();
  sub_1BC7CC82C(255, (unint64_t *)&qword_1ED6B83F0, (uint64_t (*)(_QWORD, ValueMetadata *))v0);
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95D90], v1);
  v2 = sub_1BC817614();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v8 - v4;
  v8[1] = Publisher<>.mapSharedSummaryToPluginSharableModel()();
  sub_1BC81786C();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v2);
  v6 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_1BC7CAD80@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  sub_1BC7CC82C(0, &qword_1ED6B8718, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 40) = 0;
  *a2 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BC7CADE0@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  _QWORD v26[2];
  __int128 v27;
  uint64_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;

  sub_1BC7CC874(0, &qword_1ED6B7DD8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - v5;
  v7 = type metadata accessor for PluginSharableModel();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v32 = (uint64_t)v26 - v12;
  v13 = *a1;
  v33 = v13;
  if (!(v13 >> 62))
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_3;
LABEL_18:
    result = swift_bridgeObjectRelease();
    v18 = MEMORY[0x1E0DEE9D8];
LABEL_19:
    *a2 = v18;
    return result;
  }
  swift_bridgeObjectRetain();
  v13 = v33;
  result = sub_1BC8184E4();
  v14 = result;
  if (!result)
    goto LABEL_18;
LABEL_3:
  if (v14 >= 1)
  {
    v26[0] = a2;
    v17 = 0;
    v34 = v13 & 0xC000000000000001;
    v18 = MEMORY[0x1E0DEE9D8];
    v28 = &v37;
    *(_QWORD *)&v16 = 136446210;
    v27 = v16;
    v26[1] = MEMORY[0x1E0DEE9B8] + 8;
    v35 = v14;
    v30 = v8;
    v31 = v7;
    v29 = v11;
    do
    {
      if (v34)
        v20 = (id)MEMORY[0x1BCCF4FB0](v17, v13);
      else
        v20 = *(id *)(v13 + 8 * v17 + 32);
      v21 = v20;
      PluginSharableModel.init(sharedSummary:)(v21, (uint64_t)v6);
      v36 = v18;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_1BC7CC8CC((uint64_t)v6);
        v19 = v35;
        v18 = v36;
      }
      else
      {
        v22 = v32;
        sub_1BC7CC7E8((uint64_t)v6, v32);
        sub_1BC7CC7E8(v22, (uint64_t)v11);
        v18 = v36;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v19 = v35;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v18 = sub_1BC726164(0, *(_QWORD *)(v18 + 16) + 1, 1, v18);
        v25 = *(_QWORD *)(v18 + 16);
        v24 = *(_QWORD *)(v18 + 24);
        if (v25 >= v24 >> 1)
          v18 = sub_1BC726164(v24 > 1, v25 + 1, 1, v18);
        *(_QWORD *)(v18 + 16) = v25 + 1;
        sub_1BC7CC7E8((uint64_t)v11, v18+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v25);
        v13 = v33;
      }
      ++v17;
    }
    while (v19 != v17);
    result = swift_bridgeObjectRelease();
    a2 = (unint64_t *)v26[0];
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t Publisher.catchAndReplaceErrorWithEmpty(debugDescription:completesImmediately:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a4;
  *(_QWORD *)(v10 + 24) = a5;
  *(_QWORD *)(v10 + 32) = a1;
  *(_QWORD *)(v10 + 40) = a2;
  *(_BYTE *)(v10 + 48) = a3;
  swift_getAssociatedTypeWitness();
  v11 = sub_1BC8177F4();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C960D0], v11);
  sub_1BC817890();
  return swift_release();
}

uint64_t sub_1BC7CB368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;

  v37 = a5;
  v38 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v36 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v30 - v14;
  if (a2)
  {
    v39 = 0x20726F6620;
    v40 = 0xE500000000000000;
    sub_1BC817B48();
    v16 = v40;
    v35 = v39;
  }
  else
  {
    v35 = 0;
    v16 = 0xE000000000000000;
  }
  if (qword_1ED6BB338 != -1)
    swift_once();
  v17 = sub_1BC817590();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED6BB320);
  v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v18(v15, a1, AssociatedTypeWitness);
  swift_bridgeObjectRetain();
  v19 = sub_1BC81756C();
  v20 = sub_1BC817E84();
  v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    v22 = swift_slowAlloc();
    v32 = v21;
    v23 = v22;
    v31 = swift_slowAlloc();
    v39 = v31;
    *(_DWORD *)v23 = 136446722;
    v34 = a3;
    v24 = sub_1BC818814();
    v41 = sub_1BC6E14D8(v24, v25, &v39);
    v33 = a6;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2082;
    swift_bridgeObjectRetain();
    v41 = sub_1BC6E14D8(v35, v16, &v39);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v23 + 22) = 2082;
    v18(v36, (uint64_t)v15, AssociatedTypeWitness);
    v26 = sub_1BC817AF4();
    v41 = sub_1BC6E14D8(v26, v27, &v39);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, AssociatedTypeWitness);
    _os_log_impl(&dword_1BC6DD000, v19, (os_log_type_t)v32, "[%{public}s] Error processing sharable models%{public}s: %{public}s", (uint8_t *)v23, 0x20u);
    v28 = v31;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v28, -1, -1);
    MEMORY[0x1BCCF5BA4](v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, AssociatedTypeWitness);
  }

  swift_getAssociatedTypeWitness();
  return sub_1BC8177E8();
}

uint64_t sub_1BC7CB6EC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC7CB710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC7CB368(a1, *(_QWORD *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t Publisher<>.catchModelGenerationError()(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  sub_1BC7CBA58();
  sub_1BC6E1788(&qword_1ED6B82E8, (uint64_t (*)(uint64_t))sub_1BC7CBA58, MEMORY[0x1E0C960D0]);
  sub_1BC817890();
  return swift_release();
}

uint64_t sub_1BC7CB7C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v21[3];
  uint64_t v22;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v21 - v9;
  if (qword_1ED6BB338 != -1)
    swift_once();
  v11 = sub_1BC817590();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED6BB320);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12(v10, a1, AssociatedTypeWitness);
  v13 = sub_1BC81756C();
  v14 = sub_1BC817E84();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v21[1] = a2;
    v17 = v16;
    v22 = v16;
    *(_DWORD *)v15 = 136446210;
    v21[0] = v15 + 4;
    v12(v8, (uint64_t)v10, AssociatedTypeWitness);
    v18 = sub_1BC817B00();
    v21[2] = sub_1BC6E14D8(v18, v19, &v22);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);
    _os_log_impl(&dword_1BC6DD000, v13, v14, "PluginSharableModelChange Publisher Error: %{public}s", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v17, -1, -1);
    MEMORY[0x1BCCF5BA4](v15, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, AssociatedTypeWitness);
  }

  sub_1BC7CC82C(0, (unint64_t *)&qword_1ED6B83F0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
  return sub_1BC8177E8();
}

uint64_t sub_1BC7CBA40()
{
  return swift_deallocObject();
}

uint64_t sub_1BC7CBA50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC7CB7C0(a1, a2);
}

void sub_1BC7CBA58()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B82F0)
  {
    sub_1BC7CC82C(255, (unint64_t *)&qword_1ED6B83F0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC8177F4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B82F0);
  }
}

uint64_t Publisher<>.filter(identifiers:objectTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v21 = a1;
  v22 = a2;
  v7 = *(_QWORD *)(a3 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7CC82C(255, (unint64_t *)&qword_1ED6B83F0, (uint64_t (*)(_QWORD, ValueMetadata *))MEMORY[0x1E0DEAEC8]);
  v20[2] = v10;
  v11 = sub_1BC817614();
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v4, a3);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = (v8 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v16 + v14, v9, a3);
  v17 = v22;
  *(_QWORD *)(v16 + v15) = v21;
  *(_QWORD *)(v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BC81786C();
  swift_release();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v11);
  v18 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
  return v18;
}

uint64_t sub_1BC7CBC88()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BC7CBD0C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *result;
  _OWORD v12[2];
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFF8;
  v8 = *(_QWORD *)(v2 + v6);
  v9 = *(_QWORD *)(v2 + v7);
  v10 = *a1;
  v12[1] = *(_OWORD *)(v2 + 16);
  v13 = v2 + v5;
  v14 = v8;
  v15 = v9;
  result = sub_1BC7C9DD4((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1BC7CC170, (uint64_t)v12, v10);
  *a2 = result;
  return result;
}

uint64_t sub_1BC7CBD9C()
{
  uint64_t v0;
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  v2 = sub_1BC8177F4();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C960D0], v2);
  v0 = sub_1BC81762C();
  return MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C959F8], v0);
}

uint64_t sub_1BC7CBE3C()
{
  uint64_t v0;

  sub_1BC7CBA58();
  sub_1BC6E1788(&qword_1ED6B82E8, (uint64_t (*)(uint64_t))sub_1BC7CBA58, MEMORY[0x1E0C960D0]);
  v0 = sub_1BC81762C();
  return MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C959F8], v0);
}

uint64_t sub_1BC7CBEB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = *(_QWORD *)a1;
  v7 = *(unsigned __int8 *)(a1 + 8);
  if (v7 == 2)
  {
    if (a2)
    {
      swift_bridgeObjectRetain();
      sub_1BC78D778(v6, 2u);
      v11 = sub_1BC7CC190(v6, a2);
    }
    else
    {
      sub_1BC78D778(*(_QWORD *)a1, 2u);
      v11 = sub_1BC6EAD84(v6);
    }
    v16 = v11;
    sub_1BC78D79C(v6, 2u);
    if (*(_QWORD *)(v16 + 16))
    {
      v17 = sub_1BC7060D8(v16);
      result = swift_bridgeObjectRelease();
      *(_QWORD *)a4 = v17;
      *(_BYTE *)(a4 + 8) = 2;
      return result;
    }
LABEL_27:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)a4 = 0;
    *(_BYTE *)(a4 + 8) = -1;
    return result;
  }
  if (v7 == 1)
  {
    if (a2)
      v12 = a2;
    else
      v12 = MEMORY[0x1E0DEE9E8];
    if (a3)
    {
      swift_bridgeObjectRetain();
      v13 = a3;
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
      {
        if (sub_1BC8184E4())
        {
          sub_1BC731808(MEMORY[0x1E0DEE9D8]);
          v13 = v20;
        }
        else
        {
          v13 = MEMORY[0x1E0DEE9E8];
        }
      }
      else
      {
        v13 = MEMORY[0x1E0DEE9E8];
      }
    }
    swift_bridgeObjectRetain();
    sub_1BC78D778(v6, 1u);
    v18 = sub_1BC7CC520(v6, v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1BC78D79C(v6, 1u);
    if (*(_QWORD *)(v18 + 16))
    {
      *(_QWORD *)a4 = v18;
      *(_BYTE *)(a4 + 8) = 1;
      return result;
    }
    goto LABEL_27;
  }
  if (*(_BYTE *)(a1 + 8))
  {
    *(_QWORD *)a4 = v6;
    *(_BYTE *)(a4 + 8) = v7;
    return sub_1BC78D778(v6, v7);
  }
  else
  {
    if (a2)
      v9 = a2;
    else
      v9 = MEMORY[0x1E0DEE9E8];
    if (a3)
    {
      swift_bridgeObjectRetain();
      v10 = a3;
    }
    else
    {
      swift_bridgeObjectRetain();
      if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
      {
        if (sub_1BC8184E4())
        {
          sub_1BC731808(MEMORY[0x1E0DEE9D8]);
          v10 = v19;
        }
        else
        {
          v10 = MEMORY[0x1E0DEE9E8];
        }
      }
      else
      {
        v10 = MEMORY[0x1E0DEE9E8];
      }
    }
    swift_bridgeObjectRetain();
    sub_1BC78D778(v6, 0);
    v15 = sub_1BC7CC520(v6, v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1BC78D79C(v6, 0);
    *(_QWORD *)a4 = v15;
    *(_BYTE *)(a4 + 8) = 0;
  }
  return result;
}

uint64_t sub_1BC7CC170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC7CBEB4(a1, *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1BC7CC190(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1BC7CC310((_QWORD *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1BC7CC310((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x1BCCF5BA4](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1BC7CC310(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t i;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v21;
  unint64_t j;
  unint64_t v23;
  _QWORD *v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v5 = a2;
  v31 = *(_QWORD *)(a3 + 16);
  if (!v31)
  {
    v26 = 0;
    goto LABEL_27;
  }
  v32 = a4 + 56;
  v30 = a3 + 32;
  swift_bridgeObjectRetain();
  v28 = 0;
  for (i = 0; i != v31; ++i)
  {
    v7 = (uint64_t *)(v30 + 16 * i);
    v9 = *v7;
    v8 = v7[1];
    sub_1BC81873C();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    v10 = sub_1BC818778();
    v11 = -1 << *(_BYTE *)(a4 + 32);
    v12 = v10 & ~v11;
    v13 = v12 >> 6;
    v14 = 1 << v12;
    if (((1 << v12) & *(_QWORD *)(v32 + 8 * (v12 >> 6))) == 0)
      goto LABEL_3;
    v15 = *(_QWORD *)(a4 + 48);
    v16 = (_QWORD *)(v15 + 16 * v12);
    v17 = *v16 == v9 && v16[1] == v8;
    if (!v17 && (sub_1BC818694() & 1) == 0)
    {
      v21 = ~v11;
      for (j = v12 + 1; ; j = v23 + 1)
      {
        v23 = j & v21;
        if (((*(_QWORD *)(v32 + (((j & v21) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v21)) & 1) == 0)
          break;
        v24 = (_QWORD *)(v15 + 16 * v23);
        v25 = *v24 == v9 && v24[1] == v8;
        if (v25 || (sub_1BC818694() & 1) != 0)
        {
          result = swift_bridgeObjectRelease();
          v13 = v23 >> 6;
          v14 = 1 << v23;
          goto LABEL_12;
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      continue;
    }
    result = swift_bridgeObjectRelease();
LABEL_12:
    v19 = a1[v13];
    a1[v13] = v14 | v19;
    if ((v14 & v19) == 0 && __OFADD__(v28++, 1))
    {
      __break(1u);
      return result;
    }
  }
  swift_bridgeObjectRelease();
  v5 = a2;
  v26 = v28;
LABEL_27:
  swift_retain();
  return sub_1BC7E5D58(a1, v5, v26, a4);
}

uint64_t sub_1BC7CC520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v36;
  unint64_t v37;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v46 = a2;
  v6 = type metadata accessor for PluginSharableModel();
  v7 = MEMORY[0x1E0C80A78](v6);
  v45 = (uint64_t)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (_QWORD *)((char *)v38 - v11);
  MEMORY[0x1E0C80A78](v10);
  v16 = (char *)v38 - v15;
  result = MEMORY[0x1E0DEE9D8];
  v47 = MEMORY[0x1E0DEE9D8];
  v18 = *(_QWORD *)(a1 + 16);
  if (v18)
  {
    v44 = v14;
    v19 = *(unsigned __int8 *)(v13 + 80);
    v20 = *(_QWORD *)(v13 + 72);
    v38[1] = v3;
    v39 = (v19 + 32) & ~v19;
    v21 = a1 + v39;
    v41 = a3;
    v42 = a3 & 0xC000000000000001;
    v22 = a3 & 0xFFFFFFFFFFFFFF8;
    if (a3 < 0)
      v22 = a3;
    v40 = v22;
    v23 = MEMORY[0x1E0DEE9D8];
    v24 = v46;
    v43 = v12;
    while (1)
    {
      sub_1BC75630C(v21, (uint64_t)v16);
      v25 = *(_QWORD *)(v24 + 16);
      sub_1BC75630C((uint64_t)v16, (uint64_t)v12);
      if (v25)
      {
        v26 = *v12;
        v27 = v12[1];
        swift_bridgeObjectRetain();
        v28 = sub_1BC7C9F44(v26, v27, v24);
        swift_bridgeObjectRelease();
      }
      else
      {
        v28 = 1;
      }
      sub_1BC755F9C((uint64_t)v12);
      if (v42)
        v29 = sub_1BC8181FC();
      else
        v29 = *(_QWORD *)(v41 + 16);
      v30 = v44;
      sub_1BC75630C((uint64_t)v16, v44);
      if (v29)
      {
        v31 = swift_bridgeObjectRetain();
        v32 = sub_1BC6EAFB8(v31);
        swift_bridgeObjectRelease();
        sub_1BC7CA6D4(v41, v32);
        v34 = v33;
        v24 = v46;
        swift_bridgeObjectRelease();
        sub_1BC755F9C(v30);
        if ((v28 & v34 & 1) != 0)
          goto LABEL_17;
      }
      else
      {
        sub_1BC755F9C(v30);
        if ((v28 & 1) != 0)
        {
LABEL_17:
          sub_1BC7CC7E8((uint64_t)v16, v45);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v12 = v43;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BC6E8D4C(0, *(_QWORD *)(v23 + 16) + 1, 1);
          v23 = v47;
          v37 = *(_QWORD *)(v47 + 16);
          v36 = *(_QWORD *)(v47 + 24);
          if (v37 >= v36 >> 1)
          {
            sub_1BC6E8D4C(v36 > 1, v37 + 1, 1);
            v23 = v47;
          }
          *(_QWORD *)(v23 + 16) = v37 + 1;
          sub_1BC7CC7E8(v45, v23 + v39 + v37 * v20);
          v24 = v46;
          goto LABEL_6;
        }
      }
      sub_1BC755F9C((uint64_t)v16);
      v12 = v43;
LABEL_6:
      v21 += v20;
      if (!--v18)
        return v47;
    }
  }
  return result;
}

uint64_t sub_1BC7CC7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PluginSharableModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BC7CC82C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(_QWORD, ValueMetadata *))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    v4 = a3(0, &type metadata for PluginSharableModelChange);
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BC7CC874(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = type metadata accessor for PluginSharableModel();
    v7 = a3(a1, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC7CC8CC(uint64_t a1)
{
  uint64_t v2;

  sub_1BC7CC874(0, &qword_1ED6B7DD8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC7CC918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  BOOL v17;
  uint64_t v19;

  v4 = type metadata accessor for PluginSharableModel();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v19 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v15 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v13 = *(_QWORD *)(v8 + 72);
      v14 = v11 - 1;
      do
      {
        sub_1BC75630C(a1 + v12, (uint64_t)v10);
        sub_1BC75630C(a2 + v12, (uint64_t)v7);
        v15 = static PluginSharableModel.== infix(_:_:)(v10, v7);
        sub_1BC755F9C((uint64_t)v7);
        sub_1BC755F9C((uint64_t)v10);
        v17 = v14-- != 0;
        if ((v15 & 1) == 0)
          break;
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1BC7CCA34(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1BC818694(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1BC818694() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BC7CCAF8(uint64_t a1, unint64_t a2)
{
  return sub_1BC7CCB3C(a1, a2, (uint64_t)&qword_1ED6B84C8);
}

uint64_t sub_1BC7CCB0C(uint64_t a1, uint64_t a2)
{
  return sub_1BC7CCDC4(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2BEF8], &qword_1EF45CBA8, MEMORY[0x1E0D2BF10]);
}

uint64_t sub_1BC7CCB28(uint64_t a1, unint64_t a2)
{
  return sub_1BC7CCB3C(a1, a2, (uint64_t)&qword_1ED6BB1D0);
}

uint64_t sub_1BC7CCB3C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t i;
  id v19;
  void *v20;
  char v21;
  unint64_t v22;
  unint64_t v23;

  v6 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_35:
    swift_bridgeObjectRetain();
    v9 = (void *)sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v9)
      goto LABEL_4;
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BC8184E4();
  swift_bridgeObjectRelease();
  v8 = a2 >> 62;
  if (a2 >> 62)
    goto LABEL_35;
LABEL_3:
  v9 = *(void **)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v9)
    return 0;
LABEL_4:
  if (!v7)
    return 1;
  v10 = a1 & 0xFFFFFFFFFFFFFF8;
  v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0)
    v10 = a1;
  if (v6)
    v11 = v10;
  v12 = a2 & 0xFFFFFFFFFFFFFF8;
  v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if ((a2 & 0x8000000000000000) != 0)
    v12 = a2;
  if (v8)
    v13 = v12;
  if (v11 == v13)
    return 1;
  if (v7 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_41:
    result = MEMORY[0x1BCCF4FB0](0, a1);
    goto LABEL_18;
  }
  if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_43;
  }
  result = (uint64_t)*(id *)(a1 + 32);
LABEL_18:
  v9 = (void *)result;
  v8 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_43:
    v15 = (id)MEMORY[0x1BCCF4FB0](0, a2);
LABEL_21:
    v16 = v15;
    sub_1BC6ED7C0(0, (unint64_t *)a3);
    a3 = sub_1BC8180D0();

    if ((a3 & 1) != 0)
    {
      v17 = 1 - v7;
      for (i = 5; ; ++i)
      {
        v7 = v17 + i == 5;
        if (v17 + i == 5)
          return v7;
        v22 = i - 4;
        if (v23)
        {
          a3 = MEMORY[0x1BCCF4FB0](i - 4, a1);
          if (v8)
            goto LABEL_23;
        }
        else
        {
          if (v22 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v8)
          {
LABEL_23:
            v19 = (id)MEMORY[0x1BCCF4FB0](i - 4, a2);
            goto LABEL_24;
          }
        }
        if (v22 >= *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_39;
        v19 = *(id *)(a2 + 8 * i);
LABEL_24:
        v20 = v19;
        v21 = sub_1BC8180D0();

        if ((v21 & 1) == 0)
          return v7;
      }
    }
    return 0;
  }
  if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    v15 = *(id *)(a2 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC7CCDC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, unint64_t, uint64_t);
  uint64_t v21;
  unint64_t *v22;
  unint64_t *v23;
  uint64_t v24;
  char v25;
  void (*v26)(uint64_t, uint64_t);
  BOOL v28;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, unint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t);

  v10 = a3(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  if (v16 == *(_QWORD *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      v25 = 1;
    }
    else
    {
      v33 = v13;
      v34 = v12;
      v35 = a3;
      v17 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      v30 = *(_QWORD *)(v12 + 72);
      v31 = a1;
      v32 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      v18 = v16 - 1;
      v19 = v13;
      do
      {
        v20 = v32;
        v32((uint64_t)v15, a1 + v17, v10);
        v21 = a2;
        v20(v19, a2 + v17, v10);
        v22 = a4;
        v23 = a4;
        v24 = a5;
        sub_1BC6E1788(v23, v35, a5);
        v25 = sub_1BC817AB8();
        v26 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
        v26(v19, v10);
        v26((uint64_t)v15, v10);
        v28 = v18-- != 0;
        if ((v25 & 1) == 0)
          break;
        v17 += v30;
        a5 = v24;
        a4 = v22;
        a2 = v21;
        a1 = v31;
      }
      while (v28);
    }
  }
  else
  {
    v25 = 0;
  }
  return v25 & 1;
}

uint64_t ProfileDisplayName.init(shortName:termsOfAddress:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a1;
  a4[3] = a2;
  a4[4] = a3;
  return swift_bridgeObjectRetain();
}

uint64_t ProfileDisplayName.shortName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProfileDisplayName.shortNameWithSuggestion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ProfileDisplayName.termsOfAddress.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ProfileDisplayName.init(shortName:shortNameWithSuggestion:termsOfAddress:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t sub_1BC7CCFF0()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0xD000000000000017;
  if (*v0 != 1)
    v1 = 0x41664F736D726574;
  if (*v0)
    return v1;
  else
    return 0x6D614E74726F6873;
}

uint64_t sub_1BC7CD060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7CDBC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC7CD084()
{
  sub_1BC7CD6E8();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7CD0AC()
{
  sub_1BC7CD6E8();
  return sub_1BC818808();
}

uint64_t ProfileDisplayName.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;

  sub_1BC7CD72C(0, &qword_1EF45CB40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - v6;
  v8 = v1[2];
  v14 = v1[3];
  v15 = v8;
  v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7CD6E8();
  sub_1BC8187F0();
  v20 = 0;
  v9 = v16;
  sub_1BC818604();
  if (!v9)
  {
    v10 = v13;
    v19 = 1;
    sub_1BC818604();
    v17 = v10;
    v18 = 2;
    sub_1BC6ECA64(0, &qword_1EF45CB50, MEMORY[0x1E0CAE730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BC7CD788(&qword_1EF45CB58, &qword_1EF45CB60, MEMORY[0x1E0CAE740], MEMORY[0x1E0DEAF10]);
    sub_1BC818634();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ProfileDisplayName.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;

  sub_1BC7CD72C(0, &qword_1EF45CB68, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v19 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7CD6E8();
  sub_1BC8187E4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v25 = 0;
  v10 = sub_1BC818598();
  v12 = v11;
  v21 = v10;
  v24 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BC818598();
  v15 = v14;
  v19 = v13;
  sub_1BC6ECA64(0, &qword_1EF45CB50, MEMORY[0x1E0CAE730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v23 = 2;
  sub_1BC7CD788(&qword_1EF45CB70, &qword_1EF45CB78, MEMORY[0x1E0CAE750], MEMORY[0x1E0DEAF40]);
  v20 = v15;
  swift_bridgeObjectRetain();
  sub_1BC8185C8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v16 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v20;
  *a2 = v21;
  a2[1] = v12;
  a2[2] = v19;
  a2[3] = v17;
  a2[4] = v16;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7CD530@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return ProfileDisplayName.init(from:)(a1, a2);
}

uint64_t sub_1BC7CD544(_QWORD *a1)
{
  return ProfileDisplayName.encode(to:)(a1);
}

uint64_t ProfileDisplayName.termsOfAddressOptions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 32);
  sub_1BC816D38();
  sub_1BC6ECA64(0, &qword_1EF45CB80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAF2F0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = *(_QWORD *)(sub_1BC816D44() - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(v4 + v3) = v1;
  (*(void (**)(void))(v2 + 104))();
  swift_bridgeObjectRetain();
  return sub_1BC816D2C();
}

uint64_t _s14HealthPlatform18ProfileDisplayNameV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  char v9;
  char v10;
  BOOL v11;
  char v12;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_1BC818694(), v10 = 0, (v9 & 1) != 0))
  {
    v11 = v2 == v5 && v4 == v6;
    if (v11 || (v12 = sub_1BC818694(), v10 = 0, (v12 & 1) != 0))
      v10 = sub_1BC7CCDC4(v3, v7, MEMORY[0x1E0CAE730], &qword_1EF45CBA0, MEMORY[0x1E0CAE748]);
  }
  return v10 & 1;
}

unint64_t sub_1BC7CD6E8()
{
  unint64_t result;

  result = qword_1EF45CB48;
  if (!qword_1EF45CB48)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC8216A8, &type metadata for ProfileDisplayName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45CB48);
  }
  return result;
}

void sub_1BC7CD72C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC7CD6E8();
    v7 = a3(a1, &type metadata for ProfileDisplayName.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BC7CD788(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  result = *a1;
  if (!result)
  {
    v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE730];
    sub_1BC6ECA64(255, &qword_1EF45CB50, MEMORY[0x1E0CAE730], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v11 = v10;
    v12 = sub_1BC6E1788(a2, v9, a3);
    result = MEMORY[0x1BCCF5AB4](a4, v11, &v12);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for ProfileDisplayName()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ProfileDisplayName(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ProfileDisplayName(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ProfileDisplayName(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProfileDisplayName(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ProfileDisplayName(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProfileDisplayName()
{
  return &type metadata for ProfileDisplayName;
}

uint64_t storeEnumTagSinglePayload for ProfileDisplayName.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC7CDA68 + 4 * byte_1BC821535[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC7CDA9C + 4 * byte_1BC821530[v4]))();
}

uint64_t sub_1BC7CDA9C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7CDAA4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7CDAACLL);
  return result;
}

uint64_t sub_1BC7CDAB8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7CDAC0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC7CDAC4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7CDACC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ProfileDisplayName.CodingKeys()
{
  return &type metadata for ProfileDisplayName.CodingKeys;
}

unint64_t sub_1BC7CDAEC()
{
  unint64_t result;

  result = qword_1EF45CB88;
  if (!qword_1EF45CB88)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC821680, &type metadata for ProfileDisplayName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45CB88);
  }
  return result;
}

unint64_t sub_1BC7CDB34()
{
  unint64_t result;

  result = qword_1EF45CB90;
  if (!qword_1EF45CB90)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC8215F0, &type metadata for ProfileDisplayName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45CB90);
  }
  return result;
}

unint64_t sub_1BC7CDB7C()
{
  unint64_t result;

  result = qword_1EF45CB98;
  if (!qword_1EF45CB98)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC821618, &type metadata for ProfileDisplayName.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45CB98);
  }
  return result;
}

uint64_t sub_1BC7CDBC0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E74726F6873 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BC82A740 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x41664F736D726574 && a2 == 0xEE00737365726464)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t static KeywordFeatureTag.categoryFilter.getter()
{
  return 2434341;
}

uint64_t KeywordFeatureTag.value.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t KeywordFeatureTag.value.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*KeywordFeatureTag.value.modify())()
{
  return nullsub_1;
}

uint64_t KeywordFeatureTag.init(_:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1BC7CDD94@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_1BC7CDDA0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.bodyMeasurements.getter()
{
  return 0xD00000000000002BLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.fitness.getter()
{
  return 0xD000000000000022;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.healthDocuments.getter()
{
  return 0xD00000000000002CLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.hearing.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.heart.getter()
{
  return 0xD000000000000020;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.me.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.mindfulness.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.nutrition.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.other.getter()
{
  return 0xD000000000000020;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.reproductiveHealth.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.respiratory.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.sleep.getter()
{
  return 0xD000000000000020;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.vitalSigns.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.mobility.getter()
{
  return 0xD000000000000023;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.symptoms.getter()
{
  return 0xD000000000000023;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.medicationTracking.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.healthRecords.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.allergies.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.clinicalNotes.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.clinicalVitals.getter()
{
  return 0xD000000000000029;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.conditions.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.immunizations.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.insurance.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.labResults.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.medications.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.procedures.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.suggestedActions.getter()
{
  return 0xD000000000000010;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.homeWorkouts.getter()
{
  return 0xD000000000000019;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.journaling.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.music.getter()
{
  return 0xD000000000000012;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.podcasts.getter()
{
  return 0xD000000000000015;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.reading.getter()
{
  return 0xD000000000000014;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.sleepMindfulness.getter()
{
  return 0xD000000000000018;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.whiteNoise.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.wrapUpYourDay.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static KeywordFeatureTag.CommonIdentifier.yoga.getter()
{
  return 0xD000000000000011;
}

uint64_t static KeywordFeatureTag.CommonIdentifier.none.getter()
{
  return 0;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.active.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.inactive.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.unavailable.getter()
{
  return 0xD000000000000022;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.needsReview.getter()
{
  return 0xD000000000000022;
}

unint64_t static KeywordFeatureTag.FeatureStatusIdentifier.hideInHealthChecklist.getter()
{
  return 0xD00000000000002CLL;
}

unint64_t static KeywordFeatureTag.DataTypeRoomAlertsIdentifier.prominent.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.DataTypeRoomAlertsIdentifier.nonProminent.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.PlatformAlertIdentifier.sharingVersionMismatch.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static KeywordFeatureTag.PlatformAlertIdentifier.notificationSettingsInvalidAuthorization.getter()
{
  return 0xD00000000000003FLL;
}

uint64_t sub_1BC7CE2A4()
{
  uint64_t result;

  sub_1BC8182C8();
  result = swift_bridgeObjectRelease();
  qword_1ED6B9788 = 0xD000000000000019;
  *(_QWORD *)algn_1ED6B9790 = 0x80000001BC82B220;
  return result;
}

uint64_t static KeywordFeatureTag.FilterIdentifier.healthRecordsDataType.getter()
{
  return sub_1BC7CE3A4(&qword_1ED6B97A0, &qword_1ED6B9788);
}

uint64_t sub_1BC7CE324()
{
  uint64_t result;

  sub_1BC8182C8();
  result = swift_bridgeObjectRelease();
  qword_1EF45CBB0 = 0xD00000000000001FLL;
  *(_QWORD *)algn_1EF45CBB8 = 0x80000001BC82B200;
  return result;
}

uint64_t static KeywordFeatureTag.FilterIdentifier.healthRecordsNavigationType.getter()
{
  return sub_1BC7CE3A4(&qword_1EF45AC08, &qword_1EF45CBB0);
}

uint64_t sub_1BC7CE3A4(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t static KeywordFeatureTag.UserDomainConceptTypeIdentifier.regular.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.UserDomainConceptTypeIdentifier.older.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.UserDomainConceptTypeIdentifier.other.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.UserDomainConceptTypeIdentifier.removed.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.none.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.next.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.hour.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.day.getter()
{
  return 0xD000000000000016;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.week.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.month.getter()
{
  return 0xD000000000000018;
}

unint64_t static KeywordFeatureTag.TimeScopeIdentifier.year.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.AppInstallationStateIdentifier.isInstalledApplication.getter()
{
  return 0xD000000000000016;
}

unint64_t static KeywordFeatureTag.AppInstallationStateIdentifier.isUninstalledApplication.getter()
{
  return 0xD000000000000018;
}

unint64_t static KeywordFeatureTag.NotificationSettingsIdentifier.defaults.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.NotificationSettingsIdentifier.features.getter()
{
  return 0xD000000000000025;
}

unint64_t static KeywordFeatureTag.NotificationSettingsIdentifier.sharing.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.ProfileTypeIdentifier.familySharing.getter()
{
  return 0xD000000000000018;
}

unint64_t static KeywordFeatureTag.ProfileTypeIdentifier.summarySharing.getter()
{
  return 0xD000000000000019;
}

uint64_t static KeywordFeatureTag.SidebarTypeIdentifier.healthCategory.getter()
{
  return 0x614368746C616548;
}

uint64_t static KeywordFeatureTag.SidebarTypeIdentifier.healthRecords.getter()
{
  return 0x655268746C616548;
}

uint64_t static KeywordFeatureTag.SharingProfileTypeIdentifier.inbound.getter()
{
  return 0x646E756F626E49;
}

uint64_t static KeywordFeatureTag.SharingProfileTypeIdentifier.outbound.getter()
{
  return 0x646E756F6274754FLL;
}

uint64_t static KeywordFeatureTag.SharingProfileTypeIdentifier.accepted.getter()
{
  return 0x6465747065636341;
}

uint64_t static KeywordFeatureTag.SharingProfileTypeIdentifier.pending.getter()
{
  return 0x676E69646E6550;
}

unint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.activityAndMobility.getter()
{
  return 0xD000000000000013;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.heart.getter()
{
  return 0x7472616548;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.cycleTracking.getter()
{
  return 0x617254656C637943;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.nutrition.getter()
{
  return 0x6F6974697274754ELL;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.respiratory.getter()
{
  return 0x7461726970736552;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.other.getter()
{
  return 0x726568744FLL;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.labs.getter()
{
  return 1935827276;
}

uint64_t static KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier.mentalHealth.getter()
{
  return 0x65486C61746E654DLL;
}

unint64_t static KeywordFeatureTag.SummariesAuthorizationIdentifier.prominent.getter()
{
  return 0xD000000000000029;
}

unint64_t static KeywordFeatureTag.SummariesAuthorizationIdentifier.onboardingFeedItem.getter()
{
  return 0xD000000000000032;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.pinnedLab.getter()
{
  return 0xD000000000000029;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.recentNewLab.getter()
{
  return 0xD00000000000002CLL;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.pastThirtyDays.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.pastYear.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.pastFiveYears.getter()
{
  return 0xD00000000000002DLL;
}

unint64_t static KeywordFeatureTag.SummariesHealthRecordsIdentifier.sharingAccount.getter()
{
  return 0xD00000000000002ELL;
}

unint64_t static KeywordFeatureTag.SummariesMedicationsIdentifier.scheduledMedication.getter()
{
  return 0xD000000000000031;
}

unint64_t static KeywordFeatureTag.SummariesMedicationsIdentifier.nonScheduledMedication.getter()
{
  return 0xD000000000000034;
}

unint64_t static KeywordFeatureTag.SummariesMedicationsIdentifier.archivedMedication.getter()
{
  return 0xD000000000000030;
}

unint64_t static KeywordFeatureTag.SummariesDataStatusIdentifier.noData.getter()
{
  return 0xD000000000000023;
}

unint64_t static KeywordFeatureTag.SummariesDataStatusIdentifier.hasData.getter()
{
  return 0xD000000000000024;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.consistent.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.increasing.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.decreasing.getter()
{
  return 0xD000000000000026;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.update.getter()
{
  return 0xD000000000000022;
}

unint64_t static KeywordFeatureTag.SummariesTrendClassificationIdentifier.inconclusive.getter()
{
  return 0xD000000000000028;
}

unint64_t static KeywordFeatureTag.VisibilityOptionsIdentifier.hideInCategoryRoom.getter()
{
  return 0xD000000000000012;
}

unint64_t static KeywordFeatureTag.VisibilityOptionsIdentifier.hideInSharingTab.getter()
{
  return 0xD000000000000010;
}

unint64_t static KeywordFeatureTag.VisibilityOptionsIdentifier.hideInSharedProfileView.getter()
{
  return 0xD000000000000017;
}

unint64_t static KeywordFeatureTag.VisibilityOptionsIdentifier.displayInSharingDashboard.getter()
{
  return 0xD000000000000019;
}

unint64_t static KeywordFeatureTag.SummaryHeaderAlertStackIdentifier.canDisplayAlertStackModal.getter()
{
  return 0xD000000000000019;
}

unint64_t static KeywordFeatureTag.SummaryHeaderAlertStackIdentifier.hasDisplayedAlertStackModal.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1BC7CEA08()
{
  uint64_t result;

  result = swift_getKeyPath();
  qword_1ED6B7DB8 = result;
  return result;
}

uint64_t static KeywordFeatureTag.keyPath.getter()
{
  if (qword_1ED6B7DB0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static KeywordFeatureTag.keyPath.setter(uint64_t a1)
{
  if (qword_1ED6B7DB0 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED6B7DB8 = a1;
  return swift_release();
}

uint64_t (*static KeywordFeatureTag.keyPath.modify())()
{
  if (qword_1ED6B7DB0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t KeywordFeatureTag.commonIdentifier.getter()
{
  uint64_t *v0;

  return _s14HealthPlatform11FeedSectionC03getD10Identifier4fromSSSgShySSG_tFZ_0(*v0);
}

uint64_t sub_1BC7CEB80()
{
  if (qword_1ED6B7DB0 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

ValueMetadata *type metadata accessor for KeywordFeatureTag()
{
  return &type metadata for KeywordFeatureTag;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.CommonIdentifier()
{
  return &type metadata for KeywordFeatureTag.CommonIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.FeatureStatusIdentifier()
{
  return &type metadata for KeywordFeatureTag.FeatureStatusIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.DataTypeRoomAlertsIdentifier()
{
  return &type metadata for KeywordFeatureTag.DataTypeRoomAlertsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.PlatformAlertIdentifier()
{
  return &type metadata for KeywordFeatureTag.PlatformAlertIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.FilterIdentifier()
{
  return &type metadata for KeywordFeatureTag.FilterIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.UserDomainConceptTypeIdentifier()
{
  return &type metadata for KeywordFeatureTag.UserDomainConceptTypeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.TimeScopeIdentifier()
{
  return &type metadata for KeywordFeatureTag.TimeScopeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.AppInstallationStateIdentifier()
{
  return &type metadata for KeywordFeatureTag.AppInstallationStateIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.NotificationSettingsIdentifier()
{
  return &type metadata for KeywordFeatureTag.NotificationSettingsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.ProfileTypeIdentifier()
{
  return &type metadata for KeywordFeatureTag.ProfileTypeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SidebarTypeIdentifier()
{
  return &type metadata for KeywordFeatureTag.SidebarTypeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SharingProfileTypeIdentifier()
{
  return &type metadata for KeywordFeatureTag.SharingProfileTypeIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier()
{
  return &type metadata for KeywordFeatureTag.SharingAuthorizationSuggestedCategoryIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesAuthorizationIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesAuthorizationIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesHealthRecordsIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesHealthRecordsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesMedicationsIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesMedicationsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesDataStatusIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesDataStatusIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummariesTrendClassificationIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummariesTrendClassificationIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.VisibilityOptionsIdentifier()
{
  return &type metadata for KeywordFeatureTag.VisibilityOptionsIdentifier;
}

ValueMetadata *type metadata accessor for KeywordFeatureTag.SummaryHeaderAlertStackIdentifier()
{
  return &type metadata for KeywordFeatureTag.SummaryHeaderAlertStackIdentifier;
}

uint64_t FeedItemChangeDomain.init(contentKinds:sourceProfiles:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = sub_1BC6EBB28(a1);
  swift_bridgeObjectRelease();
  v6 = sub_1BC6EBE5C(a2);
  result = swift_bridgeObjectRelease();
  *a3 = v5;
  a3[1] = v6;
  return result;
}

uint64_t FeedItemChangeDomain.contentKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemChangeDomain.contentKinds.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FeedItemChangeDomain.contentKinds.modify())()
{
  return nullsub_1;
}

uint64_t FeedItemChangeDomain.sourceProfiles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemChangeDomain.sourceProfiles.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*FeedItemChangeDomain.sourceProfiles.modify())()
{
  return nullsub_1;
}

void FeedItemChangeDomain.merge(with:)()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  sub_1BC7056E4(v0);
  v1 = swift_bridgeObjectRetain();
  sub_1BC70582C(v1);
}

uint64_t FeedItemChangeDomain.overlaps(with:)(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v2 = a1[1];
  v3 = *v1;
  v4 = v1[1];
  if ((sub_1BC7CEEA0(*a1, v3) & 1) != 0)
  {
    v5 = 0;
  }
  else
  {
    sub_1BC7CFA2C(v2, v4);
    v5 = v6 ^ 1;
  }
  return v5 & 1;
}

uint64_t sub_1BC7CEEA0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  int64_t v19;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = *(_QWORD *)(a1 + 16);
    if (v3)
    {
      if (v2 >= v3)
        v4 = a1;
      else
        v4 = a2;
      if (v2 >= v3)
        v5 = a2;
      else
        v5 = a1;
      v6 = v4 + 56;
      v7 = -1 << *(_BYTE *)(v4 + 32);
      if (-v7 < 64)
        v8 = ~(-1 << -(char)v7);
      else
        v8 = -1;
      v9 = v8 & *(_QWORD *)(v4 + 56);
      v19 = (unint64_t)(63 - v7) >> 6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = 0;
      while (1)
      {
        while (1)
        {
          v11 = v10;
          if (!v9)
            break;
          v12 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v13 = v12 | (v10 << 6);
          if (*(_QWORD *)(v5 + 16))
            goto LABEL_30;
        }
        v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        if (v14 >= v19)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v14);
        ++v10;
        if (!v15)
        {
          v10 = v11 + 2;
          if (v11 + 2 >= v19)
            goto LABEL_32;
          v15 = *(_QWORD *)(v6 + 8 * v10);
          if (!v15)
          {
            v10 = v11 + 3;
            if (v11 + 3 >= v19)
              goto LABEL_32;
            v15 = *(_QWORD *)(v6 + 8 * v10);
            if (!v15)
            {
              v16 = v11 + 4;
              if (v11 + 4 >= v19)
              {
LABEL_32:
                swift_bridgeObjectRelease();
                sub_1BC6ECC4C();
                return 1;
              }
              v15 = *(_QWORD *)(v6 + 8 * v16);
              if (!v15)
              {
                while (1)
                {
                  v10 = v16 + 1;
                  if (__OFADD__(v16, 1))
                    break;
                  if (v10 >= v19)
                    goto LABEL_32;
                  v15 = *(_QWORD *)(v6 + 8 * v10);
                  ++v16;
                  if (v15)
                    goto LABEL_29;
                }
LABEL_34:
                __break(1u);
                JUMPOUT(0x1BC7CF90CLL);
              }
              v10 = v11 + 4;
            }
          }
        }
LABEL_29:
        v9 = (v15 - 1) & v15;
        v13 = __clz(__rbit64(v15)) + (v10 << 6);
        if (*(_QWORD *)(v5 + 16))
        {
LABEL_30:
          v17 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 48) + v13);
          sub_1BC81873C();
          __asm { BR              X8 }
        }
      }
    }
  }
  return 1;
}

void sub_1BC7CFA2C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  char v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v28 = v4;
  v29 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v27 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    while (1)
    {
      v11 = v10;
      if (!v8)
        break;
      v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v13 = v12 | (v10 << 6);
      if (*(_QWORD *)(v5 + 16))
        goto LABEL_31;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v14 >= v27)
      goto LABEL_41;
    v15 = *(_QWORD *)(v29 + 8 * v14);
    ++v10;
    if (!v15)
    {
      v10 = v11 + 2;
      if (v11 + 2 >= v27)
        goto LABEL_41;
      v15 = *(_QWORD *)(v29 + 8 * v10);
      if (!v15)
      {
        v10 = v11 + 3;
        if (v11 + 3 >= v27)
          goto LABEL_41;
        v15 = *(_QWORD *)(v29 + 8 * v10);
        if (!v15)
          break;
      }
    }
LABEL_30:
    v8 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
    if (*(_QWORD *)(v5 + 16))
    {
LABEL_31:
      v30 = v8;
      v17 = *(void **)(*(_QWORD *)(v28 + 48) + 8 * v13);
      sub_1BC81873C();
      sub_1BC818748();
      if (v17)
      {
        v18 = v17;
        sub_1BC8180DC();

      }
      v19 = sub_1BC818778();
      v20 = -1 << *(_BYTE *)(v5 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
      {
        v22 = ~v20;
        do
        {
          v23 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v21);
          if (v23)
          {
            if (v17)
            {
              sub_1BC6E1404();
              v24 = v17;
              v25 = v23;
              v26 = sub_1BC8180D0();

              if ((v26 & 1) != 0)
              {

                goto LABEL_41;
              }
            }
          }
          else if (!v17)
          {
            goto LABEL_41;
          }
          v21 = (v21 + 1) & v22;
        }
        while (((*(_QWORD *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
      }

      v8 = v30;
    }
  }
  v16 = v11 + 4;
  if (v11 + 4 >= v27)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    sub_1BC6ECC4C();
    return;
  }
  v15 = *(_QWORD *)(v29 + 8 * v16);
  if (v15)
  {
    v10 = v11 + 4;
    goto LABEL_30;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v27)
      goto LABEL_41;
    v15 = *(_QWORD *)(v29 + 8 * v10);
    ++v16;
    if (v15)
      goto LABEL_30;
  }
LABEL_45:
  __break(1u);
}

BOOL FeedItemChangeDomain.isEmpty.getter()
{
  _QWORD *v0;

  return !*(_QWORD *)(*v0 + 16) && *(_QWORD *)(v0[1] + 16) == 0;
}

unint64_t FeedItemChangeDomain.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  int v4;

  v1 = *v0;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1BC6E8A7C(0, v2, 0);
    v3 = sub_1BC7D0864(v1);
    if (v3 < 0 || v3 >= 1 << *(_BYTE *)(v1 + 32))
    {
      __break(1u);
    }
    else if (((*(_QWORD *)(v1 + 56 + (((unint64_t)v3 >> 3) & 0xFFFFFFFFFFFFF8)) >> v3) & 1) != 0)
    {
      if (*(_DWORD *)(v1 + 36) == v4)
        __asm { BR              X9 }
LABEL_10:
      __break(1u);
      JUMPOUT(0x1BC7D022CLL);
    }
    __break(1u);
    goto LABEL_10;
  }
  sub_1BC722C80();
  sub_1BC6ECCA0();
  sub_1BC817A88();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  sub_1BC6ED30C();
  swift_bridgeObjectRetain();
  sub_1BC817D88();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000024;
}

void static FeedItemChangeDomain.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1BC703CD8(*a1, *a2) & 1) != 0)
    sub_1BC704558(v2, v3);
}

uint64_t sub_1BC7D02D4()
{
  _BYTE *v0;

  if (*v0)
    return 0x7250656372756F73;
  else
    return 0x4B746E65746E6F63;
}

uint64_t sub_1BC7D0324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7D0C8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC7D0348()
{
  sub_1BC7D0904();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7D0370()
{
  sub_1BC7D0904();
  return sub_1BC818808();
}

uint64_t FeedItemChangeDomain.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  sub_1BC788E10(0, &qword_1EF45CBC0, (uint64_t (*)(void))sub_1BC7D0904, (uint64_t)&type metadata for FeedItemChangeDomain.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v11 - v6;
  v8 = *v1;
  v12 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7D0904();
  sub_1BC8187F0();
  v15 = v8;
  v14 = 0;
  sub_1BC788E10(0, &qword_1EF45CBD0, (uint64_t (*)(void))sub_1BC6ED43C, (uint64_t)&type metadata for ContentKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
  sub_1BC7D098C(&qword_1EF45CBD8, (uint64_t (*)(void))sub_1BC7B8AA4, MEMORY[0x1E0DEB3B8]);
  v9 = v13;
  sub_1BC818634();
  if (!v9)
  {
    v15 = v12;
    v14 = 1;
    sub_1BC788E10(0, &qword_1EF45CBE0, (uint64_t (*)(void))sub_1BC6ED30C, (uint64_t)&type metadata for SourceProfile, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BC7D0A10(&qword_1EF45CBE8, (uint64_t (*)(void))sub_1BC7D0948, MEMORY[0x1E0DEB3B8]);
    sub_1BC818634();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t FeedItemChangeDomain.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  uint64_t v16;

  sub_1BC788E10(0, &qword_1EF45CBF8, (uint64_t (*)(void))sub_1BC7D0904, (uint64_t)&type metadata for FeedItemChangeDomain.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v14 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7D0904();
  sub_1BC8187E4();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  v9 = v6;
  sub_1BC788E10(0, &qword_1EF45CBD0, (uint64_t (*)(void))sub_1BC6ED43C, (uint64_t)&type metadata for ContentKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
  v15 = 0;
  sub_1BC7D098C(&qword_1EF45CC00, (uint64_t (*)(void))sub_1BC7B8A60, MEMORY[0x1E0DEB3D8]);
  v10 = v14;
  sub_1BC8185C8();
  v11 = v16;
  sub_1BC788E10(0, &qword_1EF45CBE0, (uint64_t (*)(void))sub_1BC6ED30C, (uint64_t)&type metadata for SourceProfile, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
  v15 = 1;
  sub_1BC7D0A10(&qword_1EF45CC08, (uint64_t (*)(void))sub_1BC7D0A94, MEMORY[0x1E0DEB3D8]);
  swift_bridgeObjectRetain();
  sub_1BC8185C8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v10);
  v12 = v16;
  *a2 = v11;
  a2[1] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7D07EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FeedItemChangeDomain.init(from:)(a1, a2);
}

uint64_t sub_1BC7D0800(_QWORD *a1)
{
  return FeedItemChangeDomain.encode(to:)(a1);
}

void sub_1BC7D0814(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1[1];
  v3 = a2[1];
  if ((sub_1BC703CD8(*a1, *a2) & 1) != 0)
    sub_1BC704558(v2, v3);
}

uint64_t sub_1BC7D0864(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

unint64_t sub_1BC7D0904()
{
  unint64_t result;

  result = qword_1EF45CBC8;
  if (!qword_1EF45CBC8)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC821BE8, &type metadata for FeedItemChangeDomain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45CBC8);
  }
  return result;
}

unint64_t sub_1BC7D0948()
{
  unint64_t result;

  result = qword_1EF45CBF0;
  if (!qword_1EF45CBF0)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for SourceProfile, &type metadata for SourceProfile);
    atomic_store(result, (unint64_t *)&qword_1EF45CBF0);
  }
  return result;
}

uint64_t sub_1BC7D098C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BC788E10(255, &qword_1EF45CBD0, (uint64_t (*)(void))sub_1BC6ED43C, (uint64_t)&type metadata for ContentKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCF5AB4](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC7D0A10(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BC788E10(255, &qword_1EF45CBE0, (uint64_t (*)(void))sub_1BC6ED30C, (uint64_t)&type metadata for SourceProfile, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCF5AB4](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC7D0A94()
{
  unint64_t result;

  result = qword_1EF45CC10;
  if (!qword_1EF45CC10)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for SourceProfile, &type metadata for SourceProfile);
    atomic_store(result, (unint64_t *)&qword_1EF45CC10);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedItemChangeDomain()
{
  return &type metadata for FeedItemChangeDomain;
}

uint64_t storeEnumTagSinglePayload for FeedItemChangeDomain.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BC7D0B34 + 4 * byte_1BC821A55[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BC7D0B68 + 4 * byte_1BC821A50[v4]))();
}

uint64_t sub_1BC7D0B68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7D0B70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7D0B78);
  return result;
}

uint64_t sub_1BC7D0B84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7D0B8CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BC7D0B90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7D0B98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedItemChangeDomain.CodingKeys()
{
  return &type metadata for FeedItemChangeDomain.CodingKeys;
}

unint64_t sub_1BC7D0BB8()
{
  unint64_t result;

  result = qword_1EF45CC18;
  if (!qword_1EF45CC18)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC821BC0, &type metadata for FeedItemChangeDomain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45CC18);
  }
  return result;
}

unint64_t sub_1BC7D0C00()
{
  unint64_t result;

  result = qword_1EF45CC20;
  if (!qword_1EF45CC20)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC821B30, &type metadata for FeedItemChangeDomain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45CC20);
  }
  return result;
}

unint64_t sub_1BC7D0C48()
{
  unint64_t result;

  result = qword_1EF45CC28;
  if (!qword_1EF45CC28)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC821B58, &type metadata for FeedItemChangeDomain.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF45CC28);
  }
  return result;
}

uint64_t sub_1BC7D0C8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4B746E65746E6F63 && a2 == 0xEC00000073646E69;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7250656372756F73 && a2 == 0xEE0073656C69666FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t OrchestrationWorkQueueStatusObserver.finishedWorkPlans.getter()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (os_unfair_lock_s *)(v1 + 56);
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 56));
  v3 = *(_QWORD *)(v1 + 24);
  os_unfair_lock_unlock(v2);
  return v3;
}

uint64_t OrchestrationWorkQueueStatusObserver.__allocating_init()()
{
  uint64_t v0;
  _OWORD *v1;

  v0 = swift_allocObject();
  sub_1BC7D0E7C();
  v1 = (_OWORD *)swift_allocObject();
  v1[1] = 0u;
  v1[2] = 0u;
  *(_OWORD *)((char *)v1 + 44) = 0u;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t OrchestrationWorkQueueStatusObserver.init()()
{
  uint64_t v0;
  _OWORD *v1;

  sub_1BC7D0E7C();
  v1 = (_OWORD *)swift_allocObject();
  v1[1] = 0u;
  v1[2] = 0u;
  *(_OWORD *)((char *)v1 + 44) = 0u;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

void sub_1BC7D0E7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8ED8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8ED8);
  }
}

Swift::Void __swiftcall OrchestrationWorkQueueStatusObserver.didFinishStartup(latency:)(Swift::Double latency)
{
  void *v2;
  uint64_t inited;
  void *v4;

  v2 = (void *)sub_1BC817AC4();
  sub_1BC7D0FE4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0F0;
  *(_QWORD *)(inited + 32) = 0x79636E6574616CLL;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, latency);
  sub_1BC711390(inited);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
  v4 = (void *)sub_1BC817A28();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();

}

void sub_1BC7D0FE4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8788)
  {
    sub_1BC7D1038();
    v0 = sub_1BC81867C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8788);
  }
}

void sub_1BC7D1038()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED6B6348)
  {
    sub_1BC6ED7C0(255, (unint64_t *)&qword_1ED6BB280);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED6B6348);
  }
}

Swift::Void __swiftcall OrchestrationWorkQueueStatusObserver.didStartForegroundSession(planCount:duration:)(Swift::Int planCount, Swift::Double duration)
{
  sub_1BC7D10F4(planCount, "Started foreground session with initial %ld plans over %fs.", duration);
}

Swift::Void __swiftcall OrchestrationWorkQueueStatusObserver.didEndForegroundSession(planCount:duration:)(Swift::Int planCount, Swift::Double duration)
{
  sub_1BC7D10F4(planCount, "Finished foreground session with %ld plans over %fs.", duration);
}

void sub_1BC7D10F4(uint64_t a1, const char *a2, double a3)
{
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  void *v10;
  uint64_t inited;
  void *v12;

  if (qword_1ED6B8030 != -1)
    swift_once();
  v6 = sub_1BC817590();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED6B8018);
  v7 = sub_1BC81756C();
  v8 = sub_1BC817E6C();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    *(_DWORD *)v9 = 134218240;
    sub_1BC818148();
    *(_WORD *)(v9 + 12) = 2048;
    sub_1BC818148();
    _os_log_impl(&dword_1BC6DD000, v7, v8, a2, (uint8_t *)v9, 0x16u);
    MEMORY[0x1BCCF5BA4](v9, -1, -1);
  }

  v10 = (void *)sub_1BC817AC4();
  sub_1BC7D0FE4();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BC81A0E0;
  *(_QWORD *)(inited + 32) = 0x736E616C70;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, a1);
  *(_QWORD *)(inited + 56) = 0x6E6F697461727564;
  *(_QWORD *)(inited + 64) = 0xE800000000000000;
  *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a3);
  sub_1BC711390(inited);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
  v12 = (void *)sub_1BC817A28();
  swift_bridgeObjectRelease();
  AnalyticsSendEvent();

}

void OrchestrationWorkQueueStatusObserver.didEnqueue(count:context:queueLength:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  v1 = v0;
  if (qword_1ED6B8030 != -1)
    swift_once();
  v2 = sub_1BC817590();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED6B8018);
  swift_unknownObjectRetain_n();
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E6C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136315650;
    sub_1BC6ED814(0, &qword_1ED6B7FB0);
    swift_unknownObjectRetain();
    v7 = sub_1BC817AF4();
    sub_1BC6E14D8(v7, v8, &v13);
    sub_1BC818148();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    sub_1BC818148();
    *(_WORD *)(v5 + 22) = 2048;
    sub_1BC818148();
    _os_log_impl(&dword_1BC6DD000, v3, v4, "%s: Enqueued %ld work plans, %ld outstanding.", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);

  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  v9 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v9 + 56));
  v10 = *(_QWORD *)(v9 + 16);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v9 + 16) = v12;
    os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 56));
  }
}

void OrchestrationWorkQueueStatusObserver.didFinish(workPlan:after:analytics:result:executor:context:remaining:)(_QWORD *a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, double a8)
{
  uint64_t *v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t inited;
  double v78;
  double v79;
  double v80;
  double v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  _QWORD *v85;
  char *v86;
  void (*v87)(char *, uint64_t);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  id v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  double v104;
  double v105;
  double v106;
  id v107;
  id v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  _QWORD *v112;
  char *v113;
  void (*v114)(char *, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  void *v120;
  void *v121;
  uint64_t v122;
  os_log_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  uint64_t v131;
  int v132;
  id v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  id v150;
  uint64_t v151[75];
  _QWORD v152[4];

  v141 = a7;
  v133 = a6;
  v131 = *v8;
  v15 = sub_1BC817338();
  v136 = *(_QWORD *)(v15 - 8);
  v137 = v15;
  MEMORY[0x1E0C80A78](v15);
  v135 = (char *)&v122 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7D3D88();
  v125 = *(_QWORD *)(v17 - 8);
  v126 = v17;
  MEMORY[0x1E0C80A78](v17);
  v130 = (char *)&v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7D3E00();
  v128 = *(_QWORD *)(v19 - 8);
  v129 = v19;
  MEMORY[0x1E0C80A78](v19);
  v127 = (char *)&v122 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_1BC817368();
  v144 = *(_QWORD *)(v21 - 8);
  v145 = v21;
  v22 = MEMORY[0x1E0C80A78](v21);
  v138 = (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v143 = (char *)&v122 - v24;
  v25 = sub_1BC817308();
  v147 = *(_QWORD *)(v25 - 8);
  v148 = v25;
  MEMORY[0x1E0C80A78](v25);
  v146 = (char *)&v122 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_1BC817440();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v122 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6B8030 != -1)
    swift_once();
  v31 = sub_1BC817590();
  __swift_project_value_buffer(v31, (uint64_t)qword_1ED6B8018);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v30, a4, v27);
  sub_1BC6FC700((uint64_t)a1, (uint64_t)v152);
  (*(void (**)(char *, uint64_t, uint64_t))(v147 + 16))(v146, a2, v148);
  swift_unknownObjectRetain();
  sub_1BC7AFD0C(a3);
  swift_unknownObjectRetain();
  sub_1BC7AFD0C(a3);
  v32 = sub_1BC81756C();
  v33 = sub_1BC817E9C();
  v132 = v33;
  v34 = os_log_type_enabled(v32, v33);
  v139 = a1;
  v140 = a2;
  v134 = a4;
  if (v34)
  {
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v124 = v36;
    *(_DWORD *)v35 = 136316418;
    v123 = v32;
    v149 = a5;
    v150 = v133;
    v151[0] = v36;
    sub_1BC6ED814(0, &qword_1ED6B7FB0);
    swift_unknownObjectRetain();
    v133 = a3;
    v37 = sub_1BC817AF4();
    v149 = sub_1BC6E14D8(v37, v38, v151);
    sub_1BC818148();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v35 + 12) = 2080;
    sub_1BC6E1788(&qword_1ED6B6330, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D170], MEMORY[0x1E0D2D180]);
    v39 = sub_1BC818670();
    v149 = sub_1BC6E14D8(v39, v40, v151);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    *(_WORD *)(v35 + 22) = 2080;
    __swift_project_boxed_opaque_existential_1(v152, v152[3]);
    v41 = v143;
    sub_1BC817524();
    sub_1BC6E1788(&qword_1ED6B7FC0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D078], MEMORY[0x1E0D2D080]);
    v42 = v145;
    v43 = sub_1BC818670();
    v45 = v44;
    v46 = v42;
    a3 = v133;
    (*(void (**)(char *, uint64_t))(v144 + 8))(v41, v46);
    v149 = sub_1BC6E14D8(v43, v45, v151);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v152);
    *(_WORD *)(v35 + 32) = 2080;
    sub_1BC7AFD0C(a3);
    v47 = sub_1BC8172A8();
    v49 = v48;
    sub_1BC7AFD1C(a3);
    v149 = sub_1BC6E14D8(v47, v49, v151);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    sub_1BC7AFD1C(a3);
    sub_1BC7AFD1C(a3);
    *(_WORD *)(v35 + 42) = 2048;
    v149 = *(_QWORD *)&a8;
    sub_1BC818148();
    *(_WORD *)(v35 + 52) = 2080;
    sub_1BC6E1788(&qword_1ED6B9560, (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D028], MEMORY[0x1E0D2D030]);
    v50 = v146;
    v51 = v148;
    v52 = sub_1BC818670();
    v149 = sub_1BC6E14D8(v52, v53, v151);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v50, v51);
    v32 = v123;
    _os_log_impl(&dword_1BC6DD000, v123, (os_log_type_t)v132, "[%s] %s/%s: %s after %fs. %s", (uint8_t *)v35, 0x3Eu);
    v54 = v124;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v54, -1, -1);
    MEMORY[0x1BCCF5BA4](v35, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v152);
    sub_1BC7AFD1C(a3);
    sub_1BC7AFD1C(a3);
    (*(void (**)(char *, uint64_t))(v147 + 8))(v146, v148);
  }

  v55 = a5;
  v56 = v142;
  if (!v141)
  {
    type metadata accessor for HealthPlatformContextProvider.Context(0);
    v57 = swift_dynamicCastClass();
    if (v57)
    {
      v58 = v57;
      swift_unknownObjectRetain();
      swift_retain();
      v59 = sub_1BC76D390();
      swift_release();
      v152[0] = v59;
      sub_1BC771160();
      v122 = v55;
      sub_1BC6E1788(&qword_1ED6B8298, (uint64_t (*)(uint64_t))sub_1BC771160, MEMORY[0x1E0C95D90]);
      sub_1BC8178D8();
      swift_release();
      v60 = swift_allocObject();
      swift_weakInit();
      v61 = (_QWORD *)swift_allocObject();
      v61[2] = v60;
      v61[3] = v58;
      v61[4] = v131;
      swift_unknownObjectRetain();
      sub_1BC817710();
      v62 = MEMORY[0x1E0DEE9C0] + 8;
      sub_1BC7D3FEC(0, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
      sub_1BC6E1788(&qword_1ED6B95E8, (uint64_t (*)(uint64_t))sub_1BC7D3D88, MEMORY[0x1E0C95B60]);
      sub_1BC7D410C(&qword_1ED6B82A8, &qword_1ED6B82B0, v62);
      v64 = v126;
      v63 = v127;
      v65 = v130;
      sub_1BC8178E4();
      swift_release();
      (*(void (**)(char *, uint64_t))(v125 + 8))(v65, v64);
      *(_QWORD *)(swift_allocObject() + 16) = v131;
      sub_1BC6E1788(&qword_1ED6B95F8, (uint64_t (*)(uint64_t))sub_1BC7D3E00, MEMORY[0x1E0C95B78]);
      v66 = v129;
      sub_1BC817848();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v128 + 8))(v63, v66);
    }
  }
  if (!a3)
  {
    v71 = *(_QWORD *)(v56 + 16);
    os_unfair_lock_lock((os_unfair_lock_t)(v71 + 56));
    v72 = *(_QWORD *)(v71 + 24);
    v69 = __OFADD__(v72, 1);
    v73 = v72 + 1;
    if (!v69)
    {
      *(_QWORD *)(v71 + 24) = v73;
      v74 = *(_QWORD *)(v71 + 32);
      v69 = __OFADD__(v74, 1);
      v75 = v74 + 1;
      if (!v69)
      {
        *(_QWORD *)(v71 + 32) = v75;
        os_unfair_lock_unlock((os_unfair_lock_t)(v71 + 56));
        v76 = (void *)sub_1BC817AC4();
        sub_1BC7D0FE4();
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1BC821C40;
        *(_QWORD *)(inited + 32) = 0x6E6F697461727564;
        *(_QWORD *)(inited + 40) = 0xE800000000000000;
        *(_QWORD *)(inited + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a8);
        *(_QWORD *)(inited + 56) = 0x4464656B636F6C62;
        *(_QWORD *)(inited + 64) = 0xEF6E6F6974617275;
        sub_1BC8172F0();
        *(_QWORD *)(inited + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v78);
        strcpy((char *)(inited + 80), "pausedDuration");
        *(_BYTE *)(inited + 95) = -18;
        sub_1BC8172E4();
        *(_QWORD *)(inited + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v79);
        *(_QWORD *)(inited + 104) = 0xD000000000000010;
        *(_QWORD *)(inited + 112) = 0x80000001BC82B360;
        sub_1BC8172FC();
        *(_QWORD *)(inited + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v80);
        *(_QWORD *)(inited + 128) = 0x74617275446E7572;
        *(_QWORD *)(inited + 136) = 0xEB000000006E6F69;
        sub_1BC8172D8();
        *(_QWORD *)(inited + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v81);
        *(_QWORD *)(inited + 152) = 0x73736563637573;
        *(_QWORD *)(inited + 160) = 0xE700000000000000;
        *(_QWORD *)(inited + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 1);
        *(_QWORD *)(inited + 176) = 0x72656469766F7270;
        *(_QWORD *)(inited + 184) = 0xE800000000000000;
        sub_1BC817434();
        v82 = sub_1BC817AC4();
        swift_bridgeObjectRelease();
        *(_QWORD *)(inited + 192) = v82;
        *(_QWORD *)(inited + 200) = 0x726F747563657865;
        *(_QWORD *)(inited + 208) = 0xE800000000000000;
        v83 = v135;
        sub_1BC817428();
        sub_1BC817314();
        (*(void (**)(char *, uint64_t))(v136 + 8))(v83, v137);
        v84 = sub_1BC817AC4();
        swift_bridgeObjectRelease();
        *(_QWORD *)(inited + 216) = v84;
        *(_QWORD *)(inited + 224) = 0x6E69616D6F64;
        *(_QWORD *)(inited + 232) = 0xE600000000000000;
        v85 = v139;
        __swift_project_boxed_opaque_existential_1(v139, v139[3]);
        v86 = v143;
        sub_1BC817524();
        sub_1BC81735C();
        v87 = *(void (**)(char *, uint64_t))(v144 + 8);
        v88 = v86;
        v89 = v145;
        v87(v88, v145);
        v90 = sub_1BC817AC4();
        swift_bridgeObjectRelease();
        *(_QWORD *)(inited + 240) = v90;
        *(_QWORD *)(inited + 248) = 1701080931;
        *(_QWORD *)(inited + 256) = 0xE400000000000000;
        __swift_project_boxed_opaque_existential_1(v85, v85[3]);
        v91 = v138;
        sub_1BC817524();
        v92 = sub_1BC817344();
        v87(v91, v89);
        *(_QWORD *)(inited + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v92);
        sub_1BC711390(inited);
        sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
        v93 = (void *)sub_1BC817A28();
        swift_bridgeObjectRelease();
        AnalyticsSendEvent();

        return;
      }
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  if (a3 == (id)1)
  {
    v67 = *(_QWORD *)(v56 + 16);
    os_unfair_lock_lock((os_unfair_lock_t)(v67 + 56));
    v68 = *(_QWORD *)(v67 + 40);
    v69 = __OFADD__(v68, 1);
    v70 = v68 + 1;
    if (!v69)
    {
      *(_QWORD *)(v67 + 40) = v70;
      os_unfair_lock_unlock((os_unfair_lock_t)(v67 + 56));
      return;
    }
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v94 = *(_QWORD *)(v56 + 16);
  v95 = a3;
  os_unfair_lock_lock((os_unfair_lock_t)(v94 + 56));
  v96 = *(_QWORD *)(v94 + 24);
  v69 = __OFADD__(v96, 1);
  v97 = v96 + 1;
  if (v69)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  *(_QWORD *)(v94 + 24) = v97;
  v98 = *(_QWORD *)(v94 + 48);
  v69 = __OFADD__(v98, 1);
  v99 = v98 + 1;
  if (v69)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  *(_QWORD *)(v94 + 48) = v99;
  os_unfair_lock_unlock((os_unfair_lock_t)(v94 + 56));
  v100 = (void *)sub_1BC816D50();
  v148 = sub_1BC817AC4();
  sub_1BC7D0FE4();
  v101 = swift_initStackObject();
  v133 = a3;
  v102 = v101;
  *(_OWORD *)(v101 + 16) = xmmword_1BC821C50;
  *(_QWORD *)(v101 + 32) = 0x6E6F697461727564;
  *(_QWORD *)(v101 + 40) = 0xE800000000000000;
  *(_QWORD *)(v101 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, a8);
  *(_QWORD *)(v102 + 56) = 0x4464656B636F6C62;
  *(_QWORD *)(v102 + 64) = 0xEF6E6F6974617275;
  sub_1BC8172F0();
  *(_QWORD *)(v102 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v103);
  strcpy((char *)(v102 + 80), "pausedDuration");
  *(_BYTE *)(v102 + 95) = -18;
  sub_1BC8172E4();
  *(_QWORD *)(v102 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v104);
  *(_QWORD *)(v102 + 104) = 0xD000000000000010;
  *(_QWORD *)(v102 + 112) = 0x80000001BC82B360;
  sub_1BC8172FC();
  *(_QWORD *)(v102 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v105);
  *(_QWORD *)(v102 + 128) = 0x74617275446E7572;
  *(_QWORD *)(v102 + 136) = 0xEB000000006E6F69;
  sub_1BC8172D8();
  *(_QWORD *)(v102 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v106);
  *(_QWORD *)(v102 + 152) = 0x73736563637573;
  *(_QWORD *)(v102 + 160) = 0xE700000000000000;
  *(_QWORD *)(v102 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithBool_, 0);
  *(_QWORD *)(v102 + 176) = 0x6D6F44726F727265;
  *(_QWORD *)(v102 + 184) = 0xEB000000006E6961;
  v107 = objc_msgSend(v100, sel_domain);
  if (v107)
  {
    *(_QWORD *)(v102 + 192) = v107;
    *(_QWORD *)(v102 + 200) = 0x646F43726F727265;
    *(_QWORD *)(v102 + 208) = 0xE900000000000065;
    v108 = objc_msgSend(v100, sel_code);
    *(_QWORD *)(v102 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v108);
    *(_QWORD *)(v102 + 224) = 0x72656469766F7270;
    *(_QWORD *)(v102 + 232) = 0xE800000000000000;
    sub_1BC817434();
    v109 = sub_1BC817AC4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v102 + 240) = v109;
    *(_QWORD *)(v102 + 248) = 0x726F747563657865;
    *(_QWORD *)(v102 + 256) = 0xE800000000000000;
    v110 = v135;
    sub_1BC817428();
    sub_1BC817314();
    (*(void (**)(char *, uint64_t))(v136 + 8))(v110, v137);
    v111 = sub_1BC817AC4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v102 + 264) = v111;
    *(_QWORD *)(v102 + 272) = 0x6E69616D6F64;
    *(_QWORD *)(v102 + 280) = 0xE600000000000000;
    v112 = v139;
    __swift_project_boxed_opaque_existential_1(v139, v139[3]);
    v113 = v143;
    sub_1BC817524();
    sub_1BC81735C();
    v114 = *(void (**)(char *, uint64_t))(v144 + 8);
    v115 = v113;
    v116 = v145;
    v114(v115, v145);
    v117 = sub_1BC817AC4();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v102 + 288) = v117;
    *(_QWORD *)(v102 + 296) = 1701080931;
    *(_QWORD *)(v102 + 304) = 0xE400000000000000;
    __swift_project_boxed_opaque_existential_1(v112, v112[3]);
    v118 = v138;
    sub_1BC817524();
    v119 = sub_1BC817344();
    v114(v118, v116);
    *(_QWORD *)(v102 + 312) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v119);
    sub_1BC711390(v102);
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
    v120 = (void *)sub_1BC817A28();
    swift_bridgeObjectRelease();
    v121 = (void *)v148;
    AnalyticsSendEvent();

    sub_1BC7AFD1C(v133);
    return;
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1BC7D26A8@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  unint64_t v22;
  uint64_t Strong;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t result;
  uint64_t v54;
  id v55;
  id v56;
  id v57;
  id v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t *v62;
  id v63;
  NSObject *v64;
  os_log_type_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  id v69;
  id v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;

  v93 = a3;
  v94 = a2;
  v95 = a4;
  v5 = MEMORY[0x1E0DEE9C0] + 8;
  sub_1BC7D3FEC(0, &qword_1ED6B9618, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
  v91 = *(_QWORD *)(v6 - 8);
  v92 = v6;
  MEMORY[0x1E0C80A78](v6);
  v90 = (char *)&v80 - v7;
  v8 = sub_1BC816F3C();
  v86 = *(_QWORD *)(v8 - 8);
  v87 = v8;
  MEMORY[0x1E0C80A78](v8);
  v85 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7D4068();
  v83 = *(_QWORD *)(v10 - 8);
  v84 = v10;
  MEMORY[0x1E0C80A78](v10);
  v82 = (char *)&v80 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7541EC();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7D3FEC(0, (unint64_t *)&unk_1ED6B87C0, v5, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v18 = v17;
  v19 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v80 - v20;
  v22 = *a1;
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1BC8177DC();
    sub_1BC6ED814(0, (unint64_t *)&qword_1ED6B87B0);
    sub_1BC8177B8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    sub_1BC7D4154();
    v52 = sub_1BC817854();
    result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    goto LABEL_26;
  }
  v88 = Strong;
  v89 = v22 >> 62;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    v24 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v25 = (void *)MEMORY[0x1E0DEE9D8];
  if (v24)
  {
    v97 = MEMORY[0x1E0DEE9D8];
    sub_1BC6E8A7C(0, v24 & ~(v24 >> 63), 0);
    if (v24 < 0)
    {
      __break(1u);
      goto LABEL_35;
    }
    v26 = 0;
    v27 = v97;
    v28 = v22;
    v29 = v22 & 0xC000000000000001;
    v30 = v24;
    do
    {
      if (v29)
        v31 = (id)MEMORY[0x1BCCF4FB0](v26, v28);
      else
        v31 = *(id *)(v28 + 8 * v26 + 32);
      v32 = v31;
      v33 = objc_msgSend(v31, sel_identifier);
      v34 = sub_1BC817AE8();
      v36 = v35;

      v97 = v27;
      v38 = *(_QWORD *)(v27 + 16);
      v37 = *(_QWORD *)(v27 + 24);
      if (v38 >= v37 >> 1)
      {
        sub_1BC6E8A7C(v37 > 1, v38 + 1, 1);
        v27 = v97;
      }
      ++v26;
      *(_QWORD *)(v27 + 16) = v38 + 1;
      v39 = v27 + 16 * v38;
      *(_QWORD *)(v39 + 32) = v34;
      *(_QWORD *)(v39 + 40) = v36;
    }
    while (v30 != v26);
    v24 = v30;
    v22 = v28;
  }
  if (qword_1ED6BB338 != -1)
    swift_once();
  v18 = sub_1BC817590();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED6BB320);
  swift_bridgeObjectRetain();
  v40 = sub_1BC81756C();
  v41 = sub_1BC817E9C();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v81 = v18;
    v43 = v42;
    v80 = swift_slowAlloc();
    v97 = v80;
    *(_DWORD *)v43 = 136315394;
    v44 = sub_1BC818814();
    v96 = sub_1BC6E14D8(v44, v45, &v97);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    v46 = swift_bridgeObjectRetain();
    v47 = MEMORY[0x1BCCF4914](v46, MEMORY[0x1E0DEA968]);
    v49 = v48;
    swift_bridgeObjectRelease();
    v96 = sub_1BC6E14D8(v47, v49, &v97);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v40, v41, "[%s] Successfully scheduled all coalesced notifications: %s", (uint8_t *)v43, 0x16u);
    v50 = v80;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v50, -1, -1);
    v51 = v43;
    v18 = v81;
    MEMORY[0x1BCCF5BA4](v51, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v25 = *(void **)(v94 + 16);
  if (v89)
  {
    swift_bridgeObjectRetain();
    v54 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
    if (!v54)
      goto LABEL_27;
    goto LABEL_24;
  }
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_24:
    v55 = objc_msgSend(v25, sel_profileIdentifier);
    v56 = objc_msgSend((id)objc_opt_self(), sel_primaryProfile);
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
    v57 = v55;
    v58 = v56;
    LOBYTE(v56) = sub_1BC8180D0();

    if ((v56 & 1) == 0)
      goto LABEL_27;
    v97 = sub_1BC7D3078(v25);
    v59 = MEMORY[0x1E0DEAFA0];
    sub_1BC7D3FEC(0, &qword_1ED6B8290, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC7D410C(&qword_1ED6B8288, &qword_1ED6B8290, v59);
    v60 = v82;
    sub_1BC81786C();
    swift_release();
    sub_1BC6E1788(&qword_1EF45CC30, (uint64_t (*)(uint64_t))sub_1BC7D4068, MEMORY[0x1E0C95950]);
    v61 = v84;
    v52 = sub_1BC817854();
    swift_release();
    result = (*(uint64_t (**)(char *, uint64_t))(v83 + 8))(v60, v61);
LABEL_26:
    v62 = v95;
    goto LABEL_32;
  }
LABEL_27:
  if (qword_1ED6B8030 != -1)
LABEL_35:
    swift_once();
  __swift_project_value_buffer(v18, (uint64_t)qword_1ED6B8018);
  swift_bridgeObjectRetain_n();
  v63 = v25;
  v64 = sub_1BC81756C();
  v65 = sub_1BC817E9C();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = swift_slowAlloc();
    v94 = swift_slowAlloc();
    v97 = v94;
    *(_DWORD *)v66 = 136315651;
    v67 = sub_1BC818814();
    v96 = sub_1BC6E14D8(v67, v68, &v97);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2081;
    v93 = v66 + 14;
    v69 = objc_msgSend(v63, sel_profileIdentifier);
    v70 = objc_msgSend(v69, sel_identifier);

    v71 = v24;
    v72 = v85;
    sub_1BC816F24();

    v73 = sub_1BC816F00();
    v75 = v74;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v72, v87);
    v96 = sub_1BC6E14D8(v73, v75, &v97);
    sub_1BC818148();

    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 22) = 2049;
    swift_bridgeObjectRelease();
    v96 = v71;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v64, v65, "[%s] No content to push for health store %{private}s where number of requests is %{private}ld", (uint8_t *)v66, 0x20u);
    v76 = v94;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v76, -1, -1);
    MEMORY[0x1BCCF5BA4](v66, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v62 = v95;
  v78 = v91;
  v77 = v92;
  v79 = v90;
  sub_1BC6ED814(0, (unint64_t *)&qword_1ED6B87B0);
  sub_1BC8177E8();
  sub_1BC7D41B8();
  v52 = sub_1BC817854();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v79, v77);
LABEL_32:
  *v62 = v52;
  return result;
}

uint64_t sub_1BC7D3078(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v3 = *v1;
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = v3;
  sub_1BC7D3FEC(0, &qword_1EF45CC38, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  swift_allocObject();
  v5 = a1;
  sub_1BC81780C();
  sub_1BC7D4248();
  v6 = sub_1BC817854();
  swift_release();
  return v6;
}

void sub_1BC7D313C(void **a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  id v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  NSObject *oslog;
  uint64_t v21;

  v1 = *a1;
  if (*a1)
  {
    v2 = v1;
    if (qword_1ED6B8030 != -1)
      swift_once();
    v3 = sub_1BC817590();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED6B8018);
    v4 = v1;
    v5 = v1;
    oslog = sub_1BC81756C();
    v6 = sub_1BC817E84();
    if (os_log_type_enabled(oslog, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v21 = v8;
      *(_DWORD *)v7 = 136315650;
      v9 = sub_1BC818814();
      sub_1BC6E14D8(v9, v10, &v21);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      sub_1BC6E14D8(0xD000000000000028, 0x80000001BC82B3C0, &v21);
      sub_1BC818148();
      *(_WORD *)(v7 + 22) = 2080;
      v11 = v1;
      sub_1BC6ED814(0, (unint64_t *)&qword_1ED6B87B0);
      v12 = sub_1BC817B00();
      sub_1BC6E14D8(v12, v13, &v21);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, oslog, v6, "[%s] %s finished with error: %s", (uint8_t *)v7, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v8, -1, -1);
      MEMORY[0x1BCCF5BA4](v7, -1, -1);

      return;
    }

  }
  else
  {
    if (qword_1ED6B8030 != -1)
      swift_once();
    v14 = sub_1BC817590();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED6B8018);
    oslog = sub_1BC81756C();
    v15 = sub_1BC817E9C();
    if (os_log_type_enabled(oslog, v15))
    {
      v16 = swift_slowAlloc();
      v17 = swift_slowAlloc();
      v21 = v17;
      *(_DWORD *)v16 = 136315394;
      v18 = sub_1BC818814();
      sub_1BC6E14D8(v18, v19, &v21);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      sub_1BC6E14D8(0xD000000000000028, 0x80000001BC82B3C0, &v21);
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, oslog, v15, "[%s] %s completed successfully", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v17, -1, -1);
      MEMORY[0x1BCCF5BA4](v16, -1, -1);

      return;
    }
  }

}

void sub_1BC7D3550(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  _QWORD *v24;
  void *v25;
  id v26;
  os_log_type_t type;
  uint64_t v28;
  uint64_t aBlock[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  v9 = qword_1ED6B8030;
  swift_retain();
  if (v9 != -1)
    swift_once();
  v10 = sub_1BC817590();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED6B8018);
  v11 = a3;
  v12 = sub_1BC81756C();
  v13 = sub_1BC817E9C();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    aBlock[0] = v28;
    *(_DWORD *)v14 = 136315395;
    v15 = sub_1BC818814();
    sub_1BC6E14D8(v15, v16, aBlock);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2081;
    v17 = objc_msgSend(v11, sel_profileIdentifier);
    type = v13;
    v18 = objc_msgSend(v17, sel_description);
    v19 = sub_1BC817AE8();
    v20 = a4;
    v22 = v21;

    sub_1BC6E14D8(v19, v22, aBlock);
    sub_1BC818148();

    a4 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v12, type, "[%s] Pushing shared summaries for %{private}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v28, -1, -1);
    MEMORY[0x1BCCF5BA4](v14, -1, -1);

  }
  else
  {

  }
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6B60]), sel_initWithHealthStore_, v11);
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = sub_1BC74D098;
  v24[3] = v8;
  v24[4] = v11;
  v24[5] = a4;
  aBlock[4] = (uint64_t)sub_1BC7D42F8;
  aBlock[5] = (uint64_t)v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1BC76C088;
  aBlock[3] = (uint64_t)&block_descriptor_25;
  v25 = _Block_copy(aBlock);
  v26 = v11;
  swift_release();
  objc_msgSend(v23, sel_pushWithCompletion_, v25);
  _Block_release(v25);

}

void sub_1BC7D3870(char a1, id a2, void (*a3)(id, uint64_t), uint64_t a4, void *a5)
{
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void (*v30)(id, uint64_t);
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  id v35;
  os_log_type_t type;
  uint64_t v37;
  uint64_t v38;

  if (a2)
  {
    v7 = a2;
    if (qword_1ED6B8030 != -1)
      swift_once();
    v8 = sub_1BC817590();
    __swift_project_value_buffer(v8, (uint64_t)qword_1ED6B8018);
    v9 = a2;
    v10 = a2;
    v11 = sub_1BC81756C();
    v12 = sub_1BC817E84();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      v14 = swift_slowAlloc();
      v38 = v14;
      *(_DWORD *)v13 = 136315394;
      v15 = sub_1BC818814();
      sub_1BC6E14D8(v15, v16, &v38);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      v17 = a2;
      sub_1BC6ED814(0, (unint64_t *)&qword_1ED6B87B0);
      v18 = sub_1BC817B00();
      sub_1BC6E14D8(v18, v19, &v38);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v11, v12, "[%s] Shared Summaries Push Error: %{public}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v14, -1, -1);
      MEMORY[0x1BCCF5BA4](v13, -1, -1);
    }
    else
    {

    }
    v35 = a2;
    a3(a2, 1);

  }
  else
  {
    if (qword_1ED6B8030 != -1)
      swift_once();
    v22 = sub_1BC817590();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED6B8018);
    v23 = a5;
    v24 = sub_1BC81756C();
    v25 = sub_1BC817E9C();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = swift_slowAlloc();
      v37 = swift_slowAlloc();
      v38 = v37;
      *(_DWORD *)v26 = 136315651;
      v27 = sub_1BC818814();
      type = v25;
      sub_1BC6E14D8(v27, v28, &v38);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2081;
      v29 = objc_msgSend(v23, sel_profileIdentifier);
      v30 = a3;
      v31 = objc_msgSend(v29, sel_description);
      v32 = sub_1BC817AE8();
      v34 = v33;

      sub_1BC6E14D8(v32, v34, &v38);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 22) = 1024;
      sub_1BC818148();
      _os_log_impl(&dword_1BC6DD000, v24, type, "[%s] Successfully pushed shared summaries for %{private}s. Success: %{BOOL}d", (uint8_t *)v26, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v37, -1, -1);
      MEMORY[0x1BCCF5BA4](v26, -1, -1);

      v30((id)(a1 & 1), 0);
    }
    else
    {

      a3((id)(a1 & 1), 0);
    }
  }
}

uint64_t OrchestrationWorkQueueStatusObserver.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t OrchestrationWorkQueueStatusObserver.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

void sub_1BC7D3D48()
{
  OrchestrationWorkQueueStatusObserver.didEnqueue(count:context:queueLength:)();
}

void sub_1BC7D3D68(_QWORD *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, double a8)
{
  OrchestrationWorkQueueStatusObserver.didFinish(workPlan:after:analytics:result:executor:context:remaining:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1BC7D3D88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B95F0)
  {
    sub_1BC771160();
    sub_1BC6E1788(&qword_1ED6B8298, (uint64_t (*)(uint64_t))sub_1BC771160, MEMORY[0x1E0C95D90]);
    v0 = sub_1BC817668();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B95F0);
  }
}

void sub_1BC7D3E00()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B9600)
  {
    v0 = MEMORY[0x1E0DEE9C0] + 8;
    sub_1BC7D3FEC(255, &qword_1ED6B82B0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC7D3D88();
    sub_1BC7D410C(&qword_1ED6B82A8, &qword_1ED6B82B0, v0);
    sub_1BC6E1788(&qword_1ED6B95E8, (uint64_t (*)(uint64_t))sub_1BC7D3D88, MEMORY[0x1E0C95B60]);
    v1 = sub_1BC817674();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B9600);
  }
}

uint64_t sub_1BC7D3EE0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7D3F04()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7D3F30@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BC7D26A8(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1BC7D3F3C()
{
  return swift_deallocObject();
}

void sub_1BC7D3F4C(void **a1)
{
  sub_1BC7D313C(a1);
}

uint64_t type metadata accessor for OrchestrationWorkQueueStatusObserver()
{
  return objc_opt_self();
}

uint64_t method lookup function for OrchestrationWorkQueueStatusObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of OrchestrationWorkQueueStatusObserver.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t getEnumTagSinglePayload for OrchestrationWorkQueueStatusObserver.State(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for OrchestrationWorkQueueStatusObserver.State(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for OrchestrationWorkQueueStatusObserver.State()
{
  return &type metadata for OrchestrationWorkQueueStatusObserver.State;
}

void sub_1BC7D3FEC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    v8 = sub_1BC6ED814(255, (unint64_t *)&qword_1ED6B87B0);
    v9 = a4(a1, a3, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

void sub_1BC7D4068()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B95E0)
  {
    v0 = MEMORY[0x1E0DEAFA0];
    sub_1BC7D3FEC(255, &qword_1ED6B8290, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC7D410C(&qword_1ED6B8288, &qword_1ED6B8290, v0);
    v1 = sub_1BC817614();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B95E0);
  }
}

uint64_t sub_1BC7D410C(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC7D3FEC(255, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95D90], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BC7D4154()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B87B8;
  if (!qword_1ED6B87B8)
  {
    sub_1BC7D3FEC(255, (unint64_t *)&unk_1ED6B87C0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C964B8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C964C8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B87B8);
  }
  return result;
}

unint64_t sub_1BC7D41B8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B9610;
  if (!qword_1ED6B9610)
  {
    sub_1BC7D3FEC(255, &qword_1ED6B9618, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960C0]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C960D0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B9610);
  }
  return result;
}

uint64_t sub_1BC7D421C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BC7D4240(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BC7D3550(a1, a2, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24));
}

unint64_t sub_1BC7D4248()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45CC40;
  if (!qword_1EF45CC40)
  {
    sub_1BC7D3FEC(255, &qword_1EF45CC38, MEMORY[0x1E0DEAFA0], (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C96108], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45CC40);
  }
  return result;
}

uint64_t sub_1BC7D42A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7D42CC()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1BC7D42F8(char a1, void *a2)
{
  uint64_t v2;

  sub_1BC7D3870(a1, a2, *(void (**)(id, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t block_destroy_helper_26()
{
  return swift_release();
}

uint64_t PreservedValue.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;

  v5 = *(_QWORD *)(a2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a3, a1, a2);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a3, 0, 1, a2);
}

uint64_t PreservedValue.executeIfSetValue(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v11 + 16))(v10, v12);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v10, v4);
    a1(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return result;
}

uint64_t PreservedValue.newValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v5, v7);
    v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

uint64_t PreservedValue.assignIfSetValue<A>(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[4];

  v4[2] = a1;
  v4[3] = a2;
  return PreservedValue.executeIfSetValue(_:)((void (*)(char *))sub_1BC7D45D0, (uint64_t)v4, a3);
}

uint64_t sub_1BC7D4544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *))(v1 + 16))((char *)&v4 - v2);
  return swift_setAtReferenceWritableKeyPath();
}

uint64_t sub_1BC7D45D0(uint64_t a1)
{
  return sub_1BC7D4544(a1);
}

uint64_t PreservedValue<A>.hasChanged(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v20 = a3;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = (char *)&v19 - v10;
  v12 = (char *)&v19 + *(int *)(v9 + 48) - v10;
  v13 = *(_QWORD *)(a2 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v14((char *)&v19 - v10, v4, a2);
  v14(v12, a1, a2);
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48);
  if (v16(v11, 1, v15) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, a2);
  }
  else
  {
    if (v16(v12, 1, v15) != 1)
    {
      v17 = static PreservedValue<A>.== infix(_:_:)(v4, a1, v15, v20) ^ 1;
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, TupleTypeMetadata2);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, a2);
  }
  v17 = 0;
  return v17 & 1;
}

uint64_t static PreservedValue<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, uint64_t, uint64_t);
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  char v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;

  v25[1] = a4;
  v27 = a2;
  v6 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v25[0] = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for PreservedValue(0, v8, v8, v9);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v25 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v26 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v15 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v17 = (char *)v25 - v16;
  v18 = (char *)v25 + *(int *)(v15 + 48) - v16;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v19((char *)v25 - v16, a1, v10);
  v19(v18, v27, v10);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v20(v17, 1, a3) == 1)
  {
    v21 = 1;
    if (v20(v18, 1, a3) == 1)
      goto LABEL_8;
  }
  else
  {
    v19(v13, (uint64_t)v17, v10);
    if (v20(v18, 1, a3) != 1)
    {
      v22 = (char *)v25[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v6 + 32))(v25[0], v18, a3);
      v21 = sub_1BC817AB8();
      v23 = *(void (**)(char *, uint64_t))(v6 + 8);
      v23(v22, a3);
      v23(v13, a3);
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, a3);
  }
  v21 = 0;
  v11 = v26;
  v10 = TupleTypeMetadata2;
LABEL_8:
  (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v10);
  return v21 & 1;
}

uint64_t type metadata accessor for PreservedValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PreservedValue);
}

uint64_t sub_1BC7D4940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static PreservedValue<A>.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a4 - 8));
}

uint64_t PreservedValue<A>.hash(into:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return sub_1BC818748();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v8, v2);
  sub_1BC818748();
  sub_1BC817A7C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t PreservedValue<A>.hashValue.getter(uint64_t a1)
{
  _BYTE v3[72];

  sub_1BC81873C();
  PreservedValue<A>.hash(into:)((uint64_t)v3, a1);
  return sub_1BC818778();
}

uint64_t sub_1BC7D4AB0(uint64_t a1)
{
  return PreservedValue<A>.hashValue.getter(a1);
}

uint64_t sub_1BC7D4AB8(uint64_t a1, uint64_t a2)
{
  return PreservedValue<A>.hash(into:)(a1, a2);
}

uint64_t sub_1BC7D4AC0(uint64_t a1, uint64_t a2)
{
  _BYTE v4[72];

  sub_1BC81873C();
  PreservedValue<A>.hash(into:)((uint64_t)v4, a2);
  return sub_1BC818778();
}

uint64_t Publisher.asPrependedPreservedValue()(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  type metadata accessor for PreservedValue(255, AssociatedTypeWitness, v5, v6);
  v7 = sub_1BC817614();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - v9;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  sub_1BC81786C();
  swift_release();
  sub_1BC81867C();
  swift_allocObject();
  sub_1BC817C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  sub_1BC817D04();
  MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95950], v7);
  sub_1BC8178F0();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BC7D4CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v7 = (char *)&v9 - v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - v6, a1, AssociatedTypeWitness);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, AssociatedTypeWitness);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t sub_1BC7D4D70()
{
  return swift_deallocObject();
}

uint64_t sub_1BC7D4D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BC7D4CAC(a1, a2);
}

uint64_t sub_1BC7D4D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 - 8) + 8);
  return MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for <A> PreservedValue<A>, a1, &v4);
}

uint64_t sub_1BC7D4DC0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1BC7D4DC8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1BC7D4E20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v13;
  int v14;
  int v15;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v8)
    v9 = *(_QWORD *)(v6 + 64);
  else
    v9 = v7 + 1;
  v10 = *(_DWORD *)(v6 + 80);
  if (v10 <= 7 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0 && v9 <= 0x18)
  {
    if ((_DWORD)v8)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, _QWORD))(v6 + 48))(a2, v8, *(_QWORD *)(a3 + 16)))
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v4, a2, v5);
        return v4;
      }
    }
    else
    {
      if (!*((_BYTE *)a2 + v7))
        goto LABEL_26;
      v14 = (*((unsigned __int8 *)a2 + v7) - 1) << (8 * v7);
      if (v7 > 3)
        v14 = 0;
      if ((_DWORD)v7)
      {
        if (v7 <= 3)
          v15 = *(_QWORD *)(v6 + 64);
        else
          v15 = 4;
        __asm { BR              X11 }
      }
      if (v14 == -1)
      {
LABEL_26:
        (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        *((_BYTE *)v4 + v7) = 0;
        return v4;
      }
    }
    memcpy(v4, a2, v9);
    return v4;
  }
  v13 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v13 + ((v10 + 16) & ~v10));
  swift_retain();
  return v4;
}

uint64_t sub_1BC7D4F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  if ((_DWORD)v5)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 64);
    if (!*(_BYTE *)(a1 + v7))
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    v8 = (*(unsigned __int8 *)(a1 + v7) - 1) << (8 * v7);
    if (v7 > 3)
      v8 = 0;
    if ((_DWORD)v7)
    {
      if (v7 > 3)
        LODWORD(v7) = 4;
      __asm { BR              X11 }
    }
    result = (v8 + 1);
    if (v8 == -1)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

_BYTE *sub_1BC7D5060(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      return a1;
    }
  }
  else
  {
    if (!a2[v8])
      goto LABEL_17;
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = *(_QWORD *)(v6 + 64);
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 == -1)
    {
LABEL_17:
      (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      a1[v8] = 0;
      return a1;
    }
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

_BYTE *sub_1BC7D5188(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  size_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
  {
    v12 = 8 * v8;
    if (a1[v8])
    {
      v13 = (a1[v8] - 1) << v12;
      if (v8 > 3)
        v13 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v14 = *(_QWORD *)(v6 + 64);
        else
          v14 = 4;
        __asm { BR              X12 }
      }
      if (v13 != -1)
      {
        if (!a2[v8] || (a2[v8] - 1) << v12 == -1)
        {
          (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
          a1[v8] = 0;
          return a1;
        }
        goto LABEL_27;
      }
    }
    if (!a2[v8])
      goto LABEL_31;
    v15 = (a2[v8] - 1) << v12;
    if (v8 > 3)
      v15 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v16 = *(_QWORD *)(v6 + 64);
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v11 = v15 + 1;
LABEL_25:
    if (v11)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_27;
    }
LABEL_31:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24))(a1, a2, v5);
    return a1;
  }
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v10 = v9(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v11 = v9(a2, v7, v5);
  if (!v10)
    goto LABEL_25;
  if (!v11)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
    return a1;
  }
LABEL_27:
  if ((_DWORD)v7)
    v17 = v8;
  else
    v17 = v8 + 1;
  memcpy(a1, a2, v17);
  return a1;
}

_BYTE *sub_1BC7D53E0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
      return a1;
    }
  }
  else
  {
    if (!a2[v8])
      goto LABEL_17;
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = *(_QWORD *)(v6 + 64);
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 == -1)
    {
LABEL_17:
      (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
      a1[v8] = 0;
      return a1;
    }
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

_BYTE *sub_1BC7D5508(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  size_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
  {
    v12 = 8 * v8;
    if (a1[v8])
    {
      v13 = (a1[v8] - 1) << v12;
      if (v8 > 3)
        v13 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v14 = *(_QWORD *)(v6 + 64);
        else
          v14 = 4;
        __asm { BR              X12 }
      }
      if (v13 != -1)
      {
        if (!a2[v8] || (a2[v8] - 1) << v12 == -1)
        {
          (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
          a1[v8] = 0;
          return a1;
        }
        goto LABEL_27;
      }
    }
    if (!a2[v8])
      goto LABEL_31;
    v15 = (a2[v8] - 1) << v12;
    if (v8 > 3)
      v15 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v16 = *(_QWORD *)(v6 + 64);
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v11 = v15 + 1;
LABEL_25:
    if (v11)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_27;
    }
LABEL_31:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 40))(a1, a2, v5);
    return a1;
  }
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v10 = v9(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v11 = v9(a2, v7, v5);
  if (!v10)
    goto LABEL_25;
  if (!v11)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
    return a1;
  }
LABEL_27:
  if ((_DWORD)v7)
    v17 = v8;
  else
    v17 = v8 + 1;
  memcpy(a1, a2, v17);
  return a1;
}

uint64_t sub_1BC7D5760(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_1BC7D58A0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v8)
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_17;
      goto LABEL_24;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_17:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_24:
      __asm { BR              X12 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_17;
  goto LABEL_24;
}

void sub_1BC7D5AB4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1BC7D5ABC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1BC7D5ADC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1BC7D5AE4()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1BC7D5AF4()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1BC7D5B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84))
    return (*(uint64_t (**)(void))(v2 + 48))();
  v4 = *(_QWORD *)(v2 + 64);
  if (!*(_BYTE *)(a1 + v4))
    return 0;
  v5 = (*(unsigned __int8 *)(a1 + v4) - 1) << (8 * v4);
  if (v4 > 3)
    v5 = 0;
  if (!(_DWORD)v4)
    return (v5 + 1);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BC7D5B64 + 4 * byte_1BC821D2A[(v4 - 1)]))();
}

void sub_1BC7D5B9C(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  unsigned int v7;
  int v8;
  int v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned int *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (v5 >= a2)
  {
    if ((_DWORD)v5)
    {
      if (!(_DWORD)a2)
        return;
    }
    else
    {
      a1[v6] = 0;
      if (!(_DWORD)a2)
        return;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 56))(a1, a2, v5);
    return;
  }
  v7 = ~(_DWORD)v5 + a2;
  if (v6 >= 4)
  {
    bzero(a1, v6);
    *(_DWORD *)a1 = v7;
    LOBYTE(v8) = 1;
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  v8 = (v7 >> (8 * v6)) + 1;
  if (!(_DWORD)v6)
  {
LABEL_16:
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  v9 = v7 & ~(-1 << (8 * v6));
  bzero(a1, v6);
  if ((_DWORD)v6 == 3)
  {
    *(_WORD *)a1 = v9;
    a1[2] = BYTE2(v9);
    goto LABEL_16;
  }
  if ((_DWORD)v6 == 2)
  {
    *(_WORD *)a1 = v9;
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  *a1 = v9;
  if (!(_DWORD)v5)
LABEL_17:
    a1[v6] = v8;
}

BOOL static HealthExperienceStoreCreationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HealthExperienceStoreCreationError.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t HealthExperienceStoreCreationError.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t HealthExperienceStore.object<A>(from:in:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  result = (uint64_t)HealthExperienceStore.managedObjectID(for:)(a1, a3, a5);
  if (result)
  {
    v7 = (void *)result;
    v13[0] = 0;
    v8 = objc_msgSend(a2, sel_existingObjectWithID_error_, result, v13);
    if (v8)
    {
      v9 = v8;
      v10 = v13[0];

      result = swift_dynamicCastUnknownClass();
      if (result)
        return result;

    }
    else
    {
      v11 = v13[0];
      v12 = (void *)sub_1BC816D5C();

      swift_willThrow();
    }
    return 0;
  }
  return result;
}

id HealthExperienceStore.managedObjectID(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v4;
  void *v5;
  id v6;

  v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  v4 = objc_msgSend(v3, sel_persistentStoreCoordinator);

  v5 = (void *)sub_1BC816DBC();
  v6 = objc_msgSend(v4, sel_managedObjectIDForURIRepresentation_, v5);

  return v6;
}

unint64_t sub_1BC7D5EA4()
{
  unint64_t result;

  result = qword_1EF45CC48;
  if (!qword_1EF45CC48)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthExperienceStoreCreationError, &type metadata for HealthExperienceStoreCreationError);
    atomic_store(result, (unint64_t *)&qword_1EF45CC48);
  }
  return result;
}

uint64_t dispatch thunk of HealthExperienceStore.viewContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HealthExperienceStore.sharedBackgroundContext.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HealthExperienceStore.persistentContainer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HealthExperienceStore.persistentStoreCoordinator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HealthExperienceStore.persistentStoreDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of HealthExperienceStore.initPersistentContainer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t storeEnumTagSinglePayload for HealthExperienceStoreCreationError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BC7D5F74 + 4 * byte_1BC821DE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BC7D5FA8 + 4 * byte_1BC821DE0[v4]))();
}

uint64_t sub_1BC7D5FA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7D5FB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7D5FB8);
  return result;
}

uint64_t sub_1BC7D5FC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7D5FCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BC7D5FD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7D5FD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HealthExperienceStoreCreationError()
{
  return &type metadata for HealthExperienceStoreCreationError;
}

uint64_t sub_1BC7D5FF4()
{
  uint64_t result;

  result = sub_1BC7D6010();
  qword_1ED6C1BE0 = result;
  return result;
}

uint64_t sub_1BC7D6010()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  void *v17;
  id v18;
  uint64_t result;
  id v20;
  unint64_t v21;
  unint64_t v22;

  sub_1BC71A0E8();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1BC816E40();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  type metadata accessor for HealthExperienceStoreModel();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = (void *)sub_1BC817AC4();
  v13 = (void *)sub_1BC817AC4();
  v14 = objc_msgSend(v11, sel_URLForResource_withExtension_, v12, v13);

  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    goto LABEL_6;
  }
  sub_1BC816DF8();

  v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  v15(v2, v7, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
LABEL_6:
    sub_1BC71A180((uint64_t)v2);
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_1BC8182C8();
    sub_1BC817B48();
    v20 = objc_msgSend(v11, sel_description);
    sub_1BC817AE8();

    sub_1BC817B48();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15(v9, v2, v3);
  v16 = objc_allocWithZone(MEMORY[0x1E0C97B98]);
  v17 = (void *)sub_1BC816DBC();
  v18 = objc_msgSend(v16, sel_initWithContentsOfURL_, v17);

  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);

    return (uint64_t)v18;
  }
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  v21 = 0xD00000000000002FLL;
  v22 = 0x80000001BC82B4A0;
  sub_1BC7D63A0();
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
LABEL_8:
  result = sub_1BC8184B4();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HealthExperienceStoreModel()
{
  return objc_opt_self();
}

unint64_t sub_1BC7D63A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BB50;
  if (!qword_1EF45BB50)
  {
    v1 = sub_1BC816E40();
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BB50);
  }
  return result;
}

uint64_t HealthPluginHostEntitlement.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC818568();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

unint64_t HealthPluginHostEntitlement.rawValue.getter()
{
  return 0xD000000000000029;
}

uint64_t sub_1BC7D6458()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC7D64AC()
{
  return sub_1BC817B30();
}

uint64_t sub_1BC7D64C8()
{
  sub_1BC81873C();
  sub_1BC817B30();
  return sub_1BC818778();
}

uint64_t sub_1BC7D6518@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BC818568();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BC7D6568(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000029;
  a1[1] = 0x80000001BC8252D0;
}

CFTypeRef NSXPCConnection.value<A>(for:)()
{
  CFTypeRef v0;
  uint64_t v2;
  unint64_t v3;

  sub_1BC817C08();
  v0 = NSXPCConnection.value(for:)(v2, v3);
  swift_bridgeObjectRelease();
  return v0;
}

CFTypeRef NSXPCConnection.value(for:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  SecTaskRef v5;
  __SecTask *v6;
  __CFString *v7;
  CFTypeRef v8;
  __SecTask *v9;
  uint64_t v10;
  id v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  id v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  void *v36;
  uint64_t v38;
  audit_token_t token;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  objc_msgSend(v2, sel_auditToken);
  v5 = SecTaskCreateWithAuditToken(0, &token);
  if (!v5)
  {
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v10 = sub_1BC817590();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB5D0);
    v11 = v2;
    v12 = sub_1BC81756C();
    v13 = sub_1BC817E84();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      *(_QWORD *)token.val = v15;
      *(_DWORD *)v14 = 136315138;
      v16 = objc_msgSend(v11, sel_debugDescription);
      v17 = sub_1BC817AE8();
      v19 = v18;

      v38 = sub_1BC6E14D8(v17, v19, (uint64_t *)&token);
      sub_1BC818148();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v12, v13, "Could not get secTask from XPC connection %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v15, -1, -1);
      MEMORY[0x1BCCF5BA4](v14, -1, -1);

    }
    else
    {

    }
    return 0;
  }
  v6 = v5;
  *(_QWORD *)token.val = 0;
  v7 = (__CFString *)sub_1BC817AC4();
  v8 = SecTaskCopyValueForEntitlement(v6, v7, (CFErrorRef *)&token);

  v9 = *(__SecTask **)token.val;
  if (!v8)
  {
    if (*(_QWORD *)token.val)
    {
      v20 = qword_1ED6BB5B0;
      v21 = *(id *)token.val;
      if (v20 != -1)
        swift_once();
      v22 = sub_1BC817590();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ED6BB5D0);
      swift_bridgeObjectRetain_n();
      v23 = v21;
      v24 = sub_1BC81756C();
      v25 = sub_1BC817E84();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        v38 = v27;
        *(_DWORD *)v26 = 136315394;
        swift_bridgeObjectRetain();
        sub_1BC6E14D8(a1, a2, &v38);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v26 + 12) = 2080;
        type metadata accessor for CFError(0);
        v28 = v23;
        v29 = sub_1BC817AF4();
        sub_1BC6E14D8(v29, v30, &v38);
        sub_1BC818148();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v24, v25, "Could not get value for entitlement %s: %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v27, -1, -1);
        MEMORY[0x1BCCF5BA4](v26, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      if (qword_1ED6BB5B0 != -1)
        swift_once();
      v31 = sub_1BC817590();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED6BB5D0);
      swift_bridgeObjectRetain_n();
      v32 = sub_1BC81756C();
      v33 = sub_1BC817E84();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v38 = v35;
        *(_DWORD *)v34 = 136315138;
        swift_bridgeObjectRetain();
        sub_1BC6E14D8(a1, a2, &v38);
        sub_1BC818148();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BC6DD000, v32, v33, "Missing value for entitlement %s", v34, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v35, -1, -1);
        MEMORY[0x1BCCF5BA4](v34, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    v36 = *(void **)token.val;

    if (v36)
    return 0;
  }
  if (*(_QWORD *)token.val)
  {

    v6 = v9;
  }

  return v8;
}

unint64_t sub_1BC7D6BBC()
{
  unint64_t result;

  result = qword_1EF45CC50;
  if (!qword_1EF45CC50)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for HealthPluginHostEntitlement, &type metadata for HealthPluginHostEntitlement);
    atomic_store(result, (unint64_t *)&qword_1EF45CC50);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HealthPluginHostEntitlement(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BC7D6C40 + 4 * asc_1BC821F10[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BC7D6C60 + 4 * byte_1BC821F15[v4]))();
}

_BYTE *sub_1BC7D6C40(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BC7D6C60(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7D6C68(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7D6C70(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BC7D6C78(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BC7D6C80(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HealthPluginHostEntitlement()
{
  return &type metadata for HealthPluginHostEntitlement;
}

uint64_t static InputSignalIdentifier.summarySharingProfileDisplayName.getter()
{
  return sub_1BC8173E0();
}

uint64_t static InputSignalSet.LookupKey.summarySharingProfileDisplayName.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  type metadata accessor for SummarySharingProfileDisplayNameInputSignal();
  return sub_1BC817260();
}

uint64_t type metadata accessor for SummarySharingProfileDisplayNameInputSignal()
{
  return objc_opt_self();
}

uint64_t static SummarySharingProfileDisplayNameInputSignal.identityConfiguration.getter()
{
  uint64_t v0;

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC8173E0();
  return sub_1BC8173C8();
}

uint64_t SummarySharingProfileDisplayNameInputSignal.identifier.getter()
{
  return sub_1BC8173E0();
}

uint64_t SummarySharingProfileDisplayNameInputSignal.observer.getter()
{
  return swift_unknownObjectRetain();
}

id SummarySharingProfileDisplayNameInputSignal.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

uint64_t SummarySharingProfileDisplayNameInputSignal.__allocating_init(observer:healthStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  SummarySharingProfileDisplayNameInputSignal.init(observer:healthStore:)(a1, a2, a3);
  return v6;
}

void SummarySharingProfileDisplayNameInputSignal.init(observer:healthStore:)(uint64_t a1, uint64_t a2, void *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  uint64_t v16;

  v7 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v10 = 0;
  v11 = &v10[*(int *)(v8 + 20)];
  sub_1BC7D7008();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  sub_1BC7D7154();
  v13 = swift_allocObject();
  *(_DWORD *)(v13 + ((*(unsigned int *)(*(_QWORD *)v13 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1BC7D71B8((uint64_t)v10, v13 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v13 + 16));
  sub_1BC7D71FC((uint64_t)v10);
  v3[5] = v13;
  v14 = objc_msgSend(a3, sel_profileIdentifier);
  v15 = objc_msgSend(v14, sel_type);

  if (v15 == (id)2)
  {
    v3[2] = a1;
    v3[3] = a2;
    v3[4] = a3;
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State()
{
  uint64_t result;

  result = qword_1EF45CCF8;
  if (!qword_1EF45CCF8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BC7D7008()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45CC58)
  {
    sub_1BC7D7088();
    sub_1BC7D70CC();
    sub_1BC7D7110();
    v0 = sub_1BC81738C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45CC58);
  }
}

unint64_t sub_1BC7D7088()
{
  unint64_t result;

  result = qword_1EF45CC60;
  if (!qword_1EF45CC60)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ProfileDisplayName, &type metadata for ProfileDisplayName);
    atomic_store(result, (unint64_t *)&qword_1EF45CC60);
  }
  return result;
}

unint64_t sub_1BC7D70CC()
{
  unint64_t result;

  result = qword_1EF45CC68;
  if (!qword_1EF45CC68)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ProfileDisplayName, &type metadata for ProfileDisplayName);
    atomic_store(result, (unint64_t *)&qword_1EF45CC68);
  }
  return result;
}

unint64_t sub_1BC7D7110()
{
  unint64_t result;

  result = qword_1EF45CC70;
  if (!qword_1EF45CC70)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ProfileDisplayName, &type metadata for ProfileDisplayName);
    atomic_store(result, (unint64_t *)&qword_1EF45CC70);
  }
  return result;
}

void sub_1BC7D7154()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45CC78)
  {
    type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45CC78);
  }
}

uint64_t sub_1BC7D71B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC7D71FC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t SummarySharingProfileDisplayNameInputSignal.dependencyConfigurations(for:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC6ECA64(0, &qword_1ED6B8760, (uint64_t (*)(uint64_t))sub_1BC6F09F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC81A0F0;
  v2 = sub_1BC8173D4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D0F0];
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = sub_1BC6F0A44(&qword_1ED6B7FC8, 255, v3, MEMORY[0x1E0D2D0E8]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
  sub_1BC8173E0();
  sub_1BC8173C8();
  return v1;
}

uint64_t SummarySharingProfileDisplayNameInputSignal.dependencyDidUpdate(anchors:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  v1 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v4);
  sub_1BC7D7008();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7D7574((uint64_t)&v18);
  v16 = v19;
  v17 = v18;
  v10 = v20;
  sub_1BC8173E0();
  v18 = v17;
  v19 = v16;
  v20 = v10;
  sub_1BC7D7088();
  sub_1BC7D70CC();
  sub_1BC7D7110();
  sub_1BC817380();
  v11 = *(_QWORD *)(v0 + 40);
  v12 = v11 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v11 + 16);
  v13 = (os_unfair_lock_s *)(v11 + ((*(unsigned int *)(*(_QWORD *)v11 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v13);
  sub_1BC7D790C(v12, (uint64_t)v9, (uint64_t)v3);
  os_unfair_lock_unlock(v13);
  if (*v3 == 1)
  {
    swift_getObjectType();
    *(_QWORD *)&v18 = v0;
    sub_1BC6F0A44(&qword_1EF45CC80, v14, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingProfileDisplayNameInputSignal, (uint64_t)&protocol conformance descriptor for SummarySharingProfileDisplayNameInputSignal);
    sub_1BC817374();
  }
  sub_1BC7D71FC((uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

double sub_1BC7D7574@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  NSObject *v22;
  uint64_t v23;
  double result;
  _QWORD v25[2];
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v25[1] = *v1;
  v3 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v3);
  sub_1BC6ECA64(0, &qword_1EF45CD30, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingInputSignal, MEMORY[0x1E0D2CF90]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v25 - v7;
  sub_1BC6ECA64(0, (unint64_t *)&qword_1ED6B7FF8, (uint64_t (*)(uint64_t))sub_1BC7453AC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v25 - v10;
  sub_1BC8173E0();
  type metadata accessor for SummarySharingInputSignal();
  sub_1BC817260();
  sub_1BC6F0A44((unint64_t *)&unk_1ED6B7E58, 255, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingInputSignal, (uint64_t)&protocol conformance descriptor for SummarySharingInputSignal);
  sub_1BC8173BC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC7453AC();
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v12) == 1)
  {
    sub_1BC715030((uint64_t)v11, (unint64_t *)&qword_1ED6B7FF8, (uint64_t (*)(uint64_t))sub_1BC7453AC);
    if (qword_1ED6B8030 != -1)
      swift_once();
    v15 = sub_1BC817590();
    __swift_project_value_buffer(v15, (uint64_t)qword_1ED6B8018);
    v16 = sub_1BC81756C();
    v17 = sub_1BC817E84();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = swift_slowAlloc();
      *(_QWORD *)&v26 = v19;
      *(_DWORD *)v18 = 136446210;
      v20 = sub_1BC818814();
      v29 = sub_1BC6E14D8(v20, v21, (uint64_t *)&v26);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v16, v17, "%{public}s: Missing anchor for dependent signal", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v19, -1, -1);
      MEMORY[0x1BCCF5BA4](v18, -1, -1);
    }

  }
  else
  {
    sub_1BC817458();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    v22 = sub_1BC7D79C0();
    swift_bridgeObjectRelease();
    if (v22)
    {
      sub_1BC7D7EC4(v22, (uint64_t *)&v26);

      v23 = v27;
      *(_OWORD *)a1 = v26;
      *(_QWORD *)(a1 + 16) = v23;
      result = *(double *)&v28;
      *(_OWORD *)(a1 + 24) = v28;
      return result;
    }
  }
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_1BC7D790C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = a1 + *(int *)(type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State() + 20);
  sub_1BC715030(v6, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008);
  sub_1BC7D7008();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, a2, v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return sub_1BC7D71B8(a1, a3);
}

NSObject *sub_1BC7D79C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40[2];

  v1 = v0;
  v2 = sub_1BC816F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1BC7D8820(v6, v0);
  v8 = sub_1BC6E6510(v7);
  if (!v8)
  {
    swift_release();
    if (qword_1ED6B8030 != -1)
      swift_once();
    v11 = sub_1BC817590();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED6B8018);
    swift_retain_n();
    v9 = sub_1BC81756C();
    v12 = sub_1BC817E84();
    if (os_log_type_enabled(v9, v12))
    {
      v13 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40[0] = v38;
      *(_DWORD *)v13 = 136446466;
      v14 = sub_1BC818814();
      v39 = sub_1BC6E14D8(v14, v15, v40);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      v37 = v13 + 14;
      v16 = objc_msgSend(*(id *)(v1 + 32), sel_profileIdentifier);
      v17 = objc_msgSend(v16, sel_identifier);

      sub_1BC816F24();
      v18 = sub_1BC816F00();
      v20 = v19;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v39 = sub_1BC6E14D8(v18, v20, v40);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v9, v12, "%{public}s: Unexpectedly no entries for summary sharing profile: %{public}s", (uint8_t *)v13, 0x16u);
      v21 = v38;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v21, -1, -1);
      MEMORY[0x1BCCF5BA4](v13, -1, -1);

      return 0;
    }
LABEL_15:

    swift_release_n();
    return 0;
  }
  v9 = v8;
  if ((v7 & 0xC000000000000001) != 0)
    v10 = sub_1BC8181FC();
  else
    v10 = *(_QWORD *)(v7 + 16);
  swift_release();
  if (v10 != 1)
  {
    if (qword_1ED6B8030 != -1)
      swift_once();
    v22 = sub_1BC817590();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED6B8018);
    swift_retain_n();
    v23 = sub_1BC81756C();
    v24 = sub_1BC817E84();
    v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v26 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v40[0] = v38;
      *(_DWORD *)v26 = 136446466;
      LODWORD(v37) = v25;
      v27 = sub_1BC818814();
      v39 = sub_1BC6E14D8(v27, v28, v40);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      v36 = v26 + 14;
      v29 = objc_msgSend(*(id *)(v1 + 32), sel_profileIdentifier, v26 + 14);
      v30 = objc_msgSend(v29, sel_identifier);

      sub_1BC816F24();
      v31 = sub_1BC816F00();
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      v39 = sub_1BC6E14D8(v31, v33, v40);
      sub_1BC818148();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1BC6DD000, v23, (os_log_type_t)v37, "%{public}s: Got multiple entries matching profile identifier %{public}s", (uint8_t *)v26, 0x16u);
      v34 = v38;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v34, -1, -1);
      MEMORY[0x1BCCF5BA4](v26, -1, -1);

      return 0;
    }

    goto LABEL_15;
  }
  return v9;
}

uint64_t sub_1BC7D7EC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;

  v4 = objc_msgSend(a1, sel_CNContactIdentifier);
  if (v4)
  {
    v5 = v4;
    sub_1BC817AE8();

    swift_bridgeObjectRelease();
  }
  v6 = objc_msgSend(a1, sel_firstName);
  if (v6)
  {
    v7 = v6;
    sub_1BC817AE8();

  }
  v8 = objc_msgSend(a1, sel_lastName);
  if (v8)
  {
    v9 = v8;
    sub_1BC817AE8();

  }
  sub_1BC817044();
  v10 = objc_msgSend(a1, sel_primaryContactIdentifier);
  sub_1BC817AE8();

  LOBYTE(v22) = 0;
  v23 = sub_1BC817038();
  v12 = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(a1, sel_firstName, v22);
  if (v13)
  {
    v14 = v13;
    sub_1BC817AE8();

  }
  v15 = objc_msgSend(a1, sel_lastName);
  if (v15)
  {
    v16 = v15;
    sub_1BC817AE8();

  }
  v17 = objc_msgSend(a1, sel_primaryContactIdentifier);
  sub_1BC817AE8();

  v18 = sub_1BC817038();
  v20 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v23;
  a2[1] = v12;
  a2[2] = v18;
  a2[3] = v20;
  a2[4] = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t sub_1BC7D8160(id *a1, uint64_t a2)
{
  id v3;
  NSObject *v4;
  id v5;
  void *v6;
  NSObject *v7;
  char v8;
  uint64_t v10;
  id v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v3 = *a1;
  if (objc_msgSend(*a1, sel_direction) != (id)1)
    return 0;
  v4 = objc_msgSend(v3, sel_profileIdentifier);
  v5 = objc_msgSend(*(id *)(a2 + 32), sel_profileIdentifier);
  v6 = v5;
  if (v4)
  {
    if (!v5)
    {
LABEL_14:

      return 0;
    }
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
    v7 = v4;
    v8 = sub_1BC8180D0();

    if ((v8 & 1) == 0)
      return 0;
LABEL_8:
    if ((unint64_t)objc_msgSend(v3, sel_status) < 2)
      return 1;
    if (qword_1ED6B8030 != -1)
      swift_once();
    v10 = sub_1BC817590();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED6B8018);
    v11 = v3;
    v4 = sub_1BC81756C();
    v12 = sub_1BC817E84();
    if (!os_log_type_enabled(v4, v12))
    {

      return 0;
    }
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v17 = v14;
    *(_DWORD *)v13 = 136446466;
    v15 = sub_1BC818814();
    sub_1BC6E14D8(v15, v16, &v17);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2048;
    objc_msgSend(v11, sel_status);

    sub_1BC818148();
    _os_log_impl(&dword_1BC6DD000, v4, v12, "%{public}s: Got a matching profile identifier but entry status is %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v14, -1, -1);
    MEMORY[0x1BCCF5BA4](v13, -1, -1);
    goto LABEL_14;
  }
  if (!v5)
    goto LABEL_8;

  return 0;
}

Swift::Void __swiftcall SummarySharingProfileDisplayNameInputSignal.stopObservation()()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = (_BYTE *)(v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16));
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1BC7D8488(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1BC7D8488(_BYTE *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = 0;
  v1 = (uint64_t)&a1[*(int *)(type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State() + 20)];
  sub_1BC715030(v1, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008);
  sub_1BC7D7008();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t SummarySharingProfileDisplayNameInputSignal.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return v0;
}

uint64_t SummarySharingProfileDisplayNameInputSignal.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7D855C()
{
  return sub_1BC8173E0();
}

uint64_t sub_1BC7D8578()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1BC7D85A0()
{
  return _s14HealthPlatform43SummarySharingProfileDisplayNameInputSignalC16beginObservation4from14configurationsy0A13Orchestration19OptionalValueAnchorVyAA0efG0VGSg_SayAG21IdentityConfigurationVGtF_0();
}

void sub_1BC7D85C0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  os_unfair_lock_s *v3;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 40);
  v2 = (_BYTE *)(v1 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v1 + 16));
  v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(_QWORD *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1BC7D8488(v2);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1BC7D8638()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v0 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v0);
  sub_1BC6ECA64(0, &qword_1ED6B8760, (uint64_t (*)(uint64_t))sub_1BC6F09F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BC81A0F0;
  v2 = sub_1BC8173D4();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D2D0F0];
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = sub_1BC6F0A44(&qword_1ED6B7FC8, 255, v3, MEMORY[0x1E0D2D0E8]);
  __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v1 + 32));
  sub_1BC8173E0();
  sub_1BC8173C8();
  return v1;
}

uint64_t sub_1BC7D873C()
{
  return SummarySharingProfileDisplayNameInputSignal.dependencyDidUpdate(anchors:)();
}

uint64_t sub_1BC7D875C(uint64_t a1, uint64_t a2)
{
  sub_1BC6F0A44(&qword_1EF45CC80, a2, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingProfileDisplayNameInputSignal, (uint64_t)&protocol conformance descriptor for SummarySharingProfileDisplayNameInputSignal);
  return sub_1BC8171AC();
}

unint64_t sub_1BC7D87A0(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1BC8180C4();
  result = sub_1BC8181A8();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

uint64_t sub_1BC7D8820(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  BOOL v19;
  uint64_t v20;
  id v21;
  uint64_t v22;

  v3 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    v6 = MEMORY[0x1E0DEE9E8];
    v22 = MEMORY[0x1E0DEE9E8];
    swift_retain();
    sub_1BC8181C0();
    if (sub_1BC81822C())
    {
      v6 = sub_1BC6ED7C0(0, &qword_1ED6B6390);
      do
      {
        swift_dynamicCast();
        v7 = sub_1BC7D8160(&v21, a2);
        if (v3)
        {
          swift_release();

          swift_release_n();
          swift_release();
          return v6;
        }
        v8 = v21;
        if ((v7 & 1) != 0)
        {
          v9 = v22;
          v10 = *(_QWORD *)(v22 + 16);
          if (*(_QWORD *)(v22 + 24) <= v10)
          {
            sub_1BC72B69C(v10 + 1);
            v9 = v22;
          }
          result = sub_1BC8180C4();
          v12 = v9 + 56;
          v13 = -1 << *(_BYTE *)(v9 + 32);
          v14 = result & ~v13;
          v15 = v14 >> 6;
          if (((-1 << v14) & ~*(_QWORD *)(v9 + 56 + 8 * (v14 >> 6))) != 0)
          {
            v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v9 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            v17 = 0;
            v18 = (unint64_t)(63 - v13) >> 6;
            do
            {
              if (++v15 == v18 && (v17 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              v19 = v15 == v18;
              if (v15 == v18)
                v15 = 0;
              v17 |= v19;
              v20 = *(_QWORD *)(v12 + 8 * v15);
            }
            while (v20 == -1);
            v16 = __clz(__rbit64(~v20)) + (v15 << 6);
          }
          *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
          *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v16) = v8;
          ++*(_QWORD *)(v9 + 16);
        }
        else
        {

        }
      }
      while (sub_1BC81822C());
      v6 = v22;
    }
    swift_release_n();
    swift_release();
  }
  else
  {
    swift_retain();
    v6 = sub_1BC7D8CB4(a1, a2);
    swift_release();
    swift_release();
  }
  return v6;
}

void sub_1BC7D8AB0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  BOOL v13;
  unint64_t v14;
  int64_t v15;
  id v16;
  char v17;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  id v23;

  v7 = 0;
  v20 = 0;
  v21 = a3 + 56;
  v8 = 1 << *(_BYTE *)(a3 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a3 + 56);
  v22 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    v12 = v11 | (v7 << 6);
LABEL_17:
    v23 = *(id *)(*(_QWORD *)(a3 + 48) + 8 * v12);
    v16 = v23;
    v17 = sub_1BC7D8160(&v23, a4);

    if (v4)
      return;
    if ((v17 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = __OFADD__(v20++, 1);
      if (v13)
        goto LABEL_30;
    }
  }
  v13 = __OFADD__(v7++, 1);
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v7 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v7);
  if (v14)
  {
LABEL_16:
    v10 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v7 << 6);
    goto LABEL_17;
  }
  v15 = v7 + 1;
  if (v7 + 1 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 2;
  if (v7 + 2 >= v22)
    goto LABEL_26;
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
    goto LABEL_15;
  v15 = v7 + 3;
  if (v7 + 3 >= v22)
  {
LABEL_26:
    swift_retain();
    sub_1BC7E5FE8(a1, a2, v20, a3);
    return;
  }
  v14 = *(_QWORD *)(v21 + 8 * v15);
  if (v14)
  {
LABEL_15:
    v7 = v15;
    goto LABEL_16;
  }
  while (1)
  {
    v7 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v7 >= v22)
      goto LABEL_26;
    v14 = *(_QWORD *)(v21 + 8 * v7);
    ++v15;
    if (v14)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1BC7D8CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  size_t v9;
  uint64_t isStackAllocationSafe;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  v9 = 8 * v8;
  isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    sub_1BC7D8AB0((_QWORD *)((char *)v16 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    v12 = v11;
    swift_release();
    swift_release();
    if (v3)
      swift_willThrow();
    swift_release_n();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v9);
    swift_retain();
    sub_1BC7D8AB0((unint64_t *)v13, v8, a1, a2);
    v12 = v14;
    swift_release();
    swift_release();
    MEMORY[0x1BCCF5BA4](v13, -1, -1);
    swift_release_n();
  }
  return v12;
}

uint64_t _s14HealthPlatform43SummarySharingProfileDisplayNameInputSignalC16beginObservation4from14configurationsy0A13Orchestration19OptionalValueAnchorVyAA0efG0VGSg_SayAG21IdentityConfigurationVGtF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _BYTE *v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  sub_1BC7D7008();
  v2 = v1;
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6ECA64(0, qword_1EF45CC98, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v20 - v11;
  v13 = *(_QWORD *)(v0 + 40);
  v14 = (_BYTE *)(v13 + *(_QWORD *)(*MEMORY[0x1E0DEC528] + *(_QWORD *)v13 + 16));
  v15 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(_QWORD *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v15);
  *v14 = 1;
  v16 = type metadata accessor for SummarySharingProfileDisplayNameInputSignal.State();
  sub_1BC7D981C((uint64_t)&v14[*(int *)(v16 + 20)], (uint64_t)v12);
  os_unfair_lock_unlock(v15);
  sub_1BC7D981C((uint64_t)v12, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    sub_1BC715030((uint64_t)v12, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008);
    v17 = (uint64_t)v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v10, v2);
    swift_getObjectType();
    v20[1] = v0;
    sub_1BC6F0A44(&qword_1EF45CC80, v18, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingProfileDisplayNameInputSignal, (uint64_t)&protocol conformance descriptor for SummarySharingProfileDisplayNameInputSignal);
    sub_1BC817374();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v17 = (uint64_t)v12;
  }
  return sub_1BC715030(v17, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008);
}

uint64_t sub_1BC7D90AC(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44(&qword_1EF45CC88, a2, (uint64_t (*)(uint64_t))type metadata accessor for SummarySharingProfileDisplayNameInputSignal, (uint64_t)&protocol conformance descriptor for SummarySharingProfileDisplayNameInputSignal);
}

uint64_t sub_1BC7D90D8()
{
  return sub_1BC6F0A44(&qword_1EF45CC90, 255, (uint64_t (*)(uint64_t))sub_1BC7D7008, MEMORY[0x1E0D2D0B0]);
}

uint64_t method lookup function for SummarySharingProfileDisplayNameInputSignal()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SummarySharingProfileDisplayNameInputSignal.__allocating_init(observer:healthStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t *sub_1BC7D911C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    sub_1BC7D7008();
    v9 = v8;
    v10 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v8))
    {
      sub_1BC6ECA64(0, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t sub_1BC7D9218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = a1 + *(int *)(a2 + 20);
  sub_1BC7D7008();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  return result;
}

_BYTE *sub_1BC7D9284(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  sub_1BC7D7008();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7))
  {
    sub_1BC6ECA64(0, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v5, v6, v8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  }
  return a1;
}

_BYTE *sub_1BC7D9354(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  sub_1BC7D7008();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v5, 1, v7);
  v12 = v10(v6, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 24))(v5, v6, v8);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v5, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    sub_1BC6ECA64(0, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(v5, v6, v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  return a1;
}

_BYTE *sub_1BC7D9470(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  sub_1BC7D7008();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7))
  {
    sub_1BC6ECA64(0, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v5, v6, v8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  }
  return a1;
}

_BYTE *sub_1BC7D9540(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_BYTE *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  sub_1BC7D7008();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48);
  v11 = v10(v5, 1, v7);
  v12 = v10(v6, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 40))(v5, v6, v8);
      return a1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v5, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    sub_1BC6ECA64(0, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v5, v6, v8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v5, 0, 1, v8);
  return a1;
}

uint64_t sub_1BC7D965C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BC7D9668(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    sub_1BC6ECA64(0, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t sub_1BC7D96FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1BC7D9708(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    sub_1BC6ECA64(0, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1BC7D9790()
{
  unint64_t v0;

  sub_1BC6ECA64(319, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BC7D981C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC6ECA64(0, qword_1EF45CC98, (uint64_t (*)(uint64_t))sub_1BC7D7008, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC7D9878(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

uint64_t sub_1BC7D98A8(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

_QWORD *MockFeedItemStorage.__allocating_init()()
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = sub_1BC7DA928;
  result[3] = 0;
  result[4] = sub_1BC7DA928;
  result[5] = 0;
  result[6] = sub_1BC7D9C78;
  result[7] = 0;
  result[8] = sub_1BC7D9F5C;
  result[9] = 0;
  return result;
}

uint64_t sub_1BC7D991C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1BC7DA96C;
  a2[1] = v6;
  return swift_retain();
}

uint64_t sub_1BC7D9990(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v6 + 16) = sub_1BC7DA968;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC7D9A14()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_retain();
  return v1;
}

uint64_t sub_1BC7D9A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_release();
}

uint64_t sub_1BC7D9AAC@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t *a1, uint64_t *a2)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 32);
  v4 = *(_QWORD *)(v3 + 40);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1BC7DA900;
  a2[1] = (uint64_t (*)(uint64_t *, uint64_t *))v6;
  return swift_retain();
}

uint64_t sub_1BC7D9B20(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v6 + 32) = sub_1BC7DA8D8;
  *(_QWORD *)(v6 + 40) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC7D9BA4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  return v1;
}

uint64_t sub_1BC7D9BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_release();
}

uint64_t (*sub_1BC7D9C3C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC7D9C78(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t sub_1BC7D9C9C@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t *a1, uint64_t *a2)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 48);
  v4 = *(_QWORD *)(v3 + 56);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1BC7DA880;
  a2[1] = (uint64_t (*)(uint64_t *, uint64_t *))v6;
  return swift_retain();
}

uint64_t sub_1BC7D9D10(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = *a1;
  v10 = *a2;
  v9 = a2[1];
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v9;
  swift_retain();
  a3(v8, a6, v11);
  return swift_release();
}

uint64_t sub_1BC7D9D88(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v6 + 48) = sub_1BC7DA858;
  *(_QWORD *)(v6 + 56) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC7D9E0C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, _QWORD *), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;

  v14 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  v13[0] = a7;
  v13[1] = v11;
  swift_retain();
  a4(&v14, v13);
  return swift_release();
}

uint64_t sub_1BC7D9E88()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  swift_retain();
  return v1;
}

uint64_t sub_1BC7D9ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return swift_release();
}

uint64_t (*sub_1BC7D9F20())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BC7D9F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD))
{
  return a5(MEMORY[0x1E0DEE9D8], 0);
}

uint64_t sub_1BC7D9F88@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)(uint64_t *a1, uint64_t *a2)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 64);
  v4 = *(_QWORD *)(v3 + 72);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  *(_QWORD *)(v6 + 24) = v4;
  *a2 = sub_1BC7DA850;
  a2[1] = (uint64_t (*)(uint64_t *, uint64_t *))v6;
  return swift_retain();
}

uint64_t sub_1BC7D9FFC(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t a1, char a2), uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v8 = *a2;
  v7 = a2[1];
  v9 = *((unsigned __int8 *)a1 + 24);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v7;
  swift_retain();
  a3(v4, v5, v6, v9, sub_1BC74D098, v10);
  return swift_release();
}

uint64_t sub_1BC7DA094(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  v6 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v6 + 64) = sub_1BC7DA848;
  *(_QWORD *)(v6 + 72) = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1BC7DA118(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD *, _QWORD *))
{
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[3];
  char v14;

  v13[0] = a1;
  v13[1] = a2;
  v13[2] = a3;
  v14 = a4;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a5;
  *(_QWORD *)(v10 + 24) = a6;
  v12[0] = sub_1BC74D2C8;
  v12[1] = v10;
  swift_retain();
  a7(v13, v12);
  return swift_release();
}

uint64_t sub_1BC7DA1A4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  return v1;
}

uint64_t sub_1BC7DA1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return swift_release();
}

uint64_t (*sub_1BC7DA23C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BC7DA278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  swift_retain();
  v7(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BC7DA2EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
  swift_retain();
  v7(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BC7DA360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 64);
  swift_retain();
  v13(a1, a2, a3, a4, a5, a6);
  return swift_release();
}

uint64_t sub_1BC7DA3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v7)(uint64_t, uint64_t, uint64_t);

  swift_beginAccess();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  swift_retain();
  v7(a1, a2, a3);
  return swift_release();
}

_QWORD *MockFeedItemStorage.init()()
{
  _QWORD *v0;
  _QWORD *result;

  result = v0;
  v0[2] = sub_1BC7DA928;
  v0[3] = 0;
  v0[4] = sub_1BC7DA928;
  v0[5] = 0;
  v0[6] = sub_1BC7D9C78;
  v0[7] = 0;
  v0[8] = sub_1BC7D9F5C;
  v0[9] = 0;
  return result;
}

uint64_t MockFeedItemStorage.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t MockFeedItemStorage.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BC7DA510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v7 = *v3;
  swift_beginAccess();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  swift_retain();
  v8(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BC7DA588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v7 = *v3;
  swift_beginAccess();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_retain();
  v8(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BC7DA600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  v7 = *v3;
  swift_beginAccess();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  v8(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1BC7DA678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = *v6;
  swift_beginAccess();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 64);
  swift_retain();
  v14(a1, a2, a3, a4, a5, a6);
  return swift_release();
}

uint64_t type metadata accessor for MockFeedItemStorage()
{
  return objc_opt_self();
}

uint64_t method lookup function for MockFeedItemStorage()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockFeedItemStorage.replaceExistingHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MockFeedItemStorage.replaceExistingHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MockFeedItemStorage.replaceExistingHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MockFeedItemStorage.updateOrCreateHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MockFeedItemStorage.updateOrCreateHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of MockFeedItemStorage.updateOrCreateHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of MockFeedItemStorage.deleteHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of MockFeedItemStorage.deleteHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of MockFeedItemStorage.deleteHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of MockFeedItemStorage.fetchHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of MockFeedItemStorage.fetchHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of MockFeedItemStorage.fetchHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of MockFeedItemStorage.replaceExisting(with:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of MockFeedItemStorage.updateOrCreate(_:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of MockFeedItemStorage.fetch(matching:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of MockFeedItemStorage.delete(feedItemIdentifiers:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of MockFeedItemStorage.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_1BC7DA824()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BC7DA848(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  return sub_1BC7DA118(a1, a2, a3, a4, a5, a6, *(void (**)(_QWORD *, _QWORD *))(v6 + 16));
}

uint64_t sub_1BC7DA850(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BC7D9FFC(a1, a2, *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, char), uint64_t))(v2 + 16));
}

uint64_t sub_1BC7DA858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BC7D9E0C(a1, a2, a3, *(void (**)(uint64_t *, _QWORD *))(v3 + 16), *(_QWORD *)(v3 + 24), (uint64_t)&unk_1E7522718, (uint64_t)sub_1BC753AAC);
}

uint64_t sub_1BC7DA880(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BC7D9D10(a1, a2, *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&unk_1E7522768, (uint64_t)sub_1BC7DA8A8);
}

uint64_t sub_1BC7DA8A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1BC7DA8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1BC7D9E0C(a1, a2, a3, *(void (**)(uint64_t *, _QWORD *))(v3 + 16), *(_QWORD *)(v3 + 24), (uint64_t)&unk_1E75227B8, (uint64_t)sub_1BC7DA92C);
}

uint64_t sub_1BC7DA900(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BC7D9D10(a1, a2, *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t)&unk_1E7522808, (uint64_t)sub_1BC7DA964);
}

uint64_t static FeedSection.entityName.getter()
{
  return 0x7463655364656546;
}

uint64_t sub_1BC7DA994()
{
  return 0x7463655364656546;
}

uint64_t FeedSection.__allocating_init(context:identifier:)(void *a1)
{
  objc_class *v1;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  uint64_t result;

  v3 = (void *)objc_opt_self();
  v4 = (void *)sub_1BC817AC4();
  v5 = objc_msgSend(v3, sel_entityForName_inManagedObjectContext_, v4, a1);

  if (v5)
  {
    v6 = objc_msgSend(objc_allocWithZone(v1), sel_initWithEntity_insertIntoManagedObjectContext_, v5, a1);
    v7 = (void *)sub_1BC817AC4();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_setIdentifier_, v7);

    return (uint64_t)v6;
  }
  else
  {
    result = sub_1BC8184B4();
    __break(1u);
  }
  return result;
}

void FeedSection.diagnosticDescription.getter()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  id v21;
  void *v22;
  char *v23;
  id v24;
  id v25;
  uint64_t v26;
  _QWORD v27[4];
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  id v32;
  unint64_t v33;
  _QWORD v34[2];

  v1 = v0;
  v2 = sub_1BC816EF4();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BC816E40();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34[0] = 0;
  v34[1] = 0xE000000000000000;
  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  strcpy((char *)v34, "FeedSection ");
  BYTE5(v34[1]) = 0;
  HIWORD(v34[1]) = -5120;
  v9 = objc_msgSend(v0, sel_identifier);
  sub_1BC817AE8();

  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  v10 = objc_msgSend(v0, sel_feed);
  v11 = objc_msgSend(v10, sel_objectID);

  v12 = objc_msgSend(v11, sel_URIRepresentation);
  sub_1BC816DF8();

  sub_1BC816D8C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  v13 = objc_msgSend(v1, sel_feedItems);
  v14 = objc_msgSend(v13, sel_count);

  v32 = v14;
  sub_1BC818670();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  v15 = objc_msgSend(v1, sel_feedItems);
  sub_1BC7DCBE0(v15, (uint64_t)sub_1BC7DCFBC, 0, &qword_1EF45CE98, (void (*)(uint64_t))type metadata accessor for FeedItem);
  v17 = v16;

  if ((v17 & 0x8000000000000000) == 0 && (v17 & 0x4000000000000000) == 0)
  {
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
      goto LABEL_4;
LABEL_12:
    swift_release();
    return;
  }
  swift_bridgeObjectRetain();
  v18 = sub_1BC8184E4();
  swift_release();
  if (!v18)
    goto LABEL_12;
LABEL_4:
  if (v18 >= 1)
  {
    v19 = 0;
    v27[3] = 0x80000001BC82B670;
    v28 = v17 & 0xC000000000000001;
    v27[1] = 0x80000001BC82B6B0;
    v27[2] = 0x80000001BC82B690;
    v20 = v17;
    do
    {
      if (v28)
        v21 = (id)MEMORY[0x1BCCF4FB0](v19, v17);
      else
        v21 = *(id *)(v17 + 8 * (_QWORD)v19 + 32);
      v22 = v21;
      v23 = v19 + 1;
      v32 = 0;
      v33 = 0xE000000000000000;
      sub_1BC8182C8();
      sub_1BC817B48();
      v31 = v19;
      sub_1BC818670();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      v24 = objc_msgSend(v22, sel_uniqueIdentifier);
      sub_1BC817AE8();

      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      v25 = objc_msgSend(v22, sel_dateSubmitted);
      sub_1BC816ED0();

      sub_1BC6E1788(&qword_1ED6B7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v26 = v30;
      sub_1BC818670();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v26);
      sub_1BC817B48();
      v31 = (char *)objc_msgSend(v22, sel_sortOrder);
      sub_1BC818670();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      v31 = (char *)objc_msgSend(v22, sel_sectionSortOrder);
      sub_1BC818670();
      sub_1BC817B48();
      swift_bridgeObjectRelease();
      sub_1BC817B48();
      sub_1BC817B48();

      swift_bridgeObjectRelease();
      v19 = v23;
      v17 = v20;
    }
    while ((char *)v18 != v23);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t static FeedSection.eligibleIdentifiers.getter()
{
  uint64_t v0;

  v0 = sub_1BC731B80((uint64_t)&unk_1E7516540);
  swift_arrayDestroy();
  return v0;
}

uint64_t static ForYouSectionKind.section(for:)(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = *a1;
  result = 0;
  switch(v1)
  {
    case 2:
      result = 3;
      break;
    case 3:
      result = 2;
      break;
    case 11:
      return result;
    case 17:
      result = 1;
      break;
    default:
      if (qword_1ED6BB5A8 != -1)
        swift_once();
      v3 = sub_1BC817590();
      __swift_project_value_buffer(v3, (uint64_t)qword_1ED6BB5B8);
      v4 = sub_1BC81756C();
      v5 = sub_1BC817E84();
      if (os_log_type_enabled(v4, v5))
      {
        v6 = (uint8_t *)swift_slowAlloc();
        v7 = swift_slowAlloc();
        v10 = v7;
        *(_DWORD *)v6 = 136315138;
        v8 = ContentKind.rawValue.getter();
        sub_1BC6E14D8(v8, v9, &v10);
        sub_1BC818148();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v4, v5, "No section defined for contentKind %s", v6, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v7, -1, -1);
        MEMORY[0x1BCCF5BA4](v6, -1, -1);
      }

      result = 4;
      break;
  }
  return result;
}

void *static ForYouSectionKind.allCases.getter()
{
  return &unk_1E75167C0;
}

uint64_t ForYouSectionKind.rawValue.getter(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC7DB2F8 + 4 * byte_1BC822170[a1]))(0x6867696C68676968, 0xEA00000000007374);
}

unint64_t sub_1BC7DB2F8()
{
  return 0xD000000000000011;
}

uint64_t sub_1BC7DB314()
{
  return 0x73656C6369747261;
}

uint64_t sub_1BC7DB32C()
{
  return 0x48726F4673707061;
}

void sub_1BC7DB350(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BC7DB3B0@<X0>(uint64_t a1@<X8>)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC7DB41C + 4 * byte_1BC822178[a1]))(0xD000000000000011);
}

uint64_t sub_1BC7DB41C(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000011 && v1 == 0x80000001BC825310)
    v2 = 1;
  else
    v2 = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_1BC7DB4D4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC81873C();
  __asm { BR              X9 }
}

uint64_t sub_1BC7DB524()
{
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

void sub_1BC7DB5A4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BC7DB5E4()
{
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

void sub_1BC7DB650()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BC81873C();
  __asm { BR              X9 }
}

uint64_t sub_1BC7DB69C()
{
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t sub_1BC7DB71C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s14HealthPlatform17ForYouSectionKindO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

uint64_t sub_1BC7DB748()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BC7DB77C + 4 * byte_1BC822188[*v0]))();
}

void sub_1BC7DB77C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001BC825310;
}

void sub_1BC7DB79C(_QWORD *a1@<X8>)
{
  *a1 = 0x73656C6369747261;
  a1[1] = 0xE800000000000000;
}

void sub_1BC7DB7B8(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "appsForHealth");
  *(_WORD *)(a1 + 14) = -4864;
}

void sub_1BC7DB7E0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E75167E8;
}

uint64_t sub_1BC7DB7F0(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BC7DCFA8(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BC7DB858(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1BC7DB858(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  unint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  char v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  unint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  char *v94;
  uint64_t v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *__dst;

  v3 = a1[1];
  result = sub_1BC818664();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_152;
    if (v3)
      return sub_1BC7DBF40(0, v3, 1, a1);
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_160;
  v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v11 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        v95 = *v102;
        do
        {
          v96 = v12 - 2;
          if (v12 < 2)
            goto LABEL_147;
          if (!v95)
            goto LABEL_159;
          v97 = v94;
          v98 = *(_QWORD *)&v94[16 * v96 + 32];
          v99 = *(_QWORD *)&v94[16 * v12 + 24];
          sub_1BC7DC00C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(_QWORD *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1)
            break;
          if (v99 < v98)
            goto LABEL_148;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v97 = sub_1BC7DC4E8((uint64_t)v97);
          if (v96 >= *((_QWORD *)v97 + 2))
            goto LABEL_149;
          v100 = &v97[16 * v96 + 32];
          *(_QWORD *)v100 = v98;
          *((_QWORD *)v100 + 1) = v99;
          v101 = *((_QWORD *)v97 + 2);
          if (v12 > v101)
            goto LABEL_150;
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((_QWORD *)v97 + 2) = v101 - 1;
          v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_1BC817CB0();
    *(_QWORD *)(v7 + 16) = v6;
    v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *a1;
  v103 = v10 + 8;
  v11 = (char *)MEMORY[0x1E0DEE9D8];
  v106 = v3;
  while (1)
  {
    v13 = v9++;
    if (v9 >= v3)
      goto LABEL_46;
    v14 = (uint64_t *)(v10 + 16 * v9);
    v15 = *v14;
    v16 = v14[1];
    v17 = (_QWORD *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_45;
      v19 = 0;
    }
    else
    {
      v19 = sub_1BC818694();
      v20 = v13 + 2;
      if (v13 + 2 >= v3)
        goto LABEL_36;
    }
    v21 = (_QWORD *)(v103 + 16 * v20);
    do
    {
      v23 = (_QWORD *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if ((v19 & 1) != 0)
          goto LABEL_37;
      }
      else if (((v19 ^ sub_1BC818694()) & 1) != 0)
      {
        goto LABEL_36;
      }
      v21 += 2;
      v22 = v20 + 1;
      v9 = v20;
      v20 = v22;
    }
    while (v22 < v3);
    v20 = v22;
LABEL_36:
    v9 = v20;
    if ((v19 & 1) != 0)
    {
LABEL_37:
      if (v20 < v13)
        goto LABEL_155;
      if (v13 < v20)
      {
        v25 = 16 * v20;
        v26 = 16 * v13;
        v27 = v20;
        v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10)
              goto LABEL_158;
            v29 = v10 + v25;
            v30 = *(_QWORD *)(v10 + v26);
            v31 = *(_QWORD *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(_QWORD *)(v29 - 16) = v30;
            *(_QWORD *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13))
        goto LABEL_151;
      if (v9 - v13 < v105)
        break;
    }
LABEL_67:
    if (v9 < v13)
      goto LABEL_146;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BC7DC2A4(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v41 = *((_QWORD *)v11 + 2);
    v40 = *((_QWORD *)v11 + 3);
    v12 = v41 + 1;
    if (v41 >= v40 >> 1)
      v11 = sub_1BC7DC2A4((char *)(v40 > 1), v41 + 1, 1, v11);
    *((_QWORD *)v11 + 2) = v12;
    v42 = v11 + 32;
    v43 = &v11[16 * v41 + 32];
    *(_QWORD *)v43 = v13;
    *((_QWORD *)v43 + 1) = v9;
    if (v41)
    {
      v107 = v9;
      while (1)
      {
        v44 = v12 - 1;
        if (v12 >= 4)
        {
          v49 = &v42[16 * v12];
          v50 = *((_QWORD *)v49 - 8);
          v51 = *((_QWORD *)v49 - 7);
          v55 = __OFSUB__(v51, v50);
          v52 = v51 - v50;
          if (v55)
            goto LABEL_135;
          v54 = *((_QWORD *)v49 - 6);
          v53 = *((_QWORD *)v49 - 5);
          v55 = __OFSUB__(v53, v54);
          v47 = v53 - v54;
          v48 = v55;
          if (v55)
            goto LABEL_136;
          v56 = v12 - 2;
          v57 = &v42[16 * v12 - 32];
          v59 = *(_QWORD *)v57;
          v58 = *((_QWORD *)v57 + 1);
          v55 = __OFSUB__(v58, v59);
          v60 = v58 - v59;
          if (v55)
            goto LABEL_138;
          v55 = __OFADD__(v47, v60);
          v61 = v47 + v60;
          if (v55)
            goto LABEL_141;
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            v81 = *(_QWORD *)v79;
            v80 = *((_QWORD *)v79 + 1);
            v55 = __OFSUB__(v80, v81);
            v82 = v80 - v81;
            if (v55)
              goto LABEL_145;
            v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v73 = *((_QWORD *)v11 + 4);
            v74 = *((_QWORD *)v11 + 5);
            v55 = __OFSUB__(v74, v73);
            v66 = v74 - v73;
            v67 = v55;
            goto LABEL_99;
          }
          v46 = *((_QWORD *)v11 + 4);
          v45 = *((_QWORD *)v11 + 5);
          v55 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          v48 = v55;
        }
        if ((v48 & 1) != 0)
          goto LABEL_137;
        v56 = v12 - 2;
        v62 = &v42[16 * v12 - 32];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v65 = __OFSUB__(v63, v64);
        v66 = v63 - v64;
        v67 = v65;
        if (v65)
          goto LABEL_140;
        v68 = &v42[16 * v44];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v55 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v55)
          goto LABEL_143;
        if (__OFADD__(v66, v71))
          goto LABEL_144;
        if (v66 + v71 >= v47)
        {
          v72 = v47 < v71;
LABEL_105:
          if (v72)
            v44 = v56;
          goto LABEL_107;
        }
LABEL_99:
        if ((v67 & 1) != 0)
          goto LABEL_139;
        v75 = &v42[16 * v44];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v55 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v55)
          goto LABEL_142;
        if (v78 < v66)
          goto LABEL_15;
LABEL_107:
        v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        v84 = v10;
        if (!v10)
          goto LABEL_157;
        v85 = v11;
        v86 = &v42[16 * v83];
        v87 = *(_QWORD *)v86;
        v88 = v42;
        v89 = v44;
        v90 = &v42[16 * v44];
        v91 = *((_QWORD *)v90 + 1);
        v92 = v84;
        sub_1BC7DC00C((char *)(v84 + 16 * *(_QWORD *)v86), (char *)(v84 + 16 * *(_QWORD *)v90), v84 + 16 * v91, __dst);
        if (v1)
          goto LABEL_115;
        if (v91 < v87)
          goto LABEL_132;
        if (v89 > *((_QWORD *)v85 + 2))
          goto LABEL_133;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v88[16 * v83 + 8] = v91;
        v93 = *((_QWORD *)v85 + 2);
        if (v89 >= v93)
          goto LABEL_134;
        v11 = v85;
        v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        v42 = v88;
        *((_QWORD *)v85 + 2) = v93 - 1;
        v10 = v92;
        v9 = v107;
        if (v93 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v106;
    if (v9 >= v106)
    {
      v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105))
    goto LABEL_153;
  if (v13 + v105 >= v3)
    v32 = v3;
  else
    v32 = v13 + v105;
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      v33 = (_QWORD *)(v10 + 16 * v9);
      do
      {
        v34 = (uint64_t *)(v10 + 16 * v9);
        v35 = *v34;
        v36 = v34[1];
        v37 = v13;
        v38 = v33;
        do
        {
          v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1BC818694() & 1) == 0)
            break;
          if (!v10)
            goto LABEL_156;
          v35 = *v38;
          v36 = v38[1];
          *(_OWORD *)v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  result = sub_1BC8184A8();
  __break(1u);
  return result;
}

uint64_t sub_1BC7DBF40(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  BOOL v13;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = result;
    v7 = *a4;
    v8 = *a4 + 16 * a3;
LABEL_5:
    v9 = (uint64_t *)(v7 + 16 * v4);
    result = *v9;
    v10 = v9[1];
    v11 = v6;
    v12 = (uint64_t *)v8;
    while (1)
    {
      v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (result = sub_1BC818694(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v7)
        break;
      result = *v12;
      v10 = v12[1];
      *(_OWORD *)v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BC7DC00C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  BOOL v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t result;
  char *v25;
  char *v26;
  char *v27;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 15;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v27 = __src;
  v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v17 = &v4[16 * v13];
      v25 = v17;
      v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v18 = (char *)(a3 - 16);
        v19 = v6;
        while (1)
        {
          v20 = v18 + 16;
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v19 -= 16;
          v23 = *((_QWORD *)v17 - 2) == v21 && *((_QWORD *)v17 - 1) == v22;
          if (v23 || (sub_1BC818694() & 1) == 0)
          {
            v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17)
              *(_OWORD *)v18 = *((_OWORD *)v17 - 1);
            v19 = v6;
            v17 -= 16;
            if (v6 <= v7)
              goto LABEL_50;
          }
          else
          {
            if (v20 != v6 || v18 >= v6)
              *(_OWORD *)v18 = *(_OWORD *)v19;
            v27 = v19;
            if (v19 <= v7)
              goto LABEL_50;
          }
          v18 -= 16;
          v6 = v19;
          if (v17 <= v4)
            goto LABEL_50;
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[16 * v10];
    v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        v15 = *(_QWORD *)v6 == *(_QWORD *)v4 && *((_QWORD *)v6 + 1) == *((_QWORD *)v4 + 1);
        if (v15 || (sub_1BC818694() & 1) == 0)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 16;
          v26 = v4;
          v16 = v6;
        }
        else
        {
          v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 16;
        if (v4 >= v14)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v27 = v7;
    }
LABEL_50:
    sub_1BC7DC440((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  result = sub_1BC818538();
  __break(1u);
  return result;
}

char *sub_1BC7DC2A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BC7DD358();
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1BC7DC398(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_1BC818538();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_1BC7DC440(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_1BC818538();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

char *sub_1BC7DC4E8(uint64_t a1)
{
  return sub_1BC7DC2A4(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC7DC4FC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  void *v8;
  _QWORD v10[2];

  v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    v7 = sub_1BC7DC67C((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    v7 = sub_1BC7DC67C((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1BCCF5BA4](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1BC7DC67C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t v28;
  unint64_t i;
  unint64_t v30;
  _QWORD *v31;
  BOOL v32;
  BOOL v33;
  int64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  BOOL v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  unint64_t *v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  int64_t v63;

  v4 = a4;
  v5 = a3;
  v57 = (unint64_t *)result;
  if (*(_QWORD *)(a4 + 16) < *(_QWORD *)(a3 + 16))
  {
    v6 = 0;
    v58 = a4 + 56;
    v7 = 1 << *(_BYTE *)(a4 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(a4 + 56);
    v59 = (unint64_t)(v7 + 63) >> 6;
    v61 = 0;
    v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          v62 = v6;
          v12 = v11 | (v6 << 6);
        }
        else
        {
          v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59)
            goto LABEL_79;
          v14 = *(_QWORD *)(v58 + 8 * v13);
          v15 = v6 + 1;
          if (!v14)
          {
            v15 = v6 + 2;
            if (v6 + 2 >= v59)
              goto LABEL_79;
            v14 = *(_QWORD *)(v58 + 8 * v15);
            if (!v14)
            {
              v15 = v6 + 3;
              if (v6 + 3 >= v59)
                goto LABEL_79;
              v14 = *(_QWORD *)(v58 + 8 * v15);
              if (!v14)
              {
                v16 = v6 + 4;
                if (v6 + 4 >= v59)
                  goto LABEL_79;
                v14 = *(_QWORD *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    v15 = v16 + 1;
                    if (__OFADD__(v16, 1))
                      goto LABEL_83;
                    if (v15 >= v59)
                      goto LABEL_79;
                    v14 = *(_QWORD *)(v58 + 8 * v15);
                    ++v16;
                    if (v14)
                      goto LABEL_22;
                  }
                }
                v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          v9 = (v14 - 1) & v14;
          v62 = v15;
          v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v12);
        v19 = *v17;
        v18 = v17[1];
        sub_1BC81873C();
        swift_bridgeObjectRetain();
        sub_1BC817B30();
        v20 = sub_1BC818778();
        v21 = -1 << *(_BYTE *)(v5 + 32);
        v22 = v20 & ~v21;
        v23 = v22 >> 6;
        v24 = 1 << v22;
        if (((1 << v22) & *(_QWORD *)(v10 + 8 * (v22 >> 6))) != 0)
          break;
LABEL_6:
        result = swift_bridgeObjectRelease();
        v6 = v62;
        v5 = a3;
        v4 = a4;
      }
      v25 = *(_QWORD *)(a3 + 48);
      v26 = (_QWORD *)(v25 + 16 * v22);
      v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1BC818694() & 1) == 0)
      {
        v28 = ~v21;
        for (i = v22 + 1; ; i = v30 + 1)
        {
          v30 = i & v28;
          if (((*(_QWORD *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0)
            break;
          v31 = (_QWORD *)(v25 + 16 * v30);
          v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1BC818694() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v23 = v30 >> 6;
            v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      result = swift_bridgeObjectRelease();
LABEL_38:
      v6 = v62;
      v5 = a3;
      v57[v23] |= v24;
      v33 = __OFADD__(v61++, 1);
      v4 = a4;
      if (v33)
        goto LABEL_82;
    }
  }
  v34 = 0;
  v60 = a3 + 56;
  v61 = 0;
  v35 = 1 << *(_BYTE *)(a3 + 32);
  if (v35 < 64)
    v36 = ~(-1 << v35);
  else
    v36 = -1;
  v37 = v36 & *(_QWORD *)(a3 + 56);
  v63 = (unint64_t)(v35 + 63) >> 6;
  v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      v34 = v41 + 1;
      if (v41 + 1 >= v63)
        goto LABEL_79;
      v42 = *(_QWORD *)(v60 + 8 * v34);
      if (!v42)
      {
        v34 = v41 + 2;
        if (v41 + 2 >= v63)
          goto LABEL_79;
        v42 = *(_QWORD *)(v60 + 8 * v34);
        if (!v42)
          break;
      }
    }
LABEL_62:
    v37 = (v42 - 1) & v42;
    v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v40);
    v46 = *v44;
    v45 = v44[1];
    sub_1BC81873C();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    v47 = sub_1BC818778();
    v48 = -1 << *(_BYTE *)(v4 + 32);
    v49 = v47 & ~v48;
    if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
      goto LABEL_46;
    v50 = *(_QWORD *)(a4 + 48);
    v51 = (_QWORD *)(v50 + 16 * v49);
    v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1BC818694() & 1) != 0)
    {
LABEL_76:
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      v33 = __OFADD__(v61++, 1);
      v5 = a3;
      v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_1BC7E5D58(v57, a2, v61, v5);
      }
    }
    else
    {
      v53 = ~v48;
      while (1)
      {
        v49 = (v49 + 1) & v53;
        if (((*(_QWORD *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFF8)) >> v49) & 1) == 0)
          break;
        v54 = (_QWORD *)(v50 + 16 * v49);
        v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1BC818694() & 1) != 0)
          goto LABEL_76;
      }
LABEL_46:
      result = swift_bridgeObjectRelease();
      v5 = a3;
      v4 = a4;
    }
  }
  v43 = v41 + 3;
  if (v43 >= v63)
    goto LABEL_79;
  v42 = *(_QWORD *)(v60 + 8 * v43);
  if (v42)
  {
    v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    v34 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v34 >= v63)
      goto LABEL_79;
    v42 = *(_QWORD *)(v60 + 8 * v34);
    ++v43;
    if (v42)
      goto LABEL_62;
  }
LABEL_84:
  __break(1u);
  return result;
}

void sub_1BC7DCBB8(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1BC7DCBE0(a1, a2, a3, &qword_1EF45CE98, (void (*)(uint64_t))type metadata accessor for FeedItem);
}

void sub_1BC7DCBCC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1BC7DCBE0(a1, a2, a3, &qword_1EF45CE88, (void (*)(uint64_t))type metadata accessor for FeedSection);
}

void sub_1BC7DCBE0(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  char *v18;
  unint64_t v19;
  _QWORD *v20;
  void (*v21)(uint64_t *__return_ptr, _OWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t *__return_ptr, _OWORD *);
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  _QWORD *v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  const void *v38;
  BOOL v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t *v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  _OWORD v49[2];
  __int128 v50;
  uint64_t v51;
  _BYTE v52[32];

  v44 = a4;
  v45 = a5;
  sub_1BC7DD284(0, a4, a5);
  v9 = v8;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v43 - v10;
  v12 = (uint64_t)objc_msgSend(a1, sel_count);
  if (v12 <= 0)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v16 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 24);
  }
  else
  {
    sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v16 = (2 * (v15 >> 3)) | 1;
    v13[2] = v12;
    v13[3] = v16;
  }
  v17 = a1;
  swift_retain();
  sub_1BC817E54();

  v18 = &v11[*(int *)(v9 + 44)];
  *(_QWORD *)v18 = a2;
  *((_QWORD *)v18 + 1) = a3;
  if (v12 < 0)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v19 = v16 >> 1;
  v20 = v13 + 4;
  if (v12)
  {
    v19 -= v12;
    sub_1BC816D68();
    sub_1BC6E1788(&qword_1EF45CE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
    do
    {
      sub_1BC81813C();
      v21 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v18;
      sub_1BC7AFD7C((uint64_t)v52, (uint64_t)&v50);
      if (!v51)
        goto LABEL_36;
      sub_1BC6EFBDC(&v50, v49);
      v21(&v48, v49);
      v22 = v48;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      *v20++ = v22;
    }
    while (--v12);
  }
  v23 = sub_1BC816D68();
  v24 = sub_1BC6E1788(&qword_1EF45CE90, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFB58], MEMORY[0x1E0CAFB80]);
  sub_1BC81813C();
  v25 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v18;
  sub_1BC7AFD7C((uint64_t)v52, (uint64_t)&v50);
  if (v51)
  {
    v46 = MEMORY[0x1E0DEE9B0] + 8;
    v47 = v11;
    while (1)
    {
      sub_1BC6EFBDC(&v50, v49);
      v25(&v48, v49);
      v26 = v48;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
      if (!v19)
      {
        v27 = v13[3];
        if ((uint64_t)((v27 >> 1) + 0x4000000000000000) < 0)
          goto LABEL_33;
        v28 = v24;
        v29 = v23;
        v30 = v27 & 0xFFFFFFFFFFFFFFFELL;
        if (v30 <= 1)
          v31 = 1;
        else
          v31 = v30;
        sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BA580, v46, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v32 = (_QWORD *)swift_allocObject();
        v33 = _swift_stdlib_malloc_size(v32);
        v34 = v33 - 32;
        if (v33 < 32)
          v34 = v33 - 25;
        v35 = v34 >> 3;
        v32[2] = v31;
        v32[3] = (2 * (v34 >> 3)) | 1;
        v36 = (unint64_t)(v32 + 4);
        v37 = v13[3] >> 1;
        if (v13[2])
        {
          v38 = v13 + 4;
          if (v32 != v13 || v36 >= (unint64_t)v38 + 8 * v37)
            memmove(v32 + 4, v38, 8 * v37);
          v13[2] = 0;
        }
        v20 = (_QWORD *)(v36 + 8 * v37);
        v19 = (v35 & 0x7FFFFFFFFFFFFFFFLL) - v37;
        swift_release();
        v13 = v32;
        v23 = v29;
        v24 = v28;
        v11 = v47;
      }
      v39 = __OFSUB__(v19--, 1);
      if (v39)
        break;
      *v20++ = v26;
      sub_1BC81813C();
      v25 = *(void (**)(uint64_t *__return_ptr, _OWORD *))v18;
      sub_1BC7AFD7C((uint64_t)v52, (uint64_t)&v50);
      if (!v51)
        goto LABEL_28;
    }
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_28:
  sub_1BC7DD31C((uint64_t)v11, v44, v45);
  v40 = v13[3];
  if (v40 >= 2)
  {
    v41 = v40 >> 1;
    v39 = __OFSUB__(v41, v19);
    v42 = v41 - v19;
    if (v39)
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      return;
    }
    v13[2] = v42;
  }
}

void sub_1BC7DCF94()
{
  JUMPOUT(0x1BCCF5304);
}

uint64_t sub_1BC7DCFA8(uint64_t a1)
{
  return sub_1BC6E8DE8(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1BC7DCFBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BC80657C(a1);
  *a2 = result;
  return result;
}

uint64_t _s14HealthPlatform11FeedSectionC03getD10Identifier4fromSSSgShySSG_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  _QWORD *v7;

  swift_bridgeObjectRetain();
  v2 = sub_1BC731B80((uint64_t)&unk_1E7516540);
  swift_arrayDestroy();
  sub_1BC7DC4FC(v2, a1);
  swift_bridgeObjectRelease();
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1BC7060D8(v3);
  swift_release();
  v7 = v4;
  sub_1BC7DB7F0((uint64_t *)&v7);
  swift_release();
  if (v7[2])
  {
    v5 = v7[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
  }
  swift_release();
  return v5;
}

uint64_t _s14HealthPlatform17ForYouSectionKindO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1BC818568();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1BC7DD110()
{
  unint64_t result;

  result = qword_1EF45CE70;
  if (!qword_1EF45CE70)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for ForYouSectionKind, &type metadata for ForYouSectionKind);
    atomic_store(result, (unint64_t *)&qword_1EF45CE70);
  }
  return result;
}

unint64_t sub_1BC7DD158()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45CE78;
  if (!qword_1EF45CE78)
  {
    sub_1BC6E1E98(255, &qword_1EF45CE80, (uint64_t)&type metadata for ForYouSectionKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45CE78);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ForYouSectionKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC7DD204 + 4 * byte_1BC822191[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC7DD238 + 4 * byte_1BC82218C[v4]))();
}

uint64_t sub_1BC7DD238(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7DD240(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7DD248);
  return result;
}

uint64_t sub_1BC7DD254(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7DD25CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC7DD260(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7DD268(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ForYouSectionKind()
{
  return &type metadata for ForYouSectionKind;
}

void sub_1BC7DD284(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BC7156B4();
    a3(255);
    sub_1BC6E1788(&qword_1ED6B84A0, (uint64_t (*)(uint64_t))sub_1BC7156B4, MEMORY[0x1E0CB1D30]);
    v5 = sub_1BC8183C4();
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BC7DD31C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  sub_1BC7DD284(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1BC7DD358()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8798)
  {
    sub_1BC7DD3AC();
    v0 = sub_1BC81867C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8798);
  }
}

void sub_1BC7DD3AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8498)
  {
    v0 = sub_1BC817E30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8498);
  }
}

id HealthAppOrchestrationListener.__allocating_init(listener:coordinator:)(void *a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  objc_class *v4;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  objc_super v14;

  v4 = v3;
  v7 = (char *)objc_allocWithZone(v4);
  v8 = &v7[OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_coordinator];
  *(_QWORD *)&v7[OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_coordinator + 8] = 0;
  swift_unknownObjectWeakInit();
  v9 = OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_protectedState;
  sub_1BC7DD61C();
  v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v7[v9] = v10;
  *(_QWORD *)&v7[OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_listener] = a1;
  *((_QWORD *)v8 + 1) = a3;
  swift_unknownObjectWeakAssign();
  v14.receiver = v7;
  v14.super_class = v4;
  v11 = a1;
  v12 = objc_msgSendSuper2(&v14, sel_init);
  objc_msgSend(v11, sel_setDelegate_, v12, v14.receiver, v14.super_class);

  swift_unknownObjectRelease();
  return v12;
}

id HealthAppOrchestrationListener.init(listener:coordinator:)(void *a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  objc_super v13;

  v6 = &v3[OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_coordinator];
  *(_QWORD *)&v3[OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_coordinator + 8] = 0;
  swift_unknownObjectWeakInit();
  v7 = OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_protectedState;
  sub_1BC7DD61C();
  v8 = swift_allocObject();
  *(_DWORD *)(v8 + 24) = 0;
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v3[v7] = v8;
  *(_QWORD *)(v8 + 16) = v9;
  *(_QWORD *)&v3[OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_listener] = a1;
  *((_QWORD *)v6 + 1) = a3;
  swift_unknownObjectWeakAssign();
  v13.receiver = v3;
  v13.super_class = (Class)type metadata accessor for HealthAppOrchestrationListener();
  v10 = a1;
  v11 = objc_msgSendSuper2(&v13, sel_init);
  objc_msgSend(v10, sel_setDelegate_, v11, v13.receiver, v13.super_class);

  swift_unknownObjectRelease();
  return v11;
}

void sub_1BC7DD61C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B63A0)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B63A0);
  }
}

uint64_t type metadata accessor for HealthAppOrchestrationListener()
{
  return objc_opt_self();
}

uint64_t sub_1BC7DD698(uint64_t a1, void *a2)
{
  return sub_1BC7DD8D0(a2);
}

uint64_t sub_1BC7DD6A0(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v3 = *a1;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_1BC726290(0, v3[2] + 1, 1, v3);
  v5 = v3[2];
  v4 = v3[3];
  if (v5 >= v4 >> 1)
    v3 = sub_1BC726290((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
  v3[2] = v5 + 1;
  v6 = &v3[2 * v5];
  v6[4] = sub_1BC7DDD84;
  v6[5] = v2;
  result = swift_release();
  *a1 = v3;
  return result;
}

id HealthAppOrchestrationListener.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void HealthAppOrchestrationListener.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id HealthAppOrchestrationListener.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthAppOrchestrationListener();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BC7DD8D0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  NSObject *v15;
  uint64_t v16;
  id v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;
  id v22;
  id v23;
  NSObject *v24;
  id v25;
  os_unfair_lock_s *v26;
  os_unfair_lock_s *v27;
  os_unfair_lock_s *v28;
  _QWORD *v29;
  _OWORD v30[2];

  v2 = v1;
  v4 = v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_coordinator;
  result = MEMORY[0x1BCCF5C70](v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_coordinator);
  if (result)
  {
    v6 = result;
    v7 = *(_QWORD *)(v4 + 8);
    v8 = (void *)sub_1BC817AC4();
    v9 = objc_msgSend(a1, sel_valueForEntitlement_, v8);

    if (v9)
    {
      sub_1BC818178();
      swift_unknownObjectRelease();
      sub_1BC6EF7BC((uint64_t)v30);
      if (qword_1ED6BB1F8 != -1)
        swift_once();
      v10 = sub_1BC817590();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB228);
      v11 = a1;
      v12 = sub_1BC81756C();
      v13 = sub_1BC817E9C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v29 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v14 = 138412290;
        *(_QWORD *)&v30[0] = v11;
        v15 = v11;
        sub_1BC818148();
        *v29 = v11;

        _os_log_impl(&dword_1BC6DD000, v12, v13, "Accepting orchestration connection %@", v14, 0xCu);
        sub_1BC6EFA40();
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v29, -1, -1);
        MEMORY[0x1BCCF5BA4](v14, -1, -1);
      }
      else
      {

        v12 = v11;
      }

      v23 = objc_allocWithZone((Class)type metadata accessor for HealthAppOrchestrationServer());
      v24 = v11;
      swift_unknownObjectRetain();
      v25 = HealthAppOrchestrationServer.init(connection:coordinator:)(v24, v6, v7);
      v26 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC14HealthPlatform30HealthAppOrchestrationListener_protectedState);
      v27 = v26 + 4;
      v28 = v26 + 6;
      os_unfair_lock_lock(v26 + 6);
      sub_1BC7DD6A0(v27);
      os_unfair_lock_unlock(v28);

      swift_unknownObjectRelease();
      return 1;
    }
    else
    {
      memset(v30, 0, sizeof(v30));
      sub_1BC6EF7BC((uint64_t)v30);
      if (qword_1ED6BB1F8 != -1)
        swift_once();
      v16 = sub_1BC817590();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED6BB228);
      v17 = a1;
      v18 = sub_1BC81756C();
      v19 = sub_1BC817E84();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        v21 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v20 = 138412290;
        *(_QWORD *)&v30[0] = v17;
        v22 = v17;
        sub_1BC818148();
        *v21 = v17;

        _os_log_impl(&dword_1BC6DD000, v18, v19, "Rejecting connection %@ due to missing entitlement", v20, 0xCu);
        sub_1BC6EFA40();
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v21, -1, -1);
        MEMORY[0x1BCCF5BA4](v20, -1, -1);
        swift_unknownObjectRelease();

      }
      else
      {

        swift_unknownObjectRelease();
      }
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for HealthAppOrchestrationListener()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of HealthAppOrchestrationListener.__allocating_init(listener:coordinator:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of HealthAppOrchestrationListener.listener(_:shouldAcceptNewConnection:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

ValueMetadata *type metadata accessor for HealthAppOrchestrationListener.State()
{
  return &type metadata for HealthAppOrchestrationListener.State;
}

uint64_t sub_1BC7DDD3C(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

uint64_t sub_1BC7DDD60()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BC7DDD84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  swift_beginAccess();
  result = MEMORY[0x1BCCF5C70](v1 + 16);
  *a1 = result;
  return result;
}

uint64_t sub_1BC7DDDCC()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyGenerationInputSignal()
{
  return objc_opt_self();
}

uint64_t sub_1BC7DDE18()
{
  return sub_1BC8173E0();
}

uint64_t sub_1BC7DDE34(uint64_t a1)
{
  return sub_1BC7DDF64(a1);
}

uint64_t sub_1BC7DDE54(uint64_t a1, uint64_t a2)
{
  sub_1BC6F0A44(&qword_1ED6B7EF8, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationInputSignal, (uint64_t)&unk_1BC822344);
  return sub_1BC8171AC();
}

uint64_t sub_1BC7DDE94(uint64_t a1, uint64_t a2)
{
  return sub_1BC6F0A44(&qword_1ED6B9490, a2, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationInputSignal, (uint64_t)&unk_1BC82231C);
}

uint64_t sub_1BC7DDEC0()
{
  return sub_1BC6F0A44(&qword_1ED6B7FA0, 255, (uint64_t (*)(uint64_t))sub_1BC7DDEF0, MEMORY[0x1E0D2CF00]);
}

void sub_1BC7DDEF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B6328)
  {
    v0 = sub_1BC8171DC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B6328);
  }
}

uint64_t sub_1BC7DDF64(uint64_t a1)
{
  double v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  CFAbsoluteTime Current;

  v3 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v3);
  sub_1BC7DE14C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7DDEF0();
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7DE1A0(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_1BC8173E0();
    Current = CFAbsoluteTimeGetCurrent();
    sub_1BC8171D0();
    sub_1BC7DE1E4((uint64_t)v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v6, v8);
  }
  swift_getObjectType();
  Current = v1;
  sub_1BC6F0A44(&qword_1ED6B7EF8, v12, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationInputSignal, (uint64_t)&unk_1BC822344);
  sub_1BC817374();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_1BC7DE14C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B7FA8)
  {
    sub_1BC7DDEF0();
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B7FA8);
  }
}

uint64_t sub_1BC7DE1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BC7DE14C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BC7DE1E4(uint64_t a1)
{
  uint64_t v2;

  sub_1BC7DE14C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static Int.alphabeticalSortHint.getter()
{
  return 0;
}

Swift::Void __swiftcall Int.moveUp()()
{
  _QWORD *v0;

  if (__OFADD__(*v0, 1))
    __break(1u);
  else
    ++*v0;
}

Swift::Void __swiftcall Int.moveDown()()
{
  _QWORD *v0;

  if (__OFSUB__(*v0, 1))
    __break(1u);
  else
    --*v0;
}

id PluginFeedItem.NotificationIdentifier.sourceProfile.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t PluginFeedItem.NotificationIdentifier.pluginIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.NotificationIdentifier.pluginIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*PluginFeedItem.NotificationIdentifier.pluginIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t PluginFeedItem.NotificationIdentifier.feedItemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.NotificationIdentifier.notificationIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PluginFeedItem.NotificationIdentifier.init(sourceProfile:pluginIdentifier:feedItemIdentifier:notificationIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a3;
  a8[3] = a4;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t PluginFeedItem.NotificationIdentifier.description.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v1 = sub_1BC816F3C();
  v8 = *(_QWORD *)(v1 - 8);
  v9 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v10 = 0;
  v11 = 0xE000000000000000;
  sub_1BC8182C8();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_bridgeObjectRetain();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v5, sel_identifier);
    sub_1BC816F24();

    sub_1BC816F00();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v3, v9);
  }
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t PluginFeedItem.NotificationIdentifier.hash(into:)()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  if (*v0)
  {
    sub_1BC818748();
    v2 = v1;
    sub_1BC8180DC();

  }
  else
  {
    sub_1BC818748();
  }
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7DE624(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BC7DE664 + 4 * byte_1BC8223C0[a1]))(0x7250656372756F73, 0xED0000656C69666FLL);
}

unint64_t sub_1BC7DE664()
{
  return 0xD000000000000010;
}

unint64_t sub_1BC7DE680()
{
  return 0xD000000000000012;
}

uint64_t sub_1BC7DE6B8()
{
  unsigned __int8 *v0;

  return sub_1BC7DE624(*v0);
}

uint64_t sub_1BC7DE6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7DF424(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BC7DE6E4()
{
  sub_1BC7DEF54();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7DE70C()
{
  sub_1BC7DEF54();
  return sub_1BC818808();
}

uint64_t PluginFeedItem.NotificationIdentifier.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[7];
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;

  sub_1BC7DEF98(0, &qword_1EF45CF28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v14 - v7;
  v10 = *v1;
  v9 = v1[1];
  v14[5] = v1[2];
  v14[6] = v9;
  v11 = v1[3];
  v14[3] = v1[4];
  v14[4] = v11;
  v12 = v1[5];
  v14[1] = v1[6];
  v14[2] = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7DEF54();
  sub_1BC8187F0();
  v19 = v10;
  v18 = 0;
  sub_1BC7D0948();
  sub_1BC818634();
  if (!v2)
  {
    v17 = 1;
    sub_1BC818604();
    v16 = 2;
    sub_1BC818604();
    v15 = 3;
    sub_1BC818604();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t PluginFeedItem.NotificationIdentifier.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC818748();
  if (v1)
  {
    v2 = v1;
    sub_1BC8180DC();

  }
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

void PluginFeedItem.NotificationIdentifier.init(from:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  _QWORD *v31;
  char v32;
  char v33;
  char v34;
  char v35;
  id v36;

  sub_1BC7DEF98(0, &qword_1EF45CF38, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v27 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7DEF54();
  sub_1BC8187E4();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v35 = 0;
    sub_1BC7D0A94();
    sub_1BC8185C8();
    v31 = a2;
    v10 = v36;
    v34 = 1;
    v11 = v36;
    v12 = sub_1BC818598();
    v14 = v13;
    v29 = v12;
    v30 = v10;
    v33 = 2;
    swift_bridgeObjectRetain();
    v15 = sub_1BC818598();
    v17 = v16;
    v27 = v15;
    v32 = 3;
    swift_bridgeObjectRetain();
    v28 = v17;
    v18 = sub_1BC818598();
    v20 = v19;
    v21 = v18;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v22 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();

    swift_bridgeObjectRelease();
    v23 = v31;
    v25 = v28;
    v24 = v29;
    *v31 = v30;
    v23[1] = v24;
    v26 = v27;
    v23[2] = v14;
    v23[3] = v26;
    v23[4] = v25;
    v23[5] = v21;
    v23[6] = v20;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
}

void sub_1BC7DECB4(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  PluginFeedItem.NotificationIdentifier.init(from:)(a1, a2);
}

uint64_t sub_1BC7DECC8(_QWORD *a1)
{
  return PluginFeedItem.NotificationIdentifier.encode(to:)(a1);
}

uint64_t sub_1BC7DECE4()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1BC81873C();
  sub_1BC818748();
  if (v1)
  {
    v2 = v1;
    sub_1BC8180DC();

  }
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  swift_bridgeObjectRelease();
  return sub_1BC818778();
}

uint64_t _s14HealthPlatform14PluginFeedItemV22NotificationIdentifierV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  char v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t result;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v8 = *(void **)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)a1)
  {
    if (v8)
    {
      v23 = *(_QWORD *)(a2 + 48);
      v24 = *(_QWORD *)(a2 + 40);
      v25 = *(_QWORD *)(a1 + 48);
      v26 = *(_QWORD *)(a1 + 40);
      v22 = *(_QWORD *)(a2 + 24);
      v12 = *(_QWORD *)(a1 + 24);
      v13 = *(_QWORD *)(a2 + 32);
      sub_1BC6E1404();
      v14 = v2;
      v15 = v8;
      v16 = sub_1BC8180D0();

      v11 = v13;
      v5 = v12;
      v10 = v22;
      if ((v16 & 1) != 0)
        goto LABEL_4;
    }
    return 0;
  }
  v23 = *(_QWORD *)(a2 + 48);
  v24 = *(_QWORD *)(a2 + 40);
  v25 = *(_QWORD *)(a1 + 48);
  v26 = *(_QWORD *)(a1 + 40);
  if (v8)
    return 0;
LABEL_4:
  if (v3 == v7 && v4 == v9 || (v17 = v11, v18 = sub_1BC818694(), v11 = v17, v19 = v18, result = 0, (v19 & 1) != 0))
  {
    if (v5 == v10 && v6 == v11 || (v21 = sub_1BC818694(), result = 0, (v21 & 1) != 0))
    {
      if (v26 == v24 && v25 == v23)
        return 1;
      else
        return sub_1BC818694();
    }
  }
  return result;
}

unint64_t sub_1BC7DEF54()
{
  unint64_t result;

  result = qword_1EF45CF30;
  if (!qword_1EF45CF30)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC8225AC, &_s22NotificationIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF45CF30);
  }
  return result;
}

void sub_1BC7DEF98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BC7DEF54();
    v7 = a3(a1, &_s22NotificationIdentifierV10CodingKeysON, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BC7DEFF8()
{
  unint64_t result;

  result = qword_1EF45CF40;
  if (!qword_1EF45CF40)
  {
    result = MEMORY[0x1BCCF5AB4](&protocol conformance descriptor for PluginFeedItem.NotificationIdentifier, &type metadata for PluginFeedItem.NotificationIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EF45CF40);
  }
  return result;
}

uint64_t _s22NotificationIdentifierVwxx(id *a1)
{

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s22NotificationIdentifierVwcp(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v6;
  a1[6] = *(_QWORD *)(a2 + 48);
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22NotificationIdentifierVwca(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a1;
  v5 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v5;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22NotificationIdentifierVwta(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[6];
  *(_QWORD *)(a1 + 40) = a2[5];
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22NotificationIdentifierVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t _s22NotificationIdentifierVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PluginFeedItem.NotificationIdentifier()
{
  return &type metadata for PluginFeedItem.NotificationIdentifier;
}

uint64_t _s22NotificationIdentifierV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BC7DF2CC + 4 * byte_1BC8223C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BC7DF300 + 4 * byte_1BC8223C4[v4]))();
}

uint64_t sub_1BC7DF300(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7DF308(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BC7DF310);
  return result;
}

uint64_t sub_1BC7DF31C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BC7DF324);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BC7DF328(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BC7DF330(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s22NotificationIdentifierV10CodingKeysOMa()
{
  return &_s22NotificationIdentifierV10CodingKeysON;
}

unint64_t sub_1BC7DF350()
{
  unint64_t result;

  result = qword_1EF45CF48;
  if (!qword_1EF45CF48)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC822584, &_s22NotificationIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF45CF48);
  }
  return result;
}

unint64_t sub_1BC7DF398()
{
  unint64_t result;

  result = qword_1EF45CF50;
  if (!qword_1EF45CF50)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC8224F4, &_s22NotificationIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF45CF50);
  }
  return result;
}

unint64_t sub_1BC7DF3E0()
{
  unint64_t result;

  result = qword_1EF45CF58;
  if (!qword_1EF45CF58)
  {
    result = MEMORY[0x1BCCF5AB4](&unk_1BC82251C, &_s22NotificationIdentifierV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EF45CF58);
  }
  return result;
}

uint64_t sub_1BC7DF424(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7250656372756F73 && a2 == 0xED0000656C69666FLL;
  if (v2 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BC82B840 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BC82B860 || (sub_1BC818694() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BC82B880)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BC818694();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

double sub_1BC7DF5E8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v2 = *(_QWORD *)(a1 + 24);
  if (*(_BYTE *)a1 != 1 || v2 && *(_BYTE *)(a1 + 32) == 1)
  {
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(_OWORD *)(a1 + 8);
    v5 = *(_OWORD *)(a1 + 32);
    v6 = *(_OWORD *)(a1 + 48);
    v7 = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)a2 = v4;
    *(_QWORD *)(a2 + 16) = v2;
    *(_OWORD *)(a2 + 24) = v5;
    *(_OWORD *)(a2 + 40) = v6;
    *(_OWORD *)(a2 + 56) = v7;
    *(_QWORD *)(a2 + 72) = v3;
  }
  else
  {
    *(_QWORD *)&v4 = 0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return *(double *)&v4;
}

uint64_t sub_1BC7DF660(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t result;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24[5];
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[8];
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;

  v3 = a1[3];
  if (v3)
  {
    v5 = a1[9];
    v4 = a1[10];
    v6 = a1[7];
    v23 = a1[8];
    v8 = a1[5];
    v7 = a1[6];
    v9 = a1[4];
    v11 = a1[1];
    v10 = a1[2];
    v25 = v11 & 1;
    v26 = v10;
    v27 = v3;
    v28 = v9 & 1;
    v29 = v8;
    v30 = v7;
    v31 = v6;
    v32 = v23;
    v33 = v5;
    v34 = v4;
    v12 = *(_OWORD *)(a2 + 48);
    v24[2] = *(_OWORD *)(a2 + 32);
    v24[3] = v12;
    v24[4] = *(_OWORD *)(a2 + 64);
    v13 = *(_OWORD *)(a2 + 16);
    v24[0] = *(_OWORD *)a2;
    v24[1] = v13;
    sub_1BC79FF48(v24, (uint64_t)v35);
    result = sub_1BC6F07B0(v11, v10, v3);
    v15 = v40;
    *(_OWORD *)(a1 + 5) = v39;
    v16 = v36;
    v17 = v37;
    v18 = v38;
    a1[1] = v35[0];
    a1[2] = v16;
    a1[3] = v17;
    a1[4] = v18;
    *(_OWORD *)(a1 + 7) = v15;
    *(_OWORD *)(a1 + 9) = v41;
  }
  else
  {
    v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 32);
    v20 = *(_BYTE *)(a2 + 24) & 1;
    v22 = *(_QWORD *)(a2 + 8);
    v21 = *(_QWORD *)(a2 + 16);
    a1[1] = *(_BYTE *)a2 & 1;
    a1[2] = v22;
    a1[3] = v21;
    a1[4] = v20;
    *(_OWORD *)(a1 + 7) = v19;
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 64);
    return sub_1BC7A5AF8(a2);
  }
  return result;
}

uint64_t sub_1BC7DF7AC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t LegacyGenerationProvider.__allocating_init(environmentalState:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  LegacyGenerationProvider.init(environmentalState:)();
  return v0;
}

uint64_t LegacyGenerationProvider.init(environmentalState:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for LegacyGenerationProvider.RequestedGenerationState();
  v1 = swift_allocObject();
  sub_1BC7DF908();
  v2 = swift_allocObject();
  *(_BYTE *)(v2 + 16) = 0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_DWORD *)(v2 + 104) = 0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v0 + 16) = v1;
  sub_1BC7DF964();
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v0 + 24) = v3;
  sub_1BC6F0A44(&qword_1ED6B7E18, v4, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationProvider, (uint64_t)&protocol conformance descriptor for LegacyGenerationProvider);
  swift_retain();
  sub_1BC81747C();
  swift_release();
  swift_release();
  return v0;
}

uint64_t type metadata accessor for LegacyGenerationProvider.RequestedGenerationState()
{
  return objc_opt_self();
}

void sub_1BC7DF908()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B63A8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B63A8);
  }
}

void sub_1BC7DF964()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8668)
  {
    sub_1BC7DF9C8();
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8668);
  }
}

void sub_1BC7DF9C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B7F00)
  {
    type metadata accessor for LegacyGenerationInputSignal();
    v0 = sub_1BC818130();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B7F00);
  }
}

uint64_t type metadata accessor for LegacyGenerationProvider()
{
  return objc_opt_self();
}

void LegacyGenerationProvider.requestBackgroundGeneration(request:)(_OWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  __int128 v10;
  os_unfair_lock_s *v11;
  os_unfair_lock_s *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  double v16;
  CFAbsoluteTime Current;
  _OWORD v18[5];

  v3 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v3);
  sub_1BC7DDEF0();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v18[2] = a1[2];
  v18[3] = v9;
  v18[4] = a1[4];
  v10 = a1[1];
  v18[0] = *a1;
  v18[1] = v10;
  v11 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  v12 = v11 + 4;
  v13 = v11 + 26;
  os_unfair_lock_lock(v11 + 26);
  sub_1BC7DF660(v12, (uint64_t)v18);
  os_unfair_lock_unlock(v13);
  v14 = *(_QWORD *)(v1 + 24);
  v15 = (os_unfair_lock_s *)(v14 + 24);
  os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
  v16 = *(double *)(v14 + 16);
  swift_retain();
  os_unfair_lock_unlock(v15);
  if (v16 != 0.0)
  {
    swift_getObjectType();
    sub_1BC8173E0();
    Current = CFAbsoluteTimeGetCurrent();
    sub_1BC8171D0();
    Current = v16;
    type metadata accessor for LegacyGenerationInputSignal();
    sub_1BC6F0A44(&qword_1ED6B7EF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationInputSignal, (uint64_t)&unk_1BC822344);
    sub_1BC817374();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
  }
}

Swift::Void __swiftcall LegacyGenerationProvider.didUpdate(environmentalState:)(Swift::OpaquePointer environmentalState)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  double v16;
  uint64_t v17;
  CFAbsoluteTime Current;

  v2 = sub_1BC8173EC();
  MEMORY[0x1E0C80A78](v2);
  sub_1BC7DDEF0();
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BC8174F4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC817AE8();
  sub_1BC8174C4();
  swift_bridgeObjectRelease();
  v12 = sub_1BC8174DC() & 1;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 104));
  if (v12 == *(unsigned __int8 *)(v13 + 16))
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 104));
  }
  else
  {
    *(_BYTE *)(v13 + 16) = v12;
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 104));
    v14 = *(_QWORD *)(v1 + 24);
    v15 = (os_unfair_lock_s *)(v14 + 24);
    os_unfair_lock_lock((os_unfair_lock_t)(v14 + 24));
    v16 = *(double *)(v14 + 16);
    swift_retain();
    os_unfair_lock_unlock(v15);
    if (v16 != 0.0)
    {
      swift_getObjectType();
      sub_1BC8173E0();
      Current = CFAbsoluteTimeGetCurrent();
      sub_1BC8171D0();
      Current = v16;
      type metadata accessor for LegacyGenerationInputSignal();
      sub_1BC6F0A44(&qword_1ED6B7EF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationInputSignal, (uint64_t)&unk_1BC822344);
      sub_1BC817374();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_release();
    }
  }
}

uint64_t LegacyGenerationProvider.inputSignals(for:observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t ObjectType;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void *v15;
  void *v16;
  id v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  char v22;
  os_unfair_lock_s *v23;
  os_unfair_lock_s *v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v28;

  v5 = v4;
  swift_getObjectType();
  v9 = swift_conformsToProtocol2();
  if (v9)
    v10 = v9;
  else
    v10 = 0;
  if (v9)
    v11 = a1;
  else
    v11 = 0;
  if (v11)
  {
    ObjectType = swift_getObjectType();
    v13 = *(_QWORD *)(v10 + 8);
    v14 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
    swift_unknownObjectRetain();
    v15 = (void *)v14(ObjectType, v13);
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, sel_profileIdentifier);

    }
    else
    {
      v17 = 0;
    }
    v19 = objc_msgSend((id)objc_opt_self(), sel_primaryProfile);
    v20 = v19;
    if (v17)
    {
      if (v19)
      {
        sub_1BC7E0138();
        v21 = v17;
        v22 = sub_1BC8180D0();

        if ((v22 & 1) == 0)
          goto LABEL_20;
LABEL_17:
        v23 = *(os_unfair_lock_s **)(v5 + 24);
        v24 = v23 + 4;
        v25 = v23 + 6;
        os_unfair_lock_lock(v23 + 6);
        sub_1BC7E0094(v24, a3, a4, v11, v10, &v28);
        os_unfair_lock_unlock(v25);
        v26 = v28;
        sub_1BC6ED238(0, &qword_1ED6B8748, &qword_1ED6B7F98);
        v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1BC81A0F0;
        *(_QWORD *)(v18 + 56) = type metadata accessor for LegacyGenerationInputSignal();
        *(_QWORD *)(v18 + 64) = sub_1BC6F0A44(&qword_1ED6B7EF8, 255, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationInputSignal, (uint64_t)&unk_1BC822344);
        *(_QWORD *)(v18 + 32) = v26;
LABEL_21:
        swift_unknownObjectRelease();
        return v18;
      }
      v20 = v17;
    }
    else if (!v19)
    {
      goto LABEL_17;
    }

LABEL_20:
    v18 = MEMORY[0x1E0DEE9D8];
    goto LABEL_21;
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BC7E0094@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  _QWORD *v8;
  _QWORD *v9;

  v8 = (_QWORD *)*a1;
  if (v8)
  {
    v9 = v8;
  }
  else
  {
    type metadata accessor for LegacyGenerationInputSignal();
    v9 = (_QWORD *)swift_allocObject();
    v9[2] = a2;
    v9[3] = a3;
    v9[4] = a4;
    v9[5] = a5;
    *a1 = v9;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
  }
  *a6 = v9;
  return swift_retain();
}

unint64_t sub_1BC7E0138()
{
  unint64_t result;

  result = qword_1ED6BB1E0;
  if (!qword_1ED6BB1E0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED6BB1E0);
  }
  return result;
}

unint64_t LegacyGenerationProvider.identifier.getter()
{
  return 0xD000000000000029;
}

uint64_t LegacyGenerationProvider.executors(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t ObjectType;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  void *v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v2 = v1;
  swift_getObjectType();
  v4 = swift_conformsToProtocol2();
  if (v4)
    v5 = v4;
  else
    v5 = 0;
  if (v4)
    v6 = a1;
  else
    v6 = 0;
  if (!v6)
    return MEMORY[0x1E0DEE9D8];
  ObjectType = swift_getObjectType();
  v8 = *(_QWORD *)(v5 + 8);
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 16);
  swift_unknownObjectRetain();
  v10 = (void *)v9(ObjectType, v8);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend(v10, sel_profileIdentifier);

  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend((id)objc_opt_self(), sel_primaryProfile);
  v14 = v13;
  if (!v12)
  {
    if (!v13)
      goto LABEL_16;
LABEL_18:

LABEL_19:
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  if (!v13)
  {
    v14 = v12;
    goto LABEL_18;
  }
  sub_1BC7E0138();
  v15 = v12;
  v16 = sub_1BC8180D0();

  if ((v16 & 1) == 0)
    goto LABEL_19;
LABEL_16:
  sub_1BC6ED238(0, &qword_1ED6B8778, &qword_1ED6B8010);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BC81A0F0;
  v18 = *(_QWORD *)(v2 + 16);
  type metadata accessor for LegacyGenerationExecutor();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = v18;
  v19[3] = v6;
  v19[4] = v5;
  v20 = sub_1BC6F0A44(&qword_1ED6B7E10, 255, (uint64_t (*)(uint64_t))type metadata accessor for LegacyGenerationExecutor, (uint64_t)&unk_1BC81A264);
  *(_QWORD *)(v17 + 32) = v19;
  *(_QWORD *)(v17 + 40) = v20;
  swift_retain();
  return v17;
}

uint64_t LegacyGenerationProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t LegacyGenerationProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1BC7E03AC()
{
  return 0xD000000000000029;
}

uint64_t sub_1BC7E03C8(uint64_t a1)
{
  return LegacyGenerationProvider.executors(for:)(a1);
}

uint64_t sub_1BC7E03E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return LegacyGenerationProvider.inputSignals(for:observer:)(a1, a2, a3, a4);
}

uint64_t method lookup function for LegacyGenerationProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LegacyGenerationProvider.__allocating_init(environmentalState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t destroy for LegacyGenerationProvider.RequestedGenerationState.State(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 24);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for LegacyGenerationProvider.RequestedGenerationState.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v3;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    v4 = *(_QWORD *)(a2 + 80);
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    *(_QWORD *)(a1 + 80) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    v5 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v5;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    v6 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for LegacyGenerationProvider.RequestedGenerationState.State(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24))
  {
    if (v6)
    {
      *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v7 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v7;
      swift_retain();
      swift_release();
      v8 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v8;
      swift_retain();
      swift_release();
      v9 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v9;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_1BC7E06B8(a1 + 8);
      *v4 = *v5;
      v13 = v5[4];
      v15 = v5[1];
      v14 = v5[2];
      v4[3] = v5[3];
      v4[4] = v13;
      v4[1] = v15;
      v4[2] = v14;
    }
  }
  else if (v6)
  {
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v10;
    v11 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v11;
    v12 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  else
  {
    *v4 = *v5;
    v16 = *(_OWORD *)(a2 + 24);
    v17 = *(_OWORD *)(a2 + 40);
    v18 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v18;
    *(_OWORD *)(a1 + 24) = v16;
    *(_OWORD *)(a1 + 40) = v17;
  }
  return a1;
}

uint64_t sub_1BC7E06B8(uint64_t a1)
{
  destroy for GenerationWorkRequest();
  return a1;
}

uint64_t assignWithTake for LegacyGenerationProvider.RequestedGenerationState.State(uint64_t a1, uint64_t a2)
{
  _OWORD *v3;
  _OWORD *v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = (_OWORD *)(a1 + 8);
  v4 = (_OWORD *)(a2 + 8);
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_5;
  v6 = *(_QWORD *)(a2 + 24);
  if (!v6)
  {
    sub_1BC7E06B8(a1 + 8);
LABEL_5:
    v7 = v4[3];
    v3[2] = v4[2];
    v3[3] = v7;
    v3[4] = v4[4];
    v8 = v4[1];
    *v3 = *v4;
    v3[1] = v8;
    return a1;
  }
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LegacyGenerationProvider.RequestedGenerationState.State(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 88))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacyGenerationProvider.RequestedGenerationState.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 88) = 0;
    if (a2)
      *(_QWORD *)(result + 24) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyGenerationProvider.RequestedGenerationState.State()
{
  return &type metadata for LegacyGenerationProvider.RequestedGenerationState.State;
}

uint64_t sub_1BC7E0894(uint64_t a1, uint64_t a2)
{
  return sub_1BC7E0A90(a1, a2, DataVisualizationKind.rawValue.getter);
}

uint64_t sub_1BC7E08A0(uint64_t a1, uint64_t a2)
{
  return sub_1BC7E0A90(a1, a2, ContentKind.rawValue.getter);
}

void sub_1BC7E08AC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BC7E08EC(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1BC7E0944 + 4 * byte_1BC822705[a2]))(7954788);
}

uint64_t sub_1BC7E0944(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 7954788 && v1 == 0xE300000000000000)
    v2 = 1;
  else
    v2 = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_1BC7E09E4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656D6F7268436F6ELL;
  else
    v3 = 0x656D6F726863;
  if (v2)
    v4 = 0xE600000000000000;
  else
    v4 = 0xE800000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656D6F7268436F6ELL;
  else
    v5 = 0x656D6F726863;
  if ((a2 & 1) != 0)
    v6 = 0xE800000000000000;
  else
    v6 = 0xE600000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1BC7E0A84(uint64_t a1, uint64_t a2)
{
  return sub_1BC7E0A90(a1, a2, LogCategory.rawValue.getter);
}

uint64_t sub_1BC7E0A90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1BC818694();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t PluginFeedItem.hasChanged(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;

  v13 = type metadata accessor for PluginFeedItem();
  v3 = MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v3);
  v12[2] = (char *)v12 - v4;
  v5 = type metadata accessor for RelevantDateInterval();
  MEMORY[0x1E0C80A78](v5);
  sub_1BC7243BC();
  MEMORY[0x1E0C80A78](v6);
  sub_1BC6ECA64(0, (unint64_t *)&unk_1ED6BB2A0, (uint64_t (*)(uint64_t))type metadata accessor for RelevantDateInterval, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v12[3] = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v10);
  if (*v1 == *a1 && v1[1] == a1[1] || (sub_1BC818694() & 1) != 0)
    __asm { BR              X11 }
  return 1;
}

uint64_t Array<A>.difference(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL8 v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  char v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t (*v42)();
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  _BOOL8 v46;
  uint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t result;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;

  v4 = type metadata accessor for PluginFeedItem();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v98 = (uint64_t)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v97 = (uint64_t *)((char *)&v92 - v9);
  v10 = MEMORY[0x1E0C80A78](v8);
  v103 = (unint64_t)&v92 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (uint64_t)&v92 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (unint64_t)&v92 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (uint64_t *)((char *)&v92 - v18);
  v20 = sub_1BC7114C4(MEMORY[0x1E0DEE9D8]);
  v95 = a2;
  v96 = v20;
  v21 = *(_QWORD *)(a2 + 16);
  v100 = v14;
  v101 = v21;
  v93 = a1;
  v94 = v5;
  if (!v21)
  {
LABEL_17:
    v17 = sub_1BC7114C4(MEMORY[0x1E0DEE9D8]);
    v41 = *(_QWORD *)(a1 + 16);
    if (v41)
    {
      v28 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      isUniquelyReferenced_nonNull_native = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain();
      v42 = type metadata accessor for PluginFeedItem;
      v24 = v17;
      while (1)
      {
        v102 = v41;
        v17 = isUniquelyReferenced_nonNull_native;
        sub_1BC6ECB08(v28, v14, (uint64_t (*)(_QWORD))v42);
        v43 = *(_QWORD *)v14;
        v30 = *(_QWORD *)(v14 + 8);
        v21 = (unint64_t)v42;
        sub_1BC6ECB08(v14, v103, (uint64_t (*)(_QWORD))v42);
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v104 = v24;
        v45 = sub_1BC706608(v43, v30);
        v31 = *(_QWORD *)(v24 + 16);
        v46 = (v44 & 1) == 0;
        v47 = v31 + v46;
        if (__OFADD__(v31, v46))
          break;
        v14 = v44;
        if (*(_QWORD *)(v24 + 24) >= v47)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_1BC70C678();
        }
        else
        {
          sub_1BC70A318(v47, isUniquelyReferenced_nonNull_native);
          v48 = sub_1BC706608(v43, v30);
          if ((v14 & 1) != (v49 & 1))
            goto LABEL_82;
          v45 = v48;
        }
        isUniquelyReferenced_nonNull_native = v17;
        v24 = v104;
        if ((v14 & 1) != 0)
        {
          sub_1BC7E7478(v103, *(_QWORD *)(v104 + 56) + v45 * v17);
          v42 = (uint64_t (*)())v21;
        }
        else
        {
          *(_QWORD *)(v104 + 8 * (v45 >> 6) + 64) |= 1 << v45;
          v50 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 16 * v45);
          *v50 = v43;
          v50[1] = v30;
          v51 = *(_QWORD *)(v24 + 56) + v45 * v17;
          v42 = (uint64_t (*)())v21;
          sub_1BC6ECBA4(v103, v51, (uint64_t (*)(_QWORD))v21);
          v52 = *(_QWORD *)(v24 + 16);
          v40 = __OFADD__(v52, 1);
          v31 = v52 + 1;
          if (v40)
            goto LABEL_78;
          *(_QWORD *)(v24 + 16) = v31;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v14 = v100;
        sub_1BC6ED784(v100, (uint64_t (*)(_QWORD))v42);
        v28 += v17;
        v41 = v102 - 1;
        if (v102 == 1)
        {
          v17 = v24;
          swift_bridgeObjectRelease();
          v5 = v94;
          a2 = v95;
          goto LABEL_31;
        }
      }
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
LABEL_31:
    v53 = swift_bridgeObjectRetain();
    v14 = sub_1BC6E3A50(v53);
    v54 = swift_bridgeObjectRetain();
    v55 = sub_1BC6E3A50(v54);
    v28 = v55;
    v56 = v101;
    if (*(_QWORD *)(v14 + 16) != v101)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v24 = sub_1BC711684(MEMORY[0x1E0DEE9D8]);
      if (!v56)
      {
LABEL_53:
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BC7E5594(v24);
        swift_bridgeObjectRelease();
        sub_1BC76B128();
        swift_allocError();
        *(_QWORD *)v77 = isUniquelyReferenced_nonNull_native;
        *(_BYTE *)(v77 + 8) = 0;
        swift_willThrow();
        return isUniquelyReferenced_nonNull_native;
      }
      v103 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v21 = a2 + v103;
      v102 = *(_QWORD *)(v5 + 72);
      swift_bridgeObjectRetain();
      v14 = (uint64_t)type metadata accessor for PluginFeedItem;
      v59 = v97;
      isUniquelyReferenced_nonNull_native = v98;
      while (1)
      {
        v101 = v56;
        sub_1BC6ECB08(v21, (uint64_t)v59, (uint64_t (*)(_QWORD))v14);
        v60 = *v59;
        v28 = v59[1];
        v17 = v14;
        sub_1BC6ECB08((uint64_t)v59, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))v14);
        swift_bridgeObjectRetain();
        v61 = swift_isUniquelyReferenced_nonNull_native();
        v104 = v24;
        v30 = sub_1BC706608(v60, v28);
        v31 = *(_QWORD *)(v24 + 16);
        v63 = (v62 & 1) == 0;
        v64 = v31 + v63;
        if (__OFADD__(v31, v63))
          goto LABEL_79;
        v14 = v62;
        if (*(_QWORD *)(v24 + 24) >= v64)
        {
          if ((v61 & 1) == 0)
          {
            sub_1BC70C654();
            v24 = v104;
          }
        }
        else
        {
          sub_1BC70A2F4(v64, v61);
          v24 = v104;
          v65 = sub_1BC706608(v60, v28);
          if ((v14 & 1) != (v66 & 1))
            goto LABEL_82;
          v30 = v65;
        }
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          *(_QWORD *)(v24 + 8 * (v30 >> 6) + 64) |= 1 << v30;
          v67 = (uint64_t *)(*(_QWORD *)(v24 + 48) + 16 * v30);
          *v67 = v60;
          v67[1] = v28;
          *(_QWORD *)(*(_QWORD *)(v24 + 56) + 8 * v30) = MEMORY[0x1E0DEE9D8];
          v68 = *(_QWORD *)(v24 + 16);
          v40 = __OFADD__(v68, 1);
          v31 = v68 + 1;
          if (v40)
            goto LABEL_80;
          *(_QWORD *)(v24 + 16) = v31;
          swift_bridgeObjectRetain();
        }
        v69 = *(_QWORD *)(v24 + 56);
        v70 = *(_QWORD *)(v69 + 8 * v30);
        v71 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v69 + 8 * v30) = v70;
        if ((v71 & 1) == 0)
        {
          v70 = sub_1BC7262A4(0, *(_QWORD *)(v70 + 16) + 1, 1, v70);
          *(_QWORD *)(v69 + 8 * v30) = v70;
        }
        v73 = *(_QWORD *)(v70 + 16);
        v72 = *(_QWORD *)(v70 + 24);
        if (v73 >= v72 >> 1)
        {
          v70 = sub_1BC7262A4(v72 > 1, v73 + 1, 1, v70);
          *(_QWORD *)(v69 + 8 * v30) = v70;
        }
        *(_QWORD *)(v70 + 16) = v73 + 1;
        v74 = v70 + v103;
        v75 = v102;
        v76 = v74 + v73 * v102;
        isUniquelyReferenced_nonNull_native = v98;
        v14 = v17;
        sub_1BC6ECBA4(v98, v76, (uint64_t (*)(_QWORD))v17);
        swift_bridgeObjectRelease();
        v59 = v97;
        sub_1BC6ED784((uint64_t)v97, (uint64_t (*)(_QWORD))v17);
        v21 += v75;
        v56 = v101 - 1;
        if (v101 == 1)
        {
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
      }
    }
    if (v101 <= *(_QWORD *)(v55 + 16) >> 3)
    {
      v104 = v55;
      swift_bridgeObjectRetain();
      sub_1BC7E5400(v14);
      v57 = v104;
      if (*(_QWORD *)(v104 + 16))
      {
LABEL_34:
        v24 = (uint64_t)sub_1BC7060D8(v57);
        swift_bridgeObjectRelease();
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BC7262B8(0, 1, 1, MEMORY[0x1E0DEE9D8]);
        v21 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
        v31 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 24);
        v30 = v21 + 1;
        if (v21 < v31 >> 1)
        {
LABEL_35:
          *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v30;
          v58 = isUniquelyReferenced_nonNull_native + 40 * v21;
          *(_QWORD *)(v58 + 32) = v24;
          *(_QWORD *)(v58 + 40) = 0;
          *(_QWORD *)(v58 + 48) = 0;
          *(_QWORD *)(v58 + 56) = 0;
          *(_BYTE *)(v58 + 64) = 32;
          goto LABEL_56;
        }
LABEL_81:
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BC7262B8((_QWORD *)(v31 > 1), v30, 1, (_QWORD *)isUniquelyReferenced_nonNull_native);
        goto LABEL_35;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      v57 = sub_1BC7E6260(v14, v28);
      if (*(_QWORD *)(v57 + 16))
        goto LABEL_34;
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = MEMORY[0x1E0DEE9D8];
LABEL_56:
    if (*(_QWORD *)(v28 + 16) <= *(_QWORD *)(v14 + 16) >> 3)
    {
      v104 = v14;
      swift_bridgeObjectRetain();
      sub_1BC7E5400(v28);
      swift_bridgeObjectRelease();
      v78 = v104;
    }
    else
    {
      swift_bridgeObjectRetain();
      v78 = sub_1BC7E6260(v28, v14);
      swift_bridgeObjectRelease();
    }
    if (!*(_QWORD *)(v78 + 16))
      goto LABEL_66;
    v79 = v96;
    swift_bridgeObjectRetain();
    v80 = sub_1BC7E69BC(v78, v79);
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BC7262B8(0, *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) + 1, 1, (_QWORD *)isUniquelyReferenced_nonNull_native);
    v82 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
    v81 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 24);
    if (v82 >= v81 >> 1)
      isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BC7262B8((_QWORD *)(v81 > 1), v82 + 1, 1, (_QWORD *)isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v82 + 1;
    v83 = isUniquelyReferenced_nonNull_native + 40 * v82;
    *(_QWORD *)(v83 + 32) = v80;
    *(_QWORD *)(v83 + 40) = 0;
    *(_QWORD *)(v83 + 48) = 0;
    *(_QWORD *)(v83 + 56) = 0;
    *(_BYTE *)(v83 + 64) = 0;
    if (*(_QWORD *)(v78 + 16) > *(_QWORD *)(v14 + 16) >> 3)
    {
      v84 = sub_1BC7E6260(v78, v14);
      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_66:
      v104 = v14;
      sub_1BC7E5400(v78);
      swift_bridgeObjectRelease();
      v84 = v104;
    }
    v85 = v96;
    swift_bridgeObjectRetain();
    v86 = sub_1BC7E724C(v84, v85, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v86 + 16))
    {
      swift_bridgeObjectRetain();
      v87 = sub_1BC7E69BC(v86, v85);
      swift_release();
      swift_bridgeObjectRelease_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BC7262B8(0, *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) + 1, 1, (_QWORD *)isUniquelyReferenced_nonNull_native);
      v89 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
      v88 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 24);
      if (v89 >= v88 >> 1)
        isUniquelyReferenced_nonNull_native = (uint64_t)sub_1BC7262B8((_QWORD *)(v88 > 1), v89 + 1, 1, (_QWORD *)isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v89 + 1;
      v90 = isUniquelyReferenced_nonNull_native + 40 * v89;
      *(_QWORD *)(v90 + 32) = v87;
      *(_QWORD *)(v90 + 40) = 0;
      *(_QWORD *)(v90 + 48) = 0;
      *(_QWORD *)(v90 + 56) = 0;
      *(_BYTE *)(v90 + 64) = 0;
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    return isUniquelyReferenced_nonNull_native;
  }
  v14 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v22 = *(_QWORD *)(v5 + 72);
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = v96;
  v99 = v19;
  v102 = v22;
  while (1)
  {
    sub_1BC6ECB08(v14, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v26 = *v19;
    v25 = v19[1];
    v27 = (uint64_t)v19;
    v28 = v17;
    sub_1BC6ECB08(v27, v17, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    swift_bridgeObjectRetain();
    v24 = isUniquelyReferenced_nonNull_native;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v104 = v24;
    v30 = sub_1BC706608(v26, v25);
    v31 = *(_QWORD *)(v24 + 16);
    v32 = (v29 & 1) == 0;
    v33 = v31 + v32;
    if (__OFADD__(v31, v32))
    {
      __break(1u);
      goto LABEL_76;
    }
    v34 = v29;
    if (*(_QWORD *)(v24 + 24) < v33)
      break;
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      isUniquelyReferenced_nonNull_native = v104;
      if ((v29 & 1) == 0)
        goto LABEL_12;
    }
    else
    {
      sub_1BC70C678();
      isUniquelyReferenced_nonNull_native = v104;
      if ((v34 & 1) == 0)
      {
LABEL_12:
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8 * (v30 >> 6) + 64) |= 1 << v30;
        v37 = (uint64_t *)(*(_QWORD *)(isUniquelyReferenced_nonNull_native + 48) + 16 * v30);
        *v37 = v26;
        v37[1] = v25;
        v24 = v102;
        v38 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + v30 * v102;
        v17 = v28;
        v30 = (unint64_t)type metadata accessor for PluginFeedItem;
        sub_1BC6ECBA4(v28, v38, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        v39 = *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16);
        v40 = __OFADD__(v39, 1);
        v31 = v39 + 1;
        if (v40)
          goto LABEL_77;
        *(_QWORD *)(isUniquelyReferenced_nonNull_native + 16) = v31;
        swift_bridgeObjectRetain();
        goto LABEL_4;
      }
    }
LABEL_3:
    v24 = v102;
    v17 = v28;
    sub_1BC7E7478(v28, *(_QWORD *)(isUniquelyReferenced_nonNull_native + 56) + v30 * v102);
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v99;
    sub_1BC6ED784((uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
    v14 += v24;
    if (!--v21)
    {
      v96 = isUniquelyReferenced_nonNull_native;
      a2 = v95;
      swift_bridgeObjectRelease();
      a1 = v93;
      v5 = v94;
      v14 = v100;
      goto LABEL_17;
    }
  }
  sub_1BC70A318(v33, isUniquelyReferenced_nonNull_native);
  v35 = sub_1BC706608(v26, v25);
  if ((v34 & 1) == (v36 & 1))
  {
    v30 = v35;
    isUniquelyReferenced_nonNull_native = v104;
    if ((v34 & 1) == 0)
      goto LABEL_12;
    goto LABEL_3;
  }
LABEL_82:
  result = sub_1BC8186E8();
  __break(1u);
  return result;
}

void *sub_1BC7E1F60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BC731F28();
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E210C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC7323D8(0, &qword_1EF45B3B0, (unint64_t *)&qword_1ED6BB1D0, 0x1E0CB6978, (unint64_t *)&qword_1ED6B97F8);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 3;
  if (v19 >= v12)
    goto LABEL_25;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1BC7E22D4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BC7324FC(0, &qword_1EF45B460, (uint64_t (*)(uint64_t))type metadata accessor for DataType, (unint64_t *)&unk_1ED6BA3F0, MEMORY[0x1E0DEFCF8]);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E2498()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BC7324FC(0, &qword_1EF45B458, (uint64_t (*)(uint64_t))type metadata accessor for Keyword, &qword_1ED6BA730, MEMORY[0x1E0DEFCF8]);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC7E265C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = type metadata accessor for UserProfile();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7324FC(0, &qword_1ED6B85F0, v6, &qword_1ED6BA320, (uint64_t)&protocol conformance descriptor for UserProfile);
  v7 = *v0;
  v8 = sub_1BC818280();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v9;
    return result;
  }
  v26 = v1;
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_28;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v18)
          goto LABEL_28;
        v23 = *(_QWORD *)(v11 + 8 * v14);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v3 + 72) * v20;
    sub_1BC6ECB08(*(_QWORD *)(v7 + 48) + v21, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
    result = (void *)sub_1BC6ECBA4((uint64_t)v5, *(_QWORD *)(v9 + 48) + v21, (uint64_t (*)(_QWORD))type metadata accessor for UserProfile);
  }
  v24 = v22 + 3;
  if (v24 >= v18)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_30;
  }
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1BC7E2898()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BC7324FC(0, &qword_1EF45B410, (uint64_t (*)(uint64_t))type metadata accessor for Profile, &qword_1ED6BA3E8, MEMORY[0x1E0DEFCF8]);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC7E2A5C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  sub_1BC7324A4(0, &qword_1EF45B450, (void (*)(void))sub_1BC6ED6FC);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E2C20()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BC7324FC(0, &qword_1EF45B448, (uint64_t (*)(uint64_t))type metadata accessor for SharableModelReference, &qword_1ED6BA728, MEMORY[0x1E0DEFCF8]);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E2DE4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BC7324FC(0, &qword_1ED6B8600, (uint64_t (*)(uint64_t))type metadata accessor for EncodedFeatureTag, &qword_1ED6BA708, MEMORY[0x1E0DEFCF8]);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E2FA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC7323D8(0, &qword_1ED6B6500, (unint64_t *)&qword_1ED6BA4B0, 0x1E0C97B90, &qword_1ED6BA4B8);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 3;
  if (v19 >= v12)
    goto LABEL_25;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1BC7E3170()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BC7324FC(0, &qword_1EF45B440, (uint64_t (*)(uint64_t))type metadata accessor for FeedItem, &qword_1EF45AFC0, MEMORY[0x1E0DEFCF8]);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E3334()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC7323D8(0, &qword_1ED6B8608, &qword_1ED6B6360, 0x1E0CB6B00, &qword_1ED6B6368);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 3;
  if (v19 >= v12)
    goto LABEL_25;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1BC7E34FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC7324FC(0, &qword_1ED6B96E0, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, &qword_1ED6B9690, (uint64_t)&unk_1BC819870);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 3;
  if (v19 >= v12)
    goto LABEL_25;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1BC7E36C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BC7324A4(0, &qword_1ED6B8D40, (void (*)(void))sub_1BC6ED43C);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E3868()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC7323D8(0, &qword_1EF45B3A8, &qword_1ED6B6390, 0x1E0CB6C90, &qword_1ED6B8578);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 3;
  if (v19 >= v12)
    goto LABEL_25;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1BC7E3A30()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  id v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  sub_1BC7324A4(0, &qword_1EF45B400, (void (*)(void))sub_1BC6ED3A4);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v13)
      goto LABEL_28;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_28;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
      {
        v9 = v26 + 2;
        if (v26 + 2 >= v13)
          goto LABEL_28;
        v27 = *(_QWORD *)(v6 + 8 * v9);
        if (!v27)
          break;
      }
    }
LABEL_27:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 56 * v15;
    v17 = *(_QWORD *)(v2 + 48) + v16;
    v19 = *(_QWORD *)(v17 + 16);
    v18 = *(_QWORD *)(v17 + 24);
    v21 = *(_QWORD *)(v17 + 32);
    v20 = *(_QWORD *)(v17 + 40);
    v22 = *(_QWORD *)(v17 + 48);
    v23 = *(_QWORD *)(v4 + 48) + v16;
    v24 = *(_OWORD *)v17;
    *(_OWORD *)v23 = *(_OWORD *)v17;
    *(_QWORD *)(v23 + 16) = v19;
    *(_QWORD *)(v23 + 24) = v18;
    *(_QWORD *)(v23 + 32) = v21;
    *(_QWORD *)(v23 + 40) = v20;
    *(_QWORD *)(v23 + 48) = v22;
    v25 = (id)v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 3;
  if (v28 >= v13)
    goto LABEL_28;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1BC7E3C34()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = sub_1BC816F3C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7324FC(0, &qword_1EF45B3F8, v6, &qword_1ED6BA298, MEMORY[0x1E0CB09C8]);
  v7 = *v0;
  v8 = sub_1BC818280();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v9;
    return result;
  }
  v26 = v1;
  result = (void *)(v8 + 56);
  v11 = v7 + 56;
  v12 = (unint64_t)((1 << *(_BYTE *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v12)
    result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  v14 = 0;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 56);
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v22);
    ++v14;
    if (!v23)
    {
      v14 = v22 + 1;
      if (v22 + 1 >= v18)
        goto LABEL_28;
      v23 = *(_QWORD *)(v11 + 8 * v14);
      if (!v23)
      {
        v14 = v22 + 2;
        if (v22 + 2 >= v18)
          goto LABEL_28;
        v23 = *(_QWORD *)(v11 + 8 * v14);
        if (!v23)
          break;
      }
    }
LABEL_27:
    v17 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_12:
    v21 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v7 + 48) + v21, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v9 + 48) + v21, v5, v2);
  }
  v24 = v22 + 3;
  if (v24 >= v18)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_30;
  }
  v23 = *(_QWORD *)(v11 + 8 * v24);
  if (v23)
  {
    v14 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v18)
      goto LABEL_28;
    v23 = *(_QWORD *)(v11 + 8 * v14);
    ++v24;
    if (v23)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1BC7E3E74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  sub_1BC7324A4(0, &qword_1ED6B85F8, (void (*)(void))sub_1BC6ED30C);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E4030()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC7323D8(0, &qword_1ED6B96D8, &qword_1ED6B9658, 0x1E0CB6A70, (unint64_t *)&qword_1ED6B9660);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 3;
  if (v19 >= v12)
    goto LABEL_25;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1BC7E41F8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  sub_1BC7324A4(0, &qword_1EF45B3D0, (void (*)(void))sub_1BC73201C);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_BYTE *)(*(_QWORD *)(v4 + 48) + v15) = *(_BYTE *)(*(_QWORD *)(v2 + 48) + v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1BC7E439C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v1 = v0;
  sub_1BC7323D8(0, &qword_1EF45B3B8, (unint64_t *)&qword_1ED6B85C0, 0x1E0CB6B70, &qword_1ED6B85D0);
  v2 = *v0;
  v3 = sub_1BC818280();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_25:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v6 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v8 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v9 = 1 << *(_BYTE *)(v2 + 32);
  v10 = -1;
  if (v9 < 64)
    v10 = ~(-1 << v9);
  v11 = v10 & *(_QWORD *)(v2 + 56);
  v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v14 = v13 | (v8 << 6);
      goto LABEL_9;
    }
    v17 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v17 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v8;
    if (!v18)
    {
      v8 = v17 + 1;
      if (v17 + 1 >= v12)
        goto LABEL_25;
      v18 = *(_QWORD *)(v6 + 8 * v8);
      if (!v18)
      {
        v8 = v17 + 2;
        if (v17 + 2 >= v12)
          goto LABEL_25;
        v18 = *(_QWORD *)(v6 + 8 * v8);
        if (!v18)
          break;
      }
    }
LABEL_24:
    v11 = (v18 - 1) & v18;
    v14 = __clz(__rbit64(v18)) + (v8 << 6);
LABEL_9:
    v15 = 8 * v14;
    v16 = *(void **)(*(_QWORD *)(v2 + 48) + v15);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v15) = v16;
    result = v16;
  }
  v19 = v17 + 3;
  if (v19 >= v12)
    goto LABEL_25;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v8 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v8 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v8 >= v12)
      goto LABEL_25;
    v18 = *(_QWORD *)(v6 + 8 * v8);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BC7E4564(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_1BC818238();

    if ((v5 & 1) != 0)
    {
      v6 = sub_1BC7E4A88();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BC8180C4();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  type metadata accessor for EncodedFeatureTag();
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_1BC8180D0();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_1BC8180D0();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BC7E2DE4();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_1BC7E4DA8(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BC7E4728(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  id v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  char v11;
  uint64_t v12;
  id v13;
  char v14;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v18;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    v4 = a1;
    v5 = sub_1BC818238();

    if ((v5 & 1) != 0)
    {
      v6 = sub_1BC7E4C10();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v7 = sub_1BC8180C4();
  v8 = -1 << *(_BYTE *)(v3 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    goto LABEL_12;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4B0);
  v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
  v11 = sub_1BC8180D0();

  if ((v11 & 1) == 0)
  {
    v12 = ~v8;
    do
    {
      v9 = (v9 + 1) & v12;
      if (((*(_QWORD *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_12;
      v13 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v9);
      v14 = sub_1BC8180D0();

    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v16 = *v1;
  v18 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BC7E2FA8();
    v16 = v18;
  }
  v6 = *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * v9);
  sub_1BC7E4DA8(v9);
  *v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BC7E48FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1BC81873C();
  swift_bridgeObjectRetain();
  sub_1BC817B30();
  v6 = sub_1BC818778();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1BC818694() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1BC818694() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1BC7E1F60();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1BC7E4F48(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1BC7E4A88()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1BC8181FC();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1BC729AB0(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_1BC8180C4();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    type metadata accessor for EncodedFeatureTag();
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_1BC8180D0();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1BC7E4DA8(v7);
      if ((sub_1BC8180D0() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_1BC8180D0();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1BC7E4C10()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  id v8;
  char v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  v1 = v0;
  swift_bridgeObjectRelease();
  v2 = sub_1BC8181FC();
  v3 = swift_unknownObjectRetain();
  v4 = sub_1BC729CE0(v3, v2);
  v15 = v4;
  swift_retain();
  v5 = sub_1BC8180C4();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4B0);
    v8 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
    v9 = sub_1BC8180D0();

    if ((v9 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v13 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v7);
      sub_1BC7E4DA8(v7);
      if ((sub_1BC8180D0() & 1) != 0)
      {
        *v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      v10 = ~v6;
      while (1)
      {
        v7 = (v7 + 1) & v10;
        if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          break;
        v11 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v7);
        v12 = sub_1BC8180D0();

        if ((v12 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1BC7E4DA8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1BC8180C4();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1BC7E4F48(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1BC818190();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1BC81873C();
        swift_bridgeObjectRetain();
        sub_1BC817B30();
        v10 = sub_1BC818778();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_1BC7E510C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  if ((*(_QWORD *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_1BC8181FC())
      return;
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1BC8181C0();
      sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4B0);
      sub_1BC6EFB34(&qword_1ED6BA4B8, (unint64_t *)&qword_1ED6BA4B0);
      sub_1BC817DB8();
      a1 = v20;
      v18 = v21;
      v3 = v22;
      v4 = v23;
      v5 = v24;
    }
    else
    {
      v6 = -1 << *(_BYTE *)(a1 + 32);
      v18 = a1 + 56;
      v3 = ~v6;
      v7 = -v6;
      if (v7 < 64)
        v8 = ~(-1 << v7);
      else
        v8 = -1;
      v5 = v8 & *(_QWORD *)(a1 + 56);
      swift_bridgeObjectRetain();
      v4 = 0;
    }
    v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0)
      goto LABEL_14;
    while (1)
    {
      if (v5)
      {
        v10 = (v5 - 1) & v5;
        v11 = __clz(__rbit64(v5)) | (v4 << 6);
        v12 = v4;
      }
      else
      {
        v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9)
          goto LABEL_36;
        v15 = *(_QWORD *)(v18 + 8 * v14);
        v12 = v4 + 1;
        if (!v15)
        {
          v12 = v4 + 2;
          if (v4 + 2 >= v9)
            goto LABEL_36;
          v15 = *(_QWORD *)(v18 + 8 * v12);
          if (!v15)
          {
            v12 = v4 + 3;
            if (v4 + 3 >= v9)
              goto LABEL_36;
            v15 = *(_QWORD *)(v18 + 8 * v12);
            if (!v15)
            {
              v12 = v4 + 4;
              if (v4 + 4 >= v9)
                goto LABEL_36;
              v15 = *(_QWORD *)(v18 + 8 * v12);
              if (!v15)
              {
                v12 = v4 + 5;
                if (v4 + 5 >= v9)
                  goto LABEL_36;
                v15 = *(_QWORD *)(v18 + 8 * v12);
                if (!v15)
                {
                  v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    v15 = *(_QWORD *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_1BC6ECC4C();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        v10 = (v15 - 1) & v15;
        v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      v13 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v11);
      if (!v13)
        goto LABEL_36;
      while (1)
      {
        v17 = (void *)sub_1BC7E4728(v13);

        v4 = v12;
        v5 = v10;
        if ((a1 & 0x8000000000000000) == 0)
          break;
LABEL_14:
        if (sub_1BC81822C())
        {
          sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4B0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          v13 = v19;
          swift_unknownObjectRelease();
          v12 = v4;
          v10 = v5;
          if (v19)
            continue;
        }
        goto LABEL_36;
      }
    }
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    goto LABEL_5;
}

uint64_t sub_1BC7E5400(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return result;
  v2 = result;
  v3 = result + 56;
  v4 = 1 << *(_BYTE *)(result + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(result + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v14 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      v8 = v14 + 1;
      if (v14 + 1 >= v7)
        return swift_release();
      v15 = *(_QWORD *)(v3 + 8 * v8);
      if (!v15)
      {
        v8 = v14 + 2;
        if (v14 + 2 >= v7)
          return swift_release();
        v15 = *(_QWORD *)(v3 + 8 * v8);
        if (!v15)
        {
          v8 = v14 + 3;
          if (v14 + 3 >= v7)
            return swift_release();
          v15 = *(_QWORD *)(v3 + 8 * v8);
          if (!v15)
            break;
        }
      }
    }
LABEL_23:
    v6 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    v11 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1BC7E48FC(v12, v13);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v7)
    return swift_release();
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
    v8 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v8 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v8 >= v7)
      return swift_release();
    v15 = *(_QWORD *)(v3 + 8 * v8);
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

unint64_t *sub_1BC7E5594(uint64_t isStackAllocationSafe)
{
  uint64_t v1;
  unint64_t *v2;
  char v3;
  unint64_t v4;
  size_t v5;
  unint64_t *v6;
  void *v7;
  _QWORD v9[2];

  v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E0C80C00];
  v3 = *(_BYTE *)(isStackAllocationSafe + 32);
  v4 = (unint64_t)((1 << v3) + 63) >> 6;
  v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    v6 = sub_1BC7E56E4((_QWORD *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1)
      swift_willThrow();
    else
      return v6;
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    v2 = sub_1BC7E56E4((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x1BCCF5BA4](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_1BC7E56E4(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;

  v4 = 0;
  v5 = 0;
  v6 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10)
      return (unint64_t *)sub_1BC7E5AC4(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      v5 = v13 + 1;
      if (v13 + 1 >= v10)
        return (unint64_t *)sub_1BC7E5AC4(result, a2, v4, a3);
      v14 = *(_QWORD *)(v6 + 8 * v5);
      if (!v14)
      {
        v5 = v13 + 2;
        if (v13 + 2 >= v10)
          return (unint64_t *)sub_1BC7E5AC4(result, a2, v4, a3);
        v14 = *(_QWORD *)(v6 + 8 * v5);
        if (!v14)
          break;
      }
    }
LABEL_20:
    v9 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 56) + 8 * v12) + 16) >= 2uLL)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1BC7E5AC4(result, a2, v4, a3);
      }
    }
  }
  v15 = v13 + 3;
  if (v15 >= v10)
    return (unint64_t *)sub_1BC7E5AC4(result, a2, v4, a3);
  v14 = *(_QWORD *)(v6 + 8 * v15);
  if (v14)
  {
    v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    v5 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v5 >= v10)
      return (unint64_t *)sub_1BC7E5AC4(result, a2, v4, a3);
    v14 = *(_QWORD *)(v6 + 8 * v5);
    ++v15;
    if (v14)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1BC7E5834(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1BC70F8FC();
  result = sub_1BC818520();
  v8 = result;
  v31 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
    }
    else
    {
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
        goto LABEL_40;
      if (v14 >= v31)
        return v8;
      v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        v10 = v14 + 1;
        if (v14 + 1 >= v31)
          return v8;
        v15 = a1[v10];
        if (!v15)
        {
          v10 = v14 + 2;
          if (v14 + 2 >= v31)
            return v8;
          v15 = a1[v10];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v31)
              return v8;
            v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v10 >= v31)
                  return v8;
                v15 = a1[v10];
                ++v16;
                if (v15)
                  goto LABEL_24;
              }
            }
            v10 = v16;
          }
        }
      }
LABEL_24:
      v9 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    v17 = 8 * v13;
    v18 = *(void **)(*(_QWORD *)(v4 + 56) + v17);
    v19 = *(id *)(*(_QWORD *)(v4 + 48) + v17);
    v20 = v18;
    result = sub_1BC8180C4();
    v21 = -1 << *(_BYTE *)(v8 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = 8 * v24;
    *(_QWORD *)(*(_QWORD *)(v8 + 48) + v29) = v19;
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v29) = v20;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v8;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC7E5AC4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t *v32;
  uint64_t v33;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_1BC7E74BC();
  result = sub_1BC818520();
  v9 = result;
  v32 = a1;
  v33 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v33)
        return v9;
      v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v33)
          return v9;
        v16 = v32[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v33)
            return v9;
          v16 = v32[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v33)
              return v9;
            v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v33)
                  return v9;
                v16 = v32[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v14);
    v20 = *v18;
    v19 = v18[1];
    v21 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v14);
    sub_1BC81873C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    result = sub_1BC818778();
    v22 = -1 << *(_BYTE *)(v9 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    v30 = (_QWORD *)(*(_QWORD *)(v9 + 48) + 16 * v25);
    *v30 = v20;
    v30[1] = v19;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v25) = v21;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC7E5D58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;

  v4 = a4;
  if (!a3)
  {
    v8 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v8;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1BC731F28();
  result = sub_1BC8182A4();
  v8 = result;
  v30 = a2;
  if (a2 < 1)
    v9 = 0;
  else
    v9 = *a1;
  v10 = 0;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
      goto LABEL_39;
    if (v14 >= v30)
      goto LABEL_36;
    v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      v10 = v14 + 1;
      if (v14 + 1 >= v30)
        goto LABEL_36;
      v15 = a1[v10];
      if (!v15)
      {
        v10 = v14 + 2;
        if (v14 + 2 >= v30)
          goto LABEL_36;
        v15 = a1[v10];
        if (!v15)
          break;
      }
    }
LABEL_23:
    v9 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    v17 = (uint64_t *)(*(_QWORD *)(v4 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1BC81873C();
    swift_bridgeObjectRetain();
    sub_1BC817B30();
    result = sub_1BC818778();
    v20 = -1 << *(_BYTE *)(v8 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(_QWORD *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v8 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v16 = v14 + 3;
  if (v16 >= v30)
    goto LABEL_36;
  v15 = a1[v16];
  if (v15)
  {
    v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    v10 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v10 >= v30)
      goto LABEL_36;
    v15 = a1[v10];
    ++v16;
    if (v15)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BC7E5FE8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  sub_1BC7323D8(0, &qword_1EF45B3A8, &qword_1ED6B6390, 0x1E0CB6C90, &qword_1ED6B8578);
  result = sub_1BC8182A4();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_1BC8180C4();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BC7E6260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  _QWORD *v26;
  BOOL v27;
  uint64_t isStackAllocationSafe;
  char v29;
  unint64_t v30;
  size_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;

  v2 = a2;
  v43 = *MEMORY[0x1E0C80C00];
  if (*(_QWORD *)(a2 + 16))
  {
    v4 = *(_QWORD *)(a1 + 56);
    v37 = a1 + 56;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v35 = ~v5;
    if (-v5 < 64)
      v6 = ~(-1 << -(char)v5);
    else
      v6 = -1;
    v7 = v6 & v4;
    v36 = (unint64_t)(63 - v5) >> 6;
    v8 = a2 + 56;
    swift_bridgeObjectRetain();
    v9 = 0;
    while (1)
    {
      if (v7)
      {
        v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v11 = v10 | (v9 << 6);
      }
      else
      {
        v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36)
          goto LABEL_47;
        v13 = *(_QWORD *)(v37 + 8 * v12);
        v14 = v9 + 1;
        if (!v13)
        {
          v14 = v9 + 2;
          if (v9 + 2 >= v36)
            goto LABEL_47;
          v13 = *(_QWORD *)(v37 + 8 * v14);
          if (!v13)
          {
            v14 = v9 + 3;
            if (v9 + 3 >= v36)
              goto LABEL_47;
            v13 = *(_QWORD *)(v37 + 8 * v14);
            if (!v13)
            {
              v14 = v9 + 4;
              if (v9 + 4 >= v36)
                goto LABEL_47;
              v13 = *(_QWORD *)(v37 + 8 * v14);
              if (!v13)
              {
                v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_1BC6ECC4C();
                  return v2;
                }
                v13 = *(_QWORD *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    v14 = v15 + 1;
                    if (__OFADD__(v15, 1))
                      break;
                    if (v14 >= v36)
                      goto LABEL_47;
                    v13 = *(_QWORD *)(v37 + 8 * v14);
                    ++v15;
                    if (v13)
                      goto LABEL_24;
                  }
LABEL_49:
                  __break(1u);
                }
                v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        v7 = (v13 - 1) & v13;
        v11 = __clz(__rbit64(v13)) + (v14 << 6);
        v9 = v14;
      }
      v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
      v18 = *v16;
      v17 = v16[1];
      sub_1BC81873C();
      swift_bridgeObjectRetain();
      sub_1BC817B30();
      v19 = sub_1BC818778();
      v20 = -1 << *(_BYTE *)(v2 + 32);
      v21 = v19 & ~v20;
      if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        break;
LABEL_6:
      swift_bridgeObjectRelease();
    }
    v22 = *(_QWORD *)(v2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1BC818694() & 1) != 0)
    {
      isStackAllocationSafe = swift_bridgeObjectRelease();
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
    }
    else
    {
      v25 = ~v20;
      do
      {
        v21 = (v21 + 1) & v25;
        if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          goto LABEL_6;
        v26 = (_QWORD *)(v22 + 16 * v21);
        v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1BC818694() & 1) == 0);
      v38 = a1;
      v39 = v37;
      v40 = v35;
      v41 = v9;
      v42 = v7;
      isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    v29 = *(_BYTE *)(v2 + 32);
    v30 = (unint64_t)((1 << v29) + 63) >> 6;
    v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
    {
      MEMORY[0x1E0C80A78](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      v32 = sub_1BC7E66C8((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_1BC6ECC4C();
    }
    else
    {
      v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      v32 = sub_1BC7E66C8((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_1BC6ECC4C();
      MEMORY[0x1BCCF5BA4](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1BC7E66C8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t i;
  unint64_t v33;
  _QWORD *v34;
  BOOL v35;
  int64_t v36;
  uint64_t v38;
  unint64_t *v39;
  uint64_t v40;

  v7 = *(_QWORD *)(a3 + 16);
  v39 = (unint64_t *)result;
  *(_QWORD *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  v8 = v7 - 1;
  v40 = a3 + 56;
  while (2)
  {
    v38 = v8;
    do
    {
      while (1)
      {
        v9 = a5[3];
        v10 = a5[4];
        if (v10)
        {
          v11 = (v10 - 1) & v10;
          v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        v14 = (unint64_t)(a5[2] + 64) >> 6;
        v15 = a5[3];
        if (v13 >= v14)
          goto LABEL_45;
        v16 = a5[1];
        v17 = *(_QWORD *)(v16 + 8 * v13);
        if (!v17)
        {
          v18 = v9 + 2;
          v15 = v9 + 1;
          if (v9 + 2 >= v14)
            goto LABEL_45;
          v17 = *(_QWORD *)(v16 + 8 * v18);
          if (!v17)
          {
            v15 = v9 + 2;
            if (v9 + 3 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              v13 = v9 + 3;
              goto LABEL_15;
            }
            v18 = v9 + 4;
            v15 = v9 + 3;
            if (v9 + 4 >= v14)
              goto LABEL_45;
            v17 = *(_QWORD *)(v16 + 8 * v18);
            if (!v17)
            {
              v13 = v9 + 5;
              v15 = v9 + 4;
              if (v9 + 5 >= v14)
                goto LABEL_45;
              v17 = *(_QWORD *)(v16 + 8 * v13);
              if (!v17)
              {
                v15 = v14 - 1;
                v36 = v9 + 6;
                while (v14 != v36)
                {
                  v17 = *(_QWORD *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_1BC7E5D58(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          v13 = v18;
        }
LABEL_15:
        v11 = (v17 - 1) & v17;
        v12 = __clz(__rbit64(v17)) + (v13 << 6);
        v9 = v13;
LABEL_16:
        v19 = (uint64_t *)(*(_QWORD *)(*a5 + 48) + 16 * v12);
        v21 = *v19;
        v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1BC81873C();
        swift_bridgeObjectRetain();
        sub_1BC817B30();
        v22 = sub_1BC818778();
        v23 = -1 << *(_BYTE *)(a3 + 32);
        v24 = v22 & ~v23;
        v25 = v24 >> 6;
        v26 = 1 << v24;
        if (((1 << v24) & *(_QWORD *)(v40 + 8 * (v24 >> 6))) == 0)
          goto LABEL_3;
        v27 = *(_QWORD *)(a3 + 48);
        v28 = (_QWORD *)(v27 + 16 * v24);
        v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1BC818694() & 1) != 0)
          break;
        v31 = ~v23;
        for (i = v24 + 1; ; i = v33 + 1)
        {
          v33 = i & v31;
          if (((*(_QWORD *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0)
            break;
          v34 = (_QWORD *)(v27 + 16 * v33);
          v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1BC818694() & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v25 = v33 >> 6;
            v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        result = swift_bridgeObjectRelease();
      }
      result = swift_bridgeObjectRelease();
LABEL_23:
      v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1)
      continue;
    return MEMORY[0x1E0DEE9E8];
  }
}

uint64_t sub_1BC7E69BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;

  sub_1BC6ECA64(0, &qword_1ED6BAAD0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v37 - v5;
  v7 = type metadata accessor for PluginFeedItem();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v40 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v39 = (uint64_t)&v37 - v11;
  v12 = *(_QWORD *)(a1 + 56);
  v42 = a1 + 56;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v16 = (unint64_t)(v13 + 63) >> 6;
  v17 = a1;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v41 = MEMORY[0x1E0DEE9D8];
  if (!v15)
    goto LABEL_9;
LABEL_7:
  v20 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v21 = v20 | (v19 << 6);
  if (!*(_QWORD *)(a2 + 16))
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_6;
  }
  while (1)
  {
    v25 = (uint64_t *)(*(_QWORD *)(v17 + 48) + 16 * v21);
    v26 = *v25;
    v27 = v25[1];
    swift_bridgeObjectRetain();
    v28 = sub_1BC706608(v26, v27);
    if ((v29 & 1) != 0)
    {
      sub_1BC6ECB08(*(_QWORD *)(a2 + 56) + *(_QWORD *)(v8 + 72) * v28, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v30 = 0;
    }
    else
    {
      v30 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v30, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
LABEL_6:
      result = sub_1BC715030((uint64_t)v6, &qword_1ED6BAAD0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem);
      if (v15)
        goto LABEL_7;
    }
    else
    {
      sub_1BC6ECBA4((uint64_t)v6, v39, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ECBA4(v39, v40, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v41 = sub_1BC7262A4(0, *(_QWORD *)(v41 + 16) + 1, 1, v41);
      v32 = *(_QWORD *)(v41 + 16);
      v31 = *(_QWORD *)(v41 + 24);
      v33 = v32 + 1;
      if (v32 >= v31 >> 1)
      {
        v38 = v32 + 1;
        v36 = sub_1BC7262A4(v31 > 1, v32 + 1, 1, v41);
        v33 = v38;
        v41 = v36;
      }
      v34 = v40;
      v35 = v41;
      *(_QWORD *)(v41 + 16) = v33;
      result = sub_1BC6ECBA4(v34, v35+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v32, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      if (v15)
        goto LABEL_7;
    }
LABEL_9:
    v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v22 >= v16)
      goto LABEL_35;
    v23 = *(_QWORD *)(v42 + 8 * v22);
    ++v19;
    if (!v23)
    {
      v19 = v22 + 1;
      if (v22 + 1 >= v16)
        goto LABEL_35;
      v23 = *(_QWORD *)(v42 + 8 * v19);
      if (!v23)
      {
        v19 = v22 + 2;
        if (v22 + 2 >= v16)
          goto LABEL_35;
        v23 = *(_QWORD *)(v42 + 8 * v19);
        if (!v23)
        {
          v19 = v22 + 3;
          if (v22 + 3 >= v16)
            goto LABEL_35;
          v23 = *(_QWORD *)(v42 + 8 * v19);
          if (!v23)
            break;
        }
      }
    }
LABEL_24:
    v15 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v19 << 6);
    if (!*(_QWORD *)(a2 + 16))
      goto LABEL_5;
  }
  v24 = v22 + 4;
  if (v24 >= v16)
  {
LABEL_35:
    swift_release();
    return v41;
  }
  v23 = *(_QWORD *)(v42 + 8 * v24);
  if (v23)
  {
    v19 = v24;
    goto LABEL_24;
  }
  while (1)
  {
    v19 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v19 >= v16)
      goto LABEL_35;
    v23 = *(_QWORD *)(v42 + 8 * v19);
    ++v24;
    if (v23)
      goto LABEL_24;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1BC7E6D78(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v38)(uint64_t, uint64_t, uint64_t);
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v50 = a2;
  v57 = a5;
  v51 = a1;
  sub_1BC6ECA64(0, &qword_1ED6BAAD0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v56 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v59 = (uint64_t)&v49 - v10;
  v11 = type metadata accessor for PluginFeedItem();
  v61 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v55 = (uint64_t *)((char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  result = MEMORY[0x1E0C80A78](v12);
  v62 = (uint64_t)&v49 - v15;
  v16 = 0;
  v60 = a3;
  v17 = *(_QWORD *)(a3 + 56);
  v52 = 0;
  v53 = a3 + 56;
  v18 = 1 << *(_BYTE *)(a3 + 32);
  v19 = -1;
  if (v18 < 64)
    v19 = ~(-1 << v18);
  v20 = v19 & v17;
  v54 = (unint64_t)(v18 + 63) >> 6;
  v58 = a4;
  while (v20)
  {
    v24 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v25 = v24 | (v16 << 6);
LABEL_23:
    v29 = (uint64_t *)(*(_QWORD *)(v60 + 48) + 16 * v25);
    v30 = v29[1];
    if (*(_QWORD *)(a4 + 16))
    {
      v31 = *v29;
      swift_bridgeObjectRetain_n();
      v32 = sub_1BC706608(v31, v30);
      if ((v33 & 1) != 0)
      {
        v34 = *(_QWORD *)(a4 + 56) + *(_QWORD *)(v61 + 72) * v32;
        v35 = v59;
        v36 = v61;
        sub_1BC6ECB08(v34, v59, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56);
        v37(v35, 0, 1, v11);
      }
      else
      {
        v36 = v61;
        v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56);
        v35 = v59;
        v37(v59, 1, 1, v11);
      }
      swift_bridgeObjectRelease();
      v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      if (v38(v35, 1, v11) == 1)
      {
        v22 = v35;
        a4 = v58;
        goto LABEL_5;
      }
      sub_1BC6ECBA4(v35, v62, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v39 = v57;
      if (!*(_QWORD *)(v57 + 16))
      {
        v43 = v56;
        v37(v56, 1, 1, v11);
LABEL_37:
        sub_1BC6ED784(v62, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        v22 = v43;
        a4 = v58;
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      v40 = sub_1BC706608(v31, v30);
      if ((v41 & 1) != 0)
      {
        v42 = *(_QWORD *)(v39 + 56) + *(_QWORD *)(v61 + 72) * v40;
        v43 = v56;
        sub_1BC6ECB08(v42, v56, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
        v44 = 0;
      }
      else
      {
        v44 = 1;
        v43 = v56;
      }
      v37(v43, v44, 1, v11);
      swift_bridgeObjectRelease();
      if (v38(v43, 1, v11) == 1)
        goto LABEL_37;
      v45 = v55;
      sub_1BC6ECBA4(v43, (uint64_t)v55, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      v46 = v62;
      v47 = PluginFeedItem.hasChanged(from:)(v45);
      sub_1BC6ED784((uint64_t)v45, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      sub_1BC6ED784(v46, (uint64_t (*)(_QWORD))type metadata accessor for PluginFeedItem);
      result = swift_bridgeObjectRelease();
      a4 = v58;
      if ((v47 & 1) != 0)
        goto LABEL_6;
    }
    else
    {
      v21 = v59;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v61 + 56))(v59, 1, 1, v11);
      swift_bridgeObjectRetain();
      v22 = v21;
LABEL_5:
      sub_1BC715030(v22, &qword_1ED6BAAD0, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem);
      result = swift_bridgeObjectRelease();
LABEL_6:
      *(unint64_t *)((char *)v51 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      if (__OFADD__(v52++, 1))
        goto LABEL_40;
    }
  }
  v26 = v16 + 1;
  if (!__OFADD__(v16, 1))
  {
    if (v26 >= v54)
      goto LABEL_38;
    v27 = *(_QWORD *)(v53 + 8 * v26);
    ++v16;
    if (!v27)
    {
      v16 = v26 + 1;
      if (v26 + 1 >= v54)
        goto LABEL_38;
      v27 = *(_QWORD *)(v53 + 8 * v16);
      if (!v27)
      {
        v16 = v26 + 2;
        if (v26 + 2 >= v54)
          goto LABEL_38;
        v27 = *(_QWORD *)(v53 + 8 * v16);
        if (!v27)
        {
          v28 = v26 + 3;
          if (v28 >= v54)
          {
LABEL_38:
            v48 = v60;
            swift_retain();
            return sub_1BC7E5D58(v51, v50, v52, v48);
          }
          v27 = *(_QWORD *)(v53 + 8 * v28);
          if (!v27)
          {
            while (1)
            {
              v16 = v28 + 1;
              if (__OFADD__(v28, 1))
                goto LABEL_41;
              if (v16 >= v54)
                goto LABEL_38;
              v27 = *(_QWORD *)(v53 + 8 * v16);
              ++v28;
              if (v27)
                goto LABEL_22;
            }
          }
          v16 = v28;
        }
      }
    }
LABEL_22:
    v20 = (v27 - 1) & v27;
    v25 = __clz(__rbit64(v27)) + (v16 << 6);
    goto LABEL_23;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1BC7E724C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  char v7;
  unsigned int v8;
  unint64_t v9;
  size_t v10;
  uint64_t isStackAllocationSafe;
  uint64_t v12;
  void *v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a1 + 32);
  v8 = v7 & 0x3F;
  v9 = (unint64_t)((1 << v7) + 63) >> 6;
  v10 = 8 * v9;
  swift_bridgeObjectRetain_n();
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BC7E6D78((_QWORD *)((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0)), v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3)
      swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12 = sub_1BC7E6D78((unint64_t *)v13, v9, a1, a2, a3);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    MEMORY[0x1BCCF5BA4](v13, -1, -1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1BC7E7478(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PluginFeedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BC7E74BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF45B0D0)
  {
    sub_1BC6ECA64(255, &qword_1ED6B8D20, (uint64_t (*)(uint64_t))type metadata accessor for PluginFeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v0 = sub_1BC81852C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF45B0D0);
  }
}

id Feed.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id Feed.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for Feed();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for Feed()
{
  return objc_opt_self();
}

id Feed.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for Feed();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static Plugin.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_package()
{
  return sel_package;
}

void sub_1BC7E76FC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_package);
  v4 = sub_1BC817AE8();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

void sub_1BC7E7754(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC817AC4();
  objc_msgSend(v2, sel_setPackage_, v3);

}

void sub_1BC7E77A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = objc_msgSend(*a1, sel_allPluginData);
  type metadata accessor for PluginData();
  sub_1BC7E7884();
  v4 = sub_1BC817D7C();

  *a2 = v4;
}

void sub_1BC7E7814(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  type metadata accessor for PluginData();
  sub_1BC7E7884();
  v3 = (id)sub_1BC817D70();
  objc_msgSend(v2, sel_setAllPluginData_, v3);

}

unint64_t sub_1BC7E7884()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF45BE68;
  if (!qword_1EF45BE68)
  {
    v1 = type metadata accessor for PluginData();
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF45BE68);
  }
  return result;
}

id static SharableModelReference.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x1E0C97B48]);
  v1 = (void *)sub_1BC817AC4();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1BC7E7934()
{
  return MEMORY[0x1E0DEA528];
}

uint64_t sub_1BC7E7940@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SharableModelReference();
  result = sub_1BC8182E0();
  *a1 = result;
  return result;
}

void sub_1BC7E7984(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_1BC817AC4();
  objc_msgSend(v2, sel_setIdentifier_, v3);

}

id sub_1BC7E79D4@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = objc_msgSend(*a1, sel_feedItem);
  *a2 = result;
  return result;
}

id sub_1BC7E7A0C(_QWORD *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeedItem_, *a1);
}

void *ContentStateManager.getMostRecentEntry(in:)(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  id v41;
  unint64_t v42;
  void *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;

  v2 = sub_1BC816EF4();
  v45 = *(_QWORD *)(v2 - 8);
  v46 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v37 - v5;
  if (a1 >> 62)
    goto LABEL_39;
  v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_3:
  v8 = 0;
  v9 = 0;
  v39 = a1;
  v40 = a1 & 0xC000000000000001;
  v37 = a1 + 32;
  v38 = v7;
  do
  {
    if (v40)
      v11 = (id)sub_1BC7EA8AC(v8, a1, &qword_1ED6B85E0);
    else
      v11 = *(id *)(v37 + 8 * v8);
    v10 = v11;
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      swift_bridgeObjectRetain();
      v7 = sub_1BC8184E4();
      if (!v7)
        goto LABEL_40;
      goto LABEL_3;
    }
    v13 = objc_msgSend(v11, sel_storageEntries);
    sub_1BC6ED7C0(0, &qword_1EF45B920);
    v14 = sub_1BC817C5C();

    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1BC8184E4();
      if (!v15)
        goto LABEL_33;
LABEL_13:
      if (v15 >= 1)
      {
        v41 = v10;
        v42 = v8;
        v43 = v9;
        v16 = 0;
        v17 = 0;
        while (1)
        {
          if ((v14 & 0xC000000000000001) != 0)
          {
            v18 = (id)sub_1BC7EA8AC(v16, v14, &qword_1EF45B920);
            if (v17)
              goto LABEL_20;
          }
          else
          {
            v18 = *(id *)(v14 + 8 * v16 + 32);
            if (v17)
            {
LABEL_20:
              v19 = v17;
              v20 = objc_msgSend(v19, sel_modificationDate);
              sub_1BC816ED0();

              v21 = objc_msgSend(v18, sel_modificationDate);
              v22 = v44;
              sub_1BC816ED0();

              v23 = sub_1BC816EB8();
              v24 = *(void (**)(char *, uint64_t))(v45 + 8);
              v25 = v22;
              v26 = v46;
              v24(v25, v46);
              v24(v6, v26);

              if ((v23 & 1) != 0)
                v27 = v19;
              else
                v27 = v18;
              if ((v23 & 1) == 0)
                v18 = v19;

            }
          }
          ++v16;
          v17 = v18;
          if (v15 == v16)
          {
            swift_bridgeObjectRelease_n();
            v9 = v43;
            if (!v43)
            {
              v9 = v18;
              v7 = v38;
              a1 = v39;
              v10 = v41;
              v8 = v42;
              goto LABEL_6;
            }
            if (v18)
            {
              v28 = v18;
              v29 = v9;
              v30 = objc_msgSend(v29, sel_modificationDate);
              sub_1BC816ED0();

              v31 = objc_msgSend(v28, sel_modificationDate);
              v32 = v44;
              sub_1BC816ED0();

              LOBYTE(v31) = sub_1BC816EB8();
              v33 = *(void (**)(char *, uint64_t))(v45 + 8);
              v34 = v32;
              v35 = v46;
              v33(v34, v46);
              v33(v6, v35);

              if ((v31 & 1) != 0)
              {

                v10 = v29;
                v9 = v18;
              }
              else
              {

                v29 = v41;
                v10 = v28;
              }
              v7 = v38;
              a1 = v39;
              v8 = v42;
            }
            else
            {
              v29 = v43;
              v9 = 0;
              v7 = v38;
              a1 = v39;
              v10 = v41;
              v8 = v42;
            }
LABEL_35:

            goto LABEL_6;
          }
        }
      }
      goto LABEL_38;
    }
    v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
      goto LABEL_13;
LABEL_33:
    swift_bridgeObjectRelease_n();
    if (v9)
    {
      v29 = v9;
      v9 = 0;
      goto LABEL_35;
    }
LABEL_6:

  }
  while (v8 != v7);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t ContentStateManager.getEntries<A>(from:decoder:)()
{
  uint64_t v1;

  sub_1BC817CA4();
  sub_1BC77179C(0, (unint64_t *)&qword_1ED6B8438, &qword_1ED6B85E0);
  sub_1BC817D04();
  sub_1BC7EB37C(&qword_1EF45CF60, (unint64_t *)&qword_1ED6B8438, &qword_1ED6B85E0);
  sub_1BC817BE4();
  return v1;
}

uint64_t NotificationContentStateManager.createMigrationPublisher(with:identifier:keyValueDomain:dispatchQueue:migrationKey:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  uint64_t (*v34)(void);
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;

  v42 = a7;
  v43 = a6;
  v41 = a5;
  v45 = a4;
  v50 = a2;
  v51 = a3;
  v52 = a1;
  v49 = a9;
  v11 = *(_QWORD *)(a8 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](a1);
  v46 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6E1440(0, &qword_1ED6B9DC8, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v41 - v14;
  sub_1BC762A18(0);
  v53 = v16;
  v55 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v44 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7EB17C(0, &qword_1ED6B8170, v18, (void (*)(void))sub_1BC762AD8);
  v54 = v19;
  v56 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v48 = (char *)&v41 - v20;
  v21 = sub_1BC817EF0();
  v57 = a5;
  v58 = v21;
  v22 = sub_1BC817F80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v15, 1, 1, v22);
  sub_1BC7EAE28(0, (unint64_t *)&qword_1ED6B8310, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC762AB8();
  sub_1BC7619BC();
  sub_1BC8178FC();
  sub_1BC754350((uint64_t)v15, &qword_1ED6B9DC8, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  swift_release();
  v23 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v46, v47, a8);
  v24 = (*(unsigned __int8 *)(v11 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v25 = (v12 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  v26 = (char *)swift_allocObject();
  v27 = v49;
  *((_QWORD *)v26 + 2) = a8;
  *((_QWORD *)v26 + 3) = v27;
  v28 = v51;
  *((_QWORD *)v26 + 4) = v50;
  *((_QWORD *)v26 + 5) = v28;
  v29 = v42;
  *((_QWORD *)v26 + 6) = v43;
  *((_QWORD *)v26 + 7) = v29;
  v30 = v41;
  *((_QWORD *)v26 + 8) = v52;
  *((_QWORD *)v26 + 9) = v30;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v26[v24], v23, a8);
  v31 = v45;
  *(_QWORD *)&v26[v25] = v45;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v32 = v30;
  v33 = v31;
  sub_1BC817710();
  v34 = MEMORY[0x1E0C95D78];
  sub_1BC785340(0, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC762AD8();
  sub_1BC7853AC(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v34, MEMORY[0x1E0C95D90]);
  v35 = v48;
  v36 = v53;
  v37 = v44;
  sub_1BC8178E4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v36);
  sub_1BC7EAD0C((unint64_t *)&qword_1ED6B8168, &qword_1ED6B8170, sub_1BC762A18, (void (*)(void))sub_1BC762AD8);
  v38 = v54;
  v39 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v38);
  return v39;
}

uint64_t sub_1BC7E8324@<X0>(id *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  void *v3;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v6 = objc_msgSend(*a1, sel_value);
  v7 = sub_1BC816E64();
  v9 = v8;

  sub_1BC816C24();
  if (v3)
  {
    sub_1BC6ECB60(v7, v9);
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v10 = sub_1BC817590();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED6BB5D0);
    v11 = v3;
    v12 = v3;
    v13 = sub_1BC81756C();
    v14 = sub_1BC817E84();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      v25 = v24;
      *(_DWORD *)v15 = 136315906;
      v16 = sub_1BC818814();
      sub_1BC6E14D8(v16, v17, &v25);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      sub_1BC6E14D8(0xD000000000000017, 0x80000001BC8284F0, &v25);
      sub_1BC818148();
      *(_WORD *)(v15 + 22) = 2080;
      v18 = sub_1BC818814();
      sub_1BC6E14D8(v18, v19, &v25);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 32) = 2082;
      v20 = v3;
      sub_1BC6E1878();
      v21 = sub_1BC817B00();
      sub_1BC6E14D8(v21, v22, &v25);
      sub_1BC818148();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1BC6DD000, v13, v14, "%s %s %s Error: %{public}s", (uint8_t *)v15, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v24, -1, -1);
      MEMORY[0x1BCCF5BA4](v15, -1, -1);

    }
    else
    {

    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 1, 1, a2);
  }
  else
  {
    sub_1BC6ECB60(v7, v9);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(a3, 0, 1, a2);
  }
}

uint64_t NotificationContentStateManager.getContentState(for:legacyStringIdentifier:legacyKeyValueDomain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a7;
  v14 = *(_QWORD *)(a6 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1BC7EAD4C();
  v17 = *(_QWORD *)(v16 - 8);
  v33 = v16;
  v34 = v17;
  MEMORY[0x1E0C80A78](v16);
  v32 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a4;
  v20 = v31;
  v35 = NotificationContentStateManager.migrateStringContentStateIfNecessary(contentStateIdentifier:notificationIdentifier:keyValueDomain:)(a3, v19, a1, a2, a5, a6, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v7, a6);
  v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a6;
  *(_QWORD *)(v22 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v22 + v21, (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  v23 = (uint64_t *)(v22 + ((v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v23 = a1;
  v23[1] = a2;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1BC7EAF0C;
  *(_QWORD *)(v24 + 24) = v22;
  swift_bridgeObjectRetain();
  sub_1BC817710();
  v25 = MEMORY[0x1E0C95D78];
  sub_1BC785340(0, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC6E1440(0, &qword_1ED6B8870, (void (*)(uint64_t))type metadata accessor for NotificationContentState);
  sub_1BC7EAE28(0, &qword_1ED6B8228, &qword_1ED6B8870, (void (*)(uint64_t))type metadata accessor for NotificationContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v25);
  sub_1BC7853AC(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v25, MEMORY[0x1E0C95D90]);
  sub_1BC7EAEA0();
  v26 = v32;
  sub_1BC8178E4();
  swift_release();
  swift_release();
  sub_1BC6E1788(&qword_1ED6B8148, (uint64_t (*)(uint64_t))sub_1BC7EAD4C, MEMORY[0x1E0C95B78]);
  v27 = v33;
  v28 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
  return v28;
}

uint64_t NotificationContentStateManager.migrateStringContentStateIfNecessary(contentStateIdentifier:notificationIdentifier:keyValueDomain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;

  sub_1BC817F14();
  v12 = MEMORY[0x1E0C960D8];
  sub_1BC7EAF10(0, &qword_1ED6B8340, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC7EB13C(&qword_1ED6B8338, &qword_1ED6B8340, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v12, MEMORY[0x1E0C96108]);
  v13 = sub_1BC817854();
  swift_release();
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 32))(v13, a3, a4, a5, a6, a7);
  swift_release();
  return v14;
}

uint64_t NotificationContentStateManager.getContentState(for:legacyDateIdentifier:legacyKeyValueDomain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t (*v25)(void);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v31 = a7;
  v14 = *(_QWORD *)(a6 - 8);
  v15 = *(_QWORD *)(v14 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1BC7EAD4C();
  v17 = *(_QWORD *)(v16 - 8);
  v33 = v16;
  v34 = v17;
  MEMORY[0x1E0C80A78](v16);
  v32 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a4;
  v20 = v31;
  v35 = NotificationContentStateManager.migrateDateContentStateIfNecessary(contentStateIdentifier:notificationIdentifier:keyValueDomain:)(a3, v19, a1, a2, a5, a6, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v7, a6);
  v21 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a6;
  *(_QWORD *)(v22 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v22 + v21, (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a6);
  v23 = (uint64_t *)(v22 + ((v15 + v21 + 7) & 0xFFFFFFFFFFFFFFF8));
  *v23 = a1;
  v23[1] = a2;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = sub_1BC7EAF0C;
  *(_QWORD *)(v24 + 24) = v22;
  swift_bridgeObjectRetain();
  sub_1BC817710();
  v25 = MEMORY[0x1E0C95D78];
  sub_1BC785340(0, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC6E1440(0, &qword_1ED6B8870, (void (*)(uint64_t))type metadata accessor for NotificationContentState);
  sub_1BC7EAE28(0, &qword_1ED6B8228, &qword_1ED6B8870, (void (*)(uint64_t))type metadata accessor for NotificationContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v25);
  sub_1BC7853AC(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v25, MEMORY[0x1E0C95D90]);
  sub_1BC7EAEA0();
  v26 = v32;
  sub_1BC8178E4();
  swift_release();
  swift_release();
  sub_1BC6E1788(&qword_1ED6B8148, (uint64_t (*)(uint64_t))sub_1BC7EAD4C, MEMORY[0x1E0C95B78]);
  v27 = v33;
  v28 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v26, v27);
  return v28;
}

uint64_t NotificationContentStateManager.migrateDateContentStateIfNecessary(contentStateIdentifier:notificationIdentifier:keyValueDomain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v19 = a6;
  v18 = a4;
  sub_1BC7EAFC0();
  v11 = v10;
  v12 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1BC817EF0();
  sub_1BC7EAE28(0, (unint64_t *)&qword_1ED6B8310, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  sub_1BC762AB8();
  sub_1BC81786C();
  swift_release();
  sub_1BC6E1788(&qword_1ED6B80A0, (uint64_t (*)(uint64_t))sub_1BC7EAFC0, MEMORY[0x1E0C95950]);
  v15 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 32))(v15, a3, v18, a5, v19, a7);
  swift_release();
  return v16;
}

uint64_t NotificationContentStateManager.getContentState(for:migrationContentStatePublisher:legacyKeyValueDomain:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)(void);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v13 = *(_QWORD *)(a5 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](a1);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7EAD4C();
  v17 = *(_QWORD *)(v16 - 8);
  v30 = v16;
  v31 = v17;
  MEMORY[0x1E0C80A78](v16);
  v29 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 32))(a3, a1, a2, a4, a5, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v6, a5);
  v19 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a5;
  *(_QWORD *)(v21 + 24) = a6;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21 + v19, v15, a5);
  v22 = (_QWORD *)(v21 + v20);
  *v22 = a1;
  v22[1] = a2;
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = sub_1BC7EAF0C;
  *(_QWORD *)(v23 + 24) = v21;
  swift_bridgeObjectRetain();
  sub_1BC817710();
  v24 = MEMORY[0x1E0C95D78];
  sub_1BC785340(0, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
  sub_1BC6E1440(0, &qword_1ED6B8870, (void (*)(uint64_t))type metadata accessor for NotificationContentState);
  sub_1BC7EAE28(0, &qword_1ED6B8228, &qword_1ED6B8870, (void (*)(uint64_t))type metadata accessor for NotificationContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v24);
  sub_1BC7853AC(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v24, MEMORY[0x1E0C95D90]);
  sub_1BC7EAEA0();
  v25 = v29;
  sub_1BC8178E4();
  swift_release();
  swift_release();
  sub_1BC6E1788(&qword_1ED6B8148, (uint64_t (*)(uint64_t))sub_1BC7EAD4C, MEMORY[0x1E0C95B78]);
  v26 = v30;
  v27 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v26);
  return v27;
}

uint64_t sub_1BC7E90F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  void (*v59)(char *, uint64_t);
  unint64_t v60;
  os_log_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  uint64_t (*v66)(void);
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  char *v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t (*v75)(void);
  uint64_t v76;
  char *v77;
  uint64_t v78;
  _QWORD *v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  id v85;
  id v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t result;
  char *v92;
  uint64_t v93;
  void *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  os_log_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123[2];

  v106 = a8;
  v117 = a7;
  v98 = a6;
  v120 = a5;
  v121 = a2;
  v116 = a4;
  v118 = a9;
  v119 = a11;
  v108 = *(_QWORD *)(a11 - 8);
  MEMORY[0x1E0C80A78](a1);
  v105 = v14;
  v107 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6E1440(0, &qword_1ED6B9DC8, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v15);
  v104 = (char *)&v95 - v16;
  sub_1BC762BE4(0);
  v18 = v17;
  v110 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v109 = (char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC762CA4(0);
  v115 = v20;
  v113 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v111 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC7EB17C(0, &qword_1ED6B8190, v22, (void (*)(void))sub_1BC762CE0);
  v24 = v23;
  v114 = *(os_log_t *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v112 = (char *)&v95 - v25;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B82E0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
  v101 = v26;
  v100 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v95 - v27;
  sub_1BC785340(0, (unint64_t *)&unk_1ED6B87C0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v103 = v29;
  v102 = *((_QWORD *)v29 - 1);
  MEMORY[0x1E0C80A78](v29);
  v99 = (char *)&v95 - v30;
  sub_1BC6E1440(0, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v95 - v32;
  v34 = sub_1BC816EF4();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v95 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v40 = (char *)&v95 - v39;
  sub_1BC6F95C0(a1, (uint64_t)v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
  {
    sub_1BC754350((uint64_t)v33, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v102 = a12;
    v103 = a10;
    v41 = sub_1BC817590();
    __swift_project_value_buffer(v41, (uint64_t)qword_1ED6BB5D0);
    swift_bridgeObjectRetain_n();
    v42 = sub_1BC81756C();
    v43 = sub_1BC817E9C();
    v44 = os_log_type_enabled(v42, v43);
    v97 = v24;
    v96 = v18;
    v95 = a3;
    if (v44)
    {
      v45 = swift_slowAlloc();
      v46 = swift_slowAlloc();
      v123[0] = v46;
      *(_DWORD *)v45 = 136315394;
      v47 = sub_1BC818814();
      v122 = sub_1BC6E14D8(v47, v48, v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      swift_bridgeObjectRetain();
      v122 = sub_1BC6E14D8(v121, a3, v123);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v42, v43, "%s Proceeding with migration for %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v46, -1, -1);
      MEMORY[0x1BCCF5BA4](v45, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v122 = v117;
    v123[0] = v98;
    v63 = sub_1BC817F80();
    v64 = (void (*)(uint64_t))MEMORY[0x1E0DEF868];
    v65 = (uint64_t)v104;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v104, 1, 1, v63);
    v66 = MEMORY[0x1E0C95D78];
    sub_1BC7EAF10(0, (unint64_t *)&qword_1ED6B8240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
    sub_1BC7EB13C(&qword_1ED6B8238, (unint64_t *)&qword_1ED6B8240, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v66, MEMORY[0x1E0C95D90]);
    sub_1BC7619BC();
    v67 = v109;
    sub_1BC8178FC();
    sub_1BC754350(v65, &qword_1ED6B9DC8, v64);
    v69 = v107;
    v68 = v108;
    v70 = v119;
    (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v106, v119);
    v71 = (*(unsigned __int8 *)(v68 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
    v72 = (char *)swift_allocObject();
    v73 = v102;
    *((_QWORD *)v72 + 2) = v70;
    *((_QWORD *)v72 + 3) = v73;
    v74 = v95;
    *((_QWORD *)v72 + 4) = v121;
    *((_QWORD *)v72 + 5) = v74;
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(&v72[v71], v69, v70);
    swift_bridgeObjectRetain();
    sub_1BC817710();
    v75 = MEMORY[0x1E0C95D78];
    sub_1BC785340(0, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    v108 = v76;
    sub_1BC762CC0();
    sub_1BC7853AC(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v75, MEMORY[0x1E0C95D90]);
    v107 = (char *)(MEMORY[0x1E0DEE9C0] + 8);
    v77 = v111;
    v78 = v96;
    sub_1BC8178E4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v67, v78);
    v79 = (_QWORD *)swift_allocObject();
    v79[2] = v70;
    v79[3] = v73;
    v80 = v120;
    v79[4] = v121;
    v79[5] = v74;
    v81 = v103;
    v82 = v116;
    v83 = (void *)v117;
    v79[6] = v103;
    v79[7] = v82;
    v79[8] = v80;
    v79[9] = v83;
    v84 = swift_allocObject();
    *(_QWORD *)(v84 + 16) = sub_1BC7EB30C;
    *(_QWORD *)(v84 + 24) = v79;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v85 = v81;
    v86 = v83;
    sub_1BC817710();
    sub_1BC762CE0();
    v87 = v112;
    v88 = v115;
    sub_1BC8178E4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v77, v88);
    sub_1BC7EAD0C((unint64_t *)&qword_1ED6B8188, &qword_1ED6B8190, sub_1BC762CA4, (void (*)(void))sub_1BC762CE0);
    v89 = v97;
    v90 = sub_1BC817854();
    result = ((uint64_t (*)(char *, uint64_t))v114[1].isa)(v87, v89);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v40, v33, v34);
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v49 = sub_1BC817590();
    __swift_project_value_buffer(v49, (uint64_t)qword_1ED6BB5D0);
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v38, v40, v34);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v50 = sub_1BC81756C();
    v51 = sub_1BC817E6C();
    v52 = v51;
    if (os_log_type_enabled(v50, v51))
    {
      v53 = swift_slowAlloc();
      LODWORD(v115) = v52;
      v54 = v53;
      v117 = swift_slowAlloc();
      v123[0] = v117;
      *(_DWORD *)v54 = 136315906;
      v114 = v50;
      v55 = sub_1BC818814();
      v122 = sub_1BC6E14D8(v55, v56, v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2080;
      swift_bridgeObjectRetain();
      v122 = sub_1BC6E14D8(v121, a3, v123);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v54 + 22) = 2080;
      sub_1BC6E1788(&qword_1ED6B7C30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08F0]);
      v57 = sub_1BC818670();
      v122 = sub_1BC6E14D8(v57, v58, v123);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      v59 = *(void (**)(char *, uint64_t))(v35 + 8);
      v59(v38, v34);
      *(_WORD *)(v54 + 32) = 2080;
      v60 = v120;
      swift_bridgeObjectRetain();
      v122 = sub_1BC6E14D8(v116, v60, v123);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      v61 = v114;
      _os_log_impl(&dword_1BC6DD000, v114, (os_log_type_t)v115, "%s Migration already completed for %s on %s for key %s", (uint8_t *)v54, 0x2Au);
      v62 = v117;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v62, -1, -1);
      MEMORY[0x1BCCF5BA4](v54, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      v59 = *(void (**)(char *, uint64_t))(v35 + 8);
      v59(v38, v34);

      swift_bridgeObjectRelease_n();
    }
    sub_1BC8177DC();
    sub_1BC6E1878();
    v92 = v99;
    v93 = v101;
    sub_1BC8177B8();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v28, v93);
    sub_1BC7853AC((unint64_t *)&qword_1ED6B87B8, (unint64_t *)&unk_1ED6B87C0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v94 = v103;
    v90 = sub_1BC817854();
    (*(void (**)(char *, void *))(v102 + 8))(v92, v94);
    result = ((uint64_t (*)(char *, uint64_t))v59)(v40, v34);
  }
  *v118 = v90;
  return result;
}

uint64_t sub_1BC7E9CC4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  _BOOL4 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v54 = a6;
  v55 = a4;
  v58 = a7;
  v59 = a5;
  v56 = a2;
  v57 = a3;
  sub_1BC6E1E98(0, (unint64_t *)&qword_1ED6B82E0, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0C96098]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v52 - v11;
  sub_1BC785340(0, (unint64_t *)&unk_1ED6B87C0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8]);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v52 - v16;
  v18 = (int *)type metadata accessor for NotificationContentState(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (uint64_t *)((char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = a1[1];
  if (v21)
  {
    v22 = *a1;
    v23 = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BC816F30();
    v24 = v56;
    *v20 = v56;
    v20[1] = v23;
    v25 = (_QWORD *)((char *)v20 + v18[6]);
    *v25 = v22;
    v25[1] = v21;
    *((_BYTE *)v20 + v18[7]) = 1;
    *((_BYTE *)v20 + v18[8]) = 0;
    v26 = qword_1ED6BB5B0;
    swift_bridgeObjectRetain();
    if (v26 != -1)
      swift_once();
    v27 = sub_1BC817590();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED6BB5D0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v28 = sub_1BC81756C();
    v29 = sub_1BC817E9C();
    v30 = os_log_type_enabled(v28, v29);
    v31 = v59;
    if (v30)
    {
      v32 = swift_slowAlloc();
      v52 = v22;
      v33 = v32;
      v53 = swift_slowAlloc();
      v61 = v53;
      *(_DWORD *)v33 = 136315651;
      v34 = sub_1BC818814();
      v60 = sub_1BC6E14D8(v34, v35, &v61);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      v60 = sub_1BC6E14D8(v24, v23, &v61);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 22) = 2081;
      swift_bridgeObjectRetain();
      v60 = sub_1BC6E14D8(v52, v21, &v61);
      v31 = v59;
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v28, v29, "%s Migrating %s content state: %{private}s", (uint8_t *)v33, 0x20u);
      v36 = v53;
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v36, -1, -1);
      MEMORY[0x1BCCF5BA4](v33, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v47 = (*(uint64_t (**)(_QWORD *, uint64_t))(*(_QWORD *)(v54 + 8) + 64))(v20, v31);
    result = sub_1BC7EB320((uint64_t)v20);
  }
  else
  {
    v53 = (uint64_t)v12;
    v54 = v10;
    v37 = v57;
    v55 = v15;
    if (qword_1ED6BB5B0 != -1)
      swift_once();
    v38 = sub_1BC817590();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED6BB5D0);
    swift_bridgeObjectRetain_n();
    v39 = sub_1BC81756C();
    v40 = sub_1BC817E9C();
    v41 = v14;
    v42 = v17;
    if (os_log_type_enabled(v39, v40))
    {
      v43 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v61 = v44;
      *(_DWORD *)v43 = 136315394;
      v52 = v43 + 4;
      v45 = sub_1BC818814();
      v60 = sub_1BC6E14D8(v45, v46, &v61);
      sub_1BC818148();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2080;
      swift_bridgeObjectRetain();
      v60 = sub_1BC6E14D8(v56, v37, &v61);
      sub_1BC818148();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BC6DD000, v39, v40, "%s No pre-existing content state for %s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1BCCF5BA4](v44, -1, -1);
      MEMORY[0x1BCCF5BA4](v43, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v50 = v54;
    v49 = v55;
    v51 = v53;
    sub_1BC8177DC();
    sub_1BC6E1878();
    sub_1BC8177B8();
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v9);
    sub_1BC7853AC((unint64_t *)&qword_1ED6B87B8, (unint64_t *)&unk_1ED6B87C0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C964B8], MEMORY[0x1E0C964C8]);
    v47 = sub_1BC817854();
    result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v42, v41);
  }
  *v58 = v47;
  return result;
}

uint64_t sub_1BC7EA2C8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t (*v35)(void);
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;

  v42 = a7;
  v43 = a6;
  sub_1BC6E1440(0, &qword_1ED6B9DC8, (void (*)(uint64_t))MEMORY[0x1E0DEF868]);
  MEMORY[0x1E0C80A78](v11);
  v45 = (char *)&v38 - v12;
  sub_1BC6E1440(0, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - v14;
  sub_1BC762E14();
  v17 = v16;
  v44 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v20 = sub_1BC817590();
  __swift_project_value_buffer(v20, (uint64_t)qword_1ED6BB5D0);
  swift_bridgeObjectRetain_n();
  v21 = sub_1BC81756C();
  v22 = sub_1BC817E9C();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v41 = v17;
    v24 = v23;
    v39 = swift_slowAlloc();
    v40 = a5;
    v47 = v39;
    *(_DWORD *)v24 = 136315394;
    v25 = sub_1BC818814();
    v38 = a1;
    v46 = sub_1BC6E14D8(v25, v26, &v47);
    v42 = a4;
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    v46 = sub_1BC6E14D8(v38, a2, &v47);
    sub_1BC818148();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1BC6DD000, v21, v22, "%s Marking migration as complete for %s", (uint8_t *)v24, 0x16u);
    v27 = v39;
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v27, -1, -1);
    v28 = v24;
    v17 = v41;
    MEMORY[0x1BCCF5BA4](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1BC816EE8();
  v29 = sub_1BC816EF4();
  v30 = (void (*)(uint64_t))MEMORY[0x1E0CB0870];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v15, 0, 1, v29);
  v31 = sub_1BC817F08();
  sub_1BC754350((uint64_t)v15, (unint64_t *)&qword_1ED6B9BE8, v30);
  v46 = v43;
  v47 = v31;
  v32 = sub_1BC817F80();
  v33 = (void (*)(uint64_t))MEMORY[0x1E0DEF868];
  v34 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v45, 1, 1, v32);
  v35 = MEMORY[0x1E0C960D8];
  sub_1BC785340(0, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BA4E0);
  sub_1BC7853AC((unint64_t *)&qword_1ED6B8360, (unint64_t *)&qword_1ED6B8368, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v35, MEMORY[0x1E0C96108]);
  sub_1BC7619BC();
  sub_1BC8178FC();
  sub_1BC754350(v34, &qword_1ED6B9DC8, v33);
  swift_release();
  sub_1BC6E1788(&qword_1ED6B81F0, (uint64_t (*)(uint64_t))sub_1BC762E14, MEMORY[0x1E0C95CB8]);
  v36 = sub_1BC817854();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v17);
  return v36;
}

uint64_t sub_1BC7EA728@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1BC7EA750@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1BC6E1440(0, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - v5;
  v7 = sub_1BC816EF4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BC6F95C0(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    result = sub_1BC754350((uint64_t)v6, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    v12 = 0;
    v13 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_1BC816E88();
    v12 = sub_1BC817D64();
    v13 = v14;
    result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  *a2 = v12;
  a2[1] = v13;
  return result;
}

uint64_t sub_1BC7EA884(unint64_t a1, unint64_t a2)
{
  return sub_1BC7EA8AC(a1, a2, &qword_1ED6B85E0);
}

uint64_t sub_1BC7EA898(unint64_t a1, unint64_t a2)
{
  return sub_1BC7EA8AC(a1, a2, &qword_1EF45B920);
}

uint64_t sub_1BC7EA8AC(unint64_t a1, unint64_t a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t result;

  sub_1BC6ED7C0(0, a3);
  if (a2 >> 62)
  {
    v5 = sub_1BC8184F0();
    objc_opt_self();
    if (swift_dynamicCastObjCClass())
      return v5;
  }
  else
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
    {
      v5 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
      swift_unknownObjectRetain();
      objc_opt_self();
      if (!swift_dynamicCastObjCClass())
        goto LABEL_10;
      return v5;
    }
    __break(1u);
  }
LABEL_10:
  sub_1BC8182C8();
  sub_1BC817B48();
  sub_1BC818814();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  swift_getObjectType();
  swift_unknownObjectRelease();
  sub_1BC818814();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  result = sub_1BC8184C0();
  __break(1u);
  return result;
}

uint64_t sub_1BC7EAA88(uint64_t a1, void **a2)
{
  _s14HealthPlatform19ContentStateManagerPAAE10getEntries2in7decoderSayqd__GSo28HKDeviceKeyValueStorageGroupC_10Foundation11JSONDecoderCtSeRd__SERd__lF_0(*a2);
  sub_1BC817CC8();
  return swift_bridgeObjectRelease();
}

uint64_t _s14HealthPlatform19ContentStateManagerPAAE10getEntries2in7decoderSayqd__GSo28HKDeviceKeyValueStorageGroupC_10Foundation11JSONDecoderCtSeRd__SERd__lF_0(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(a1, sel_storageEntries);
  sub_1BC6ED7C0(0, &qword_1EF45B920);
  sub_1BC817C5C();

  sub_1BC77179C(0, &qword_1EF45CF68, &qword_1EF45B920);
  sub_1BC7EB37C(&qword_1EF45CF70, &qword_1EF45CF68, &qword_1EF45B920);
  v2 = sub_1BC817BC0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BC7EAC10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC7EACB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BC7E90F4(a1, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), v2 + v4, a2, *(void **)(v2 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1BC7EAD0C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BC7EB17C(255, a2, a3, a4);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95B78], v6);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC7EAD4C()
{
  uint64_t (*v0)(void);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED6B8150)
  {
    v0 = MEMORY[0x1E0C95D78];
    sub_1BC7EAE28(255, &qword_1ED6B8228, &qword_1ED6B8870, (void (*)(uint64_t))type metadata accessor for NotificationContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    sub_1BC785340(255, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0);
    sub_1BC7EAEA0();
    sub_1BC7853AC(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v0, MEMORY[0x1E0C95D90]);
    v1 = sub_1BC817674();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED6B8150);
  }
}

void sub_1BC7EAE28(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*a2)
  {
    sub_1BC6E1440(255, a3, a4);
    v9 = v8;
    v10 = sub_1BC6E1878();
    v11 = a5(a1, v9, v10, MEMORY[0x1E0DEDB38]);
    if (!v12)
      atomic_store(v11, a2);
  }
}

unint64_t sub_1BC7EAEA0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED6B8220;
  if (!qword_1ED6B8220)
  {
    sub_1BC7EAE28(255, &qword_1ED6B8228, &qword_1ED6B8870, (void (*)(uint64_t))type metadata accessor for NotificationContentState, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED6B8220);
  }
  return result;
}

void sub_1BC7EAF10(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD))
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if (!*a2)
  {
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    v7 = v6;
    v8 = sub_1BC6E1878();
    v9 = a3(a1, v7, v8, MEMORY[0x1E0DEDB38]);
    if (!v10)
      atomic_store(v9, a2);
  }
}

uint64_t sub_1BC7EAF9C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BC7EAFC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B80A8)
  {
    sub_1BC7EAE28(255, (unint64_t *)&qword_1ED6B8310, (unint64_t *)&qword_1ED6B9BE8, (void (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C960D8]);
    sub_1BC6E1E98(255, (unint64_t *)&qword_1ED6BAC70, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    sub_1BC762AB8();
    v0 = sub_1BC817614();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B80A8);
  }
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC7EB0E4()
{
  uint64_t v0;
  unint64_t v1;

  v1 = (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 64)
      + ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 8) + 56))(*(_QWORD *)(v0 + v1), *(_QWORD *)(v0 + v1 + 8));
}

uint64_t sub_1BC7EB13C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BC7EAF10(255, a2, a3);
    result = MEMORY[0x1BCCF5AB4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BC7EB17C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t (*v7)(void);
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = MEMORY[0x1E0C95D78];
    sub_1BC785340(255, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))MEMORY[0x1E0C95D78]);
    a3(255);
    sub_1BC7853AC(&qword_1ED6B82A8, &qword_1ED6B82B0, (uint64_t (*)(uint64_t, uint64_t, unint64_t, _QWORD))v7, MEMORY[0x1E0C95D90]);
    a4();
    v8 = sub_1BC817674();
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_1BC7EB244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BC7EB2B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2[2];
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BC7E9CC4(a1, v2[4], v2[5], (uint64_t)v2 + ((v4 + 48) & ~v4), v3, v2[3], a2);
}

uint64_t sub_1BC7EB2D0()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BC7EB30C()
{
  uint64_t v0;

  return sub_1BC7EA2C8(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 16));
}

uint64_t sub_1BC7EB320(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NotificationContentState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BC7EB35C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BC7E8324(a1, *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1BC7EB37C(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BC77179C(255, a2, a3);
    result = MEMORY[0x1BCCF5AB4](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BC7EB3CC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t i;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  sub_1BC6ED4F0();
  v17 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a3 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BC6E8B8C(0, v10, 0);
    v11 = v20;
    for (i = a3 + 32; ; i += 40)
    {
      v18(i);
      if (v4)
        break;
      v4 = 0;
      v20 = v11;
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BC6E8B8C(v13 > 1, v14 + 1, 1);
        v11 = v20;
      }
      *(_QWORD *)(v11 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v14, v9, v17);
      if (!--v10)
        return v11;
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1BC7EB520(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x1E0DEE9D8];
    if (!v6)
      break;
    v13 = MEMORY[0x1E0DEE9D8];
    result = sub_1BC81837C();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0)
        v9 = (id)MEMORY[0x1BCCF4FB0](v8, a3);
      else
        v9 = *(id *)(a3 + 8 * v8 + 32);
      v10 = v9;
      v11 = v9;
      a1(&v12, &v11);

      if (v3)
        return swift_release();
      ++v8;
      sub_1BC818358();
      sub_1BC818388();
      sub_1BC818394();
      sub_1BC818364();
      if (v6 == v8)
        return v13;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    v6 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  return result;
}

void *HealthPlatformContextProvider.Context.optionalHealthStore.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_1BC7EB6AC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
    v4 = sub_1BC817C5C();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BC7EB738(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  unint64_t v6;
  unint64_t v7;
  id *v8;
  id v9;
  unint64_t v10;
  unint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v13 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC6E8BB8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        MEMORY[0x1BCCF4FB0](i, a1);
        sub_1BC6ED7C0(0, &qword_1ED6B9C80);
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC6E8BB8(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v7 = *(_QWORD *)(v3 + 16);
        v6 = *(_QWORD *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1BC6E8BB8(v6 > 1, v7 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v7 + 1;
        sub_1BC6EFBDC(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      v8 = (id *)(a1 + 32);
      sub_1BC6ED7C0(0, &qword_1ED6B9C80);
      do
      {
        v9 = *v8;
        swift_dynamicCast();
        v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BC6E8BB8(0, *(_QWORD *)(v3 + 16) + 1, 1);
          v3 = v13;
        }
        v11 = *(_QWORD *)(v3 + 16);
        v10 = *(_QWORD *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1BC6E8BB8(v10 > 1, v11 + 1, 1);
          v3 = v13;
        }
        *(_QWORD *)(v3 + 16) = v11 + 1;
        sub_1BC6EFBDC(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC7EB998(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_1BC8184E4();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x1E0DEE9D8];
  if (!v2)
    return v3;
  v18 = MEMORY[0x1E0DEE9D8];
  result = sub_1BC6E8D78(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v3 = v18;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v5 = 0;
      do
      {
        v6 = MEMORY[0x1BCCF4FB0](v5, a1);
        v8 = *(_QWORD *)(v18 + 16);
        v7 = *(_QWORD *)(v18 + 24);
        if (v8 >= v7 >> 1)
          sub_1BC6E8D78(v7 > 1, v8 + 1, 1);
        ++v5;
        v9 = sub_1BC6E1788(&qword_1ED6B7CE8, type metadata accessor for HealthPlatformContextProvider.Context, (uint64_t)&protocol conformance descriptor for HealthPlatformContextProvider.Context);
        *(_QWORD *)(v18 + 16) = v8 + 1;
        v10 = v18 + 16 * v8;
        *(_QWORD *)(v10 + 32) = v6;
        *(_QWORD *)(v10 + 40) = v9;
      }
      while (v2 != v5);
    }
    else
    {
      v11 = (uint64_t *)(a1 + 32);
      v12 = *(_QWORD *)(v18 + 16);
      v13 = 16 * v12;
      do
      {
        v14 = *v11;
        v15 = *(_QWORD *)(v18 + 24);
        swift_retain();
        if (v12 >= v15 >> 1)
          sub_1BC6E8D78(v15 > 1, v12 + 1, 1);
        v16 = sub_1BC6E1788(&qword_1ED6B7CE8, type metadata accessor for HealthPlatformContextProvider.Context, (uint64_t)&protocol conformance descriptor for HealthPlatformContextProvider.Context);
        *(_QWORD *)(v18 + 16) = v12 + 1;
        v17 = v18 + v13;
        *(_QWORD *)(v17 + 32) = v14;
        *(_QWORD *)(v17 + 40) = v16;
        v13 += 16;
        ++v11;
        ++v12;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

unint64_t static HealthPlatformContextProvider.errorDomain.getter()
{
  return 0xD00000000000002ELL;
}

BOOL static HealthPlatformContextProvider.Errors.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HealthPlatformContextProvider.Errors.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t HealthPlatformContextProvider.Errors.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

uint64_t HealthPlatformContextProvider.__allocating_init(profileStore:experienceStoreOracle:pinnedContentManager:notificationManager:transactionBuilderManager:healthStore:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  HealthPlatformContextProvider.init(profileStore:experienceStoreOracle:pinnedContentManager:notificationManager:transactionBuilderManager:healthStore:logger:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

_QWORD *HealthPlatformContextProvider.init(profileStore:experienceStoreOracle:pinnedContentManager:notificationManager:transactionBuilderManager:healthStore:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  _QWORD v22[3];
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _BYTE v26[64];

  v15 = OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_lock;
  v22[1] = 0;
  swift_unknownObjectWeakInit();
  v22[2] = MEMORY[0x1E0DEE9D8];
  v23 = 0u;
  v24 = 0u;
  v25 = 0;
  sub_1BC7EBE18((uint64_t)v22, (uint64_t)v26);
  sub_1BC7EBE68();
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 80) = 0;
  sub_1BC7EBEC4((uint64_t)v26, v16 + 16);
  sub_1BC7EBEF8((uint64_t)v26);
  *(_QWORD *)((char *)v7 + v15) = v16;
  sub_1BC6FC700(a1, (uint64_t)(v7 + 2));
  v7[7] = a6;
  sub_1BC6FC700(a3, (uint64_t)(v7 + 9));
  v7[8] = a2;
  v7[14] = a4;
  v7[15] = a5;
  v17 = (char *)v7 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_logger;
  v18 = sub_1BC817590();
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v17, a7, v18);
  v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for HealthPlatformContextProvider.ObserverShim()), sel_init);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a7, v18);
  __swift_destroy_boxed_opaque_existential_0(a3);
  __swift_destroy_boxed_opaque_existential_0(a1);
  *(_QWORD *)((char *)v7 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_observerShim) = v20;
  swift_weakAssign();
  return v7;
}

uint64_t sub_1BC7EBE18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  swift_unknownObjectWeakTakeInit();
  v4 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 8) = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 16) = v4;
  v5 = *(_OWORD *)(a1 + 24);
  v6 = *(_OWORD *)(a1 + 40);
  *(_QWORD *)(a2 + 56) = *(_QWORD *)(a1 + 56);
  *(_OWORD *)(a2 + 40) = v6;
  *(_OWORD *)(a2 + 24) = v5;
  return a2;
}

void sub_1BC7EBE68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED6B8630)
  {
    type metadata accessor for os_unfair_lock_s(255);
    v0 = sub_1BC818340();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED6B8630);
  }
}

uint64_t sub_1BC7EBEC4(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for HealthPlatformContextProvider.ProtectedState(a2, a1);
  return a2;
}

uint64_t sub_1BC7EBEF8(uint64_t a1)
{
  destroy for HealthPlatformContextProvider.ProtectedState(a1);
  return a1;
}

uint64_t type metadata accessor for HealthPlatformContextProvider.ObserverShim()
{
  return objc_opt_self();
}

uint64_t sub_1BC7EBF44(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  _BYTE v16[40];
  _QWORD v17[5];

  v5 = sub_1BC817590();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6780]), sel_init);
  objc_msgSend(v9, sel_setProfileIdentifier_, a1);
  objc_msgSend(v9, sel_resume);
  v10 = (void *)v2[7];
  sub_1BC6FC700(a2, (uint64_t)v17);
  sub_1BC6FC700((uint64_t)(v2 + 9), (uint64_t)v16);
  v11 = v2[14];
  v12 = v2[15];
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v6 + 16))(v8, (uint64_t)v2 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_logger, v5);
  type metadata accessor for HealthPlatformContextProvider.Context(0);
  v13 = swift_allocObject();
  v14 = v10;
  swift_retain();
  swift_retain();
  HealthPlatformContextProvider.Context.init(healthStore:primaryProfileHealthStore:healthExperienceStore:pinnedContentManager:notificationManager:transactionBuilderManager:logger:)(v9, v14, v17, (uint64_t)v16, v11, v12, (uint64_t)v8);
  return v13;
}

uint64_t HealthPlatformContextProvider.Context.__allocating_init(healthStore:primaryProfileHealthStore:healthExperienceStore:pinnedContentManager:notificationManager:transactionBuilderManager:logger:)(void *a1, void *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  HealthPlatformContextProvider.Context.init(healthStore:primaryProfileHealthStore:healthExperienceStore:pinnedContentManager:notificationManager:transactionBuilderManager:logger:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

Swift::Void __swiftcall HealthPlatformContextProvider.fetchUpdatedProfiles()()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void (*)(unint64_t, void *), _QWORD *, uint64_t, uint64_t);

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(void (**)(void (*)(unint64_t, void *), _QWORD *, uint64_t, uint64_t))(v2 + 24);
  swift_retain();
  v3(sub_1BC7ED5B8, v0, v1, v2);
  swift_release();
}

void sub_1BC7EC174(unint64_t a1, void *a2, uint64_t *a3)
{
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t (*v9)();
  uint64_t v10;
  unint64_t v11;
  uint64_t (*v12)();
  os_unfair_lock_s *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  id v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void *v27;
  uint64_t (*v28)();
  uint64_t v29;

  swift_retain_n();
  v6 = sub_1BC81756C();
  v7 = sub_1BC817E9C();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v27 = a2;
    v9 = (uint64_t (*)())swift_slowAlloc();
    v28 = v9;
    *(_DWORD *)v8 = 136315138;
    v29 = (uint64_t)a3;
    swift_retain();
    v10 = sub_1BC817AF4();
    v29 = sub_1BC6E14D8(v10, v11, (uint64_t *)&v28);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v6, v7, "%s: Got profile list; updating contexts.", v8, 0xCu);
    swift_arrayDestroy();
    v12 = v9;
    a2 = v27;
    MEMORY[0x1BCCF5BA4](v12, -1, -1);
    MEMORY[0x1BCCF5BA4](v8, -1, -1);

    if (a1)
    {
LABEL_3:
      v13 = *(os_unfair_lock_s **)((char *)a3 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_lock);
      v14 = (uint64_t)&v13[4];
      v15 = v13 + 20;
      os_unfair_lock_lock(v13 + 20);
      sub_1BC7EC540(v14, a1, a3, &v28);
      os_unfair_lock_unlock(v15);
      ((void (*)(uint64_t))v28)(v16);
      swift_release();
      return;
    }
  }
  else
  {
    swift_release_n();

    if (a1)
      goto LABEL_3;
  }
  swift_retain();
  v17 = a2;
  swift_retain();
  v18 = a2;
  v19 = sub_1BC81756C();
  v20 = sub_1BC817E84();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v22 = (uint64_t (*)())swift_slowAlloc();
    v28 = v22;
    *(_DWORD *)v21 = 136315394;
    v29 = (uint64_t)a3;
    swift_retain();
    v23 = sub_1BC817AF4();
    v29 = sub_1BC6E14D8(v23, v24, (uint64_t *)&v28);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    v29 = (uint64_t)a2;
    sub_1BC745A20(0, (unint64_t *)&qword_1EF45D080, (unint64_t *)&qword_1ED6B87B0);
    v25 = sub_1BC818118();
    v29 = sub_1BC6E14D8(v25, v26, (uint64_t *)&v28);
    sub_1BC818148();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1BC6DD000, v19, v20, "%s: Failed to fetch profile identifiers: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v22, -1, -1);
    MEMORY[0x1BCCF5BA4](v21, -1, -1);

  }
  else
  {
    swift_release_n();

  }
}

uint64_t sub_1BC7EC540@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (**a4)()@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)();
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[7];
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _BYTE v32[40];

  v8 = *a3;
  sub_1BC7BCFA0(a1 + 24, (uint64_t)&v30);
  if (!v31)
  {
    result = sub_1BC7EEF58((uint64_t)&v30);
LABEL_11:
    *a4 = nullsub_1;
    a4[1] = 0;
    return result;
  }
  v28[6] = v8;
  sub_1BC6FC848(&v30, (uint64_t)v32);
  swift_bridgeObjectRetain();
  v9 = sub_1BC7EF7A8((_QWORD *)(a1 + 16), a2);
  result = swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    v12 = sub_1BC8184E4();
    result = swift_bridgeObjectRelease();
    if (v12 >= (uint64_t)v9)
      goto LABEL_4;
  }
  else
  {
    v12 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v12 >= (uint64_t)v9)
    {
LABEL_4:
      sub_1BC753F20((uint64_t)v9, v12);
      v13 = swift_bridgeObjectRetain();
      v14 = sub_1BC7EF278(v13, a1);
      v15 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v15);
      v28[2] = a3;
      v28[3] = v32;
      v16 = sub_1BC7EB520((void (*)(uint64_t *__return_ptr, id *))sub_1BC7F07E0, (uint64_t)v28, v14);
      swift_bridgeObjectRelease();
      sub_1BC807398(v16);
      v17 = *(_QWORD *)(a1 + 16);
      v18 = MEMORY[0x1BCCF5C70](a1);
      if (v18)
      {
        v19 = v18;
        v20 = *(_QWORD *)(a1 + 8);
        swift_bridgeObjectRetain();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
        v21 = (uint64_t (*)())swift_allocObject();
        *((_QWORD *)v21 + 2) = a3;
        *((_QWORD *)v21 + 3) = v17;
        *((_QWORD *)v21 + 4) = v19;
        *((_QWORD *)v21 + 5) = v20;
        *a4 = sub_1BC7F0854;
        a4[1] = v21;
        return swift_retain();
      }
      swift_retain_n();
      v22 = sub_1BC81756C();
      v23 = sub_1BC817E84();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v29 = (uint64_t)a3;
        *(_QWORD *)&v30 = v25;
        *(_DWORD *)v24 = 136315138;
        v28[5] = v24 + 4;
        swift_retain();
        v26 = sub_1BC817AF4();
        v29 = sub_1BC6E14D8(v26, v27, (uint64_t *)&v30);
        sub_1BC818148();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1BC6DD000, v22, v23, "%s: Received updated profiles but no delegate set.", v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCF5BA4](v25, -1, -1);
        MEMORY[0x1BCCF5BA4](v24, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BC7EC884(uint64_t a1, unint64_t a2)
{
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v3 = sub_1BC81756C();
  v4 = sub_1BC817E9C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v10 = v6;
    *(_DWORD *)v5 = 136315394;
    type metadata accessor for HealthPlatformContextProvider(0);
    swift_retain();
    v7 = sub_1BC817AF4();
    sub_1BC6E14D8(v7, v8, &v10);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1BC8184E4();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1BC818148();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v3, v4, "%s: Informing delegate of %ld contexts.", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v6, -1, -1);
    MEMORY[0x1BCCF5BA4](v5, -1, -1);

  }
  else
  {
    swift_release_n();

    swift_bridgeObjectRelease_n();
  }
  swift_getObjectType();
  sub_1BC7EB998(a2);
  sub_1BC817404();
  return swift_bridgeObjectRelease();
}

void sub_1BC7ECACC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  os_unfair_lock_s *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void (*)(unint64_t, void *), _QWORD *, uint64_t, uint64_t);
  char v12;

  v2 = v1;
  v4 = *(os_unfair_lock_s **)((char *)v2 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_lock);
  v5 = (uint64_t)&v4[4];
  v6 = v4 + 20;
  os_unfair_lock_lock(v4 + 20);
  sub_1BC7ECBD8(v5, a1, &v12);
  os_unfair_lock_unlock(v6);
  if (v12 == 1)
  {
    v7 = v2[5];
    v8 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v7);
    (*(void (**)(_QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v8 + 8))(*(_QWORD *)((char *)v2 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_observerShim), 0, 0, v7, v8);
    v9 = v2[5];
    v10 = v2[6];
    __swift_project_boxed_opaque_existential_1(v2 + 2, v9);
    v11 = *(void (**)(void (*)(unint64_t, void *), _QWORD *, uint64_t, uint64_t))(v10 + 24);
    swift_retain();
    v11(sub_1BC7ED5B8, v2, v9, v10);
    swift_release();
  }
}

uint64_t sub_1BC7ECBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  _BYTE v9[24];
  uint64_t v10;

  v5 = a1 + 24;
  sub_1BC7BCFA0(a1 + 24, (uint64_t)v9);
  v6 = v10;
  result = sub_1BC7EEF58((uint64_t)v9);
  if (v6)
  {
    v8 = 0;
  }
  else
  {
    sub_1BC7EEF58(v5);
    result = sub_1BC6FC700(a2, v5);
    v8 = 1;
  }
  *a3 = v8;
  return result;
}

uint64_t HealthPlatformContextProvider.start(delegate:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  __int128 v11;
  uint64_t v12;
  _BYTE v13[48];

  v3 = v2;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_lock);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 80));
  *(_QWORD *)(v5 + 24) = a2;
  swift_unknownObjectWeakAssign();
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 80));
  v6 = *(_QWORD *)(v3 + 64);
  sub_1BC7EECEC(v3, v6);
  v7 = *(os_unfair_lock_s **)(v6 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState);
  v8 = (uint64_t)&v7[4];
  v9 = v7 + 16;
  os_unfair_lock_lock(v7 + 16);
  sub_1BC7BC1A4(v8, (uint64_t)&v11);
  os_unfair_lock_unlock(v9);
  if (!v12)
    return sub_1BC7EEF58((uint64_t)&v11);
  sub_1BC6FC848(&v11, (uint64_t)v13);
  sub_1BC7ECACC((uint64_t)v13);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
}

Swift::Void __swiftcall HealthPlatformContextProvider.stop()()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)((char *)v0 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_lock);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1BC7ECDA0(v2, v0);
  os_unfair_lock_unlock(v3);
}

uint64_t sub_1BC7ECDA0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a1 + 8) = 0;
  swift_unknownObjectWeakAssign();
  v3 = a2[5];
  v4 = a2[6];
  __swift_project_boxed_opaque_existential_1(a2 + 2, v3);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v4 + 16))(*(_QWORD *)((char *)a2 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_observerShim), v3, v4);
}

void HealthPlatformContextProvider.context(for:)(void **a1)
{
  uint64_t v1;
  void *v2;
  os_unfair_lock_s *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v2 = *a1;
  v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_lock);
  v4 = (uint64_t)&v3[4];
  v5 = v3 + 20;
  os_unfair_lock_lock(v3 + 20);
  sub_1BC7ECE8C(v4, v1, v2, &v6);
  os_unfair_lock_unlock(v5);
}

void sub_1BC7ECE8C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  _QWORD *v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  os_unfair_lock_s *v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _BYTE v22[40];

  sub_1BC7BCFA0(a1 + 24, (uint64_t)&v18);
  if (v19)
  {
    sub_1BC6FC848(&v18, (uint64_t)&v20);
    if (v21)
      goto LABEL_3;
LABEL_10:
    sub_1BC7EEF58((uint64_t)&v20);
    sub_1BC7EFD60();
    swift_allocError();
    *v17 = 1;
    swift_willThrow();
    return;
  }
  v14 = *(os_unfair_lock_s **)(*(_QWORD *)(a2 + 64)
                             + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState);
  v15 = (uint64_t)&v14[4];
  v16 = v14 + 16;
  os_unfair_lock_lock(v14 + 16);
  sub_1BC7BC1A4(v15, (uint64_t)&v20);
  if (v4)
  {
    os_unfair_lock_unlock(v16);
    __break(1u);
    return;
  }
  os_unfair_lock_unlock(v16);
  sub_1BC7EEF58((uint64_t)&v18);
  if (!v21)
    goto LABEL_10;
LABEL_3:
  sub_1BC6FC848(&v20, (uint64_t)v22);
  v10 = *(_QWORD *)(a1 + 16);
  v9 = (_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  v11 = a3;
  v12 = sub_1BC7EF128(v10, (uint64_t)v11);
  swift_bridgeObjectRelease();

  if (!v12)
  {
    v12 = sub_1BC7EBF44((uint64_t)v11, (uint64_t)v22);
    v13 = swift_retain();
    MEMORY[0x1BCCF48F0](v13);
    if (*(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1BC817C98();
    sub_1BC817CD4();
    sub_1BC817C74();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  *a4 = v12;
}

uint64_t HealthPlatformContextProvider.profileListDidUpdate(for:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void (*)(unint64_t, void *), _QWORD *, uint64_t, uint64_t);

  v1 = v0[5];
  v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  v3 = *(void (**)(void (*)(unint64_t, void *), _QWORD *, uint64_t, uint64_t))(v2 + 24);
  swift_retain();
  v3(sub_1BC7ED5B8, v0, v1, v2);
  return swift_release();
}

uint64_t HealthPlatformContextProvider.storeDidUpdate(note:)()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  __int128 v5;
  uint64_t v6;
  _BYTE v7[40];

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)(v0 + 64)
                            + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_protectedState);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 16;
  os_unfair_lock_lock(v1 + 16);
  sub_1BC7BC1A4(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  if (!v6)
    return sub_1BC7EEF58((uint64_t)&v5);
  sub_1BC6FC848(&v5, (uint64_t)v7);
  sub_1BC7ECACC((uint64_t)v7);
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
}

uint64_t static HealthPlatformContextProvider.Context.Errors.== infix(_:_:)()
{
  return 1;
}

uint64_t HealthPlatformContextProvider.Context.Errors.hash(into:)()
{
  return sub_1BC818748();
}

uint64_t HealthPlatformContextProvider.Context.Errors.hashValue.getter()
{
  sub_1BC81873C();
  sub_1BC818748();
  return sub_1BC818778();
}

id HealthPlatformContextProvider.Context.healthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t HealthPlatformContextProvider.Context.pinnedContentManager.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BC6FC700(v1 + 24, a1);
}

uint64_t HealthPlatformContextProvider.Context.notificationManager.getter()
{
  return swift_retain();
}

id HealthPlatformContextProvider.Context.primaryProfileHealthStore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 72);
}

_QWORD *HealthPlatformContextProvider.Context.init(healthStore:primaryProfileHealthStore:healthExperienceStore:pinnedContentManager:notificationManager:transactionBuilderManager:logger:)(void *a1, void *a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  id v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _QWORD aBlock[6];

  v8 = v7;
  sub_1BC7EEFAC();
  v16 = swift_allocObject();
  *(_DWORD *)(v16 + 24) = 0;
  *(_QWORD *)(v16 + 16) = 0;
  v8[16] = v16;
  v8[2] = a1;
  v8[9] = a2;
  sub_1BC6FC700((uint64_t)a3, (uint64_t)(v8 + 10));
  sub_1BC6FC700(a4, (uint64_t)(v8 + 3));
  v8[8] = a5;
  v8[15] = a6;
  v17 = (char *)v8 + OBJC_IVAR____TtCC14HealthPlatform29HealthPlatformContextProvider7Context_logger;
  v29 = sub_1BC817590();
  v31 = *(_QWORD *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v17, a7, v29);
  v32 = (uint64_t)a3;
  v18 = a3[3];
  v19 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v18);
  v20 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 16);
  v21 = a1;
  v22 = a2;
  swift_retain();
  swift_retain();
  v23 = (void *)v20(v18, v19);
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v21;
  *(_QWORD *)(v24 + 24) = v23;
  aBlock[4] = sub_1BC7EF054;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BC719640;
  aBlock[3] = &block_descriptor_26;
  v25 = _Block_copy(aBlock);
  v26 = v21;
  v27 = v23;
  swift_release();
  objc_msgSend(v27, sel_performBlock_, v25);
  _Block_release(v25);

  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(a7, v29);
  __swift_destroy_boxed_opaque_existential_0(a4);
  __swift_destroy_boxed_opaque_existential_0(v32);
  return v8;
}

void sub_1BC7ED5B8(unint64_t a1, void *a2)
{
  uint64_t *v2;

  sub_1BC7EC174(a1, a2, v2);
}

uint64_t sub_1BC7ED5C0(void *a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  uint64_t v10;
  id v11;
  id v12;

  v3 = objc_msgSend(a1, sel_profileIdentifier);
  sub_1BC6ECA64(0, &qword_1ED6BA570, (uint64_t (*)(uint64_t))type metadata accessor for UserProfile, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = type metadata accessor for UserProfile();
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BC81A0F0;
  v8 = v3;
  v9 = objc_msgSend(v8, sel_identifier);
  sub_1BC816F24();

  *(_QWORD *)(v7 + v6 + *(int *)(v4 + 20)) = v8;
  v10 = sub_1BC730FC0(v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();

  v11 = a2;
  v12 = sub_1BC6EC440(v10, (uint64_t)v11);

  sub_1BC6EBA40((unint64_t)v12);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t HealthPlatformContextProvider.Context.description.getter()
{
  uint64_t v0;
  id v1;
  id v2;

  sub_1BC8182C8();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend(*(id *)(v0 + 16), sel_profileIdentifier);
  v2 = objc_msgSend(v1, sel_description);

  sub_1BC817AE8();
  sub_1BC817B48();
  swift_bridgeObjectRelease();
  sub_1BC817B48();
  return 0xD000000000000012;
}

void HealthPlatformContextProvider.Context.feedItemStorage(for:scope:)(uint64_t a1@<X1>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  __int128 v32[2];
  uint64_t v33;

  v5 = v3;
  v31 = a2;
  v33 = a1;
  v7 = sub_1BC817338();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v13 = objc_msgSend(v12, sel_bundleIdentifier);
  if (v13)
  {
    v14 = v13;
    v15 = sub_1BC817AE8();
    v28 = v16;
    v29 = v15;

    v27 = v12;
    v17 = a3;
    v30 = v4;
    v19 = v5[13];
    v18 = v5[14];
    __swift_project_boxed_opaque_existential_1(v5 + 10, v19);
    v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18);
    swift_getObjectType();
    v20 = v31;
    sub_1BC817518();
    v21 = sub_1BC81732C();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1BC6FC700((uint64_t)(v5 + 3), (uint64_t)v32);
    v17[3] = (uint64_t)&type metadata for PluginFeedItemStorage;
    v17[4] = (uint64_t)&protocol witness table for PluginFeedItemStorage;
    v24 = swift_allocObject();
    *v17 = v24;
    PluginFeedItemStorage.init(storageContext:pluginPackage:scope:executorIdentifier:pinnedContentManager:)(v26, v29, v28, v20, v21, v23, v32, (_QWORD *)(v24 + 16));

  }
  else
  {
    sub_1BC7EF064();
    swift_allocError();
    swift_willThrow();

  }
}

void HealthPlatformContextProvider.Context.anchorStorage(for:)(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t ObjCClassFromMetadata;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v4 = v2;
  v30 = a1;
  v6 = sub_1BC817338();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v11 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v12 = objc_msgSend(v11, sel_bundleIdentifier);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BC817AE8();
    v27 = v15;
    v28 = v14;

    v26 = v6;
    v16 = a2;
    v29 = v3;
    v18 = *(_QWORD *)(v4 + 104);
    v17 = *(_QWORD *)(v4 + 112);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 80), v18);
    v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 16))(v18, v17);
    v20 = objc_msgSend(*(id *)(v4 + 16), sel_profileIdentifier);
    swift_getObjectType();
    sub_1BC81750C();
    v21 = sub_1BC81732C();
    v23 = v22;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
    v16[3] = &type metadata for PluginAnchorStorage;
    v16[4] = &off_1E7523FE8;
    v24 = (_QWORD *)swift_allocObject();
    *v16 = v24;

    v24[2] = v19;
    v24[3] = v20;
    v25 = v27;
    v24[4] = v28;
    v24[5] = v25;
    v24[6] = v21;
    v24[7] = v23;
  }
  else
  {
    sub_1BC7EF064();
    swift_allocError();
    swift_willThrow();

  }
}

_QWORD *HealthPlatformContextProvider.Context.notificationManager(for:)()
{
  _QWORD *v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  swift_getObjectType();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v3 = objc_msgSend(v2, sel_bundleIdentifier);
  if (v3)
  {
    v4 = v3;
    v5 = sub_1BC817AE8();
    v7 = v6;

    v8 = (void *)v0[2];
    v9 = v0[8];
    v10 = (void *)v0[9];
    type metadata accessor for HealthAppPluginNotificationManager();
    swift_allocObject();
    v11 = v8;
    swift_retain();
    v12 = v10;
    v0 = sub_1BC815A78(v11, v5, v7, v9);

    swift_release();
  }
  else
  {
    sub_1BC7EF064();
    swift_allocError();
    swift_willThrow();

  }
  return v0;
}

void HealthPlatformContextProvider.Context.sharedSummaryTransactionBuilder(completion:)(void (*a1)(void *, uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_1BC7462B4(*(void **)(v2 + 16), a1, a2);
}

uint64_t HealthPlatformContextProvider.Context.sharingSummaryProfileTransactionBuilder(transaction:)(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;
  uint64_t result;
  os_unfair_lock_s *v6;
  os_unfair_lock_s *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;

  v3 = objc_msgSend(*(id *)(v1 + 16), sel_profileIdentifier);
  v4 = objc_msgSend(v3, sel_type);

  result = 0;
  if (v4 == (id)2)
  {
    v6 = *(os_unfair_lock_s **)(v1 + 128);
    v7 = v6 + 4;
    v8 = v6 + 6;
    os_unfair_lock_lock(v6 + 6);
    sub_1BC7EDE1C(v7, a1, v1, &v9);
    os_unfair_lock_unlock(v8);
    return v9;
  }
  return result;
}

void sub_1BC7EDE1C(_QWORD *a1@<X0>, id a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void (*v22)(char *, uint64_t);
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void (*v29)(char *, uint64_t);
  id v30;
  void *v31;
  id v32;
  unsigned int v33;
  _QWORD *v34;
  _QWORD *v35;
  id v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  _QWORD *v42;
  id v43[2];

  v42 = a4;
  v43[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BC6ECA64(0, &qword_1ED6B7C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - v8;
  v10 = sub_1BC816F3C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v38 - v15;
  v40 = a1;
  v17 = *a1;
  v41 = a2;
  if (v17)
  {
    v39 = a3;
    v18 = *(void **)(v17 + 16);
    swift_retain();
    v19 = a2;
    v20 = objc_msgSend(v18, sel_transactionUUID);
    sub_1BC816F24();

    v21 = objc_msgSend(v19, sel_UUID);
    sub_1BC816F24();

    LOBYTE(v21) = sub_1BC816F18();
    v22 = *(void (**)(char *, uint64_t))(v11 + 8);
    v22(v14, v10);
    v22(v16, v10);
    if ((v21 & 1) != 0)
    {
      *v42 = v17;
      return;
    }
    swift_release();
    a2 = v41;
    a3 = v39;
  }
  v23 = *(id *)(a3 + 16);
  v24 = objc_msgSend(a2, sel_UUID);
  sub_1BC816F24();

  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    v25 = 0;
  }
  else
  {
    v25 = (void *)sub_1BC816F0C();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }
  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB6B78]), sel_initWithHealthStore_transactionUUID_, v23, v25);

  v27 = objc_msgSend(v26, sel_transactionUUID);
  sub_1BC816F24();

  v28 = objc_msgSend(v41, sel_UUID);
  sub_1BC816F24();

  LOBYTE(v28) = sub_1BC816F18();
  v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  v29(v14, v10);
  v29(v16, v10);
  if ((v28 & 1) != 0)
  {
    v43[0] = 0;
    v30 = objc_msgSend(v26, sel_isCommittedWithError_, v43);
    if (!v30)
    {
      v36 = v43[0];
      v37 = (void *)sub_1BC816D5C();

      swift_willThrow();
      *v42 = 0;
      return;
    }
    v31 = v30;
    v32 = v43[0];
    v33 = objc_msgSend(v31, sel_BOOLValue);

    if (v33)
    {
      v34 = v40;
      swift_release();
      type metadata accessor for CachingSharedSummaryTransactionBuilder();
      swift_allocObject();
      v35 = sub_1BC6F630C(v26, (uint64_t)sub_1BC747E90, 0);

      *v34 = v35;
      *v42 = v35;
      swift_retain();
      return;
    }
  }

  *v42 = 0;
}

id HealthPlatformContextProvider.Context.contextDescription.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 16), sel_profileIdentifier);
  *a1 = result;
  return result;
}

uint64_t HealthPlatformContextProvider.Context.Description.init(profileIdentifier:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t HealthPlatformContextProvider.Context.logger.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC14HealthPlatform29HealthPlatformContextProvider7Context_logger;
  v4 = sub_1BC817590();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t static HealthPlatformContextProvider.Context.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;

  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
  v4 = objc_msgSend(*(id *)(a1 + 16), sel_profileIdentifier);
  v5 = objc_msgSend(*(id *)(a2 + 16), sel_profileIdentifier);
  LOBYTE(a1) = sub_1BC8180D0();

  return a1 & 1;
}

unint64_t sub_1BC7EE334()
{
  return 0xD000000000000011;
}

uint64_t sub_1BC7EE350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BC7F072C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1BC7EE378()
{
  sub_1BC7EFCC0();
  return sub_1BC8187FC();
}

uint64_t sub_1BC7EE3A0()
{
  sub_1BC7EFCC0();
  return sub_1BC818808();
}

uint64_t HealthPlatformContextProvider.Context.Description.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v16;
  id v18[3];

  v18[2] = *(id *)MEMORY[0x1E0C80C00];
  sub_1BC7EFD04(0, &qword_1EF45CF90, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v18[-1] - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7EFCC0();
  sub_1BC8187F0();
  v9 = (void *)objc_opt_self();
  v18[0] = 0;
  v10 = objc_msgSend(v9, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, v18);
  v11 = v18[0];
  if (v10)
  {
    v12 = (void *)sub_1BC816E64();
    v14 = v13;

    v18[0] = v12;
    v18[1] = v14;
    sub_1BC70EADC();
    sub_1BC818634();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_1BC6ECB60((uint64_t)v12, (unint64_t)v14);
  }
  else
  {
    v16 = v11;
    sub_1BC816D5C();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t HealthPlatformContextProvider.Context.Description.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v14;
  _QWORD v15[2];

  sub_1BC7EFD04(0, (unint64_t *)&unk_1EF45CFA8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BC7EFCC0();
  sub_1BC8187E4();
  if (!v2)
  {
    sub_1BC70E978();
    sub_1BC8185C8();
    v11 = v15[0];
    v10 = v15[1];
    sub_1BC6ED7C0(0, &qword_1ED6BB3A0);
    sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB1E0);
    v12 = sub_1BC817F38();
    if (v12)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      sub_1BC6ECB60(v11, v10);
      *a2 = v12;
    }
    else
    {
      sub_1BC7EFD60();
      swift_allocError();
      *v14 = 0;
      swift_willThrow();
      sub_1BC6ECB60(v11, v10);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_1BC7EE784@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return HealthPlatformContextProvider.Context.Description.init(from:)(a1, a2);
}

uint64_t sub_1BC7EE798(_QWORD *a1)
{
  return HealthPlatformContextProvider.Context.Description.encode(to:)(a1);
}

uint64_t HealthPlatformContextProvider.Context.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 80);
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtCC14HealthPlatform29HealthPlatformContextProvider7Context_logger;
  v2 = sub_1BC817590();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t HealthPlatformContextProvider.Context.__deallocating_deinit()
{
  return sub_1BC7EE964((void (*)(void))HealthPlatformContextProvider.Context.deinit);
}

void sub_1BC7EE834(uint64_t a1@<X1>, void *a2@<X2>, uint64_t *a3@<X8>)
{
  HealthPlatformContextProvider.Context.feedItemStorage(for:scope:)(a1, a2, a3);
}

void sub_1BC7EE848(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  HealthPlatformContextProvider.Context.anchorStorage(for:)(a1, a2);
}

_QWORD *sub_1BC7EE85C()
{
  return HealthPlatformContextProvider.Context.notificationManager(for:)();
}

void sub_1BC7EE870(void (*a1)(void *, uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_1BC7462B4(*(void **)(v2 + 16), a1, a2);
}

unint64_t sub_1BC7EE8A4()
{
  return HealthPlatformContextProvider.Context.description.getter();
}

uint64_t HealthPlatformContextProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);

  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_logger;
  v2 = sub_1BC817590();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  return v0;
}

uint64_t HealthPlatformContextProvider.__deallocating_deinit()
{
  return sub_1BC7EE964((void (*)(void))HealthPlatformContextProvider.deinit);
}

uint64_t sub_1BC7EE964(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

void sub_1BC7EE988()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  uint64_t v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_lock);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1BC7F07C8(v2, &v4);
  os_unfair_lock_unlock(v3);
}

void sub_1BC7EEA0C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC14HealthPlatform29HealthPlatformContextProvider_lock);
  v2 = (uint64_t)&v1[4];
  v3 = v1 + 20;
  os_unfair_lock_lock(v1 + 20);
  sub_1BC7F07B0(v2);
  os_unfair_lock_unlock(v3);
}

void sub_1BC7EEA60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void **v3;
  void *v5;
  void *v6;
  _QWORD v7[6];

  v5 = *v3;
  if (a2)
  {
    v7[4] = a2;
    v7[5] = a3;
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 1107296256;
    v7[2] = sub_1BC719640;
    v7[3] = &block_descriptor_16_1;
    v6 = _Block_copy(v7);
    swift_retain();
    swift_release();
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend(v5, sel_addObserver_completion_, a1, v6);
  _Block_release(v6);
}

uint64_t sub_1BC7EEB18(uint64_t a1, uint64_t a2)
{
  void **v2;
  void *v3;
  void *v4;
  _QWORD v6[6];

  v3 = *v2;
  v6[4] = a1;
  v6[5] = a2;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BC7EB6AC;
  v6[3] = &block_descriptor_13_0;
  v4 = _Block_copy(v6);
  swift_retain();
  objc_msgSend(v3, sel_fetchAllProfilesWithCompletion_, v4);
  _Block_release(v4);
  return swift_release();
}

void *sub_1BC7EEBB0()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

id sub_1BC7EEBD4()
{
  uint64_t v0;

  return *(id *)(v0 + 72);
}

id sub_1BC7EEBDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id result;

  result = objc_msgSend(*(id *)(v1 + 16), sel_profileIdentifier);
  *a1 = result;
  return result;
}

uint64_t sub_1BC7EEC14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtCC14HealthPlatform29HealthPlatformContextProvider7Context_logger;
  v4 = sub_1BC817590();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1BC7EEC58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  sub_1BC6ED7C0(0, (unint64_t *)&qword_1ED6BB280);
  v4 = objc_msgSend(*(id *)(v2 + 16), sel_profileIdentifier);
  v5 = objc_msgSend(*(id *)(v3 + 16), sel_profileIdentifier);
  v6 = sub_1BC8180D0();

  return v6 & 1;
}

id sub_1BC7EECEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;

  swift_getObjectType();
  if (qword_1ED6BB5B0 != -1)
    swift_once();
  v4 = sub_1BC817590();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED6BB5D0);
  swift_unknownObjectRetain_n();
  v5 = sub_1BC81756C();
  v6 = sub_1BC817E6C();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = swift_slowAlloc();
    v8 = swift_slowAlloc();
    v16 = v8;
    *(_DWORD *)v7 = 136315394;
    v9 = sub_1BC7BC1E4();
    sub_1BC6E14D8(v9, v10, &v16);
    sub_1BC818148();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1BC7BCFE4();
    swift_unknownObjectRetain();
    v11 = sub_1BC817AF4();
    v15 = sub_1BC6E14D8(v11, v12, &v16);
    sub_1BC818148();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1BC6DD000, v5, v6, "[%s] register(observer:): %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1BCCF5BA4](v8, -1, -1);
    MEMORY[0x1BCCF5BA4](v7, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v13 = *(void **)(a2 + OBJC_IVAR____TtC14HealthPlatform27HealthExperienceStoreOracle_notificationCenter);
  if (qword_1ED6B6388 != -1)
    swift_once();
  return objc_msgSend(v13, sel_addObserver_selector_name_object_, a1, sel_storeDidUpdateWithNote_, qword_1ED6B8520, a2, v15, v16);
}

