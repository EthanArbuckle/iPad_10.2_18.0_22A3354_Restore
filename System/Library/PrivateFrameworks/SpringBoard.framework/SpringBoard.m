id getRTTSettingsClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getRTTSettingsClass_softClass;
  v7 = getRTTSettingsClass_softClass;
  if (!getRTTSettingsClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getRTTSettingsClass_block_invoke;
    v3[3] = &unk_1E8E9ED40;
    v3[4] = &v4;
    __getRTTSettingsClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1D05477A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void __Block_byref_object_dispose__0(uint64_t a1)
{

}

void __Block_byref_object_dispose__1(uint64_t a1)
{

}

void __Block_byref_object_dispose__2(uint64_t a1)
{

}

void __Block_byref_object_dispose__3(uint64_t a1)
{

}

void __Block_byref_object_dispose__4(uint64_t a1)
{

}

void __Block_byref_object_dispose__5(uint64_t a1)
{

}

void __Block_byref_object_dispose__6(uint64_t a1)
{

}

void __Block_byref_object_dispose__7(uint64_t a1)
{

}

{

}

void __Block_byref_object_dispose__8(uint64_t a1)
{

}

void __Block_byref_object_dispose__9(uint64_t a1)
{

}

void __Block_byref_object_dispose__10(uint64_t a1)
{

}

void __Block_byref_object_dispose__11(uint64_t a1)
{

}

void __Block_byref_object_dispose__12(uint64_t a1)
{

}

void __Block_byref_object_dispose__13(uint64_t a1)
{

}

void __Block_byref_object_dispose__14(uint64_t a1)
{

}

void __Block_byref_object_dispose__15(uint64_t a1)
{

}

void __Block_byref_object_dispose__16(uint64_t a1)
{

}

void __Block_byref_object_dispose__17(uint64_t a1)
{

}

void __Block_byref_object_dispose__18(uint64_t a1)
{

}

void __Block_byref_object_dispose__19(uint64_t a1)
{

}

void __Block_byref_object_dispose__20(uint64_t a1)
{

}

void __Block_byref_object_dispose__21(uint64_t a1)
{

}

void __Block_byref_object_dispose__22(uint64_t a1)
{

}

void __Block_byref_object_dispose__23(uint64_t a1)
{

}

void __Block_byref_object_dispose__24(uint64_t a1)
{

}

void __Block_byref_object_dispose__25(uint64_t a1)
{

}

void __Block_byref_object_dispose__26(uint64_t a1)
{

}

void __Block_byref_object_dispose__27(uint64_t a1)
{

}

void __Block_byref_object_dispose__28(uint64_t a1)
{

}

void __Block_byref_object_dispose__29(uint64_t a1)
{

}

void __Block_byref_object_dispose__30(uint64_t a1)
{

}

void __Block_byref_object_dispose__31(uint64_t a1)
{

}

void __Block_byref_object_dispose__32(uint64_t a1)
{

}

void __Block_byref_object_dispose__33(uint64_t a1)
{

}

void __Block_byref_object_dispose__34(uint64_t a1)
{

}

void __Block_byref_object_dispose__35(uint64_t a1)
{

}

void __Block_byref_object_dispose__36(uint64_t a1)
{

}

void __Block_byref_object_dispose__37(uint64_t a1)
{

}

void __Block_byref_object_dispose__38(uint64_t a1)
{

}

void __Block_byref_object_dispose__39(uint64_t a1)
{

}

void __Block_byref_object_dispose__40(uint64_t a1)
{

}

void __Block_byref_object_dispose__41(uint64_t a1)
{

}

void __Block_byref_object_dispose__42(uint64_t a1)
{

}

void __Block_byref_object_dispose__43(uint64_t a1)
{

}

void __Block_byref_object_dispose__44(uint64_t a1)
{

}

void __Block_byref_object_dispose__45(uint64_t a1)
{

}

void __Block_byref_object_dispose__46(uint64_t a1)
{

}

void __Block_byref_object_dispose__47(uint64_t a1)
{

}

void __Block_byref_object_dispose__48(uint64_t a1)
{

}

void __Block_byref_object_dispose__49(uint64_t a1)
{

}

void __Block_byref_object_dispose__50(uint64_t a1)
{

}

void __Block_byref_object_dispose__51(uint64_t a1)
{

}

void __Block_byref_object_dispose__52(uint64_t a1)
{

}

void __Block_byref_object_dispose__53(uint64_t a1)
{

}

void __Block_byref_object_dispose__54(uint64_t a1)
{

}

void __Block_byref_object_dispose__55(uint64_t a1)
{

}

void __Block_byref_object_dispose__56(uint64_t a1)
{

}

void __Block_byref_object_dispose__57(uint64_t a1)
{

}

void __Block_byref_object_dispose__58(uint64_t a1)
{

}

void __Block_byref_object_dispose__59(uint64_t a1)
{

}

void __Block_byref_object_dispose__60(uint64_t a1)
{

}

void __Block_byref_object_dispose__61(uint64_t a1)
{

}

void __Block_byref_object_dispose__62(uint64_t a1)
{

}

void __Block_byref_object_dispose__63(uint64_t a1)
{

}

void __Block_byref_object_dispose__64(uint64_t a1)
{

}

void __Block_byref_object_dispose__65(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

void __Block_byref_object_dispose__66(uint64_t a1)
{

}

void __Block_byref_object_dispose__67(uint64_t a1)
{

}

void __Block_byref_object_dispose__68(uint64_t a1)
{

}

void __Block_byref_object_dispose__69(uint64_t a1)
{

}

void __Block_byref_object_dispose__70(uint64_t a1)
{

}

void __Block_byref_object_dispose__71(uint64_t a1)
{

}

void __Block_byref_object_dispose__72(uint64_t a1)
{

}

void __Block_byref_object_dispose__73(uint64_t a1)
{

}

void __Block_byref_object_dispose__74(uint64_t a1)
{

}

void __Block_byref_object_dispose__75(uint64_t a1)
{

}

void __Block_byref_object_dispose__76(uint64_t a1)
{

}

void __Block_byref_object_dispose__77(uint64_t a1)
{

}

void __Block_byref_object_dispose__78(uint64_t a1)
{

}

void __Block_byref_object_dispose__79(uint64_t a1)
{

}

void __Block_byref_object_dispose__80(uint64_t a1)
{

}

void __Block_byref_object_dispose__81(uint64_t a1)
{

}

void __Block_byref_object_dispose__82(uint64_t a1)
{

}

void __Block_byref_object_dispose__83(uint64_t a1)
{

}

void __Block_byref_object_dispose__84(uint64_t a1)
{

}

void __Block_byref_object_dispose__85(uint64_t a1)
{

}

void __Block_byref_object_dispose__86(uint64_t a1)
{

}

void __Block_byref_object_dispose__87(uint64_t a1)
{

}

void __Block_byref_object_dispose__88(uint64_t a1)
{

}

void __Block_byref_object_dispose__89(uint64_t a1)
{

}

void __Block_byref_object_dispose__90(uint64_t a1)
{

}

void __Block_byref_object_dispose__91(uint64_t a1)
{

}

void __Block_byref_object_dispose__92(uint64_t a1)
{

}

void __Block_byref_object_dispose__93(uint64_t a1)
{

}

void __Block_byref_object_dispose__94(uint64_t a1)
{

}

void __Block_byref_object_dispose__95(uint64_t a1)
{

}

void __Block_byref_object_dispose__96(uint64_t a1)
{

}

void __Block_byref_object_dispose__97(uint64_t a1)
{

}

void __Block_byref_object_dispose__98(uint64_t a1)
{

}

void __Block_byref_object_dispose__99(uint64_t a1)
{

}

void __Block_byref_object_dispose__100(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

{

}

void __Block_byref_object_dispose__101(uint64_t a1)
{

}

void __Block_byref_object_dispose__102(uint64_t a1)
{

}

void __Block_byref_object_dispose__103(uint64_t a1)
{

}

void __Block_byref_object_dispose__104(uint64_t a1)
{

}

void __Block_byref_object_dispose__105(uint64_t a1)
{

}

void __Block_byref_object_dispose__106(uint64_t a1)
{

}

void __Block_byref_object_dispose__107(uint64_t a1)
{

}

void __Block_byref_object_dispose__108(uint64_t a1)
{

}

void __Block_byref_object_dispose__109(uint64_t a1)
{

}

void __Block_byref_object_dispose__110(uint64_t a1)
{

}

void __Block_byref_object_dispose__111(uint64_t a1)
{

}

void __Block_byref_object_dispose__112(uint64_t a1)
{

}

void __Block_byref_object_dispose__113(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

void __Block_byref_object_dispose__114(uint64_t a1)
{

}

void __Block_byref_object_dispose__115(uint64_t a1)
{

}

void __Block_byref_object_dispose__116(uint64_t a1)
{

}

void __Block_byref_object_dispose__117(uint64_t a1)
{

}

void __Block_byref_object_dispose__118(uint64_t a1)
{

}

void __Block_byref_object_dispose__119(uint64_t a1)
{

}

void __Block_byref_object_dispose__120(uint64_t a1)
{

}

void __Block_byref_object_dispose__121(uint64_t a1)
{

}

void __Block_byref_object_dispose__122(uint64_t a1)
{

}

void __Block_byref_object_dispose__123(uint64_t a1)
{

}

void __Block_byref_object_dispose__124(uint64_t a1)
{

}

void __Block_byref_object_dispose__125(uint64_t a1)
{

}

void __Block_byref_object_dispose__126(uint64_t a1)
{

}

void __Block_byref_object_dispose__127(uint64_t a1)
{

}

void __Block_byref_object_dispose__128(uint64_t a1)
{

}

void __Block_byref_object_dispose__129(uint64_t a1)
{

}

void __Block_byref_object_dispose__130(uint64_t a1)
{

}

void __Block_byref_object_dispose__131(uint64_t a1)
{

}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__7(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__9(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__10(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__11(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__12(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__13(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__14(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__15(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__16(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__17(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__18(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__19(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__20(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__21(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__22(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__23(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__24(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__25(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__26(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__27(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__28(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__29(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__30(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__31(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__32(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__33(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__34(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__35(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__36(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__37(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__38(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__39(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__40(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__41(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__42(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__43(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__44(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__45(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__46(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__47(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__48(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__49(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__50(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__51(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__52(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__53(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__54(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__55(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = MEMORY[0x1D17E5550](*(_QWORD *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

uint64_t __Block_byref_object_copy__56(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__57(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__58(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__59(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__60(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__61(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__62(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__63(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__64(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__65(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

uint64_t __Block_byref_object_copy__66(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__67(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__68(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__69(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__70(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__71(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__72(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__73(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__74(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__75(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__76(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__77(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__78(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__79(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__80(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__81(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__82(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__83(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__84(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__85(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__86(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__87(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__88(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__89(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__90(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__91(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__92(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__93(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__94(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__95(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__96(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__97(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__98(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__99(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__100(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

uint64_t __Block_byref_object_copy__101(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__102(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__103(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__104(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__105(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__106(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__107(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__108(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__109(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__110(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__111(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__112(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_copy__113(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

uint64_t __Block_byref_object_copy__114(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__115(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__116(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__117(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__118(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__119(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__120(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__121(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__122(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__123(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__124(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__125(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__126(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__127(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__128(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__129(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__130(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__131(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void SBLayoutRoleEnumerateValidRoles(void *a1)
{
  id v1;

  if (a1)
  {
    v1 = a1;
    SBLayoutRoleEnumerateAppLayoutRoles(v1);
    (*((void (**)(id, uint64_t))v1 + 2))(v1, 3);

  }
}

void SBLayoutRoleEnumerateAppLayoutRoles(void *a1)
{
  uint64_t i;
  void (**v2)(id, uint64_t);

  v2 = a1;
  if (v2)
  {
    for (i = 1; i != 10; ++i)
    {
      if (i != 3)
        v2[2](v2, i);
    }
  }

}

BOOL SBLayoutRoleMaskContainsRole(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = 1 << a2;
  if ((unint64_t)(a2 - 1) >= 0xA)
    v2 = 0;
  return (v2 & ~a1) == 0 && (unint64_t)(a2 - 1) < 0xA;
}

__CFString *SBLayoutRoleIdentifierForRole(unint64_t a1)
{
  unint64_t v1;
  void *v3;

  v1 = a1 - 5;
  if (a1 < 5)
    return off_1E8EBBF70[a1];
  if (v1 > 0x14)
  {
    v3 = 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@%ld"), CFSTR("SBLayoutRoleAdditionalSide-"), v1);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return (__CFString *)v3;
}

void sub_1D054B360(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D054B854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromContextSignature16_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature22_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

void sub_1D054C374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXDeactivateReachability()
{
  void *v0;
  void *v1;
  void *v2;
  int v3;

  BSDispatchQueueAssertNotMain();
  +[SBApplicationController sharedInstanceIfExists](SBApplicationController, "sharedInstanceIfExists");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "applicationWithPid:", BSPIDForAuditToken());
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "processState");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isForeground");

  if (v3)
    dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_140_0);

  return 0;
}

uint64_t SBSpotlightIsVisible()
{
  void *v0;
  void *v1;
  char v2;
  _BOOL8 v3;
  void *v4;
  void *v5;

  +[SBIconController sharedInstanceIfExists](SBIconController, "sharedInstanceIfExists");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "iconManager");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "isShowingPullDownSearch");

  if ((v2 & 1) != 0)
    return 1;
  +[SBSpotlightMultiplexingViewController sharedRemoteSearchViewControllerIfExists](SBSpotlightMultiplexingViewController, "sharedRemoteSearchViewControllerIfExists");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
    v3 = objc_msgSend(v4, "_appearState") - 1 < 2;
  else
    v3 = 0;

  return v3;
}

void sub_1D054F1B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t SBWorkspaceLauncherIsActive(void *a1, char a2)
{
  id v3;
  void *v4;
  int v5;
  NSObject *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  int v16;

  v3 = a1;
  v4 = v3;
  if (v3)
  {
    if ((a2 & 1) != 0)
    {
      v5 = 1;
    }
    else
    {
      objc_msgSend(v3, "transientOverlayPresenter");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = objc_msgSend(v8, "hasActivePresentation") ^ 1;

    }
    objc_msgSend(v4, "switcherController");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "layoutStatePrimaryElement");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "workspaceEntity");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "applicationSceneEntity");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "sceneHandle");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v4, "uiLockStateProvider");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "isUILocked");

    if (v13)
      v16 = 0;
    else
      v16 = v5;
    v7 = v16 & (v15 ^ 1u);
  }
  else
  {
    SBLogWorkspace();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      SBWorkspaceLauncherIsActive_cold_1();

    v7 = 0;
  }

  return v7;
}

void sub_1D054F6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D054FCC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature12_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature11_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature1_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature14_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromQuerySignature13_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

void sub_1D0552818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  _Block_object_dispose(&a69, 8);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature9_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature4_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature8_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromQuerySignature1_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature0_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature13_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromQuerySignature3_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature3_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature0_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

id MethodCacheDispatchDataForSelectorIndex(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  IMP MethodImplementation;
  void (*v13)(void);
  objc_class *v14;
  _QWORD *v15;
  void *v17;
  void *v18;
  void *v19;

  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
LABEL_6:
    v10 = (id)(*(uint64_t (**)(uint64_t))(a1 + 64))(a1);
    if (v10)
    {
      v11 = v10[4];
      if (v11 && (MethodImplementation = *(IMP *)(v11 + 8 * a2)) != 0)
      {
        v9 = (id)v10[1];
        if (v5)
          return v9;
      }
      else
      {
        v9 = (id)MethodCacheDispatchDataForSelectorIndex();
        MethodImplementation = v13;
        if (v5)
          return v9;
      }
    }
    else
    {
      v9 = (id)objc_msgSend(*(id *)(a1 + 8), "delegate");
      v14 = (objc_class *)objc_opt_class();
      MethodImplementation = class_getMethodImplementation(v14, *(SEL *)(*(_QWORD *)(a1 + 16) + 8 * a2));
      if (v9)
      {
        if (v5)
          return v9;
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "SBModifierCacheDispatchData MethodCacheDispatchDataForSelectorIndex(SBChainableModifierMethodCache *__unsafe_unretained, NSInteger)");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        NSStringFromSelector(*(SEL *)(*(_QWORD *)(a1 + 16) + 8 * a2));
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v17, "handleFailureInFunction:file:lineNumber:description:", v18, CFSTR("SBChainableModifierMethodCache.m"), 189, CFSTR("couldn't find implementor for %@"), v19);

        v9 = 0;
        if (v5)
          return v9;
      }
    }
    v15 = (_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * a2);
    *v15 = v9;
    v15[1] = MethodImplementation;
    return v9;
  }
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(char **)(a1 + 56);
  if (*(_QWORD *)(v4 + 8) != v6)
  {
    bzero(v7, 16 * *(_QWORD *)(a1 + 24));
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
    goto LABEL_6;
  }
  v8 = &v7[16 * a2];
  if (!*((_QWORD *)v8 + 1))
    goto LABEL_6;
  return *(id *)v8;
}

id NextQueryMethodCacheForMethodCache(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 64);
  if (v1)
    return *(id *)(v1 + 16);
  else
    return 0;
}

id PreviousContextMethodCacheForMethodCache(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 56);
  if (v1)
    return *(id *)(v1 + 24);
  else
    return 0;
}

uint64_t __blockIMPFromQuerySignature35_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature16_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature43_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature18_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature52_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature44_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature45_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature56_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

void sub_1D05532E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05534E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL SBLayoutRoleIsValidForSplitView(uint64_t a1)
{
  return ((1 << a1) & 0x7FFFFC19) == 0 && (unint64_t)(a1 - 1) < 0xA;
}

id SBSafeCast(uint64_t a1, void *a2)
{
  id v2;
  void *v3;
  id v4;

  v2 = a2;
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v3 = v2;
  else
    v3 = 0;
  v4 = v3;

  return v4;
}

BOOL SBApplicationClassicModeExpectsRoundedCorners(uint64_t a1)
{
  _BOOL8 result;
  unint64_t v3;

  result = 1;
  v3 = a1 + 1;
  if (v3 <= 0xF)
  {
    if (((1 << v3) & 0xE03D) != 0)
    {
      return 0;
    }
    else if (v3 == 1)
    {
      return SBFEffectiveHomeButtonType() == 2;
    }
  }
  return result;
}

void sub_1D0558A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *a11, id *a12, id *a13, id *a14, id *location)
{
  uint64_t v15;

  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak(a13);
  objc_destroyWeak(a12);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v15 - 144));
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromAnalyticsLayoutLocation(unint64_t a1)
{
  if (a1 > 0xA)
    return CFSTR("switcher");
  else
    return off_1E8EBEF58[a1];
}

const __CFString *SBAnalyticsNameForSystemGestureType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x8A)
    return CFSTR("none");
  else
    return off_1E8EB8FB0[a1 - 1];
}

id _SBWhitePointAdaptationInteractiveUpdateTimingFunction()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  +[SBHarmonyController sharedInstance](SBHarmonyController, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "harmonySettings");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  v2 = (void *)MEMORY[0x1E0CD27D0];
  objc_msgSend(v1, "whitePointAdaptationInteractiveUpdateTimingFunctionName");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "functionWithName:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1D055A010(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1D055A2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 128), 8);
  _Unwind_Resume(a1);
}

double SBSampleValueWithWhitePointAdaptationInteractiveUpdateTimingFunction(double a1)
{
  void *v2;
  double v3;
  void *v4;
  float v5;

  _SBWhitePointAdaptationInteractiveUpdateTimingFunction();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v2;
  if (v2)
  {
    *(float *)&v3 = a1;
    objc_msgSend(v2, "_solveForInput:", v3);
    a1 = v5;
  }

  return a1;
}

void sub_1D055AC10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;
  id *v24;
  id *v25;
  id *v26;
  uint64_t v27;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v27 - 104));
  _Unwind_Resume(a1);
}

void sub_1D055C3A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBLogTransaction()
{
  if (SBLogTransaction_onceToken != -1)
    dispatch_once(&SBLogTransaction_onceToken, &__block_literal_global_111_0);
  return (id)SBLogTransaction___logObj;
}

void sub_1D0561220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;

  _Block_object_dispose(&a71, 8);
  _Block_object_dispose(&STACK[0x210], 8);
  _Unwind_Resume(a1);
}

void sub_1D056194C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

uint64_t SBEqualObjects(void *a1, void *a2)
{
  if (a1 && a2)
    return objc_msgSend(a1, "isEqual:", a2);
  else
    return a1 == a2;
}

uint64_t SBAppLayoutConfigurationFromMainDisplayLayoutStateSpaceConfiguration(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 4)
    return 0;
  return result;
}

void sub_1D0563C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double SBScreenDisplayCornerRadius()
{
  double v0;
  NSObject *v1;
  void *v2;
  void *v3;
  double v4;
  uint8_t v6[16];

  v0 = *(double *)&__screenDisplayCornerRadius;
  if (*(double *)&__screenDisplayCornerRadius < 0.0)
  {
    SBLogCommon();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v6 = 0;
      _os_log_impl(&dword_1D0540000, v1, OS_LOG_TYPE_INFO, "Reading screen display corner radius static before it has been initialized", v6, 2u);
    }

    objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "traitCollection");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "displayCornerRadius");
    v0 = v4;

  }
  return v0;
}

uint64_t __blockIMPFromContextSignature8_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature5_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

void sub_1D056A930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D056B9C0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x2F0]);
  _Unwind_Resume(a1);
}

uint64_t SBSASizeApproximatelyEqualToSize()
{
  uint64_t result;

  result = BSFloatApproximatelyEqualToFloat();
  if ((_DWORD)result)
    return BSFloatApproximatelyEqualToFloat();
  return result;
}

uint64_t SBSARectApproximatelyEqualToRect()
{
  uint64_t result;

  result = SBSAPointApproximatelyEqualToPoint();
  if ((_DWORD)result)
    return SBSASizeApproximatelyEqualToSize();
  return result;
}

uint64_t SBSAPointApproximatelyEqualToPoint()
{
  uint64_t result;

  result = BSFloatApproximatelyEqualToFloat();
  if ((_DWORD)result)
    return BSFloatApproximatelyEqualToFloat();
  return result;
}

CGAffineTransform *SBSAAffineTransformFromContentScale@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>)
{
  CGAffineTransform *result;
  uint64_t v7;
  __int128 v8;

  if (!BSFloatIsOne())
    return CGAffineTransformMakeScale((CGAffineTransform *)a1, a2, a3);
  result = (CGAffineTransform *)BSFloatIsOne();
  if (!(_DWORD)result)
    return CGAffineTransformMakeScale((CGAffineTransform *)a1, a2, a3);
  v7 = MEMORY[0x1E0C9BAA8];
  v8 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
  *(_OWORD *)a1 = *MEMORY[0x1E0C9BAA8];
  *(_OWORD *)(a1 + 16) = v8;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v7 + 32);
  return result;
}

void sub_1D056EB7C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

id SBLogAppStatusBars()
{
  if (SBLogAppStatusBars_onceToken != -1)
    dispatch_once(&SBLogAppStatusBars_onceToken, &__block_literal_global_71_0);
  return (id)SBLogAppStatusBars___logObj;
}

uint64_t _SBStatusBarStyleFromLegacyStyle(uint64_t result)
{
  if (result != 1)
  {
    if (result == 3)
    {
      return 2;
    }
    else if (dyld_program_sdk_at_least())
    {
      return 0;
    }
    else
    {
      return 2;
    }
  }
  return result;
}

BOOL SBApplicationClassicModeRepresentsMoreSpace(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 0x12 || (unint64_t)(a1 - 20) < 2)
    return 0;
  if (a1)
    return a1 != -1;
  return SBFEffectiveHomeButtonType() == 2;
}

void sub_1D057199C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05722A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL SBPeekConfigurationIsValid(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

void sub_1D05739D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBAppLayoutContentInspectingPointerFunctionIsEqual(void *a1, void *a2)
{
  uint64_t v3;
  id *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  int v16;
  void *v17;
  void *v18;
  int v19;
  uint64_t v20;

  if (a1 == a2)
    return 1;
  v3 = 0;
  if (a1 && a2)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      return 0;
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      return 0;
    v5 = a1;
    v6 = a2;
    v7 = objc_msgSend(v5, "configuration");
    if (v7 == objc_msgSend(v6, "configuration"))
    {
      v8 = objc_msgSend(v5, "centerConfiguration");
      if (v8 == objc_msgSend(v6, "centerConfiguration"))
      {
        v9 = objc_msgSend(v5, "environment");
        if (v9 == objc_msgSend(v6, "environment"))
        {
          v10 = objc_msgSend(v5, "isHidden");
          if (v10 == objc_msgSend(v6, "isHidden"))
          {
            v12 = v6[14];
            v13 = v5[14];
            v3 = objc_msgSend(v13, "isEqual:", v12);

            if (!(_DWORD)v3)
              goto LABEL_11;
            objc_msgSend(v5, "centerItem");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v6, "centerItem");
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            v16 = BSEqualObjects();

            if (v16)
            {
              objc_msgSend(v5, "floatingItem");
              v17 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v6, "floatingItem");
              v18 = (void *)objc_claimAutoreleasedReturnValue();
              v19 = BSEqualObjects();

              if (v19)
              {
                v20 = objc_msgSend(v5, "preferredDisplayOrdinal");
                v3 = v20 == objc_msgSend(v6, "preferredDisplayOrdinal");
                goto LABEL_11;
              }
            }
          }
        }
      }
    }
    v3 = 0;
LABEL_11:

  }
  return v3;
}

void sub_1D0574DB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature5_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

void sub_1D0576258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,id location)
{
  id *v37;

  objc_destroyWeak(v37);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *SBHomeScreenBackdropMaterialRecipeName()
{
  if (SBHomeGestureEnabled())
    return CFSTR("homeScreenBackdrop-application");
  else
    return CFSTR("homeScreenBackdrop-switcher");
}

uint64_t SBHomeGestureEnabled()
{
  void *v0;
  uint64_t v1;

  +[SBPlatformController sharedInstance](SBPlatformController, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isHomeGestureEnabled");

  return v1;
}

void sub_1D0578088(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

double SBScreenScale()
{
  double v0;
  NSObject *v1;
  void *v2;
  double v3;
  uint8_t v5[16];

  v0 = *(double *)&__screenScale;
  if (*(double *)&__screenScale < 0.0)
  {
    SBLogCommon();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1D0540000, v1, OS_LOG_TYPE_INFO, "Reading screen scale static before it has been initialized", v5, 2u);
    }

    objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "scale");
    v0 = v3;

  }
  return v0;
}

void sub_1D0579154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void SBTraitsSceneParticipantDelegateOrientationChangeInspector(void *a1, void *a2, _QWORD *a3, uint64_t *a4, uint64_t *a5)
{
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;

  v33 = a1;
  v9 = a2;
  if (!a5)
    SBTraitsSceneParticipantDelegateOrientationChangeInspector_cold_1();
  v10 = v9;
  *a5 = 0;
  objc_msgSend(v9, "currentSettings");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "orientationSettings");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v32 = v10;
  objc_msgSend(v10, "previousSettings");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "orientationSettings");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v33, "settings");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = objc_msgSend(v15, "interfaceOrientation");

  v31 = objc_msgSend(v14, "orientation");
  objc_msgSend(v12, "orientationMapResolver");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "validatedOrientationInputs");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = objc_msgSend(v17, "currentDeviceOrientation");

  objc_msgSend(v14, "validatedOrientationInputs");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "currentDeviceOrientation");

  objc_msgSend(v14, "orientationMapResolver");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  if (v33)
  {
    objc_msgSend(v33, "uiSettings");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "interfaceOrientationMapResolver");
    v22 = a4;
    v23 = objc_claimAutoreleasedReturnValue();

    v19 = objc_msgSend(v21, "deviceOrientation");
    v20 = (void *)v23;
    a4 = v22;
  }
  if (a3)
  {
    *a3 = objc_msgSend(v12, "orientation");
    v24 = v32;
    if (a4)
    {
      v25 = v31;
      v26 = v29;
      if (!v31)
        v26 = 0;
      *a4 = v26;
      v27 = *a5 | (2 * (*a3 != v26));
      goto LABEL_14;
    }
LABEL_13:
    v27 = *a5;
    v25 = v31;
    goto LABEL_14;
  }
  v24 = v32;
  if (!a4)
    goto LABEL_13;
  v25 = v31;
  v28 = v29;
  if (!v31)
    v28 = 0;
  *a4 = v28;
  v27 = *a5;
LABEL_14:
  *a5 = (v25 == 0) | (4 * (v19 != v30)) | (8 * (v20 != v16)) | v27;

}

void sub_1D057BE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature61_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  id v13;
  uint64_t (*v14)(id, _QWORD, uint64_t, double, double, double, double);

  v13 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v14(v13, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7);
}

__CFString *SBIdleTimerIntervalToNSString(double a1)
{
  __CFString *v2;

  if ((BSFloatEqualToFloat() & 1) != 0)
  {
    v2 = CFSTR("<never>");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%g"), *(_QWORD *)&a1);
    v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

void sub_1D05813B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBLogAppSwitcher()
{
  if (SBLogAppSwitcher_onceToken != -1)
    dispatch_once(&SBLogAppSwitcher_onceToken, &__block_literal_global_53_1);
  return (id)SBLogAppSwitcher___logObj;
}

uint64_t __blockIMPFromQuerySignature51_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t (*v8)(id, _QWORD, id);
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = a3;
  v7 = MethodCacheDispatchDataForSelectorIndex(v4, v5);
  v9 = v8(v7, *(_QWORD *)(a1 + 40), v6);

  return v9;
}

void sub_1D0583CF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature6_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromQuerySignature80_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t SBSwitcherContinuousExposeStripTongueAttributesNone()
{
  return 1;
}

uint64_t SBSwitcherAsyncRenderingAttributesMake(unsigned int a1, int a2)
{
  int v2;

  if (a2)
    v2 = 256;
  else
    v2 = 0;
  return v2 | a1;
}

void sub_1D0588388(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0xAC0], 8);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature62_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  id v15;
  uint64_t (*v16)(id, _QWORD, uint64_t, uint64_t, double, double, double, double);

  v15 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v16(v15, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8);
}

uint64_t __blockIMPFromQuerySignature55_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature41_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature23_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

double __blockIMPFromQuerySignature76_block_invoke(uint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  double (*v12)(id, _QWORD, id, double, double);
  double v13;

  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = a3;
  v11 = MethodCacheDispatchDataForSelectorIndex(v9, v8);
  v13 = v12(v11, *(_QWORD *)(a1 + 40), v10, a4, a5);

  return v13;
}

double __blockIMPFromQuerySignature75_block_invoke(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  double (*v16)(id, _QWORD, id, double, double, double, double);
  double v17;

  v12 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = a3;
  v15 = MethodCacheDispatchDataForSelectorIndex(v12, v13);
  v17 = v16(v15, *(_QWORD *)(a1 + 40), v14, a4, a5, a6, a7);

  return v17;
}

uint64_t __blockIMPFromQuerySignature47_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature83_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature78_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

double __blockIMPFromQuerySignature77_block_invoke(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  double (*v10)(id, _QWORD, id, double);
  double v11;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a3;
  v9 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v11 = v10(v9, *(_QWORD *)(a1 + 40), v8, a4);

  return v11;
}

uint64_t __blockIMPFromQuerySignature58_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature2_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

double SBSwitcherWallpaperGradientAttributesMakeEmpty()
{
  return 0.0;
}

void sub_1D05898FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature84_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  id v17;
  uint64_t (*v18)(id, _QWORD, uint64_t, uint64_t, uint64_t, double, double, double, double);

  v17 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v18(v17, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8, a9);
}

uint64_t __blockIMPFromQuerySignature68_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature67_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  id v15;
  uint64_t (*v16)(id, _QWORD, uint64_t, uint64_t, double, double, double, double);

  v15 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v16(v15, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8);
}

uint64_t __blockIMPFromQuerySignature57_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature34_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

void sub_1D058BBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,char a58)
{
  uint64_t v58;

  _Block_object_dispose(&a52, 8);
  _Block_object_dispose(&a58, 8);
  _Block_object_dispose((const void *)(v58 - 232), 8);
  _Block_object_dispose((const void *)(v58 - 200), 8);
  _Block_object_dispose((const void *)(v58 - 168), 8);
  _Block_object_dispose((const void *)(v58 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1D05902CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05908D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0590CE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0591AA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *SBLayoutRoleMaskDescription(uint64_t a1)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, unint64_t);
  void *v9;
  id v10;
  uint64_t v11;

  if (!a1)
    return CFSTR("none");
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = MEMORY[0x1E0C809B0];
  v7 = 3221225472;
  v8 = __SBLayoutRoleMaskDescription_block_invoke;
  v9 = &unk_1E8EBBF50;
  v10 = v2;
  v11 = a1;
  v3 = v2;
  SBLayoutRoleEnumerateValidRoles(&v6);
  objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", "), v6, v7, v8, v9);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return (__CFString *)v4;
}

__CFString *SBLayoutAttributesDescription(uint64_t a1)
{
  char v1;
  void *v2;
  void *v3;
  __CFString *v4;

  if (a1)
  {
    v1 = a1;
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if ((v1 & 1) != 0)
      objc_msgSend(v2, "addObject:", CFSTR("supportsAnySize"));
    if ((v1 & 2) != 0)
      objc_msgSend(v3, "addObject:", CFSTR("wantsExclusiveForeground"));
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", "));
    v4 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v4 = CFSTR("none");
  }
  return v4;
}

void sub_1D05941A0(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x368], 8);
  _Block_object_dispose(&STACK[0x388], 8);
  _Unwind_Resume(a1);
}

void sub_1D0595AB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,id location)
{
  id *v36;

  objc_destroyWeak(v36);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05961D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  _Block_object_dispose(&a19, 8);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0596384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature29_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

void sub_1D05974EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

id SBLogTransactionVerbose()
{
  if (SBLogTransactionVerbose_onceToken != -1)
    dispatch_once(&SBLogTransactionVerbose_onceToken, &__block_literal_global_113);
  return (id)SBLogTransactionVerbose___logObj;
}

void sub_1D05993D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id *a16, id *a17, id *a18, id *location, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,id a52)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a18);
  objc_destroyWeak(a17);
  objc_destroyWeak(a16);
  objc_destroyWeak(&a52);
  _Unwind_Resume(a1);
}

void sub_1D0599750(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;
  id *v26;
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromSBWorkspaceSceneLayoutTransitionOptions(char a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  __CFString *v6;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v2, "addObject:", CFSTR("noSceneChanges"));
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_4;
      goto LABEL_10;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  objc_msgSend(v3, "addObject:", CFSTR("beginImmediately"));
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_10:
  objc_msgSend(v3, "addObject:", CFSTR("finishImmediately"));
  if ((a1 & 8) != 0)
LABEL_5:
    objc_msgSend(v3, "addObject:", CFSTR("noContinuation"));
LABEL_6:
  if ((unint64_t)objc_msgSend(v3, "count") < 2)
  {
    if (objc_msgSend(v3, "count") == 1)
    {
      objc_msgSend(v3, "firstObject");
      v6 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6 = CFSTR("default");
    }
  }
  else
  {
    v4 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", "));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "stringWithFormat:", CFSTR("(%@)"), v5);
    v6 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  return v6;
}

void sub_1D0599E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D059A630(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D059AA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *SBStringForBlurItemContainerQuality(unint64_t a1)
{
  if (a1 > 3)
    return 0;
  else
    return off_1E8EBA870[a1];
}

const __CFString *SBWindowSceneStatusBarSettingsLevelDescription(unint64_t a1)
{
  if (a1 > 0xC)
    return CFSTR("invalid");
  else
    return off_1E8EBC3A0[a1];
}

__CFString *NSStringFromSBKeyboardFocusAdviceAcceptancePolicy(unint64_t a1)
{
  if (a1 < 3)
    return off_1E8EBE7A0[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("unknown (%d)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D059F874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *SBLayoutRoleDescription(unint64_t a1)
{
  unint64_t v1;
  __CFString *v3;

  v1 = a1 - 5;
  if (a1 < 5)
    return off_1E8EBBF98[a1];
  if (v1 > 0x14)
  {
    v3 = CFSTR("unknown");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("additional side %ld"), v1);
    v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v3;
}

const __CFString *NSStringFromSBSwitcherModifierEventType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x26)
    return CFSTR("InitialSetup");
  else
    return off_1E8EBB0A0[a1 - 1];
}

void sub_1D05A1410(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *SBStringForUnlockedEnvironmentMode(unint64_t a1)
{
  if (a1 > 3)
    return 0;
  else
    return off_1E8EB2968[a1];
}

__CFString *SBStringForSpaceConfiguration(unint64_t a1)
{
  if (a1 > 4)
    return 0;
  else
    return off_1E8EB28E0[a1];
}

const __CFString *NSStringFromDisplayItemSizingPolicy(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("snap-to-grid");
  if (a1 == 1)
    v1 = CFSTR("zoomed-to-fill");
  if (a1 == 2)
    return CFSTR("maximized");
  else
    return v1;
}

void sub_1D05A19A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double SBSACornerRadiusForContainerBounds(uint64_t a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v11;
  double Width;
  double Height;
  double v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  CGRect v20;
  CGRect v21;

  v11 = a2;
  v20.origin.x = a3;
  v20.origin.y = a4;
  v20.size.width = a5;
  v20.size.height = a6;
  Width = CGRectGetWidth(v20);
  v21.origin.x = a3;
  v21.origin.y = a4;
  v21.size.width = a5;
  v21.size.height = a6;
  Height = CGRectGetHeight(v21);
  if (Width <= Height)
    v14 = Width;
  else
    v14 = Height;
  objc_msgSend(v11, "platformMetrics");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  v16 = v14 * 0.5;
  objc_msgSend(v15, "maximumCornerRadius");
  if (v16 > v17)
    v16 = v17;
  switch(a1)
  {
    case 1:
      objc_msgSend(v15, "customLayoutSquareCornerRadius");
      goto LABEL_11;
    case 2:
      objc_msgSend(v15, "customLayoutSquareLargeCornerRadius");
      goto LABEL_11;
    case 3:
      objc_msgSend(v15, "customLayoutOvalCornerRadius");
      goto LABEL_11;
    case 4:
      objc_msgSend(v15, "customLayoutTallRectCornerRadius");
LABEL_11:
      v16 = v18;
      break;
    default:
      break;
  }

  return v16;
}

void sub_1D05A6D50(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_1D05A7008(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D05A939C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05A96E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05A97B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05AA3C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05AA7B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBLogTelemetrySignposts()
{
  if (SBLogTelemetrySignposts_onceToken != -1)
    dispatch_once(&SBLogTelemetrySignposts_onceToken, &__block_literal_global_47_3);
  return (id)SBLogTelemetrySignposts___logObj;
}

uint64_t SBWorkspaceSuspendActiveDisplay()
{
  return __SBWorkspaceActivateSpringBoardWithResult(0, 0, 1, 1, 0, 0, 0);
}

void sub_1D05AB518(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1D05ABC20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBAppendChainableModifierResponse(void *a1, void *a2)
{
  id v3;
  void *v4;
  id v5;
  id v6;

  v3 = a2;
  v4 = v3;
  if (a1)
  {
    v5 = a1;
    objc_msgSend((id)objc_opt_class(), "responseByAppendingResponse:toResponse:", v5, v4);
    v6 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = v3;
  }

  return v6;
}

void sub_1D05AE2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t __blockIMPFromQuerySignature7_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __SBWorkspaceActivateSpringBoardWithResult(uint64_t a1, void *a2, int a3, int a4, int a5, void *a6, void *a7)
{
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  char v23;
  _BOOL4 v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void (**v28)(_QWORD);
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  uint64_t v38;
  _BOOL4 v40;
  void *v41;
  void *v43;
  void *v44;
  _QWORD v46[4];
  id v47;
  id v48;
  id v49;
  id v50;
  id v51;
  char v52;
  char v53;
  _QWORD v54[4];
  id v55;
  _QWORD v56[4];
  id v57;
  _QWORD v58[4];
  id v59;

  v11 = a2;
  v12 = a6;
  v13 = a7;
  +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "identity");
  v15 = objc_claimAutoreleasedReturnValue();
  v43 = v12;
  v44 = (void *)v15;
  if (v15
    && (v16 = v15,
        objc_msgSend((id)SBApp, "windowSceneManager"),
        v17 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v17, "windowSceneForDisplayIdentity:", v16),
        v18 = (void *)objc_claimAutoreleasedReturnValue(),
        v17,
        v18))
  {
    v19 = v18;
    v41 = v19;
  }
  else
  {
    objc_msgSend((id)SBApp, "windowSceneManager");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "activeDisplayWindowScene");
    v19 = (id)objc_claimAutoreleasedReturnValue();

    v41 = 0;
  }
  objc_msgSend(v19, "switcherController");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    if (!a3)
      goto LABEL_11;
  }
  else
  {
    objc_msgSend(v19, "_fbsDisplayConfiguration");
    v11 = (id)objc_claimAutoreleasedReturnValue();
    if (!a3)
      goto LABEL_11;
  }
  objc_msgSend(v14, "transientOverlayPresentationManager");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "hasActivePresentation");

  if ((v23 & 1) != 0)
  {
    v24 = 1;
    goto LABEL_12;
  }
LABEL_11:
  v24 = objc_msgSend(v21, "unlockedEnvironmentMode") != 1;
LABEL_12:
  v40 = v24;
  v25 = MEMORY[0x1E0C809B0];
  if (a4)
  {
    objc_msgSend(v14, "currentTransaction");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = v26;
    if (v26 && objc_msgSend(v26, "isInterruptible"))
    {
      v58[0] = v25;
      v58[1] = 3221225472;
      v58[2] = ____SBWorkspaceActivateSpringBoardWithResult_block_invoke;
      v58[3] = &unk_1E8E9DED8;
      v59 = v27;
      v28 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v58);

    }
    else
    {
      v28 = 0;
    }

    if (v28)
      goto LABEL_21;
  }
  else
  {
    v28 = 0;
  }
  if (a5)
  {
    v56[0] = v25;
    v56[1] = 3221225472;
    v56[2] = ____SBWorkspaceActivateSpringBoardWithResult_block_invoke_2;
    v56[3] = &unk_1E8E9DED8;
    v57 = v14;
    v28 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v56);

  }
LABEL_21:
  if (v28)
    v28[2](v28);
  objc_msgSend(v14, "createRequestWithOptions:displayConfiguration:", 0, v11);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "setEventLabel:", CFSTR("ActivateSpringBoard"));
  objc_msgSend(v29, "setSource:", a1);
  v54[0] = v25;
  v54[1] = 3221225472;
  v54[2] = ____SBWorkspaceActivateSpringBoardWithResult_block_invoke_3;
  v54[3] = &unk_1E8E9F950;
  v30 = v43;
  v55 = v30;
  objc_msgSend(v29, "modifyApplicationContext:", v54);
  v46[0] = v25;
  v46[1] = 3221225472;
  v46[2] = ____SBWorkspaceActivateSpringBoardWithResult_block_invoke_4;
  v46[3] = &unk_1E8E9F9A0;
  v52 = a5;
  v53 = a3;
  v47 = v14;
  v48 = v21;
  v49 = v19;
  v50 = v13;
  v51 = v30;
  v31 = v30;
  v32 = v13;
  v33 = v19;
  v34 = v21;
  v35 = v14;
  v36 = (void *)MEMORY[0x1D17E5550](v46);
  +[SBReachabilityManager sharedInstance](SBReachabilityManager, "sharedInstance");
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v37, "deactivateReachability");

  v38 = objc_msgSend(v35, "executeTransitionRequest:withValidator:", v29, v36) & v40;
  return v38;
}

const __CFString *SBMainWorkspaceTransitionSourceDescription(unint64_t a1)
{
  if (a1 > 0x47)
    return CFSTR("Invalid");
  else
    return off_1E8EBD650[a1];
}

void sub_1D05AFA6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  id *v32;

  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05B0FC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBWorkspaceIsSystemBootComplete()
{
  return __SBWFinishedBoot;
}

BOOL SBSAAreElementLayoutsEqualToLayouts(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  _BOOL8 v6;
  _QWORD v8[4];
  id v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  BOOL v14;

  v3 = a1;
  v4 = a2;
  v11 = 0;
  v12 = &v11;
  v13 = 0x2020000000;
  v14 = 0;
  v5 = objc_msgSend(v3, "count");
  v14 = v5 == objc_msgSend(v4, "count");
  if (*((_BYTE *)v12 + 24))
  {
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __SBSAAreElementLayoutsEqualToLayouts_block_invoke;
    v8[3] = &unk_1E8EBB970;
    v10 = &v11;
    v9 = v4;
    objc_msgSend(v3, "enumerateObjectsUsingBlock:", v8);

    v6 = *((_BYTE *)v12 + 24) != 0;
  }
  else
  {
    v6 = 0;
  }
  _Block_object_dispose(&v11, 8);

  return v6;
}

void sub_1D05B2D04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBLogAlertItems()
{
  if (SBLogAlertItems_onceToken != -1)
    dispatch_once(&SBLogAlertItems_onceToken, &__block_literal_global_29_5);
  return (id)SBLogAlertItems___logObj;
}

void sub_1D05B4194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBLogWorkspace()
{
  if (SBLogWorkspace_onceToken != -1)
    dispatch_once(&SBLogWorkspace_onceToken, &__block_literal_global_109);
  return (id)SBLogWorkspace___logObj;
}

void sub_1D05B50BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBSetMinimumBrightnessLevel(int a1)
{
  void *v1;

  if (a1)
  {
    if (__sb__runningInSpringBoard())
    {
      SBFEffectiveDeviceClass();
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "userInterfaceIdiom");

    }
  }
  return BKSHIDServicesSetMinimumBrightnessLevelWithFadeDuration();
}

uint64_t SBMainWorkspaceTransitionSourceIsUserEventDriven(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  v1 = a1 - 1;
  result = 1;
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 14:
    case 15:
    case 18:
    case 19:
    case 21:
    case 23:
    case 24:
    case 25:
    case 26:
    case 28:
    case 29:
    case 31:
    case 33:
    case 34:
    case 49:
    case 50:
    case 53:
    case 54:
    case 59:
    case 62:
    case 64:
    case 65:
    case 66:
    case 69:
      return result;
    default:
      result = 0;
      break;
  }
  return result;
}

uint64_t SBSwitcherWallpaperGradientAttributesEqual()
{
  uint64_t result;

  result = BSFloatEqualToFloat();
  if ((_DWORD)result)
    return BSFloatEqualToFloat();
  return result;
}

uint64_t __blockIMPFromContextSignature18_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature17_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

BOOL SBPIPContentTypeIsValid(unint64_t a1)
{
  return a1 < 2;
}

id SBPIPApplicationForProcessIdentifier(void *a1, int a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  id v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  objc_msgSend(a1, "pictureInPictureApplications", 0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v12;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        if (objc_msgSend(v8, "processIdentifier") == a2)
        {
          v9 = v8;
          goto LABEL_11;
        }
      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      if (v5)
        continue;
      break;
    }
  }
  v9 = 0;
LABEL_11:

  return v9;
}

void sub_1D05BA6C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05BBCB0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void SBSnapshotViewEnumerateSupportedRoles(void *a1)
{
  id v1;
  id v2;
  _QWORD v3[4];
  id v4;

  v1 = a1;
  if (v1)
  {
    v3[1] = 3221225472;
    v3[2] = __SBSnapshotViewEnumerateSupportedRoles_block_invoke;
    v3[3] = &unk_1E8EB09C0;
    v2 = v1;
    v3[0] = MEMORY[0x1E0C809B0];
    v4 = v1;
    SBLayoutRoleEnumerateValidRoles(v3);

    v1 = v2;
  }

}

BOOL SBApplicationClassicModeRepresentsPad(uint64_t a1)
{
  return (unint64_t)(a1 - 12) < 0xFFFFFFFFFFFFFFF3;
}

const __CFString *SBStringFromSwitcherOrientationPolicy(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 3)
    return CFSTR("None");
  else
    return off_1E8EB2EF8[a1 - 2];
}

void sub_1D05C16CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location,id a28)
{
  id *v28;
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a28);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromSwitcherLiveOverlayOrientationPolicy(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 4)
    return CFSTR("None");
  else
    return off_1E8EB2F18[a1 - 2];
}

void sub_1D05C2110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBLogScreenTime()
{
  if (SBLogScreenTime_onceToken != -1)
    dispatch_once(&SBLogScreenTime_onceToken, &__block_literal_global_11_6);
  return (id)SBLogScreenTime___logObj;
}

void sub_1D05C5568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05C5990(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05C5CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;
  id *v18;
  uint64_t v19;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v19 - 56));
  _Unwind_Resume(a1);
}

void sub_1D05C6948(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_1D05C71AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05C7520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, id *a10)
{
  id *v10;
  uint64_t v11;

  objc_destroyWeak(v10);
  objc_destroyWeak((id *)(v11 - 112));
  _Unwind_Resume(a1);
}

void sub_1D05C774C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05C791C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  _Block_object_dispose(&location, 8);
  _Unwind_Resume(a1);
}

void sub_1D05C7EF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05C81A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, id *a11)
{
  id *v11;
  id *v12;
  id *v13;
  uint64_t v14;

  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak(a11);
  objc_destroyWeak((id *)(v14 - 112));
  _Unwind_Resume(a1);
}

void sub_1D05C83DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05C8C78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBStatusBarLegacyStyleFromStyle(uint64_t a1)
{
  if (a1 == 2)
    return 3;
  else
    return a1 == 1;
}

void sub_1D05CAA08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05CAE64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05CB30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05CBCE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;
  id *v26;
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBDefaultBackgroundColorForAppScene(int a1)
{
  if (!a1)
    return 0;
  objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
  return (id)objc_claimAutoreleasedReturnValue();
}

uint64_t SBTraitsArbiterOrientationActuationEnabledForRole(void *a1)
{
  uint64_t v1;
  id v2;
  int v3;

  v1 = SBTraitsArbiterOrientationActuationEnabledForRole_onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&SBTraitsArbiterOrientationActuationEnabledForRole_onceToken, &__block_literal_global_39);
  v3 = objc_msgSend((id)SBTraitsArbiterOrientationActuationEnabledForRole__yetToBeManagedTraitsRoles, "containsObject:", v2);

  return v3 ^ 1u;
}

void sub_1D05CEBDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05CED68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBWTErrorCreateForTransaction(void *a1)
{
  id v1;
  id v2;
  const __CFString *v3;
  uint64_t v4;
  const __CFString *v5;
  objc_class *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v11;
  void *v12;

  v1 = a1;
  if (!v1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSError *SBWTErrorCreateForTransaction(BSTransaction *__strong)");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "handleFailureInFunction:file:lineNumber:description:", v12, CFSTR("SBWorkspaceTransaction.m"), 53, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("transaction"));

  }
  v2 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  if ((objc_msgSend(v1, "isFailed") & 1) != 0)
  {
    v3 = CFSTR("Transaction failed.");
    v4 = 1;
    v5 = CFSTR("Failed");
  }
  else
  {
    if (!objc_msgSend(v1, "isInterrupted"))
    {
      v9 = 0;
      goto LABEL_9;
    }
    v3 = CFSTR("Transaction interrupted.");
    v4 = 2;
    v5 = CFSTR("Interrupted");
  }
  objc_msgSend(v2, "setObject:forKey:", v5, *MEMORY[0x1E0D01298]);
  objc_msgSend(v2, "setObject:forKey:", v3, *MEMORY[0x1E0CB2D68]);
  v6 = (objc_class *)objc_opt_class();
  NSStringFromClass(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setObject:forKey:", v7, CFSTR("SBTransaction"));

  objc_msgSend(v1, "error");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bs_setSafeObject:forKey:", v8, *MEMORY[0x1E0CB3388]);

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("SBWorkspaceTransaction"), v4, v2);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_9:

  return v9;
}

void SBKeyValueLog(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  NSObject *v7;
  void *v8;
  uint8_t buf[4];
  void *v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  SBLogCommon();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEBUG))
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%*s%@:%*s%@"), (2 * a3) | 1u, " ", v5, 33 - (objc_msgSend(v5, "length") + 2 * a3), " ", v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v10 = v8;
    _os_log_debug_impl(&dword_1D0540000, v7, OS_LOG_TYPE_DEBUG, "SBWPA%@", buf, 0xCu);

  }
}

BOOL SBWorkspaceHasApplicationSceneInLockedOrUnlockedEnvironmentLayoutState()
{
  void *v0;
  _BOOL8 v1;

  SBWorkspaceApplicationSceneHandlesInLockedOrUnlockedEnvironmentLayoutState();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "count") != 0;

  return v1;
}

uint64_t SBLayoutRoleMaskForRole(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0xA)
    return 0;
  else
    return 1 << a1;
}

uint64_t SBLayoutRoleMaskAll()
{
  return 1022;
}

id SBLogHomeAffordance()
{
  if (SBLogHomeAffordance_onceToken != -1)
    dispatch_once(&SBLogHomeAffordance_onceToken, &__block_literal_global_39_1);
  return (id)SBLogHomeAffordance___logObj;
}

void sub_1D05D289C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05D4560(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBLogPointer()
{
  if (SBLogPointer_onceToken != -1)
    dispatch_once(&SBLogPointer_onceToken, &__block_literal_global_93_1);
  return (id)SBLogPointer___logObj;
}

void sub_1D05D7220(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

uint64_t SBWorkspaceSpringBoardIsActive()
{
  void *v0;
  void *v1;
  uint64_t IsActive;

  objc_msgSend((id)SBApp, "windowSceneManager");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "activeDisplayWindowScene");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  IsActive = SBWorkspaceLauncherIsActive(v1, 0);

  return IsActive;
}

void sub_1D05D83BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBLogSystemGestureAppSwitcher()
{
  if (SBLogSystemGestureAppSwitcher_onceToken != -1)
    dispatch_once(&SBLogSystemGestureAppSwitcher_onceToken, &__block_literal_global_149);
  return (id)SBLogSystemGestureAppSwitcher___logObj;
}

void sub_1D05D8EC4(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x268], 8);
  _Unwind_Resume(a1);
}

void sub_1D05DA97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05DB208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;

  _Block_object_dispose(&a66, 8);
  _Unwind_Resume(a1);
}

void sub_1D05DD16C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D05DD24C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D05DD31C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t SBSAIsElementLayoutEqualToLayout(void *a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  _BOOL4 v6;
  uint64_t v7;

  v3 = a1;
  v4 = a2;
  if (SAElementIdentityEqualToIdentity()
    && (v5 = objc_msgSend(v3, "layoutMode"), v5 == objc_msgSend(v4, "layoutMode")))
  {
    v6 = (unint64_t)(objc_msgSend(v3, "interfaceOrientation") - 5) < 0xFFFFFFFFFFFFFFFELL;
    v7 = v6 ^ ((unint64_t)(objc_msgSend(v4, "interfaceOrientation") - 3) < 2);
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

id SBLogSystemApertureMediation()
{
  if (SBLogSystemApertureMediation_onceToken != -1)
    dispatch_once(&SBLogSystemApertureMediation_onceToken, &__block_literal_global_187_2);
  return (id)SBLogSystemApertureMediation___logObj;
}

void sub_1D05DFCD0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D05DFE60(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D05E0854(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

uint64_t SBSystemApertureContainerRenderingConfigurationMake@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  a4[1] = a2;
  a4[2] = 0;
  *a4 = result;
  *((_BYTE *)a4 + 16) = a3;
  return result;
}

const __CFString *SBStringFromSystemApertureContainerRenderingStyle(unint64_t a1)
{
  if (a1 > 3)
    return CFSTR("Unspecified");
  else
    return off_1E8EB95F8[a1];
}

const __CFString *SBStringFromSystemApertureContainerCloningStyle(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Visible");
  if (a1 == 1)
    v1 = CFSTR("Alpha Transition");
  if (a1)
    return v1;
  else
    return CFSTR("Hidden");
}

id SBLogSystemAperturePreferencesStackRenderingCloning()
{
  if (SBLogSystemAperturePreferencesStackRenderingCloning_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackRenderingCloning_onceToken, &__block_literal_global_199_0);
  return (id)SBLogSystemAperturePreferencesStackRenderingCloning___logObj;
}

void sub_1D05E1F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05E248C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05E2D4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05E35AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBWorkspaceApplicationSceneHandlesInLockedOrUnlockedEnvironmentLayoutState()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  objc_msgSend((id)SBApp, "windowSceneManager");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "activeDisplayWindowScene");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "switcherController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layoutStateApplicationSceneHandles");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[SBCoverSheetPresentationManager sharedInstanceIfExists](SBCoverSheetPresentationManager, "sharedInstanceIfExists");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "coverSheetHostedAppSceneHandle");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (v6)
    {
      objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", v6);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v7 = 0;
    }
    v9 = objc_msgSend(v3, "count");
    v10 = objc_msgSend(v7, "count");
    if (v9 | v10)
    {
      v11 = v10;
      objc_msgSend(MEMORY[0x1E0C99E20], "set");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      v8 = v12;
      if (v9)
        objc_msgSend(v12, "unionSet:", v3);
      if (v11)
        objc_msgSend(v8, "unionSet:", v7);
    }
    else
    {
      v8 = 0;
    }

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

void sub_1D05E52A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05E6C20(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x340], 8);
  _Unwind_Resume(a1);
}

void sub_1D05E6F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *SBStatusBarItemDebugName(uint64_t a1)
{
  __CFString *v1;

  if (a1 < 0x2E && ((0x379FFFEFF7FFuLL >> a1) & 1) != 0)
  {
    v1 = off_1E8EBFAF8[(int)a1];
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%i)"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

void sub_1D05EAAF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _SBLogCoalescedTouchesForGestureAndView(void *a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  objc_class *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  id v34;
  id obj;
  uint64_t v36;
  id v37;
  uint64_t v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  void *v51;
  void *v52;
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[13];
  _QWORD v56[13];
  _BYTE v57[128];
  uint64_t v58;

  v58 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v37 = a2;
  objc_msgSend(MEMORY[0x1E0DAFEC0], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEnabled");

  if (v5)
  {
    v49 = 0u;
    v50 = 0u;
    v47 = 0u;
    v48 = 0u;
    v34 = v3;
    obj = v3;
    v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v57, 16);
    if (v38)
    {
      v36 = *(_QWORD *)v48;
      do
      {
        v6 = 0;
        do
        {
          if (*(_QWORD *)v48 != v36)
            objc_enumerationMutation(obj);
          v7 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * v6);
          v8 = _SBLocationForTouch(v7);
          v10 = v9;
          objc_msgSend(MEMORY[0x1E0C99DE8], "array");
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          v46 = v6;
          v55[0] = CFSTR("timestamp");
          v11 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "timestamp");
          objc_msgSend(v11, "numberWithDouble:");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v56[0] = v44;
          v55[1] = CFSTR("phase");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "phase"));
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          v56[1] = v43;
          v55[2] = CFSTR("tapCount");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v7, "tapCount"));
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          v56[2] = v42;
          v55[3] = CFSTR("type");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "type"));
          v41 = (void *)objc_claimAutoreleasedReturnValue();
          v56[3] = v41;
          v55[4] = CFSTR("majorRadius");
          v12 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "majorRadius");
          objc_msgSend(v12, "numberWithDouble:");
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          v56[4] = v40;
          v55[5] = CFSTR("majorRadiusToTolerance");
          v13 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "majorRadiusTolerance");
          objc_msgSend(v13, "numberWithDouble:");
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          v56[5] = v39;
          v55[6] = CFSTR("force");
          v14 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "force");
          objc_msgSend(v14, "numberWithDouble:");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v56[6] = v15;
          v55[7] = CFSTR("maximumPossibleForce");
          v16 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "maximumPossibleForce");
          objc_msgSend(v16, "numberWithDouble:");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          v56[7] = v17;
          v55[8] = CFSTR("altitudeAngle");
          v18 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "altitudeAngle");
          objc_msgSend(v18, "numberWithDouble:");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v56[8] = v19;
          v55[9] = CFSTR("estimationUpdateIndex");
          objc_msgSend(v7, "estimationUpdateIndex");
          v20 = objc_claimAutoreleasedReturnValue();
          v21 = (void *)v20;
          v22 = &unk_1E91D0E60;
          if (v20)
            v22 = (void *)v20;
          v56[9] = v22;
          v55[10] = CFSTR("estimatedProperties");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "estimatedProperties"));
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v56[10] = v23;
          v55[11] = CFSTR("estimatedPropertiesExpectingUpdates");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "estimatedPropertiesExpectingUpdates"));
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v56[11] = v24;
          v55[12] = CFSTR("location");
          v53[0] = CFSTR("x");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v8);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          v53[1] = CFSTR("y");
          v54[0] = v25;
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v10);
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          v54[1] = v26;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v54, v53, 2);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          v56[12] = v27;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v56, v55, 13);
          v28 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v45, "addObject:", v28);
          v29 = (objc_class *)objc_opt_class();
          NSStringFromClass(v29);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("[%@ %@]"), v30, CFSTR("_SBLogCoalescedTouches"));
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0DAFEC0], "sharedInstance");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          v51 = v31;
          v52 = v45;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v52, &v51, 1);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v32, "log:", v33);

          v6 = v46 + 1;
        }
        while (v38 != v46 + 1);
        v38 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v57, 16);
      }
      while (v38);
    }

    v3 = v34;
  }

}

void _SBLogCoalescedTouchesForGestureAndView_0(void *a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  objc_class *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  const __CFString *v36;
  void *v37;
  id v38;
  id obj;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _QWORD v55[3];
  _QWORD v56[3];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[13];
  _QWORD v60[13];
  _BYTE v61[128];
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v41 = a2;
  objc_msgSend(MEMORY[0x1E0DAFEC0], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEnabled");

  if (v5)
  {
    v53 = 0u;
    v54 = 0u;
    v51 = 0u;
    v52 = 0u;
    v38 = v3;
    obj = v3;
    v42 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v61, 16);
    if (v42)
    {
      v40 = *(_QWORD *)v52;
      do
      {
        v6 = 0;
        do
        {
          if (*(_QWORD *)v52 != v40)
            objc_enumerationMutation(obj);
          v7 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * v6);
          v8 = _SBLocationForTouch(v7);
          v10 = v9;
          objc_msgSend(MEMORY[0x1E0C99DE8], "array");
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          v50 = v6;
          v59[0] = CFSTR("timestamp");
          v11 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "timestamp");
          objc_msgSend(v11, "numberWithDouble:");
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          v60[0] = v48;
          v59[1] = CFSTR("phase");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "phase"));
          v47 = (void *)objc_claimAutoreleasedReturnValue();
          v60[1] = v47;
          v59[2] = CFSTR("tapCount");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v7, "tapCount"));
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          v60[2] = v46;
          v59[3] = CFSTR("type");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "type"));
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          v60[3] = v45;
          v59[4] = CFSTR("majorRadius");
          v12 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "majorRadius");
          objc_msgSend(v12, "numberWithDouble:");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v60[4] = v44;
          v59[5] = CFSTR("majorRadiusToTolerance");
          v13 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "majorRadiusTolerance");
          objc_msgSend(v13, "numberWithDouble:");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          v60[5] = v43;
          v59[6] = CFSTR("force");
          v14 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "force");
          objc_msgSend(v14, "numberWithDouble:");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v60[6] = v15;
          v59[7] = CFSTR("maximumPossibleForce");
          v16 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "maximumPossibleForce");
          objc_msgSend(v16, "numberWithDouble:");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          v60[7] = v17;
          v59[8] = CFSTR("altitudeAngle");
          v18 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "altitudeAngle");
          objc_msgSend(v18, "numberWithDouble:");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v60[8] = v19;
          v59[9] = CFSTR("estimationUpdateIndex");
          objc_msgSend(v7, "estimationUpdateIndex");
          v20 = objc_claimAutoreleasedReturnValue();
          v21 = (void *)v20;
          v22 = &unk_1E91D0EF0;
          if (v20)
            v22 = (void *)v20;
          v60[9] = v22;
          v59[10] = CFSTR("estimatedProperties");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "estimatedProperties"));
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v60[10] = v23;
          v59[11] = CFSTR("estimatedPropertiesExpectingUpdates");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "estimatedPropertiesExpectingUpdates"));
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v60[11] = v24;
          v59[12] = CFSTR("location");
          v57[0] = CFSTR("x");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v8);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          v57[1] = CFSTR("y");
          v58[0] = v25;
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v10);
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          v58[1] = v26;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v58, v57, 2);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          v60[12] = v27;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v60, v59, 13);
          v28 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v49, "addObject:", v28);
          v29 = (objc_class *)objc_opt_class();
          NSStringFromClass(v29);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("[%@ %@]"), v30, CFSTR("_SBLogCoalescedTouches"));
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0DAFEC0], "sharedInstance");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          v56[0] = v49;
          v55[0] = v31;
          v55[1] = CFSTR("address");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLong:", v41);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          v56[1] = v33;
          v55[2] = CFSTR("name");
          objc_msgSend(v41, "name");
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = (void *)v34;
          v36 = &stru_1E8EC7EC0;
          if (v34)
            v36 = (const __CFString *)v34;
          v56[2] = v36;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v56, v55, 3);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v32, "log:", v37);

          v6 = v50 + 1;
        }
        while (v42 != v50 + 1);
        v42 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v61, 16);
      }
      while (v42);
    }

    v3 = v38;
  }

}

void _SBLogCoalescedTouchesForGestureAndView_1(void *a1, void *a2)
{
  id v3;
  void *v4;
  int v5;
  uint64_t v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  objc_class *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  uint64_t v34;
  void *v35;
  const __CFString *v36;
  void *v37;
  id v38;
  id obj;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _QWORD v55[3];
  _QWORD v56[3];
  _QWORD v57[2];
  _QWORD v58[2];
  _QWORD v59[13];
  _QWORD v60[13];
  _BYTE v61[128];
  uint64_t v62;

  v62 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v41 = a2;
  objc_msgSend(MEMORY[0x1E0DAFEC0], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isEnabled");

  if (v5)
  {
    v53 = 0u;
    v54 = 0u;
    v51 = 0u;
    v52 = 0u;
    v38 = v3;
    obj = v3;
    v42 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v61, 16);
    if (v42)
    {
      v40 = *(_QWORD *)v52;
      do
      {
        v6 = 0;
        do
        {
          if (*(_QWORD *)v52 != v40)
            objc_enumerationMutation(obj);
          v7 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * v6);
          v8 = _SBLocationForTouch(v7);
          v10 = v9;
          objc_msgSend(MEMORY[0x1E0C99DE8], "array");
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          v50 = v6;
          v59[0] = CFSTR("timestamp");
          v11 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "timestamp");
          objc_msgSend(v11, "numberWithDouble:");
          v48 = (void *)objc_claimAutoreleasedReturnValue();
          v60[0] = v48;
          v59[1] = CFSTR("phase");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "phase"));
          v47 = (void *)objc_claimAutoreleasedReturnValue();
          v60[1] = v47;
          v59[2] = CFSTR("tapCount");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v7, "tapCount"));
          v46 = (void *)objc_claimAutoreleasedReturnValue();
          v60[2] = v46;
          v59[3] = CFSTR("type");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "type"));
          v45 = (void *)objc_claimAutoreleasedReturnValue();
          v60[3] = v45;
          v59[4] = CFSTR("majorRadius");
          v12 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "majorRadius");
          objc_msgSend(v12, "numberWithDouble:");
          v44 = (void *)objc_claimAutoreleasedReturnValue();
          v60[4] = v44;
          v59[5] = CFSTR("majorRadiusToTolerance");
          v13 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "majorRadiusTolerance");
          objc_msgSend(v13, "numberWithDouble:");
          v43 = (void *)objc_claimAutoreleasedReturnValue();
          v60[5] = v43;
          v59[6] = CFSTR("force");
          v14 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "force");
          objc_msgSend(v14, "numberWithDouble:");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          v60[6] = v15;
          v59[7] = CFSTR("maximumPossibleForce");
          v16 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "maximumPossibleForce");
          objc_msgSend(v16, "numberWithDouble:");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          v60[7] = v17;
          v59[8] = CFSTR("altitudeAngle");
          v18 = (void *)MEMORY[0x1E0CB37E8];
          objc_msgSend(v7, "altitudeAngle");
          objc_msgSend(v18, "numberWithDouble:");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v60[8] = v19;
          v59[9] = CFSTR("estimationUpdateIndex");
          objc_msgSend(v7, "estimationUpdateIndex");
          v20 = objc_claimAutoreleasedReturnValue();
          v21 = (void *)v20;
          v22 = &unk_1E91D23D8;
          if (v20)
            v22 = (void *)v20;
          v60[9] = v22;
          v59[10] = CFSTR("estimatedProperties");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "estimatedProperties"));
          v23 = (void *)objc_claimAutoreleasedReturnValue();
          v60[10] = v23;
          v59[11] = CFSTR("estimatedPropertiesExpectingUpdates");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v7, "estimatedPropertiesExpectingUpdates"));
          v24 = (void *)objc_claimAutoreleasedReturnValue();
          v60[11] = v24;
          v59[12] = CFSTR("location");
          v57[0] = CFSTR("x");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v8);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          v57[1] = CFSTR("y");
          v58[0] = v25;
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v10);
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          v58[1] = v26;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v58, v57, 2);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          v60[12] = v27;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v60, v59, 13);
          v28 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v49, "addObject:", v28);
          v29 = (objc_class *)objc_opt_class();
          NSStringFromClass(v29);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("[%@ %@]"), v30, CFSTR("_SBLogCoalescedTouches"));
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(MEMORY[0x1E0DAFEC0], "sharedInstance");
          v32 = (void *)objc_claimAutoreleasedReturnValue();
          v56[0] = v49;
          v55[0] = v31;
          v55[1] = CFSTR("address");
          objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLong:", v41);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          v56[1] = v33;
          v55[2] = CFSTR("name");
          objc_msgSend(v41, "name");
          v34 = objc_claimAutoreleasedReturnValue();
          v35 = (void *)v34;
          v36 = &stru_1E8EC7EC0;
          if (v34)
            v36 = (const __CFString *)v34;
          v56[2] = v36;
          objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v56, v55, 3);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v32, "log:", v37);

          v6 = v50 + 1;
        }
        while (v42 != v50 + 1);
        v42 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v51, v61, 16);
      }
      while (v42);
    }

    v3 = v38;
  }

}

void _SBUpdateTouchHistoryWithCoalescedTouches(void *a1, void *a2, void *a3, void *a4, int a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a4;
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v13 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v24;
    do
    {
      v16 = 0;
      do
      {
        if (*(_QWORD *)v24 != v15)
          objc_enumerationMutation(v10);
        v17 = *(void **)(*((_QWORD *)&v23 + 1) + 8 * v16);
        if (a5)
          _UISystemGestureLocationForTouchInView();
        else
          objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * v16), "locationInView:", v12);
        v20 = v18;
        v21 = v19;
        objc_msgSend(v17, "timestamp");
        objc_msgSend(v9, "updateWithLocation:timestamp:", v20, v21, v22);
        ++v16;
      }
      while (v14 != v16);
      v14 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v14);
  }

}

void sub_1D05ED20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXGetDisplayIdentifiers(uint64_t a1, _QWORD *a2, _DWORD *a3, _OWORD *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  id v17;
  _OWORD v18[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v18[0] = *a4;
  v18[1] = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v18);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v17);
  v11 = v17;

  if ((v10 & 1) != 0)
  {
    if ((objc_msgSend((id)SBApp, "hasFinishedLaunching") & 1) == 0)
      dispatch_sync(MEMORY[0x1E0C80D38], &__block_literal_global_98);
    if (objc_msgSend((id)SBApp, "hasFinishedLaunching"))
    {
      +[SBIconController sharedInstance](SBIconController, "sharedInstance");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "visibleIconStateDisplayIdentifiers");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "allObjects");
      v14 = objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v14 = MEMORY[0x1E0C9AA60];
    }
    v15 = serializePropertyListObject(v14, a2, a3);
  }
  else
  {
    SBLogCommon();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      _SBXXGetDisplayIdentifiers_cold_1(v11);
    v15 = 5;
  }

  return v15;
}

uint64_t serializePropertyListObject(void *a1, _QWORD *a2, _DWORD *a3)
{
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  NSObject *v10;
  id v12;

  v5 = a1;
  if (v5)
  {
    v12 = 0;
    objc_msgSend(MEMORY[0x1E0CB38B0], "dataWithPropertyList:format:options:error:", v5, 200, 0, &v12);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v12;
    if (v6)
    {
      v8 = objc_retainAutorelease(v6);
      *a2 = objc_msgSend(v8, "bytes");
      *a3 = objc_msgSend(v8, "length");

      v9 = 0;
    }
    else
    {
      SBLogCommon();
      v10 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        serializePropertyListObject_cold_1();

      v9 = 5;
    }
  }
  else
  {
    v9 = 0;
    *a2 = 0;
    *a3 = 0;
  }

  return v9;
}

uint64_t _SBWorkspaceCanLaunchApplication(void *a1, int a2, void *a3, void *a4, uint64_t *a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  char v19;
  int v20;
  int v21;
  char v22;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  uint64_t v27;
  NSObject *v28;
  uint64_t v29;
  void *v30;
  int v31;
  NSObject *v32;
  NSObject *v33;
  NSObject *v34;
  NSObject *v35;
  uint64_t v37;
  NSObject *v38;
  NSObject *v39;
  void *v40;
  void *v41;
  void *v42;

  v9 = a1;
  v10 = a3;
  v11 = a4;
  objc_msgSend(v9, "uniqueIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "application");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "info");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "bundleIdentifier");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13)
  {
    if (a2 && (objc_msgSend(v14, "shouldLaunchSuspendedAlways") & 1) != 0)
    {
      v16 = 1;
      goto LABEL_44;
    }
    v42 = v12;
    v17 = v11;
    +[SBSetupManager sharedInstance](SBSetupManager, "sharedInstance");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v15, "isEqualToString:", CFSTR("com.apple.purplebuddy"));
    v20 = objc_msgSend(v18, "isInSetupMode");
    if ((v19 & 1) == 0 && v20)
    {
      v21 = objc_msgSend(v18, "updateInSetupMode");
      v22 = v10 ? 0 : a2;
      if ((v22 & 1) == 0 && v21 && (objc_msgSend(v14, "isLaunchableDuringSetup") & 1) == 0)
      {
        SBLogCommon();
        v34 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
          _SBWorkspaceCanLaunchApplication_cold_8();

        v11 = v17;
        if (!a5)
        {
          v16 = 0;
          v12 = v42;
          goto LABEL_43;
        }
        v27 = 7;
        v12 = v42;
        goto LABEL_42;
      }
    }
    v40 = v14;
    v23 = v18;
    +[SBApplicationPlaceholderController sharedInstance](SBApplicationPlaceholderController, "sharedInstance", v40);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "placeholderForDisplayID:", v15);
    v25 = (void *)objc_claimAutoreleasedReturnValue();

    if (v25)
    {
      SBLogCommon();
      v26 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR))
        _SBWorkspaceCanLaunchApplication_cold_7();

      v11 = v17;
      v18 = v23;
      if (!a5)
      {
        v16 = 0;
        v14 = v41;
        v12 = v42;
LABEL_43:

        goto LABEL_44;
      }
      v27 = 6;
      v14 = v41;
      v12 = v42;
LABEL_42:
      v16 = 0;
      *a5 = v27;
      goto LABEL_43;
    }
    objc_msgSend((id)SBApp, "restartManager");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = objc_msgSend(v30, "isPendingExit");

    if (v31)
    {
      SBLogCommon();
      v32 = objc_claimAutoreleasedReturnValue();
      v11 = v17;
      v12 = v42;
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR))
        _SBWorkspaceCanLaunchApplication_cold_2();

      v18 = v23;
      if (!a5)
      {
        v16 = 0;
        v14 = v41;
        goto LABEL_43;
      }
      v27 = 6;
      v14 = v41;
      goto LABEL_42;
    }
    v11 = v17;
    if (objc_msgSend(v13, "isAnyTerminationAssertionInEffect"))
    {
      SBLogCommon();
      v33 = objc_claimAutoreleasedReturnValue();
      v12 = v42;
      v18 = v23;
      if (os_log_type_enabled(v33, OS_LOG_TYPE_ERROR))
        _SBWorkspaceCanLaunchApplication_cold_3();

      v14 = v41;
      if (!a5)
        goto LABEL_62;
    }
    else
    {
      v12 = v42;
      v18 = v23;
      if (!objc_msgSend(v13, "isUninstalled"))
      {
        v14 = v41;
        if (objc_msgSend((id)SBApp, "isBundleIdentifierRestrictionDisabled:", v15))
        {
          SBLogCommon();
          v38 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v38, OS_LOG_TYPE_ERROR))
            _SBWorkspaceCanLaunchApplication_cold_5();

          if (a5)
          {
            v27 = 5;
            goto LABEL_42;
          }
        }
        else if ((a2 & 1) != 0
               || !SBWorkspaceDoesApplicationURLPresentLockApplicationLaunchVulnerability(v9, v37, v11))
        {
          if (!objc_msgSend(v15, "isEqualToString:", CFSTR("com.apple.mobileiphoto"))
            && !objc_msgSend(v15, "isEqualToString:", CFSTR("com.apple.TVRemote")))
          {
            v16 = 1;
            goto LABEL_43;
          }
          if (a5)
          {
            v27 = 1;
            goto LABEL_42;
          }
        }
        else
        {
          SBLogCommon();
          v39 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR))
            _SBWorkspaceCanLaunchApplication_cold_6();

          if (a5)
          {
            v27 = 3;
            goto LABEL_42;
          }
        }
LABEL_62:
        v16 = 0;
        goto LABEL_43;
      }
      SBLogCommon();
      v35 = objc_claimAutoreleasedReturnValue();
      v14 = v41;
      if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
        _SBWorkspaceCanLaunchApplication_cold_4();

      if (!a5)
        goto LABEL_62;
    }
    v27 = 6;
    goto LABEL_42;
  }
  SBLogCommon();
  v28 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v28, OS_LOG_TYPE_ERROR))
    _SBWorkspaceCanLaunchApplication_cold_1((uint64_t)v10, v28, v29);

  v16 = 0;
  if (a5)
    *a5 = 2;
LABEL_44:

  return v16;
}

uint64_t SBWorkspaceDoesApplicationURLPresentLockApplicationLaunchVulnerability(void *a1, uint64_t a2, void *a3)
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  char v11;
  uint64_t v12;
  void *v13;
  void *v14;
  char v15;
  void *v17;
  int CanActivateWhilePasscodeLocked;
  void *v19;
  int v20;
  void *v21;
  int v22;

  v4 = a1;
  v5 = (void *)SBApp;
  v6 = a3;
  objc_msgSend(v5, "lockOutController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "authenticationStatusProvider");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v9 = v8;
  }
  else
  {
    objc_msgSend((id)SBApp, "authenticationController");
    v9 = (id)objc_claimAutoreleasedReturnValue();
  }
  v10 = v9;

  if ((objc_msgSend(v7, "isBlocked") & 1) != 0)
  {
    if (!v4)
      goto LABEL_12;
  }
  else
  {
    v11 = objc_msgSend(v10, "isAuthenticated");
    v12 = 0;
    if (!v4 || (v11 & 1) != 0)
      goto LABEL_13;
  }
  objc_msgSend(v4, "application");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "bundleIdentifier");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v14, "isEqual:", CFSTR("com.apple.purplebuddy")))
  {

LABEL_12:
    v12 = 0;
    goto LABEL_13;
  }
  v15 = objc_msgSend(v4, "BOOLForActivationSetting:", 3);

  if ((v15 & 1) != 0)
    goto LABEL_12;
  objc_msgSend(v4, "application");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  CanActivateWhilePasscodeLocked = SBWorkspaceApplicationCanActivateWhilePasscodeLocked(v17);

  objc_msgSend(v4, "activationSettings");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v19, "BOOLForActivationSetting:", 36) & 1) != 0)
    v20 = 1;
  else
    v20 = objc_msgSend(v4, "BOOLForActivationSetting:", 37);

  objc_msgSend(v4, "activationSettings");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_msgSend(v21, "BOOLForActivationSetting:", 40);

  v12 = objc_msgSend(v10, "isAuthenticated") | (CanActivateWhilePasscodeLocked | v20 | v22) ^ 1;
LABEL_13:

  return v12;
}

void sub_1D05F3F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBLogIcon()
{
  if (SBLogIcon_onceToken != -1)
    dispatch_once(&SBLogIcon_onceToken, &__block_literal_global_15_3);
  return (id)SBLogIcon___logObj;
}

void _SBAppendTimeIntervalToFormatter(void *a1, void *a2, double a3)
{
  id v5;
  id v6;
  id v7;

  v7 = a1;
  v5 = a2;
  if ((BSFloatEqualToFloat() & 1) == 0)
    v6 = (id)objc_msgSend(v7, "appendTimeInterval:withName:decomposeUnits:", v5, 0, a3);

}

BOOL _SBApplicationClassicModeIsClassic(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 0xFFFFFFFFFFFFFFFELL;
}

void sub_1D05F7834(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

BOOL SBApplicationClassicModeWantsSafeAreaInsets(uint64_t a1)
{
  _BOOL8 result;
  unint64_t v3;

  result = 1;
  v3 = a1 + 1;
  if (v3 <= 0xF)
  {
    if (((1 << v3) & 0xE03D) != 0)
    {
      return 0;
    }
    else if (v3 == 1)
    {
      return SBFEffectiveHomeButtonType() == 2;
    }
  }
  return result;
}

void sub_1D05F9F7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  _Block_object_dispose(&a51, 8);
  _Unwind_Resume(a1);
}

void sub_1D05FB2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id location)
{
  id *v40;

  objc_destroyWeak(v40);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D05FC240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  _Block_object_dispose(&a38, 8);
  _Unwind_Resume(a1);
}

id SBMainWorkspaceMapInternalTransitionSourceToExternalTransitionSource(uint64_t a1)
{
  id v2;
  uint64_t v3;
  id *v4;

  v2 = 0;
  v3 = a1 - 1;
  v4 = (id *)MEMORY[0x1E0DAB210];
  switch(v3)
  {
    case 0:
      goto LABEL_30;
    case 1:
      v4 = (id *)MEMORY[0x1E0DAB248];
      goto LABEL_30;
    case 2:
      v4 = (id *)MEMORY[0x1E0DAB1C0];
      goto LABEL_30;
    case 3:
      v4 = (id *)MEMORY[0x1E0DAB228];
      goto LABEL_30;
    case 4:
      v4 = (id *)MEMORY[0x1E0DAB1E0];
      goto LABEL_30;
    case 5:
      v4 = (id *)MEMORY[0x1E0DAB220];
      goto LABEL_30;
    case 6:
      v4 = (id *)MEMORY[0x1E0DAB218];
      goto LABEL_30;
    case 7:
      v4 = (id *)MEMORY[0x1E0DAB240];
      goto LABEL_30;
    case 10:
    case 11:
      v4 = (id *)MEMORY[0x1E0DAB250];
      goto LABEL_30;
    case 12:
      v4 = (id *)MEMORY[0x1E0DAB1F0];
      goto LABEL_30;
    case 14:
      v4 = (id *)MEMORY[0x1E0DAB1D0];
      goto LABEL_30;
    case 15:
      v4 = (id *)MEMORY[0x1E0DAB1D8];
      goto LABEL_30;
    case 17:
      v4 = (id *)MEMORY[0x1E0DAB190];
      goto LABEL_30;
    case 18:
      v4 = (id *)MEMORY[0x1E0DAB258];
      goto LABEL_30;
    case 23:
      v4 = (id *)MEMORY[0x1E0DAB200];
      goto LABEL_30;
    case 24:
      v4 = (id *)MEMORY[0x1E0DAB208];
      goto LABEL_30;
    case 25:
      v4 = (id *)MEMORY[0x1E0DAB1F8];
      goto LABEL_30;
    case 31:
      v4 = (id *)MEMORY[0x1E0DAB140];
      goto LABEL_30;
    case 33:
      v4 = (id *)MEMORY[0x1E0DAB1E8];
      goto LABEL_30;
    case 34:
      v4 = (id *)MEMORY[0x1E0DAB238];
      goto LABEL_30;
    case 36:
      v4 = (id *)MEMORY[0x1E0DAB1C8];
      goto LABEL_30;
    case 37:
      v4 = (id *)MEMORY[0x1E0DAB198];
      goto LABEL_30;
    case 38:
      v4 = (id *)MEMORY[0x1E0DAB1B8];
      goto LABEL_30;
    case 39:
      v4 = (id *)MEMORY[0x1E0DAB1A0];
      goto LABEL_30;
    case 40:
      v4 = (id *)MEMORY[0x1E0DAB1A8];
      goto LABEL_30;
    case 41:
      v4 = (id *)MEMORY[0x1E0DAB1B0];
      goto LABEL_30;
    case 66:
      v4 = (id *)MEMORY[0x1E0DAB138];
      goto LABEL_30;
    case 69:
      v4 = (id *)MEMORY[0x1E0DAB148];
      goto LABEL_30;
    case 70:
      v4 = (id *)MEMORY[0x1E0DAB150];
LABEL_30:
      v2 = *v4;
      break;
    default:
      return v2;
  }
  return v2;
}

void sub_1D05FC654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D05FD17C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _SBXXAddBiometricAssertion(uint64_t a1, uint64_t a2, uint64_t a3, char a4, __int128 *a5)
{
  uint64_t v9;
  __int128 v10;
  char v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  NSObject *v18;
  uint64_t v19;
  _QWORD v21[4];
  NSObject *v22;
  __int128 *v23;
  char v24;
  _QWORD block[4];
  id v26;
  __int128 *v27;
  char v28;
  __int128 v29;
  __int128 v30;
  void (*v31)(uint64_t);
  id v32;
  id v33;

  BSDispatchQueueAssertNotMain();
  v9 = *MEMORY[0x1E0DAB5B8];
  v33 = 0;
  v10 = a5[1];
  v29 = *a5;
  v30 = v10;
  v11 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v29, v9, &v33);
  v12 = v33;
  if ((v11 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a2);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D017A0]), "initWithPort:", a3);
    *(_QWORD *)&v29 = 0;
    *((_QWORD *)&v29 + 1) = &v29;
    *(_QWORD *)&v30 = 0x3032000000;
    *((_QWORD *)&v30 + 1) = __Block_byref_object_copy__7;
    v31 = __Block_byref_object_dispose__7;
    v15 = MEMORY[0x1E0C809B0];
    v32 = 0;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXAddBiometricAssertion_block_invoke;
    block[3] = &unk_1E8EA3080;
    v28 = a4;
    v16 = v13;
    v26 = v16;
    v27 = &v29;
    dispatch_sync(MEMORY[0x1E0C80D38], block);
    v17 = (void *)MEMORY[0x1E0D01810];
    v21[0] = v15;
    v21[1] = 3221225472;
    v21[2] = ___SBXXAddBiometricAssertion_block_invoke_2;
    v21[3] = &unk_1E8EA3080;
    v24 = a4;
    v18 = v16;
    v22 = v18;
    v23 = &v29;
    objc_msgSend(v17, "monitorSendRight:withHandler:", v14, v21);

    _Block_object_dispose(&v29, 8);
    v19 = 0;
  }
  else
  {
    SBLogCommon();
    v18 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
      _SBXXAddBiometricAssertion_cold_1(v12);
    v19 = 5;
  }

  return v19;
}

void sub_1D05FE0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXAddWallpaperAnimationSuspensionAssertion(uint64_t a1, uint64_t a2, int a3, __int128 *a4)
{
  __int128 v7;
  id v8;
  __int128 v9;
  char v10;
  void *v11;
  void *v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD v16[4];
  id v17;
  int v18;
  id v19;
  __int128 v20;
  __int128 v21;

  BSDispatchQueueAssertNotMain();
  v7 = a4[1];
  v20 = *a4;
  v21 = v7;
  v8 = 0;
  if ((objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v20, CFSTR("com.apple.springboard.wallpaper-access"), 0) & 1) != 0|| (v19 = 0, v9 = a4[1], v20 = *a4, v21 = v9, v10 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v20, CFSTR("com.apple.springboard.wallpaperAnimationSuspension"), &v19), v8 = v19, (v10 & 1) != 0))
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a2);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CEA2F8], "_systemAnimationFenceExemptQueue");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = ___SBXXAddWallpaperAnimationSuspensionAssertion_block_invoke;
    v16[3] = &unk_1E8EA1BB8;
    v17 = v11;
    v18 = a3;
    v13 = v11;
    objc_msgSend(v12, "performAsync:", v16);

    v14 = 0;
  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXAddWallpaperAnimationSuspensionAssertion_cold_1(v8);
    v14 = 5;
  }

  return v14;
}

uint64_t _SBXXSetTypingActive(uint64_t a1, char a2, __int128 *a3)
{
  void *v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  _QWORD block[4];
  __int128 v11;
  __int128 v12;
  char v13;
  _OWORD v14[2];

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5
    || (v6 = a3[1],
        v14[0] = *a3,
        v14[1] = v6,
        !objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v14, CFSTR("com.apple.springboard.setTypingActive"), 0)))
  {
    v8 = 5;
  }
  else
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXSetTypingActive_block_invoke;
    block[3] = &__block_descriptor_65_e5_v8__0l;
    v13 = a2;
    v7 = a3[1];
    v11 = *a3;
    v12 = v7;
    dispatch_async(MEMORY[0x1E0C80D38], block);
    v8 = 0;
  }

  return v8;
}

id SBLogUIController()
{
  if (SBLogUIController_onceToken != -1)
    dispatch_once(&SBLogUIController_onceToken, &__block_literal_global_51_1);
  return (id)SBLogUIController___logObj;
}

void sub_1D0606848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0606C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0606E00(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D0607EB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;
  id *v18;
  uint64_t v19;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v19 - 56));
  _Unwind_Resume(a1);
}

void sub_1D0608174(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06082A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBSystemApertureClientIdentifier()
{
  return CFSTR("com.apple.springboard");
}

void sub_1D0608DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBLogSystemAperturePreferencesStack()
{
  if (SBLogSystemAperturePreferencesStack_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStack_onceToken, &__block_literal_global_191);
  return (id)SBLogSystemAperturePreferencesStack___logObj;
}

void SBSALogDictionaryDescribableDebug(void *a1, void *a2, void *a3)
{
  NSObject *v5;
  id v6;
  id v7;
  void *v8;
  _QWORD v9[4];
  NSObject *v10;
  id v11;

  v5 = a1;
  v6 = a2;
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
  {
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __SBSALogDictionaryDescribableDebug_block_invoke;
    v9[3] = &unk_1E8EB86D0;
    v10 = v5;
    v11 = v6;
    v7 = a3;
    v8 = (void *)MEMORY[0x1D17E5550](v9);
    _SBSALogDictionaryDescribable(v7, v8, 0);

  }
}

BOOL SBSystemApertureContainerRenderingConfigurationEqualToConfiguration(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2
      && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
      && *(unsigned __int8 *)(a1 + 16) == *(unsigned __int8 *)(a2 + 16);
}

BOOL SBSAContextAndPreferencesRepresentAnyContentVisible(void *a1, void *a2)
{
  id v3;
  _BOOL8 v4;
  void *v5;

  v3 = a2;
  if ((objc_msgSend(a1, "isIndicatorVisible") & 1) != 0)
  {
    v4 = 1;
  }
  else
  {
    objc_msgSend(v3, "elementDescriptions");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v5, "count") != 0;

  }
  return v4;
}

void sub_1D060C410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1D060CC54(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t _SBDeviceApplicationSceneStatusBarStateObserverFlagsForObserver(void *a1)
{
  id v1;
  char v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  char v13;
  int v14;

  v1 = a1;
  v2 = objc_opt_respondsToSelector();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = 2;
  else
    v3 = 0;
  v4 = v3 & 0xFFFFFFFE | v2 & 1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v5 = 4;
  else
    v5 = 0;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = 8;
  else
    v6 = 0;
  v7 = v4 | v5 | v6;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v8 = 16;
  else
    v8 = 0;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v9 = 64;
  else
    v9 = 0;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v10 = 128;
  else
    v10 = 0;
  v11 = v8 | v9;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v12 = 256;
  else
    v12 = 0;
  v13 = objc_opt_respondsToSelector();

  if ((v13 & 1) != 0)
    v14 = 32;
  else
    v14 = 0;
  return v7 | v11 | v10 | v12 | v14;
}

uint64_t SBStatusBarIsSpeakeasy()
{
  if ((_os_feature_enabled_impl() & 1) != 0)
    return 1;
  else
    return _os_feature_enabled_impl();
}

uint64_t SBSDisplayLayoutRoleForLayoutRole(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = 8 * (result == 4);
  if (result == 3)
    v1 = 7;
  v2 = 10;
  if (result != 6)
    v2 = 0;
  if (result == 5)
    v2 = 9;
  if ((unint64_t)(result - 5) <= 5)
    v3 = v2;
  else
    v3 = v1;
  if (result == 2)
    v3 = 2;
  if (result != 1)
    return v3;
  return result;
}

const __CFString *NSStringFromFullScreenLiveContentOverlayType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("None");
  else
    return off_1E8EBC8C8[a1 - 1];
}

void sub_1D061177C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void SBSetShouldRasterizeLayer(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  id v6;

  v3 = a1;
  v6 = v3;
  if (*(double *)&__screenScale == -1.0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler", *(double *)&__screenScale);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void SBSetShouldRasterizeLayer(CALayer *__strong, BOOL)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("SBCommon.m"), 222, CFSTR("Reading screen scale static before it has been initialized"));

    v3 = v6;
  }
  objc_msgSend(v3, "setRasterizationScale:");
  objc_msgSend(v6, "setShouldRasterize:", a2);

}

void sub_1D06152C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void _WiFiDeviceLinkQualityChanged(uint64_t a1, const __CFDictionary *a2, void *a3)
{
  id v4;
  void *v5;
  int v6;
  int v7;
  char v8;
  void *v9;
  uint64_t v10;
  double v11;
  id v12;

  v4 = a3;
  if (a2)
  {
    v12 = v4;
    CFDictionaryGetValue(a2, CFSTR("SCALED_RSSI"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = 0;
    if (v5 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
    {
      objc_msgSend(v5, "floatValue");
      v6 = v7;
      v8 = 0;
    }
    else
    {
      v8 = 1;
    }
    CFDictionaryGetValue(a2, CFSTR("RSSI"));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        v10 = objc_msgSend(v9, "intValue");
        if ((v8 & 1) == 0)
        {
          LODWORD(v11) = v6;
          objc_msgSend(v12, "_updateSignalStrengthFromRawRSSI:andScaledRSSI:", v10, v11);
        }
      }
    }

    v4 = v12;
  }

}

BOOL _SBElementContextsMatchIdentityAndLayoutState(void *a1, void *a2)
{
  unint64_t v3;
  unint64_t v4;
  _BOOL8 v5;
  uint64_t v6;

  v3 = a1;
  v4 = a2;
  if (v3 | v4)
  {
    if (SAElementIdentityEqualToIdentity())
    {
      v6 = objc_msgSend((id)v3, "layoutMode");
      v5 = v6 == objc_msgSend((id)v4, "layoutMode");
    }
    else
    {
      v5 = 0;
    }
  }
  else
  {
    v5 = 1;
  }

  return v5;
}

id SBLogSystemAperturePreferencesStackSettling()
{
  if (SBLogSystemAperturePreferencesStackSettling_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackSettling_onceToken, &__block_literal_global_195);
  return (id)SBLogSystemAperturePreferencesStackSettling___logObj;
}

void sub_1D061AD50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBLogSystemAperturePreferencesStackElements()
{
  if (SBLogSystemAperturePreferencesStackElements_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackElements_onceToken, &__block_literal_global_197);
  return (id)SBLogSystemAperturePreferencesStackElements___logObj;
}

id SBSAElementContextAssociatedWithContainerViewDescription(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  void *v6;
  void *v7;

  v5 = a2;
  objc_msgSend(a1, "associatedSystemApertureElementIdentity");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  SBSAObjectInCollectionAssociatedWithElementIdentity(v6, v5, a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

id SBSAObjectInCollectionAssociatedWithElementIdentity(void *a1, void *a2, _QWORD *a3)
{
  id v5;
  id v6;
  id v7;
  _QWORD v9[4];
  id v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t);
  id v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  v5 = a1;
  v6 = a2;
  v19 = 0;
  v20 = &v19;
  v21 = 0x2020000000;
  v22 = 0x7FFFFFFFFFFFFFFFLL;
  v13 = 0;
  v14 = &v13;
  v15 = 0x3032000000;
  v16 = __Block_byref_object_copy__93;
  v17 = __Block_byref_object_dispose__93;
  v18 = 0;
  if (v5)
  {
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = __SBSAObjectInCollectionAssociatedWithElementIdentity_block_invoke;
    v9[3] = &unk_1E8EBB948;
    v10 = v5;
    v11 = &v19;
    v12 = &v13;
    objc_msgSend(v6, "enumerateObjectsUsingBlock:", v9);

  }
  if (a3)
    *a3 = v20[3];
  v7 = (id)v14[5];
  _Block_object_dispose(&v13, 8);

  _Block_object_dispose(&v19, 8);
  return v7;
}

void sub_1D061C5C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

id SBLogButtonsInteraction()
{
  if (SBLogButtonsInteraction_onceToken != -1)
    dispatch_once(&SBLogButtonsInteraction_onceToken, &__block_literal_global_223);
  return (id)SBLogButtonsInteraction___logObj;
}

void sub_1D061F7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id CAPrivacyIndicatorTypeForIndicatorType(id a1)
{
  if ((unint64_t)a1 <= 2)
    a1 = **((id **)&unk_1E8EBDC18 + (_QWORD)a1);
  return a1;
}

BOOL SBRecordingIndicatorTypeIsCircular(unint64_t a1)
{
  return a1 < 2;
}

void sub_1D0621F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *SBWalletPreArmSuppressionAssertionTypeDescription(uint64_t a1)
{
  __CFString *v1;

  if (a1 == 1)
    return CFSTR("unspecified");
  if (a1 == 2)
  {
    v1 = CFSTR("external");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("unknown (%ld)"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

uint64_t SBPIPStashStateOverrideReasonForString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonCameraSensorActivity")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonDeviceLock")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonInterruption")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonMainSwitcherPresentation")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonSpotlightPresentation")) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonTransientOverlayTransition")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonHomeScreenTransition")) & 1) != 0)
  {
    v2 = 7;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonAppTransition")) & 1) != 0)
  {
    v2 = 8;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("SBPIPBehaviorOverrideReasonSystemNotesPresentation")))
  {
    v2 = 9;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void sub_1D0624E18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL SBLayoutRoleIsValid(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 0xA;
}

uint64_t SBAnalyticsLayoutLocationForDisplayLayoutElements(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  id obj;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  obj = a1;
  v1 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v1)
  {
    v2 = v1;
    v21 = 0;
    v19 = 0;
    v17 = 0;
    v23 = 0;
    v3 = 0;
    v4 = *(_QWORD *)v26;
    v5 = *MEMORY[0x1E0DABD30];
    v6 = *MEMORY[0x1E0DABD20];
    v7 = *MEMORY[0x1E0DAB668];
    v22 = *MEMORY[0x1E0DAB6B0];
    v20 = *MEMORY[0x1E0DAB6A0];
    v18 = *MEMORY[0x1E0D22C78];
    v16 = *MEMORY[0x1E0DAB658];
    do
    {
      for (i = 0; i != v2; ++i)
      {
        if (*(_QWORD *)v26 != v4)
          objc_enumerationMutation(obj);
        v9 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
        objc_msgSend(v9, "objectForKeyedSubscript:", v5);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "BOOLValue");

        objc_msgSend(v9, "objectForKeyedSubscript:", v6);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v12, "isEqualToString:", v7) & 1) != 0)
        {
          v23 = 1;
        }
        else if ((objc_msgSend(v12, "isEqualToString:", v22) & 1) != 0)
        {
          v21 = 1;
        }
        else if ((objc_msgSend(v12, "isEqualToString:", v20) & 1) != 0)
        {
          LOBYTE(v19) = 1;
        }
        else if ((objc_msgSend(v12, "isEqualToString:", v18) & 1) != 0)
        {
          v17 = 1;
        }
        else
        {
          HIDWORD(v19) |= objc_msgSend(v12, "isEqualToString:", v16);
        }
        v3 |= v11;

      }
      v2 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v2);
    if (((v17 | HIDWORD(v19)) & 1) != 0)
    {
      v13 = 6;
      if ((v17 & 1) != 0)
        v13 = 3;
    }
    else
    {
      if ((v19 & 1) == 0)
      {
        v13 = 4;
LABEL_26:
        if ((v23 & 1) != 0)
        {
          if ((v21 & 1) == 0)
          {
            v14 = 1;
            if ((v3 & 1) == 0)
              goto LABEL_35;
            goto LABEL_34;
          }
        }
        else if ((v21 & 1) == 0)
        {
          v14 = 0;
          if ((v3 & 1) == 0)
            goto LABEL_35;
          goto LABEL_34;
        }
        if ((v3 & 1) == 0)
        {
          v14 = 2;
          goto LABEL_35;
        }
LABEL_34:
        v14 = v13;
        goto LABEL_35;
      }
      v13 = 5;
    }
    v3 = 1;
    goto LABEL_26;
  }
  v14 = 0;
LABEL_35:

  return v14;
}

uint64_t _SBXXSetShowsProgress(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  _QWORD v6[4];
  id v7;
  int v8;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = ___SBXXSetShowsProgress_block_invoke;
    v6[3] = &unk_1E8EA1BB8;
    v7 = v3;
    v8 = a2;
    dispatch_async(MEMORY[0x1E0C80D38], v6);

  }
  return 0;
}

id SBRunningApplicationForAuditToken()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v0 = BSPIDForAuditToken();
  +[SBApplicationController sharedInstanceIfExists](SBApplicationController, "sharedInstanceIfExists");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "applicationWithPid:", v0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1D062C3DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t SBWorkspaceOpenURLIsHandledBySpringBoard(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "absoluteString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "length");

  if (v3)
  {
    if ((objc_msgSend(v1, "isWebcalURL") & 1) != 0 || (objc_msgSend(v1, "isAccountURL") & 1) != 0)
      v4 = 1;
    else
      v4 = objc_msgSend((id)*MEMORY[0x1E0CEB258], "_shouldHandleTestURL:", v1);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

id SBLogClassicMode()
{
  if (SBLogClassicMode_onceToken != -1)
    dispatch_once(&SBLogClassicMode_onceToken, &__block_literal_global_85_0);
  return (id)SBLogClassicMode___logObj;
}

void sub_1D0635CC0(_Unwind_Exception *a1)
{
  _Block_object_dispose(&STACK[0x450], 8);
  _Unwind_Resume(a1);
}

BOOL SBDisplayItemAttributedSizeIsUnspecified(uint64_t a1)
{
  return *(double *)a1 == *MEMORY[0x1E0C9D820]
      && *(double *)(a1 + 8) == *(double *)(MEMORY[0x1E0C9D820] + 8)
      && *(_QWORD *)(a1 + 48) == 0;
}

uint64_t SBOrientationSpringBoardUsageTimeAggdKey(uint64_t a1, unint64_t a2)
{
  const __CFString *v2;

  if (a2 > 4)
    v2 = CFSTR("unknown");
  else
    v2 = off_1E8EA32F0[a2];
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("com.apple.springboard.orientation.sb.usageTime.%@.%@"), a1, v2);
}

uint64_t SBOrientationKeyboardUsageTimeAggdKey(unint64_t a1)
{
  const __CFString *v1;

  if (a1 > 4)
    v1 = CFSTR("unknown");
  else
    v1 = off_1E8EA32F0[a1];
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("com.apple.springboard.orientation.keyboard.usageTime.%@"), v1);
}

uint64_t SBOrientationAppUsageTimeAggdKey(uint64_t a1, unint64_t a2)
{
  const __CFString *v2;

  if (a2 > 4)
    v2 = CFSTR("unknown");
  else
    v2 = off_1E8EA32F0[a2];
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("com.apple.springboard.orientation.app.usageTime.%@.%@"), a1, v2);
}

id SBLogButtonsCamera()
{
  if (SBLogButtonsCamera_onceToken != -1)
    dispatch_once(&SBLogButtonsCamera_onceToken, &__block_literal_global_225_0);
  return (id)SBLogButtonsCamera___logObj;
}

void sub_1D06388D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D063948C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_1D063A5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 176), 8);
  _Unwind_Resume(a1);
}

id SBLogChrono()
{
  if (SBLogChrono_onceToken != -1)
    dispatch_once(&SBLogChrono_onceToken, &__block_literal_global_77_2);
  return (id)SBLogChrono___logObj;
}

id SBLogAudioControl()
{
  if (SBLogAudioControl_onceToken != -1)
    dispatch_once(&SBLogAudioControl_onceToken, &__block_literal_global_55_1);
  return (id)SBLogAudioControl___logObj;
}

const __CFString *PETStringValueForIconLocation(void *a1)
{
  id v1;
  const __CFString *v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA9E0]) & 1) != 0)
    goto LABEL_2;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBIconLocationFloatingDockSuggestions")) & 1) != 0)
  {
    v2 = CFSTR("sugg");
    goto LABEL_25;
  }
  if ((SBIconLocationGroupContainsLocation() & 1) != 0)
  {
    v2 = CFSTR("dock");
    goto LABEL_25;
  }
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA9A0]) & 1) != 0)
  {
    v2 = CFSTR("folder");
    goto LABEL_25;
  }
  if ((SBIconLocationGroupContainsLocation() & 1) != 0)
  {
    v2 = CFSTR("home");
    goto LABEL_25;
  }
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBIconLocationAppSwitcher")) & 1) != 0)
  {
    v2 = CFSTR("switcher");
    goto LABEL_25;
  }
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBIconLocationCommandTab")) & 1) != 0)
  {
    v2 = CFSTR("commandtab");
    goto LABEL_25;
  }
  if (!SBIconLocationGroupContainsLocation())
  {
LABEL_2:
    v2 = CFSTR("other");
  }
  else if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA978]) & 1) != 0)
  {
    v2 = CFSTR("applibrary-suggested");
  }
  else if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA970]) & 1) != 0)
  {
    v2 = CFSTR("applibrary-recents");
  }
  else if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA968]) & 1) != 0)
  {
    v2 = CFSTR("applibrary-expandedPod");
  }
  else if (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA988]))
  {
    v2 = CFSTR("applibrary-search");
  }
  else
  {
    v2 = CFSTR("applibrary");
  }
LABEL_25:

  return v2;
}

void sub_1D063CF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D063D1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t v29;

  _Block_object_dispose(&a25, 8);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v29 - 160), 8);
  _Block_object_dispose((const void *)(v29 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1D063E4F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D063E84C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBApplicationMightHaveTransparentBackground(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(a1, "application");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "info");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_opt_respondsToSelector() & 1) != 0 && objc_msgSend(v2, "backgroundStyle"))
    v3 = 1;
  else
    v3 = objc_msgSend(v2, "canChangeBackgroundStyle");

  return v3;
}

void sub_1D063F3C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D063F9A0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1D063FDA4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

id SBLogAVSystemControllerCache()
{
  if (SBLogAVSystemControllerCache_onceToken != -1)
    dispatch_once(&SBLogAVSystemControllerCache_onceToken, &__block_literal_global_73_0);
  return (id)SBLogAVSystemControllerCache___logObj;
}

void sub_1D0641988(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBWorkspaceForceToSpringBoard(void *a1)
{
  return __SBWorkspaceActivateSpringBoardWithResult(0, 0, 1, 1, 1, 0, a1);
}

uint64_t _SBXXSetApplicationShowsProgress(uint64_t a1, uint64_t a2, int a3, _OWORD *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  NSObject *v12;
  int v13;
  void *v14;
  void *v15;
  __CFString *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  __CFString *v20;
  void *v21;
  _QWORD v23[4];
  __CFString *v24;
  id v25;
  int v26;
  int v27;
  id v28;
  _OWORD v29[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v29[0] = *a4;
  v29[1] = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v29);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v28);
  v11 = v28;

  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    if (v12)
    {
      v13 = BSPIDForAuditToken();
      BSBundleIDForAuditToken();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = v14;
      if (v14)
      {
        v16 = v14;
      }
      else
      {
        BSProcessNameForPID();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = (void *)v18;
        v20 = CFSTR("unknown");
        if (v18)
          v20 = (__CFString *)v18;
        v16 = v20;

      }
      SBWorkspaceApplicationForIdentifier(v12);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      if (v21)
      {
        v23[0] = MEMORY[0x1E0C809B0];
        v23[1] = 3221225472;
        v23[2] = ___SBXXSetApplicationShowsProgress_block_invoke;
        v23[3] = &unk_1E8EA0AF0;
        v24 = v16;
        v26 = v13;
        v25 = v21;
        v27 = a3;
        dispatch_async(MEMORY[0x1E0C80D38], v23);

      }
    }
    v17 = 0;
  }
  else
  {
    SBLogCommon();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      _SBXXSetApplicationShowsProgress_cold_1(v11);
    v17 = 5;
  }

  return v17;
}

id SBWorkspaceApplicationForIdentifier(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_applicationForIdentifier:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1D0644104(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  char a67;
  uint64_t v67;

  _Block_object_dispose(&a52, 8);
  _Block_object_dispose((const void *)(v67 - 176), 8);
  _Block_object_dispose(&a63, 8);
  _Block_object_dispose(&a67, 8);
  _Unwind_Resume(a1);
}

id getRecentsCategoryIdentifier(void *a1)
{
  void *v1;

  objc_msgSend(a1, "bs_firstObjectPassingTest:", &__block_literal_global_2_0);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v1)
    v1 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DAA4D0]), "initWithPredictionCategoryID:localizedDisplayNameKey:", 4, CFSTR("PROACTIVE_RECENT_APPS_LOCALIZED_CATEGORY_NAME"));
  return v1;
}

id getSuggestedCategoryIdentifier(void *a1)
{
  void *v1;

  objc_msgSend(a1, "bs_firstObjectPassingTest:", &__block_literal_global_296);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v1)
    v1 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DAA4D0]), "initWithPredictionCategoryID:localizedDisplayNameKey:", 3, CFSTR("PROACTIVE_SUGGESTED_APPS_LOCALIZED_CATEGORY_NAME"));
  return v1;
}

id SBLogProactiveAppLibrary()
{
  if (SBLogProactiveAppLibrary_onceToken != -1)
    dispatch_once(&SBLogProactiveAppLibrary_onceToken, &__block_literal_global_83_0);
  return (id)SBLogProactiveAppLibrary___logObj;
}

void OUTLINED_FUNCTION_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x3Au);
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_1_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_0_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_2_3(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_0_2(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_0_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_2_4(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0xCu);
}

void OUTLINED_FUNCTION_15(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_2_7(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void OUTLINED_FUNCTION_2_8(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_error_impl(a1, log, OS_LOG_TYPE_ERROR, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_2_9(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_3_0(void *a1, const char *a2)
{
  return objc_msgSend(a1, "queryIteration");
}

uint64_t OUTLINED_FUNCTION_2_11(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)a1 + 8) + 40), "queryIteration");
}

void OUTLINED_FUNCTION_2_16(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

uint64_t OUTLINED_FUNCTION_2_18(uint64_t a1)
{
  return *(_QWORD *)(a1 + 32);
}

uint64_t OUTLINED_FUNCTION_2_20()
{
  return objc_opt_class();
}

uint64_t OUTLINED_FUNCTION_2_21(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "queryIteration");
}

void OUTLINED_FUNCTION_2_22(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x2Au);
}

void OUTLINED_FUNCTION_2_23(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_0_5(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 8u);
}

void OUTLINED_FUNCTION_1_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x18u);
}

void OUTLINED_FUNCTION_1_3(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 8u);
}

void OUTLINED_FUNCTION_0_6(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

uint64_t OUTLINED_FUNCTION_1_7()
{
  return objc_opt_class();
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return objc_opt_class();
}

void OUTLINED_FUNCTION_1_9(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

void OUTLINED_FUNCTION_0_7(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x12u);
}

void OUTLINED_FUNCTION_1_11(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x20u);
}

void OUTLINED_FUNCTION_1_12(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void OUTLINED_FUNCTION_1_15(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x20u);
}

void OUTLINED_FUNCTION_1_16(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, a5, 0x12u);
}

BOOL __getSuggestedCategoryIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "predictionCategoryID") == 3;
}

BOOL __getRecentsCategoryIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "predictionCategoryID") == 4;
}

uint64_t OUTLINED_FUNCTION_9()
{
  return NSRequestConcreteImplementation();
}

void OUTLINED_FUNCTION_0_8(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x12u);
}

void OUTLINED_FUNCTION_0_10(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_5_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_0_11(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_error_impl(a1, v4, OS_LOG_TYPE_ERROR, a4, v5, 0xCu);
}

void OUTLINED_FUNCTION_0_14(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

void OUTLINED_FUNCTION_0_15(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

void OUTLINED_FUNCTION_0_20(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_fault_impl(a1, v9, OS_LOG_TYPE_FAULT, a4, &a9, 0xCu);
}

void sub_1D0644FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBSetDeviceInterfaceOrientation()
{
  return BKSHIDServicesSetDeviceInterfaceOrientation();
}

void sub_1D0645CF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

id SBLogSystemApertureOrientation()
{
  if (SBLogSystemApertureOrientation_onceToken != -1)
    dispatch_once(&SBLogSystemApertureOrientation_onceToken, &__block_literal_global_189_0);
  return (id)SBLogSystemApertureOrientation___logObj;
}

void sub_1D0646DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBSAStringFromUIInterfaceOrientation(unint64_t a1)
{
  if (a1 > 4)
    return CFSTR("[invalid]");
  else
    return off_1E8EB88D8[a1];
}

void sub_1D06474CC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  objc_sync_exit(v2);
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0647610(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0647824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_1D0647864()
{
  JUMPOUT(0x1D0647854);
}

void sub_1D06479B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t SBSAIsElementViewControllerFixedInOrientation(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  objc_msgSend(v1, "elementViewProvider");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    objc_msgSend(v1, "elementViewProvider");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v3 = 0;
  }

  v4 = objc_msgSend(v3, "isFixedInOrientation");
  return v4;
}

id SBLogSystemApertureController()
{
  if (SBLogSystemApertureController_onceToken != -1)
    dispatch_once(&SBLogSystemApertureController_onceToken, &__block_literal_global_175);
  return (id)SBLogSystemApertureController___logObj;
}

void sub_1D0648A2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0648CFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0649928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBLogPPT()
{
  if (SBLogPPT_onceToken != -1)
    dispatch_once(&SBLogPPT_onceToken, &__block_literal_global_101_0);
  return (id)SBLogPPT___logObj;
}

id SBLogSystemGestureDetail()
{
  if (SBLogSystemGestureDetail_onceToken != -1)
    dispatch_once(&SBLogSystemGestureDetail_onceToken, &__block_literal_global_139);
  return (id)SBLogSystemGestureDetail___logObj;
}

void sub_1D064E300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

void sub_1D064EEE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D064F2F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D064F5FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1D065042C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06515A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  uint64_t v14;
  va_list va;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a12);
  va_start(va, a12);
  v14 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v12 - 128), 8);
  _Unwind_Resume(a1);
}

id SBLogSwitcherSnapshotCache()
{
  if (SBLogSwitcherSnapshotCache_onceToken != -1)
    dispatch_once(&SBLogSwitcherSnapshotCache_onceToken, &__block_literal_global_57);
  return (id)SBLogSwitcherSnapshotCache___logObj;
}

uint64_t _appIconVisibilityPreferencesChanged(uint64_t a1, void *a2)
{
  NSObject *v3;
  uint8_t v5[16];

  SBLogAppLibrary();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1D0540000, v3, OS_LOG_TYPE_INFO, "visibility update: pref change", v5, 2u);
  }

  return objc_msgSend(a2, "_updateVisibilityOverridesInBackground");
}

id SBLogAppLibrary()
{
  if (SBLogAppLibrary_onceToken != -1)
    dispatch_once(&SBLogAppLibrary_onceToken, &__block_literal_global_129_0);
  return (id)SBLogAppLibrary___logObj;
}

void sub_1D0653168(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06532B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBLogProximitySensor()
{
  if (SBLogProximitySensor_onceToken != -1)
    dispatch_once(&SBLogProximitySensor_onceToken, &__block_literal_global_35_2);
  return (id)SBLogProximitySensor___logObj;
}

void sub_1D06584F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06590A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void _SBWorkspaceResetBatteryUsageTimes()
{
  _SBWorkspaceLogUsageForAppleCare(1);
  __SBWCurrentUsageTimeInSeconds = 0;
  __SBWLastUsageTimeGMT = 0;
  __SBWInitialStandbyTimeGMT = 0;
  __SBWSavedStandbyTime = 0;
  __SBWTrustUsageTimes = 1;
  __SBWGatherUsageTime = 1;
  __SBWHaveChargedPartially = 0;
}

void _SBWorkspaceLogUsageForAppleCare(int a1)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  void *v6;
  float v7;
  int v8;
  NSObject *v9;
  _QWORD block[6];
  int v11;
  int v12;

  _SBWorkspaceUpdateBatteryUsageTime(0);
  v2 = __SBWCurrentUsageTimeInSeconds;
  if (a1 == 3 || *(double *)&__SBWCurrentUsageTimeInSeconds >= 60.0)
  {
    v3 = *(double *)&__SBWInitialStandbyTimeGMT;
    v4 = 0.0;
    if (*(double *)&__SBWInitialStandbyTimeGMT != 0.0)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate", *(double *)&__SBWInitialStandbyTimeGMT);
      v3 = v5 - *(double *)&__SBWInitialStandbyTimeGMT;
      v4 = *(double *)&__SBWSavedStandbyTime + v3;
    }
    +[SBUIController sharedInstance](SBUIController, "sharedInstance", v3);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "batteryCapacity");
    v8 = (int)(float)(v7 * 100.0);

    dispatch_get_global_queue(0, 0);
    v9 = objc_claimAutoreleasedReturnValue();
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBWorkspaceLogUsageForAppleCare_block_invoke;
    block[3] = &__block_descriptor_56_e5_v8__0l;
    block[4] = v2;
    *(double *)&block[5] = v4;
    v11 = a1;
    v12 = v8;
    dispatch_async(v9, block);

  }
}

uint64_t _SBWorkspaceUpdateBatteryUsageTime(uint64_t result)
{
  char v1;
  double v2;

  if (__SBWGatherUsageTime == 1 && *(double *)&__SBWLastUsageTimeGMT != 0.0)
  {
    v1 = result;
    result = objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate", *(double *)&__SBWLastUsageTimeGMT);
    if ((v1 & 1) == 0)
    {
      if ((__SBWIsSleeping & 1) != 0)
        return result;
      *(double *)&__SBWCurrentUsageTimeInSeconds = *(double *)&__SBWCurrentUsageTimeInSeconds
                                                 + v2
                                                 - *(double *)&__SBWLastUsageTimeGMT;
    }
    __SBWLastUsageTimeGMT = *(_QWORD *)&v2;
  }
  return result;
}

void sub_1D065A31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D065BCB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D065C9E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void SetDisplayShowsProgress(void *a1, uint64_t a2, void *a3, int a4)
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id *v16;
  id v17;
  id *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  id v22;
  id v23;
  NSObject *v24;
  NSObject *v25;
  id *v26;
  id *v27;
  _QWORD v28[4];
  id v29;
  id v30;
  int v31;
  _QWORD v32[4];
  id v33;
  id v34;
  int v35;
  _QWORD v36[4];
  id v37;
  id v38;
  id v39;
  int v40;
  _QWORD v41[4];
  id v42;
  id v43;
  id v44;
  int v45;
  uint8_t buf[4];
  id v47;
  __int16 v48;
  int v49;
  __int16 v50;
  id v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a3;
  v9 = v8;
  v10 = (void *)MEMORY[0x1E0CB3940];
  if (v8)
  {
    objc_msgSend(v8, "bundleIdentifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stringWithFormat:", CFSTR("ShowProgress-%@"), v11);
    v12 = (id)objc_claimAutoreleasedReturnValue();

    if (a4)
    {
      v13 = MEMORY[0x1E0C809B0];
      v41[0] = MEMORY[0x1E0C809B0];
      v41[1] = 3221225472;
      v41[2] = __SetDisplayShowsProgress_block_invoke;
      v41[3] = &unk_1E8EA0288;
      v27 = &v42;
      v14 = v12;
      v42 = v14;
      v45 = a2;
      v26 = &v43;
      v15 = v7;
      v43 = v15;
      v16 = &v44;
      v17 = v9;
      v44 = v17;
      v36[0] = v13;
      v36[1] = 3221225472;
      v36[2] = __SetDisplayShowsProgress_block_invoke_65;
      v36[3] = &unk_1E8EA0288;
      v18 = &v37;
      v12 = v14;
      v37 = v12;
      v40 = a2;
      v38 = v15;
      v39 = v17;
      +[SBDaemonRequest requestWithEnabler:disabler:](SBDaemonRequest, "requestWithEnabler:disabler:", v41, v36);
      v19 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_6:
      SBLogStatusBarish();
      v24 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138543874;
        v47 = v12;
        v48 = 1024;
        v49 = a2;
        v50 = 2114;
        v51 = v7;
        _os_log_impl(&dword_1D0540000, v24, OS_LOG_TYPE_INFO, "SBDaemonRequest: adding %{public}@ for pid: %i (%{public}@)", buf, 0x1Cu);
      }

      +[SBDaemonHandler addRequest:forKey:forDaemonPid:](SBDaemonHandler, "addRequest:forKey:forDaemonPid:", v19, v12, a2);
      goto LABEL_12;
    }
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("ShowProgress-%@"), CFSTR("all"));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v20;
    if (a4)
    {
      v21 = MEMORY[0x1E0C809B0];
      v32[0] = MEMORY[0x1E0C809B0];
      v32[1] = 3221225472;
      v32[2] = __SetDisplayShowsProgress_block_invoke_66;
      v32[3] = &unk_1E8EA2E30;
      v27 = &v33;
      v22 = v20;
      v33 = v22;
      v35 = a2;
      v26 = &v34;
      v23 = v7;
      v34 = v23;
      v28[0] = v21;
      v28[1] = 3221225472;
      v28[2] = __SetDisplayShowsProgress_block_invoke_67;
      v28[3] = &unk_1E8EA2E30;
      v16 = &v29;
      v12 = v22;
      v29 = v12;
      v31 = a2;
      v18 = &v30;
      v30 = v23;
      +[SBDaemonRequest requestWithEnabler:disabler:](SBDaemonRequest, "requestWithEnabler:disabler:", v32, v28);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      goto LABEL_6;
    }
  }
  SBLogStatusBarish();
  v25 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v25, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 138543874;
    v47 = v12;
    v48 = 1024;
    v49 = a2;
    v50 = 2114;
    v51 = v7;
    _os_log_impl(&dword_1D0540000, v25, OS_LOG_TYPE_INFO, "SBDaemonRequest: removing %{public}@ for pid: %i (%{public}@)", buf, 0x1Cu);
  }

  +[SBDaemonHandler removeRequestForKey:forDaemonPid:](SBDaemonHandler, "removeRequestForKey:forDaemonPid:", v12, a2);
LABEL_12:

}

double _SBHNativeScaleForScreenType(uint64_t a1)
{
  double result;
  double v2;

  switch(a1)
  {
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 11:
    case 12:
    case 13:
    case 14:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
      result = ___SBHNativeScaleForScreenType_block_invoke(1.0);
      break;
    case 9:
    case 10:
    case 15:
    case 16:
      result = ___SBHNativeScaleForScreenType_block_invoke(0.96);
      break;
    default:
      SBHGetScreenSpecification();
      result = v2;
      break;
  }
  return result;
}

void sub_1D065F878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _SBWorkspaceStartUsageTimesIfNecessary()
{
  uint64_t result;
  uint64_t v1;

  if (__SBWGatherUsageTime == 1)
  {
    result = objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
    if (*(double *)&__SBWInitialStandbyTimeGMT == 0.0)
      __SBWInitialStandbyTimeGMT = v1;
    if (*(double *)&__SBWLastUsageTimeGMT == 0.0)
      __SBWLastUsageTimeGMT = v1;
  }
  return result;
}

uint64_t _SBADIStringCompareWithSet(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  if (objc_msgSend(v7, "count"))
  {
    v22 = 0u;
    v23 = 0u;
    v20 = 0u;
    v21 = 0u;
    v8 = v7;
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v21;
      while (2)
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v21 != v11)
            objc_enumerationMutation(v8);
          v13 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * i);
          v14 = objc_msgSend(v13, "isEqualToString:", v5, (_QWORD)v20);
          v15 = objc_msgSend(v13, "isEqualToString:", v6);
          if ((v14 & 1) != 0 || (v15 & 1) != 0)
          {
            v17 = -1;
            if (!v14)
              v17 = 1;
            if (v14 != v15)
              v16 = v17;
            else
              v16 = 0;

            goto LABEL_26;
          }
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
        if (v10)
          continue;
        break;
      }
    }

  }
  if (v5 && v6)
  {
    v16 = 0;
  }
  else
  {
    v18 = -1;
    if (v5)
      v18 = 1;
    if ((v5 == 0) != (v6 == 0))
      v16 = v18;
    else
      v16 = 0;
  }
LABEL_26:

  return v16;
}

id SBLogWidgetIntent()
{
  if (SBLogWidgetIntent_onceToken != -1)
    dispatch_once(&SBLogWidgetIntent_onceToken, &__block_literal_global_161_1);
  return (id)SBLogWidgetIntent___logObj;
}

id SBLogThermal()
{
  if (SBLogThermal_onceToken != -1)
    dispatch_once(&SBLogThermal_onceToken, &__block_literal_global_37_4);
  return (id)SBLogThermal___logObj;
}

void sub_1D06640D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0664260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0664D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_3_2()
{
  return objc_opt_class();
}

void sub_1D0666ED4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBSystemAppMain(int a1, char **a2)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  int v6;
  NSObject *v7;
  void *v8;
  int v9;
  NSObject *v10;
  NSObject *v11;
  __CFNotificationCenter *DarwinNotifyCenter;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  void *v29;
  id v30;
  id v31;
  void *v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  NSObject *v42;
  void *v43;
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t i;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t j;
  void *v58;
  unint64_t v59;
  NSObject *v60;
  void *v61;
  void *v62;
  void *v63;
  const __CFString *v64;
  const __CFString *v65;
  uint64_t k;
  NSObject *v67;
  __CFString *v68;
  NSObject *v69;
  NSObject *v70;
  void *v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t m;
  __CFString *v77;
  int v78;
  id v79;
  id v80;
  void *v81;
  int v82;
  const __CFString *v83;
  int v84;
  NSObject *v85;
  NSObject *v86;
  NSObject *v87;
  int v88;
  const __CFString *v89;
  void *v90;
  void *v91;
  void *v92;
  void *v93;
  void *v94;
  void *v95;
  void *v96;
  void *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t n;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t ii;
  uint64_t v111;
  void *v112;
  void *v113;
  char v114;
  void *v115;
  void *v116;
  void *v117;
  void *v118;
  void *v119;
  void *v120;
  void *v121;
  void *v122;
  void *v123;
  int v124;
  NSObject *v125;
  uint64_t v126;
  int v127;
  id v128;
  int v129;
  NSObject *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  NSObject *v137;
  NSObject *v138;
  id v139;
  void *v140;
  id v141;
  NSObject *v142;
  void *v144;
  void *v145;
  void *v146;
  void *v147;
  void *v148;
  void *v149;
  void *v150;
  void *context;
  void *v154;
  int v155;
  void *v156;
  id v157;
  id v158;
  void *v159;
  void *v160;
  id obj;
  uint64_t v162;
  uint64_t v163;
  __CFString *v164;
  uint64_t v165;
  void *v166;
  const __CFString *v167;
  id v168;
  void *v169;
  void *v170;
  id v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  id v180;
  id v181;
  id v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  _QWORD v187[4];
  NSObject *v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  uint8_t v201[128];
  uint8_t v202[4];
  const __CFString *v203;
  __int16 v204;
  NSObject *v205;
  __int16 v206;
  id v207;
  int v208[32];
  const __CFString *v209;
  _QWORD v210[2];
  id v211[16];
  id v212[16];
  _BYTE buf[12];
  __int16 v214;
  void *v215;
  __int16 v216;
  id v217;
  __int16 v218;
  void *v219;
  uint64_t v220;

  v220 = *MEMORY[0x1E0C80C00];
  SBLogTelemetrySignposts();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_signpost_enabled(v2))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D0540000, v2, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "SB_STARTUP_PRE_APP_INSTANTIATION", (const char *)&unk_1D0E9B6CB, buf, 2u);
  }

  v3 = kdebug_trace();
  context = (void *)MEMORY[0x1D17E5334](v3);
  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "miscellaneousDefaults");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "enableDynamicJetsamLimits");

  if (v6)
    xpc_transactions_enable();
  BSSetMainThreadPriorityFixedForUI();
  SBLogTelemetrySignposts();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_signpost_enabled(v7))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D0540000, v7, OS_SIGNPOST_INTERVAL_BEGIN, 0xEEEEB0B5B2B2EEEELL, "SB_STARTUP", " enableTelemetry=YES ", buf, 2u);
  }

  kdebug_trace();
  objc_msgSend(MEMORY[0x1E0DC5EE8], "sharedManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isMultiUser");

  if (v9)
  {
    kdebug_trace();
    dispatch_get_global_queue(25, 0);
    v10 = objc_claimAutoreleasedReturnValue();
    dispatch_async(v10, &__block_literal_global);

  }
  if (setiopolicy_np(9, 0, 1))
  {
    SBLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      SBSystemAppMain_cold_8(v11);

  }
  sqlite3_config(13, 0, 0);
  CPSqliteSetDefaultPageCacheSize();
  CPSqliteSetDefaultSharedCacheModeEnabledState();
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterAddObserver(DarwinNotifyCenter, 0, (CFNotificationCallback)_languageMayHaveChanged, CFSTR("com.apple.language.changed"), 0, (CFNotificationSuspensionBehavior)0);
  objc_msgSend(MEMORY[0x1E0C99DC8], "preferredLanguages");
  v13 = objc_claimAutoreleasedReturnValue();
  v14 = (void *)SBBootLanguages;
  SBBootLanguages = v13;

  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "bootDefaults");
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = (void *)_CFCopySystemVersionDictionary();
  v18 = objc_alloc(MEMORY[0x1E0DA9DC0]);
  v150 = v17;
  objc_msgSend(v17, "objectForKey:", *MEMORY[0x1E0C9AB90]);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = (void *)objc_msgSend(v18, "initWithString:", v19);

  v21 = objc_alloc(MEMORY[0x1E0DA9DC0]);
  objc_msgSend(v16, "lastSystemBuildVersion");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v159 = (void *)objc_msgSend(v21, "initWithString:", v22);

  v154 = v16;
  objc_msgSend(v16, "lastRestoreIdentifier");
  v160 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = (void *)MEMORY[0x1E0CB3940];
  NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v24, "firstObject");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "pathComponents");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "arrayByAddingObjectsFromArray:", &unk_1E91CDED0);
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "pathWithComponents:", v27);
  v28 = objc_claimAutoreleasedReturnValue();

  v171 = 0;
  v156 = (void *)v28;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithContentsOfFile:encoding:error:", v28, 4, &v171);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = v171;
  v31 = v30;
  if (v30)
  {
    objc_msgSend(v30, "domain");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v32, "isEqualToString:", *MEMORY[0x1E0CB28A8]))
    {
      v33 = objc_msgSend(v31, "code");

      if (v33 == 260)
      {
        SBLogCommon();
        v34 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v34, OS_LOG_TYPE_DEBUG))
          SBSystemAppMain_cold_6();
LABEL_21:

        goto LABEL_22;
      }
    }
    else
    {

    }
    SBLogCommon();
    v34 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v34, OS_LOG_TYPE_ERROR))
      SBSystemAppMain_cold_7((uint64_t)v31, v34, v35, v36, v37, v38, v39, v40);
    goto LABEL_21;
  }
LABEL_22:
  v155 = objc_msgSend(v160, "isEqualToString:", v29);
  if (v155 && (objc_msgSend(v159, "isEqual:", v20) & 1) != 0)
  {
    v41 = v154;
    goto LABEL_144;
  }
  v147 = v31;
  SBLogCommon();
  v42 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v42, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 138413058;
    *(_QWORD *)&buf[4] = v159;
    v214 = 2112;
    v215 = v20;
    v216 = 2112;
    v217 = v29;
    v218 = 2112;
    v219 = v160;
    _os_log_debug_impl(&dword_1D0540000, v42, OS_LOG_TYPE_DEBUG, "migrating because of version mismatch : build '%@' -> '%@' : restoreIdentifier '%@' -> '%@'", buf, 0x2Au);
  }
  v148 = v29;

  objc_msgSend(MEMORY[0x1E0CB3620], "defaultManager");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v158 = v159;
  v149 = v20;
  v157 = v20;
  v44 = v43;
  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v146 = (void *)objc_claimAutoreleasedReturnValue();
  v166 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D20]), "initWithObjects:", CFSTR("com.apple.springboard-imagecache"), CFSTR("SpringBoardIconCache"), CFSTR("com.apple.SpringBoard.notificationCenterLinen"), CFSTR("com.apple.SpringBoard.folderSwitcherLinen"), CFSTR("com.apple.springboard.newsstand"), 0);
  NSSearchPathForDirectoriesInDomains(NSCachesDirectory, 1uLL, 1);
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "objectAtIndex:", 0);
  v46 = objc_claimAutoreleasedReturnValue();

  v199 = 0u;
  v200 = 0u;
  v197 = 0u;
  v198 = 0u;
  v169 = (void *)v46;
  v170 = v44;
  objc_msgSend(v44, "contentsOfDirectoryAtPath:error:", v46, 0);
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  v48 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v197, buf, 16);
  if (v48)
  {
    v49 = v48;
    v50 = *(_QWORD *)v198;
    do
    {
      for (i = 0; i != v49; ++i)
      {
        if (*(_QWORD *)v198 != v50)
          objc_enumerationMutation(v47);
        v52 = *(void **)(*((_QWORD *)&v197 + 1) + 8 * i);
        v193 = 0u;
        v194 = 0u;
        v195 = 0u;
        v196 = 0u;
        v53 = v166;
        v54 = objc_msgSend(v53, "countByEnumeratingWithState:objects:count:", &v193, v212, 16);
        if (v54)
        {
          v55 = v54;
          v56 = *(_QWORD *)v194;
          do
          {
            for (j = 0; j != v55; ++j)
            {
              if (*(_QWORD *)v194 != v56)
                objc_enumerationMutation(v53);
              if (objc_msgSend(v52, "hasPrefix:", *(_QWORD *)(*((_QWORD *)&v193 + 1) + 8 * j)))
              {
                objc_msgSend(v169, "stringByAppendingPathComponent:", v52);
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v170, "removeItemAtPath:error:", v58, 0);

              }
            }
            v55 = objc_msgSend(v53, "countByEnumeratingWithState:objects:count:", &v193, v212, 16);
          }
          while (v55);
        }

      }
      v49 = objc_msgSend(v47, "countByEnumeratingWithState:objects:count:", &v197, buf, 16);
    }
    while (v49);
  }

  if (objc_msgSend(v158, "compareBuildVersionString:withPrecision:", CFSTR("14A9999"), 2) == -1)
  {
    v191 = 0u;
    v192 = 0u;
    v189 = 0u;
    v190 = 0u;
    objc_msgSend(MEMORY[0x1E0D017F8], "pathProviderForCurrentContainer");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    v210[0] = v61;
    objc_msgSend(MEMORY[0x1E0D017F8], "pathProviderForSystemContainerForCurrentProcess");
    v62 = (void *)objc_claimAutoreleasedReturnValue();
    v210[1] = v62;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v210, 2);
    v63 = (void *)objc_claimAutoreleasedReturnValue();

    obj = v63;
    v163 = objc_msgSend(v63, "countByEnumeratingWithState:objects:count:", &v189, v211, 16);
    if (v163)
    {
      v162 = *(_QWORD *)v190;
      v64 = (const __CFString *)*MEMORY[0x1E0C999D0];
      v65 = CFSTR("sharedimagecache");
      v167 = (const __CFString *)*MEMORY[0x1E0C999D0];
      do
      {
        for (k = 0; k != v163; ++k)
        {
          if (*(_QWORD *)v190 != v162)
            objc_enumerationMutation(obj);
          v67 = *(NSObject **)(*((_QWORD *)&v189 + 1) + 8 * k);
          -[NSObject cachesPath](v67, "cachesPath");
          v68 = (__CFString *)objc_claimAutoreleasedReturnValue();
          SBLogCommon();
          v69 = objc_claimAutoreleasedReturnValue();
          v70 = v69;
          if (v68)
          {
            v165 = k;
            if (os_log_type_enabled(v69, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)v202 = 138412546;
              v203 = v68;
              v204 = 2112;
              v205 = v67;
              _os_log_debug_impl(&dword_1D0540000, v70, OS_LOG_TYPE_DEBUG, "checking '%@' from %@ for defunct image caches", v202, 0x16u);
            }

            v209 = v64;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v209, 1);
            v71 = (void *)objc_claimAutoreleasedReturnValue();
            v187[0] = MEMORY[0x1E0C809B0];
            v187[1] = 3221225472;
            v187[2] = ___performSpringBoardMigration_block_invoke;
            v187[3] = &unk_1E8E9DE10;
            v164 = v68;
            v188 = v68;
            objc_msgSend(v170, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:", v188, v71, 1, v187);
            v72 = (void *)objc_claimAutoreleasedReturnValue();

            v185 = 0u;
            v186 = 0u;
            v183 = 0u;
            v184 = 0u;
            v168 = v72;
            v73 = objc_msgSend(v168, "countByEnumeratingWithState:objects:count:", &v183, v208, 16);
            if (v73)
            {
              v74 = v73;
              v75 = *(_QWORD *)v184;
              do
              {
                for (m = 0; m != v74; ++m)
                {
                  if (*(_QWORD *)v184 != v75)
                    objc_enumerationMutation(v168);
                  v77 = *(__CFString **)(*((_QWORD *)&v183 + 1) + 8 * m);
                  v181 = 0;
                  v182 = 0;
                  v78 = -[__CFString getResourceValue:forKey:error:](v77, "getResourceValue:forKey:error:", &v182, v64, &v181);
                  v79 = v182;
                  v80 = v181;
                  if (v78)
                  {
                    if (objc_msgSend(v79, "BOOLValue")
                      && (-[__CFString pathExtension](v77, "pathExtension"),
                          v81 = (void *)objc_claimAutoreleasedReturnValue(),
                          v82 = objc_msgSend(v81, "isEqualToString:", v65),
                          v81,
                          v82))
                    {
                      v83 = v65;
                      v180 = 0;
                      v84 = objc_msgSend(v170, "removeItemAtURL:error:", v77, &v180);
                      v85 = v180;
                      SBLogCommon();
                      v86 = objc_claimAutoreleasedReturnValue();
                      v87 = v86;
                      if (v84)
                      {
                        if (os_log_type_enabled(v86, OS_LOG_TYPE_DEBUG))
                        {
                          *(_DWORD *)v202 = 138412290;
                          v203 = v77;
                          _os_log_debug_impl(&dword_1D0540000, v87, OS_LOG_TYPE_DEBUG, "successfully removed '%@'", v202, 0xCu);
                        }
                      }
                      else if (os_log_type_enabled(v86, OS_LOG_TYPE_ERROR))
                      {
                        *(_DWORD *)v202 = 138412546;
                        v203 = v77;
                        v204 = 2112;
                        v205 = v85;
                        _os_log_error_impl(&dword_1D0540000, v87, OS_LOG_TYPE_ERROR, "failed while removing '%@' : error=%@", v202, 0x16u);
                      }

                      v65 = v83;
                      v64 = v167;
                    }
                    else
                    {
                      SBLogCommon();
                      v85 = objc_claimAutoreleasedReturnValue();
                      if (os_log_type_enabled(v85, OS_LOG_TYPE_DEBUG))
                      {
                        v88 = objc_msgSend(v79, "BOOLValue");
                        *(_DWORD *)v202 = 138412546;
                        v89 = CFSTR("non-directory");
                        if (v88)
                          v89 = CFSTR("directory");
                        v203 = v89;
                        v204 = 2112;
                        v205 = v77;
                        _os_log_debug_impl(&dword_1D0540000, v85, OS_LOG_TYPE_DEBUG, "skipping %@ '%@'", v202, 0x16u);
                      }
                    }
                  }
                  else
                  {
                    SBLogCommon();
                    v85 = objc_claimAutoreleasedReturnValue();
                    if (os_log_type_enabled(v85, OS_LOG_TYPE_ERROR))
                    {
                      *(_DWORD *)v202 = 138543874;
                      v203 = v64;
                      v204 = 2112;
                      v205 = v77;
                      v206 = 2112;
                      v207 = v80;
                      _os_log_error_impl(&dword_1D0540000, v85, OS_LOG_TYPE_ERROR, "failed while checking %{public}@ of '%@' : error=%@", v202, 0x20u);
                    }
                  }

                }
                v74 = objc_msgSend(v168, "countByEnumeratingWithState:objects:count:", &v183, v208, 16);
              }
              while (v74);
            }

            v70 = v188;
            v68 = v164;
            k = v165;
          }
          else if (os_log_type_enabled(v69, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)v202 = 138412290;
            v203 = (const __CFString *)v67;
            _os_log_error_impl(&dword_1D0540000, v70, OS_LOG_TYPE_ERROR, "failed to find cachesURL of '%@'", v202, 0xCu);
          }

        }
        v163 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v189, v211, 16);
      }
      while (v163);
    }

    SBLogCommon();
    v60 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v60, OS_LOG_TYPE_DEBUG))
      SBSystemAppMain_cold_4();
    v59 = 0x1E0DC5000uLL;
    goto LABEL_85;
  }
  v59 = 0x1E0DC5000;
  if (v158)
  {
    SBLogCommon();
    v60 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v60, OS_LOG_TYPE_DEBUG))
      SBSystemAppMain_cold_5();
LABEL_85:

  }
  objc_msgSend(MEMORY[0x1E0DA9E78], "systemAppPersistenteCache");
  v90 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v90, "removeAllImagesWithCompletion:", 0);

  objc_msgSend(*(id *)(v59 + 3816), "sharedManager");
  v91 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v91, "isMultiUser") || objc_msgSend(v91, "isLoginSession"))
  {
    objc_msgSend(MEMORY[0x1E0D65290], "wallpaperCache");
    v92 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v92, "removeEverythingWithCompletion:", 0);

  }
  v93 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D20]), "initWithObjects:", CFSTR("LockBackground.jpg"), CFSTR("HomeBackground.jpg"), CFSTR("LockBackgroundPortrait.jpg"), CFSTR("HomeBackgroundLandscape.jpg"), CFSTR("LockBackgroundThumbnail.jpg"), CFSTR("HomeBackgroundThumbnail.jpg"), 0);
  NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, 1uLL, 1);
  v94 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v94, "objectAtIndex:", 0);
  v95 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v95, "stringByAppendingPathComponent:", CFSTR("SpringBoard"));
  v96 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v170, "createDirectoryAtPath:withIntermediateDirectories:attributes:error:", v96, 1, 0, 0);
  v176 = 0u;
  v177 = 0u;
  v178 = 0u;
  v179 = 0u;
  objc_msgSend(v170, "contentsOfDirectoryAtPath:error:", v95, 0);
  v97 = (void *)objc_claimAutoreleasedReturnValue();
  v98 = objc_msgSend(v97, "countByEnumeratingWithState:objects:count:", &v176, v202, 16);
  v20 = v149;
  if (v98)
  {
    v99 = *(_QWORD *)v177;
    while (2)
    {
      for (n = 0; n != v98; ++n)
      {
        if (*(_QWORD *)v177 != v99)
          objc_enumerationMutation(v97);
        if ((objc_msgSend(v93, "containsObject:", *(_QWORD *)(*((_QWORD *)&v176 + 1) + 8 * n)) & 1) != 0)
        {
          LODWORD(v98) = 1;
          goto LABEL_99;
        }
      }
      v98 = objc_msgSend(v97, "countByEnumeratingWithState:objects:count:", &v176, v202, 16);
      if (v98)
        continue;
      break;
    }
  }
LABEL_99:

  objc_msgSend(MEMORY[0x1E0D83028], "sharedInstance");
  v101 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v101, "setShouldClearPrototypeCachesForMigration:", 1);

  objc_msgSend(MEMORY[0x1E0D83028], "sharedInstance");
  v102 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v102, "setActivePrototypingEnabled:", 0);

  objc_msgSend(MEMORY[0x1E0D83028], "sharedInstance");
  v103 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v103, "setPrototypeSettingsEnabled:", 0);

  v104 = v158;
  if (objc_msgSend(v158, "compareBuildVersion:withPrecision:", v157, 1) != -1)
  {
    if (!(_DWORD)v98)
      goto LABEL_111;
LABEL_103:
    v174 = 0u;
    v175 = 0u;
    v172 = 0u;
    v173 = 0u;
    v106 = v93;
    v107 = objc_msgSend(v106, "countByEnumeratingWithState:objects:count:", &v172, v201, 16);
    if (v107)
    {
      v108 = v107;
      v109 = *(_QWORD *)v173;
      do
      {
        for (ii = 0; ii != v108; ++ii)
        {
          if (*(_QWORD *)v173 != v109)
            objc_enumerationMutation(v106);
          v111 = *(_QWORD *)(*((_QWORD *)&v172 + 1) + 8 * ii);
          objc_msgSend(v96, "stringByAppendingPathComponent:", v111);
          v112 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v170, "removeItemAtPath:error:", v112, 0);
          objc_msgSend(v95, "stringByAppendingPathComponent:", v111);
          v113 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v170, "moveItemAtPath:toPath:error:", v113, v112, 0);

        }
        v108 = objc_msgSend(v106, "countByEnumeratingWithState:objects:count:", &v172, v201, 16);
      }
      while (v108);
    }

    v20 = v149;
    v104 = v158;
    goto LABEL_111;
  }
  objc_msgSend(MEMORY[0x1E0D83028], "sharedInstance");
  v105 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v105, "setShouldClearSettingsArchivesForMigration:", 1);

  v104 = v158;
  if ((_DWORD)v98)
    goto LABEL_103;
LABEL_111:
  v41 = v154;
  if (v104)
  {
    if (objc_msgSend(v104, "compareBuildVersion:withPrecision:", v157, 0) == -1)
      v114 = 0;
    else
      v114 = v155;
    if ((v114 & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0DA8F30], "deleteAllSystemSnapshots");
      +[SBApplicationController _setClearSystemAppSnapshotsWhenLoaded:](SBApplicationController, "_setClearSystemAppSnapshotsWhenLoaded:", 1);
    }
    if (objc_msgSend(v104, "compareBuildVersionString:withPrecision:", CFSTR("13A297"), 2) == -1)
      +[SBApplicationController _setClearAllLegacySnapshotsWhenLoaded:](SBApplicationController, "_setClearAllLegacySnapshotsWhenLoaded:", 1);
    if (objc_msgSend(v104, "compareBuildVersionString:withPrecision:", CFSTR("17A370"), 2) == -1)
      +[SBApplicationController _setClearAllLegacySnapshotsWhenLoaded:](SBApplicationController, "_setClearAllLegacySnapshotsWhenLoaded:", 1);
  }
  objc_msgSend(v146, "softwareUpdateDefaults");
  v115 = v104;
  v116 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v116, "clearDeveloperInstallBrickAlerts");

  objc_msgSend(v146, "migrateAndRemoveOldDefaults");
  objc_msgSend(v157, "stringRepresentation");
  v117 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v154, "setLastSystemBuildVersion:", v117);

  if ((v155 & 1) != 0)
  {
    v31 = v147;
    v29 = v148;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
    v118 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v118, "UUIDString");
    v119 = (void *)objc_claimAutoreleasedReturnValue();

    if (!objc_msgSend(v119, "length") || objc_msgSend(v119, "isEqualToString:", v160))
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v144 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void performSpringBoardMigrationIfNeeded(void)");
      v145 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v144, "handleFailureInFunction:file:lineNumber:description:", v145, CFSTR("SBSystemApp.m"), 354, CFSTR("failed to generate a valid restoreIdentifier : %@ (last=%@)"), v119, v160);

    }
    v208[0] = -1;
    NSTemporaryDirectory();
    v120 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v156, "lastPathComponent");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v120, "stringByAppendingPathComponent:", v121);
    v122 = (void *)objc_claimAutoreleasedReturnValue();
    BSTemporaryFileAtPath();
    v123 = (void *)objc_claimAutoreleasedReturnValue();

    if (v208[0] == -1)
    {
      SBLogCommon();
      v130 = objc_claimAutoreleasedReturnValue();
      v31 = v147;
      if (os_log_type_enabled(v130, OS_LOG_TYPE_ERROR))
        SBSystemAppMain_cold_1((uint64_t)v123, v130, v131, v132, v133, v134, v135, v136);

    }
    else
    {

      v212[0] = 0;
      v124 = objc_msgSend(v119, "writeToFile:atomically:encoding:error:", v123, 0, 4, v212);
      v31 = v212[0];
      if (v124)
      {
        objc_msgSend(MEMORY[0x1E0C99E98], "fileURLWithPath:isDirectory:", v123, 0);
        v125 = objc_claimAutoreleasedReturnValue();
        v126 = *MEMORY[0x1E0C999D8];
        v211[0] = v31;
        v127 = -[NSObject setResourceValue:forKey:error:](v125, "setResourceValue:forKey:error:", MEMORY[0x1E0C9AAB0], v126, v211);
        v128 = v211[0];

        if (v127)
        {
          objc_msgSend(v170, "removeItemAtPath:error:", v156, 0);
          *(_QWORD *)buf = v128;
          v129 = objc_msgSend(v170, "moveItemAtPath:toPath:error:", v123, v156, buf);
          v31 = *(id *)buf;

          if (v129)
          {
            v41 = v154;
            objc_msgSend(v154, "setLastRestoreIdentifier:", v119);
          }
          else
          {
            SBLogCommon();
            v138 = objc_claimAutoreleasedReturnValue();
            v41 = v154;
            if (os_log_type_enabled(v138, OS_LOG_TYPE_ERROR))
              SBSystemAppMain_cold_2();

          }
        }
        else
        {
          SBLogCommon();
          v137 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v137, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138412802;
            *(_QWORD *)&buf[4] = v126;
            v214 = 2112;
            v215 = v123;
            v216 = 2112;
            v217 = v128;
            _os_log_error_impl(&dword_1D0540000, v137, OS_LOG_TYPE_ERROR, "failed to set %@ on '%@' : error=%@", buf, 0x20u);
          }

          v31 = v128;
          v41 = v154;
        }
      }
      else
      {
        SBLogCommon();
        v125 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v125, OS_LOG_TYPE_ERROR))
          SBSystemAppMain_cold_3();
      }

      close(v208[0]);
    }

    v29 = v148;
  }

LABEL_144:
  v139 = +[SBChronoApplicationProcessStateObserver sharedInstance](SBChronoApplicationProcessStateObserver, "sharedInstance");
  objc_msgSend(MEMORY[0x1E0DA9E78], "sessionCache");
  v140 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v140, "removeAllImagesWithCompletion:", 0);

  objc_msgSend(MEMORY[0x1E0D01020], "earlyInitialization");
  objc_autoreleasePoolPop(context);
  v141 = (id)FBSystemShellInitialize();
  SBLogTelemetrySignposts();
  v142 = objc_claimAutoreleasedReturnValue();
  if (os_signpost_enabled(v142))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl(&dword_1D0540000, v142, OS_SIGNPOST_INTERVAL_END, 0xEEEEB0B5B2B2EEEELL, "SB_STARTUP_PRE_APP_INSTANTIATION", (const char *)&unk_1D0E9B6CB, buf, 2u);
  }

  kdebug_trace();
  return UIApplicationMain(a1, a2, CFSTR("SpringBoard"), CFSTR("SpringBoard"));
}

void _languageMayHaveChanged()
{
  dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_22);
}

void ___languageMayHaveChanged_block_invoke()
{
  void *v0;
  int v1;
  void *v2;
  void *v3;
  int v4;
  int v5;
  void *v6;
  NSObject *v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  void *v19;
  id v20;
  _QWORD v21[2];
  uint8_t buf[4];
  uint64_t v23;
  __int16 v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  +[SBSetupManager sharedInstance](SBSetupManager, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isInSetupMode");

  if (v1)
  {
    +[SBLockScreenManager sharedInstanceIfExists](SBLockScreenManager, "sharedInstanceIfExists");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = v2;
    if (v2)
    {
      v19 = v2;
      v4 = objc_msgSend(v2, "hasUIEverBeenLocked");
      v3 = v19;
      if (v4)
      {
        v5 = objc_msgSend(v19, "isUILocked");
        v3 = v19;
        if (!v5)
        {

          return;
        }
      }
    }

  }
  if ((SBBootLanguages_block_invoke_changed & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0C99DC8], "preferredLanguages");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v6)
      goto LABEL_12;
    if ((objc_msgSend((id)SBBootLanguages, "isEqualToArray:", v6) & 1) == 0)
    {
      SBBootLanguages_block_invoke_changed = 1;
      SBLogCommon();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138543618;
        v23 = SBBootLanguages;
        v24 = 2114;
        v25 = v6;
        _os_log_impl(&dword_1D0540000, v9, OS_LOG_TYPE_DEFAULT, "Preferred languages have changed from '%{public}@' to '%{public}@'. Relaunching.", buf, 0x16u);
      }

      if (!SBApp)
      {
        objc_msgSend(MEMORY[0x1E0D87D70], "identifierForCurrentProcess");
        objc_msgSend(MEMORY[0x1E0D87DA0], "predicateMatchingIdentifier:", objc_claimAutoreleasedReturnValue());
        v10 = objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0D87DA0], "predicateForClearTheBoard");
        v11 = objc_claimAutoreleasedReturnValue();
        v12 = (void *)MEMORY[0x1E0D87DA0];
        v21[0] = v10;
        v21[1] = v11;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v21, 2);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "predicateMatchingAnyPredicate:", v13);
        v14 = objc_claimAutoreleasedReturnValue();

        v15 = objc_msgSend(objc_alloc(MEMORY[0x1E0D87E00]), "initWithExplanation:", CFSTR("SBSystemApp-earlyLanguageChange"));
        objc_msgSend((id)v15, "setReportType:", 0);
        objc_msgSend((id)v15, "setExceptionDomain:", 10);
        objc_msgSend((id)v15, "setExceptionCode:", 1539435073);
        objc_msgSend((id)v15, "setMaximumTerminationResistance:", 40);
        v20 = 0;
        LOBYTE(v15) = objc_msgSend((id)objc_msgSend(objc_alloc(MEMORY[0x1E0D87E08]), "initWithPredicate:context:", v14, v15), "execute:", &v20);
        v16 = v20;
        if ((v15 & 1) == 0)
        {
          v17 = (uint64_t)v16;
          SBLogCommon();
          v18 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138412290;
            v23 = v17;
            _os_log_impl(&dword_1D0540000, v18, OS_LOG_TYPE_DEFAULT, "SBSystemApp failed to clear the board on early language change: %@", buf, 0xCu);
          }

        }
        exit(0);
      }
      objc_msgSend((id)SBApp, "languageChanged");
      goto LABEL_19;
    }
    if (SBBootLanguages)
    {
      SBLogCommon();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        ___languageMayHaveChanged_block_invoke_cold_2((uint64_t)v6, v7, v8);
    }
    else
    {
LABEL_12:
      SBLogCommon();
      v7 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
        ___languageMayHaveChanged_block_invoke_cold_1();
    }

LABEL_19:
  }
}

uint64_t ___performSpringBoardMigration_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  NSObject *v7;
  uint64_t v9;
  int v10;
  uint64_t v11;
  __int16 v12;
  id v13;
  __int16 v14;
  id v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = a3;
  SBLogCommon();
  v7 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
  {
    v9 = *(_QWORD *)(a1 + 32);
    v10 = 138412802;
    v11 = v9;
    v12 = 2112;
    v13 = v5;
    v14 = 2112;
    v15 = v6;
    _os_log_error_impl(&dword_1D0540000, v7, OS_LOG_TYPE_ERROR, "failed while enumerating %@ : url=%@ error=%@", (uint8_t *)&v10, 0x20u);
  }

  return 0;
}

void sub_1D066ADCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D066BD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *_SBDeviceOrientationAggdSuffix(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5)
    return CFSTR("orientation.unknown");
  else
    return off_1E8E9DFE0[a1 - 1];
}

uint64_t SBDeviceUnlockAggdKeyForPrefixAndOrientation(uint64_t a1, uint64_t a2)
{
  const __CFString *v2;

  if ((unint64_t)(a2 - 1) > 5)
    v2 = CFSTR("orientation.unknown");
  else
    v2 = off_1E8E9DFE0[a2 - 1];
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@.%@"), a1, v2);
}

uint64_t SBDeviceUnlockKeyboardAggdKeyForPrefix(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@.%@"), a1, CFSTR("keyboard"));
}

uint64_t SBDeviceUnlockSmartCoverAggdKeyForPrefix(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@.%@"), a1, CFSTR("SmartCover"));
}

void sub_1D066DCA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D066E1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a23, 8);
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D066F974(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  uint64_t v11;

  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v11 - 112));
  _Unwind_Resume(a1);
}

void sub_1D067179C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0674F44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06754BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBReachabilityActivatedInSpringBoardAggdKeyForClass(objc_class *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  v1 = (void *)MEMORY[0x1E0CB3940];
  NSStringFromClass(a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v1, "stringWithFormat:", CFSTR("com.apple.springboard.reachability.activated.sb.%@"), v2);

  return v3;
}

uint64_t SBReachabilityActivatedInAppAggdKeyForBundleID(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("com.apple.springboard.reachability.activated.app.%@"), a1);
}

void sub_1D0678804(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 168));
  _Unwind_Resume(a1);
}

void sub_1D06796F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

uint64_t _serviceAdded(void *a1, io_iterator_t iterator)
{
  uint64_t result;
  uint64_t v5;

  result = IOIteratorNext(iterator);
  if ((_DWORD)result)
  {
    v5 = result;
    do
    {
      objc_msgSend(a1, "_handleServiceAdded:", v5);
      IOObjectRelease(v5);
      result = IOIteratorNext(iterator);
      v5 = result;
    }
    while ((_DWORD)result);
  }
  return result;
}

uint64_t _serviceNotification(void *a1, const char *a2, uint64_t a3, uint64_t a4)
{
  return objc_msgSend(a1, "_handleNotificationForService:messageType:messageArgument:", a2, a3, a4);
}

__CFString *NSStringFromSBUIControllerRequireContentOptions(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t *v4;
  uint8x8_t v5;
  int v6;
  unint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  void *v15;
  id v16;
  char v17;

  if (!a1)
    return CFSTR("(SBUIControllerRequireContentOptions none)");
  v2 = (void *)objc_opt_new();
  v12 = MEMORY[0x1E0C809B0];
  v13 = 3221225472;
  v14 = __NSStringFromSBUIControllerRequireContentOptions_block_invoke;
  v15 = &unk_1E8E9EB40;
  v3 = v2;
  v16 = v3;
  v4 = &v12;
  v17 = 0;
  v5 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
  v5.i16[0] = vaddlv_u8(v5);
  v6 = v5.i32[0];
  if (v5.i32[0])
  {
    v7 = 0;
    do
    {
      if (((1 << v7) & a1) != 0)
      {
        ((void (*)(uint64_t *))v14)(v4);
        if (v17)
          break;
        --v6;
      }
      if (v7 > 0x3E)
        break;
      ++v7;
    }
    while (v6 > 0);
  }

  v8 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v3, "componentsJoinedByString:", CFSTR(" "));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "stringWithFormat:", CFSTR("( %lu / %@)"), a1, v9, v12, v13);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return (__CFString *)v10;
}

void sub_1D0680EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06826BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0682D5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0684DB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class __getWFSpringBoardWebClipMetadataClass_block_invoke(uint64_t a1)
{
  Class result;

  VoiceShortcutClientLibrary();
  result = objc_getClass("WFSpringBoardWebClipMetadata");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getWFSpringBoardWebClipMetadataClass_block_invoke_cold_1();
  getWFSpringBoardWebClipMetadataClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void VoiceShortcutClientLibrary()
{
  void *v0;
  __int128 v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = 0;
  if (!VoiceShortcutClientLibraryCore_frameworkLibrary)
  {
    v1 = xmmword_1E8E9EF10;
    v2 = 0;
    VoiceShortcutClientLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!VoiceShortcutClientLibraryCore_frameworkLibrary)
    VoiceShortcutClientLibrary_cold_1(&v0);
}

Class __getWFSpringBoardWorkflowRunnerClientClass_block_invoke(uint64_t a1)
{
  Class result;

  VoiceShortcutClientLibrary();
  result = objc_getClass("WFSpringBoardWorkflowRunnerClient");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getWFSpringBoardWorkflowRunnerClientClass_block_invoke_cold_1();
  getWFSpringBoardWorkflowRunnerClientClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1D06864B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBHIDIsAccessibilitySenderID(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;

  if (SBHIDIsAccessibilitySenderID_onceToken != -1)
    dispatch_once(&SBHIDIsAccessibilitySenderID_onceToken, &__block_literal_global_10);
  v2 = (void *)SBHIDIsAccessibilitySenderID_accessibilitySenderIDs;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v2, "containsObject:", v3);

  return v4;
}

void sub_1D068710C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0687210(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0687324(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

id _SBWorkspaceCopyScheduledPowerEvents()
{
  return (id)objc_msgSend((id)__SBWAllKnownPowerEvents, "copy");
}

void _SBWorkspaceTrackPowerEvents(int a1)
{
  __CFNotificationCenter *DarwinNotifyCenter;
  void *v3;
  void *v4;

  if (__SBWTrackPowerEvents != a1)
  {
    __SBWTrackPowerEvents = a1;
    DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
    if (a1)
    {
      CFNotificationCenterAddObserver(DarwinNotifyCenter, 0, (CFNotificationCallback)ScheduledWakeRegistered, CFSTR("com.apple.system.IOPMSchedulePowerEventNotification"), 0, CFNotificationSuspensionBehaviorDeliverImmediately);
    }
    else
    {
      CFNotificationCenterRemoveObserver(DarwinNotifyCenter, 0, CFSTR("com.apple.system.IOPMSchedulePowerEventNotification"), 0);
      v3 = (void *)__SBWAllKnownPowerEvents;
      __SBWAllKnownPowerEvents = 0;

      v4 = (void *)__SBWRecentSleepsAndWakes;
      __SBWRecentSleepsAndWakes = 0;

    }
  }
}

void ScheduledWakeRegistered()
{
  CFArrayRef v0;
  const __CFArray *v1;
  id v2;
  void *v3;
  CFIndex Count;
  CFIndex v5;
  CFIndex i;
  const __CFDictionary *ValueAtIndex;
  void *Value;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  const __CFString *v14;
  uint64_t v15;
  uint64_t v16;
  const __CFDictionary *v17;
  const __CFString *v18;

  v0 = IOPMCopyScheduledPowerEvents();
  if (v0)
  {
    v1 = v0;
    if (!__SBWAllKnownPowerEvents)
    {
      v2 = objc_alloc_init(MEMORY[0x1E0C99E08]);
      v3 = (void *)__SBWAllKnownPowerEvents;
      __SBWAllKnownPowerEvents = (uint64_t)v2;

    }
    Count = CFArrayGetCount(v1);
    if (Count >= 1)
    {
      v5 = Count;
      for (i = 0; i != v5; ++i)
      {
        ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v1, i);
        Value = (void *)CFDictionaryGetValue(ValueAtIndex, CFSTR("time"));
        v9 = objc_alloc(MEMORY[0x1E0CB3940]);
        objc_msgSend(Value, "timeIntervalSinceReferenceDate");
        v11 = (void *)objc_msgSend(v9, "initWithFormat:", CFSTR("%f"), v10);
        objc_msgSend((id)__SBWAllKnownPowerEvents, "objectForKey:", v11);
        v12 = objc_claimAutoreleasedReturnValue();
        if (v12)
        {
          v13 = (id)v12;
          v14 = (const __CFString *)CFDictionaryGetValue(ValueAtIndex, CFSTR("scheduledby"));
          v15 = objc_msgSend(v13, "count");
          if (v15)
          {
            v16 = v15;
            while (1)
            {
              v17 = (const __CFDictionary *)CFArrayGetValueAtIndex(v1, i);
              v18 = (const __CFString *)CFDictionaryGetValue(v17, CFSTR("scheduledby"));
              if (CFStringCompare(v14, v18, 0) == kCFCompareEqualTo)
                break;
              if (!--v16)
                goto LABEL_11;
            }
          }
          else
          {
LABEL_11:
            objc_msgSend(v13, "addObject:", ValueAtIndex);
          }
        }
        else
        {
          v13 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
          objc_msgSend(v13, "addObject:", ValueAtIndex);
          objc_msgSend((id)__SBWAllKnownPowerEvents, "setObject:forKey:", v13, v11);
        }

      }
    }
    CFRelease(v1);
  }
}

uint64_t SBWorkspaceApplicationCanLaunchWhilePasscodeLocked(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v1 = a1;
  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "testingDefaults");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "testRunnerRecoveryApplicationBundleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (SBWorkspaceApplicationCanLaunchWhilePasscodeLocked___onceToken != -1)
    dispatch_once(&SBWorkspaceApplicationCanLaunchWhilePasscodeLocked___onceToken, &__block_literal_global_13);
  objc_msgSend(v1, "bundleIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = BSEqualObjects();

  if (v6)
  {
    objc_msgSend(v1, "info");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isAppleApplication");
  }
  else
  {
    v9 = (void *)SBWorkspaceApplicationCanLaunchWhilePasscodeLocked___allowedToLaunchWhileLockedApps;
    objc_msgSend(v1, "bundleIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v9, "containsObject:", v7);
  }
  v10 = v8;

  return v10;
}

uint64_t SBWorkspaceApplicationCanLaunchWhilePasscodeLockedIfSecureLaunchRequested(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = SBWorkspaceApplicationCanLaunchWhilePasscodeLockedIfSecureLaunchRequested___onceToken;
  v2 = a1;
  if (v1 != -1)
    dispatch_once(&SBWorkspaceApplicationCanLaunchWhilePasscodeLockedIfSecureLaunchRequested___onceToken, &__block_literal_global_25);
  v3 = (void *)SBWorkspaceApplicationCanLaunchWhilePasscodeLockedIfSecureLaunchRequested___canLaunchSecureWhileLocked;
  objc_msgSend(v2, "bundleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v3, "containsObject:", v4);
  return v5;
}

uint64_t SBWorkspaceApplicationCanResumeWhilePasscodeLocked(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v1 = a1;
  if (SBWorkspaceApplicationCanResumeWhilePasscodeLocked___onceToken != -1)
    dispatch_once(&SBWorkspaceApplicationCanResumeWhilePasscodeLocked___onceToken, &__block_literal_global_26);
  v2 = SBSecureAppTypeForApplication(v1);
  v3 = (void *)SBWorkspaceApplicationCanResumeWhilePasscodeLocked___canResumeWhileLocked;
  objc_msgSend(v1, "bundleIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "containsObject:", v4))
  {
    +[SBSecureAppManager sharedInstance](SBSecureAppManager, "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "hasSecureAppOfType:", v2);

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

uint64_t SBWorkspaceApplicationCanActivateWhilePasscodeLocked(void *a1)
{
  id v1;
  uint64_t CanResumeWhilePasscodeLocked;

  v1 = a1;
  if ((SBWorkspaceApplicationCanLaunchWhilePasscodeLocked(v1) & 1) != 0
    || (SBWorkspaceApplicationCanLaunchWhilePasscodeLockedIfSecureLaunchRequested(v1) & 1) != 0)
  {
    CanResumeWhilePasscodeLocked = 1;
  }
  else
  {
    CanResumeWhilePasscodeLocked = SBWorkspaceApplicationCanResumeWhilePasscodeLocked(v1);
  }

  return CanResumeWhilePasscodeLocked;
}

id SBWorkspaceApplicationForURLWithError(void *a1, int *a2, _QWORD *a3)
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  int v10;
  void *v11;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  NSObject *v17;
  void *v18;

  v5 = a1;
  objc_msgSend(v5, "scheme");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "lowercaseString");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v7)
  {
    v11 = 0;
    v10 = -2;
    if (!a2)
      goto LABEL_7;
    goto LABEL_6;
  }
  if (objc_msgSend(v7, "isEqualToString:", CFSTR("search")))
  {
    objc_msgSend(v5, "host");
    v8 = objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      v9 = (void *)v8;
      v10 = 0;
      goto LABEL_16;
    }
    v10 = -2;
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(MEMORY[0x1E0CA5878], "defaultWorkspace");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "URLOverrideForURL:", v5);
  v14 = objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "applicationsAvailableForOpeningURL:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v15, "count"))
  {

    v11 = 0;
    v10 = -3;
    goto LABEL_27;
  }
  objc_msgSend(v15, "objectAtIndex:", 0);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "applicationIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v9)
  {
    v11 = 0;
LABEL_27:
    v5 = (id)v14;
    if (!a2)
      goto LABEL_7;
    goto LABEL_6;
  }
  v5 = (id)v14;
LABEL_16:
  if (objc_msgSend((id)SBApp, "isBundleIdentifierRestrictionDisabled:", v9))
  {
    SBLogCommon();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      SBWorkspaceApplicationForURLWithError_cold_1();

    v11 = 0;
    v10 = -4;
    if (!a2)
      goto LABEL_7;
LABEL_6:
    *a2 = v10;
    goto LABEL_7;
  }
  +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "_applicationForIdentifier:", v9);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v11)
    v10 = -1;

  if (a2)
    goto LABEL_6;
LABEL_7:
  if (a3 && v11)
    *a3 = objc_retainAutorelease(v5);

  return v11;
}

id SBWorkspaceDialRequestForURL(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;

  v1 = a1;
  objc_msgSend(v1, "absoluteString");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "length");

  if (!v3)
    goto LABEL_4;
  v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DBD2E0]), "initWithURL:", v1);
  if ((objc_msgSend(v4, "isValid") & 1) == 0)
  {

LABEL_4:
    v4 = 0;
  }

  return v4;
}

uint64_t SBWorkspaceActivateApplicationWithActionsAndResult(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  SBDeviceApplicationSceneEntity *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v5 = a2;
  v6 = a3;
  v7 = a1;
  +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[SBDeviceApplicationSceneEntity initWithApplicationForMainDisplay:]([SBDeviceApplicationSceneEntity alloc], "initWithApplicationForMainDisplay:", v7);

  if (objc_msgSend(v5, "count"))
    -[SBApplicationSceneEntity addActions:](v9, "addActions:", v5);
  objc_msgSend(v8, "createRequestForApplicationActivation:options:", v9, 0);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D01828], "processHandle");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setOriginatingProcess:", v11);

  objc_msgSend(v10, "applicationContext");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setResultBlock:", v6);

  v13 = objc_msgSend(v8, "executeTransitionRequest:", v10);
  return v13;
}

uint64_t _SBMainWorkspaceActivateApplicationFromURL(void *a1, void *a2, void *a3, int a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  void (**v12)(id, void *);
  void *v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  SBDeviceApplicationSceneEntity *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  int v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  SBDeviceApplicationSceneEntity *v27;
  NSObject *v28;
  _QWORD v30[4];
  id v31;
  _QWORD v32[4];
  SBDeviceApplicationSceneEntity *v33;
  id v34;
  id v35;

  v9 = a1;
  v10 = a2;
  v11 = a3;
  v12 = a5;
  if (v10)
  {
    v35 = 0;
    SBWorkspaceApplicationForURLWithError(v10, 0, &v35);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v35;
    if (v13)
    {
      if (v11)
      {
        objc_msgSend(v11, "identity");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        +[SBSceneManagerCoordinator sharedInstance](SBSceneManagerCoordinator, "sharedInstance");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "sceneManagerForDisplayIdentity:", v15);
        v17 = (void *)objc_claimAutoreleasedReturnValue();

        +[SBDeviceApplicationSceneEntity defaultEntityWithApplication:sceneHandleProvider:displayIdentity:](SBDeviceApplicationSceneEntity, "defaultEntityWithApplication:sceneHandleProvider:displayIdentity:", v13, v17, v15);
        v18 = (SBDeviceApplicationSceneEntity *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        v18 = -[SBDeviceApplicationSceneEntity initWithApplicationForMainDisplay:]([SBDeviceApplicationSceneEntity alloc], "initWithApplicationForMainDisplay:", v13);
      }
      if (a4)
        v20 = 2;
      else
        v20 = 0;
      objc_msgSend(v13, "info");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v22 = objc_msgSend(v21, "alwaysDeliversOpenURLActionsUsingWorkspace");

      if (v22)
        v23 = v20 | 0x10;
      else
        v23 = v20;
      objc_msgSend(v9, "createRequestForApplicationActivation:options:", v18, v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D01828], "processHandle");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "setOriginatingProcess:", v25);

      v32[0] = MEMORY[0x1E0C809B0];
      v32[1] = 3221225472;
      v32[2] = ___SBMainWorkspaceActivateApplicationFromURL_block_invoke;
      v32[3] = &unk_1E8E9ECA8;
      v33 = v18;
      v34 = v14;
      v26 = v14;
      v27 = v18;
      objc_msgSend(v24, "modifyApplicationContext:", v32);
      if (v12)
        v12[2](v12, v24);
      v19 = objc_msgSend(v9, "executeTransitionRequest:", v24);

      v14 = v13;
    }
    else
    {
      if ((a4 & 1) != 0)
      {
        v19 = 0;
LABEL_20:

        goto LABEL_21;
      }
      dispatch_get_global_queue(0, 0);
      v28 = objc_claimAutoreleasedReturnValue();
      v30[0] = MEMORY[0x1E0C809B0];
      v30[1] = 3221225472;
      v30[2] = ___SBMainWorkspaceActivateApplicationFromURL_block_invoke_2;
      v30[3] = &unk_1E8E9DED8;
      v31 = v10;
      dispatch_async(v28, v30);

      v19 = 0;
      v26 = v31;
    }

    goto LABEL_20;
  }
  v19 = 0;
LABEL_21:

  return v19;
}

uint64_t SBWorkspaceActivateApplicationFromURL(void *a1, int a2, void *a3)
{
  return SBWorkspaceActivateApplicationFromURLWithDisplayConfiguration(a1, 0, a2, a3);
}

uint64_t SBWorkspaceActivateApplicationFromURLWithDisplayConfiguration(void *a1, void *a2, int a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;

  v7 = a4;
  v8 = a2;
  v9 = a1;
  +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = _SBMainWorkspaceActivateApplicationFromURL(v10, v9, v8, a3, v7);

  return v11;
}

uint64_t SBMainWorkspaceActivateApplicationFromURL(void *a1, void *a2, int a3, void *a4)
{
  return _SBMainWorkspaceActivateApplicationFromURL(a1, a2, 0, a3, a4);
}

uint64_t SBWorkspaceActivateApplication(void *a1)
{
  return SBWorkspaceActivateApplicationWithActionsAndResult(a1, 0, 0);
}

uint64_t SBWorkspaceSuspendActiveDisplayWithSource(uint64_t a1)
{
  return __SBWorkspaceActivateSpringBoardWithResult(a1, 0, 1, 1, 0, 0, 0);
}

uint64_t SBWorkspaceSuspendDisplayWithSource(void *a1, uint64_t a2)
{
  return __SBWorkspaceActivateSpringBoardWithResult(a2, a1, 1, 1, 0, 0, 0);
}

void SBWorkspaceSuspendApplicationScene(void *a1)
{
  id v1;
  void *v2;
  int v3;

  v1 = a1;
  SBWorkspaceApplicationSceneHandlesInLockedOrUnlockedEnvironmentLayoutState();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "containsObject:", v1);

  if (v3)
    __SBWorkspaceActivateSpringBoardWithResult(0, 0, 0, 0, 0, 0, 0);
}

uint64_t SBWorkspaceHasApplicationSceneInLockedOrUnlockedEnvironmentLayoutStateMatchingApplication(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t i;
  void *v6;
  char v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  SBWorkspaceApplicationSceneHandlesInLockedOrUnlockedEnvironmentLayoutState();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v3)
  {
    v4 = *(_QWORD *)v10;
    while (2)
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v10 != v4)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * i), "application", (_QWORD)v9);
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        v7 = objc_msgSend(v6, "isSameExecutableAsApplication:", v1);

        if ((v7 & 1) != 0)
        {
          v3 = 1;
          goto LABEL_11;
        }
      }
      v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
      if (v3)
        continue;
      break;
    }
  }
LABEL_11:

  return v3;
}

uint64_t SBWorkspaceUnlockedEnvironmentLayoutStateHasMatchingApplication(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  char v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend((id)SBApp, "windowSceneManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "activeDisplayWindowScene");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  objc_msgSend(v3, "switcherController", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "layoutStateApplicationSceneHandles");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * i), "application");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = objc_msgSend(v9, "isSameExecutableAsApplication:", v1);

        if ((v10 & 1) != 0)
        {
          v6 = 1;
          goto LABEL_11;
        }
      }
      v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v6)
        continue;
      break;
    }
  }
LABEL_11:

  return v6;
}

BOOL _SBWorkspaceIsBusyForTransaction()
{
  void *v0;
  void *v1;
  _BOOL8 v2;

  +[SBMainWorkspace _instanceIfExists](SBMainWorkspace, "_instanceIfExists");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "currentTransaction");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  v2 = v1 && !objc_msgSend(v1, "isComplete");
  return v2;
}

BOOL SBWorkspaceIsBusy()
{
  return __SBWFinishedBoot != 1 || _SBWorkspaceIsBusyForTransaction();
}

uint64_t SBWorkspaceInterruptBusynessIfPossible(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  uint64_t v4;

  v1 = a1;
  if (__SBWFinishedBoot == 1 && _SBWorkspaceIsBusyForTransaction())
  {
    +[SBMainWorkspace _instanceIfExists](SBMainWorkspace, "_instanceIfExists");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "currentTransaction");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    v4 = objc_msgSend(v3, "isInterruptible");
    if ((_DWORD)v4)
      objc_msgSend(v3, "interruptWithReason:", v1);

  }
  else
  {
    v4 = 0;
  }

  return v4;
}

__CFString *SBWorkspaceGetWhyBusy()
{
  void *v0;
  void *v1;
  void *v2;
  __CFString *v3;

  if (__SBWFinishedBoot == 1)
  {
    if (_SBWorkspaceIsBusyForTransaction())
    {
      v0 = (void *)MEMORY[0x1E0CB3940];
      +[SBMainWorkspace _instanceIfExists](SBMainWorkspace, "_instanceIfExists");
      v1 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v1, "currentTransaction");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v0, "stringWithFormat:", CFSTR("Ongoing transaction: %@"), v2);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v3 = CFSTR("Not Busy");
    }
  }
  else
  {
    v3 = CFSTR("System boot is not complete");
  }
  return v3;
}

void SBWorkspaceDestroyApplicationEntity(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  int v4;
  id v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  SBLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v4 = 138543362;
    v5 = v1;
    _os_log_impl(&dword_1D0540000, v2, OS_LOG_TYPE_DEFAULT, "SBWorkspaceDestroyApplicationEntity: %{public}@", (uint8_t *)&v4, 0xCu);
  }

  +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "_destroyApplicationSceneEntity:", v1);

}

void SBWorkspaceNoteApplicationEntityWasRemovedFromAppSwitcher(void *a1)
{
  id v1;
  NSObject *v2;
  void *v3;
  void *v4;
  int v5;
  id v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  SBLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    v5 = 138543362;
    v6 = v1;
    _os_log_impl(&dword_1D0540000, v2, OS_LOG_TYPE_DEFAULT, "SBWorkspaceNoteApplicationEntityWasRemovedFromAppSwitcher: %{public}@", (uint8_t *)&v5, 0xCu);
  }

  objc_msgSend((id)SBApp, "hungApplicationInteractionObserver");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "observeRemovedApplicationSceneEntity:", v1);

  +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "_cleanupForRemovedAppEntity:", v1);

}

void SBWorkspaceDestroyApplicationSceneHandlesWithIntent(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void (**v7)(id, _QWORD, void *);
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  SBDeviceApplicationSceneEntity *v14;
  void *v15;
  NSObject *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  void *v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = a3;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v9 = v5;
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v22;
    do
    {
      v13 = 0;
      do
      {
        if (*(_QWORD *)v22 != v12)
          objc_enumerationMutation(v9);
        v14 = -[SBDeviceApplicationSceneEntity initWithApplicationSceneHandle:]([SBDeviceApplicationSceneEntity alloc], "initWithApplicationSceneHandle:", *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v13));
        if (v14)
          objc_msgSend(v8, "addObject:", v14);

        ++v13;
      }
      while (v11 != v13);
      v11 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
    }
    while (v11);
  }

  if (objc_msgSend(v8, "count"))
  {
    +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "_removeApplicationEntities:withDestructionIntent:completion:", v8, v6, v7);
LABEL_16:

    goto LABEL_17;
  }
  if (v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unable to retrieve any SBDeviceApplicationSceneEntity-s from the provided SBDeviceApplicationSceneHandle-s: %@"), v9);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    SBLogCommon();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      SBWorkspaceDestroyApplicationSceneHandlesWithIntent_cold_1();

    v17 = (void *)MEMORY[0x1E0CB35C8];
    v18 = SBWorkspaceErrorDomain;
    v25 = *MEMORY[0x1E0CB2938];
    v26 = v15;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "errorWithDomain:code:userInfo:", v18, 1, v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v7[2](v7, 0, v20);

    goto LABEL_16;
  }
LABEL_17:

}

void _SBWorkspaceTerminateApps(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  void (**v12)(_QWORD);
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  id v22;
  id v23;
  id v24;
  _QWORD v25[4];
  id v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _QWORD v31[4];
  id v32;
  _BYTE v33[128];
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v24 = a4;
  v10 = a5;
  v31[0] = MEMORY[0x1E0C809B0];
  v31[1] = 3221225472;
  v31[2] = ___SBWorkspaceTerminateApps_block_invoke;
  v31[3] = &unk_1E8E9E8D0;
  v11 = v10;
  v32 = v11;
  v12 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v31);
  if (objc_msgSend(v9, "count"))
  {
    v22 = v11;
    v13 = (void *)MEMORY[0x1E0D016E8];
    v14 = objc_msgSend(v9, "count");
    objc_msgSend(v13, "sentinelWithQueue:signalCount:completion:", MEMORY[0x1E0C80D38], v14, v12);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    v30 = 0u;
    v23 = v9;
    v16 = v9;
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
    if (v17)
    {
      v18 = v17;
      v19 = *(_QWORD *)v28;
      do
      {
        for (i = 0; i != v18; ++i)
        {
          if (*(_QWORD *)v28 != v19)
            objc_enumerationMutation(v16);
          v21 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * i);
          if (objc_msgSend(v21, "isCurrentProcess"))
          {
            objc_msgSend(v15, "signal");
          }
          else
          {
            v25[0] = MEMORY[0x1E0C809B0];
            v25[1] = 3221225472;
            v25[2] = ___SBWorkspaceTerminateApps_block_invoke_2;
            v25[3] = &unk_1E8E9E980;
            v26 = v15;
            objc_msgSend(v21, "killForReason:andReport:withDescription:completion:", a2, a3, v24, v25);

          }
        }
        v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v27, v33, 16);
      }
      while (v18);
    }

    v11 = v22;
    v9 = v23;
  }
  else
  {
    v12[2](v12);
  }

}

void SBWorkspaceTerminateApplication(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  NSObject *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  int v19;
  void *v20;
  __int16 v21;
  void *v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = a4;
  v11 = a5;
  if (v10)
  {
    v12 = v10;
  }
  else
  {
    FBSApplicationTerminationReasonDescription();
    v12 = (id)objc_claimAutoreleasedReturnValue();
  }
  v13 = v12;
  SBLogCommon();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    objc_msgSend(v9, "bundleIdentifier");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = 138543618;
    v20 = v15;
    v21 = 2112;
    v22 = v13;
    _os_log_impl(&dword_1D0540000, v14, OS_LOG_TYPE_DEFAULT, "SBWorkspaceTerminateApplication: %{public}@: \"%@\"", (uint8_t *)&v19, 0x16u);

  }
  objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "bundleIdentifier");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "applicationProcessesForBundleIdentifier:", v17);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  _SBWorkspaceTerminateApps(v18, a2, a3, v10, v11);
}

void SBWorkspaceKillApplication(void *a1, int a2, void *a3, void *a4)
{
  uint64_t v4;

  if (a2)
    v4 = 1;
  else
    v4 = 5;
  SBWorkspaceTerminateApplication(a1, v4, 0, a3, a4);
}

void SBWorkspaceTerminateAllApps(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  int v13;
  void *v14;
  __int16 v15;
  id v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  SBLogCommon();
  v9 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    FBSApplicationTerminationReasonDescription();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = 138412546;
    v14 = v10;
    v15 = 2112;
    v16 = v7;
    _os_log_impl(&dword_1D0540000, v9, OS_LOG_TYPE_DEFAULT, "SBWorkspaceTerminateAllApps: reason = \"%@\"; description = \"%@\"",
      (uint8_t *)&v13,
      0x16u);

  }
  objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "allApplicationProcesses");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  _SBWorkspaceTerminateApps(v12, a1, a2, v7, v8);

}

uint64_t SBWorkspaceActivateApplicationSuspended(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  _QWORD v6[4];
  id v7;

  v1 = a1;
  +[SBWorkspace mainWorkspace](SBWorkspace, "mainWorkspace");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __SBWorkspaceActivateApplicationSuspended_block_invoke;
  v6[3] = &unk_1E8E9EE78;
  v7 = v1;
  v3 = v1;
  v4 = objc_msgSend(v2, "requestTransitionWithBuilder:", v6);

  return v4;
}

uint64_t SBWorkspaceActivateApplicationIdempotent(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v1 = a1;
  objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "bundleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "applicationProcessesForBundleIdentifier:", v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v4, "count"))
    v5 = 0;
  else
    v5 = SBWorkspaceActivateApplicationSuspended(v1);

  return v5;
}

uint64_t SBWorkspaceLaunchMusicSuspended()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  void *v4;
  char v5;
  char HasApplicationSceneInLockedOrUnlockedEnvironmentLayoutStateMatchingApplication;

  +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "musicApplication");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v1)
    goto LABEL_5;
  +[SBSyncController sharedInstance](SBSyncController, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v2, "isRestoring") & 1) != 0)
  {
    v3 = 0;
LABEL_9:

    goto LABEL_10;
  }
  +[SBSyncController sharedInstance](SBSyncController, "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isResetting");

  if ((v5 & 1) != 0)
  {
LABEL_5:
    v3 = 0;
LABEL_10:

    return v3;
  }
  HasApplicationSceneInLockedOrUnlockedEnvironmentLayoutStateMatchingApplication = SBWorkspaceHasApplicationSceneInLockedOrUnlockedEnvironmentLayoutStateMatchingApplication(v1);

  if ((HasApplicationSceneInLockedOrUnlockedEnvironmentLayoutStateMatchingApplication & 1) == 0)
  {
    +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "musicApplication");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = SBWorkspaceActivateApplicationIdempotent(v2);
    goto LABEL_9;
  }
  return 0;
}

void SBWorkspaceHandleStatusBarReturnActionFromApp(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  int v12;
  void *v13;
  void *v14;
  void *v15;
  id v16;
  char v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t i;
  void *v29;
  void *v30;
  int v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  char v38;
  id v39;
  id v40;
  void *v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  void *v46;
  id v47;
  void *v48;
  void *v49;
  id v50;
  id v51;
  id v52;
  id v53;
  _QWORD v54[4];
  id v55;
  id v56;
  id v57;
  id v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  _BYTE v63[128];
  uint64_t v64;

  v64 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  objc_msgSend((id)SBApp, "lockOutController");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "isProximityReaderBlocked");

  if (!v12)
    goto LABEL_3;
  objc_msgSend((id)SBApp, "systemUIScenesCoordinator");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "proximityReaderUISceneController");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = (void *)objc_msgSend(v9, "copy");
  v54[0] = MEMORY[0x1E0C809B0];
  v54[1] = 3221225472;
  v54[2] = __SBWorkspaceHandleStatusBarReturnActionFromApp_block_invoke;
  v54[3] = &unk_1E8E9F108;
  v55 = v7;
  v56 = v8;
  v57 = v9;
  v16 = v10;
  v58 = v16;
  v17 = objc_msgSend(v14, "handleBackgroundActivity:handler:", v15, v54);

  if ((v17 & 1) == 0)
  {
LABEL_3:
    v18 = v9;
    if (SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity_onceToken != -1)
      dispatch_once(&SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity_onceToken, &__block_literal_global_1025);
    if (objc_msgSend((id)SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity___callingActivityIdentifiers, "containsObject:", v18))
    {
      objc_msgSend((id)SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity___callingDomain, "data");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_msgSend(objc_alloc(MEMORY[0x1E0DB08B8]), "initWithData:", v19);
      if (v20)
      {
        v21 = (id)v20;
        v22 = (void *)SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity___callingDomain;
LABEL_11:
        objc_msgSend(v22, "reportUserInteraction:", v21);

        v16 = v10;
        goto LABEL_36;
      }
    }
    else if (objc_msgSend((id)*MEMORY[0x1E0DB0BA8], "isEqualToString:", v18))
    {
      objc_msgSend((id)SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity___stewieDomain, "data");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      if (objc_msgSend(v19, "isStewieActive"))
      {
        v21 = objc_alloc_init(MEMORY[0x1E0DB0A70]);
        v22 = (void *)SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity___stewieDomain;
        goto LABEL_11;
      }
    }
    else
    {
      v50 = v10;
      v51 = v9;
      v52 = v8;
      v53 = v7;
      objc_msgSend((id)SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity___backgroundActivitiesDomain, "data");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = objc_alloc_init(MEMORY[0x1E0DB0930]);
      v59 = 0u;
      v60 = 0u;
      v61 = 0u;
      v62 = 0u;
      objc_msgSend(v19, "attributions");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v59, v63, 16);
      if (v25)
      {
        v26 = v25;
        v27 = *(_QWORD *)v60;
        do
        {
          for (i = 0; i != v26; ++i)
          {
            if (*(_QWORD *)v60 != v27)
              objc_enumerationMutation(v24);
            v29 = *(void **)(*((_QWORD *)&v59 + 1) + 8 * i);
            objc_msgSend(v29, "backgroundActivityIdentifier");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            v31 = objc_msgSend(v30, "isEqualToString:", v18);

            if (v31)
              objc_msgSend(v23, "addAttribution:", v29);
          }
          v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v59, v63, 16);
        }
        while (v26);
      }

      objc_msgSend(v19, "visualDescriptorForBackgroundActivityWithIdentifier:", v18);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "setVisualDescriptor:forBackgroundActivityWithIdentifier:", v32, v18);
      v33 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DB0888]), "initWithData:", v23);
      if (v33)
        objc_msgSend((id)SBWorkspaceReportUserInteractionViaSystemStatusDomainForBackgroundActivity___backgroundActivitiesDomain, "reportUserInteraction:", v33);

      v8 = v52;
      v7 = v53;
      v10 = v50;
      v9 = v51;
    }

    objc_msgSend((id)SBApp, "windowSceneManager");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v34, "windowSceneForSceneIdentifier:", v8);
    v35 = (void *)objc_claimAutoreleasedReturnValue();

    v36 = v10;
    if (v10 || (v36 = v35) != 0)
    {
      v16 = v36;

    }
    else
    {
      objc_msgSend((id)SBApp, "windowSceneManager");
      v49 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v49, "activeDisplayWindowScene");
      v16 = (id)objc_claimAutoreleasedReturnValue();

      if (!v16)
        goto LABEL_28;
    }
    objc_msgSend(v16, "transientOverlayPresenter");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    v38 = objc_msgSend(v37, "handleDoubleHeightStatusBarTap");

    if ((v38 & 1) != 0)
    {
LABEL_35:

      goto LABEL_36;
    }
LABEL_28:
    v39 = v9;
    v40 = v8;
    objc_msgSend(v16, "uiLockStateProvider");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    v42 = v41;
    if (v41)
    {
      v43 = v41;
    }
    else
    {
      +[SBLockScreenManager sharedInstance](SBLockScreenManager, "sharedInstance");
      v43 = (id)objc_claimAutoreleasedReturnValue();
    }
    v44 = v43;

    if (!objc_msgSend(v44, "isUILocked"))
      goto LABEL_33;
    +[SBCoverSheetPresentationManager sharedInstance](SBCoverSheetPresentationManager, "sharedInstance");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v45, "coverSheetHostedAppSceneHandle");
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v46, "application");
    v47 = (id)objc_claimAutoreleasedReturnValue();

    if (v47 == v7)
    {
LABEL_33:
      +[SBBackgroundActivityAttributionManager sharedInstance](SBBackgroundActivityAttributionManager, "sharedInstance");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v48, "handleTapForBackgroundActivityWithIdentifier:windowScene:", v18, v16);

    }
    v8 = v40;
    v9 = v39;
    goto LABEL_35;
  }
LABEL_36:

}

id _SBWorkspaceCopyRecentSleepsAndWakes()
{
  void *v0;

  v0 = (void *)__SBWRecentSleepsAndWakes;
  if (__SBWRecentSleepsAndWakes)
    v0 = (void *)objc_msgSend((id)__SBWRecentSleepsAndWakes, "copy");
  return v0;
}

void SBWorkspaceNoteSystemBootComplete()
{
  NSObject *v0;
  uint8_t v1[16];

  __SBWFinishedBoot = 1;
  SBLogCommon();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_1D0540000, v0, OS_LOG_TYPE_INFO, "[SBWorkspace] SBWorkspaceNoteSystemBootComplete", v1, 2u);
  }

}

void SBWorkspaceSetPreventIdleSleepForReason(uint64_t a1, void *a2)
{
  void *v3;
  id v4;
  id v5;

  v3 = (void *)MEMORY[0x1E0D229A0];
  v4 = a2;
  objc_msgSend(v3, "sharedInstance");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setSystemIdleSleepDisabled:forReason:", a1, v4);

}

void SBWorkspaceLogUsage(int a1)
{
  if (a1)
    _SBWorkspaceLogUsageForAppleCare(2);
  else
    _SBWorkspaceLogUsageForAppleCare(3);
}

id _SBWorkspaceGetBatteryAwakeTime()
{
  void *v0;

  _SBWorkspaceUpdateBatteryUsageTime(0);
  if (*(double *)&__SBWCurrentUsageTimeInSeconds <= 0.0)
  {
    v0 = 0;
  }
  else
  {
    BSFormattedTimeFromSeconds();
    v0 = (void *)objc_claimAutoreleasedReturnValue();
  }
  return v0;
}

double _SBWorkspaceGetBatteryUsageTimeInSeconds()
{
  _SBWorkspaceUpdateBatteryUsageTime(0);
  return *(double *)&__SBWCurrentUsageTimeInSeconds;
}

double _SBWorkspaceGetBatteryStandbyTimeInSeconds()
{
  double result;
  double v1;

  result = 0.0;
  if (*(double *)&__SBWInitialStandbyTimeGMT != 0.0)
  {
    objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate", 0.0, *(double *)&__SBWInitialStandbyTimeGMT);
    return *(double *)&__SBWSavedStandbyTime + v1 - *(double *)&__SBWInitialStandbyTimeGMT;
  }
  return result;
}

uint64_t _SBWorkspaceAreUsageTimesTrusted()
{
  return __SBWTrustUsageTimes;
}

uint64_t _SBWorkspaceHaveChargedPartially()
{
  return __SBWHaveChargedPartially;
}

uint64_t _SBWorkspaceSetHavePartiallyCharged(uint64_t result)
{
  __SBWHaveChargedPartially = result;
  return result;
}

void SBWorkspaceLoadUsageTimes()
{
  void *v0;
  void *v1;
  uint64_t v2;
  void *v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "usageDefaults");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "standbyTime");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "batteryUsageTime");
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = (void *)v2;
  if (v1)
    v4 = v2 == 0;
  else
    v4 = 1;
  if (!v4)
  {
    __SBWHaveChargedPartially = objc_msgSend(v8, "hasChargedPartially");
    objc_msgSend(v3, "doubleValue");
    __SBWCurrentUsageTimeInSeconds = v5;
    objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate");
    __SBWLastUsageTimeGMT = v6;
    __SBWInitialStandbyTimeGMT = v6;
    objc_msgSend(v1, "doubleValue");
    __SBWSavedStandbyTime = v7;
    __SBWTrustUsageTimes = 1;
    __SBWGatherUsageTime = 1;
    objc_msgSend(v8, "clearUsageDefaults");
  }

}

void _SBWorkspaceSaveUsageTimes()
{
  void *v0;
  double v1;
  double v2;
  void *v3;
  void *v4;
  id v5;

  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "usageDefaults");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  _SBWorkspaceUpdateBatteryUsageTime(0);
  if (*(double *)&__SBWInitialStandbyTimeGMT > 0.0)
  {
    v1 = *(double *)&__SBWCurrentUsageTimeInSeconds;
    if (*(double *)&__SBWCurrentUsageTimeInSeconds > 0.0)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate", *(double *)&__SBWInitialStandbyTimeGMT);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v2 - *(double *)&__SBWInitialStandbyTimeGMT + *(double *)&__SBWSavedStandbyTime);
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setStandbyTime:", v3);

      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "setBatteryUsageTime:", v4);

      objc_msgSend(v5, "setHasChargedPartially:", __SBWHaveChargedPartially);
      objc_msgSend(v5, "synchronizeDefaults");
    }
  }

}

void sub_1D068B380(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_1D068C7C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _SBWorkspaceNoteSleepOrWake(int a1)
{
  void *v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  const __CFString *v10;
  id v11;
  void *v12;
  id v13;
  double v14;
  double v15;
  void *v16;
  size_t v17;
  _OWORD v18[16];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (__SBWTrackPowerEvents)
  {
    v2 = (void *)__SBWRecentSleepsAndWakes;
    if (!__SBWRecentSleepsAndWakes)
    {
      v3 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      v4 = (void *)__SBWRecentSleepsAndWakes;
      __SBWRecentSleepsAndWakes = (uint64_t)v3;

      v2 = (void *)__SBWRecentSleepsAndWakes;
    }
    if (objc_msgSend(v2, "count") == 400)
      objc_msgSend((id)__SBWRecentSleepsAndWakes, "removeObjectAtIndex:", 0);
    v5 = objc_alloc_init(MEMORY[0x1E0C99E08]);
    objc_msgSend(MEMORY[0x1E0D01738], "sharedInstance");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0C99D68], "date");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "formatDateAsLongYMDHMSZWithDate:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v5, "setObject:forKey:", v8, CFSTR("time"));
    if (a1)
    {
      memset(v18, 0, sizeof(v18));
      v17 = 256;
      sysctlbyname("kern.wakereason", v18, &v17, 0, 0);
      if (LOBYTE(v18[0]))
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", v18);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v5, "setObject:forKey:", v9, CFSTR("reason"));

      }
      v10 = CFSTR("Wake");
    }
    else
    {
      v10 = CFSTR("Sleep");
    }
    objc_msgSend(v5, "setObject:forKey:", v10, CFSTR("type"));
    v11 = objc_alloc(MEMORY[0x1E0CB37E8]);
    _SBWorkspaceUpdateBatteryUsageTime(0);
    v12 = (void *)objc_msgSend(v11, "initWithDouble:", *(double *)&__SBWCurrentUsageTimeInSeconds);
    v13 = objc_alloc(MEMORY[0x1E0CB37E8]);
    v14 = 0.0;
    if (*(double *)&__SBWInitialStandbyTimeGMT != 0.0)
    {
      objc_msgSend(MEMORY[0x1E0C99D68], "timeIntervalSinceReferenceDate", 0.0, *(double *)&__SBWInitialStandbyTimeGMT);
      v14 = *(double *)&__SBWSavedStandbyTime + v15 - *(double *)&__SBWInitialStandbyTimeGMT;
    }
    v16 = (void *)objc_msgSend(v13, "initWithDouble:", v14);
    objc_msgSend(v5, "setObject:forKey:", v12, CFSTR("usage"));
    objc_msgSend(v5, "setObject:forKey:", v16, CFSTR("standby"));
    objc_msgSend((id)__SBWRecentSleepsAndWakes, "addObject:", v5);

  }
}

uint64_t SBValidateLayoutRoleString(void *a1, uint64_t *a2, uint64_t *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v5 = a1;
  v6 = v5;
  v7 = 0;
  if (!v5)
  {
    v8 = 0;
    v9 = 0;
    v10 = 0;
    if (!a2)
      goto LABEL_14;
LABEL_13:
    *a2 = v7;
    goto LABEL_14;
  }
  if (objc_msgSend(v5, "isEqual:", *MEMORY[0x1E0DAB830]))
  {
    v7 = 1;
    v8 = 1;
    v9 = 1;
    goto LABEL_12;
  }
  if (objc_msgSend(v6, "isEqual:", *MEMORY[0x1E0DAB838]))
  {
    v7 = 2;
    v8 = 1;
    v9 = 3;
    goto LABEL_12;
  }
  if (objc_msgSend(v6, "isEqual:", *MEMORY[0x1E0DAB840]))
  {
    v7 = 2;
    v8 = 1;
    v9 = 4;
    goto LABEL_12;
  }
  if (objc_msgSend(v6, "isEqual:", *MEMORY[0x1E0DAB848]))
  {
    v8 = 0;
    v9 = 0;
    v7 = 3;
LABEL_12:
    v10 = 1;
    if (!a2)
      goto LABEL_14;
    goto LABEL_13;
  }
  v10 = objc_msgSend(v6, "isEqual:", *MEMORY[0x1E0DAB828]);
  v8 = 0;
  v9 = 0;
  if ((_DWORD)v10)
    v7 = 4;
  if (a2)
    goto LABEL_13;
LABEL_14:
  v11 = v8 ^ 1;
  if (!a3)
    v11 = 1;
  if ((v11 & 1) == 0)
    *a3 = v9;

  return v10;
}

uint64_t SBVideoOutController_DisplayPortAccessoryConnected()
{
  return BSDispatchMain();
}

void sub_1D069BE24(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D069BF1C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D069BFE4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D069C2E0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D069C3D8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D069C4A0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D069D368(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_1D069DBCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1D069DD18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_1D069DDE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_1D069E2D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1D069EA04(_Unwind_Exception *a1)
{
  uint64_t v1;

  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 80));
  _Unwind_Resume(a1);
}

void sub_1D06A3220(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1D06A365C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31)
{
  _Block_object_dispose(&a31, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A37CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A393C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A3B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A3C54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A3E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A3FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A40E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D06A4268(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A43A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D06A44EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A4660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A47D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A4908(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D06A4A40(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D06A4C10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06A4DA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __PPTIsRunningSwitcherGestureTest()
{
  id *v0;
  uint64_t result;

  v0 = (id *)MEMORY[0x1E0CEB258];
  result = objc_msgSend((id)*MEMORY[0x1E0CEB258], "isRunningTest");
  if ((_DWORD)result)
  {
    if ((objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeToHome")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeToHomeOverFolder")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeAndPauseForSwitcher")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeAndPauseForSwitcherOverFolder")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("BottomEdgeSwipe")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("BottomEdgeSwipeMultipleApps")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ArcSwipe")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ArcSwipeStageManager")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ArcSwipeMultipleApps")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeAndPauseForSwitcherFromHomeScreen")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("BottomEdgeSwipeFromHomeScreen")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ArcSwipeFromHomeScreen")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("FourFingerSwipe")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("FourFingerSwipeMultipleApps")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchToHome")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchToAppSwitcher")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchAndSwipe")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchAndSwipeMultipleApps")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeUpHomeToAutoPIP")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchHomeToAutoPIP")) & 1) != 0
      || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeUpHomeToAutoPiP")) & 1) != 0)
    {
      return 1;
    }
    else
    {
      return objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchHomeToAutoPiP"));
    }
  }
  return result;
}

uint64_t __PPTExpectedFinalUnlockedEnvironmentModeForCurrentTest()
{
  id *v0;

  v0 = (id *)MEMORY[0x1E0CEB258];
  if (!objc_msgSend((id)*MEMORY[0x1E0CEB258], "isRunningTest"))
    return 0;
  if ((objc_msgSend(*v0, "isRunningTest:", CFSTR("BottomEdgeSwipe")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("BottomEdgeSwipeMultipleApps")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ArcSwipe")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ArcSwipeMultipleApps")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("BottomEdgeSwipeFromHomeScreen")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ArcSwipeFromHomeScreen")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("FourFingerSwipe")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("FourFingerSwipeMultipleApps")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchAndSwipe")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchAndSwipeMultipleApps")) & 1) != 0)
  {
    return 3;
  }
  if ((objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeToHome")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeToHomeOverFolder")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchToHome")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeUpHomeToAutoPIP")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchHomeToAutoPIP")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeUpHomeToAutoPiP")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchHomeToAutoPiP")) & 1) != 0)
  {
    return 1;
  }
  if ((objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeAndPauseForSwitcher")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeAndPauseForSwitcherOverFolder")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeAndPauseForSwitcherFromHomeScreen")) & 1) != 0
    || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchToAppSwitcher")) & 1) != 0)
  {
    return 2;
  }
  else
  {
    return 0;
  }
}

BOOL __PPTIsRunningSwitcherGestureToAutoPIPTest()
{
  id *v0;

  v0 = (id *)MEMORY[0x1E0CEB258];
  return objc_msgSend((id)*MEMORY[0x1E0CEB258], "isRunningTest")
      && ((objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeUpHomeToAutoPIP")) & 1) != 0
       || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchHomeToAutoPIP")) & 1) != 0
       || (objc_msgSend(*v0, "isRunningTest:", CFSTR("SwipeUpHomeToAutoPiP")) & 1) != 0
       || (objc_msgSend(*v0, "isRunningTest:", CFSTR("ScrunchHomeToAutoPiP")) & 1) != 0);
}

void sub_1D06A91D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06A92C0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D06AE234(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D06AE300(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D06AE748(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D06AE814(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D06AFE38(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

void __Block_byref_object_copy__538(uint64_t a1, uint64_t a2)
{
  objc_moveWeak((id *)(a1 + 40), (id *)(a2 + 40));
}

void __Block_byref_object_dispose__539(uint64_t a1)
{
  objc_destroyWeak((id *)(a1 + 40));
}

void sub_1D06B0DCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char a61)
{
  id *v61;
  id *v62;
  id *v63;
  uint64_t v64;

  _Block_object_dispose(&a34, 8);
  objc_destroyWeak(v63);
  _Block_object_dispose(&a47, 8);
  objc_destroyWeak(v62);
  _Block_object_dispose(&a61, 8);
  objc_destroyWeak(v61);
  _Block_object_dispose((const void *)(v64 - 248), 8);
  objc_destroyWeak(location);
  _Block_object_dispose((const void *)(v64 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1D06B1698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 200), 8);
  _Block_object_dispose((const void *)(v39 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_1D06B1BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  uint64_t v28;

  _Block_object_dispose(&a28, 8);
  _Block_object_dispose((const void *)(v28 - 184), 8);
  _Unwind_Resume(a1);
}

void sub_1D06B3AF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06BB040(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D06BB118(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D06BB238(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D06BB2E8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t SBMainDisplayLayoutStateSpaceConfigurationFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    if ((objc_msgSend(v1, "isEqual:", CFSTR("full")) & 1) != 0)
    {
      v2 = 1;
    }
    else if ((objc_msgSend(v1, "isEqual:", CFSTR("narrow/wide")) & 1) != 0)
    {
      v2 = 2;
    }
    else if ((objc_msgSend(v1, "isEqual:", CFSTR("half/half")) & 1) != 0)
    {
      v2 = 3;
    }
    else if (objc_msgSend(v1, "isEqual:", CFSTR("wide/narrow")))
    {
      v2 = 4;
    }
    else
    {
      v2 = 0;
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

uint64_t SBMainDisplayLayoutStateFloatingConfigurationFromString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (objc_msgSend(v1, "length"))
  {
    if ((objc_msgSend(v1, "isEqual:", CFSTR("left")) & 1) != 0)
    {
      v2 = 1;
    }
    else if ((objc_msgSend(v1, "isEqual:", CFSTR("right")) & 1) != 0)
    {
      v2 = 2;
    }
    else if ((objc_msgSend(v1, "isEqual:", CFSTR("stashed left")) & 1) != 0)
    {
      v2 = 3;
    }
    else if (objc_msgSend(v1, "isEqual:", CFSTR("stashed right")))
    {
      v2 = 4;
    }
    else
    {
      v2 = 0;
    }
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

void sub_1D06BEB88(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 72));
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__717(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = MEMORY[0x1D17E5550](*(_QWORD *)(a2 + 40));
  *(_QWORD *)(a1 + 40) = result;
  return result;
}

void __Block_byref_object_dispose__718(uint64_t a1)
{

}

void sub_1D06BF7A8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1D06C1DEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBSBacklightChangeSourceDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x2F)
    return CFSTR("invalid");
  else
    return off_1E8EA1138[a1 - 1];
}

void sub_1D06C6370(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06C6D38(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06C9D24(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D06CB9F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1D06CC668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06CC92C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06CCEC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj)
{
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void sub_1D06CE11C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06CE8C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  id *v24;
  id *v25;
  uint64_t v26;

  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak((id *)(v26 - 136));
  objc_destroyWeak((id *)(v26 - 128));
  _Unwind_Resume(a1);
}

uint64_t _SBProvisioningStartedHandler()
{
  return objc_msgSend((id)__sharedTelephonyManager, "_provisioningUpdateWithStatus:slot:", 0, 0);
}

uint64_t _SBProvisioningSuccessHandler()
{
  return objc_msgSend((id)__sharedTelephonyManager, "_provisioningUpdateWithStatus:slot:", 1, 0);
}

uint64_t _SBProvisioningFailureHandler(int a1, int a2, int a3, int a4, CFDictionaryRef theDict)
{
  const __CFNumber *Value;
  uint64_t v6;
  uint64_t valuePtr;

  valuePtr = 0;
  if (theDict && (Value = (const __CFNumber *)CFDictionaryGetValue(theDict, CFSTR("kCallSimSlot"))) != 0)
  {
    CFNumberGetValue(Value, kCFNumberNSIntegerType, &valuePtr);
    v6 = valuePtr;
  }
  else
  {
    v6 = 0;
  }
  return objc_msgSend((id)__sharedTelephonyManager, "_provisioningUpdateWithStatus:slot:", 2, v6);
}

void _SBEmergencyCallBackModeChangeHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const __CFDictionary *a5)
{
  void *v7;
  const __CFBoolean *Value;
  NSObject *v9;

  +[SBIdleTimerGlobalCoordinator sharedInstance](SBIdleTimerGlobalCoordinator, "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "resetIdleTimerForReason:", CFSTR("TelephonyManager:EmergencyCallBackMode"));

  if (a5 && (Value = (const __CFBoolean *)CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA7370])) != 0)
  {
    objc_msgSend((id)__sharedTelephonyManager, "_setIsInEmergencyCallbackMode:", CFBooleanGetValue(Value));
  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBEmergencyCallBackModeChangeHandler_cold_1(a3, (uint64_t)a5, v9);

  }
}

void _DataPlanActivateFailed(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const __CFDictionary *a5)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  SBDataPlanActivationAlertItem *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[5];
  _QWORD v33[5];
  id v34;
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread") & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _DataPlanActivateFailed(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "handleFailureInFunction:file:lineNumber:description:", v25, CFSTR("SBTelephonyManager.m"), 1538, CFSTR("this call must be made on the main thread"));

  }
  SBWorkspaceApplicationSceneHandlesInLockedOrUnlockedEnvironmentLayoutState();
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v33[0] = 0;
  v33[1] = v33;
  v33[2] = 0x3032000000;
  v33[3] = __Block_byref_object_copy__3;
  v33[4] = __Block_byref_object_dispose__3;
  v34 = 0;
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 3221225472;
  v32[2] = ___DataPlanActivateFailed_block_invoke;
  v32[3] = &unk_1E8EA1860;
  v32[4] = v33;
  objc_msgSend(v6, "objectsPassingTest:", v32);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "count"))
  {
    +[SBDefaults localDefaults](SBDefaults, "localDefaults");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "miscellaneousDefaults");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "dataPlanActivationPromptCount");

    CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA75D8]);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    if (v11)
    {
      objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v11);
      v27 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v27 = 0;
    }
    CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA75F0]);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "BOOLValue");
    if (v10 == 2)
      v14 = 0;
    else
      v14 = v10 + 1;
    v26 = v14;
    v15 = -[SBDataPlanActivationAlertItem initWithAccountURL:newAccount:promptToDisable:]([SBDataPlanActivationAlertItem alloc], "initWithAccountURL:newAccount:promptToDisable:", v27, v13, v10 == 2);
    +[SBAlertItemsController sharedInstance](SBAlertItemsController, "sharedInstance");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "activateAlertItem:", v15);

    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    v17 = v7;
    v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v28, v35, 16);
    if (v18)
    {
      v19 = *(_QWORD *)v29;
      do
      {
        for (i = 0; i != v18; ++i)
        {
          if (*(_QWORD *)v29 != v19)
            objc_enumerationMutation(v17);
          objc_msgSend(*(id *)(*((_QWORD *)&v28 + 1) + 8 * i), "application", v26);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "setHasShownDataPlanAlertSinceLock:", 1);

        }
        v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v28, v35, 16);
      }
      while (v18);
    }

    +[SBDefaults localDefaults](SBDefaults, "localDefaults");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "miscellaneousDefaults");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "setDataPlanActivationPromptCount:", v26);

  }
  _Block_object_dispose(v33, 8);

}

void sub_1D06CED84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _DataPlanStatusHandler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const __CFDictionary *a5)
{
  void *v6;
  void *v7;
  const void *Value;
  const void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  SBDataPlanCompletionAlertItem *v16;
  SBDataPlanExpirationAlertItem *v17;
  const char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  void *v23;
  void *v24;
  NSObject *v25;
  void *v26;
  uint64_t v27;
  void *v28;
  NSObject *v29;
  void *v30;
  double v31;
  float v32;
  void *v33;
  double v34;
  float v35;
  float v36;
  SBDataPlanUsageAlertItem *v37;
  double v38;
  NSObject *v39;
  void *v40;
  void *v41;
  _BYTE cf[12];
  __int16 v43;
  void *v44;
  __int16 v45;
  uint64_t v46;
  __int16 v47;
  uint64_t v48;
  __int16 v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  uint64_t v53;

  v53 = *MEMORY[0x1E0C80C00];
  if ((objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread") & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _DataPlanStatusHandler(CFNotificationCenterRef, void *, CFStringRef, const void *, CFDictionaryRef)");
    v41 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "handleFailureInFunction:file:lineNumber:description:", v41, CFSTR("SBTelephonyManager.m"), 1573, CFSTR("this call must be made on the main thread"));

  }
  CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA75D8]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }
  Value = CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA72F8]);
  if (!Value)
  {
    SBLogStatusBarish();
    v17 = (SBDataPlanExpirationAlertItem *)objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(&v17->super.super.super.super, OS_LOG_TYPE_DEFAULT))
    {
LABEL_40:

      goto LABEL_41;
    }
    *(_DWORD *)cf = 138543362;
    *(_QWORD *)&cf[4] = 0;
    v18 = "Ignoring unsuccessful data plan status (statusType='%{public}@')";
LABEL_17:
    _os_log_impl(&dword_1D0540000, &v17->super.super.super.super, OS_LOG_TYPE_DEFAULT, v18, cf, 0xCu);
    goto LABEL_40;
  }
  v9 = Value;
  if (CFEqual(Value, (CFTypeRef)*MEMORY[0x1E0CA72D0]))
  {
    *(_QWORD *)cf = 0;
    +[SBTelephonyManager sharedTelephonyManager](SBTelephonyManager, "sharedTelephonyManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_primaryCarrierBundleInfo");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "carrierName");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (v12)
    {
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {

        v12 = 0;
      }
    }
    CTTelephonyCenterGetDefault();
    if (_CTServerConnectionCopyOperatorName())
    {

      v12 = 0;
    }
    CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA75F0]);
    v13 = objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend((id)v13, "BOOLValue");
    CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA72D8]);
    v15 = objc_claimAutoreleasedReturnValue();
    if (objc_msgSend((id)v15, "BOOLValue"))
      v16 = -[SBDataPlanCompletionAlertItem initWithCarrierName:newAccount:]([SBDataPlanCompletionAlertItem alloc], "initWithCarrierName:newAccount:", v12, v14);
    else
      v16 = -[SBDataPlanFailureAlertItem initWithAccountURL:carrierName:newAccount:]([SBDataPlanFailureAlertItem alloc], "initWithAccountURL:carrierName:newAccount:", v7, v12, v14);
    v17 = (SBDataPlanExpirationAlertItem *)v16;
    goto LABEL_38;
  }
  if (!CFEqual(v9, (CFTypeRef)*MEMORY[0x1E0CA7318]))
  {
    SBLogStatusBarish();
    v17 = (SBDataPlanExpirationAlertItem *)objc_claimAutoreleasedReturnValue();
    if (!os_log_type_enabled(&v17->super.super.super.super, OS_LOG_TYPE_DEFAULT))
      goto LABEL_40;
    *(_DWORD *)cf = 138543362;
    *(_QWORD *)&cf[4] = v9;
    v18 = "Unknown data plan status type '%{public}@'";
    goto LABEL_17;
  }
  v19 = *MEMORY[0x1E0CA7310];
  CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA7310]);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = *MEMORY[0x1E0CA72E8];
  CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA72E8]);
  v13 = objc_claimAutoreleasedReturnValue();
  v21 = *MEMORY[0x1E0CA7308];
  CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA7308]);
  v15 = objc_claimAutoreleasedReturnValue();
  if (!v12 || (objc_msgSend(v12, "doubleValue"), v22 == 0.0))
  {
    CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA72E0]);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    v24 = v23;
    if (v23 && (objc_msgSend(v23, "BOOLValue") & 1) != 0)
    {
      SBLogStatusBarish();
      v25 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v25, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)cf = 0;
        _os_log_impl(&dword_1D0540000, v25, OS_LOG_TYPE_DEFAULT, "Ignoring data plan expiration notification because autorenew is enabled", cf, 2u);
      }
    }
    else
    {
      CFDictionaryGetValue(a5, (const void *)*MEMORY[0x1E0CA7300]);
      v25 = objc_claimAutoreleasedReturnValue();
      if (v25)
      {
        objc_msgSend(MEMORY[0x1E0C99D68], "date");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v27 = -[NSObject compare:](v25, "compare:", v26);

        if (v27 == 1)
        {
          +[SBAlertItemsController sharedInstance](SBAlertItemsController, "sharedInstance");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v28, "deactivateAlertItemsOfClass:", objc_opt_class());

          v17 = -[SBDataPlanExpirationAlertItem initWithAccountURL:expirationDate:]([SBDataPlanExpirationAlertItem alloc], "initWithAccountURL:expirationDate:", v7, v25);
LABEL_36:

LABEL_37:
          goto LABEL_38;
        }
      }
      SBLogStatusBarish();
      v29 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)cf = 0;
        _os_log_impl(&dword_1D0540000, v29, OS_LOG_TYPE_DEFAULT, "Data plan expiration did not include expiration date", cf, 2u);
      }

    }
    v17 = 0;
    goto LABEL_36;
  }
  if (v13 | v15)
  {
    objc_msgSend(v12, "doubleValue");
    v32 = v31;
    if (v13)
      v33 = (void *)v13;
    else
      v33 = (void *)v15;
    objc_msgSend(v33, "doubleValue");
    v35 = 1.0;
    if (v32 > 0.0)
    {
      v36 = v34;
      if (v36 > 0.0)
        v35 = (float)(v36 - v32) / v36;
    }
    v37 = [SBDataPlanUsageAlertItem alloc];
    *(float *)&v38 = v35;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithFloat:", v38);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = -[SBDataPlanUsageAlertItem initWithAccountURL:usage:](v37, "initWithAccountURL:usage:", v7, v24);
    goto LABEL_37;
  }
  SBLogStatusBarish();
  v39 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v39, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)cf = 138544642;
    *(_QWORD *)&cf[4] = v19;
    v43 = 2114;
    v44 = v12;
    v45 = 2114;
    v46 = v20;
    v47 = 2114;
    v48 = 0;
    v49 = 2114;
    v50 = v21;
    v51 = 2114;
    v52 = 0;
    _os_log_impl(&dword_1D0540000, v39, OS_LOG_TYPE_DEFAULT, "Unsupported combination of usage values (%{public}@=%{public}@, %{public}@=%{public}@, %{public}@=%{public}@)", cf, 0x3Eu);
  }

  v17 = 0;
LABEL_38:

  if (v17)
  {
    +[SBAlertItemsController sharedInstance](SBAlertItemsController, "sharedInstance");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "activateAlertItem:", v17);

    goto LABEL_40;
  }
LABEL_41:

}

void _SBTelephonyDaemonRestartHandler()
{
  id v0;

  +[SBTelephonyManager sharedTelephonyManager](SBTelephonyManager, "sharedTelephonyManager");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_handleTelephonyDaemonRestart");

}

void _WirelessModemDynamicStoreCallBack()
{
  id v0;

  +[SBTelephonyManager sharedTelephonyManager](SBTelephonyManager, "sharedTelephonyManager");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_queue_noteWirelessModemDynamicStoreChanged");

}

uint64_t SBCallStateInCall()
{
  void *v0;
  unsigned int v1;
  uint64_t v2;

  +[SBConferenceManager sharedInstance](SBConferenceManager, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "inFaceTime");
  if (sInTelephonyCall)
    v2 = 1;
  else
    v2 = v1;

  return v2;
}

void SBUpdateCallState()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v0 = *MEMORY[0x1E0DAC2B0];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", SBCallStateInCall());
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "postNotificationName:object:userInfo:", v0, v1, 0);

}

void sub_1D06D0660(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void _updateLocale(void *a1, void *a2, void *a3, void *a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD v22[4];
  id v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD v26[4];
  _QWORD v27[5];

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = a4;
  v27[0] = 0;
  v27[1] = v27;
  v27[2] = 0x2810000000;
  v27[3] = &unk_1D0FA064E;
  v27[4] = 0;
  v26[0] = 0;
  v26[1] = v26;
  v26[2] = 0x2020000000;
  v11 = MEMORY[0x1E0C809B0];
  v26[3] = 0;
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = ___updateLocale_block_invoke;
  v22[3] = &unk_1E8EA1810;
  v24 = v27;
  v12 = v8;
  v23 = v12;
  v25 = v26;
  v16[0] = v11;
  v16[1] = 3221225472;
  v16[2] = ___updateLocale_block_invoke_2;
  v16[3] = &unk_1E8EA1838;
  v20 = v27;
  v21 = v26;
  v13 = v9;
  v18 = v13;
  v14 = v7;
  v17 = v14;
  v15 = v10;
  v19 = v15;
  objc_msgSend(v14, "_performQueryInBackground:withMainQueueResultHandler:", v22, v16);

  _Block_object_dispose(v26, 8);
  _Block_object_dispose(v27, 8);

}

void sub_1D06D0800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  uint64_t v26;

  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 136), 8);
  _Unwind_Resume(a1);
}

id SBTMCachedBooleanDebugName(uint64_t a1)
{
  if ((a1 + 2) < 4)
    return *((id *)&off_1E8EA1880 + (int)a1 + 2);
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%i)"), a1);
  return (id)objc_claimAutoreleasedReturnValue();
}

Class __getRTTSettingsClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  if (!RTTUtilitiesLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_1E8EA17F0;
    v5 = 0;
    RTTUtilitiesLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!RTTUtilitiesLibraryCore_frameworkLibrary)
    __getRTTSettingsClass_block_invoke_cold_1(&v3);
  result = objc_getClass("RTTSettings");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getRTTSettingsClass_block_invoke_cold_2();
  getRTTSettingsClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t ___updateLocale_block_invoke(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  if (a2)
  {
    v2 = result;
    result = (*(uint64_t (**)(void))(*(_QWORD *)(result + 32) + 16))();
    *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 40) + 8) + 32) = result;
  }
  return result;
}

uint64_t ___updateLocale_block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1 + 56;
  if (*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 36))
  {
    SBLogCommon();
    v3 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
      ___updateLocale_block_invoke_2_cold_1(v2, v3, v4);

  }
  else if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    CFRelease(*(CFTypeRef *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 24));
  }
  else if ((objc_msgSend(*(id *)(a1 + 32), "hasCellularData") & 1) == 0)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  }
  result = *(_QWORD *)(a1 + 48);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

void sub_1D06D4A68(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1D06D5264(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D06D5824(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D06D6F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, void *a17, uint64_t a18, void *a19, void *a20)
{
  void *v20;
  void *v21;
  void *v22;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::vector<BezierCurve>>::reserve(_QWORD *a1, unint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[5];

  v4 = a1[2];
  result = (uint64_t)(a1 + 2);
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a1) >> 3) < a2)
  {
    if (a2 >= 0xAAAAAAAAAAAAAABLL)
      abort();
    v5 = a1[1] - *a1;
    v7[4] = result;
    v7[0] = std::__allocate_at_least[abi:nn180100]<std::allocator<std::vector<BezierCurve>>>(result, a2);
    v7[1] = v7[0] + v5;
    v7[2] = v7[0] + v5;
    v7[3] = v7[0] + 24 * v6;
    std::vector<std::vector<BezierCurve>>::__swap_out_circular_buffer(a1, v7);
    return std::__split_buffer<std::vector<BezierCurve>>::~__split_buffer((uint64_t)v7);
  }
  return result;
}

void sub_1D06D7120(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::vector<BezierCurve>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

void std::vector<BezierCurve>::reserve(void **a1, unint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  int64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  v4 = a1[2];
  v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (_BYTE *)*a1) >> 6)
  {
    if (a2 >> 58)
      abort();
    v5 = (_BYTE *)a1[1] - (_BYTE *)*a1;
    v6 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<BezierCurve>>(v3, a2);
    v7 = &v6[v5 & 0xFFFFFFFFFFFFFFC0];
    v9 = &v6[64 * v8];
    v11 = (char *)*a1;
    v10 = (char *)a1[1];
    v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        v13 = *((_OWORD *)v10 - 4);
        v14 = *((_OWORD *)v10 - 3);
        v15 = *((_OWORD *)v10 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v10 - 2);
        *((_OWORD *)v12 - 1) = v15;
        *((_OWORD *)v12 - 4) = v13;
        *((_OWORD *)v12 - 3) = v14;
        v12 -= 64;
        v10 -= 64;
      }
      while (v10 != v11);
      v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
      operator delete(v10);
  }
}

float32x4_t *_ZNSt3__16vectorI11BezierCurveNS_9allocatorIS1_EEE12emplace_backIJRU8__strongKP12NSDictionaryRDv4_fEEERS1_DpOT_(float32x4_t **a1, void **a2, float32x4_t *a3)
{
  uint64_t v6;
  float32x4_t *v7;
  float32x4_t *v8;
  float32x4_t *v9;
  float32x4_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  float32x4_t *v15;
  uint64_t v16;
  uint64_t v17;
  float32x4_t *v18;
  float32x4_t *v19;
  float32x4_t *v20;
  float32x4_t v21;
  float32x4_t v22;
  float32x4_t v23;

  v8 = a1[2];
  v6 = (uint64_t)(a1 + 2);
  v7 = v8;
  v9 = *(float32x4_t **)(v6 - 8);
  if (v9 >= v8)
  {
    v11 = ((char *)v9 - (char *)*a1) >> 6;
    if ((unint64_t)(v11 + 1) >> 58)
      abort();
    v12 = (char *)v7 - (char *)*a1;
    v13 = v12 >> 5;
    if (v12 >> 5 <= (unint64_t)(v11 + 1))
      v13 = v11 + 1;
    if ((unint64_t)v12 >= 0x7FFFFFFFFFFFFFC0)
      v14 = 0x3FFFFFFFFFFFFFFLL;
    else
      v14 = v13;
    if (v14)
    {
      v15 = (float32x4_t *)std::__allocate_at_least[abi:nn180100]<std::allocator<BezierCurve>>(v6, v14);
      v17 = v16;
    }
    else
    {
      v15 = 0;
      v17 = 0;
    }
    v18 = BezierCurve::BezierCurve(&v15[4 * v11], *a2, *a3);
    v10 = v18 + 4;
    v20 = *a1;
    v19 = a1[1];
    if (v19 != *a1)
    {
      do
      {
        v21 = v19[-4];
        v22 = v19[-3];
        v23 = v19[-1];
        v18[-2] = v19[-2];
        v18[-1] = v23;
        v18[-4] = v21;
        v18[-3] = v22;
        v18 -= 4;
        v19 -= 4;
      }
      while (v19 != v20);
      v19 = *a1;
    }
    *a1 = v18;
    a1[1] = v10;
    a1[2] = &v15[4 * v17];
    if (v19)
      operator delete(v19);
  }
  else
  {
    BezierCurve::BezierCurve(*(float32x4_t **)(v6 - 8), *a2, *a3);
    v10 = v9 + 4;
    a1[1] = v9 + 4;
  }
  a1[1] = v10;
  return v10 - 4;
}

void sub_1D06D72F0(_Unwind_Exception *exception_object)
{
  void *v1;

  if (v1)
    operator delete(v1);
  _Unwind_Resume(exception_object);
}

void sub_1D06D7AEC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char *__p,uint64_t a25,uint64_t a26,char a27)
{
  __p = &a27;
  std::vector<std::vector<PathPoint>>::__destroy_vector::operator()[abi:nn180100]((void ***)&__p);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<std::vector<PathPoint>>::emplace_back<std::vector<PathPoint>>(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _QWORD v17[5];

  v6 = a1[2];
  v4 = (uint64_t)(a1 + 2);
  v5 = v6;
  v7 = *(_QWORD **)(v4 - 8);
  if ((unint64_t)v7 >= v6)
  {
    v9 = 0xAAAAAAAAAAAAAAABLL * (((uint64_t)v7 - *a1) >> 3);
    v10 = v9 + 1;
    if (v9 + 1 > 0xAAAAAAAAAAAAAAALL)
      abort();
    v11 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v5 - *a1) >> 3);
    if (2 * v11 > v10)
      v10 = 2 * v11;
    if (v11 >= 0x555555555555555)
      v12 = 0xAAAAAAAAAAAAAAALL;
    else
      v12 = v10;
    v17[4] = v4;
    v13 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<std::vector<BezierCurve>>>(v4, v12);
    v14 = &v13[24 * v9];
    v17[0] = v13;
    v17[1] = v14;
    v17[3] = &v13[24 * v15];
    *((_QWORD *)v14 + 1) = 0;
    *((_QWORD *)v14 + 2) = 0;
    *(_QWORD *)v14 = 0;
    *(_OWORD *)v14 = *(_OWORD *)a2;
    *((_QWORD *)v14 + 2) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    v17[2] = v14 + 24;
    std::vector<std::vector<BezierCurve>>::__swap_out_circular_buffer(a1, v17);
    v8 = (_QWORD *)a1[1];
    std::__split_buffer<std::vector<BezierCurve>>::~__split_buffer((uint64_t)v17);
  }
  else
  {
    *v7 = 0;
    v7[1] = 0;
    v7[2] = 0;
    *(_OWORD *)v7 = *(_OWORD *)a2;
    v7[2] = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
    *(_QWORD *)(a2 + 16) = 0;
    v8 = v7 + 3;
    a1[1] = v7 + 3;
  }
  a1[1] = v8;
  return v8 - 3;
}

void sub_1D06D7C68(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::vector<BezierCurve>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<std::vector<BezierCurve>>::__swap_out_circular_buffer(_QWORD *result, _QWORD *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (_QWORD *)*result;
  v2 = (_QWORD *)result[1];
  v4 = a2[1];
  while (v2 != v3)
  {
    *(_QWORD *)(v4 - 24) = 0;
    *(_QWORD *)(v4 - 16) = 0;
    v4 -= 24;
    *(_QWORD *)(v4 + 16) = 0;
    v5 = *(_OWORD *)(v2 - 3);
    v2 -= 3;
    *(_OWORD *)v4 = v5;
    *(_QWORD *)(v4 + 16) = v2[2];
    *v2 = 0;
    v2[1] = 0;
    v2[2] = 0;
  }
  a2[1] = v4;
  v6 = (_QWORD *)*result;
  *result = v4;
  a2[1] = v6;
  v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<std::vector<BezierCurve>>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:nn180100]();
  return operator new(24 * a2);
}

void std::__throw_bad_array_new_length[abi:nn180100]()
{
  abort();
}

uint64_t std::__split_buffer<std::vector<BezierCurve>>::~__split_buffer(uint64_t a1)
{
  std::__split_buffer<std::vector<BezierCurve>>::__destruct_at_end[abi:nn180100](a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)a1)
    operator delete(*(void **)a1);
  return a1;
}

void std::__split_buffer<std::vector<BezierCurve>>::__destruct_at_end[abi:nn180100](uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v5;

  v2 = *(_QWORD *)(a1 + 16);
  while (v2 != a2)
  {
    v5 = *(void **)(v2 - 24);
    *(_QWORD *)(a1 + 16) = v2 - 24;
    if (v5)
    {
      *(_QWORD *)(v2 - 16) = v5;
      operator delete(v5);
      v2 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v2 -= 24;
    }
  }
}

void *std::__allocate_at_least[abi:nn180100]<std::allocator<BezierCurve>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 58)
    std::__throw_bad_array_new_length[abi:nn180100]();
  return operator new(a2 << 6);
}

float32x4_t *BezierCurve::BezierCurve(float32x4_t *a1, void *a2, float32x4_t a3)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  unsigned int v8;
  void *v9;
  unsigned int v10;
  void *v11;
  unsigned int v12;
  void *v13;
  float32x4_t v14;
  unsigned int v15;
  id v16;
  void *v17;
  void *v18;
  unsigned int v19;
  void *v20;
  unsigned int v21;
  void *v22;
  unsigned int v23;
  void *v24;
  float32x4_t v25;
  unsigned int v26;
  id v27;
  void *v28;
  void *v29;
  unsigned int v30;
  void *v31;
  unsigned int v32;
  void *v33;
  unsigned int v34;
  void *v35;
  float32x4_t v36;
  unsigned int v37;
  id v38;
  void *v39;
  void *v40;
  unsigned int v41;
  void *v42;
  unsigned int v43;
  void *v44;
  unsigned int v45;
  void *v46;
  float32x4_t v47;
  unsigned int v48;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  float32x4_t v58;
  unsigned int v59;
  float32x4_t v60;
  unsigned int v61;
  float32x4_t v62;
  unsigned int v63;
  float32x4_t v64;
  unsigned int v65;

  v4 = a2;
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("p0"));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  v58 = 0u;
  if (v5 && objc_msgSend(v5, "count") == 4)
  {
    objc_msgSend(v6, "objectAtIndexedSubscript:", 0);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "floatValue");
    v59 = v8;
    objc_msgSend(v6, "objectAtIndexedSubscript:", 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "floatValue");
    v54 = v10;
    objc_msgSend(v6, "objectAtIndexedSubscript:", 2);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "floatValue");
    v50 = v12;
    objc_msgSend(v6, "objectAtIndexedSubscript:", 3);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "floatValue");
    v14.i64[0] = __PAIR64__(v54, v59);
    v14.i64[1] = __PAIR64__(v15, v50);
    v58 = v14;

  }
  *a1 = vmulq_f32(v58, a3);
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("p1"));
  v16 = (id)objc_claimAutoreleasedReturnValue();
  v17 = v16;
  v60 = 0u;
  if (v16 && objc_msgSend(v16, "count") == 4)
  {
    objc_msgSend(v17, "objectAtIndexedSubscript:", 0);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "floatValue");
    v61 = v19;
    objc_msgSend(v17, "objectAtIndexedSubscript:", 1);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "floatValue");
    v55 = v21;
    objc_msgSend(v17, "objectAtIndexedSubscript:", 2);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "floatValue");
    v51 = v23;
    objc_msgSend(v17, "objectAtIndexedSubscript:", 3);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "floatValue");
    v25.i64[0] = __PAIR64__(v55, v61);
    v25.i64[1] = __PAIR64__(v26, v51);
    v60 = v25;

  }
  a1[1] = vmulq_f32(v60, a3);
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("p2"));
  v27 = (id)objc_claimAutoreleasedReturnValue();
  v28 = v27;
  v62 = 0u;
  if (v27 && objc_msgSend(v27, "count") == 4)
  {
    objc_msgSend(v28, "objectAtIndexedSubscript:", 0);
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "floatValue");
    v63 = v30;
    objc_msgSend(v28, "objectAtIndexedSubscript:", 1);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "floatValue");
    v56 = v32;
    objc_msgSend(v28, "objectAtIndexedSubscript:", 2);
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "floatValue");
    v52 = v34;
    objc_msgSend(v28, "objectAtIndexedSubscript:", 3);
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "floatValue");
    v36.i64[0] = __PAIR64__(v56, v63);
    v36.i64[1] = __PAIR64__(v37, v52);
    v62 = v36;

  }
  a1[2] = vmulq_f32(v62, a3);
  objc_msgSend(v4, "objectForKeyedSubscript:", CFSTR("p3"));
  v38 = (id)objc_claimAutoreleasedReturnValue();
  v39 = v38;
  v64 = 0u;
  if (v38 && objc_msgSend(v38, "count") == 4)
  {
    objc_msgSend(v39, "objectAtIndexedSubscript:", 0);
    v40 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v40, "floatValue");
    v65 = v41;
    objc_msgSend(v39, "objectAtIndexedSubscript:", 1);
    v42 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v42, "floatValue");
    v57 = v43;
    objc_msgSend(v39, "objectAtIndexedSubscript:", 2);
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v44, "floatValue");
    v53 = v45;
    objc_msgSend(v39, "objectAtIndexedSubscript:", 3);
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v46, "floatValue");
    v47.i64[0] = __PAIR64__(v57, v65);
    v47.i64[1] = __PAIR64__(v48, v53);
    v64 = v47;

  }
  a1[3] = vmulq_f32(v64, a3);

  return a1;
}

void sub_1D06D821C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  _Unwind_Resume(a1);
}

uint64_t std::vector<std::vector<BezierCurve>>::__emplace_back_slow_path<std::vector<BezierCurve>&>(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char *v11;
  uint64_t v12;
  char *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  uint64_t v18;

  v2 = *a1;
  v3 = 0xAAAAAAAAAAAAAAABLL * ((a1[1] - *a1) >> 3);
  v4 = v3 + 1;
  if (v3 + 1 > 0xAAAAAAAAAAAAAAALL)
    abort();
  v8 = a1[2];
  v7 = (uint64_t)(a1 + 2);
  v9 = 0xAAAAAAAAAAAAAAABLL * ((v8 - v2) >> 3);
  if (2 * v9 > v4)
    v4 = 2 * v9;
  if (v9 >= 0x555555555555555)
    v10 = 0xAAAAAAAAAAAAAAALL;
  else
    v10 = v4;
  v18 = v7;
  if (v10)
    v11 = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<std::vector<BezierCurve>>>(v7, v10);
  else
    v11 = 0;
  v14 = v11;
  v15 = &v11[24 * v3];
  v17 = &v11[24 * v10];
  std::vector<BezierCurve>::vector(v15, a2);
  v16 = v15 + 24;
  std::vector<std::vector<BezierCurve>>::__swap_out_circular_buffer(a1, &v14);
  v12 = a1[1];
  std::__split_buffer<std::vector<BezierCurve>>::~__split_buffer((uint64_t)&v14);
  return v12;
}

void sub_1D06D8390(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_list va;

  va_start(va, a2);
  std::__split_buffer<std::vector<BezierCurve>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<BezierCurve>::vector(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  const void *v4;
  int64_t v5;
  char *v6;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  v4 = *(const void **)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v5 = v3 - *(_QWORD *)a2;
  if (v3 != *(_QWORD *)a2)
  {
    std::vector<BezierCurve>::__vallocate[abi:nn180100](a1, v5 >> 6);
    v6 = (char *)a1[1];
    memmove(v6, v4, v5);
    a1[1] = &v6[v5];
  }
  return a1;
}

char *std::vector<BezierCurve>::__vallocate[abi:nn180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 58)
    abort();
  result = (char *)std::__allocate_at_least[abi:nn180100]<std::allocator<BezierCurve>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[64 * v4];
  return result;
}

void std::vector<std::vector<PathPoint>>::__destroy_vector::operator()[abi:nn180100](void ***a1)
{
  void **v2;

  v2 = *a1;
  if (*v2)
  {
    std::vector<std::vector<PathPoint>>::__clear[abi:nn180100]((uint64_t *)v2);
    operator delete(**a1);
  }
}

void std::vector<std::vector<PathPoint>>::__clear[abi:nn180100](uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v3 = *a1;
  v2 = a1[1];
  if (v2 != *a1)
  {
    v4 = a1[1];
    do
    {
      v6 = *(void **)(v4 - 24);
      v4 -= 24;
      v5 = v6;
      if (v6)
      {
        *(_QWORD *)(v2 - 16) = v5;
        operator delete(v5);
      }
      v2 = v4;
    }
    while (v4 != v3);
  }
  a1[1] = v3;
}

id SBGuidedAccessPrepare()
{
  return +[SBGuidedAccessListener sharedGuidedAccessListener](SBGuidedAccessListener, "sharedGuidedAccessListener");
}

uint64_t SBGuidedAccessIsActive()
{
  void *v0;
  uint64_t v1;

  +[SBGuidedAccessListener sharedGuidedAccessListener](SBGuidedAccessListener, "sharedGuidedAccessListener");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isGuidedAccessActive");

  return v1;
}

void sub_1D06DB0B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06DED58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSBVolumeMode(unint64_t a1)
{
  NSObject *v2;
  _BOOL4 v3;

  if (a1 < 5)
    return off_1E8EA1C00[a1];
  SBLogCommon();
  v2 = objc_claimAutoreleasedReturnValue();
  v3 = os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG);

  if (v3)
    NSLog(CFSTR("Unhandled SBVolumeMode should be examined and accounted for. Please file a radar to SpringBoard | HUD."));
  return CFSTR("UNKNOWN SBVolumeMode");
}

void sub_1D06E1770(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06E443C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  id *v11;
  uint64_t v12;

  objc_destroyWeak(v11);
  objc_destroyWeak((id *)(v12 - 112));
  _Unwind_Resume(a1);
}

void SBHandleTetherDemoPrefsNeedUpdateNotification()
{
  void *v0;
  void *v1;
  void *v2;
  double v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "powerDefaults");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setDisableIdleSleep:", MGGetBoolAnswer() ^ 1);

  objc_msgSend(v8, "powerDefaults");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setHideACPower:", 1);

  objc_msgSend(v8, "miscellaneousDefaults");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  LODWORD(v3) = *(_DWORD *)"fff?";
  objc_msgSend(v2, "setBacklightLevel:", v3);

  objc_msgSend(v8, "soundDefaults");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setCalendarAlarmPath:", &stru_1E8EC7EC0);

  +[SBDefaults externalDefaults](SBDefaults, "externalDefaults");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "soundDefaults");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setKeyboardPlaysSounds:", 0);

  objc_msgSend(v5, "phoneDefaults");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setHideMyPhoneNumber:", 1);

}

void SBHandleTetherDemoModeStateChangedNotification()
{
  uint64_t IsTethered;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;

  IsTethered = BKSDisplayServicesDisplayIsTethered();
  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "powerDefaults");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "miscellaneousDefaults");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  +[SBDefaults localDefaults](SBDefaults, "localDefaults");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "systemApertureDefaults");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "setHideACPower:", IsTethered);
  objc_msgSend(v1, "setDisableIdleSleep:", IsTethered);
  objc_msgSend(v1, "synchronizeDefaults");
  objc_msgSend(v3, "setSuppressAlertsForKeynote:", IsTethered);
  objc_msgSend(v3, "synchronizeDefaults");
  objc_msgSend(v5, "setAlwaysShowSystemApertureOnClonedDisplays:", IsTethered);
  objc_msgSend(v5, "synchronizeDefaults");

}

void SBValidateTimeZone()
{
  NSObject *v0;

  SBTimeZoneQueue();
  v0 = objc_claimAutoreleasedReturnValue();
  dispatch_async(v0, &__block_literal_global_905);

}

void SBPreferencesChanged()
{
  uint64_t v0;
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  v0 = *MEMORY[0x1E0CB3420];
  objc_msgSend(MEMORY[0x1E0C99EA0], "standardUserDefaults");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "postNotificationName:object:", v0, v1);

}

uint64_t HWKeyboardAvailabilityChanged(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_keyboardAvailabilityChanged");
}

void SBRecordBootToNowTime(int a1)
{
  void *v2;
  void *v3;
  NSObject *v4;
  float v5;
  NSObject *v6;
  double v7;
  void *v8;
  uint8_t buf[4];
  double v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", CFAbsoluteTimeGetCurrent() + *MEMORY[0x1E0C9ADF8]);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", CACurrentMediaTime());
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (a1)
  {
    SBLogCommon();
    v4 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v3, "floatValue");
      *(_DWORD *)buf = 134217984;
      v10 = v5;
      _os_log_impl(&dword_1D0540000, v4, OS_LOG_TYPE_DEFAULT, "bootToNowTime: %f seconds", buf, 0xCu);
    }

    SBLogCommon();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      objc_msgSend(v2, "doubleValue");
      *(_DWORD *)buf = 134217984;
      v10 = v7;
      _os_log_impl(&dword_1D0540000, v6, OS_LOG_TYPE_DEFAULT, "timeWhenFinishedBooting: %f", buf, 0xCu);
    }

    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjectsAndKeys:", v3, CFSTR("bootToNowTimeInSeconds"), v2, CFSTR("timeWhenFinishedBooting"), 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "writeToFile:atomically:", CFSTR("/tmp/bootToNowTime.plist"), 1);

  }
  objc_msgSend(v3, "floatValue");
  ADClientPushValueForDistributionKey();

}

void SPDNotificationCallback(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  NSObject *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "applicationWithPid:", a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    objc_msgSend(v4, "info");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "supportsLegacyVOIPBackgroundMode");

    if (v6)
    {
      objc_msgSend(v4, "legacyVOIPPeriodicWakeScheduler");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "wakeImmediately");

    }
  }
  else
  {
    SBLogCommon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      SPDNotificationCallback_cold_1(a2, v8, v9, v10, v11, v12, v13, v14);

  }
}

void SPDNotificationErrorCallback(uint64_t a1, uint64_t a2)
{
  NSObject *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  SBLogCommon();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
    SPDNotificationErrorCallback_cold_1(a2, v3, v4, v5, v6, v7, v8, v9);

}

void sub_1D06EDA4C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D06EE024(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06EE2F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBTimeZoneQueue()
{
  if (SBTimeZoneQueue_once != -1)
    dispatch_once(&SBTimeZoneQueue_once, &__block_literal_global_896);
  return (id)SBTimeZoneQueue___sbTimezoneQueue;
}

void _timezoneQueue_setTimeZone(uint64_t a1)
{
  NSObject *v2;
  void *v3;
  int v4;
  void *v5;

  SBTimeZoneQueue();
  v2 = objc_claimAutoreleasedReturnValue();
  dispatch_assert_queue_V2(v2);

  v3 = (void *)MEMORY[0x1D17E29AC](a1);
  if (v3)
  {
    objc_msgSend(objc_retainAutorelease(v3), "UTF8String");
    v4 = tzlink();
    if (v4)
    {
      warnc(v4, "tzlink");
    }
    else
    {
      if (SBApp)
        v5 = &__block_literal_global_898;
      else
        v5 = &__block_literal_global_901;
      dispatch_async(MEMORY[0x1E0C80D38], v5);
    }
  }
}

uint64_t ___timezoneQueue_setTimeZone_block_invoke()
{
  return objc_msgSend((id)SBApp, "_postSpringBoardSignificantTimeChangedNotificationWithLogMessage:", CFSTR("Time Zone Changed"));
}

void ___timezoneQueue_setTimeZone_block_invoke_2()
{
  __CFNotificationCenter *DarwinNotifyCenter;

  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();
  CFNotificationCenterPostNotification(DarwinNotifyCenter, CFSTR("SignificantTimeChangeNotification"), 0, 0, 1u);
}

uint64_t SBMediaEventSourceFromBKSHIDEventSource(unsigned int a1)
{
  if (a1 > 9)
    return 0;
  else
    return qword_1D0E886A8[a1];
}

void SBApplyDeferringEnvironmentToKeyCommands(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0DAAED8], "systemKeyCommandOverlayEnvironment");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v14;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(v3);
        v8 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * v7);
        v9 = objc_opt_class();
        v10 = v8;
        if (v9)
        {
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v11 = v10;
          else
            v11 = 0;
        }
        else
        {
          v11 = 0;
        }
        v12 = v11;

        objc_msgSend(v12, "_setEventDeferringEnvironment:", v2, (_QWORD)v13);
        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v5);
  }

}

void sub_1D06F3320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D06FA80C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FBA64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D06FBD64(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D06FC248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id obj, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  _Block_object_dispose(&a36, 8);
  objc_sync_exit(obj);
  _Unwind_Resume(a1);
}

void IAPRequestExtendedMode()
{
  int v0;
  int v1;
  uint32_t v2;
  void *v3;
  uint64_t v4;
  int check;

  v0 = __extendedModeActive;
  if (__extendedModeNotifyTokenIsValid
    || (v2 = notify_register_check("com.apple.iapd.notify.extendedMode", &__extendedModeNotifyToken),
        __extendedModeNotifyTokenIsValid = v2 == 0,
        !v2))
  {
    check = 0;
    notify_check(__extendedModeNotifyToken, &check);
    if (check)
    {
      v4 = 0;
      notify_get_state(__extendedModeNotifyToken, &v4);
      v1 = v4 == 1;
      __extendedModeActive = v4 == 1;
    }
    else
    {
      v1 = __extendedModeActive;
    }
  }
  else
  {
    v1 = 0;
    __extendedModeActive = 0;
  }
  if (v0 != v1)
  {
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "postNotificationName:object:", CFSTR("SBIAPExtendedModeChangedNotification"), 0);

  }
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return IOHIDEventGetIntegerValue();
}

void OUTLINED_FUNCTION_17_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  NSObject *v9;

  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x14u);
}

uint64_t OUTLINED_FUNCTION_19()
{
  return IOHIDEventGetIntegerValue();
}

uint64_t OUTLINED_FUNCTION_21()
{
  return IOHIDEventGetIntegerValue();
}

void sub_1D06FE03C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FE21C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FE344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FE484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FE5AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FE800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FE97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FEAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FEBB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FECD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D06FEE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

_SBSystemApertureMagiciansCurtainView *SBCreateSystemApertureMagiciansView()
{
  _SBSystemApertureMagiciansCurtainView *v0;
  void *v1;
  void *v2;
  void *v3;
  _QWORD v5[3];
  _QWORD v6[2];

  v6[1] = *MEMORY[0x1E0C80C00];
  v0 = objc_alloc_init(_SBSystemApertureMagiciansCurtainView);
  SBSystemApertureContainerRenderingConfigurationMake(1, 0, 0, v5);
  -[_SBSystemApertureGainMapView setRenderingConfiguration:](v0, "setRenderingConfiguration:", v5);
  objc_msgSend(MEMORY[0x1E0CD2780], "filterWithType:", *MEMORY[0x1E0CD2BE8]);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setValue:forKey:", MEMORY[0x1E0C9AAB0], CFSTR("inputReversed"));
  -[_SBSystemApertureMagiciansCurtainView layer](v0, "layer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v6[0] = v1;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v6, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setFilters:", v3);

  return v0;
}

BOOL SBScreenIsBlanked()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x1E0D00F58], "sharedBacklight");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "backlightState");

  return v1 == 0;
}

const __CFString *NSStringFromSBHardwareButtonHintDropletStage(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Initial");
  if (a1 == 1)
    v1 = CFSTR("Presented");
  if (a1 == 2)
    return CFSTR("Flattened");
  else
    return v1;
}

double _SBPIPContentViewPaddingWhileStashed(int a1)
{
  double v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;

  if (a1)
    v1 = 42.0;
  else
    v1 = 10.0;
  if (__sb__runningInSpringBoard())
  {
    if (SBFEffectiveDeviceClass() != 2)
      return v1;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v2, "userInterfaceIdiom");

    if (v3 != 1)
      return v1;
  }
  objc_msgSend(MEMORY[0x1E0D01800], "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "homeButtonType");

  if (v5 == 2)
    return 24.0;
  else
    return 20.0;
}

uint64_t SBSAScaledAndClippedFrameByScalingLeadingTrailingViews(CGFloat *a1, void *a2, double a3, double a4, double a5, double a6, double a7, double a8, CGFloat a9, double a10)
{
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  void *v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double Height;
  double v37;
  double Width;
  double v40;
  CGFloat v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  uint64_t v45;
  CGRect v46;
  CGRect v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  v13 = a2;
  SBUnintegralizedRectCenteredAboutPoint();
  v41 = v14;
  v42 = v15;
  v43 = v17;
  v44 = v16;
  v45 = 0;
  v40 = a10;
  v18 = SBSAPrimaryContainerBoundsForCompactScaledProvidedViews(v13, (double *)&v45, a9, a9, a9, a9, v14, v16, v15, v17);
  v20 = v19;
  v22 = v21;
  v24 = v23;
  objc_msgSend(v13, "platformMetrics", *(_QWORD *)&v40);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "minimumEdgePadding");
  v27 = v26;

  objc_msgSend(v13, "systemContainerBounds");
  v51 = CGRectInset(v46, v27, v27);
  v47.origin.x = v18;
  v47.origin.y = v20;
  v47.size.width = v22;
  v47.size.height = v24;
  CGRectIntersection(v47, v51);
  objc_msgSend(v13, "displayScale");

  BSRectRoundForScale();
  BSRectWithSize();
  v29 = v28;
  v31 = v30;
  v33 = v32;
  v35 = v34;
  UIRectGetCenter();
  objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection");
  v48.origin.x = v29;
  v48.origin.y = v31;
  v48.size.width = v33;
  v48.size.height = v35;
  Height = CGRectGetHeight(v48);
  v49.origin.x = v41;
  v49.size.width = v42;
  v49.size.height = v43;
  v49.origin.y = v44;
  v37 = CGRectGetHeight(v49);
  v50.origin.x = v29;
  v50.origin.y = v31;
  v50.size.width = v33;
  v50.size.height = v35;
  Width = CGRectGetWidth(v50);
  if (a1)
  {
    *a1 = v41;
    a1[1] = v44;
    a1[2] = Width + (Height - v37) * -0.5 * 2.0;
    a1[3] = v43;
  }
  return SBUnintegralizedRectCenteredAboutPoint();
}

double SBSAPrimaryContainerBoundsForCompactScaledProvidedViews(void *a1, double *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, double a8, double a9, double a10)
{
  id v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  _BOOL4 v24;
  double MinX;
  CGFloat v26;
  CGFloat v27;
  CGFloat v28;
  double MaxX;
  CGFloat v30;
  CGFloat v31;
  double v32;
  double v33;
  id *v34;
  double v35;
  double v36;
  double v37;
  CGFloat v38;
  CGFloat MinY;
  CGFloat Height;
  CGFloat v41;
  CGFloat v42;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat v46;
  CGFloat v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  CGFloat v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  CGFloat v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  double v67;
  CGFloat v68;
  CGFloat v69;
  CGFloat v70;
  CGFloat v71;
  double v72;
  CGFloat v73;
  CGFloat v74;
  CGFloat r1_16a;
  CGFloat r1_24a;
  CGFloat v81;
  CGFloat rect;
  CGAffineTransform v83;
  CGAffineTransform v84;
  CGAffineTransform v85;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;

  v15 = a1;
  objc_msgSend(v15, "inertContainerFrame");
  v17 = v16;
  v19 = v18;
  v21 = v20;
  v23 = v22;
  if (!SBSARectApproximatelyContainsRect(a7, a8, a9, a10, v16, v18, v20, v22, 0.01))
  {
    v56 = 0.0;
    if (!a2)
      goto LABEL_22;
LABEL_21:
    *a2 = v56;
    goto LABEL_22;
  }
  v24 = objc_msgSend(v15, "layoutDirection") == 1;
  v86.origin.x = v17;
  v86.origin.y = v19;
  v86.size.width = v21;
  v86.size.height = v23;
  v69 = v19;
  MinX = CGRectGetMinX(v86);
  v87.origin.x = a7;
  v87.origin.y = a8;
  v87.size.width = a9;
  v87.size.height = a10;
  rect = v21;
  v26 = a7;
  v27 = a10;
  v72 = MinX - CGRectGetMinX(v87);
  v88.origin.x = v26;
  v88.origin.y = a8;
  v88.size.width = a9;
  v88.size.height = a10;
  v67 = CGRectGetMinX(v88);
  v89.origin.x = v26;
  v89.origin.y = a8;
  v89.size.width = a9;
  v89.size.height = a10;
  v28 = v23;
  v81 = v23;
  MaxX = CGRectGetMaxX(v89);
  v90.origin.x = v17;
  v90.origin.y = v69;
  v90.size.width = rect;
  v90.size.height = v28;
  v30 = CGRectGetMaxX(v90);
  v74 = a9;
  v31 = v17;
  v58 = v17;
  v32 = MaxX - v30;
  v91.origin.x = v31;
  v91.origin.y = v69;
  v91.size.width = rect;
  v91.size.height = v28;
  v33 = CGRectGetMaxX(v91);
  v34 = (id *)MEMORY[0x1E0CEB258];
  if (objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection") == 1)
    v35 = v32;
  else
    v35 = v72;
  v71 = v35;
  if (objc_msgSend(*v34, "userInterfaceLayoutDirection") == 1)
    v36 = v33;
  else
    v36 = v67;
  v70 = v36;
  if (objc_msgSend(*v34, "userInterfaceLayoutDirection") == 1)
    v37 = v72;
  else
    v37 = v32;
  v73 = v37;
  if (objc_msgSend(*v34, "userInterfaceLayoutDirection") == 1)
    v38 = v67;
  else
    v38 = v33;
  v92.origin.x = v26;
  v92.origin.y = a8;
  v92.size.width = a9;
  v92.size.height = v27;
  MinY = CGRectGetMinY(v92);
  v93.origin.x = v26;
  v93.origin.y = a8;
  v93.size.width = a9;
  v93.size.height = v27;
  Height = CGRectGetHeight(v93);
  v94.origin.x = v26;
  v94.origin.y = a8;
  v94.size.width = v74;
  v94.size.height = v27;
  v41 = CGRectGetMinY(v94);
  v68 = v26;
  v95.origin.x = v26;
  v60 = a8;
  v61 = v27;
  v95.origin.y = a8;
  v95.size.width = v74;
  v95.size.height = v27;
  v42 = CGRectGetHeight(v95);
  memset(&v85, 0, sizeof(v85));
  SAUIMiddleAttachedTransformForProvidedViewWithScale(1, 0, v24, (uint64_t)&v85, v70, MinY, v71, Height, a3, a4);
  memset(&v84, 0, sizeof(v84));
  SAUIMiddleAttachedTransformForProvidedViewWithScale(0, 0, v24, (uint64_t)&v84, v38, v41, v73, v42, a5, a6);
  v83 = v85;
  v96.origin.x = v70;
  v64 = MinY;
  v96.origin.y = MinY;
  v96.size.width = v71;
  v62 = Height;
  v96.size.height = Height;
  v97 = CGRectApplyAffineTransform(v96, &v83);
  x = v97.origin.x;
  y = v97.origin.y;
  width = v97.size.width;
  v46 = v97.size.height;
  v83 = v84;
  v65 = v41;
  v66 = v38;
  v97.origin.x = v38;
  v47 = x;
  v97.origin.y = v41;
  v48 = v81;
  v97.size.width = v73;
  v49 = v58;
  v63 = v42;
  v97.size.height = v42;
  v98 = CGRectApplyAffineTransform(v97, &v83);
  v50 = v98.origin.x;
  r1_16a = v98.size.height;
  r1_24a = v98.origin.y;
  v59 = v98.size.width;
  v98.origin.x = v47;
  v98.origin.y = y;
  v98.size.width = width;
  v98.size.height = v46;
  v51 = v69;
  if (!CGRectIsEmpty(v98))
  {
    v99.origin.x = v47;
    v99.origin.y = y;
    v99.size.width = width;
    v99.size.height = v46;
    v110.origin.x = v58;
    v110.origin.y = v69;
    v110.size.width = rect;
    v110.size.height = v81;
    v100 = CGRectUnion(v99, v110);
    v49 = v100.origin.x;
    v51 = v100.origin.y;
    rect = v100.size.width;
    v48 = v100.size.height;
  }
  v101.origin.x = v50;
  v101.origin.y = r1_24a;
  v101.size.width = v59;
  v101.size.height = r1_16a;
  if (!CGRectIsEmpty(v101))
  {
    v102.origin.x = v50;
    v102.origin.y = r1_24a;
    v102.size.width = v59;
    v102.size.height = r1_16a;
    v111.origin.x = v49;
    v111.origin.y = v51;
    v111.size.width = rect;
    v111.size.height = v48;
    v103 = CGRectUnion(v102, v111);
    v49 = v103.origin.x;
    v51 = v103.origin.y;
    rect = v103.size.width;
    v48 = v103.size.height;
  }
  v104.origin.x = v49;
  v104.origin.y = v51;
  v104.size.width = rect;
  v104.size.height = v48;
  CGRectGetHeight(v104);
  v105.origin.x = v68;
  v105.origin.y = v60;
  v105.size.height = v61;
  v105.size.width = v74;
  CGRectGetHeight(v105);
  v106.origin.x = v47;
  v106.origin.y = y;
  v106.size.width = width;
  v106.size.height = v46;
  v52 = CGRectGetWidth(v106);
  v107.origin.x = v70;
  v107.size.width = v71;
  v107.origin.y = v64;
  v107.size.height = v62;
  v53 = v49;
  v54 = v52 - CGRectGetWidth(v107);
  v108.origin.x = v50;
  v108.size.height = r1_16a;
  v108.origin.y = r1_24a;
  v108.size.width = v59;
  v55 = CGRectGetWidth(v108);
  v109.origin.y = v65;
  v109.origin.x = v66;
  v109.size.width = v73;
  v109.size.height = v63;
  a7 = v53;
  v56 = (v54 - (v55 - CGRectGetWidth(v109))) * 0.5;
  if (a2)
    goto LABEL_21;
LABEL_22:

  return a7;
}

uint64_t SBSAScaledAndClippedFrameByScalingDimensions(double *a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, double a7, double a8, CGFloat a9, CGFloat a10)
{
  id v17;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  void *v26;
  double v27;
  CGFloat v28;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v33;
  double v35;
  double v36;
  double v37;
  _BYTE v38[32];
  CGAffineTransform v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v17 = a2;
  CGAffineTransformMakeScale(&v39, a9, a10);
  *(CGFloat *)v38 = a3;
  *(CGFloat *)&v38[8] = a4;
  v40.origin.x = a3;
  v40.origin.y = a4;
  *(CGFloat *)&v38[16] = a5;
  *(CGFloat *)&v38[24] = a6;
  v40.size.width = a5;
  v40.size.height = a6;
  CGRectApplyAffineTransform(v40, &v39);
  SBUnintegralizedRectCenteredAboutPoint();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  objc_msgSend(v17, "platformMetrics");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "minimumEdgePadding");
  v28 = v27;

  objc_msgSend(v17, "systemContainerBounds");
  v47 = CGRectInset(v41, v28, v28);
  v42.origin.x = v19;
  v42.origin.y = v21;
  v42.size.width = v23;
  v42.size.height = v25;
  CGRectIntersection(v42, v47);
  objc_msgSend(v17, "displayScale");

  UIRectIntegralWithScale();
  BSRectWithSize();
  x = v43.origin.x;
  y = v43.origin.y;
  width = v43.size.width;
  height = v43.size.height;
  CGRectGetHeight(v43);
  v44.origin.x = x;
  v44.origin.y = y;
  v44.size.width = width;
  v44.size.height = height;
  CGRectGetHeight(v44);
  if (a1)
  {
    v45.origin.x = x;
    v45.origin.y = y;
    v45.size.width = width;
    v45.size.height = height;
    v36 = CGRectGetWidth(v45);
    v37 = v36 / CGRectGetWidth(*(CGRect *)v38);
    v46.origin.x = x;
    v46.origin.y = y;
    v46.size.width = width;
    v46.size.height = height;
    v35 = CGRectGetHeight(v46);
    v33 = CGRectGetHeight(*(CGRect *)v38);
    *a1 = v37;
    a1[1] = v35 / v33;
  }
  return SBUnintegralizedRectCenteredAboutPoint();
}

double SBSAAdjunctContainerMinimalSize(void *a1)
{
  double v1;

  objc_msgSend(a1, "inertContainerFrame");
  return v1;
}

uint64_t SBSAPortraitFrameForPrimaryContainerView(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v9 = a1;
  objc_msgSend(v9, "inertContainerFrame");
  SBSARectApplyDirectionEdgeInsets(objc_msgSend(v9, "layoutDirection"), v10, v11, v12, v13, a2, a3, a4, a5);
  objc_msgSend(v9, "displayScale");

  return UIRectRoundToScale();
}

uint64_t SBSABoundsForAdjunctContainerView(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  double v10;
  double v11;
  double v12;
  double v13;

  v9 = a1;
  objc_msgSend(v9, "inertContainerFrame");
  BSRectWithSize();
  SBSARectApplyDirectionEdgeInsets(objc_msgSend(v9, "layoutDirection"), v10, v11, v12, v13, a2, a3, a4, a5);
  objc_msgSend(v9, "displayScale");

  return UIRectRoundToScale();
}

double SBSAInitialFrameForElementAtIndex(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  double MinX;
  CGFloat v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  double v16;
  CGFloat v17;
  double v18;
  CGFloat v19;
  CGFloat MinY;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  double v25;
  double v26;
  CGRect v28;
  CGRect v29;

  v5 = a3;
  objc_msgSend(v5, "inertContainerFrame");
  v7 = MinX;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  if (a1)
  {
    objc_msgSend(v5, "inertContainerFrame");
    BSRectWithSize();
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v28.origin.x = v7;
    v28.origin.y = v9;
    v28.size.width = v11;
    v28.size.height = v13;
    MinY = CGRectGetMinY(v28);
    v21 = v7;
    v22 = v9;
    v23 = v11;
    v24 = v13;
    if (a2 == 4)
    {
      MinX = CGRectGetMinX(*(CGRect *)&v21);
    }
    else
    {
      CGRectGetMaxX(*(CGRect *)&v21);
      v29.origin.x = v15;
      v29.origin.y = MinY;
      v29.size.width = v17;
      v29.size.height = v19;
      MinX = CGRectGetWidth(v29);
    }
  }
  objc_msgSend(v5, "displayScale", MinX);
  UIRectIntegralWithScale();
  v26 = v25;

  return v26;
}

double SBSAAdjunctFrameForElementInCollection(unint64_t a1, void *a2, void *a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  id v13;
  id v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  CGFloat v48;
  double v49;
  CGFloat v50;
  double v51;
  CGFloat v52;
  double v53;
  CGFloat v54;
  double v55;
  double v56;
  double Width;
  CGFloat v58;
  int v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  CGFloat v63;
  double MinX;
  CGFloat v65;
  CGFloat MinY;
  unint64_t v67;
  CGFloat v68;
  double v69;
  double v70;
  void *v72;
  void *v73;
  void *v74;
  void *v75;
  CGFloat v76;
  CGFloat v77;
  double v78;
  CGFloat v79;
  double v80;
  CGFloat v81;
  CGFloat rectb;
  double rect;
  CGFloat recta;
  double rectc;
  CGRect v86;
  CGRect v87;
  CGRect v88;
  CGRect v89;
  CGRect v90;
  CGRect v91;
  CGRect v92;
  CGRect v93;

  v13 = a2;
  v14 = a3;
  if (a1 && objc_msgSend(v13, "count") <= a1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v72 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGRect SBSAAdjunctFrameForElementInCollection(NSUInteger, NSArray<SBSAElementContext *> *__strong _Nonnull, CGRect, SBSAContext *__strong _Nonnull)");
    v73 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v72, "handleFailureInFunction:file:lineNumber:description:", v73, CFSTR("SBSAElementGeometry.m"), 89, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("(indexOfElement == 0) || ([elementContexts count] > indexOfElement)"));

  }
  v15 = objc_msgSend(v13, "count");
  if (v15 <= a1)
  {
    v16 = 0;
  }
  else
  {
    objc_msgSend(v13, "objectAtIndexedSubscript:", a1);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v17 = objc_msgSend(v16, "layoutMode");
  v18 = objc_msgSend(v16, "interfaceOrientation");
  v19 = v18 - 3;
  if (!a1 && v19 > 1)
    goto LABEL_37;
  if (v17 == 1)
  {
    recta = a7;
    objc_msgSend(v14, "inertContainerFrame");
    v79 = v40;
    v81 = v39;
    v76 = v42;
    v77 = v41;
    objc_msgSend(v16, "preferredEdgeOutsets");
    SBSABoundsForAdjunctContainerView(v14, v43, v44, v45, v46);
    v48 = v47;
    v50 = v49;
    v52 = v51;
    v54 = v53;
    objc_msgSend(v14, "inertContainerFrame");
    v56 = v55;
    v87.origin.x = v48;
    v87.origin.y = v50;
    v87.size.width = v52;
    v87.size.height = v54;
    Width = CGRectGetWidth(v87);
    if (v56 >= Width)
      v58 = v56;
    else
      v58 = Width;
    v59 = SBSAAdjunctFrameIsOnLeft(a1, v13, v14);
    v60 = a4;
    v61 = a5;
    v62 = a6;
    v63 = recta;
    if (v59)
      MinX = CGRectGetMinX(*(CGRect *)&v60);
    else
      MinX = CGRectGetMaxX(*(CGRect *)&v60);
    v65 = MinX;
    v88.origin.y = v79;
    v88.origin.x = v81;
    v88.size.height = v76;
    v88.size.width = v77;
    MinY = CGRectGetMinY(v88);
    if (v19 >= 2)
      v67 = a1;
    else
      v67 = a1 + 1;
    if (!v67)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v74 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGRect SBSAAdjunctFrameForElementInCollection(NSUInteger, NSArray<SBSAElementContext *> *__strong _Nonnull, CGRect, SBSAContext *__strong _Nonnull)");
      v75 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v74, "handleFailureInFunction:file:lineNumber:description:", v75, CFSTR("SBSAElementGeometry.m"), 132, CFSTR("It shouldn't be possible to have a 'rankFactor' of '0'"));

    }
    v89.origin.x = v65;
    v89.origin.y = MinY;
    v89.size.width = v58;
    v89.size.height = v54;
    CGRectGetWidth(v89);
    goto LABEL_37;
  }
  if (v17 != 3)
    goto LABEL_37;
  objc_msgSend(v16, "preferredEdgeOutsets");
  SBSAPortraitFrameForPrimaryContainerView(v14, v20, v21, v22, v23);
  v28 = v24;
  v29 = v25;
  v30 = v26;
  v31 = v27;
  if (v19 <= 1)
  {
    rectb = CGRectGetHeight(*(CGRect *)&v24);
    v86.origin.x = v28;
    v86.origin.y = v29;
    v86.size.width = v30;
    v86.size.height = v31;
    v31 = CGRectGetWidth(v86);
    v30 = rectb;
  }
  objc_msgSend(v14, "landscapeScreenEdgeInsets");
  v80 = v32;
  rect = v33;
  v78 = v34;
  objc_msgSend(v14, "systemContainerBounds");
  if (v18 < 3)
    goto LABEL_36;
  if (v18 == 3)
  {
    rectc = a7;
    v68 = CGRectGetMaxX(*(CGRect *)&v35) - v78;
    v90.origin.x = v28;
    v90.origin.y = v29;
    v90.size.width = v30;
    v90.size.height = v31;
    v28 = v68 - CGRectGetWidth(v90);
    a7 = rectc;
  }
  else
  {
    if (v18 != 4)
    {
      if (v19 > 1)
        goto LABEL_37;
      goto LABEL_34;
    }
    v28 = rect;
  }
  v29 = v80;
LABEL_34:
  if (v15 > 1)
    goto LABEL_36;
  v91.origin.x = v28;
  v91.origin.y = v29;
  v91.size.width = v30;
  v91.size.height = v31;
  v93.origin.x = a4;
  v93.origin.y = a5;
  v93.size.width = a6;
  v93.size.height = a7;
  if (CGRectIntersectsRect(v91, v93))
  {
LABEL_36:
    v92.origin.x = a4;
    v92.origin.y = a5;
    v92.size.width = a6;
    v92.size.height = a7;
    CGRectGetMaxY(v92);
  }
LABEL_37:
  objc_msgSend(v14, "displayScale");
  UIRectIntegralWithScale();
  v70 = v69;

  return v70;
}

uint64_t SBSAAdjunctFrameIsOnLeft(unint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v11;
  uint64_t v12;

  v5 = a2;
  v6 = a3;
  if (objc_msgSend(v5, "count") <= a1)
  {
    v7 = 0;
  }
  else
  {
    objc_msgSend(v5, "objectAtIndexedSubscript:", a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v8 = objc_msgSend(v6, "layoutDirection");
  v9 = objc_msgSend(v7, "interfaceOrientation");
  v11 = (unint64_t)(v9 - 1) < 2 && v8 == 1;
  v12 = v9 == 4 || v11;

  return v12;
}

uint64_t SBSACustomLayoutIsSensorAttachedInLandscape(unint64_t a1)
{
  return (a1 < 4) & (0xEu >> (a1 & 0xF));
}

CGFloat SBSAFrameForElementInCollection(unint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  double v13;
  void *v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  BOOL v35;
  void *v37;
  void *v38;

  v5 = a2;
  v6 = a3;
  if (a1 && objc_msgSend(v5, "count") <= a1)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGRect SBSAFrameForElementInCollection(NSUInteger, NSArray<SBSAElementContext *> *__strong _Nonnull, SBSAContext *__strong _Nonnull)");
    v38 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v37, "handleFailureInFunction:file:lineNumber:description:", v38, CFSTR("SBSAElementGeometry.m"), 158, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("(indexOfElement == 0) || ([elementContexts count] > indexOfElement)"));

  }
  if (objc_msgSend(v5, "count") <= a1)
  {
    v7 = 0;
  }
  else
  {
    objc_msgSend(v5, "objectAtIndexedSubscript:", a1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  v8 = objc_msgSend(v7, "layoutMode");
  v9 = objc_msgSend(v7, "interfaceOrientation");
  if (v8 <= 0)
  {
    v13 = SBSAInitialFrameForElementAtIndex(a1, v9, v6);
LABEL_29:
    v16 = v13;
    goto LABEL_30;
  }
  v10 = v9 - 5;
  if (v8 != 3)
  {
    if (v10 <= 0xFFFFFFFFFFFFFFFDLL)
    {
      v12 = 0;
      goto LABEL_15;
    }
LABEL_17:
    objc_msgSend(v6, "inertContainerFrame");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;
    v12 = 0;
    goto LABEL_23;
  }
  v11 = objc_msgSend(v7, "systemApertureCustomLayout") - 1;
  v12 = v11 < 3;
  if (v11 >= 3 && v10 >= 0xFFFFFFFFFFFFFFFELL)
    goto LABEL_17;
LABEL_15:
  if (objc_msgSend(v5, "count"))
  {
    objc_msgSend(v5, "objectAtIndexedSubscript:", 0);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v14 = 0;
  }
  objc_msgSend(v14, "preferredEdgeOutsets");
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  if (!v12 && (unint64_t)objc_msgSend(v5, "count") > 1)
    v30 = 0.0;
  SBSAPortraitFrameForPrimaryContainerView(v6, v24, v26, v28, v30);
  v16 = v31;
  v18 = v32;
  v20 = v33;
  v22 = v34;

LABEL_23:
  v35 = v10 < 0xFFFFFFFFFFFFFFFELL && a1 == 0;
  if (!v35 && !v12)
  {
    v13 = SBSAAdjunctFrameForElementInCollection(a1, v5, v6, v16, v18, v20, v22);
    goto LABEL_29;
  }
LABEL_30:

  return v16;
}

uint64_t SAUIMiddleAttachedTransformForProvidedViewWithScale@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>, CGFloat a5@<D0>, CGFloat a6@<D1>, CGFloat a7@<D2>, CGFloat a8@<D3>, CGFloat a9@<D4>, CGFloat a10@<D5>)
{
  double v19;
  double v20;
  CGFloat v21;
  double MidX;
  double MidY;
  uint64_t result;
  double v25;
  double v26;
  __int128 v27;
  __int128 v28;
  double Width;
  CGAffineTransform v30;
  CGAffineTransform v31;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGAffineTransform v34;
  CGAffineTransform v35;
  CGAffineTransform v36;
  CGAffineTransform v37;
  CGRect v38;
  CGRect v39;

  v19 = -1.0;
  if (a1)
    v19 = 1.0;
  if (a3)
    v20 = v19;
  else
    v20 = -v19;
  v21 = a5;
  Width = CGRectGetWidth(*(CGRect *)(&a6 - 1));
  v38.origin.x = a5;
  v38.origin.y = a6;
  v38.size.width = a7;
  v38.size.height = a8;
  MidX = CGRectGetMidX(v38);
  v39.origin.x = a5;
  v39.origin.y = a6;
  v39.size.width = a7;
  v39.size.height = a8;
  MidY = CGRectGetMidY(v39);
  memset(&v37, 0, sizeof(v37));
  CGAffineTransformMakeTranslation(&v37, -MidX, -MidY);
  memset(&v36, 0, sizeof(v36));
  CGAffineTransformMakeTranslation(&v36, MidX, MidY);
  memset(&v35, 0, sizeof(v35));
  CGAffineTransformMakeScale(&v35, a9, a10);
  t1 = v37;
  memset(&v34, 0, sizeof(v34));
  t2 = v35;
  CGAffineTransformConcat(&v34, &t1, &t2);
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(_OWORD *)a4 = 0u;
  t1 = v34;
  t2 = v36;
  CGAffineTransformConcat((CGAffineTransform *)a4, &t1, &t2);
  if (!BSFloatIsOne() || (result = BSFloatIsOne(), (result & 1) == 0))
  {
    v25 = 0.0;
    if (a1)
      v25 = v20;
    if (a2)
      v26 = v25;
    else
      v26 = v20;
    result = BSFloatIsZero();
    if ((result & 1) == 0)
    {
      memset(&t1, 0, sizeof(t1));
      CGAffineTransformMakeTranslation(&t1, v26 * (-(Width - Width * a9) / (a9 + a9)), 0.0);
      v31 = t1;
      v27 = *(_OWORD *)(a4 + 16);
      *(_OWORD *)&v30.a = *(_OWORD *)a4;
      *(_OWORD *)&v30.c = v27;
      *(_OWORD *)&v30.tx = *(_OWORD *)(a4 + 32);
      result = (uint64_t)CGAffineTransformConcat(&t2, &v31, &v30);
      v28 = *(_OWORD *)&t2.c;
      *(_OWORD *)a4 = *(_OWORD *)&t2.a;
      *(_OWORD *)(a4 + 16) = v28;
      *(_OWORD *)(a4 + 32) = *(_OWORD *)&t2.tx;
    }
  }
  return result;
}

uint64_t SBSAIndexOfSensorAttachedElementInCollection(void *a1)
{
  void *v1;
  void *v2;
  unint64_t v3;
  _BOOL4 v4;
  uint64_t v5;

  objc_msgSend(a1, "firstObject");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v1)
  {
    v3 = objc_msgSend(v1, "interfaceOrientation") - 5;
    if (objc_msgSend(v2, "systemApertureCustomLayout"))
      v4 = objc_msgSend(v2, "layoutMode") == 3;
    else
      v4 = 0;
    if (v3 < 0xFFFFFFFFFFFFFFFELL)
      v4 = 1;
    if (v4)
      v5 = 0;
    else
      v5 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    v5 = 0x7FFFFFFFFFFFFFFFLL;
  }

  return v5;
}

id SBSAElementIdentityOfSensorAttachedElementInCollection(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;

  v1 = a1;
  v2 = SBSAIndexOfSensorAttachedElementInCollection(v1);
  if (v2 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v3 = 0;
  }
  else
  {
    objc_msgSend(v1, "objectAtIndexedSubscript:", v2);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v3;
}

BOOL SBSAIsElementInCollectionSensorAttached(uint64_t a1, void *a2)
{
  return a1 != 0x7FFFFFFFFFFFFFFFLL && SBSAIndexOfSensorAttachedElementInCollection(a2) == a1;
}

void sub_1D0709410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0709584(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0709618(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D070974C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id __BSSafeCast(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  id v5;

  v3 = a1;
  if (a2)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v4 = v3;
    else
      v4 = 0;
  }
  else
  {
    v4 = 0;
  }
  v5 = v4;

  return v5;
}

void sub_1D070EE34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a72;

  _Block_object_dispose(&a56, 8);
  _Block_object_dispose(&a72, 8);
  _Block_object_dispose(&STACK[0x228], 8);
  _Unwind_Resume(a1);
}

void sub_1D070F5BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a33, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a55, 8);
  _Unwind_Resume(a1);
}

id _StackablePreferencesProvidingSimpleDescription(void *a1)
{
  void *v1;
  id v2;
  objc_class *v3;
  void *v4;
  void *v5;

  v1 = (void *)MEMORY[0x1E0CB3940];
  v2 = a1;
  v3 = (objc_class *)objc_opt_class();
  NSStringFromClass(v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringWithFormat:", CFSTR("<%@: %p>"), v4, v2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1D0710478(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D07105DC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id _SBDisplayControllerTransactionLabel(objc_class *a1, void *a2)
{
  void *v3;
  id v4;
  void *v5;
  void *v6;

  v3 = (void *)MEMORY[0x1E0CB3940];
  v4 = a2;
  NSStringFromClass(a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "stringWithFormat:", CFSTR("%@:%@"), v5, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id _SBPreventIdleSleepReason(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v6;
  void *v7;

  v3 = a1;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString * _Nonnull _SBPreventIdleSleepReason(FBSDisplayIdentity *__strong _Nonnull, __unsafe_unretained Class _Nonnull)");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@:%@"), a2, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

id _SBDisplayControllerLoggingProem(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  __CFString *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;

  v3 = a1;
  v4 = a2;
  _NSFullMethodName();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "rangeOfString:", CFSTR(" "));
  if (v6 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = v6;
    if (v3)
    {
      objc_msgSend(v3, "description");
      v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v8 = CFSTR("disconnected");
    }
    v9 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v5, "substringToIndex:", v7);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "substringFromIndex:", v7 + 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "stringWithFormat:", CFSTR("<%@:%p> [%@] %@"), v10, v4, v8, v11);
    v12 = objc_claimAutoreleasedReturnValue();

    v5 = (void *)v12;
  }

  return v5;
}

__CFString *SBCADisplayDifferenceMaskDescription(uint64_t a1)
{
  void *v3;
  id v4;
  _QWORD *v5;
  uint8x8_t v6;
  int v7;
  unint64_t v8;
  __CFString *v9;
  id v10;
  _QWORD v11[2];
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  id v14;
  const __CFString *v15;
  char v16;

  if (!a1)
    return CFSTR("<none>");
  if (a1 == -1)
    return CFSTR("<invalid>");
  objc_msgSend(MEMORY[0x1E0CB37A0], "stringWithString:", CFSTR("["));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v12 = __SBCADisplayDifferenceMaskDescription_block_invoke;
  v13 = &unk_1E8EA2CF0;
  v4 = v3;
  v14 = v4;
  v15 = CFSTR("[");
  v5 = v11;
  v16 = 0;
  v6 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
  v6.i16[0] = vaddlv_u8(v6);
  v7 = v6.i32[0];
  if (v6.i32[0])
  {
    v8 = 0;
    do
    {
      if (((1 << v8) & a1) != 0)
      {
        ((void (*)(_QWORD *))v12)(v5);
        if (v16)
          break;
        --v7;
      }
      if (v8 > 0x3E)
        break;
      ++v8;
    }
    while (v7 > 0);
  }

  objc_msgSend(v4, "appendString:", CFSTR("]"));
  v9 = (__CFString *)v15;
  v10 = v4;

  return (__CFString *)v10;
}

uint64_t SBCADifferenceMaskCalculate(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t result;
  void *v16;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v10 = v8;
  if (!v10)
    goto LABEL_10;
  NSClassFromString(CFSTR("CADisplayMode"));
  if ((objc_opt_isKindOfClass() & 1) != 0)
  {

    if (v9)
    {
      objc_msgSend(v7, "currentMode");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = BSEqualObjects() ^ 1;
      objc_msgSend(v7, "overscanAdjustment");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      if (!BSEqualStrings())
        v12 |= 2uLL;
      objc_msgSend(v7, "logicalScale");
      if ((BSFloatApproximatelyEqualToFloat() & 1) != 0)
      {
        if (!BSFloatApproximatelyEqualToFloat())
          v12 |= 4uLL;
      }
      else
      {
        v12 |= 4uLL;
      }
      if (objc_msgSend(v7, "pointScale") == a4)
        v14 = v12;
      else
        v14 = v12 | 8;

      goto LABEL_16;
    }
LABEL_10:
    v14 = -1;
LABEL_16:

    return v14;
  }
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Invalid condition not satisfying: %@"), CFSTR("[_bs_assert_object isKindOfClass:CADisplayModeClass]"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    SBCADifferenceMaskCalculate_cold_1((uint64_t)v16);
  objc_msgSend(objc_retainAutorelease(v16), "UTF8String");
  result = _bs_set_crash_log_message();
  __break(0);
  return result;
}

BOOL SBCADisplayDifferenceMaskHasDifference(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 0xFFFFFFFFFFFFFFFELL;
}

uint64_t _SBXXDisplayIdentifierForPID(uint64_t a1, uint64_t a2, _BYTE *a3, _OWORD *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  void *v12;
  NSObject *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v18;
  _OWORD v19[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v19[0] = *a4;
  v19[1] = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v19);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v18);
  v11 = v18;

  if ((v10 & 1) != 0)
  {
    *a3 = 0;
    +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "applicationWithPid:", a2);
    v13 = objc_claimAutoreleasedReturnValue();

    -[NSObject bundleIdentifier](v13, "bundleIdentifier");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v14;
    if (v14)
      objc_msgSend(v14, "getCString:maxLength:encoding:", a3, 1024, 4);

    v16 = 0;
  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXDisplayIdentifierForPID_cold_1(v11);
    v16 = 5;
  }

  return v16;
}

uint64_t _SBXXDisplayIdentifiersForPID(uint64_t a1, uint64_t a2, _QWORD *a3, _DWORD *a4, _OWORD *a5)
{
  void *v9;
  __int128 v10;
  void *v11;
  char v12;
  id v13;
  void *v14;
  NSObject *v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v20;
  _OWORD v21[2];
  _QWORD v22[2];

  v22[1] = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = a5[1];
  v21[0] = *a5;
  v21[1] = v10;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v21);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  v12 = objc_msgSend(v9, "authenticateAuditToken:error:", v11, &v20);
  v13 = v20;

  if ((v12 & 1) != 0)
  {
    +[SBApplicationController sharedInstanceIfExists](SBApplicationController, "sharedInstanceIfExists");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "applicationWithPid:", a2);
    v15 = objc_claimAutoreleasedReturnValue();

    if (v15)
    {
      -[NSObject bundleIdentifier](v15, "bundleIdentifier");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v22[0] = v16;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v22, 1);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v17 = (void *)MEMORY[0x1E0C9AA60];
    }
    v18 = serializePropertyListObject(v17, a3, a4);

  }
  else
  {
    SBLogCommon();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      _SBXXDisplayIdentifiersForPID_cold_1(v13);
    v18 = 5;
  }

  return v18;
}

uint64_t _SBXXAppSwitcherServiceRegister(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _OWORD *a5)
{
  __int128 v9;
  char v10;
  id v11;
  NSObject *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD v22[4];
  id v23;
  _QWORD block[4];
  id v25;
  _OWORD v26[2];
  id v27;

  BSDispatchQueueAssertNotMain();
  v27 = 0;
  v9 = a5[1];
  v26[0] = *a5;
  v26[1] = v9;
  v10 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v26, CFSTR("com.apple.springboard.switcherServiceRegistrar"), &v27);
  v11 = v27;
  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend(objc_alloc(MEMORY[0x1E0D017A0]), "initWithPort:", a2);
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCString:encoding:", a3, 134217984);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCString:encoding:", a4, 134217984);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    +[SBAppSwitcherService switcherServiceWithName:viewServiceClassName:](SBAppSwitcherService, "switcherServiceWithName:viewServiceClassName:", v13, v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = MEMORY[0x1E0C809B0];
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXAppSwitcherServiceRegister_block_invoke;
    block[3] = &unk_1E8E9DED8;
    v17 = v15;
    v25 = v17;
    dispatch_async(MEMORY[0x1E0C80D38], block);
    v18 = (void *)MEMORY[0x1E0D01810];
    v22[0] = v16;
    v22[1] = 3221225472;
    v22[2] = ___SBXXAppSwitcherServiceRegister_block_invoke_2;
    v22[3] = &unk_1E8E9DED8;
    v23 = v17;
    v19 = v17;
    objc_msgSend(v18, "monitorSendRight:withHandler:", v12, v22);

    v20 = 0;
  }
  else
  {
    SBLogCommon();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      _SBXXAppSwitcherServiceRegister_cold_1(v11);
    v20 = 5;
  }

  return v20;
}

uint64_t _SBXXApplicationDisplayIdentifiers(uint64_t a1, int a2, int a3, _QWORD *a4, _DWORD *a5, _OWORD *a6)
{
  void *v11;
  __int128 v12;
  void *v13;
  char v14;
  id v15;
  NSObject *v16;
  void *v17;
  int v18;
  void *v19;
  void *v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  id v37;
  _OWORD v38[2];
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = a6[1];
  v38[0] = *a6;
  v38[1] = v12;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v38);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = 0;
  v14 = objc_msgSend(v11, "authenticateAuditToken:error:", v13, &v37);
  v15 = v37;

  if ((v14 & 1) != 0)
  {
    if (!a2 && !objc_msgSend((id)SBApp, "hasFinishedLaunching"))
    {
      v21 = 5;
      goto LABEL_24;
    }
    objc_msgSend(MEMORY[0x1E0C99E20], "set");
    v16 = objc_claimAutoreleasedReturnValue();
    if (!a3
      || (+[SBPlatformController sharedInstance](SBPlatformController, "sharedInstance"),
          v17 = (void *)objc_claimAutoreleasedReturnValue(),
          v18 = objc_msgSend(v17, "isInternalInstall"),
          v17,
          v18))
    {
      +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = v19;
      if (a2)
        objc_msgSend(v19, "runningApplications");
      else
        objc_msgSend(v19, "allApplications");
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      v35 = 0u;
      v36 = 0u;
      v33 = 0u;
      v34 = 0u;
      v23 = v22;
      v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v33, v39, 16);
      if (v24)
      {
        v25 = v24;
        v26 = *(_QWORD *)v34;
        do
        {
          v27 = 0;
          do
          {
            if (*(_QWORD *)v34 != v26)
              objc_enumerationMutation(v23);
            objc_msgSend(*(id *)(*((_QWORD *)&v33 + 1) + 8 * v27), "bundleIdentifier", (_QWORD)v33);
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            -[NSObject addObject:](v16, "addObject:", v28);

            ++v27;
          }
          while (v25 != v27);
          v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v33, v39, 16);
        }
        while (v25);
      }

      if (!a2)
      {
        +[SBIconController sharedInstanceIfExists](SBIconController, "sharedInstanceIfExists");
        v29 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v29, "visibleIconStateDisplayIdentifiers");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSObject intersectSet:](v16, "intersectSet:", v30);

      }
    }
    -[NSObject allObjects](v16, "allObjects", (_QWORD)v33);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = serializePropertyListObject(v31, a4, a5);

  }
  else
  {
    SBLogCommon();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
      _SBXXApplicationDisplayIdentifiers_cold_1(v15);
    v21 = 5;
  }

LABEL_24:
  return v21;
}

uint64_t _SBXXFrontmostApplicationDisplayIdentifier(uint64_t a1, uint64_t a2, __int128 *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  _QWORD v23[4];
  id v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  void (*v28)(uint64_t);
  id v29;
  id v30;

  BSDispatchQueueAssertMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v26 = *a3;
  v27 = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v26);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v30);
  v9 = v30;

  if ((v8 & 1) != 0)
  {
    *(_QWORD *)&v26 = 0;
    *((_QWORD *)&v26 + 1) = &v26;
    *(_QWORD *)&v27 = 0x3032000000;
    *((_QWORD *)&v27 + 1) = __Block_byref_object_copy__7;
    v28 = __Block_byref_object_dispose__7;
    v29 = 0;
    +[SBMainSwitcherControllerCoordinator _shim_activeSwitcherController](SBMainSwitcherControllerCoordinator, "_shim_activeSwitcherController");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "layoutStatePrimaryElement");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "workspaceEntity");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "applicationSceneEntity");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "sceneHandle");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "application");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "bundleIdentifier");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread"))
    {
      v17 = *((_QWORD *)&v26 + 1);
      v18 = v16;
      v19 = *(void **)(v17 + 40);
      *(_QWORD *)(v17 + 40) = v18;
    }
    else
    {
      v23[0] = MEMORY[0x1E0C809B0];
      v23[1] = 3221225472;
      v23[2] = ___SBXXFrontmostApplicationDisplayIdentifier_block_invoke;
      v23[3] = &unk_1E8E9DFA0;
      v25 = &v26;
      v24 = v16;
      dispatch_sync(MEMORY[0x1E0C80D38], v23);
      v19 = v24;
    }

    if (objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 40), "getCString:maxLength:encoding:", a2, 1024, 4))v21 = 0;
    else
      v21 = 4;

    _Block_object_dispose(&v26, 8);
  }
  else
  {
    SBLogCommon();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      _SBXXFrontmostApplicationDisplayIdentifier_cold_1(v9);

    v21 = 5;
  }

  return v21;
}

void sub_1D07126A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXBundlePathForDisplayIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  id v20;
  _OWORD v21[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v21[0] = *a4;
  v21[1] = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v21);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v20);
  v11 = v20;

  if ((v10 & 1) != 0)
  {
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    if (v12)
    {
      +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "applicationWithBundleIdentifier:", v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "info");
      v15 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v15, "bundleURL");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "path");
      v17 = objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v17 = 0;
    }
    if (-[NSObject getCString:maxLength:encoding:](v17, "getCString:maxLength:encoding:", a3, 1024, 4))v18 = 0;
    else
      v18 = 4;

  }
  else
  {
    SBLogCommon();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      _SBXXBundlePathForDisplayIdentifier_cold_1(v11);
    v18 = 5;
  }

  return v18;
}

uint64_t _SBXXLocalizedApplicationNameForDisplayIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  void *v23;
  id v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  void (*v28)(uint64_t);
  id v29;
  id v30;

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v26 = *a4;
  v27 = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v26);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v30);
  v11 = v30;

  if ((v10 & 1) != 0)
  {
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    if (v12)
    {
      +[SBApplicationController sharedInstanceIfExists](SBApplicationController, "sharedInstanceIfExists");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "applicationWithBundleIdentifier:", v12);
      v14 = (void *)objc_claimAutoreleasedReturnValue();

      if (v14)
      {
        objc_msgSend(v14, "displayName");
        v15 = objc_claimAutoreleasedReturnValue();
      }
      else
      {
        +[SBWebApplication _webClipIdentifierFromWebAppIdentifier:](SBWebApplication, "_webClipIdentifierFromWebAppIdentifier:", v12);
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = v17;
        if (v17)
        {
          *(_QWORD *)&v26 = 0;
          *((_QWORD *)&v26 + 1) = &v26;
          *(_QWORD *)&v27 = 0x3032000000;
          *((_QWORD *)&v27 + 1) = __Block_byref_object_copy__7;
          v28 = __Block_byref_object_dispose__7;
          v29 = 0;
          v20 = MEMORY[0x1E0C809B0];
          v21 = 3221225472;
          v22 = ___SBXXLocalizedApplicationNameForDisplayIdentifier_block_invoke;
          v23 = &unk_1E8E9DFA0;
          v25 = &v26;
          v24 = v17;
          dispatch_sync(MEMORY[0x1E0C80D38], &v20);
          v15 = *(id *)(*((_QWORD *)&v26 + 1) + 40);

          _Block_object_dispose(&v26, 8);
        }
        else
        {
          v15 = 0;
        }

      }
    }
    else
    {
      v15 = 0;
    }
    if (-[NSObject getCString:maxLength:encoding:](v15, "getCString:maxLength:encoding:", a3, 1024, 4, v20, v21, v22, v23))v16 = 0;
    else
      v16 = 4;

  }
  else
  {
    SBLogCommon();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
      _SBXXLocalizedApplicationNameForDisplayIdentifier_cold_1(v11);
    v16 = 5;
  }

  return v16;
}

uint64_t _SBXXSuspendFrontmostApp(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  void *v3;
  void *v4;
  char v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  id v10;
  _OWORD v11[2];

  v2 = a2[1];
  v11[0] = *a2;
  v11[1] = v2;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v11);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = 0;
  v5 = objc_msgSend(v4, "authenticateAuditToken:error:", v3, &v10);
  v6 = v10;

  if ((v5 & 1) != 0)
  {
    BSDispatchMain();
    v7 = 0;
  }
  else
  {
    SBLogCommon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      _SBXXSuspendFrontmostApp_cold_1(v6);

    v7 = 5;
  }

  return v7;
}

uint64_t _SBXXInterruptKeybagRefetch(uint64_t a1, _OWORD *a2)
{
  __int128 v3;
  void *v4;
  void *v5;
  char v6;
  id v7;
  void *v8;
  NSObject *v9;
  void *v10;
  id v11;
  uint64_t v12;
  _QWORD v14[4];
  id v15;
  id v16;
  _OWORD v17[2];

  BSDispatchQueueAssertNotMain();
  v3 = a2[1];
  v17[0] = *a2;
  v17[1] = v3;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v17);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = 0;
  v6 = objc_msgSend(v5, "authenticateAuditToken:error:", v4, &v16);
  v7 = v16;

  if ((v6 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "processForPID:", objc_msgSend(v4, "pid"));
    v9 = objc_claimAutoreleasedReturnValue();

    FBSProcessPrettyDescription();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = MEMORY[0x1E0C809B0];
    v14[1] = 3221225472;
    v14[2] = ___SBXXInterruptKeybagRefetch_block_invoke;
    v14[3] = &unk_1E8E9DED8;
    v15 = v10;
    v11 = v10;
    dispatch_async(MEMORY[0x1E0C80D38], v14);

    v12 = 0;
  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBXXInterruptKeybagRefetch_cold_1(v7);
    v12 = 5;
  }

  return v12;
}

uint64_t _SBXXGetInterfaceOrientation(uint64_t a1, _DWORD *a2)
{
  BSDispatchQueueAssertMain();
  if (a2)
    *a2 = objc_msgSend((id)SBApp, "activeInterfaceOrientation");
  return 0;
}

uint64_t _SBXXSetWantsVolumeButtonEvents(uint64_t a1, int a2)
{
  void *v3;
  void *v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];
  NSObject *v16;
  int v17;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    if ((objc_msgSend(v3, "isAppleApplication") & 1) != 0)
    {
      v15[0] = MEMORY[0x1E0C809B0];
      v15[1] = 3221225472;
      v15[2] = ___SBXXSetWantsVolumeButtonEvents_block_invoke;
      v15[3] = &unk_1E8EA1BB8;
      v16 = v4;
      v17 = a2;
      dispatch_async(MEMORY[0x1E0C80D38], v15);
      v5 = 0;
      v6 = v16;
    }
    else
    {
      SBLogCommon();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        _SBXXSetWantsVolumeButtonEvents_cold_1(v6, v7, v8, v9, v10, v11, v12, v13);
      v5 = 5;
    }

  }
  else
  {
    v5 = 0;
  }

  return v5;
}

uint64_t _SBXXSetWantsLockButtonEvents(uint64_t a1, int a2, _OWORD *a3)
{
  __int128 v5;
  NSObject *v6;
  NSObject *v7;
  uint64_t v8;
  _QWORD v10[4];
  NSObject *v11;
  int v12;
  _OWORD v13[2];

  BSDispatchQueueAssertNotMain();
  v5 = a3[1];
  v13[0] = *a3;
  v13[1] = v5;
  if ((objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v13, CFSTR("com.apple.springboard.setWantsLockButtonEvents"), 0) & 1) != 0)
  {
    SBRunningApplicationForAuditToken();
    v6 = objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      v10[0] = MEMORY[0x1E0C809B0];
      v10[1] = 3221225472;
      v10[2] = ___SBXXSetWantsLockButtonEvents_block_invoke;
      v10[3] = &unk_1E8EA1BB8;
      v7 = v6;
      v11 = v7;
      v12 = a2;
      dispatch_async(MEMORY[0x1E0C80D38], v10);

    }
    v8 = 0;
  }
  else
  {
    SBLogCommon();
    v7 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR))
      _SBXXSetWantsLockButtonEvents_cold_1();
    v8 = 5;
  }

  return v8;
}

uint64_t _SBXXPresentPowerDownUI(uint64_t a1, _OWORD *a2)
{
  void *v3;
  __int128 v4;
  char v5;
  id v6;
  uint64_t v7;
  NSObject *v8;
  _OWORD v10[2];
  id v11;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isSystemApplication"))
  {
    v11 = 0;
    v4 = a2[1];
    v10[0] = *a2;
    v10[1] = v4;
    v5 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v10, CFSTR("com.apple.springboard.presentPowerDownUI"), &v11);
    v6 = v11;

    if ((v5 & 1) != 0)
    {
      dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_55);
      v7 = 0;
      goto LABEL_8;
    }
  }
  else
  {

    v6 = 0;
  }
  SBLogCommon();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    _SBXXPresentPowerDownUI_cold_1(v6);

  v7 = 5;
LABEL_8:

  return v7;
}

uint64_t _SBXXReboot(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  void *v3;
  void *v4;
  char v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  id v12;
  _OWORD v13[2];

  v2 = a2[1];
  v13[0] = *a2;
  v13[1] = v2;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v13);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  v5 = objc_msgSend(v4, "authenticateAuditToken:error:", v3, &v12);
  v6 = v12;

  if ((v5 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "processForPID:", objc_msgSend(v3, "pid"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = v8;
    BSDispatchMain();

    v10 = 0;
  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBXXReboot_cold_1(v6);
    v10 = 5;
  }

  return v10;
}

uint64_t _SBXXShutDown(uint64_t a1, _OWORD *a2)
{
  __int128 v2;
  void *v3;
  void *v4;
  char v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  id v12;
  _OWORD v13[2];

  v2 = a2[1];
  v13[0] = *a2;
  v13[1] = v2;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v13);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0;
  v5 = objc_msgSend(v4, "authenticateAuditToken:error:", v3, &v12);
  v6 = v12;

  if ((v5 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "processForPID:", objc_msgSend(v3, "pid"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v9 = v8;
    BSDispatchMain();

    v10 = 0;
  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBXXShutDown_cold_1(v6);
    v10 = 5;
  }

  return v10;
}

uint64_t _SBXXIsSystemApplication(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  void *v5;
  void *v6;
  void *v7;

  SBRunningApplicationForAuditToken();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    *a2 = objc_msgSend(v5, "isSystemApplication");
    objc_msgSend(v6, "info");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    *a3 = objc_msgSend(v7, "isProvisioningProfileValidated");

  }
  else
  {
    *a2 = 0;
    *a3 = 0;
  }

  return 0;
}

uint64_t _SBXXSetApplicationBadgeNumber(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  NSObject *v12;
  int v13;
  void *v14;
  uint64_t v15;
  id v17;
  _OWORD v18[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v18[0] = *a4;
  v18[1] = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v18);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v17);
  v11 = v17;

  if ((v10 & 1) != 0)
  {
    v12 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    v13 = BSPIDForAuditToken();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInt:", a3);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    setApplicationBadge(v12, v14, v13);

    v15 = 0;
  }
  else
  {
    SBLogCommon();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      _SBXXSetApplicationBadgeNumber_cold_1(v11);
    v15 = 5;
  }

  return v15;
}

void setApplicationBadge(void *a1, void *a2, int a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  NSObject *v9;
  void *v10;
  NSObject *v11;
  _QWORD v12[4];
  id v13;
  id v14;
  _QWORD block[4];
  id v16;
  id v17;
  uint8_t buf[4];
  int v19;
  __int16 v20;
  id v21;
  __int16 v22;
  id v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  +[SBApplicationController sharedInstanceIfExists](SBApplicationController, "sharedInstanceIfExists");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "applicationWithBundleIdentifier:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109634;
      v19 = a3;
      v20 = 2112;
      v21 = v5;
      v22 = 2114;
      v23 = v6;
      _os_log_impl(&dword_1D0540000, v9, OS_LOG_TYPE_DEFAULT, "Received request from pid %i to change application badge number of app '%@' to '%{public}@'", buf, 0x1Cu);
    }

    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __setApplicationBadge_block_invoke;
    block[3] = &unk_1E8E9E820;
    v16 = v8;
    v17 = v6;
    dispatch_async(MEMORY[0x1E0C80D38], block);

    v10 = v16;
  }
  else
  {
    v10 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CA5870]), "initWithBundleIdentifier:allowPlaceholder:error:", v5, 1, 0);
    if (objc_msgSend(v10, "isWebAppPlaceholder"))
    {
      SBLogCommon();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 67109634;
        v19 = a3;
        v20 = 2112;
        v21 = v5;
        v22 = 2114;
        v23 = v6;
        _os_log_impl(&dword_1D0540000, v11, OS_LOG_TYPE_DEFAULT, "Received request from pid %i to change application badge number of web bookmark '%@' to '%{public}@'", buf, 0x1Cu);
      }

      v12[0] = MEMORY[0x1E0C809B0];
      v12[1] = 3221225472;
      v12[2] = __setApplicationBadge_block_invoke_151;
      v12[3] = &unk_1E8E9E820;
      v13 = v5;
      v14 = v6;
      dispatch_async(MEMORY[0x1E0C80D38], v12);

    }
  }

}

uint64_t _SBXXSetApplicationBadgeString(uint64_t a1, uint64_t a2, _BYTE *a3, _OWORD *a4)
{
  __int128 v7;
  char v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  void *v12;
  int v13;
  _OWORD v15[2];
  id v16;

  BSDispatchQueueAssertNotMain();
  v16 = 0;
  v7 = a4[1];
  v15[0] = *a4;
  v15[1] = v7;
  v8 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v15, CFSTR("com.apple.springboard.setbadgestring"), &v16);
  v9 = v16;
  if ((v8 & 1) != 0)
  {
    if (*a3)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a3);
      v10 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v10 = 0;
    }
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    v13 = BSPIDForAuditToken();
    setApplicationBadge(v12, v10, v13);

    v11 = 0;
  }
  else
  {
    SBLogCommon();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      _SBXXSetApplicationBadgeString_cold_1(v9);
    v11 = 5;
  }

  return v11;
}

uint64_t _SBXXSetAllApplicationsShowProgress(uint64_t a1, int a2, _OWORD *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  int v10;
  void *v11;
  void *v12;
  __CFString *v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  __CFString *v18;
  _QWORD block[4];
  __CFString *v21;
  int v22;
  int v23;
  id v24;
  _OWORD v25[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v25[0] = *a3;
  v25[1] = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v25);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v24);
  v9 = v24;

  if ((v8 & 1) != 0)
  {
    v10 = BSPIDForAuditToken();
    BSBundleIDForAuditToken();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (v11)
    {
      v13 = v11;
    }
    else
    {
      BSProcessNameForPID();
      v16 = objc_claimAutoreleasedReturnValue();
      v17 = (void *)v16;
      v18 = CFSTR("unknown");
      if (v16)
        v18 = (__CFString *)v16;
      v13 = v18;

    }
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXSetAllApplicationsShowProgress_block_invoke;
    block[3] = &unk_1E8E9DE88;
    v21 = v13;
    v22 = v10;
    v23 = a2;
    v14 = v13;
    dispatch_async(MEMORY[0x1E0C80D38], block);

    v15 = 0;
  }
  else
  {
    SBLogCommon();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      _SBXXSetAllApplicationsShowProgress_cold_1(v9);
    v15 = 5;
  }

  return v15;
}

uint64_t _SBXXSetAllApplicationsShowSyncIndicator(uint64_t a1, int a2, _OWORD *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  _QWORD v17[4];
  __CFString *v18;
  id v19;
  int v20;
  int v21;
  id v22;
  _OWORD v23[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v23[0] = *a3;
  v23[1] = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v23);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v22);
  v9 = v22;

  if ((v8 & 1) != 0)
  {
    v10 = BSPIDForAuditToken();
    objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "processForPID:", v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    FBSProcessPrettyDescription();
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = ___SBXXSetAllApplicationsShowSyncIndicator_block_invoke;
    v17[3] = &unk_1E8EA0AF0;
    v18 = CFSTR("ShowSyncIndicator");
    v19 = v13;
    v20 = a2;
    v21 = v10;
    v14 = v13;
    dispatch_async(MEMORY[0x1E0C80D38], v17);

    v15 = 0;
  }
  else
  {
    SBLogCommon();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      _SBXXSetAllApplicationsShowSyncIndicator_cold_1(v9);
    v15 = 5;
  }

  return v15;
}

uint64_t _SBXXSetShowsOverridesForRecording(uint64_t a1, char a2, _OWORD *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  NSObject *v14;
  uint64_t v15;
  _QWORD v17[4];
  __CFString *v18;
  id v19;
  int v20;
  char v21;
  id v22;
  _OWORD v23[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v23[0] = *a3;
  v23[1] = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v23);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v22);
  v9 = v22;

  if ((v8 & 1) != 0)
  {
    v10 = BSPIDForAuditToken();
    objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "processForPID:", v10);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    FBSProcessPrettyDescription();
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = ___SBXXSetShowsOverridesForRecording_block_invoke;
    v17[3] = &unk_1E8EA2E58;
    v21 = a2;
    v18 = CFSTR("SetOverridesForRecording");
    v19 = v13;
    v20 = v10;
    v14 = v13;
    dispatch_async(MEMORY[0x1E0C80D38], v17);

    v15 = 0;
  }
  else
  {
    SBLogCommon();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      _SBXXSetShowsOverridesForRecording_cold_1(v9);
    v15 = 5;
  }

  return v15;
}

uint64_t _SBXXEnableLockScreenBundle(uint64_t a1, char a2, uint64_t a3, uint64_t a4, unsigned int a5, _OWORD *a6)
{
  void *v11;
  id v12;
  __int128 v13;
  char v14;
  NSObject *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v22;
  _QWORD v24[4];
  id v25;
  char v26;
  _OWORD v27[2];
  id v28;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v11, "isSystemApplication") & 1) != 0)
  {

    v12 = 0;
    goto LABEL_4;
  }
  v28 = 0;
  v13 = a6[1];
  v27[0] = *a6;
  v27[1] = v13;
  v14 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v27, CFSTR("com.apple.springboard.activateawayviewplugins"), &v28);
  v12 = v28;

  if ((v14 & 1) != 0)
  {
LABEL_4:
    v15 = 0;
    if (a4 && a5)
    {
      v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a4, a5, 0);
      objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v16, 0, 0, 0);
      v15 = objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {

        v15 = 0;
      }

    }
    v17 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a3);
    if (v17)
    {
      v18 = objc_alloc_init(MEMORY[0x1E0DAC230]);
      objc_msgSend(v18, "setName:", v17);
      objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "processForPID:", BSPIDForAuditToken());
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setProcess:", v20);

      objc_msgSend(v18, "setUserInfo:", v15);
      v24[0] = MEMORY[0x1E0C809B0];
      v24[1] = 3221225472;
      v24[2] = ___SBXXEnableLockScreenBundle_block_invoke;
      v24[3] = &unk_1E8E9F508;
      v26 = a2;
      v25 = v18;
      v21 = v18;
      dispatch_async(MEMORY[0x1E0C80D38], v24);

    }
    v22 = 0;
    goto LABEL_15;
  }
  SBLogCommon();
  v15 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
    _SBXXEnableLockScreenBundle_cold_1(v12);
  v22 = 5;
LABEL_15:

  return v22;
}

uint64_t _SBXXGetScreenLockStatus(uint64_t a1, _BYTE *a2, _BYTE *a3)
{
  BSDispatchQueueAssertMain();
  SBGetAggregatedLockStatus(a2, a3);
  return 0;
}

uint64_t _SBXXLockDeviceAndFeatures(uint64_t a1, char a2, char a3, _OWORD *a4)
{
  __int128 v7;
  void *v8;
  void *v9;
  char v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD block[4];
  NSObject *v16;
  char v17;
  char v18;
  id v19;
  _OWORD v20[2];

  BSDispatchQueueAssertNotMain();
  v7 = a4[1];
  v20[0] = *a4;
  v20[1] = v7;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v20);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0;
  v10 = objc_msgSend(v9, "authenticateAuditToken:error:", v8, &v19);
  v11 = v19;

  if ((v10 & 1) != 0)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXLockDeviceAndFeatures_block_invoke;
    block[3] = &unk_1E8EA1C70;
    v17 = a2;
    v16 = v8;
    v18 = a3;
    dispatch_async(MEMORY[0x1E0C80D38], block);
    v12 = 0;
    v13 = v16;
  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXLockDeviceAndFeatures_cold_1(v11);
    v12 = 5;
  }

  return v12;
}

uint64_t _SBXXShowNetworkPromptsIfNecessary(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  _QWORD v6[4];
  id v7;
  char v8;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = ___SBXXShowNetworkPromptsIfNecessary_block_invoke;
    v6[3] = &unk_1E8E9F508;
    v8 = a2;
    v7 = v3;
    dispatch_async(MEMORY[0x1E0C80D38], v6);

  }
  return 0;
}

uint64_t _SBXXGetCurrentBacklightFactor(uint64_t a1, float *a2)
{
  void *v3;
  uint64_t v4;
  float v5;

  objc_msgSend(MEMORY[0x1E0D00F58], "sharedBacklight");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "backlightState");

  v5 = 0.05;
  if (v4 != 3)
    v5 = 0.0;
  if (v4 == 2)
    v5 = 1.0;
  *a2 = v5;
  return 0;
}

uint64_t _SBXXDimScreen(uint64_t a1, int a2, _OWORD *a3)
{
  __int128 v4;
  void *v5;
  void *v6;
  char v7;
  id v8;
  char v9;
  uint64_t v10;
  void *v11;
  NSObject *v12;
  void *v13;
  void *v14;
  NSObject *v15;
  uint64_t v16;
  NSObject *v18;
  id v19;
  _OWORD v20[2];

  v4 = a3[1];
  v20[0] = *a3;
  v20[1] = v4;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v20);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0;
  v7 = objc_msgSend(v6, "authenticateAuditToken:error:", v5, &v19);
  v8 = v19;
  if ((v7 & 1) != 0)
  {

LABEL_4:
    v10 = objc_msgSend(v5, "pid");
    objc_msgSend(MEMORY[0x1E0D22920], "sharedInstance");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "processForPID:", v10);
    v12 = objc_claimAutoreleasedReturnValue();

    FBSProcessPrettyDescription();
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = v13;
    if (a2)
    {
      SBLogCommon();
      v15 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
        _SBXXDimScreen_cold_1();
    }
    else
    {
      v18 = v13;
      BSDispatchMain();
      v15 = v18;
    }

    v16 = 0;
    goto LABEL_12;
  }
  v9 = objc_msgSend(v5, "hasEntitlement:", CFSTR("com.apple.springboard.undim-screen"));

  if ((v9 & 1) != 0)
    goto LABEL_4;
  SBLogCommon();
  v12 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
    _SBXXDimScreen_cold_2(v8);
  v16 = 5;
LABEL_12:

  return v16;
}

uint64_t _SBXXGetBatteryAwakeTime(uint64_t a1, uint64_t a2, __int128 *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  _QWORD block[5];
  __int128 v15;
  __int128 v16;
  void (*v17)(uint64_t);
  id v18;
  id v19;

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v15);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v19);
  v9 = v19;

  if ((v8 & 1) != 0)
  {
    *(_QWORD *)&v15 = 0;
    *((_QWORD *)&v15 + 1) = &v15;
    *(_QWORD *)&v16 = 0x3032000000;
    *((_QWORD *)&v16 + 1) = __Block_byref_object_copy__7;
    v17 = __Block_byref_object_dispose__7;
    v18 = 0;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXGetBatteryAwakeTime_block_invoke;
    block[3] = &unk_1E8E9ED40;
    block[4] = &v15;
    dispatch_sync(MEMORY[0x1E0C80D38], block);
    v10 = *(void **)(*((_QWORD *)&v15 + 1) + 40);
    if (v10)
    {
      objc_msgSend(v10, "getCString:maxLength:encoding:", a2, 1024, 4);
      v11 = 0;
    }
    else
    {
      v11 = 5;
    }
    _Block_object_dispose(&v15, 8);

  }
  else
  {
    SBLogCommon();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      _SBXXGetBatteryAwakeTime_cold_1(v9);

    v11 = 5;
  }

  return v11;
}

void sub_1D071553C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXGetRecentSleepsWakes(uint64_t a1, _QWORD *a2, _DWORD *a3, __int128 *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD block[5];
  __int128 v16;
  __int128 v17;
  void (*v18)(uint64_t);
  id v19;
  id v20;

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v16 = *a4;
  v17 = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v16);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v20);
  v11 = v20;

  if ((v10 & 1) != 0)
  {
    *(_QWORD *)&v16 = 0;
    *((_QWORD *)&v16 + 1) = &v16;
    *(_QWORD *)&v17 = 0x3032000000;
    *((_QWORD *)&v17 + 1) = __Block_byref_object_copy__7;
    v18 = __Block_byref_object_dispose__7;
    v19 = 0;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXGetRecentSleepsWakes_block_invoke;
    block[3] = &unk_1E8E9ED40;
    block[4] = &v16;
    dispatch_sync(MEMORY[0x1E0C80D38], block);
    v12 = serializePropertyListObject(*(void **)(*((_QWORD *)&v16 + 1) + 40), a2, a3);
    _Block_object_dispose(&v16, 8);

  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXGetRecentSleepsWakes_cold_1(v11);

    v12 = 5;
  }

  return v12;
}

void sub_1D0715708(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXGetScheduledPowerEvents(uint64_t a1, _QWORD *a2, _DWORD *a3, __int128 *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD block[5];
  __int128 v16;
  __int128 v17;
  void (*v18)(uint64_t);
  id v19;
  id v20;

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v16 = *a4;
  v17 = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v16);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v20);
  v11 = v20;

  if ((v10 & 1) != 0)
  {
    *(_QWORD *)&v16 = 0;
    *((_QWORD *)&v16 + 1) = &v16;
    *(_QWORD *)&v17 = 0x3032000000;
    *((_QWORD *)&v17 + 1) = __Block_byref_object_copy__7;
    v18 = __Block_byref_object_dispose__7;
    v19 = 0;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXGetScheduledPowerEvents_block_invoke;
    block[3] = &unk_1E8E9ED40;
    block[4] = &v16;
    dispatch_sync(MEMORY[0x1E0C80D38], block);
    v12 = serializePropertyListObject(*(void **)(*((_QWORD *)&v16 + 1) + 40), a2, a3);
    _Block_object_dispose(&v16, 8);

  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXGetScheduledPowerEvents_cold_1(v11);

    v12 = 5;
  }

  return v12;
}

void sub_1D07158D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXGetBatteryUsageTimesInSeconds(uint64_t a1, float *a2, float *a3, _BYTE *a4, _BYTE *a5, _OWORD *a6)
{
  void *v11;
  __int128 v12;
  void *v13;
  char v14;
  id v15;
  float BatteryUsageTimeInSeconds;
  float BatteryStandbyTimeInSeconds;
  uint64_t v18;
  NSObject *v19;
  _QWORD block[8];
  id v22;
  _OWORD v23[2];

  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = a6[1];
  v23[0] = *a6;
  v23[1] = v12;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v23);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = 0;
  v14 = objc_msgSend(v11, "authenticateAuditToken:error:", v13, &v22);
  v15 = v22;

  if ((v14 & 1) != 0)
  {
    if (objc_msgSend(MEMORY[0x1E0CB3978], "isMainThread"))
    {
      BatteryUsageTimeInSeconds = _SBWorkspaceGetBatteryUsageTimeInSeconds();
      *a2 = BatteryUsageTimeInSeconds;
      BatteryStandbyTimeInSeconds = _SBWorkspaceGetBatteryStandbyTimeInSeconds();
      *a3 = BatteryStandbyTimeInSeconds;
      *a4 = _SBWorkspaceAreUsageTimesTrusted();
      v18 = 0;
      *a5 = _SBWorkspaceHaveChargedPartially();
    }
    else
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ___SBXXGetBatteryUsageTimesInSeconds_block_invoke;
      block[3] = &__block_descriptor_64_e5_v8__0l;
      block[4] = a2;
      block[5] = a3;
      block[6] = a4;
      block[7] = a5;
      dispatch_sync(MEMORY[0x1E0C80D38], block);
      v18 = 0;
    }
  }
  else
  {
    SBLogCommon();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
      _SBXXGetBatteryUsageTimesInSeconds_cold_1(v15);

    v18 = 5;
  }

  return v18;
}

uint64_t _SBXXAddWebClipToHomeScreen(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  __int128 v5;
  char v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  _QWORD block[4];
  NSObject *v14;
  _OWORD v15[2];
  id v16;

  BSDispatchQueueAssertNotMain();
  v16 = 0;
  v5 = a3[1];
  v15[0] = *a3;
  v15[1] = v5;
  v6 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v15, CFSTR("com.apple.springboard.addWebClipToHomeScreen"), &v16);
  v7 = v16;
  if ((v6 & 1) != 0)
  {
    v8 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    v9 = v8;
    if (v8 && !_validateWebClipIdentifier(v8))
    {
      SBLogCommon();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        _SBXXAddWebClipToHomeScreen_cold_1();
      v10 = 4;
    }
    else
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ___SBXXAddWebClipToHomeScreen_block_invoke;
      block[3] = &unk_1E8E9DED8;
      v14 = v9;
      dispatch_async(MEMORY[0x1E0C80D38], block);
      v10 = 0;
      v11 = v14;
    }

  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBXXAddWebClipToHomeScreen_cold_2(v7);
    v10 = 5;
  }

  return v10;
}

BOOL _validateWebClipIdentifier(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  _BOOL8 v4;

  v1 = a1;
  if (objc_msgSend(v1, "length") == 32)
  {
    objc_msgSend(MEMORY[0x1E0CB3500], "characterSetWithCharactersInString:", CFSTR("0123456789ABCDEF"));
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "invertedSet");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    v4 = objc_msgSend(v1, "rangeOfCharacterFromSet:", v3) == 0x7FFFFFFFFFFFFFFFLL;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

uint64_t _SBXXRemoveWebClipFromHomeScreen(uint64_t a1, uint64_t a2, _OWORD *a3)
{
  __int128 v5;
  char v6;
  id v7;
  NSObject *v8;
  NSObject *v9;
  uint64_t v10;
  NSObject *v11;
  _QWORD block[4];
  NSObject *v14;
  _OWORD v15[2];
  id v16;

  BSDispatchQueueAssertNotMain();
  v16 = 0;
  v5 = a3[1];
  v15[0] = *a3;
  v15[1] = v5;
  v6 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v15, CFSTR("com.apple.springboard.removeWebClipFromHomeScreen"), &v16);
  v7 = v16;
  if ((v6 & 1) != 0)
  {
    v8 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    v9 = v8;
    if (v8 && !_validateWebClipIdentifier(v8))
    {
      SBLogCommon();
      v11 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
        _SBXXAddWebClipToHomeScreen_cold_1();
      v10 = 4;
    }
    else
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ___SBXXRemoveWebClipFromHomeScreen_block_invoke;
      block[3] = &unk_1E8E9DED8;
      v14 = v9;
      dispatch_async(MEMORY[0x1E0C80D38], block);
      v10 = 0;
      v11 = v14;
    }

  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBXXRemoveWebClipFromHomeScreen_cold_2(v7);
    v10 = 5;
  }

  return v10;
}

uint64_t _SBXXReloadIconForIdentifier(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  _QWORD block[4];
  id v7;

  BSDispatchQueueAssertNotMain();
  v3 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
  v4 = v3;
  if (v3)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXReloadIconForIdentifier_block_invoke;
    block[3] = &unk_1E8E9DED8;
    v7 = v3;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
  return 0;
}

uint64_t _SBXXGetNowPlayingAppBundleIdentifier(uint64_t a1, uint64_t a2, __int128 *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  _QWORD block[5];
  __int128 v15;
  __int128 v16;
  void (*v17)(uint64_t);
  id v18;
  id v19;

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v15);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v19);
  v9 = v19;

  if ((v8 & 1) != 0)
  {
    *(_QWORD *)&v15 = 0;
    *((_QWORD *)&v15 + 1) = &v15;
    *(_QWORD *)&v16 = 0x3032000000;
    *((_QWORD *)&v16 + 1) = __Block_byref_object_copy__7;
    v17 = __Block_byref_object_dispose__7;
    v18 = 0;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXGetNowPlayingAppBundleIdentifier_block_invoke;
    block[3] = &unk_1E8E9ED40;
    block[4] = &v15;
    dispatch_sync(MEMORY[0x1E0C80D38], block);
    v10 = *(void **)(*((_QWORD *)&v15 + 1) + 40);
    if (v10)
      objc_msgSend(v10, "getCString:maxLength:encoding:", a2, 1024, 4);
    _Block_object_dispose(&v15, 8);

    v11 = 0;
  }
  else
  {
    SBLogCommon();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      _SBXXGetNowPlayingAppBundleIdentifier_cold_1(v9);

    v11 = 5;
  }

  return v11;
}

void sub_1D0716518(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXGetTopButtonFrames(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 *a10)
{
  void *v14;
  __int128 v15;
  void *v16;
  char v17;
  id v18;
  __int128 v19;
  int v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  _QWORD block[12];
  id v29;
  id v30;
  __int128 v31;
  __int128 v32;

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = a10[1];
  v31 = *a10;
  v32 = v15;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v31);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = 0;
  v17 = objc_msgSend(v14, "authenticateAuditToken:error:", v16, &v30);
  v18 = v30;

  if ((v17 & 1) != 0)
  {
    v29 = 0;
    v19 = a10[1];
    v31 = *a10;
    v32 = v19;
    v20 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v31, CFSTR("com.apple.springboard.topButtonFrames"), &v29);
    v21 = v29;

    if (v20)
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ___SBXXGetTopButtonFrames_block_invoke;
      block[3] = &__block_descriptor_96_e5_v8__0l;
      block[4] = a2;
      block[5] = a3;
      block[6] = a4;
      block[7] = a5;
      block[8] = a6;
      block[9] = a7;
      block[10] = a8;
      block[11] = a9;
      dispatch_sync(MEMORY[0x1E0C80D38], block);
      v22 = 0;
    }
    else
    {
      v22 = 5;
    }
    v18 = v21;
  }
  else
  {
    SBLogCommon();
    v23 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
      _SBXXGetTopButtonFrames_cold_1(v18);

    v22 = 5;
  }

  return v22;
}

uint64_t _SBXXSetApplicationNetworkFlags(uint64_t a1, char a2, char a3)
{
  void *v5;
  void *v6;
  _QWORD v8[4];
  id v9;
  char v10;
  char v11;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = ___SBXXSetApplicationNetworkFlags_block_invoke;
    v8[3] = &unk_1E8EA1C70;
    v9 = v5;
    v10 = a2;
    v11 = a3;
    dispatch_async(MEMORY[0x1E0C80D38], v8);

  }
  return 0;
}

uint64_t _SBXXGetApplicationNetworkFlags(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v5;
  void *v6;
  _QWORD block[4];
  id v9;
  uint64_t v10;
  uint64_t v11;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v5)
  {
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXGetApplicationNetworkFlags_block_invoke;
    block[3] = &unk_1E8E9DF00;
    v9 = v5;
    v10 = a2;
    v11 = a3;
    dispatch_sync(MEMORY[0x1E0C80D38], block);

  }
  return 0;
}

uint64_t _SBXXGetDisplayIdentifiersForExternalAccessoryProtocols(uint64_t a1, uint64_t a2, _QWORD *a3, _DWORD *a4, _OWORD *a5)
{
  void *v9;
  __int128 v10;
  void *v11;
  char v12;
  id v13;
  NSObject *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v28;
  _QWORD *v29;
  _DWORD *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  id v35;
  _OWORD v36[2];
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = a5[1];
  v36[0] = *a5;
  v36[1] = v10;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v36);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = 0;
  v12 = objc_msgSend(v9, "authenticateAuditToken:error:", v11, &v35);
  v13 = v35;

  if ((v12 & 1) != 0)
  {
    v14 = objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    if (v14)
    {
      v29 = a3;
      v30 = a4;
      objc_msgSend(MEMORY[0x1E0C99DE8], "array");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
      v31 = 0u;
      v32 = 0u;
      v33 = 0u;
      v34 = 0u;
      v28 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "allApplications");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v31, v37, 16);
      if (v17)
      {
        v18 = v17;
        v19 = *(_QWORD *)v32;
        do
        {
          for (i = 0; i != v18; ++i)
          {
            if (*(_QWORD *)v32 != v19)
              objc_enumerationMutation(v16);
            v21 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * i);
            objc_msgSend(v21, "info");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v22, "externalAccessoryProtocols");
            v23 = (void *)objc_claimAutoreleasedReturnValue();

            if (v23 && objc_msgSend(v23, "containsObject:", v14))
            {
              objc_msgSend(v21, "info");
              v24 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v24, "bundleIdentifier");
              v25 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v15, "addObject:", v25);

            }
          }
          v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v31, v37, 16);
        }
        while (v18);
      }

      v26 = serializePropertyListObject(v15, v29, v30);
    }
    else
    {
      v26 = 4;
    }
  }
  else
  {
    SBLogCommon();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      _SBXXGetDisplayIdentifiersForExternalAccessoryProtocols_cold_1(v13);
    v26 = 5;
  }

  return v26;
}

uint64_t _SBXXSetVoiceControlEnabled(uint64_t a1, int a2, _OWORD *a3)
{
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  __int128 v11;
  void *v12;
  void *v13;
  int v14;
  id v15;
  NSObject *v16;
  id v18;
  _OWORD v19[2];
  _QWORD v20[4];
  id v21;
  BOOL v22;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "bundleIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v20[0] = MEMORY[0x1E0C809B0];
  v20[1] = 3221225472;
  v20[2] = ___SBXXSetVoiceControlEnabled_block_invoke;
  v20[3] = &unk_1E8E9F508;
  v22 = a2 == 0;
  v7 = v6;
  v21 = v7;
  v8 = (void *)MEMORY[0x1D17E5550](v20);
  if (objc_msgSend(v5, "isSystemApplication"))
  {
    dispatch_async(MEMORY[0x1E0C80D38], v8);
    v9 = 0;
  }
  else
  {
    v10 = objc_alloc(MEMORY[0x1E0D016E0]);
    v11 = a3[1];
    v19[0] = *a3;
    v19[1] = v11;
    v12 = (void *)objc_msgSend(v10, "initWithAuditToken:", v19);
    objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = 0;
    v14 = objc_msgSend(v13, "authenticateAuditToken:forEntitlement:error:", v12, CFSTR("com.apple.springboard.setVoiceControlEnabled"), &v18);
    v15 = v18;
    if (v14)
    {
      dispatch_async(MEMORY[0x1E0C80D38], v8);
      v9 = 0;
    }
    else
    {
      SBLogCommon();
      v16 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
        _SBXXSetVoiceControlEnabled_cold_1(v12);

      v9 = 5;
    }

  }
  return v9;
}

uint64_t _SBXXSetInterceptsMenuButton(uint64_t a1, char a2, char a3)
{
  void *v5;
  _QWORD v7[4];
  id v8;
  char v9;
  char v10;

  BSDispatchQueueAssertNotMain();
  SBRunningApplicationForAuditToken();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "isSystemApplication"))
  {
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = ___SBXXSetInterceptsMenuButton_block_invoke;
    v7[3] = &unk_1E8EA1C70;
    v9 = a2;
    v8 = v5;
    v10 = a3;
    dispatch_async(MEMORY[0x1E0C80D38], v7);

  }
  return 0;
}

uint64_t _SBXXGetMediaVolume(uint64_t a1, _DWORD *a2, _OWORD *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  NSObject *v10;
  uint64_t v11;
  int v12;
  id v14;
  _OWORD v15[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v15[0] = *a3;
  v15[1] = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v15);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v14);
  v9 = v14;

  if ((v8 & 1) != 0)
  {
    objc_msgSend((id)SBApp, "volumeControl");
    v10 = objc_claimAutoreleasedReturnValue();
    -[NSObject _getMediaVolumeForIAP](v10, "_getMediaVolumeForIAP");
    v11 = 0;
    *a2 = v12;
  }
  else
  {
    SBLogCommon();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      _SBXXGetMediaVolume_cold_1(v9);
    v11 = 5;
  }

  return v11;
}

uint64_t _SBXXSetMediaVolume(float a1, uint64_t a2, _OWORD *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  _QWORD v13[4];
  float v14;
  id v15;
  _OWORD v16[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v16[0] = *a3;
  v16[1] = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v16);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v15);
  v9 = v15;

  if ((v8 & 1) != 0)
  {
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = ___SBXXSetMediaVolume_block_invoke;
    v13[3] = &__block_descriptor_36_e5_v8__0l;
    v14 = a1;
    dispatch_async(MEMORY[0x1E0C80D38], v13);
    v10 = 0;
  }
  else
  {
    SBLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      _SBXXSetMediaVolume_cold_1(v9);

    v10 = 5;
  }

  return v10;
}

uint64_t _SBXXGetHomeScreenIconMetrics(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11)
{
  _QWORD block[11];
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  BSDispatchQueueAssertNotMain();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___SBXXGetHomeScreenIconMetrics_block_invoke;
  block[3] = &__block_descriptor_120_e5_v8__0l;
  block[4] = a2;
  block[5] = a3;
  block[6] = a4;
  block[7] = a5;
  block[8] = a6;
  block[9] = a7;
  block[10] = a8;
  v20 = a9;
  v21 = a10;
  v22 = a11;
  dispatch_sync(MEMORY[0x1E0C80D38], block);
  return 0;
}

uint64_t _SBXXGetIconState(uint64_t a1, char a2, _QWORD *a3, _DWORD *a4, __int128 *a5)
{
  __int128 v9;
  char v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD v15[5];
  char v16;
  __int128 v17;
  __int128 v18;
  void (*v19)(uint64_t);
  id v20;
  id v21;

  BSDispatchQueueAssertNotMain();
  v21 = 0;
  v9 = a5[1];
  v17 = *a5;
  v18 = v9;
  v10 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v17, CFSTR("com.apple.springboard.iconState"), &v21);
  v11 = v21;
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)&v17 = 0;
    *((_QWORD *)&v17 + 1) = &v17;
    *(_QWORD *)&v18 = 0x3032000000;
    *((_QWORD *)&v18 + 1) = __Block_byref_object_copy__7;
    v19 = __Block_byref_object_dispose__7;
    v20 = 0;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = ___SBXXGetIconState_block_invoke;
    v15[3] = &unk_1E8EA2F00;
    v15[4] = &v17;
    v16 = a2;
    dispatch_sync(MEMORY[0x1E0C80D38], v15);
    v12 = serializePropertyListObject(*(void **)(*((_QWORD *)&v17 + 1) + 40), a3, a4);
    _Block_object_dispose(&v17, 8);

  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXGetIconState_cold_1(v11);

    v12 = 5;
  }

  return v12;
}

void sub_1D0717540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXGetPendingIconState(uint64_t a1, char a2, _QWORD *a3, _DWORD *a4, __int128 *a5)
{
  __int128 v9;
  char v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD v15[5];
  char v16;
  __int128 v17;
  __int128 v18;
  void (*v19)(uint64_t);
  id v20;
  id v21;

  BSDispatchQueueAssertNotMain();
  v21 = 0;
  v9 = a5[1];
  v17 = *a5;
  v18 = v9;
  v10 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v17, CFSTR("com.apple.springboard.iconState"), &v21);
  v11 = v21;
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)&v17 = 0;
    *((_QWORD *)&v17 + 1) = &v17;
    *(_QWORD *)&v18 = 0x3032000000;
    *((_QWORD *)&v18 + 1) = __Block_byref_object_copy__7;
    v19 = __Block_byref_object_dispose__7;
    v20 = 0;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = ___SBXXGetPendingIconState_block_invoke;
    v15[3] = &unk_1E8EA2F00;
    v15[4] = &v17;
    v16 = a2;
    dispatch_sync(MEMORY[0x1E0C80D38], v15);
    v12 = serializePropertyListObject(*(void **)(*((_QWORD *)&v17 + 1) + 40), a3, a4);
    _Block_object_dispose(&v17, 8);

  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXGetPendingIconState_cold_1(v11);

    v12 = 5;
  }

  return v12;
}

void sub_1D0717728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXGetFlattenedIconState(uint64_t a1, char a2, _QWORD *a3, _DWORD *a4, __int128 *a5)
{
  __int128 v9;
  char v10;
  id v11;
  uint64_t v12;
  NSObject *v13;
  _QWORD v15[5];
  char v16;
  __int128 v17;
  __int128 v18;
  void (*v19)(uint64_t);
  id v20;
  id v21;

  BSDispatchQueueAssertNotMain();
  v21 = 0;
  v9 = a5[1];
  v17 = *a5;
  v18 = v9;
  v10 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v17, CFSTR("com.apple.springboard.iconState"), &v21);
  v11 = v21;
  if ((v10 & 1) != 0)
  {
    *(_QWORD *)&v17 = 0;
    *((_QWORD *)&v17 + 1) = &v17;
    *(_QWORD *)&v18 = 0x3032000000;
    *((_QWORD *)&v18 + 1) = __Block_byref_object_copy__7;
    v19 = __Block_byref_object_dispose__7;
    v20 = 0;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = ___SBXXGetFlattenedIconState_block_invoke;
    v15[3] = &unk_1E8EA2F00;
    v15[4] = &v17;
    v16 = a2;
    dispatch_sync(MEMORY[0x1E0C80D38], v15);
    v12 = serializePropertyListObject(*(void **)(*((_QWORD *)&v17 + 1) + 40), a3, a4);
    _Block_object_dispose(&v17, 8);

  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXGetFlattenedIconState_cold_1(v11);

    v12 = 5;
  }

  return v12;
}

void sub_1D0717914(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXSetIconState(uint64_t a1, uint64_t a2, unsigned int a3, __int128 *a4)
{
  __int128 v7;
  char v8;
  id v9;
  NSObject *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD v15[4];
  id v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;
  id v20;

  BSDispatchQueueAssertNotMain();
  v20 = 0;
  v7 = a4[1];
  v18 = *a4;
  v19 = v7;
  v8 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v18, CFSTR("com.apple.springboard.iconState.mutate"), &v20);
  v9 = v20;
  if ((v8 & 1) != 0)
  {
    v10 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a2, a3, 0);
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v10, 0, 0, 0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    *(_QWORD *)&v18 = 0;
    *((_QWORD *)&v18 + 1) = &v18;
    *(_QWORD *)&v19 = 0x2020000000;
    DWORD2(v19) = 0;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = ___SBXXSetIconState_block_invoke;
    v15[3] = &unk_1E8E9DFA0;
    v16 = v11;
    v17 = &v18;
    v12 = v11;
    dispatch_sync(MEMORY[0x1E0C80D38], v15);
    v13 = *(unsigned int *)(*((_QWORD *)&v18 + 1) + 24);

    _Block_object_dispose(&v18, 8);
  }
  else
  {
    SBLogCommon();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      _SBXXSetIconState_cold_1(v9);
    v13 = 5;
  }

  return v13;
}

uint64_t _SBXXGetIconPNGData(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5, __int128 *a6)
{
  __int128 v10;
  char v11;
  id v12;
  void *v13;
  NSObject *v14;
  UIImage *v15;
  UIImage *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t);
  void *v22;
  NSObject *v23;
  __int128 *v24;
  __int128 v25;
  __int128 v26;
  void (*v27)(uint64_t);
  id v28;
  id v29;

  BSDispatchQueueAssertNotMain();
  v29 = 0;
  v10 = a6[1];
  v25 = *a6;
  v26 = v10;
  v11 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v25, CFSTR("com.apple.springboard.iconState"), &v29);
  v12 = v29;
  if ((v11 & 1) != 0)
  {
    v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3940]), "initWithUTF8String:", a2);
    *(_QWORD *)&v25 = 0;
    *((_QWORD *)&v25 + 1) = &v25;
    *(_QWORD *)&v26 = 0x3032000000;
    *((_QWORD *)&v26 + 1) = __Block_byref_object_copy__7;
    v27 = __Block_byref_object_dispose__7;
    v28 = 0;
    v19 = MEMORY[0x1E0C809B0];
    v20 = 3221225472;
    v21 = ___SBXXGetIconPNGData_block_invoke;
    v22 = &unk_1E8E9E868;
    v14 = v13;
    v23 = v14;
    v24 = &v25;
    dispatch_sync(MEMORY[0x1E0C80D38], &v19);
    v15 = *(UIImage **)(*((_QWORD *)&v25 + 1) + 40);
    if (v15)
    {
      UIImagePNGRepresentation(v15);
      v15 = (UIImage *)objc_claimAutoreleasedReturnValue();
    }
    v16 = objc_retainAutorelease(v15);
    *a4 = -[UIImage bytes](v16, "bytes", v19, v20, v21, v22);
    *a5 = -[UIImage length](v16, "length");
    if (v16)
      v17 = 0;
    else
      v17 = 5;

    _Block_object_dispose(&v25, 8);
  }
  else
  {
    SBLogCommon();
    v14 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
      _SBXXGetIconPNGData_cold_1(v12);
    v17 = 5;
  }

  return v17;
}

void sub_1D0717D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXFlashColor(float a1, float a2, float a3)
{
  void *v6;
  id v7;
  _QWORD block[4];
  id v10;

  BSDispatchQueueAssertNotMain();
  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA478]), "initWithRed:green:blue:alpha:", a1, a2, a3, 1.0);
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___SBXXFlashColor_block_invoke;
  block[3] = &unk_1E8E9DED8;
  v10 = v6;
  v7 = v6;
  dispatch_async(MEMORY[0x1E0C80D38], block);

  return 0;
}

uint64_t _SBXXProgrammaticSwitchAppGestureMoveToLeft()
{
  int v0;

  BSDispatchQueueAssertNotMain();
  v0 = BSPIDForAuditToken();
  if (v0 != getpid())
    return 5;
  dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_105);
  return 0;
}

uint64_t _SBXXProgrammaticSwitchAppGestureMoveToRight()
{
  int v0;

  BSDispatchQueueAssertNotMain();
  v0 = BSPIDForAuditToken();
  if (v0 != getpid())
    return 5;
  dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_106);
  return 0;
}

uint64_t _SBXXSetVoiceRecognitionAudioInputPaths(uint64_t a1, uint64_t a2, unsigned int a3, _OWORD *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  id v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  id v33;
  id v34;
  _OWORD v35[2];
  _BYTE v36[128];
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v35[0] = *a4;
  v35[1] = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v35);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v34);
  v11 = v34;

  if ((v10 & 1) != 0)
  {
    v12 = 0;
    if (a2 && a3)
    {
      objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytesNoCopy:length:freeWhenDone:", a2, a3, 0);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = 0;
      objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v13, 0, 0, &v33);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = v33;
      if (v15)
      {
        SBLogCommon();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          _SBXXSetVoiceRecognitionAudioInputPaths_cold_1();

      }
      v17 = objc_opt_class();
      v18 = v14;
      if (v17)
      {
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v19 = v18;
        else
          v19 = 0;
      }
      else
      {
        v19 = 0;
      }
      v22 = v19;

      v31 = 0u;
      v32 = 0u;
      v29 = 0u;
      v30 = 0u;
      v23 = v22;
      v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v29, v36, 16);
      v12 = v23;
      if (v24)
      {
        v25 = v24;
        v26 = *(_QWORD *)v30;
        while (2)
        {
          for (i = 0; i != v25; ++i)
          {
            if (*(_QWORD *)v30 != v26)
              objc_enumerationMutation(v23);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0)
            {

              v12 = 0;
              goto LABEL_26;
            }
          }
          v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v29, v36, 16);
          if (v25)
            continue;
          break;
        }
        v12 = v23;
      }
LABEL_26:

    }
    v20 = v12;
    BSDispatchMain();

    v21 = 0;
  }
  else
  {
    SBLogCommon();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      _SBXXSetVoiceRecognitionAudioInputPaths_cold_2(v11);
    v21 = 5;
  }

  return v21;
}

uint64_t _SBXXSetAssistantRecognitionStrings(uint64_t a1, uint64_t a2, unsigned int a3, _OWORD *a4)
{
  void *v7;
  __int128 v8;
  void *v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  NSObject *v16;
  uint64_t v17;
  id v18;
  void *v19;
  NSObject *v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t i;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  id v33;
  id v34;
  _OWORD v35[2];
  _BYTE v36[128];
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = a4[1];
  v35[0] = *a4;
  v35[1] = v8;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v35);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v34 = 0;
  v10 = objc_msgSend(v7, "authenticateAuditToken:error:", v9, &v34);
  v11 = v34;

  if ((v10 & 1) != 0)
  {
    v12 = 0;
    if (a2 && a3)
    {
      objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytesNoCopy:length:freeWhenDone:", a2, a3, 0);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = 0;
      objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v13, 0, 0, &v33);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = v33;
      if (v15)
      {
        SBLogCommon();
        v16 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
          _SBXXSetAssistantRecognitionStrings_cold_1();

      }
      v17 = objc_opt_class();
      v18 = v14;
      if (v17)
      {
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v19 = v18;
        else
          v19 = 0;
      }
      else
      {
        v19 = 0;
      }
      v22 = v19;

      v31 = 0u;
      v32 = 0u;
      v29 = 0u;
      v30 = 0u;
      v23 = v22;
      v24 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v29, v36, 16);
      v12 = v23;
      if (v24)
      {
        v25 = v24;
        v26 = *(_QWORD *)v30;
        while (2)
        {
          for (i = 0; i != v25; ++i)
          {
            if (*(_QWORD *)v30 != v26)
              objc_enumerationMutation(v23);
            objc_opt_class();
            if ((objc_opt_isKindOfClass() & 1) == 0)
            {

              v12 = 0;
              goto LABEL_26;
            }
          }
          v25 = objc_msgSend(v23, "countByEnumeratingWithState:objects:count:", &v29, v36, 16);
          if (v25)
            continue;
          break;
        }
        v12 = v23;
      }
LABEL_26:

    }
    v20 = v12;
    BSDispatchMain();

    v21 = 0;
  }
  else
  {
    SBLogCommon();
    v20 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
      _SBXXSetAssistantRecognitionStrings_cold_2(v11);
    v21 = 5;
  }

  return v21;
}

uint64_t _SBXXSetAlertSuppressionContexts(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  NSObject *v13;
  NSObject *v15;

  v3 = 5;
  if (a2 && a3)
  {
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a2, a3, 0);
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v4, 0, 0, 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_opt_class();
    v7 = v5;
    if (v6)
    {
      if ((objc_opt_isKindOfClass() & 1) != 0)
        v8 = v7;
      else
        v8 = 0;
    }
    else
    {
      v8 = 0;
    }
    v9 = v8;

    SBRunningApplicationForAuditToken();
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "bundleIdentifier");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v11 && v9)
    {
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObject:forKey:", v9, v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      if (_SBValidateAlertSuppressionContextInput(v12))
      {
        v15 = v12;
        BSDispatchMain();
        v3 = 0;
        v13 = v15;
      }
      else
      {
        SBLogCommon();
        v13 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
          _SBXXSetAlertSuppressionContexts_cold_1();
      }

    }
  }
  return v3;
}

BOOL _SBValidateAlertSuppressionContextInput(void *a1)
{
  id v1;
  _BOOL8 v2;
  _QWORD v4[5];
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;

  v1 = a1;
  if (v1 && (objc_opt_class(), (objc_opt_isKindOfClass() & 1) != 0))
  {
    v5 = 0;
    v6 = &v5;
    v7 = 0x2020000000;
    v8 = 0;
    v4[0] = MEMORY[0x1E0C809B0];
    v4[1] = 3221225472;
    v4[2] = ___SBValidateAlertSuppressionContextInput_block_invoke;
    v4[3] = &unk_1E8EA30E8;
    v4[4] = &v5;
    objc_msgSend(v1, "enumerateKeysAndObjectsUsingBlock:", v4);
    v2 = *((_BYTE *)v6 + 24) == 0;
    _Block_object_dispose(&v5, 8);
  }
  else
  {
    v2 = 1;
  }

  return v2;
}

void sub_1D07189E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _SBSetAlertSuppressionContextArraysBySectionIdentifierDictionary(void *a1, _OWORD *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  __int128 v18;
  void *v19;
  void *v20;
  int v21;
  id v22;
  NSObject *v23;
  id v24;
  void *v25;
  id v26;
  _QWORD v27[4];
  id v28;
  id v29;
  _QWORD v30[4];
  id v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  char v36;
  uint8_t buf[40];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  SBRunningApplicationForAuditToken();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    +[SBMainSwitcherControllerCoordinator _shim_activeSwitcherController](SBMainSwitcherControllerCoordinator, "_shim_activeSwitcherController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "layoutStatePrimaryElement");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "workspaceEntity");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "applicationSceneEntity");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "sceneHandle");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "application");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "isSameExecutableAsApplication:", v4);

    if (v11)
    {
      v33 = 0;
      v34 = &v33;
      v35 = 0x2020000000;
      v36 = 0;
      v12 = MEMORY[0x1E0C809B0];
      v30[0] = MEMORY[0x1E0C809B0];
      v30[1] = 3221225472;
      v30[2] = ___SBSetAlertSuppressionContextArraysBySectionIdentifierDictionary_block_invoke;
      v30[3] = &unk_1E8EA3110;
      v13 = v4;
      v31 = v13;
      v32 = &v33;
      objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v30);
      v14 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
      +[SBSceneManagerCoordinator sharedInstance](SBSceneManagerCoordinator, "sharedInstance");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v27[0] = v12;
      v27[1] = 3221225472;
      v27[2] = ___SBSetAlertSuppressionContextArraysBySectionIdentifierDictionary_block_invoke_2;
      v27[3] = &unk_1E8EA3138;
      v28 = v13;
      v16 = v14;
      v29 = v16;
      objc_msgSend(v15, "enumerateSceneManagersWithBlock:", v27);

      if (*((_BYTE *)v34 + 24))
      {
        v17 = objc_alloc(MEMORY[0x1E0D016E0]);
        v18 = a2[1];
        *(_OWORD *)buf = *a2;
        *(_OWORD *)&buf[16] = v18;
        v19 = (void *)objc_msgSend(v17, "initWithAuditToken:", buf);
        objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v26 = 0;
        v21 = objc_msgSend(v20, "authenticateAuditToken:forEntitlement:error:", v19, CFSTR("com.apple.springboard.alertSuppressionSectionIdentifier"), &v26);
        v22 = v26;

        if (v21)
        {
          _SBSetAlertSuppressionContextsArrayBySectionIdentifierDictionaryForApplicationSceneHandles(v3, v16);
        }
        else
        {
          SBLogCommon();
          v23 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR))
          {
            objc_msgSend(v19, "pid");
            BSProcessDescriptionForPID();
            v24 = (id)objc_claimAutoreleasedReturnValue();
            BSPrettyFunctionName();
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            *(_DWORD *)buf = 138543874;
            *(_QWORD *)&buf[4] = v24;
            *(_WORD *)&buf[12] = 2114;
            *(_QWORD *)&buf[14] = v25;
            *(_WORD *)&buf[22] = 2114;
            *(_QWORD *)&buf[24] = v22;
            _os_log_error_impl(&dword_1D0540000, v23, OS_LOG_TYPE_ERROR, "Authentication failure: %{public}@ is not permitted to call %{public}@: %{public}@", buf, 0x20u);

          }
        }

      }
      else
      {
        _SBSetAlertSuppressionContextsArrayBySectionIdentifierDictionaryForApplicationSceneHandles(v3, v16);
      }

      _Block_object_dispose(&v33, 8);
    }
  }

}

void sub_1D0718D68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXSetAlertSuppressionContextsBySectionIdentifier(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  void *v4;
  void *v5;
  NSObject *v6;
  NSObject *v8;

  v3 = 5;
  if (a2 && a3)
  {
    v4 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a2, a3, 0);
    objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v4, 0, 0, 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (_SBValidateAlertSuppressionContextInput(v5))
    {
      v8 = v5;
      BSDispatchMain();
      v3 = 0;
      v6 = v8;
    }
    else
    {
      SBLogCommon();
      v6 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
        _SBXXSetAlertSuppressionContextsBySectionIdentifier_cold_1();
    }

  }
  return v3;
}

uint64_t _SBXXSetAppIsConnectedToEA(uint64_t a1, uint64_t a2, int a3, _OWORD *a4)
{
  __int128 v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  _OWORD v12[2];

  BSDispatchQueueAssertNotMain();
  v7 = a4[1];
  v12[0] = *a4;
  v12[1] = v7;
  if ((objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v12, CFSTR("com.apple.springboard.appusingexternalaccessory"), 0) & 1) != 0)
  {
    +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "applicationWithPid:", a2);
    v9 = objc_claimAutoreleasedReturnValue();

    if (v9)
      -[NSObject setConnectedToExternalAccessory:](v9, "setConnectedToExternalAccessory:", a3 != 0);
    v10 = 0;
  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBXXSetAppIsConnectedToEA_cold_1();
    v10 = 5;
  }

  return v10;
}

id generateOrRetrieveMappedWallpaperPreview(void *a1, uint64_t a2, unsigned int a3, double a4)
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  double v14;
  double v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  void *v20;
  double v21;
  void *v22;
  uint64_t v23;
  void *v24;
  void *v25;
  _QWORD block[4];
  id v28;
  id v29;
  uint64_t *v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;
  uint64_t v39;

  v7 = a1;
  +[SBWallpaperPreviewSnapshotCache sharedInstance](SBWallpaperPreviewSnapshotCache, "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)objc_opt_class(), "cacheKeyForVariant:options:scalingWidth:", a2, a3, a4);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "mappedWallpaperPreviewForKey:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v10)
  {
    v33 = 0;
    v34 = &v33;
    v35 = 0x3032000000;
    v36 = __Block_byref_object_copy__7;
    v37 = __Block_byref_object_dispose__7;
    v38 = 0;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __generateOrRetrieveMappedWallpaperPreview_block_invoke;
    block[3] = &unk_1E8EA2F68;
    v11 = v8;
    v28 = v11;
    v31 = a2;
    v32 = a3;
    v29 = v7;
    v30 = &v33;
    dispatch_sync(MEMORY[0x1E0C80D38], block);
    v12 = (void *)MEMORY[0x1D17E5334]();
    v13 = (void *)v34[5];
    objc_msgSend(v13, "size");
    v15 = v14;
    v16 = v13;
    objc_msgSend(MEMORY[0x1E0D228F8], "mainConfiguration");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "pointScale");
    v19 = v18;

    objc_msgSend(v16, "sbf_scaleImage:", a4 / v15);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "scale");
    if (v21 != v19)
    {
      v39 = 0;
      SBFCreateIOSurfaceForImage();
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CEA638], "sbf_imageWithIOSurface:scale:orientation:", v22, 0, v19);
      v23 = objc_claimAutoreleasedReturnValue();

      if (v39)
        CGImageBlockSetRelease();

      v20 = (void *)v23;
    }

    objc_autoreleasePoolPop(v12);
    v24 = (void *)v34[5];
    v34[5] = 0;

    v25 = (void *)MEMORY[0x1D17E5334]();
    objc_msgSend(v11, "mappedWallpaperPreviewForScaledSnapshot:variant:cacheKey:", v20, a2, v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_autoreleasePoolPop(v25);

    _Block_object_dispose(&v33, 8);
  }

  return v10;
}

void sub_1D0719238(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __generateOrRetrieveMappedWallpaperPreview_block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  objc_msgSend(*(id *)(a1 + 32), "snapshotProviderForVariant:options:wallpaperImage:", *(_QWORD *)(a1 + 56), *(unsigned int *)(a1 + 64), *(_QWORD *)(a1 + 40));
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v2 = (void *)MEMORY[0x1D17E5334]();
  objc_msgSend(v6, "snapshot");
  v3 = objc_claimAutoreleasedReturnValue();
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  v5 = *(void **)(v4 + 40);
  *(_QWORD *)(v4 + 40) = v3;

  objc_autoreleasePoolPop(v2);
}

uint64_t _SBXXGetWallpaperPreviewSurface(double a1, uint64_t a2, unsigned int a3, unsigned int a4, uint64_t a5, mach_port_t *a6, _OWORD *a7)
{
  void *v13;
  void *v14;
  __int128 v15;
  void *v16;
  char v17;
  id v18;
  NSObject *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void *v25;
  __IOSurface *v26;
  NSObject *v27;
  void *v28;
  dispatch_time_t v29;
  _QWORD block[5];
  uint64_t v32;
  id v33;
  _QWORD v34[5];
  id v35;
  uint8_t buf[16];
  __int128 v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssertNotMain();
  v34[0] = 0;
  v34[1] = v34;
  v34[2] = 0x3032000000;
  v34[3] = __Block_byref_object_copy__7;
  v34[4] = __Block_byref_object_dispose__7;
  v35 = (id)os_transaction_create();
  if ((_os_feature_enabled_impl() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0DA9DD0], "sharedInstance");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "warmup");

  }
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = a7[1];
  *(_OWORD *)buf = *a7;
  v37 = v15;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", buf);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v33 = 0;
  v17 = objc_msgSend(v14, "authenticateAuditToken:error:", v16, &v33);
  v18 = v33;

  if ((v17 & 1) != 0)
  {
    v19 = objc_msgSend(objc_alloc(MEMORY[0x1E0CBBEA0]), "initWithMachPort:", a5);
    if (v19)
    {
      v20 = (void *)MEMORY[0x1E0CEA638];
      objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "scale");
      objc_msgSend(v20, "sbf_imageWithIOSurface:scale:orientation:", v19, 0);
      v22 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v22 = 0;
    }
    generateOrRetrieveMappedWallpaperPreview(v22, a3, a4, a1);
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    if (v25)
    {
      v32 = 0;
      SBFCreateIOSurfaceForImage();
      v26 = (__IOSurface *)objc_claimAutoreleasedReturnValue();
      SBLogWallpaper();
      v27 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
      {
        PBUIStringForWallpaperVariant();
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        *(_QWORD *)&buf[4] = v28;
        _os_log_impl(&dword_1D0540000, v27, OS_LOG_TYPE_DEFAULT, "GETTING WALLPAPER PREVIEW SURFACE FOR VARIANT: %{public}@", buf, 0xCu);

      }
      *a6 = IOSurfaceCreateMachPort(v26);
      if (v32)
        CGImageBlockSetRelease();

    }
    v29 = dispatch_time(0, 10000000000);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXGetWallpaperPreviewSurface_block_invoke;
    block[3] = &unk_1E8E9ED40;
    block[4] = v34;
    dispatch_after(v29, MEMORY[0x1E0C80D38], block);
    if (*a6)
      v24 = 0;
    else
      v24 = 5;

  }
  else
  {
    SBLogCommon();
    v19 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v18, "localizedDescription");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      _SBXXGetWallpaperPreviewSurface_cold_1(v23, (uint64_t)buf, v19);
    }
    v24 = 5;
  }

  _Block_object_dispose(v34, 8);
  return v24;
}

void sub_1D0719610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXGetWallpaperPreview(double a1, uint64_t a2, unsigned int a3, unsigned int a4, uint64_t a5, unsigned int a6, _QWORD *a7, _DWORD *a8, _OWORD *a9)
{
  void *v16;
  void *v17;
  __int128 v18;
  void *v19;
  char v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  NSObject *v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  NSObject *v31;
  void *v32;
  id v35;
  uint8_t buf[16];
  __int128 v37;
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssertNotMain();
  v16 = (void *)os_transaction_create();
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = a9[1];
  *(_OWORD *)buf = *a9;
  v37 = v18;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", buf);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v35 = 0;
  v20 = objc_msgSend(v17, "authenticateAuditToken:error:", v19, &v35);
  v21 = v35;

  if ((v20 & 1) != 0)
  {
    if (a6)
    {
      v22 = (void *)MEMORY[0x1D17E5334]();
      v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a5, a6, 0);
      objc_msgSend(MEMORY[0x1E0CEA638], "bs_secureDecodedFromData:", v23);
      v24 = (void *)objc_claimAutoreleasedReturnValue();

      objc_autoreleasePoolPop(v22);
    }
    else
    {
      v24 = 0;
    }
    generateOrRetrieveMappedWallpaperPreview(v24, a3, a4, a1);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    if (v27)
    {
      v28 = v27;
      objc_msgSend(v27, "sbf_CGImageBackedImage");
      v29 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v29, "bs_secureEncoded");
      v30 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
      *a7 = objc_msgSend(v30, "bytes");
      *a8 = objc_msgSend(v30, "length");
      SBLogWallpaper();
      v31 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v31, OS_LOG_TYPE_DEFAULT))
      {
        PBUIStringForWallpaperVariant();
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        *(_DWORD *)buf = 138543362;
        *(_QWORD *)&buf[4] = v32;
        _os_log_impl(&dword_1D0540000, v31, OS_LOG_TYPE_DEFAULT, "GETTING WALLPAPER PREVIEW FOR VARIANT: %{public}@", buf, 0xCu);

      }
    }

    if (*a7)
      v26 = 0;
    else
      v26 = 5;
    v16 = v24;
  }
  else
  {
    SBLogCommon();
    v25 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v25, OS_LOG_TYPE_ERROR))
      _SBXXGetWallpaperPreview_cold_1(v21);

    v26 = 5;
  }

  return v26;
}

uint64_t _SBXXSetWallpaperOptionsForLocations(float a1, float a2, float a3, float a4, float a5, float a6, double a7, uint64_t a8, char a9, char a10, char a11, uint64_t a12, char a13, uint64_t a14, _OWORD *a15)
{
  void *v29;
  __int128 v30;
  void *v31;
  char v32;
  id v33;
  uint64_t v34;
  NSObject *v35;
  _QWORD v37[7];
  float v38;
  float v39;
  float v40;
  float v41;
  float v42;
  float v43;
  char v44;
  char v45;
  char v46;
  char v47;
  id v48;
  _OWORD v49[3];

  BSDispatchQueueAssertNotMain();
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = a15[1];
  v49[0] = *a15;
  v49[1] = v30;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v49);
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v48 = 0;
  v32 = objc_msgSend(v29, "authenticateAuditToken:error:", v31, &v48);
  v33 = v48;

  if ((v32 & 1) != 0)
  {
    v37[0] = MEMORY[0x1E0C809B0];
    v37[1] = 3221225472;
    v37[2] = ___SBXXSetWallpaperOptionsForLocations_block_invoke;
    v37[3] = &__block_descriptor_84_e5_v8__0l;
    v37[4] = a12;
    v38 = a3;
    v39 = a4;
    v40 = a5;
    v41 = a6;
    v42 = a1;
    v43 = a2;
    v44 = a9;
    v45 = a10;
    v46 = a11;
    *(double *)&v37[5] = a7;
    v37[6] = a14;
    v47 = a13;
    dispatch_sync(MEMORY[0x1E0C80D38], v37);
    v34 = 0;
  }
  else
  {
    SBLogCommon();
    v35 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v35, OS_LOG_TYPE_ERROR))
      _SBXXSetWallpaperOptionsForLocations_cold_1(v33);

    v34 = 5;
  }

  return v34;
}

uint64_t _SBXXActivateAssistantWithContext(uint64_t a1, _OWORD *a2, int a3, uint64_t a4, unsigned int a5)
{
  __int128 v9;
  NSObject *v10;
  NSObject *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  NSObject *v26;
  void *v27;
  void *v28;
  NSObject *v29;
  const char *v30;
  _OWORD v32[2];
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssertNotMain();
  v9 = a2[1];
  v32[0] = *a2;
  v32[1] = v9;
  if ((objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v32, CFSTR("com.apple.springboard.activateassistant"), 0) & 1) != 0)
  {
    SBLogCommon();
    v10 = objc_claimAutoreleasedReturnValue();
    v11 = v10;
    if (a3 == 1)
    {
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        LODWORD(v32[0]) = 136315138;
        *(_QWORD *)((char *)v32 + 4) = "kern_return_t _SBXXActivateAssistantWithContext(mach_port_t, audit_token_t, uint3"
                                       "2_t, sbs_property_list_data_t, mach_msg_type_number_t)";
        _os_log_impl(&dword_1D0540000, v11, OS_LOG_TYPE_DEFAULT, "%s is deprecated. Please move to using the SiriActivation.framework directly instead as SpringBoard can only make a best effort guess at the activation parameters.", (uint8_t *)v32, 0xCu);
      }

      v12 = 0;
      v11 = 0;
      if (!a4 || !a5)
      {
LABEL_18:
        v22 = *MEMORY[0x1E0DAB578];
        -[NSObject objectForKey:](v11, "objectForKey:", *MEMORY[0x1E0DAB578]);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v23)
        {
          SBLogCommon();
          v26 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v26, OS_LOG_TYPE_INFO))
          {
            LODWORD(v32[0]) = 138543362;
            *(_QWORD *)((char *)v32 + 4) = 0;
            _os_log_impl(&dword_1D0540000, v26, OS_LOG_TYPE_INFO, "Attempt to active assistant by proxy for an application for car, but the corresponding application wasn't found: %{public}@", (uint8_t *)v32, 0xCu);
          }
          goto LABEL_32;
        }
        -[NSObject removeObjectForKey:](v11, "removeObjectForKey:", v22);
        +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "applicationWithBundleIdentifier:", v23);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v25, "info");
        v26 = objc_claimAutoreleasedReturnValue();

        if (v26)
        {
          -[NSObject setObject:forKey:](v11, "setObject:forKey:", v23, *MEMORY[0x1E0DAC3D8]);
          -[NSObject carPlayDeclaration](v26, "carPlayDeclaration");
          v27 = (void *)objc_claimAutoreleasedReturnValue();

          if (v27)
          {
            -[NSObject setObject:forKey:](v11, "setObject:forKey:", MEMORY[0x1E0C9AAB0], *MEMORY[0x1E0DAC3E0]);
            if (_SBXXActivateAssistantWithContext_onceToken != -1)
              dispatch_once(&_SBXXActivateAssistantWithContext_onceToken, &__block_literal_global_119);
            v28 = (void *)_SBXXActivateAssistantWithContext___directActionSource;
            v29 = objc_msgSend(objc_alloc(MEMORY[0x1E0D97820]), "initWithPayload:", v11);
            objc_msgSend(v28, "activateWithContext:", v29);
            goto LABEL_31;
          }
          SBLogCommon();
          v29 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
          {
            LODWORD(v32[0]) = 138543362;
            *(_QWORD *)((char *)v32 + 4) = v23;
            v30 = "Attempt to active assistant by proxy for an application for car, but the corresponding declaration was"
                  "n't found: %{public}@";
            goto LABEL_30;
          }
        }
        else
        {
          SBLogCommon();
          v29 = objc_claimAutoreleasedReturnValue();
          if (os_log_type_enabled(v29, OS_LOG_TYPE_INFO))
          {
            LODWORD(v32[0]) = 138543362;
            *(_QWORD *)((char *)v32 + 4) = v23;
            v30 = "Attempt to active assistant by proxy for an application for car, but the corresponding application was"
                  "n't found: %{public}@";
LABEL_30:
            _os_log_impl(&dword_1D0540000, v29, OS_LOG_TYPE_INFO, v30, (uint8_t *)v32, 0xCu);
          }
        }
LABEL_31:

LABEL_32:
        v21 = 0;
        goto LABEL_33;
      }
      v13 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a4, a5, 0);
      objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v13, 0, 0, 0);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) != 0)
      {
        if (v12)
        {
          objc_msgSend(MEMORY[0x1E0C99E08], "dictionaryWithDictionary:", v12);
          v11 = objc_claimAutoreleasedReturnValue();
LABEL_17:

          goto LABEL_18;
        }
      }
      else
      {

        v12 = 0;
      }
      v11 = 0;
      goto LABEL_17;
    }
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      _SBXXActivateAssistantWithContext_cold_1(v11, v14, v15, v16, v17, v18, v19, v20);
  }
  else
  {
    SBLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      _SBXXActivateAssistantWithContext_cold_2();
  }
  v21 = 5;
LABEL_33:

  return v21;
}

uint64_t _SBXXSetProceduralWallpaper(uint64_t a1, const char *a2, char a3, uint64_t a4, unsigned int a5, _OWORD *a6)
{
  void *v11;
  __int128 v12;
  void *v13;
  char v14;
  id v15;
  void *v16;
  NSObject *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  id v21;
  _QWORD v23[4];
  id v24;
  id v25;
  char v26;
  id v27;
  _OWORD v28[2];

  BSDispatchQueueAssertNotMain();
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = a6[1];
  v28[0] = *a6;
  v28[1] = v12;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v28);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v27 = 0;
  v14 = objc_msgSend(v11, "authenticateAuditToken:error:", v13, &v27);
  v15 = v27;

  if ((v14 & 1) != 0)
  {
    if (!strncmp("com.apple.springboard.unset-procedural-wallpaper", a2, 0x31uLL))
    {
      v16 = 0;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a2);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v19 = 0;
    if (a4 && a5)
    {
      v20 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a4, a5, 0);
      objc_msgSend(MEMORY[0x1E0CB38B0], "propertyListWithData:options:format:error:", v20, 0, 0, 0);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_opt_class();
      if ((objc_opt_isKindOfClass() & 1) == 0)
      {

        v19 = 0;
      }

    }
    v23[0] = MEMORY[0x1E0C809B0];
    v23[1] = 3221225472;
    v23[2] = ___SBXXSetProceduralWallpaper_block_invoke;
    v23[3] = &unk_1E8E9EE00;
    v24 = v16;
    v25 = v19;
    v26 = a3;
    v21 = v19;
    v17 = v16;
    dispatch_async(MEMORY[0x1E0C80D38], v23);

    v18 = 0;
  }
  else
  {
    SBLogCommon();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
      _SBXXSetProceduralWallpaper_cold_1(v15);
    v18 = 5;
  }

  return v18;
}

uint64_t _SBXXSetWallpaperImageForLocations(float a1, float a2, float a3, float a4, float a5, float a6, double a7, uint64_t a8, uint64_t a9, unsigned int a10, char a11, char a12, char a13, char a14, uint64_t a15, char a16, char a17, char a18, uint64_t a19, int a20,uint64_t a21,_OWORD *a22)
{
  void *v34;
  void *v35;
  __int128 v36;
  void *v37;
  char v38;
  id v39;
  void *v40;
  void *v41;
  NSObject *v42;
  uint64_t v43;
  _QWORD block[4];
  NSObject *v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  uint64_t v52;
  float v53;
  float v54;
  float v55;
  float v56;
  float v57;
  int v58;
  float v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;
  id v67;
  _OWORD v68[3];

  BSDispatchQueueAssertNotMain();
  v34 = (void *)os_transaction_create();
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v36 = a22[1];
  v68[0] = *a22;
  v68[1] = v36;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v68);
  v37 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = 0;
  v38 = objc_msgSend(v35, "authenticateAuditToken:error:", v37, &v67);
  v39 = v67;

  if ((v38 & 1) != 0)
  {
    if (!a10)
    {
      v43 = 0;
      goto LABEL_10;
    }
    v40 = (void *)MEMORY[0x1D17E5334]();
    v41 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99D50]), "initWithBytesNoCopy:length:freeWhenDone:", a9, a10, 0);
    objc_msgSend(MEMORY[0x1E0CEA638], "bs_secureDecodedFromData:", v41);
    v42 = objc_claimAutoreleasedReturnValue();

    objc_autoreleasePoolPop(v40);
    if (v42)
    {
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ___SBXXSetWallpaperImageForLocations_block_invoke;
      block[3] = &unk_1E8EA2FD0;
      v53 = a3;
      v54 = a4;
      v55 = a5;
      v56 = a6;
      v57 = a2;
      v49 = a15;
      v50 = a19;
      v58 = a20;
      v59 = a1;
      v60 = a14;
      v42 = v42;
      v48 = v42;
      v61 = a13;
      v62 = a12;
      v51 = a7;
      v63 = a16;
      v64 = a17;
      v52 = a21;
      v65 = a11;
      v66 = a18;
      dispatch_sync(MEMORY[0x1E0C80D38], block);

    }
    v43 = 0;
  }
  else
  {
    SBLogCommon();
    v42 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v42, OS_LOG_TYPE_ERROR))
      _SBXXSetWallpaperImageForLocations_cold_1(v39);
    v43 = 5;
  }

LABEL_10:
  return v43;
}

uint64_t _SBXXSetWallpaperImageSurfaceForLocations(float a1, float a2, float a3, float a4, float a5, float a6, double a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, uint64_t a13, int a14, char a15, char a16, char a17, char a18, uint64_t a19, char a20,char a21,char a22,uint64_t a23,int a24,uint64_t a25,_OWORD *a26)
{
  void *v39;
  __int128 v40;
  void *v41;
  char v42;
  id v43;
  uint64_t v44;
  dispatch_time_t v45;
  NSObject *v46;
  uint64_t v47;
  void *v48;
  _QWORD v51[5];
  _QWORD block[10];
  int v53;
  int v54;
  int v55;
  int v56;
  float v57;
  float v58;
  float v59;
  float v60;
  float v61;
  int v62;
  float v63;
  char v64;
  char v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  id v71;
  _QWORD v72[5];
  id v73;
  _OWORD v74[2];
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  BSDispatchQueueAssertNotMain();
  v72[0] = 0;
  v72[1] = v72;
  v72[2] = 0x3032000000;
  v72[3] = __Block_byref_object_copy__7;
  v72[4] = __Block_byref_object_dispose__7;
  v73 = (id)os_transaction_create();
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  v40 = a26[1];
  v74[0] = *a26;
  v74[1] = v40;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v74);
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  v71 = 0;
  v42 = objc_msgSend(v39, "authenticateAuditToken:error:", v41, &v71);
  v43 = v71;

  if ((v42 & 1) != 0)
  {
    v44 = MEMORY[0x1E0C809B0];
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXSetWallpaperImageSurfaceForLocations_block_invoke;
    block[3] = &__block_descriptor_131_e5_v8__0l;
    v53 = a9;
    v54 = a10;
    block[4] = a11;
    block[5] = a13;
    v55 = a12;
    v56 = a14;
    v57 = a3;
    v58 = a4;
    v59 = a5;
    v60 = a6;
    v61 = a2;
    block[6] = a19;
    block[7] = a23;
    v62 = a24;
    v63 = a1;
    v64 = a18;
    v65 = a17;
    v66 = a16;
    *(double *)&block[8] = a7;
    v67 = a20;
    v68 = a21;
    block[9] = a25;
    v69 = a15;
    v70 = a22;
    dispatch_sync(MEMORY[0x1E0C80D38], block);
    BSMachSendRightRelease();
    BSMachSendRightRelease();
    v45 = dispatch_time(0, 10000000000);
    v51[0] = v44;
    v51[1] = 3221225472;
    v51[2] = ___SBXXSetWallpaperImageSurfaceForLocations_block_invoke_125;
    v51[3] = &unk_1E8E9ED40;
    v51[4] = v72;
    v46 = MEMORY[0x1E0C80D38];
    dispatch_after(v45, MEMORY[0x1E0C80D38], v51);
    v47 = 0;
  }
  else
  {
    SBLogCommon();
    v46 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v46, OS_LOG_TYPE_ERROR))
    {
      objc_msgSend(v43, "localizedDescription");
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      _SBXXSetWallpaperImageSurfaceForLocations_cold_1(v48, (uint64_t)v74, v46);
    }
    v47 = 5;
  }

  _Block_object_dispose(v72, 8);
  return v47;
}

void sub_1D071AAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXClearWallpaperAsset(uint64_t a1, _BYTE *a2, _OWORD *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  id v13;
  _OWORD v14[2];

  BSDispatchQueueAssertNotMain();
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v14[0] = *a3;
  v14[1] = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v14);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v13);
  v9 = v13;

  if ((v8 & 1) != 0)
  {
    dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_126);
    v10 = 0;
    if (a2)
      *a2 = 1;
  }
  else
  {
    SBLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      _SBXXClearWallpaperAsset_cold_1(v9);

    v10 = 5;
  }

  return v10;
}

uint64_t _SBXXGetWallpaperOptions(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, _QWORD *a13, _DWORD *a14, __int128 *a15)
{
  void *v21;
  __int128 v22;
  void *v23;
  char v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  _QWORD block[15];
  char v31;
  __int128 v32;
  __int128 v33;
  void (*v34)(uint64_t);
  id v35;
  id v36[2];

  BSDispatchQueueAssertNotMain();
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = a15[1];
  v32 = *a15;
  v33 = v22;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v32);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v36[0] = 0;
  v24 = objc_msgSend(v21, "authenticateAuditToken:error:", v23, v36);
  v25 = v36[0];

  if ((v24 & 1) != 0)
  {
    *(_QWORD *)&v32 = 0;
    *((_QWORD *)&v32 + 1) = &v32;
    *(_QWORD *)&v33 = 0x3032000000;
    *((_QWORD *)&v33 + 1) = __Block_byref_object_copy__7;
    v34 = __Block_byref_object_dispose__7;
    v35 = 0;
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXGetWallpaperOptions_block_invoke;
    block[3] = &unk_1E8EA3038;
    v31 = a2;
    block[4] = &v32;
    block[5] = a3;
    block[6] = a4;
    block[7] = a9;
    block[8] = a5;
    block[9] = a6;
    block[10] = a7;
    block[11] = a8;
    block[12] = a10;
    block[13] = a11;
    block[14] = a12;
    dispatch_sync(MEMORY[0x1E0C80D38], block);
    serializePropertyListObject(*(void **)(*((_QWORD *)&v32 + 1) + 40), a13, a14);
    _Block_object_dispose(&v32, 8);

    v26 = 0;
  }
  else
  {
    SBLogCommon();
    v27 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v27, OS_LOG_TYPE_ERROR))
      _SBXXGetWallpaperOptions_cold_1(v25);

    v26 = 5;
  }

  return v26;
}

void sub_1D071B1D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXSetWallpaperVariant(uint64_t a1, unsigned int a2, _BYTE *a3, __int128 *a4)
{
  __int128 v7;
  id v8;
  __int128 v9;
  char v10;
  NSObject *v11;
  NSObject *v12;
  uint64_t v13;
  _QWORD block[4];
  NSObject *v16;
  char v17;
  id v18;
  __int128 v19;
  __int128 v20;

  BSDispatchQueueAssertNotMain();
  v7 = a4[1];
  v19 = *a4;
  v20 = v7;
  v8 = 0;
  if ((objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v19, CFSTR("com.apple.springboard.wallpaper-access"), 0) & 1) != 0|| (v18 = 0, v9 = a4[1], v19 = *a4, v20 = v9, v10 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", &v19, CFSTR("com.apple.springboard.setWallpaperVariant"), &v18), v8 = v18, (v10 & 1) != 0))
  {
    +[SBWallpaperController sharedInstance](SBWallpaperController, "sharedInstance");
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = v11;
    if (a2 <= 1)
    {
      if (a3)
        *a3 = 1;
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = ___SBXXSetWallpaperVariant_block_invoke;
      block[3] = &unk_1E8E9F508;
      v12 = v11;
      v16 = v12;
      v17 = a2;
      dispatch_async(MEMORY[0x1E0C80D38], block);

    }
    v13 = 0;
  }
  else
  {
    SBLogCommon();
    v12 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
      _SBXXSetWallpaperVariant_cold_1(v8);
    v13 = 5;
  }

  return v13;
}

uint64_t _SBXXGetWallpaperLegibilitySettings(uint64_t a1, char a2, _QWORD *a3, _DWORD *a4, __int128 *a5)
{
  void *v9;
  __int128 v10;
  void *v11;
  char v12;
  id v13;
  uint64_t v14;
  void *v15;
  NSObject *v16;
  uint64_t v17;
  _QWORD v19[5];
  char v20;
  __int128 v21;
  __int128 v22;
  void (*v23)(uint64_t);
  id v24;
  id v25;

  BSDispatchQueueAssertNotMain();
  +[SBWallpaperController accessAuthenticator](SBWallpaperController, "accessAuthenticator");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = a5[1];
  v21 = *a5;
  v22 = v10;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", &v21);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0;
  v12 = objc_msgSend(v9, "authenticateAuditToken:error:", v11, &v25);
  v13 = v25;

  if ((v12 & 1) != 0)
  {
    *(_QWORD *)&v21 = 0;
    *((_QWORD *)&v21 + 1) = &v21;
    *(_QWORD *)&v22 = 0x3032000000;
    *((_QWORD *)&v22 + 1) = __Block_byref_object_copy__7;
    v23 = __Block_byref_object_dispose__7;
    v24 = 0;
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = ___SBXXGetWallpaperLegibilitySettings_block_invoke;
    v19[3] = &unk_1E8EA2F00;
    v19[4] = &v21;
    v20 = a2;
    dispatch_sync(MEMORY[0x1E0C80D38], v19);
    v14 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 40);
    if (v14)
    {
      objc_msgSend(MEMORY[0x1E0CB36F8], "archivedDataWithRootObject:requiringSecureCoding:error:", v14, 1, 0);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      if (!a3)
        goto LABEL_4;
    }
    else
    {
      v15 = 0;
      if (!a3)
      {
LABEL_4:
        if (!a4)
          goto LABEL_12;
        goto LABEL_11;
      }
    }
    *a3 = objc_msgSend(objc_retainAutorelease(v15), "bytes");
    if (!a4)
    {
LABEL_12:

      _Block_object_dispose(&v21, 8);
      v17 = 0;
      goto LABEL_13;
    }
LABEL_11:
    *a4 = objc_msgSend(v15, "length");
    goto LABEL_12;
  }
  SBLogCommon();
  v16 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_ERROR))
    _SBXXGetWallpaperLegibilitySettings_cold_1(v13);

  v17 = 5;
LABEL_13:

  return v17;
}

void sub_1D071B668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBXXAddAlertItemsSuppressionAssertion(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  __int128 v7;
  char v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  NSObject *v13;
  uint64_t v14;
  _QWORD v16[4];
  id v17;
  id v18;
  _OWORD v19[2];
  id v20;

  BSDispatchQueueAssertNotMain();
  v20 = 0;
  v7 = a4[1];
  v19[0] = *a4;
  v19[1] = v7;
  v8 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v19, CFSTR("com.apple.springboard.alertItemsSuppression"), &v20);
  v9 = v20;
  if ((v8 & 1) != 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a2);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D017A0]), "initWithPort:", a3);
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = ___SBXXAddAlertItemsSuppressionAssertion_block_invoke;
    v16[3] = &unk_1E8E9E820;
    v17 = v11;
    v18 = v10;
    v12 = v10;
    v13 = v11;
    dispatch_async(MEMORY[0x1E0C80D38], v16);

    v14 = 0;
  }
  else
  {
    SBLogCommon();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      _SBXXAddAlertItemsSuppressionAssertion_cold_1(v9);
    v14 = 5;
  }

  return v14;
}

uint64_t _SBXXTagTouchForTypingMenu(uint64_t a1, int a2)
{
  _QWORD block[4];
  int v5;

  BSDispatchQueueAssertNotMain();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___SBXXTagTouchForTypingMenu_block_invoke;
  block[3] = &__block_descriptor_36_e5_v8__0l;
  v5 = a2;
  dispatch_async(MEMORY[0x1E0C80D38], block);
  return 0;
}

uint64_t _SBXXAcquireFocusPreventingFullScreenPresentationAssertion(uint64_t a1, uint64_t a2, int a3)
{
  void *v5;
  void *v6;
  id v7;
  _QWORD v9[4];
  id v10;
  int v11;

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA2F8], "_systemAnimationFenceExemptQueue");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ___SBXXAcquireFocusPreventingFullScreenPresentationAssertion_block_invoke;
  v9[3] = &unk_1E8EA1BB8;
  v10 = v5;
  v11 = a3;
  v7 = v5;
  objc_msgSend(v6, "performAsync:", v9);

  return 0;
}

uint64_t _SBXXIsReachabilityEnabled(uint64_t a1, uint64_t a2)
{
  _QWORD block[5];

  BSDispatchQueueAssertNotMain();
  block[0] = MEMORY[0x1E0C809B0];
  block[1] = 3221225472;
  block[2] = ___SBXXIsReachabilityEnabled_block_invoke;
  block[3] = &__block_descriptor_40_e5_v8__0l;
  block[4] = a2;
  dispatch_sync(MEMORY[0x1E0C80D38], block);
  return 0;
}

uint64_t _SBXXSetReachabilityEnabled(uint64_t a1, char a2, _OWORD *a3)
{
  void *v5;
  __int128 v6;
  void *v7;
  char v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  _QWORD v13[4];
  char v14;
  id v15;
  _OWORD v16[2];

  BSDispatchQueueAssertNotMain();
  objc_msgSend(MEMORY[0x1E0D22990], "sharedSystemClientAuthenticator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = a3[1];
  v16[0] = *a3;
  v16[1] = v6;
  objc_msgSend(MEMORY[0x1E0D016E0], "tokenFromAuditToken:", v16);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0;
  v8 = objc_msgSend(v5, "authenticateAuditToken:error:", v7, &v15);
  v9 = v15;

  if ((v8 & 1) != 0)
  {
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = ___SBXXSetReachabilityEnabled_block_invoke;
    v13[3] = &__block_descriptor_33_e5_v8__0l;
    v14 = a2;
    dispatch_async(MEMORY[0x1E0C80D38], v13);
    v10 = 0;
  }
  else
  {
    SBLogCommon();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
      _SBXXSetReachabilityEnabled_cold_1(v9);

    v10 = 5;
  }

  return v10;
}

uint64_t _SBXXOverrideDisplayedDate(uint64_t a1, _BYTE *a2, _OWORD *a3)
{
  __int128 v5;
  char v6;
  id v7;
  NSObject *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  _QWORD block[4];
  id v16;
  _OWORD v17[2];
  id v18;

  BSDispatchQueueAssertNotMain();
  v18 = 0;
  v5 = a3[1];
  v17[0] = *a3;
  v17[1] = v5;
  v6 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v17, CFSTR("com.apple.springboard.overrideDisplayedDate"), &v18);
  v7 = v18;
  if ((v6 & 1) != 0)
  {
    if (*a2)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a2);
      v8 = objc_claimAutoreleasedReturnValue();
      if (v8)
      {
        v9 = objc_alloc_init(MEMORY[0x1E0CB3578]);
        objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setLocale:", v10);

        objc_msgSend(v9, "setDateFormat:", CFSTR("yyyy'-'MM'-'dd' 'HH':'mm':'ss"));
        objc_msgSend(v9, "dateFromString:", v8);
        v11 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_10:
        block[0] = MEMORY[0x1E0C809B0];
        block[1] = 3221225472;
        block[2] = ___SBXXOverrideDisplayedDate_block_invoke;
        block[3] = &unk_1E8E9DED8;
        v16 = v11;
        v13 = v11;
        dispatch_async(MEMORY[0x1E0C80D38], block);

        v12 = 0;
        goto LABEL_11;
      }
    }
    else
    {
      v8 = 0;
    }
    v11 = 0;
    goto LABEL_10;
  }
  SBLogCommon();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    _SBXXOverrideDisplayedDate_cold_1(v7);
  v12 = 5;
LABEL_11:

  return v12;
}

uint64_t _SBXXSetIdleText(uint64_t a1, _BYTE *a2, _OWORD *a3)
{
  __int128 v5;
  char v6;
  id v7;
  void *v8;
  NSObject *v9;
  uint64_t v10;
  _QWORD block[4];
  id v13;
  _OWORD v14[2];
  id v15;

  BSDispatchQueueAssertNotMain();
  v15 = 0;
  v5 = a3[1];
  v14[0] = *a3;
  v14[1] = v5;
  v6 = objc_msgSend(MEMORY[0x1E0D22990], "authenticateAuditToken:forEntitlement:error:", v14, CFSTR("com.apple.springboard.setIdleText"), &v15);
  v7 = v15;
  if ((v6 & 1) != 0)
  {
    if (*a2)
    {
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", a2);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v8 = 0;
    }
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = ___SBXXSetIdleText_block_invoke;
    block[3] = &unk_1E8E9DED8;
    v13 = v8;
    v9 = v8;
    dispatch_async(MEMORY[0x1E0C80D38], block);

    v10 = 0;
  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBXXSetIdleText_cold_1(v7);
    v10 = 5;
  }

  return v10;
}

uint64_t __setApplicationBadge_block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setBadgeValue:", *(_QWORD *)(a1 + 40));
}

void __setApplicationBadge_block_invoke_151(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;

  +[SBIconController sharedInstance](SBIconController, "sharedInstance");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "model");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bookmarkIconForWebClipPlaceholderBundleIdentifier:", *(_QWORD *)(a1 + 32));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_opt_self();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "bookmark");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  SBSafeCast((uint64_t)v4, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "setBadgeValue:", *(_QWORD *)(a1 + 40));
}

void _SBSetAlertSuppressionContextsArrayBySectionIdentifierDictionaryForApplicationSceneHandles(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _QWORD v16[4];
  id v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = ___SBSetAlertSuppressionContextsArrayBySectionIdentifierDictionaryForApplicationSceneHandles_block_invoke;
  v16[3] = &unk_1E8EA3160;
  v6 = v5;
  v17 = v6;
  objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v16);
  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v7 = v4;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v18, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v13;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v13 != v10)
          objc_enumerationMutation(v7);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v11++), "setAlertSuppressionContextsBySectionIdentifier:", v6, (_QWORD)v12);
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v12, v18, 16);
    }
    while (v9);
  }

}

const __CFString *SBStringFromRemovalSwitcherModifierPhase(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Possible");
  else
    return off_1E8EA3180[a1 - 1];
}

void sub_1D071DC9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D071E338(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D071E504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

Class __getAAUIProfilePictureStoreClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  if (!AppleAccountUILibraryCore_frameworkLibrary)
  {
    v4 = xmmword_1E8EA32B0;
    v5 = 0;
    AppleAccountUILibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!AppleAccountUILibraryCore_frameworkLibrary)
    __getAAUIProfilePictureStoreClass_block_invoke_cold_1(&v3);
  result = objc_getClass("AAUIProfilePictureStore");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getAAUIProfilePictureStoreClass_block_invoke_cold_2();
  getAAUIProfilePictureStoreClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

const __CFString *NSStringFromWalletPrearmFailureRecognitionReason(uint64_t a1)
{
  if (a1)
    return CFSTR("SinglePress");
  else
    return CFSTR("Timeout");
}

void sub_1D07227C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07243BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07256C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromDodgingModifierEventResponseType(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Generic");
  if (a1 == 1)
    v1 = CFSTR("Invalidation");
  if (a1 == 2)
    return CFSTR("ScheduleEvent");
  else
    return v1;
}

const __CFString *SBStringFromSwitcherDropModifierEventPhase(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Possible");
  else
    return off_1E8EA3488[a1 - 1];
}

void sub_1D0728DD0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 128));
  _Unwind_Resume(a1);
}

void sub_1D072900C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0729210(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D07292EC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0729554(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0729760(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D072985C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0729938(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D07299C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0729A40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0729BC4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0729DA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  id *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1D0729F9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D072A160(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D072A4A8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D072A6A4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D072A850(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D072C318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D072E0A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D072E688(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D072F324(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D072FC70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0730470(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0730C24(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0730CEC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D073327C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void SBEmitEvent(uint64_t a1)
{
  id v2;

  objc_msgSend(MEMORY[0x1E0DA9D78], "sharedInstance");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "emitEvent:", a1);

}

void sub_1D07357BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v20);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0736BA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0737310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBPBAppLayoutListReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  SBPBAppLayout *v17;
  uint64_t result;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        break;
      if ((v10 >> 3) == 1)
      {
        v17 = objc_alloc_init(SBPBAppLayout);
        -[SBPBAppLayoutList addApplayouts:](a1, v17);
        if (!PBReaderPlaceMark() || (SBPBAppLayoutReadFrom((uint64_t)v17, a2) & 1) == 0)
        {

          return 0;
        }
        PBReaderRecallMark();

      }
      else
      {
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
      }
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

id NSURLForCameraActivationWithCaptureConfiguration(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB39D8]), "initWithName:value:", CFSTR("capturedevice"), v3);
    objc_msgSend(v5, "addObject:", v6);

  }
  if (v4)
  {
    v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB39D8]), "initWithName:value:", CFSTR("capturemode"), v4);
    objc_msgSend(v5, "addObject:", v7);

  }
  if (objc_msgSend(v5, "count"))
  {
    objc_msgSend(CFSTR("camera://"), "stringByAppendingString:", CFSTR("configuration"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3998]), "initWithString:", v8);
    objc_msgSend(v9, "setQueryItems:", v5);
    objc_msgSend(v9, "URL");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", CFSTR("camera://"));
    v10 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v10;
}

void sub_1D073B338(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D073B45C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D073B548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D073C214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id safeStringValue(void *a1)
{
  id v1;
  id v2;

  v1 = a1;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v2 = v1;
  else
    v2 = 0;

  return v2;
}

void sub_1D0742BE0(_Unwind_Exception *a1)
{
  objc_end_catch();
  _Unwind_Resume(a1);
}

uint64_t safeIntValue(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v2 = objc_msgSend(v1, "intValue");
  else
    v2 = 0;

  return v2;
}

uint64_t isSafePlistTrueBoolean(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if (v1 && (objc_opt_respondsToSelector() & 1) != 0)
    v2 = objc_msgSend(v1, "BOOLValue");
  else
    v2 = 0;

  return v2;
}

void sub_1D0744AEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_1D07457B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id safeArrayOfIntNumberValue(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  if ((objc_opt_respondsToSelector() & 1) != 0)
  {
    v15[0] = v1;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v15, 1);
    v2 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
    {
LABEL_15:
      v3 = 0;
      goto LABEL_16;
    }
    v12 = 0u;
    v13 = 0u;
    v10 = 0u;
    v11 = 0u;
    v4 = v1;
    v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v5)
    {
      v6 = v5;
      v7 = *(_QWORD *)v11;
      while (2)
      {
        v8 = 0;
        do
        {
          if (*(_QWORD *)v11 != v7)
            objc_enumerationMutation(v4);
          if ((objc_opt_respondsToSelector() & 1) == 0)
          {

            goto LABEL_15;
          }
          ++v8;
        }
        while (v6 != v8);
        v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
        if (v6)
          continue;
        break;
      }
    }

    v2 = v4;
  }
  v3 = v2;
LABEL_16:

  return v3;
}

void sub_1D074801C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1D074815C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0749A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBStringForActiveDisplayTrackingMethodology(uint64_t a1)
{
  if (a1)
    return CFSTR("touch + pointer");
  else
    return CFSTR("keyboard");
}

void sub_1D074B600(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D074B788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D074EC54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D074FF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D075008C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07501A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D075083C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Unwind_Resume(a1);
}

void sub_1D0750BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D075131C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1D0751EB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0751FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07522C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0752424(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBDisplayItemTypeFromLegacyType(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("App")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("Homescreen")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("RemoteAlert")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SwitcherService")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("ContinuityApp")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("WebApp")) & 1) != 0)
  {
    v2 = 5;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("PlusControl")))
  {
    v2 = 6;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

__CFString *SBLegacyDisplayItemTypeFromType(unint64_t a1)
{
  if (a1 > 7)
    return 0;
  else
    return off_1E8EA42C0[a1];
}

uint64_t typeFromProtobufDisplayItemType(int a1)
{
  uint64_t v1;

  v1 = (a1 - 1);
  if (v1 < 5)
    return v1 + 1;
  else
    return 0;
}

uint64_t protobufDisplayItemTypeFromType(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  switch(a1)
  {
    case 1:
      return 1;
    case 2:
      return 2;
    case 3:
      return 3;
    case 4:
      return 4;
    case 5:
      return 5;
    case 6:
      SBLogAppSwitcher();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        protobufDisplayItemTypeFromType_cold_2(v2, v3, v4, v5, v6, v7, v8, v9);
      goto LABEL_13;
    case 7:
      SBLogAppSwitcher();
      v2 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
        protobufDisplayItemTypeFromType_cold_1(v2, v10, v11, v12, v13, v14, v15, v16);
LABEL_13:

      exit(0);
    default:
      return 0;
  }
}

const __CFString *SBStringFromTransitionPhase(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Possible");
  else
    return off_1E8EA4300[a1 - 1];
}

const __CFString *SBSAStringFromElementViewInteractionSource(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("[Invalid]");
  else
    return off_1E8EA4340[a1];
}

void sub_1D075B364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0760A6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0763E9C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D0764D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0765140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1D0765A6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0765C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0765E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0765FEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0766244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07680E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0768D48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D076B580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D076F07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0770D34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0771DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1D07767E4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D0778B98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0778DA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL SBPresentationObservationTokenStateDismissedOrDismissing(unint64_t a1)
{
  return a1 < 2;
}

BOOL SBPresentationObservationTokenStatePresentedOrPresenting(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFELL) == 2;
}

void sub_1D07795D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D077AACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077AC44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077AD68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077B02C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077B19C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077B2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077B40C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077B524(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077B640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077B7A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077CDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077E7EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_1D077EC10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077FA18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBRemoteTransientOverlaySessionManagerIsValidSessionForLookupOptions(void *a1, char a2)
{
  id v3;
  void *v4;
  uint64_t v5;

  v3 = a1;
  v4 = v3;
  if (v3)
  {
    if (objc_msgSend(v3, "isValid") && !objc_msgSend(v4, "isPendingInvalidation"))
      v5 = 1;
    else
      v5 = a2 & 1;
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

void sub_1D077FC70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D077FE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D078009C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07802C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D078221C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0783A48(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void _WiFiDeviceClientPowerCallback(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  SBLogStatusBarish();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D0540000, v3, OS_LOG_TYPE_DEFAULT, "[SBWiFiManager] _WiFiDeviceClientPowerCallback", v4, 2u);
  }

  objc_msgSend(v2, "_powerStateDidChange");
}

void _WiFiDeviceClientExtendedLinkCallback(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v3 = a3;
  SBLogStatusBarish();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1D0540000, v4, OS_LOG_TYPE_DEFAULT, "[SBWiFiManager] _WiFiDeviceClientExtendedLinkCallback", v5, 2u);
  }

  objc_msgSend(v3, "_linkDidChange");
}

void _WiFiManagerClientServerRestartedCallback(uint64_t a1, void *a2)
{
  id v2;
  NSObject *v3;
  uint8_t v4[16];

  v2 = a2;
  SBLogStatusBarish();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v4 = 0;
    _os_log_impl(&dword_1D0540000, v3, OS_LOG_TYPE_DEFAULT, "[SBWiFiManager] _WiFiManagerClientServerRestartedCallback", v4, 2u);
  }

  objc_msgSend(v2, "_updateDevicePresence");
  objc_msgSend(v2, "_powerStateDidChange");

}

void _WiFiManagerDeviceAttachCallback(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;
  NSObject *v4;
  uint8_t v5[16];

  v3 = a3;
  SBLogStatusBarish();
  v4 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1D0540000, v4, OS_LOG_TYPE_DEFAULT, "[SBWiFiManager] _WiFiManagerDeviceAttachCallback", v5, 2u);
  }

  objc_msgSend(v3, "_updateWiFiDevice");
}

uint64_t lockdownActivationChanged(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_resetActivationState");
}

void sub_1D0786C00(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSBExtensionType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x13)
    return CFSTR("(unknown)");
  else
    return off_1E8EA5870[a1 - 1];
}

void sub_1D078A1FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D078C968(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D078D0D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D078E224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D079008C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

id SBAllParticipantRolesAndHints_ForTestingOnly()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  id v11;
  _QWORD v13[57];
  _QWORD v14[8];

  v14[7] = *MEMORY[0x1E0C80C00];
  v0 = (void *)MEMORY[0x1E0C99E60];
  v1 = *MEMORY[0x1E0CEC360];
  v14[0] = *MEMORY[0x1E0CEC358];
  v14[1] = v1;
  v2 = *MEMORY[0x1E0CEC378];
  v14[2] = *MEMORY[0x1E0CEC368];
  v14[3] = v2;
  v3 = *MEMORY[0x1E0CEC380];
  v14[4] = *MEMORY[0x1E0CEC370];
  v14[5] = v3;
  v14[6] = *MEMORY[0x1E0CEC388];
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v14, 7);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithArray:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = (void *)MEMORY[0x1E0C99E20];
  v13[0] = CFSTR("SBTraitsParticipantRoleAlert");
  v13[1] = CFSTR("SBTraitsParticipantRoleAmbient");
  v13[2] = CFSTR("SBTraitsParticipantRoleAssistant");
  v13[3] = CFSTR("SBTraitsParticipantRoleAssistantAccessory");
  v13[4] = CFSTR("SBTraitsParticipantRoleAXAssistiveTouchUI");
  v13[5] = CFSTR("SBTraitsParticipantRoleAXFullKeyboardUI");
  v13[6] = CFSTR("SBTraitsParticipantRoleAXVoiceControlUI");
  v13[7] = CFSTR("SBTraitsParticipantRoleAXUIServer");
  v13[8] = CFSTR("SBTraitsParticipantRoleBanner");
  v13[9] = CFSTR("SBTraitsParticipantRoleBiometricMonitorUI");
  v13[10] = CFSTR("SBTraitsParticipantRoleHardwareButtonBezelEffectsCoordinator");
  v13[11] = CFSTR("SBTraitsParticipantRoleHardwareButtonBezelEffectsCoordinatorHinting");
  v13[12] = CFSTR("SBTraitsParticipantRoleCommandTab");
  v13[13] = CFSTR("SBTraitsParticipantRoleControlCenter");
  v13[14] = CFSTR("SBTraitsParticipantRoleCoverSheet");
  v13[15] = CFSTR("SBTraitsParticipantRoleCoverSheetCamera");
  v13[16] = CFSTR("SBTraitsParticipantRoleCoverSheetPosterSwitcher");
  v13[17] = CFSTR("SBTraitsParticipantRoleCoverSheetHomeScreenOverlay");
  v13[18] = CFSTR("SBTraitsParticipantRoleDeviceApplicationSceneViewOverlay");
  v13[19] = CFSTR("SBTraitsParticipantRoleDruid");
  v13[20] = CFSTR("SBTraitsParticipantRoleEnsembleUI");
  v13[21] = CFSTR("SBTraitsParticipantRoleEyedropperUI");
  v13[22] = CFSTR("SBTraitsParticipantRoleFloatingDock");
  v13[23] = CFSTR("SBTraitsParticipantRoleFloatingKeyboard");
  v13[24] = CFSTR("SBTraitsParticipantRoleSystemUIScene");
  v13[25] = CFSTR("SBTraitsParticipantRoleHomeScreen");
  v13[26] = CFSTR("SBTraitsParticipantRoleHomeScreenDimming");
  v13[27] = CFSTR("SBTraitsParticipantRoleHUD");
  v13[28] = CFSTR("SBTraitsParticipantRoleInputUI");
  v13[29] = CFSTR("SBTraitsParticipantRoleInternalPerfPowerHUD");
  v13[30] = CFSTR("SBTraitsParticipantRoleInteractiveScreenshotGesture");
  v13[31] = CFSTR("SBTraitsParticipantRoleLiveTranscriptionUI");
  v13[32] = CFSTR("SBTraitsParticipantRoleLoginBootToSetupAppZoomInAnimation");
  v13[33] = CFSTR("SBTraitsParticipantRoleLogWindowRecipe");
  v13[34] = CFSTR("SBTraitsParticipantRoleMedusaDrag");
  v13[35] = CFSTR("SBTraitsParticipantRoleModifierTimeline");
  v13[36] = CFSTR("SBTraitsParticipantRoleMomentsUI");
  v13[37] = CFSTR("SBTraitsParticipantRoleOverlayUI");
  v13[38] = CFSTR("SBTraitsParticipantRoleSubterraneanOverlayUI");
  v13[39] = CFSTR("SBTraitsParticipantRolePerfPowerHUD");
  v13[40] = CFSTR("SBTraitsParticipantRolePictureInPicture");
  v13[41] = CFSTR("SBTraitsParticipantRolePipelineManager");
  v13[42] = CFSTR("SBTraitsParticipantRoleReachability");
  v13[43] = CFSTR("SBTraitsParticipantRoleRecordingIndicator");
  v13[44] = CFSTR("SBTraitsParticipantRoleRenderOverlayRecipe");
  v13[45] = CFSTR("SBTraitsParticipantRoleScreenFlash");
  v13[46] = CFSTR("SBTraitsParticipantRoleSecureApp");
  v13[47] = CFSTR("SBTraitsParticipantRoleStartupFadeAnimation");
  v13[48] = CFSTR("SBTraitsParticipantRoleStatusBar");
  v13[49] = CFSTR("SBTraitsParticipantRoleSwitcherLiveOverlay");
  v13[50] = CFSTR("SBTraitsParticipantRoleSwitcherPublisher");
  v13[51] = CFSTR("SBTraitsParticipantRoleSwitcherRaw");
  v13[52] = CFSTR("SBTraitsParticipantRoleTransientOverlay");
  v13[53] = CFSTR("SBTraitsParticipantRoleTransientOverlayBackground");
  v13[54] = CFSTR("SBTraitsParticipantRoleWallpaperExternal");
  v13[55] = CFSTR("SBTraitsParticipantRoleWindowedAccessory");
  v13[56] = CFSTR("SBTraitsParticipantRoleSystemAperture");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v13, 57);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setWithArray:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "userInterfaceIdiom");

  if ((v10 & 0xFFFFFFFFFFFFFFFBLL) == 1 && _os_feature_enabled_impl())
    objc_msgSend(v8, "addObject:", CFSTR("SBTraitsParticipantRoleWallpaper"));
  v11 = objc_alloc_init(MEMORY[0x1E0C99E20]);
  objc_msgSend(v11, "unionSet:", v5);
  objc_msgSend(v11, "unionSet:", v8);

  return v11;
}

void sub_1D0794624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0796704(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_1D079A7AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1D079B780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D079C774(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07A0858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;
  id *v23;
  uint64_t v24;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v24 - 128));
  _Unwind_Resume(a1);
}

uint64_t _SBHMultitaskingApplicationSupportedShortcutActionMaskFromSBSMask(uint64_t a1)
{
  uint64_t v1;

  v1 = 0;
  switch(a1)
  {
    case 1:
    case 2:
    case 4:
    case 8:
      v1 = a1;
      break;
    case 3:
    case 5:
    case 6:
    case 7:
      return v1;
    default:
      if (a1 == 16)
        v1 = 16;
      else
        v1 = 0;
      break;
  }
  return v1;
}

id _SBUnhideProtectedAppAlertControllerFor(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  __CFString *v8;
  NSObject *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  _QWORD v26[4];
  id v27;
  id v28;

  v3 = a1;
  v4 = a2;
  v5 = (void *)MEMORY[0x1E0CA5870];
  objc_msgSend(v3, "bundleIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "bundleRecordWithBundleIdentifier:allowPlaceholder:error:", v6, 1, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    objc_msgSend(v7, "localizedName");
    v8 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    SBLogCommon();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      _SBUnhideProtectedAppAlertControllerFor_cold_1(v3, v9);

    v8 = CFSTR("app");
  }
  v10 = (void *)MEMORY[0x1E0CB3940];
  APGetDescriptionFor();
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "stringWithFormat:", v11, v8);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = (void *)MEMORY[0x1E0CEA2E8];
  APGetDescriptionFor();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "alertControllerWithTitle:message:preferredStyle:", v12, v14, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v15, "setPreferredStyle:", 1);
  v16 = (void *)MEMORY[0x1E0CEA2E0];
  APGetDescriptionFor();
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = ___SBUnhideProtectedAppAlertControllerFor_block_invoke;
  v26[3] = &unk_1E8E9E918;
  v27 = v3;
  v28 = v4;
  v18 = v4;
  v19 = v3;
  objc_msgSend(v16, "actionWithTitle:style:handler:", v17, 2, v26);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  v21 = (void *)MEMORY[0x1E0CEA2E0];
  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "localizedStringForKey:value:table:", CFSTR("CANCEL"), &stru_1E8EC7EC0, CFSTR("SpringBoard"));
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "actionWithTitle:style:handler:", v23, 1, 0);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v15, "addAction:", v20);
  objc_msgSend(v15, "addAction:", v24);

  return v15;
}

void sub_1D07A30E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id *location, uint64_t a16, id *a17, id *a18, id *a19, id *a20,id *a21,id *a22,id *a23)
{
  id *v23;
  id *v24;
  id *v25;
  uint64_t v26;

  objc_destroyWeak(v23);
  objc_destroyWeak(v25);
  objc_destroyWeak(v24);
  objc_destroyWeak(location);
  objc_destroyWeak(a17);
  objc_destroyWeak(a18);
  objc_destroyWeak(a19);
  objc_destroyWeak(a20);
  objc_destroyWeak(a21);
  objc_destroyWeak(a22);
  objc_destroyWeak(a23);
  objc_destroyWeak((id *)(v26 - 128));
  _Unwind_Resume(a1);
}

void sub_1D07A5178(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07A6BF4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1D07A9D30(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D07A9E18(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void _SBWidgetSuggestionDidChange()
{
  NSObject *v0;
  uint8_t v1[16];

  SBLogCommon();
  v0 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v0, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v1 = 0;
    _os_log_impl(&dword_1D0540000, v0, OS_LOG_TYPE_DEFAULT, "Home screen TV activity", v1, 2u);
  }

}

void sub_1D07AB298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07AB8D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07AC05C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07B2848(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_1D07B32FC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D07B6020(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_sync_exit(v16);
  _Unwind_Resume(a1);
}

void sub_1D07B6104(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D07BA1A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  uint64_t v12;
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v12 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D07BBFA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07BC838(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D07BC950(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D07BCC1C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

__CFString *_StringFromPreferencesStackSignals(uint64_t a1)
{
  char v1;
  id v2;
  id v3;
  void (**v4)(_QWORD);
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;
  _QWORD v9[4];
  id v10;

  if (a1)
  {
    v1 = a1;
    v2 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = ___StringFromPreferencesStackSignals_block_invoke;
    v9[3] = &unk_1E8E9DED8;
    v3 = v2;
    v10 = v3;
    v4 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v9);
    if ((v1 & 1) != 0)
      objc_msgSend(v3, "appendString:", CFSTR("collisionThresholdReached"));
    if ((v1 & 2) != 0)
    {
      v4[2](v4);
      objc_msgSend(v3, "appendString:", CFSTR("steadyStateReached"));
    }
    if (objc_msgSend(v3, "length"))
      v5 = (__CFString *)v3;
    else
      v5 = 0;

  }
  else
  {
    v5 = CFSTR("none");
  }
  if (v5)
    v6 = v5;
  else
    v6 = CFSTR("[invalid]");
  v7 = v6;

  return v7;
}

__CFString *_StringFromPreferencesStackFlags(uint64_t a1)
{
  char v1;
  id v2;
  id v3;
  void (**v4)(_QWORD);
  __CFString *v5;
  __CFString *v6;
  __CFString *v7;
  _QWORD v9[4];
  id v10;

  if (a1)
  {
    v1 = a1;
    v2 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v9[2] = ___StringFromPreferencesStackFlags_block_invoke;
    v9[3] = &unk_1E8E9DED8;
    v3 = v2;
    v10 = v3;
    v4 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v9);
    if ((v1 & 1) != 0)
      objc_msgSend(v3, "appendString:", CFSTR("containerPressActive"));
    if ((v1 & 2) != 0)
    {
      v4[2](v4);
      objc_msgSend(v3, "appendString:", CFSTR("containerResizeHysteresisSurpassed"));
    }
    if (objc_msgSend(v3, "length"))
      v5 = (__CFString *)v3;
    else
      v5 = 0;

  }
  else
  {
    v5 = CFSTR("none");
  }
  if (v5)
    v6 = v5;
  else
    v6 = CFSTR("[invalid]");
  v7 = v6;

  return v7;
}

void sub_1D07C2918(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D07C3428(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_1D07C3FA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07C4BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Unwind_Resume(a1);
}

void sub_1D07C5A24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07C7240(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _SBWindowingLayoutFormatErrorWithCode(unint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v7;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB35C8];
  v7 = *MEMORY[0x1E0CB2D50];
  SBWindowingLayoutFormatParserErrorDescription(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, &v7, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "errorWithDomain:code:userInfo:", CFSTR("SBWindowingLayoutFormatParserErrorDomain"), a1, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t isValidSymbol(int a1)
{
  void *v1;
  unint64_t v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  unsigned __int16 v7;

  HIDWORD(v2) = a1;
  LODWORD(v2) = (a1 << 24) - 738197504;
  v3 = (v2 >> 25);
  v4 = 1;
  v5 = (1 << v3) & 0x381;
  if (v3 > 9 || v5 == 0)
  {
    v7 = a1;
    objc_msgSend(MEMORY[0x1E0CB3500], "whitespaceAndNewlineCharacterSet");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v1, "characterIsMember:", v7);
  }
  if (v3 > 9 || v5 == 0)

  return v4;
}

void SBWindowingLayoutFormatParserErrorDescription(unint64_t a1)
{
  void *v2;
  void *v3;

  if (a1 >= 7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString * _Nonnull SBWindowingLayoutFormatParserErrorDescription(SBWindowingLayoutFormatParserErrorCode)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBWindowingLayoutFormatParser.m"), 245, CFSTR("Unsupported error: %d"), a1);

  }
}

void sub_1D07C93E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07CBFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07CD428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07CFCC0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D07D1064(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07D1780(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07D2598(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location, id a17)
{
  id *v17;
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a17);
  _Unwind_Resume(a1);
}

void sub_1D07D4444(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07D4730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07D4A04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromDodgingModifierEventType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("Insertion");
  else
    return off_1E8EA6F88[a1 - 1];
}

uint64_t _SBSOSTriggerMechanismDidChangeNotification(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_sosTriggerMechanismDidChange");
}

void sub_1D07D84E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBEntityRemovalDefaultFluidAnimationSettings()
{
  void *v0;
  CAFrameRateRange v2;

  v0 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DA9E08]), "initWithDefaultValues");
  objc_msgSend(v0, "setBehaviorType:", 2);
  objc_msgSend(v0, "setDampingRatio:", 1.0);
  objc_msgSend(v0, "setResponse:", 0.456999987);
  objc_msgSend(v0, "setTrackingDampingRatio:", 1.0);
  objc_msgSend(v0, "setTrackingResponse:", 0.064);
  v2 = CAFrameRateRangeMake(80.0, 120.0, 120.0);
  objc_msgSend(v0, "setFrameRateRange:highFrameRateReason:", 1114113, *(double *)&v2.minimum, *(double *)&v2.maximum, *(double *)&v2.preferred);
  return v0;
}

void sub_1D07DBA70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07DC094(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07DF4D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,char a47)
{
  _Block_object_dispose(&a47, 8);
  _Unwind_Resume(a1);
}

void ___backgroundQueue_collectAndLogFromContext_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  const __CFString *v7;
  void *v8;
  id v9;
  const __CFString *v10;
  __CFString *v11;

  v7 = a3;
  v8 = *(void **)(a1 + 32);
  v9 = a4;
  objc_msgSend(v8, "appendString:", a2);
  objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR(": "));
  if (v7)
    v10 = v7;
  else
    v10 = CFSTR("Unnamed");
  v11 = (__CFString *)v10;
  objc_msgSend(*(id *)(a1 + 32), "appendString:");
  objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR("\t"));
  objc_msgSend(*(id *)(a1 + 32), "appendString:", v9);

  objc_msgSend(*(id *)(a1 + 32), "appendString:", CFSTR("\n"));
}

uint64_t ___backgroundQueue_collectAndLogFromContext_block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "writeData:", *(_QWORD *)(a1 + 32));
}

void _arrayCallback_collectOneTask(const __CFNumber *a1, const __CFArray *a2, void *a3)
{
  id v5;
  __CFString *v6;
  int valuePtr;
  size_t v8;
  int v9[2];
  int v10;
  int v11;
  _OWORD v12[40];
  uint64_t v13;
  CFRange v14;

  v13 = *MEMORY[0x1E0C80C00];
  memset(v12, 0, 512);
  valuePtr = 0;
  CFNumberGetValue(a1, kCFNumberIntType, &valuePtr);
  v8 = 648;
  *(_QWORD *)v9 = 0xE00000001;
  v10 = 1;
  v11 = valuePtr;
  if (sysctl(v9, 4u, v12, &v8, 0, 0) != -1)
  {
    v5 = a3;
    if (!v8
      || (objc_msgSend(MEMORY[0x1E0CB3940], "stringWithCString:encoding:", (char *)&v12[15] + 3, 4),
          (v6 = (__CFString *)objc_claimAutoreleasedReturnValue()) == 0))
    {
      v6 = CFSTR("<unknown process>");
    }
    objc_msgSend(v5, "setProcessName:", v6);
    v14.length = CFArrayGetCount(a2);
    v14.location = 0;
    CFArrayApplyFunction(a2, v14, (CFArrayApplierFunction)_arrayCallback_collectOnePowerAssertion, v5);

  }
}

void _arrayCallback_collectOnePowerAssertion(const void *a1, void *a2)
{
  CFTypeID v4;
  id v5;
  const void *Value;
  const __CFNumber *v7;
  const void *v8;
  const void *v9;
  void *v10;
  void *v11;
  void *v12;
  __CFString *v13;
  void *v14;
  void *v15;
  void (**v16)(_QWORD, _QWORD, _QWORD, _QWORD);
  void *v17;
  int valuePtr;

  v4 = CFGetTypeID(a1);
  if (v4 == CFDictionaryGetTypeID())
  {
    valuePtr = 0;
    v5 = a2;
    Value = CFDictionaryGetValue((CFDictionaryRef)a1, CFSTR("AssertType"));
    v7 = (const __CFNumber *)CFDictionaryGetValue((CFDictionaryRef)a1, CFSTR("AssertLevel"));
    CFNumberGetValue(v7, kCFNumberSInt32Type, &valuePtr);
    v8 = CFDictionaryGetValue((CFDictionaryRef)a1, CFSTR("AssertStartWhen"));
    if (v8)
    {
      v9 = v8;
      objc_msgSend(MEMORY[0x1E0C99D68], "date");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "timeIntervalSinceDate:", v9);

      v11 = (void *)MEMORY[0x1E0CB3940];
      BSFormattedTimeFromSeconds();
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "stringWithFormat:", CFSTR(", held for %@"), v12);
      v13 = (__CFString *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v13 = &stru_1E8EC7EC0;
    }
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ == %ld%@"), Value, valuePtr, v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    CFDictionaryGetValue((CFDictionaryRef)a1, CFSTR("AssertName"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "collectionBlock");
    v16 = (void (**)(_QWORD, _QWORD, _QWORD, _QWORD))objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "processName");
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    ((void (**)(_QWORD, void *, void *, void *))v16)[2](v16, v17, v15, v14);
  }
}

void ___backgroundQueue_systemVersionDescription_block_invoke()
{
  void *v0;
  __CFString *v1;
  __CFString *v2;
  __CFString *v3;
  const __CFString *v4;
  const __CFString *v5;
  const __CFString *v6;
  uint64_t v7;
  void *v8;
  id v9;

  v0 = (void *)_CFCopyServerVersionDictionary();
  if (!v0)
    v0 = (void *)_CFCopySystemVersionDictionary();
  v9 = v0;
  objc_msgSend(v0, "objectForKey:", *MEMORY[0x1E0C9ABB0]);
  v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "objectForKey:", *MEMORY[0x1E0C9AB98]);
  v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "objectForKey:", *MEMORY[0x1E0C9AB90]);
  v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
  v4 = CFSTR("???");
  if (v2)
    v5 = v2;
  else
    v5 = CFSTR("???");
  if (v1)
    v6 = v1;
  else
    v6 = CFSTR("???");
  if (v3)
    v4 = v3;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ %@ (%@)"), v5, v6, v4);
  v7 = objc_claimAutoreleasedReturnValue();
  v8 = (void *)_backgroundQueue_systemVersionDescription___description;
  _backgroundQueue_systemVersionDescription___description = v7;

}

void ___backgroundQueue_getSOCStats_block_invoke(uint64_t a1)
{
  int Count;
  int v3;
  int i;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;

  IOReportChannelGetChannelName();
  v10 = (id)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "isEqualToString:", CFSTR("SOCHOT0")))
  {
    Count = IOReportStateGetCount();
    if (Count >= 1)
    {
      v3 = Count;
      for (i = 0; i != v3; ++i)
      {
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@_%@"), v10, IOReportStateGetNameForIndex());
        v5 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", IOReportStateGetResidency());
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setObject:forKeyedSubscript:", v6, v5);

      }
    }
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", IOReportStateGetInTransitions());
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@_Transitions"), v10);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setObject:forKeyedSubscript:", v7, v9);

  }
}

void sub_1D07E1504(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07E2C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07E3F4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id OUTLINED_FUNCTION_3_4(void *a1)
{
  return a1;
}

BOOL SBIsSystemGestureAllowed(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  unsigned __int8 v14;
  void *v15;
  void *v16;
  char v17;
  void *v18;
  char v19;
  void *v20;
  char v21;
  char v23;
  unsigned __int8 v24;

  v3 = a1;
  objc_msgSend(v3, "systemGestureManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = objc_msgSend(v4, "isGestureWithTypeAllowed:", a2);

  +[SBCoverSheetPresentationManager sharedInstance](SBCoverSheetPresentationManager, "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "coverSheetWindow");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "windowScene");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "isEqual:", v3))
    v23 = objc_msgSend(v5, "isVisible");
  else
    v23 = 0;

  +[SBControlCenterController sharedInstance](SBControlCenterController, "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "_controlCenterWindow");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "windowScene");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v10, "isEqual:", v3))
    v11 = objc_msgSend(v8, "isPresented");
  else
    v11 = 0;

  +[SBWorkspace mainWorkspace](SBWorkspace, "mainWorkspace");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "transientOverlayPresentationManager");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = objc_msgSend(v13, "hasActivePresentationForWindowScene:", v3);

  +[SBAlertItemsController sharedInstance](SBAlertItemsController, "sharedInstance");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v13) = objc_msgSend(v15, "hasVisibleAlertForWindowScene:", v3);

  objc_msgSend(v3, "switcherController");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = objc_msgSend(v16, "isAnySwitcherVisible");

  +[SBAssistantController sharedInstance](SBAssistantController, "sharedInstance");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = objc_msgSend(v18, "isVisibleInWindowScene:", v3);

  +[SBLockStateAggregator sharedInstance](SBLockStateAggregator, "sharedInstance");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend(v20, "hasAnyLockState");

  return ((v24 ^ 1 | (v23 | v11) | v13 | v14 | (v17 | v19 | v21)) & 1) == 0;
}

id _SBActiveAssertion(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t i;
  void *v7;
  void *v8;
  unint64_t v9;
  id v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v2 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v2)
  {
    v3 = v2;
    v4 = 0;
    v5 = *(_QWORD *)v13;
    do
    {
      for (i = 0; i != v3; ++i)
      {
        if (*(_QWORD *)v13 != v5)
          objc_enumerationMutation(v1);
        v7 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * i);
        objc_msgSend(v1, "objectForKey:", v7);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v8, "wantsControlOfDisplay"))
        {
          v9 = objc_msgSend(v4, "level");
          if (v9 < objc_msgSend(v7, "level"))
          {
            v10 = v7;

            v4 = v10;
          }
        }

      }
      v3 = objc_msgSend(v1, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

const __CFString *NSStringFromSBEmbeddedDeviceStationaryState(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("No Description");
  else
    return off_1E8EA7510[a1];
}

uint64_t _SBAXButtonPrefsDidChangeNotification(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_accessibilityPrefsDidChange");
}

void sub_1D07EB840(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D07EC0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07EC7B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07ED3A8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

id SBAddBackgroundActivityAssertionDataByIdentifier(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  objc_msgSend(v3, "backgroundActivityIdentifiers", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * i);
        objc_msgSend(v4, "objectForKey:", v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v12)
        {
          objc_msgSend(MEMORY[0x1E0CB3690], "weakObjectsHashTable");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v4, "setObject:forKey:", v12, v11);
          objc_msgSend(v5, "addObject:", v11);
        }
        objc_msgSend(v12, "addObject:", v3);

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  return v5;
}

id SBRemoveBackgroundActivityAssertionDataByIdentifier(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  uint64_t v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  objc_msgSend(v3, "backgroundActivityIdentifiers", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v15;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v15 != v9)
          objc_enumerationMutation(v6);
        v11 = *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * i);
        objc_msgSend(v4, "objectForKey:", v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "removeObject:", v3);
        if (!objc_msgSend(v12, "count"))
        {
          objc_msgSend(v4, "removeObjectForKey:", v11);
          objc_msgSend(v5, "addObject:", v11);
        }

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v8);
  }

  return v5;
}

void sub_1D07F1998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07F1F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t _SBShelfExpansionIndexFromAnimatableIdentifier(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(a1, "componentsSeparatedByString:", CFSTR("-SBShelfExpansionSwitcherModifier"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "firstObject");
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (v2)
    v3 = objc_msgSend(v2, "integerValue");
  else
    v3 = 0x7FFFFFFFFFFFFFFFLL;

  return v3;
}

const __CFString *NSStringFromSBMediaEventSource(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6)
    return CFSTR("unknown");
  else
    return off_1E8EA7AB8[a1 - 1];
}

uint64_t __mediaRemoteNowPlayingInfoDidChangeNotification(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(a2, "performSelectorOnMainThread:withObject:waitUntilDone:", sel__mediaRemoteNowPlayingInfoDidChange_, a5, 1);
}

uint64_t __mediaRemoteNowPlayingApplicationDidChangeNotification(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(a2, "performSelectorOnMainThread:withObject:waitUntilDone:", sel__mediaRemoteNowPlayingApplicationDidChange_, a5, 1);
}

uint64_t __mediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(a2, "performSelectorOnMainThread:withObject:waitUntilDone:", sel__mediaRemoteNowPlayingApplicationIsPlayingDidChange_, a5, 1);
}

uint64_t __applicationActivityStatusDidChangeNotification(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(a2, "performSelectorOnMainThread:withObject:waitUntilDone:", sel__applicationActivityStatusDidChange_, a5, 1);
}

void sub_1D07F7F04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07F812C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07F82E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07FA188(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1D07FA474(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 48));
  _Unwind_Resume(a1);
}

void sub_1D07FA534(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D07FB188(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D07FC44C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D07FC934(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

Class __getDMFApplicationPolicyMonitorClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  if (!DeviceManagementLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_1E8EA7D30;
    v5 = 0;
    DeviceManagementLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!DeviceManagementLibraryCore_frameworkLibrary)
    __getDMFApplicationPolicyMonitorClass_block_invoke_cold_1(&v3);
  result = objc_getClass("DMFApplicationPolicyMonitor");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getDMFApplicationPolicyMonitorClass_block_invoke_cold_2();
  getDMFApplicationPolicyMonitorClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1D07FFB14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D07FFC7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0800D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0801574(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D080419C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_1D0804C18(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0807D3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t _RentalMovieAdded(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "performSelectorOnMainThread:withObject:waitUntilDone:", sel__launchIPodIfNecessary, 0, 0);
}

void sub_1D080C500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D080F9D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t secureAppTypeForSBApplicationSceneEntity(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  char v4;
  uint64_t v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  char v17;
  void *v18;
  void *v19;
  char v20;
  void *v21;
  void *v22;
  char v23;
  void *v24;
  void *v25;
  char v26;
  void *v27;
  void *v28;
  int v29;

  v1 = a1;
  objc_msgSend(v1, "application");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bundleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", CFSTR("com.apple.calculator"));

  if ((v4 & 1) != 0)
  {
    v5 = 1;
  }
  else
  {
    objc_msgSend(v1, "application");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "bundleIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isEqualToString:", CFSTR("com.apple.mobiletimer"));

    if ((v8 & 1) != 0)
    {
      v5 = 2;
    }
    else
    {
      objc_msgSend(v1, "application");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "bundleIdentifier");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "isEqualToString:", CFSTR("com.apple.camera"));

      if ((v11 & 1) != 0)
      {
        v5 = 4;
      }
      else
      {
        objc_msgSend(v1, "application");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "bundleIdentifier");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_msgSend(v13, "isEqualToString:", CFSTR("com.apple.Magnifier"));

        if ((v14 & 1) != 0)
        {
          v5 = 5;
        }
        else
        {
          objc_msgSend(v1, "application");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "bundleIdentifier");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = objc_msgSend(v16, "isEqualToString:", CFSTR("com.apple.mobilenotes"));

          if ((v17 & 1) != 0)
          {
            v5 = 3;
          }
          else
          {
            objc_msgSend(v1, "application");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v18, "bundleIdentifier");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            v20 = objc_msgSend(v19, "isEqualToString:", CFSTR("com.apple.TVRemoteUIService"));

            if ((v20 & 1) != 0)
            {
              v5 = 12;
            }
            else
            {
              objc_msgSend(v1, "application");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v21, "bundleIdentifier");
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              v23 = objc_msgSend(v22, "isEqualToString:", CFSTR("com.apple.sidecar"));

              if ((v23 & 1) != 0)
              {
                v5 = 6;
              }
              else
              {
                objc_msgSend(v1, "application");
                v24 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v24, "bundleIdentifier");
                v25 = (void *)objc_claimAutoreleasedReturnValue();
                v26 = objc_msgSend(v25, "isEqualToString:", CFSTR("com.apple.ContinuityCaptureShieldUI"));

                if ((v26 & 1) != 0)
                {
                  v5 = 7;
                }
                else
                {
                  objc_msgSend(v1, "application");
                  v27 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v27, "bundleIdentifier");
                  v28 = (void *)objc_claimAutoreleasedReturnValue();
                  v29 = objc_msgSend(v28, "isEqualToString:", CFSTR("com.apple.BarcodeScanner"));

                  if (v29)
                    v5 = 8;
                  else
                    v5 = 0;
                }
              }
            }
          }
        }
      }
    }
  }

  return v5;
}

void sub_1D081367C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D08197D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return objc_opt_class();
}

void sub_1D081EA80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _SBMousePointerManagerAssistiveTouchEnabledDidChange(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_handleAssistiveTouchEnabledDidChangeNotification");
}

void sub_1D081F8F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0824818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBIsSystemNotesSupported()
{
  void *v1;
  uint64_t v2;

  if (__sb__runningInSpringBoard())
  {
    if (SBFEffectiveDeviceClass() == 2)
      return objc_msgSend(MEMORY[0x1E0DB0738], "supportsQuickNote");
    return 0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v1, "userInterfaceIdiom") == 1)
      v2 = objc_msgSend(MEMORY[0x1E0DB0738], "supportsQuickNote");
    else
      v2 = 0;

  }
  return v2;
}

uint64_t SBIsSystemNotesEnabled(_QWORD *a1)
{
  char v2;
  void *v3;
  int v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  void *v11;
  const __CFString **v12;
  uint64_t *v13;
  void *v14;
  void *v15;
  void *v17;
  uint64_t v18;
  const __CFString *v19;
  uint64_t v20;
  const __CFString *v21;
  uint64_t v22;
  _QWORD v23[2];

  v23[1] = *MEMORY[0x1E0C80C00];
  v2 = SBIsSystemNotesSupported();
  objc_msgSend(MEMORY[0x1E0D47230], "sharedConnection");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isQuickNoteAllowed");

  +[SBApplicationController sharedInstanceIfExists](SBApplicationController, "sharedInstanceIfExists");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "notesApplication");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "appProtectionAssistant");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "appProtectionApplication");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isLocked");

  if (!a1)
  {
    if ((v2 & 1) != 0)
      return v4 & (v9 ^ 1u);
    return 0;
  }
  if ((v2 & 1) == 0)
  {
    v14 = (void *)MEMORY[0x1E0CB35C8];
    v22 = *MEMORY[0x1E0CB2D50];
    v23[0] = CFSTR("QuickNote not supported");
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, &v22, 1);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "errorWithDomain:code:userInfo:", CFSTR("SBPIPSceneContentPresentationErrorDomain"), 7, v15);
    *a1 = (id)objc_claimAutoreleasedReturnValue();

    return 0;
  }
  if ((v4 & 1) == 0)
  {
    v10 = (void *)MEMORY[0x1E0CB35C8];
    v20 = *MEMORY[0x1E0CB2D50];
    v21 = CFSTR("ManagedConfiguration policy states no QuickNote");
    v11 = (void *)MEMORY[0x1E0C99D80];
    v12 = &v21;
    v13 = &v20;
    goto LABEL_11;
  }
  if (v9)
  {
    v10 = (void *)MEMORY[0x1E0CB35C8];
    v18 = *MEMORY[0x1E0CB2D50];
    v19 = CFSTR("Notes requires FaceID");
    v11 = (void *)MEMORY[0x1E0C99D80];
    v12 = &v19;
    v13 = &v18;
LABEL_11:
    objc_msgSend(v11, "dictionaryWithObjects:forKeys:count:", v12, v13, 1);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "errorWithDomain:code:userInfo:", CFSTR("SBPIPSceneContentPresentationErrorDomain"), 7, v17);
    *a1 = (id)objc_claimAutoreleasedReturnValue();

  }
  return v4 & (v9 ^ 1u);
}

void sub_1D0825828(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 128));
  _Unwind_Resume(a1);
}

void sub_1D082820C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D082BFFC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

double SBClassicUtilitiesScaleFactorForPhoneAppZoomedIn(uint64_t a1, double a2, double a3)
{
  double v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  int v13;
  double v14;
  void *v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGRect v22;
  CGRect v23;

  if (__sb__runningInSpringBoard())
  {
    __sb__mainScreenReferenceBounds();
    v7 = v6;
    v9 = v8;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "_referenceBounds");
    v7 = v11;
    v9 = v12;

  }
  v13 = ((unint64_t)(a1 - 3) < 2) ^ ((unint64_t)(objc_msgSend((id)SBApp, "interfaceOrientationForCurrentDeviceOrientation:", 0)- 3) < 2);
  if (v13)
    v14 = v7;
  else
    v14 = v9;
  if (v13)
    v7 = v9;
  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = SBClassicUtilitiesScaleFactorForPresentationWithHomeAffordance(v15, a1, 0, v7, v14, a2, a3, 1.0);

  UIRectCenteredAboutPoint();
  v23.origin.x = v17;
  v23.origin.y = v18;
  v23.size.width = v19;
  v23.size.height = v20;
  v22.size.width = 72.0;
  v22.origin.x = 0.0;
  v22.origin.y = v14 + -72.0;
  v22.size.height = 72.0;
  if (CGRectIntersectsRect(v22, v23))
  {
    if ((v7 + -144.0) / a2 <= (v14 + -144.0) / a3)
      return (v7 + -144.0) / a2;
    else
      return (v14 + -144.0) / a3;
  }
  return v16;
}

double SBClassicUtilitiesScaleFactorForPresentationWithHomeAffordance(void *a1, uint64_t a2, char a3, double a4, double a5, double a6, double a7, double a8)
{
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v21;

  v15 = a1;
  objc_msgSend(v15, "displayIdentity");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v16, "isMainRootDisplay"))
  {
    v17 = *MEMORY[0x1E0C9D820];
    v18 = *(double *)(MEMORY[0x1E0C9D820] + 8);

    v19 = 1.0;
    if (v17 != a4 || v18 != a5)
    {
      if (a4 / a6 <= a5 / a7)
        v21 = a4 / a6;
      else
        v21 = a5 / a7;
      v19 = v21
          * _SBAdditionalScaleFactorForClassicPresentationWithHomeAffordance(v15, a2, a3, a4, a5, a6, a7, v21 * a8);
    }
  }
  else
  {

    v19 = 1.0;
  }

  return v19;
}

double SBClassicUtilitiesStatusBarInsetsForPadOnRoundedPad(uint64_t a1, uint64_t a2)
{
  double v3;
  void *v4;
  uint64_t v5;
  void *v6;
  int v7;
  double v8;
  double v9;
  double v10;

  v3 = *MEMORY[0x1E0CEA080];
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "userInterfaceIdiom");

  if ((v5 & 0xFFFFFFFFFFFFFFFBLL) == 1
    && !SBApplicationClassicModeExpectsRoundedCorners(a2)
    && SBApplicationClassicModeRepresentsPad(a2))
  {
    +[SBPlatformController sharedInstance](SBPlatformController, "sharedInstance");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "isRoundCornerPad");

    if (v7)
    {
      objc_msgSend(MEMORY[0x1E0CEA9E8], "_roundedPadEdgeInsets");
      objc_msgSend(MEMORY[0x1E0CEA9E8], "_regularPadEdgeInsets");
      objc_msgSend(MEMORY[0x1E0CEA9E8], "_regularPadBaselineOffset");
      v9 = v8;
      objc_msgSend(MEMORY[0x1E0CEA9E8], "_roundedPadBaselineOffset");
      return v9 - v10;
    }
  }
  return v3;
}

double _SBAdditionalScaleFactorForClassicPresentationWithHomeAffordance(void *a1, uint64_t a2, char a3, double a4, double a5, double a6, double a7, double a8)
{
  id v15;
  void *v16;
  double v17;
  void *v18;
  double v19;
  double v20;
  double v22;
  void *v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  double v27;
  void *v28;
  uint64_t v29;
  double v30;
  uint64_t v31;
  double v32;

  v15 = a1;
  v16 = v15;
  v17 = 1.0;
  if ((a3 & 1) == 0)
  {
    objc_msgSend(v15, "displayIdentity");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v18, "isMainRootDisplay") & 1) != 0)
    {
      v19 = *MEMORY[0x1E0C9D820];
      v20 = *(double *)(MEMORY[0x1E0C9D820] + 8);

      if (v19 != a4 || v20 != a5)
      {
        if ((unint64_t)(a2 - 3) >= 2)
          v22 = a5;
        else
          v22 = a4;
        if ((unint64_t)(a2 - 3) < 2)
          a7 = a6;
        objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = objc_msgSend(v23, "userInterfaceIdiom");

        v25 = 20.0;
        if ((v24 & 0xFFFFFFFFFFFFFFFBLL) != 1)
        {
          v26 = SBFEffectiveHomeButtonType();
          v25 = 0.0;
          if (v26 == 2)
            v25 = 20.0;
        }
        v27 = v22 - v25;
        objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        v29 = objc_msgSend(v28, "userInterfaceIdiom");

        v30 = 24.0;
        if ((v29 & 0xFFFFFFFFFFFFFFFBLL) != 1)
        {
          v31 = SBFEffectiveHomeButtonType();
          v30 = 0.0;
          if (v31 == 2)
            v30 = 6.0;
        }
        v32 = v27 - v30;
        if (a7 * a8 <= v32)
          v17 = 1.0;
        else
          v17 = v32 / v22;
      }
    }
    else
    {

    }
  }

  return v17;
}

void SBClassicUtilitiesInsetAndTranslateLayerForPresentationWithHomeAffordance(void *a1, void *a2, int a3, uint64_t a4, int a5, char a6, int a7, double a8, double a9, double a10, double a11, double a12)
{
  id v23;
  id v24;
  void *v25;
  int v26;
  double v27;
  double v28;
  double v29;
  void *v30;
  uint64_t v31;
  int v32;
  void *v33;
  uint64_t v34;
  int v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  CGFloat v42;
  double v43;
  CGAffineTransform v44;
  CGAffineTransform v45;
  CGAffineTransform v46;
  CGAffineTransform t2;
  CGAffineTransform t1;
  CGAffineTransform v49;

  v23 = a1;
  v24 = a2;
  objc_msgSend(v24, "displayIdentity");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = objc_msgSend(v25, "isMainRootDisplay");

  if (v26)
  {
    v27 = _SBAdditionalScaleFactorForClassicPresentationWithHomeAffordance(v24, a4, a6, a8, a9, a10, a11, a12);
    if (a5)
      v28 = 1.0 / a12;
    else
      v28 = 1.0;
    v29 = 5.0;
    if (a7)
      v29 = SBScreenDisplayCornerRadius();
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    v31 = objc_msgSend(v30, "userInterfaceIdiom");

    v32 = 20;
    if ((v31 & 0xFFFFFFFFFFFFFFFBLL) != 1)
    {
      if (SBFEffectiveHomeButtonType() == 2)
        v32 = 20;
      else
        v32 = 0;
    }
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    v34 = objc_msgSend(v33, "userInterfaceIdiom");

    if ((v34 & 0xFFFFFFFFFFFFFFFBLL) == 1)
    {
      v35 = -24;
    }
    else if (SBFEffectiveHomeButtonType() == 2)
    {
      v35 = -6;
    }
    else
    {
      v35 = 0;
    }
    v36 = 0.0;
    if (v27 != 1.0)
      v36 = -((double)((v35 + v32) >> 1) * v28);
    v37 = v28 * v29;
    v38 = -0.0;
    v39 = -v36;
    v40 = -0.0;
    if (a4 == 2)
      v41 = -v36;
    else
      v41 = v36;
    if (a4 != 2)
      v40 = 0.0;
    if (a4 == 3)
      v41 = 0.0;
    else
      v39 = v40;
    if (a4 == 4)
      v39 = v36;
    else
      v38 = v41;
    if (a3)
      v42 = v38;
    else
      v42 = v36;
    memset(&v49.c, 0, 32);
    if (a3)
      v43 = v39;
    else
      v43 = 0.0;
    *(_OWORD *)&v49.a = 0uLL;
    CGAffineTransformMakeScale(&t1, v27, v27);
    CGAffineTransformMakeTranslation(&t2, v43, v42);
    CGAffineTransformConcat(&v49, &t1, &t2);
    if (v23)
      objc_msgSend(v23, "affineTransform");
    else
      memset(&v45, 0, sizeof(v45));
    v44 = v49;
    CGAffineTransformConcat(&v46, &v45, &v44);
    objc_msgSend(v23, "setAffineTransform:", &v46);
    objc_msgSend(v23, "setCornerRadius:", v37);
    objc_msgSend(v23, "setCornerCurve:", *MEMORY[0x1E0CD2A68]);
  }

}

id _SBApp(void *a1)
{
  id v1;
  void *v2;
  void *v3;

  v1 = a1;
  +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "applicationWithBundleIdentifier:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

void sub_1D082F080(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state)
{
  _Unwind_Resume(exception_object);
}

void sub_1D082F1D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, os_activity_scope_state_s state)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0832BF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08330F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08348C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D083A46C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromStreamBuddyConnectionState(unsigned int a1)
{
  if (a1 > 5)
    return CFSTR("INVALID");
  else
    return off_1E8EA8D40[a1];
}

void sub_1D083FFD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _switcherKeyboardSuppressionModeByCombiningSuppressionModes(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  void *v10;
  void *v11;
  void *v12;

  v3 = a1;
  v4 = a2;
  +[SBSwitcherKeyboardSuppressionMode suppressionModeNone](SBSwitcherKeyboardSuppressionMode, "suppressionModeNone");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  if (v5 == v3)
  {
    v7 = v4;
  }
  else
  {
    +[SBSwitcherKeyboardSuppressionMode suppressionModeNone](SBSwitcherKeyboardSuppressionMode, "suppressionModeNone");
    v6 = (id)objc_claimAutoreleasedReturnValue();

    if (v6 == v4)
    {
      v7 = v3;
    }
    else
    {
      if ((objc_msgSend(v3, "suppressesAllScenes") & 1) == 0 && !objc_msgSend(v4, "suppressesAllScenes"))
      {
        objc_msgSend(v3, "appLayouts");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "appLayouts");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "setByAddingObjectsFromSet:", v11);
        v12 = (void *)objc_claimAutoreleasedReturnValue();

        v8 = +[SBSwitcherKeyboardSuppressionMode newSuppressionModeForSwitcherScenesFromAppLayouts:](SBSwitcherKeyboardSuppressionMode, "newSuppressionModeForSwitcherScenesFromAppLayouts:", v12);
        goto LABEL_9;
      }
      +[SBSwitcherKeyboardSuppressionMode suppressionModeForAllScenes](SBSwitcherKeyboardSuppressionMode, "suppressionModeForAllScenes");
      v7 = (id)objc_claimAutoreleasedReturnValue();
    }
  }
  v8 = v7;
LABEL_9:

  return v8;
}

id _objectByChoosingNonNilObject(void *a1, void *a2)
{
  if (!a1)
    a1 = a2;
  return a1;
}

id _arrayByCombiningArrays(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (v3 || !v4)
  {
    if (!v3 || v4)
    {
      v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithArray:", v3);
      objc_msgSend(v7, "addObjectsFromArray:", v5);
      goto LABEL_9;
    }
    v6 = v3;
  }
  else
  {
    v6 = v4;
  }
  v7 = v6;
LABEL_9:

  return v7;
}

id _setByCombiningSets(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  if (!v3 || v4)
  {
    if (v3 || !v4)
    {
      objc_msgSend(v3, "setByAddingObjectsFromSet:", v4);
      v6 = (id)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v6 = v4;
    }
  }
  else
  {
    v6 = v3;
  }
  v7 = v6;

  return v7;
}

id _dictionaryByCombingDictionaryOfSetOfAppLayouts(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  _QWORD v11[4];
  id v12;
  id v13;

  v3 = a1;
  v4 = a2;
  if (!objc_msgSend(v3, "count") && objc_msgSend(v4, "count"))
  {
    v9 = v4;
LABEL_8:
    v8 = v9;
    goto LABEL_9;
  }
  if (objc_msgSend(v3, "count") && !objc_msgSend(v4, "count"))
  {
    v9 = v3;
    goto LABEL_8;
  }
  v5 = (void *)objc_opt_new();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = ___dictionaryByCombingDictionaryOfSetOfAppLayouts_block_invoke;
  v11[3] = &unk_1E8EA8ED0;
  v12 = v4;
  v6 = v5;
  v13 = v6;
  objc_msgSend(v3, "enumerateKeysAndObjectsUsingBlock:", v11);
  v7 = v13;
  v8 = v6;

LABEL_9:
  return v8;
}

void ___dictionaryByCombingDictionaryOfSetOfAppLayouts_block_invoke(uint64_t a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD v14[2];

  v14[1] = *MEMORY[0x1E0C80C00];
  v5 = *(void **)(a1 + 32);
  v6 = a3;
  v7 = a2;
  objc_msgSend(v5, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "setWithSet:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "allObjects");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "addObjectsFromArray:", v10);

  v11 = *(void **)(a1 + 40);
  v13 = v7;
  v14[0] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v14, &v13, 1);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "addEntriesFromDictionary:", v12);

}

void sub_1D08421C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void _SBRoutingSwitcherModifierRouteToModifier(id *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  void (**v9)(_QWORD);
  id v10;
  id *v11;

  v5 = a2;
  v6 = a1[12];
  v7 = a1[12];
  a1[12] = v5;
  v8 = v5;
  v9 = a3;
  v11 = a1;

  v9[2](v9);
  v10 = v11[12];
  v11[12] = v6;

}

void sub_1D08427AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _SBRoutingSwitcherModifierRouteToModifierContainingAppLayout(id *a1, void *a2, void *a3)
{
  id v6;
  void (**v7)(id, id);
  id v8;
  id WeakRetained;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id *v15;

  v6 = a1[12];
  v7 = a3;
  v8 = a2;
  v15 = a1;
  WeakRetained = objc_loadWeakRetained(a1 + 18);
  objc_msgSend(WeakRetained, "routingModifier:modifierForAppLayout:", v15, v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  v11 = v15[12];
  v15[12] = v10;
  v12 = v10;

  v7[2](v7, v12);
  v13 = v15[12];
  v15[12] = v6;
  v14 = v6;

}

void sub_1D08429B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0842B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0842C14(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0842D18(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0842E3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0842F44(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D08431A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0843320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0843460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0843570(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0843674(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0843778(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D084385C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void _SBRoutingSwitcherModifierRouteToModifierContainingIndex(void *a1, unint64_t a2, void *a3)
{
  id *v5;
  void (**v6)(id, id, _QWORD);
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  unint64_t v14;
  id v15;
  id WeakRetained;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  unint64_t v25;
  id v26;
  id v27;
  id v28;
  id v29;
  void *v30;
  void (**v31)(id, id, _QWORD);
  id v32;
  _QWORD v33[4];
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  v32 = v5[12];
  v35 = 0u;
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v7 = v5[17];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
  if (v8)
  {
    v9 = v8;
    v10 = 0;
    v11 = *(_QWORD *)v36;
LABEL_3:
    v12 = 0;
    while (1)
    {
      if (*(_QWORD *)v36 != v11)
        objc_enumerationMutation(v7);
      v13 = *(void **)(*((_QWORD *)&v35 + 1) + 8 * v12);
      v14 = objc_msgSend(v5, "_lastIndexForModifier:", v13);
      if (v14 != 0x7FFFFFFFFFFFFFFFLL)
      {
        if (v14 >= a2)
        {
          v15 = v13;

          if (v15)
            goto LABEL_20;
          goto LABEL_16;
        }
        v10 = v14 + 1;
      }
      if (v9 == ++v12)
      {
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v35, v39, 16);
        if (v9)
          goto LABEL_3;
        goto LABEL_15;
      }
    }
  }
  v10 = 0;
LABEL_15:

LABEL_16:
  WeakRetained = objc_loadWeakRetained(v5 + 18);
  v17 = v5[16];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<%@: %p>"), objc_opt_class(), v5);
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  v31 = v6;
  if (WeakRetained)
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<%@: %p>"), objc_opt_class(), WeakRetained);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v18 = 0;
  }
  objc_msgSend(v17, "keyEnumerator");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "allObjects");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  v33[0] = MEMORY[0x1E0C809B0];
  v33[1] = 3221225472;
  v33[2] = ___SBRoutingSwitcherModifierRouteToModifierContainingIndex_block_invoke;
  v33[3] = &unk_1E8EA91A0;
  v34 = v17;
  v21 = v17;
  objc_msgSend(v20, "bs_reduce:block:", &stru_1E8EC7EC0, v33);
  v22 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void _SBRoutingSwitcherModifierRouteToModifierContainingIndex(SBRoutingSwitcherModifier *__strong, NSUInteger, void (^__strong)(SBSwitcherModifier *__strong, NSUInteger))");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "handleFailureInFunction:file:lineNumber:description:", v24, CFSTR("SBRoutingSwitcherModifier.m"), 1399, CFSTR("%@ with delegate %@ couldn't find a modifier among (%@) for index %lu"), v30, v18, v22, a2);

  v15 = 0;
  v6 = v31;
LABEL_20:
  v25 = a2 - v10;
  v26 = v5[12];
  v5[12] = v15;
  v27 = v15;

  v6[2](v6, v27, v25);
  v28 = v5[12];
  v5[12] = v32;
  v29 = v32;

}

void sub_1D0843C84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0843D90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0843E94(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0843F98(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D08440A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08441BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08442A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08443A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D08444AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D08445B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D08446B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D08447B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D084489C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08449A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0844AC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0844C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0844E58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0844F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08450B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08451CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08453F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0845608(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084580C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0845A24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0845C28(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0845D60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0845E60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0845F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0846024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08460F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08462E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D08463F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08464D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08465AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08467C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08468E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0846A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0846B34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0846C80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0846DC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0846EC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0846FC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08470E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0847230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084735C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084746C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0847694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084779C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08479C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0847AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0847BC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0847CCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0847F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0848194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_1D0848484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_1D0848750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D0848A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D0848D0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D0848FF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D08492C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D0849554(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0849668(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D08498B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08499B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0849A94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0849B70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0849C4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0849D20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0849DFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0849ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0849FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084A0B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084A190(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084A264(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084A338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084A40C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084A4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084A6CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084A7C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084A8D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084AA24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084AB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084ACBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084AE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084AF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084B208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084B4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084B790(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084BA54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084BD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084BFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C608(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084C95C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084CB7C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084CE0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084D0CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084D1E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084D468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084D724(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084D950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084DB44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084DC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084DDD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084DF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084E070(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084E1B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084E2F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084E518(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084E70C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084E900(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084EB28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084ED58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084EE60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084F204(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1D084F468(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084F690(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084F7B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D084F9D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084FBC4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084FDB8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D084FFAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D08500BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D085019C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D085029C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 48), 8);
  _Unwind_Resume(a1);
}

unint64_t _SBRoutingSwitcherModifierSubIndexFromIndexForModifier(void *a1, unint64_t a2, void *a3)
{
  id *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a3;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v7 = v5[17];
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = 0;
    v11 = *(_QWORD *)v16;
LABEL_3:
    v12 = 0;
    while (1)
    {
      if (*(_QWORD *)v16 != v11)
        objc_enumerationMutation(v7);
      if (*(id *)(*((_QWORD *)&v15 + 1) + 8 * v12) == v6)
        break;
      v13 = objc_msgSend(v5, "_lastIndexForModifier:", (_QWORD)v15);
      if (v13 < a2)
        v10 = v13 + 1;
      if (v9 == ++v12)
      {
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
        if (v9)
          goto LABEL_3;
        break;
      }
    }
  }
  else
  {
    v10 = 0;
  }

  return a2 - v10;
}

void sub_1D08504EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08505C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08507AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D08509A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0850C30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0850EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08511B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0851478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0851734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08519F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0851C58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0851E88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0851F9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D085218C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D085228C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08524A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08526C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08528F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0852B20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0852CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0852E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0852F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0853060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D085319C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08532B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08533B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08534D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08535C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0853728(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D085380C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08539AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0853C5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0853E24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0854004(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0854208(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0854428(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0854650(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0854758(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0854854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0854A20(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0854C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0854E88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0854F8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0855088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D085519C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08552B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08553DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08555FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D08557F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0855A10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0855D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBGestureModifierPhaseForGestureState(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 3)
    return 0;
  return result;
}

__CFString *SBStringForFluidSwitcherGestureType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xA)
    return 0;
  else
    return off_1E8EA9220[a1 - 1];
}

void sub_1D085772C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0859858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  id *v24;

  objc_destroyWeak(v24);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D085AA8C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D085ABF0(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D085ADC4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D085AEE8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D085B6B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSBSAPulsePhase(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("Idle");
  else
    return off_1E8EA9620[a1 - 1];
}

void sub_1D085CC78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D085E6B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBInteractiveScreenshotCreateImageFromInterfaceOrientedView(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  double v6;
  CGFloat v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  void *v18;
  const void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  id v35;
  CATransform3D v36;
  CATransform3D v37;
  CATransform3D v38;
  CATransform3D a;
  CATransform3D b;
  CATransform3D v41;
  _QWORD v42[7];
  _QWORD v43[7];
  uint64_t v44;
  _QWORD v45[3];

  v45[1] = *MEMORY[0x1E0C80C00];
  v3 = a1;
  objc_msgSend(v3, "_screen");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (!v4)
    goto LABEL_12;
  objc_msgSend(v4, "scale");
  v7 = v6;
  objc_msgSend(v3, "bounds");
  v9 = v8;
  v11 = v10;
  _UIWindowConvertPointFromOrientationToOrientation();
  memset(&v37, 0, sizeof(v37));
  CATransform3DMakeTranslation(&v37, -v12, -v13, 0.0);
  v14 = 0.0;
  if (a2 != 1)
  {
    if (a2 == 3)
    {
      v14 = 1.57079633;
    }
    else if (a2 == 4)
    {
      v14 = -1.57079633;
    }
    else
    {
      v14 = 3.14159265;
      if (a2 != 2)
        v14 = 0.0;
    }
  }
  CATransform3DMakeRotation(&b, 0.0 - v14, 0.0, 0.0, 1.0);
  a = v37;
  CATransform3DConcat(&v41, &a, &b);
  v37 = v41;
  _UIWindowConvertPointFromOrientationToOrientation();
  CATransform3DMakeTranslation(&a, v15 - v9, v16 - v11, 0.0);
  v38 = v37;
  CATransform3DConcat(&v41, &v38, &a);
  v37 = v41;
  CATransform3DMakeScale(&v36, v7, v7, 1.0);
  b = v37;
  CATransform3DConcat(&v41, &b, &v36);
  v37 = v41;
  v44 = *MEMORY[0x1E0CEC3C0];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v5, "gamut"));
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v45[0] = v17;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v45, &v44, 1);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = (const void *)_UIRenderingBufferCreate();

  if (v19)
  {
    v35 = v3;
    objc_msgSend(v3, "layer");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = *MEMORY[0x1E0CD30F0];
    v43[0] = *MEMORY[0x1E0CD3110];
    v22 = *MEMORY[0x1E0CD30B0];
    v42[0] = v21;
    v42[1] = v22;
    objc_msgSend(v5, "displayConfiguration");
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v23, "name");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v43[1] = v24;
    v42[2] = *MEMORY[0x1E0CD3098];
    v25 = (void *)MEMORY[0x1E0CB37E8];
    objc_msgSend(v20, "context");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "numberWithUnsignedInt:", objc_msgSend(v26, "contextId"));
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v43[2] = v27;
    v42[3] = *MEMORY[0x1E0CD30E8];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedLongLong:", v20);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = *MEMORY[0x1E0CD30A8];
    v43[3] = v28;
    v43[4] = v19;
    v30 = *MEMORY[0x1E0CD3140];
    v42[4] = v29;
    v42[5] = v30;
    v41 = v37;
    objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCATransform3D:", &v41);
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    v42[6] = *MEMORY[0x1E0CD30C0];
    v43[5] = v31;
    v43[6] = MEMORY[0x1E0C9AAB0];
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v43, v42, 7);
    v32 = (void *)objc_claimAutoreleasedReturnValue();

    if (CARenderServerSnapshot())
      v33 = objc_msgSend(objc_alloc(MEMORY[0x1E0CEA638]), "_initWithIOSurface:scale:orientation:", v19, 0, v7);
    else
      v33 = 0;
    CFRelease(v19);

    v3 = v35;
  }
  else
  {
LABEL_12:
    v33 = 0;
  }

  return v33;
}

uint64_t _SBWidgetViewControllerPreferencesChangedHandler(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_reloadWidgetPreferences");
}

void sub_1D0865E8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D086DA24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D086ECD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D086F3F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_4_4()
{
  JUMPOUT(0x1D17E5550);
}

void sub_1D0871544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *a10, uint64_t a11, id *location)
{
  id *v12;
  uint64_t v13;

  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 112));
  _Unwind_Resume(a1);
}

void sub_1D0871624(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D087170C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0871A20(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0871AD4(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

const __CFString *SBStringForWindowDragGestureDestination(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xD)
    return CFSTR("Cancel");
  else
    return off_1E8EAA0D8[a1 - 1];
}

void sub_1D0875F48(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 192));
  _Unwind_Resume(a1);
}

void sub_1D087764C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id *a16, id *a17, id *location, id *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id *a30)
{
  id *v30;
  id *v31;
  uint64_t v32;

  objc_destroyWeak(v31);
  objc_destroyWeak(v30);
  objc_destroyWeak(a30);
  objc_destroyWeak(a25);
  objc_destroyWeak(a19);
  objc_destroyWeak(a16);
  objc_destroyWeak(location);
  objc_destroyWeak(a17);
  objc_destroyWeak((id *)(v32 - 176));
  _Unwind_Resume(a1);
}

void sub_1D087852C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D087967C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0879A8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D087F274(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0880344(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose(&a32, 8);
  _Unwind_Resume(a1);
}

void sub_1D08870B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL SBBrightnessRouteTypeIsValid(uint64_t a1)
{
  return a1 != 0;
}

const __CFString *NSStringFromSBBrightnessRouteType(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("unknown");
  if (a1 == 1)
    v1 = CFSTR("Display");
  if (a1 == 2)
    return CFSTR("Keyboard");
  else
    return v1;
}

id NSLocalizedStringFromSBBrightnessRouteType(uint64_t a1)
{
  void *v1;
  void *v2;
  void *v3;
  const __CFString *v4;

  switch(a1)
  {
    case 2:
      objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("KEYBOARD_BRIGHTNESS");
      goto LABEL_7;
    case 1:
      objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("DISPLAY_BRIGHTNESS");
      goto LABEL_7;
    case 0:
      objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
      v2 = (void *)objc_claimAutoreleasedReturnValue();
      v3 = v2;
      v4 = CFSTR("BRIGHTNESS");
LABEL_7:
      objc_msgSend(v2, "localizedStringForKey:value:table:", v4, &stru_1E8EC7EC0, CFSTR("SpringBoard"));
      v1 = (void *)objc_claimAutoreleasedReturnValue();

      break;
  }
  return v1;
}

uint64_t UIImageSymbolForSBBrightnessRouteType()
{
  return 0;
}

id CCUICAPackageDescriptionForSBBrightnessRouteType(unint64_t a1)
{
  __CFString *v1;
  void *v2;
  void *v3;
  void *v4;

  if (a1 > 2)
    v1 = 0;
  else
    v1 = off_1E8EAA890[a1];
  objc_msgSend(CFSTR("BrightnessHUD-"), "stringByAppendingString:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB34D0], "bundleForClass:", objc_opt_class());
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D14768], "descriptionForPackageNamed:inBundle:", v2, v3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setFlipsForRightToLeftLayoutDirection:", 0);

  return v4;
}

void *SBGlyphStateValueTransformerForBrightnessRouteType()
{
  return &__block_literal_global_110;
}

void sub_1D0888320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0888648(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0888788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0888950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0888A90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0888BD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D088FE00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  id *v32;
  id *v33;
  id *v34;

  objc_destroyWeak(v34);
  objc_destroyWeak(v32);
  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0890BB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0890F48(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 104));
  _Unwind_Resume(a1);
}

void sub_1D0891E1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08920B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0892244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08923D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08925F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08930A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0893D18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08957B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08969BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  return NSRequestConcreteImplementation();
}

void sub_1D0897D60(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D089A9DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1D089B104(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D089B76C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 88));
  _Unwind_Resume(a1);
}

void sub_1D089CC5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D089D28C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D089DB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
  _Block_object_dispose(&a28, 8);
  _Unwind_Resume(a1);
}

void sub_1D089EB68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D089F1DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_1D089F9B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D08A0B18(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D08A15D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1D08A1F04(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D08A2198(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D08A2E5C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  id *v12;
  uint64_t v13;

  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v13 - 168));
  _Block_object_dispose((const void *)(v13 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D08A2FF8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromMedusaHostedKeyboardWindowLevelPriority(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Medusa");
  else
    return off_1E8EAB5D8[a1 - 1];
}

void sub_1D08A80A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08A8868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location, id a16)
{
  id *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1D08A9528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08A9BBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08A9D24(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D08A9E44(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

double SBFluidSwitcherItemContainerFooterViewIconShadowOffsetYForFooterStyle(uint64_t a1)
{
  double result;

  result = -1.0;
  if ((unint64_t)(a1 - 1) < 2)
    return 4.0;
  return result;
}

double SBFluidSwitcherItemContainerFooterViewIconShadowOpacityForFooterStyle(uint64_t a1)
{
  return dbl_1D0E89440[(unint64_t)(a1 - 1) < 2];
}

double SBFluidSwitcherItemContainerFooterViewIconShadowRadiusForFooterStyle(uint64_t a1)
{
  double result;

  result = 6.0;
  if ((unint64_t)(a1 - 1) < 2)
    return 12.0;
  return result;
}

double SBFluidSwitcherItemContainerFooterViewIconSideLengthForFooterStyle(uint64_t a1)
{
  double result;

  result = 24.0;
  if (a1 == 1)
    result = 30.0;
  if (a1 == 2)
    return 40.0;
  return result;
}

uint64_t SBFluidSwitcherItemContainerFooterViewIconOffsetForFooterStyle(uint64_t result, uint64_t a2)
{
  double v2;

  v2 = 24.0;
  if (result == 1)
    v2 = 30.0;
  if (result)
  {
    if (a2 == 1)
      return objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection", *MEMORY[0x1E0C9D538], v2);
  }
  return result;
}

SBApplicationSceneEntityDestructionIntent *SBApplicationSceneEntityDestructionMakeIntent(uint64_t a1, uint64_t a2)
{
  SBApplicationSceneEntityDestructionIntent *v4;

  v4 = objc_alloc_init(SBApplicationSceneEntityDestructionIntent);
  -[SBApplicationSceneEntityDestructionIntent setShouldRemoveFromHistory:](v4, "setShouldRemoveFromHistory:", a2);
  if ((unint64_t)(a1 - 1) <= 2)
    -[SBApplicationSceneEntityDestructionIntent setAnimation:](v4, "setAnimation:");
  return v4;
}

SBApplicationSceneEntityDestructionIntent *SBApplicationSceneEntityDestructionMakeIntentFromServicesRequest(uint64_t a1, uint64_t a2)
{
  SBApplicationSceneEntityDestructionIntent *v4;

  v4 = objc_alloc_init(SBApplicationSceneEntityDestructionIntent);
  -[SBApplicationSceneEntityDestructionIntent setShouldRemoveFromHistory:](v4, "setShouldRemoveFromHistory:", a2);
  if ((unint64_t)(a1 - 1) <= 2)
    -[SBApplicationSceneEntityDestructionIntent setAnimation:](v4, "setAnimation:");
  return v4;
}

const __CFString *SBStringFromApplicationSceneEntityDestructionIntent(void *a1)
{
  uint64_t v1;
  const __CFString *v2;

  v1 = objc_msgSend(a1, "animation");
  v2 = CFSTR("Delete");
  if (v1 == 1)
    v2 = CFSTR("Commit");
  if (v1 == 2)
    return CFSTR("Decline");
  else
    return v2;
}

void sub_1D08B34FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08B35BC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D08B4E98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08B4F58(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D08B538C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08B656C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08B6640(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D08B6AC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08B7C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  id *v32;
  id *v33;
  uint64_t v34;

  objc_destroyWeak(v33);
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v34 - 144));
  _Unwind_Resume(a1);
}

void sub_1D08B9384(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08B94EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D08B964C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D08B97F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08B995C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D08BA37C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void SBPrepareLaunchSentinelIfNecessary()
{
  if (SBPrepareLaunchSentinelIfNecessary___once != -1)
    dispatch_once(&SBPrepareLaunchSentinelIfNecessary___once, &__block_literal_global_120);
}

void SBSetupAssistantUISessionNoLongerExclusiveNotification()
{
  id v0;

  +[SBSetupManager sharedInstance](SBSetupManager, "sharedInstance");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setInSetupModeReadyToExit:", 1);

}

void SBPrepareForSetupIfNecessary()
{
  void *v0;
  void *v1;
  char v2;
  id v3;

  if (SBPrepareLaunchSentinelIfNecessary___once != -1)
    dispatch_once(&SBPrepareLaunchSentinelIfNecessary___once, &__block_literal_global_120);
  objc_msgSend(MEMORY[0x1E0DC5EE8], "sharedManager");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "currentUser");
  v3 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DC5EE8], "sharedManager");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "isMultiUser"))
  {
    v2 = objc_msgSend(v3, "isLoginUser");

    if ((v2 & 1) == 0)
    {
      kdebug_trace();
      BYSetupAssistantEnsureShortLivedTokenUpgrade();
      kdebug_trace();
    }
  }
  else
  {

  }
}

void SBSetupDeviceMigrationNotificationReceived()
{
  id v0;

  +[SBSetupManager sharedInstance](SBSetupManager, "sharedInstance");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "_toggleSetupForMigrationNeeded:forReason:", 1, CFSTR("notification from setup"));

}

void sub_1D08BD694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;
  uint64_t v16;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v16 - 112), 8);
  _Unwind_Resume(a1);
}

uint64_t NSStringFromSBPhysicalButtonResult(uint64_t a1)
{
  _UIPhysicalButtonStateFromSBPhysicalButtonResult(a1);
  return _NSStringFromUIPhysicalButtonState();
}

uint64_t _UIPhysicalButtonStateFromSBPhysicalButtonResult(uint64_t a1)
{
  uint64_t result;
  void *v2;

  if (!a1)
    return 2;
  if (a1 == 1)
    return 3;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown button result: %lu>"), a1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR))
    _UIPhysicalButtonStateFromSBPhysicalButtonResult_cold_1((uint64_t)v2);
  objc_msgSend(objc_retainAutorelease(v2), "UTF8String");
  result = _bs_set_crash_log_message();
  __break(0);
  return result;
}

void sub_1D08C026C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08C05BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D08C07F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08C094C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08C16D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08C4350(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08C5894(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v20);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08C6F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08C724C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1D08CBE98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08CC0F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1D08CC290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08CC3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08CC5D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08CF468(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08CF7CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08D06C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08D1748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08D1E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D08D2DDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBStringForSceneSnapshotRequestSize(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5)
    return CFSTR("current");
  else
    return off_1E8EAC178[a1 - 1];
}

const __CFString *SBStringForSceneSnapshotRequestOrientation(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("current");
  else
    return off_1E8EAC1A8[a1 - 1];
}

const __CFString *SBStringForSceneSnapshotRequestUserInterfaceStyle(uint64_t a1)
{
  if (a1)
    return CFSTR("both");
  else
    return CFSTR("current");
}

void sub_1D08D653C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08D99C8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_4_5(void *a1, const char *a2)
{
  return objc_msgSend(a1, "pid");
}

const __CFString *SBWorkspaceEntityRemovalAnimationStyleDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("unknown");
  else
    return off_1E8EAC298[a1 - 1];
}

const __CFString *SBWorkspaceEntityRemovalActionTypeDescription(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("preserve-containing-space");
  if (a1 == 2)
    v1 = CFSTR("remove-containing-space");
  if (a1)
    return v1;
  else
    return CFSTR("none");
}

void _SBSystemActionSimpleAccessibilityPreviewElementTripleClickOptionDidChange(uint64_t a1, uint64_t a2)
{
  -[SBSystemActionSimpleAccessibilityPreviewElement _handleTripleClickOptionDidChangeNotification](a2);
}

BOOL SBWhitePointAdaptivityStyleValid(unint64_t a1)
{
  return a1 < 5;
}

void SBKeyDoubleValueLog(void *a1, int a2, double a3)
{
  id v5;
  NSObject *v6;
  void *v7;
  uint8_t buf[4];
  void *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  SBLogCommon();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%*s%@:%*s%.2f"), (2 * a2) | 1u, " ", v5, 33 - (objc_msgSend(v5, "length") + 2 * a2), " ", *(_QWORD *)&a3);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138412290;
    v9 = v7;
    _os_log_debug_impl(&dword_1D0540000, v6, OS_LOG_TYPE_DEBUG, "SBWPA%@", buf, 0xCu);

  }
}

void sub_1D08DBFB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08DF314(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08DF4A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08E173C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D08E2110(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _SBFindFirstViewController(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  _QWORD v8[4];
  id v9;

  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CEAC18], "allWindowsIncludingInternalWindows:onlyVisibleWindows:", 1, 1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bs_mapNoNulls:", &__block_literal_global_133);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  v4 = (void *)MEMORY[0x1E0CEABB8];
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = ___SBFindFirstViewController_block_invoke_2;
  v8[3] = &unk_1E8EAC3A8;
  v9 = v1;
  v5 = v1;
  objc_msgSend(v4, "sb_firstDescendantOfViewControllers:passingTest:", v3, v8);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

uint64_t _SBFindViewControllerContainingView(uint64_t a1)
{
  return objc_msgSend(MEMORY[0x1E0CEABB8], "bs_nextViewControllerForView:", a1);
}

id _SBFluidSwitcherTitledButtonContentImageWithTitle(void *a1)
{
  id v1;
  id v2;
  void *v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  _QWORD v22[4];
  id v23;
  id v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  _QWORD v33[2];
  _QWORD v34[3];

  v34[2] = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0CEA230]);
  objc_msgSend(v2, "setLineBreakMode:", 4);
  objc_msgSend(v2, "setAlignment:", 0);
  objc_msgSend(MEMORY[0x1E0CEA5E8], "systemFontOfSize:weight:", 15.0, *MEMORY[0x1E0CEB5D0]);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *MEMORY[0x1E0CEA0D0];
  v33[0] = *MEMORY[0x1E0CEA098];
  v33[1] = v4;
  v34[0] = v3;
  v34[1] = v2;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v34, v33, 2);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "sizeWithAttributes:", v5);
  v7 = v6;
  v9 = v8;
  v31 = 0.0;
  v32 = 0.0;
  v29 = 0.0;
  v30 = 0.0;
  if (v3 && CTFontGetLanguageAwareOutsets())
  {
    v10 = v32;
    if (v32 < v30)
      v10 = v30;
    v11 = v31;
    if (v31 < v29)
      v11 = v29;
    v12 = v7 + v10 + v10;
    v13 = v9 + v11 + v11;
    v14 = v10 + 0.0;
    v15 = v11 + 0.0;
  }
  else
  {
    v29 = 0.0;
    v30 = 0.0;
    v31 = 0.0;
    v32 = 0.0;
    v15 = 0.0;
    v14 = 0.0;
    v13 = v9;
    v12 = v7;
  }
  v16 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA610]), "initWithSize:", v12, v13);
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = ___SBFluidSwitcherTitledButtonContentImageWithTitle_block_invoke;
  v22[3] = &unk_1E8EAC418;
  v25 = v14;
  v26 = v15;
  v27 = v7;
  v28 = v9;
  v23 = v1;
  v24 = v5;
  v17 = v5;
  v18 = v1;
  objc_msgSend(v16, "imageWithActions:", v22);
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "imageWithAlignmentRectInsets:", v31, v32, v29, v30);
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  return v20;
}

void sub_1D08E848C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08E8914(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08E9154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08E9BB4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

BOOL SBRemoveBackgroundActivityAttributionByIdentifier(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;

  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "backgroundActivityIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "removeObject:", v4);

  v7 = objc_msgSend(v6, "count");
  if (!v7)
    objc_msgSend(v3, "removeObjectForKey:", v5);

  return v7 == 0;
}

BOOL SBAddBackgroundActivityAttributionByIdentifier(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "backgroundActivityIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKey:", v5);
  v6 = objc_claimAutoreleasedReturnValue();
  v7 = (void *)v6;
  if (!v6)
  {
    objc_msgSend(MEMORY[0x1E0CB3690], "weakObjectsHashTable");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setObject:forKey:", v7, v5);
  }
  objc_msgSend(v7, "addObject:", v3);

  return v6 == 0;
}

const __CFString *SBStringFromScrollSwitcherModifierEventPhase(uint64_t a1)
{
  if (a1)
    return CFSTR("EndScrolling");
  else
    return CFSTR("Scrolling");
}

void sub_1D08EFB10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08EFD30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08F31B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

BOOL SBDisplayItemLayoutAttributesOcclusionStateIsOccluded(unint64_t a1)
{
  return a1 > 1;
}

const __CFString *SBDisplayItemLayoutAttributesOcclusionStateDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("unknown");
  else
    return off_1E8EAC648[a1 - 1];
}

const __CFString *SBDisplayItemAttributesSemanticSizeTypeDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8)
    return CFSTR("None");
  else
    return off_1E8EAC600[a1 - 1];
}

uint64_t _SBDisplayItemAttributedSizeMake@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>, double a7@<D4>, double a8@<D5>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(double *)(a2 + 24) = a6;
  *(double *)(a2 + 32) = a7;
  *(double *)(a2 + 40) = a8;
  *(_QWORD *)(a2 + 48) = result;
  return result;
}

__n128 SBDisplayItemAttributedSizeUnspecified@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  v1 = MEMORY[0x1E0C9D648];
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 48) = 0;
  return result;
}

uint64_t SBDisplayItemAttributedSizeInfer@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, double a7@<D5>)
{
  int v14;
  uint64_t result;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;

  v14 = BSFloatEqualToFloat();
  result = BSFloatEqualToFloat();
  v16 = 3;
  if ((v14 & result) == 0)
    v16 = 1;
  if (!v14)
    v16 = 2;
  if ((v14 & 1) == 0 && (result & 1) == 0)
  {
    v17 = BSFloatEqualToFloat();
    result = BSFloatEqualToFloat();
    v16 = 4;
    if ((v17 & result) != 0)
      v16 = 6;
    if (!v17)
      v16 = 5;
    if ((v17 & 1) == 0 && (result & 1) == 0)
    {
      v18 = BSFloatEqualToFloat();
      result = BSFloatEqualToFloat();
      v16 = 7;
      if ((result & v18) != 0)
        v16 = 9;
      v19 = 8;
      if (!(_DWORD)result)
        v19 = 0;
      if (!v18)
        v16 = v19;
    }
  }
  *(double *)a1 = a2;
  *(double *)(a1 + 8) = a3;
  *(double *)(a1 + 16) = a4;
  *(double *)(a1 + 24) = a5;
  *(double *)(a1 + 32) = a6;
  *(double *)(a1 + 40) = a7;
  *(_QWORD *)(a1 + 48) = v16;
  return result;
}

uint64_t SBEqualDisplayItemAttributedSizes(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = BSSizeEqualToSize();
  if ((_DWORD)result)
  {
    result = BSRectEqualToRect();
    if ((_DWORD)result)
      return *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48);
  }
  return result;
}

BOOL SBDisplayItemAttributedSizeIsValid(uint64_t a1)
{
  int v2;
  _BOOL4 v3;

  if (BSFloatGreaterThanOrEqualToFloat())
    v2 = BSFloatGreaterThanOrEqualToFloat();
  else
    v2 = 0;
  if (CGRectIsEmpty(*(CGRect *)(a1 + 16)) || CGRectIsNull(*(CGRect *)(a1 + 16)))
  {
    v3 = 0;
    if (v2)
      return *(_QWORD *)(a1 + 48) < 0xAuLL && v3;
    return 0;
  }
  v3 = !CGRectIsInfinite(*(CGRect *)(a1 + 16));
  if (!v2)
    return 0;
  return *(_QWORD *)(a1 + 48) < 0xAuLL && v3;
}

__CFString *SBDisplayItemAttributedSizeDescription(uint64_t a1)
{
  CGSize v2;
  __CFString *v3;
  CGFloat height;

  switch(*(_QWORD *)(a1 + 48))
  {
    case 0:
      if (BSFloatLessThanOrEqualToFloat() && BSFloatLessThanOrEqualToFloat())
        v2 = (CGSize)vmulq_f64(*(float64x2_t *)a1, *(float64x2_t *)(a1 + 32));
      else
        v2 = *(CGSize *)a1;
      height = v2.height;
      NSStringFromCGSize(v2);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
      break;
    case 1:
      v3 = CFSTR("FullWidth");
      break;
    case 2:
      v3 = CFSTR("FullHeight");
      break;
    case 3:
      v3 = CFSTR("FullWidthAndHeight");
      break;
    case 4:
      v3 = CFSTR("DefaultWidth");
      break;
    case 5:
      v3 = CFSTR("DefaultHeight");
      break;
    case 6:
      v3 = CFSTR("DefaultWidthAndHeight");
      break;
    case 7:
      v3 = CFSTR("ScreenEdgePaddingWidth");
      break;
    case 8:
      v3 = CFSTR("ScreenEdgePaddingHeight");
      break;
    case 9:
      v3 = CFSTR("ScreenEdgePaddingWidthAndHeight");
      break;
    default:
      v3 = CFSTR("None");
      break;
  }
  return v3;
}

BOOL SBDisplayItemCenterIsUnspecified(double a1, double a2)
{
  return a2 == 0.0 && a1 == 0.0;
}

const __CFString *SBCaptureButtonActionString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("Unknown");
  else
    return off_1E8EAC660[a1 - 1];
}

const __CFString *UIDeviceOrientationString(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5)
    return CFSTR("Unknown");
  else
    return off_1E8EAC688[a1 - 1];
}

uint64_t SBCaptureButtonMitigationConfigurationMake(unsigned int a1, int a2, int a3, int a4, int a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = 0x10000000000;
  if (!a6)
    v6 = 0;
  v7 = 0x100000000;
  if (!a5)
    v7 = 0;
  v8 = 0x1000000;
  if (!a4)
    v8 = 0;
  v9 = 0x10000;
  if (!a3)
    v9 = 0;
  v10 = 256;
  if (!a2)
    v10 = 0;
  return v10 | a1 | v9 | v8 | v7 | v6;
}

uint64_t SBCaptureButtonUpLogMake@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12)
{
  *(_QWORD *)(a9 + 32) = a7;
  *(_QWORD *)(a9 + 40) = 0;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_DWORD *)(a9 + 16) = a3;
  *(_WORD *)(a9 + 20) = WORD2(a3);
  *(_BYTE *)(a9 + 22) = a4;
  *(_BYTE *)(a9 + 23) = a5;
  *(_QWORD *)(a9 + 24) = 0;
  *(_BYTE *)(a9 + 24) = a6;
  *(_BYTE *)(a9 + 40) = a8;
  *(double *)(a9 + 48) = a10;
  *(_QWORD *)(a9 + 56) = a11;
  *(_QWORD *)(a9 + 64) = a12;
  return result;
}

void SBCaptureButtonUpLogReadableString(uint64_t *a1)
{
  char v2;
  char v3;
  char v4;
  char v5;
  char v6;
  char v7;
  NSObject *v8;
  unint64_t v9;
  const __CFString *v10;
  unint64_t v11;
  const __CFString *v12;
  int v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  const __CFString *v20;
  uint8_t buf[4];
  const __CFString *v22;
  __int16 v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  int v28;
  __int16 v29;
  int v30;
  __int16 v31;
  int v32;
  __int16 v33;
  const __CFString *v34;
  __int16 v35;
  int v36;
  __int16 v37;
  void *v38;
  __int16 v39;
  int v40;
  __int16 v41;
  int v42;
  __int16 v43;
  int v44;
  __int16 v45;
  int v46;
  __int16 v47;
  int v48;
  __int16 v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v2 = *((_BYTE *)a1 + 16);
  v3 = *((_BYTE *)a1 + 17);
  v4 = *((_BYTE *)a1 + 18);
  v5 = *((_BYTE *)a1 + 19);
  v6 = *((_BYTE *)a1 + 20);
  v7 = *((_BYTE *)a1 + 21);
  SBLogCameraCaptureStudyLogs();
  v8 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    v9 = a1[7] - 1;
    if (v9 > 4)
      v10 = CFSTR("Unknown");
    else
      v10 = off_1E8EAC660[v9];
    v20 = v10;
    v15 = *a1;
    v16 = a1[1];
    v17 = *((unsigned __int8 *)a1 + 22);
    v18 = *((unsigned __int8 *)a1 + 23);
    v19 = *((unsigned __int8 *)a1 + 24);
    v11 = a1[4] - 1;
    if (v11 > 5)
      v12 = CFSTR("Unknown");
    else
      v12 = off_1E8EAC688[v11];
    v13 = *((unsigned __int8 *)a1 + 40);
    NSStringFromSBEmbeddedDeviceStationaryState(a1[8]);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    *(_DWORD *)buf = 138415874;
    v22 = v20;
    v23 = 2048;
    v24 = v15;
    v25 = 2048;
    v26 = v16;
    v27 = 1024;
    v28 = v17;
    v29 = 1024;
    v30 = v18;
    v31 = 1024;
    v32 = v19;
    v33 = 2112;
    v34 = v12;
    v35 = 1024;
    v36 = v13;
    v37 = 2112;
    v38 = v14;
    v39 = 1024;
    v40 = v2 & 1;
    v41 = 1024;
    v42 = v3 & 1;
    v43 = 1024;
    v44 = v4 & 1;
    v45 = 1024;
    v46 = v5 & 1;
    v47 = 1024;
    v48 = v6 & 1;
    v49 = 1024;
    v50 = v7 & 1;
    _os_log_impl(&dword_1D0540000, v8, OS_LOG_TYPE_DEFAULT, "resultingAction(%@); machAbsoluteTime(%lld); activatingClickCount(%ld); screenDim(%{BOOL}u); uiLocked(%{BOOL}u); i"
      "nDirectLaunchGracePeriod(%{BOOL}u); deviceOrientation(%@); consoleModeActive(%{BOOL}u); stationaryState(%@); disab"
      "leStationaryDetection(%{BOOL}u); disableWakeWhenDim(%{BOOL}u); disableDirectLaunchAfterUnsuppress(%{BOOL}u); allow"
      "LaunchIfUnobstructedWhileButtonDown(%{BOOL}u); allowLaunchIfUnobstructedPromptlyAfterButtonUp(%{BOOL}u); enableCam"
      "eraPose(%{BOOL}u)",
      buf,
      0x70u);

  }
}

void sub_1D08F9268(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_1D08F9304(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_5_5(void *a1, const char *a2)
{
  return objc_msgSend(a1, "pid");
}

void sub_1D08FAD10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBCoverSheetTransitionTypeForCurrentState()
{
  int v0;
  void *v1;
  void *v2;
  int v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  int v15;
  int v16;
  void *v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  void *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v0 = _os_feature_enabled_impl();
  +[SBWallpaperController sharedInstance](SBWallpaperController, "sharedInstance");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = v1;
  if (v0)
  {
    v3 = objc_msgSend(v1, "homeScreenPosterMirrorsLock");
  }
  else
  {
    objc_msgSend(v1, "wallpaperConfigurationManager");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v4, "variantsShareWallpaperConfigurationForTypes:", 54);

  }
  +[SBCoverSheetPresentationManager sharedInstance](SBCoverSheetPresentationManager, "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "coverSheetWindow");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_sbWindowScene");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "switcherController");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "layoutStatePrimaryElement");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "workspaceEntity");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "applicationSceneEntity");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "sceneHandle");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  +[SBSecureAppManager sharedInstance](SBSecureAppManager, "sharedInstance");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v13, "hasSecureApp"))
  {
    objc_msgSend((id)SBApp, "authenticationController");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "isAuthenticatedCached") ^ 1;

  }
  else
  {
    v15 = 0;
  }

  v16 = objc_msgSend(v5, "isInSecureApp");
  +[SBBacklightController sharedInstance](SBBacklightController, "sharedInstance");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "backlightState");

  if (v12)
    v19 = 1;
  else
    v19 = v15;
  v20 = v19 | v16;
  if (v18 == 3)
  {
    if (v20)
      v21 = 7;
    else
      v21 = 8;
  }
  else if ((v20 & 1) != 0)
  {
    v21 = 5;
  }
  else
  {
    +[SBCoverSheetPresentationManager sharedInstance](SBCoverSheetPresentationManager, "sharedInstance");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(v22, "hasBeenDismissedSinceKeybagLock");

    v24 = 3;
    if (!v23)
      v24 = 1;
    v25 = 2;
    if (v23)
      v25 = 4;
    if (v3)
      v21 = v24;
    else
      v21 = v25;
  }

  return v21;
}

id CSCoverSheetTransitionSettingsForTransitionType(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0D1BBD8], "rootSettings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "coverSheetTransitionsSettings");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  switch(a1)
  {
    case 1:
      objc_msgSend(v3, "sameWallpaperInitialTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    case 2:
      objc_msgSend(v3, "differentWallpaperInitialTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    case 3:
      objc_msgSend(v3, "sameWallpaperSubsequentTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    case 4:
      objc_msgSend(v3, "differentWallpaperSubsequentTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    case 5:
      objc_msgSend(v3, "overAppTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    case 6:
      objc_msgSend(v3, "overLandscapeTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    case 7:
      objc_msgSend(v3, "inactiveOverAppTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    case 8:
      objc_msgSend(v3, "inactiveOverHomescreenTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
      goto LABEL_12;
    case 9:
      objc_msgSend(v3, "captureExtensionToAppTransitionSettings");
      v4 = objc_claimAutoreleasedReturnValue();
LABEL_12:
      v5 = (void *)v4;
      break;
    default:
      v5 = 0;
      break;
  }

  return v5;
}

uint64_t SBPBDisplayItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  BOOL v14;
  int v15;
  BOOL v16;
  char v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  void *v26;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (2)
    {
      if (!*(_BYTE *)(a2 + *v5))
      {
        v8 = 0;
        v9 = 0;
        v10 = 0;
        while (1)
        {
          v11 = *v3;
          v12 = *(_QWORD *)(a2 + v11);
          if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
            break;
          v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
          *(_QWORD *)(a2 + v11) = v12 + 1;
          v10 |= (unint64_t)(v13 & 0x7F) << v8;
          if ((v13 & 0x80) == 0)
            goto LABEL_12;
          v8 += 7;
          v14 = v9++ >= 9;
          if (v14)
          {
            v10 = 0;
            v15 = *(unsigned __int8 *)(a2 + *v5);
            goto LABEL_14;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
        v15 = *(unsigned __int8 *)(a2 + *v5);
        if (*(_BYTE *)(a2 + *v5))
          v10 = 0;
LABEL_14:
        if (v15)
          v16 = 1;
        else
          v16 = (v10 & 7) == 4;
        if (!v16)
        {
          switch((v10 >> 3))
          {
            case 1u:
              v17 = 0;
              v18 = 0;
              v19 = 0;
              break;
            case 2u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 8;
              goto LABEL_31;
            case 3u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 16;
              goto LABEL_31;
            case 4u:
              PBReaderReadString();
              v24 = objc_claimAutoreleasedReturnValue();
              v25 = 32;
LABEL_31:
              v26 = *(void **)(a1 + v25);
              *(_QWORD *)(a1 + v25) = v24;

              goto LABEL_36;
            default:
              result = PBReaderSkipValueWithTag();
              if (!(_DWORD)result)
                return result;
LABEL_36:
              if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
                return *(_BYTE *)(a2 + *v5) == 0;
              continue;
          }
          while (1)
          {
            v20 = *v3;
            v21 = *(_QWORD *)(a2 + v20);
            if (v21 == -1 || v21 >= *(_QWORD *)(a2 + *v4))
              break;
            v22 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 1;
            v19 |= (unint64_t)(v22 & 0x7F) << v17;
            if ((v22 & 0x80) == 0)
              goto LABEL_33;
            v17 += 7;
            v14 = v18++ >= 9;
            if (v14)
            {
              LODWORD(v19) = 0;
              goto LABEL_35;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_33:
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v19) = 0;
LABEL_35:
          *(_DWORD *)(a1 + 24) = v19;
          goto LABEL_36;
        }
      }
      break;
    }
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

__CFString *NSStringFromSBHomeGestureFinalDestination(unint64_t a1)
{
  if (a1 > 4)
    return 0;
  else
    return off_1E8EAC880[a1];
}

void sub_1D08FF40C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D08FF620(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0900254(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,id a35)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a35);
  _Unwind_Resume(a1);
}

uint64_t _SBADIStringCompare(void *a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;

  v5 = (void *)MEMORY[0x1E0C99E40];
  v6 = a2;
  v7 = a1;
  if (a3)
    objc_msgSend(v5, "orderedSetWithObject:", a3);
  else
    objc_msgSend(v5, "orderedSet");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = _SBADIStringCompareWithSet(v7, v6, v8);

  return v9;
}

void sub_1D09017F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _UIAngleInRadiansForRotationBetweenAngleAndAngleInDirection(uint64_t a1, double a2, double a3)
{
  double v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  if (fabs(a2) > 6.28318531)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGFloat _UIAngleInRadiansForRotationBetweenAngleAndAngleInDirection(CGFloat, CGFloat, _UIInterfaceOrientationRotationDirection)");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "handleFailureInFunction:file:lineNumber:description:", v8, CFSTR("SBFluidSwitcherItemContainer.m"), 1603, CFSTR("fromAngle should be constrained within ±2π"));

  }
  if (fabs(a3) > 6.28318531)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGFloat _UIAngleInRadiansForRotationBetweenAngleAndAngleInDirection(CGFloat, CGFloat, _UIInterfaceOrientationRotationDirection)");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("SBFluidSwitcherItemContainer.m"), 1604, CFSTR("toAngle should be constrained within ±2π"));

  }
  v6 = a3 - a2;
  if (a1 == 2)
  {
    for (; v6 > 0.0; v6 = v6 + -6.28318531)
      ;
  }
  else if (a1 == 1)
  {
    while (v6 < 0.0)
      v6 = v6 + 6.28318531;
  }
}

uint64_t _UIInterfaceOrientationRotationDirectionForRotationFromInterfaceOrientationToInterfaceOrientation(uint64_t a1, uint64_t a2, int a3)
{
  double v3;
  double v4;
  double v6;
  double v7;
  double v8;

  if ((unint64_t)(a1 - 3) < 2 != (unint64_t)(a2 - 3) < 2)
  {
    v3 = 0.0;
    v4 = 0.0;
    if (a1 != 1)
    {
      switch(a1)
      {
        case 3:
          v4 = 1.57079633;
          break;
        case 4:
          v4 = -1.57079633;
          break;
        case 2:
          v4 = 3.14159265;
          break;
        default:
          v4 = 0.0;
          break;
      }
    }
    if (a2 != 1)
    {
      switch(a2)
      {
        case 3:
          v3 = 1.57079633;
          break;
        case 4:
          v3 = -1.57079633;
          break;
        case 2:
          v3 = 3.14159265;
          break;
        default:
          v3 = 0.0;
          break;
      }
    }
    _UIAngleInRadiansForRotationBetweenAngleAndAngleInDirection(1, v4, v3);
    v7 = v6;
    _UIAngleInRadiansForRotationBetweenAngleAndAngleInDirection(2, v4, v3);
    if (fabs(v7) < fabs(v8))
      return 1;
    else
      return 2;
  }
  else if (a3)
  {
    return 2;
  }
  else
  {
    return 1;
  }
}

uint64_t _UIInterfaceOrientationFromCATransform3D(_OWORD *a1)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  CATransform3D v23;
  CATransform3D a;

  if (_UIInterfaceOrientationFromCATransform3D_onceToken != -1)
    dispatch_once(&_UIInterfaceOrientationFromCATransform3D_onceToken, &__block_literal_global_631);
  v2 = a1[5];
  *(_OWORD *)&a.m31 = a1[4];
  *(_OWORD *)&a.m33 = v2;
  v3 = a1[7];
  *(_OWORD *)&a.m41 = a1[6];
  *(_OWORD *)&a.m43 = v3;
  v4 = a1[1];
  *(_OWORD *)&a.m11 = *a1;
  *(_OWORD *)&a.m13 = v4;
  v5 = a1[3];
  *(_OWORD *)&a.m21 = a1[2];
  *(_OWORD *)&a.m23 = v5;
  if (!MEMORY[0x1D17E267C](&a))
    return 0;
  v6 = a1[5];
  *(_OWORD *)&a.m31 = a1[4];
  *(_OWORD *)&a.m33 = v6;
  v7 = a1[7];
  *(_OWORD *)&a.m41 = a1[6];
  *(_OWORD *)&a.m43 = v7;
  v8 = a1[1];
  *(_OWORD *)&a.m11 = *a1;
  *(_OWORD *)&a.m13 = v8;
  v9 = a1[3];
  *(_OWORD *)&a.m21 = a1[2];
  *(_OWORD *)&a.m23 = v9;
  v23 = *(CATransform3D *)_UIInterfaceOrientationFromCATransform3D_canonicalPortraitTransform;
  if (CATransform3DEqualToTransform(&a, &v23))
    return 1;
  v11 = a1[5];
  *(_OWORD *)&a.m31 = a1[4];
  *(_OWORD *)&a.m33 = v11;
  v12 = a1[7];
  *(_OWORD *)&a.m41 = a1[6];
  *(_OWORD *)&a.m43 = v12;
  v13 = a1[1];
  *(_OWORD *)&a.m11 = *a1;
  *(_OWORD *)&a.m13 = v13;
  v14 = a1[3];
  *(_OWORD *)&a.m21 = a1[2];
  *(_OWORD *)&a.m23 = v14;
  v23 = *(CATransform3D *)_UIInterfaceOrientationFromCATransform3D_canonicalLandscapeLeftTransform;
  if (CATransform3DEqualToTransform(&a, &v23))
    return 4;
  v15 = a1[5];
  *(_OWORD *)&a.m31 = a1[4];
  *(_OWORD *)&a.m33 = v15;
  v16 = a1[7];
  *(_OWORD *)&a.m41 = a1[6];
  *(_OWORD *)&a.m43 = v16;
  v17 = a1[1];
  *(_OWORD *)&a.m11 = *a1;
  *(_OWORD *)&a.m13 = v17;
  v18 = a1[3];
  *(_OWORD *)&a.m21 = a1[2];
  *(_OWORD *)&a.m23 = v18;
  v23 = *(CATransform3D *)_UIInterfaceOrientationFromCATransform3D_canonicalLandscapeRightTransform;
  if (CATransform3DEqualToTransform(&a, &v23))
    return 3;
  v19 = a1[5];
  *(_OWORD *)&a.m31 = a1[4];
  *(_OWORD *)&a.m33 = v19;
  v20 = a1[7];
  *(_OWORD *)&a.m41 = a1[6];
  *(_OWORD *)&a.m43 = v20;
  v21 = a1[1];
  *(_OWORD *)&a.m11 = *a1;
  *(_OWORD *)&a.m13 = v21;
  v22 = a1[3];
  *(_OWORD *)&a.m21 = a1[2];
  *(_OWORD *)&a.m23 = v22;
  v23 = *(CATransform3D *)_UIInterfaceOrientationFromCATransform3D_canonicalPortraitUpsideDownTransform;
  if (CATransform3DEqualToTransform(&a, &v23))
    return 2;
  else
    return 0;
}

void _UIMakeBasicTransformAnimationUnambiguous(void *a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v8;
  id v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  void *v15;
  void *v16;
  int v17;
  double v18;
  void *v19;
  id v20;

  if (a2 && a3)
  {
    v8 = a4 | a5;
    v9 = a1;
    v10 = _UIInterfaceOrientationRotationDirectionForRotationFromInterfaceOrientationToInterfaceOrientation(a2, a3, v8);
    v11 = 0.0;
    v12 = 0.0;
    if (a2 != 1)
    {
      if (a2 == 3)
      {
        v12 = 1.57079633;
      }
      else if (a2 == 4)
      {
        v12 = -1.57079633;
      }
      else
      {
        v12 = 3.14159265;
        if (a2 != 2)
          v12 = 0.0;
      }
    }
    if (a3 != 1)
    {
      switch(a3)
      {
        case 3:
          v11 = 1.57079633;
          break;
        case 4:
          v11 = -1.57079633;
          break;
        case 2:
          v11 = 3.14159265;
          break;
        default:
          v11 = 0.0;
          break;
      }
    }
    _UIAngleInRadiansForRotationBetweenAngleAndAngleInDirection(v10, v12, v11);
    if (a5)
      v14 = -v13;
    else
      v14 = v13;
    objc_msgSend(v9, "setFromValue:", 0);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setByValue:", v15);

    v16 = (void *)MEMORY[0x1E0CB37E8];
    v17 = objc_msgSend(v9, "isAdditive");
    v18 = 0.0;
    if (!v17)
      v18 = v11;
    objc_msgSend(v16, "numberWithDouble:", v18);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setToValue:", v19);

    objc_msgSend(MEMORY[0x1E0CD28D8], "functionWithName:", *MEMORY[0x1E0CD31C0]);
    v20 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setValueFunction:", v20);

  }
}

void sub_1D0910D6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double *indexingAscendingLUT(double *result, uint64_t a2, double a3)
{
  uint64_t i;
  double v5;
  unint64_t v6;
  double v7;
  double v8;

  if (!a2)
    indexingAscendingLUT_cold_1();
  if (*result < a3 && result[a2 - 1] > a3 && a2 != 1)
  {
    for (i = 0; ; ++i)
    {
      v5 = result[i + 1];
      if (v5 > a3)
        break;
      v6 = i + 2;
      if (v6 > a2 - 1)
        return result;
    }
    v7 = v5 - result[i];
    result = (double *)BSCGFloatEpsilon();
    if (v7 <= v8)
      indexingAscendingLUT_cold_2();
  }
  return result;
}

double resampleLinearInterpolation(uint64_t a1, uint64_t a2, double a3)
{
  float v4;
  unint64_t v5;

  if (a3 < 0.0)
    return *(double *)a1;
  if ((double)(unint64_t)(a2 - 1) <= a3)
    return *(double *)(a1 + 8 * (a2 - 1));
  v4 = a3;
  v5 = vcvtms_u32_f32(v4);
  return (1.0 - ((double)v5 + 1.0 - a3)) * *(double *)(a1 + 8 * v5 + 8)
       + *(double *)(a1 + 8 * v5) * ((double)v5 + 1.0 - a3);
}

void sub_1D0913780(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

const __CFString *SBStringFromSystemApertureKeyLineStyle(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("None");
  if (a1 == 1)
    v1 = CFSTR("Alert");
  if (a1 == 2)
    return CFSTR("Activity");
  else
    return v1;
}

const __CFString *SBStringFromSystemApertureKeyLineMode(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("None");
  if (a1 == 1)
    v1 = CFSTR("Light - Enabled");
  if (a1 == 2)
    return CFSTR("Dark - Enabled");
  else
    return v1;
}

const __CFString *SBStringFromSystemApertureShadowStyle(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6)
    return CFSTR("Inert");
  else
    return off_1E8EACD70[a1 - 1];
}

const __CFString *SBStringFromSystemApertureBackgroundLuminanceLevel(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Unknown");
  if (a1 == 1)
    v1 = CFSTR("Light");
  if (a1 == 2)
    return CFSTR("Dark");
  else
    return v1;
}

void sub_1D0914A90(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D0916848(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0916950(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D09182B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09193E0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D091AD90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D091C2E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D091F080(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D091F5E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D091FA70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0922344(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D092547C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0927A94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *SBWallpaperOrientationSourceDescription(unint64_t a1)
{
  if (a1 > 3)
    return 0;
  else
    return off_1E8EAD398[a1];
}

void OUTLINED_FUNCTION_4_6(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_list va;

  va_start(va, a4);
  _os_log_fault_impl(a1, log, OS_LOG_TYPE_FAULT, a4, (uint8_t *)va, 0x16u);
}

void sub_1D09320A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0932540(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0932B00(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D0932E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  uint64_t v27;

  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1D0933898(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0934280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D093465C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0934ED4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D093690C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0936A60(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0937010(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0939EDC(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

BOOL SBAmbientDisplayStyleForTraitsDisplayStyle(uint64_t a1)
{
  return a1 == 1;
}

BOOL SBTraitsAmbientDisplayStyleForAmbientDisplayStyle(uint64_t a1)
{
  return a1 == 1;
}

void sub_1D093D8B8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D093DAE0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D093E2C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D093EFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D093F138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D093F3D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D093F734(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D093FA9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09403A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09429A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0943400(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_1D09435FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSBHardwareButtonHintDropletKeylineStyle(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("AdaptiveMatrix");
  if (a1 == 1)
    v1 = CFSTR("GlowEffectStageSoftEdge");
  if (a1 == 2)
    return CFSTR("GlowEffectStageHardEdge");
  else
    return v1;
}

void sub_1D0946C08(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  _Block_object_dispose((const void *)(v3 - 184), 8);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

__CFString *NSStringFromSBHomeGrabberViewPresence(unint64_t a1)
{
  if (a1 < 3)
    return off_1E8EAD9E8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%li)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

const __CFString *NSStringFromSBLiftToWakeTransition(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("<unknown>");
  else
    return off_1E8EADA48[a1 - 1];
}

void sub_1D0949294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0949568(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D094E2AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D094FF14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D095160C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

__CFString *SBStringFromPIPLayoutTrait(uint64_t a1)
{
  void *v3;
  id v4;
  _QWORD *v5;
  uint8x8_t v6;
  int v7;
  unint64_t v8;
  _QWORD v9[2];
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  id v12;
  char v13;

  if (!a1)
    return CFSTR("None");
  if (a1 == 7)
    return CFSTR("All");
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v10 = __SBStringFromPIPLayoutTrait_block_invoke;
  v11 = &unk_1E8E9EB40;
  v4 = v3;
  v12 = v4;
  v5 = v9;
  v13 = 0;
  v6 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
  v6.i16[0] = vaddlv_u8(v6);
  v7 = v6.i32[0];
  if (v6.i32[0])
  {
    v8 = 0;
    do
    {
      if (((1 << v8) & a1) != 0)
      {
        ((void (*)(_QWORD *))v10)(v5);
        if (v13)
          break;
        --v7;
      }
      if (v8 > 0x3E)
        break;
      ++v8;
    }
    while (v7 > 0);
  }

  return (__CFString *)v4;
}

__CFString *SBStringFromPIPLayoutReason(uint64_t a1)
{
  void *v3;
  id v4;
  _QWORD *v5;
  uint8x8_t v6;
  int v7;
  unint64_t v8;
  _QWORD v9[2];
  uint64_t (*v10)(uint64_t, uint64_t);
  void *v11;
  id v12;
  char v13;

  if (!a1)
    return CFSTR("Undefined");
  if (a1 == 1920)
    return CFSTR("All Gestures");
  objc_msgSend(MEMORY[0x1E0CB37A0], "string");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v10 = __SBStringFromPIPLayoutReason_block_invoke;
  v11 = &unk_1E8E9EB40;
  v4 = v3;
  v12 = v4;
  v5 = v9;
  v13 = 0;
  v6 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
  v6.i16[0] = vaddlv_u8(v6);
  v7 = v6.i32[0];
  if (v6.i32[0])
  {
    v8 = 0;
    do
    {
      if (((1 << v8) & a1) != 0)
      {
        ((void (*)(_QWORD *))v10)(v5);
        if (v13)
          break;
        --v7;
      }
      if (v8 > 0x3E)
        break;
      ++v8;
    }
    while (v7 > 0);
  }

  return (__CFString *)v4;
}

void sub_1D0954574(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0955864(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D0955A78(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D0957AD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09597CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  uint64_t v21;

  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v21 - 88));
  _Unwind_Resume(a1);
}

void sub_1D0959AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location, id a20)
{
  objc_destroyWeak(&location);
  objc_destroyWeak(&a20);
  _Unwind_Resume(a1);
}

void sub_1D0959FDC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D095AC68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_4_8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void OUTLINED_FUNCTION_6_2(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void sub_1D095E518(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D095E884(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

uint64_t XBGetUIUserInterfaceStyleForSceneSnapshot(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;

  objc_msgSend(a1, "context");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "settings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_opt_class();
  v4 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v5 = v4;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
  }
  v6 = v5;

  if (v6)
    v7 = objc_msgSend(v6, "userInterfaceStyle");
  else
    v7 = 0;

  return v7;
}

id XBGetCustomSafeAreaInsetsForSceneSnapshot(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  objc_msgSend(a1, "context");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "settings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_opt_class();
  v4 = v2;
  if (v3)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v5 = v4;
    else
      v5 = 0;
  }
  else
  {
    v5 = 0;
  }
  v6 = v5;

  if (v6)
  {
    objc_msgSend(v6, "safeAreaInsetsPortrait");
    objc_msgSend(MEMORY[0x1E0DA8F48], "makeWithEdgeInsets:");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

__CFString *NSStringFromSBSystemActionInteractionType(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("shortPress");
  if (a1 == 1)
  {
    v1 = CFSTR("longPress");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown: %lu>"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

void sub_1D09618B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _SBIdleTimeoutsDescriptionForLogging(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v1 = (objc_class *)MEMORY[0x1E0D01750];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___SBIdleTimeoutsDescriptionForLogging_block_invoke;
  v7[3] = &unk_1E8EADED8;
  v8 = v3;
  v4 = v3;
  objc_msgSend(v4, "appendCollection:withName:itemBlock:", v2, 0, v7);

  objc_msgSend(v4, "description");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1D0966760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0966824(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D096D6C4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

uint64_t SBDragPreviewShadowParametersEqualToShadowParameters()
{
  if (BSFloatEqualToFloat() && BSFloatEqualToFloat())
    return BSSizeEqualToSize();
  else
    return 0;
}

const __CFString *SBAppPlatterDragPreviewModeDescription(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("SBAppPlatterDragPreviewModeIcon");
  if (a1 == 2)
    v1 = CFSTR("SBAppPlatterDragPreviewModeSourceView");
  if (a1 == 1)
    return CFSTR("SBAppPlatterDragPreviewModePlatter");
  else
    return v1;
}

void sub_1D0972D18(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0972E54(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0973178(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

__CFString *_SBUIAnimationStateDescription(uint64_t a1)
{
  if (a1 < 5)
    return off_1E8EAE228[(int)a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%d)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0974A38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0974B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09765A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D097879C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09798D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D097A1E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D097A3F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D097AAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D097ACD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D097AF10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D097B0C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

__CFString *SBApplicationClassicModeDescription(unint64_t a1)
{
  if (a1 > 0x16)
    return 0;
  else
    return off_1E8EAE368[a1];
}

uint64_t SBApplicationClassicModeForString(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("none")) & 1) != 0)
  {
    v2 = 0;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("phone")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("4” phone")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("4.7” phone")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("5.5” phone")) & 1) != 0)
  {
    v2 = 4;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("5.8” rounded phone (display zoom)")) & 1) != 0)
  {
    v2 = 5;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("5.8” rounded phone")) & 1) != 0)
  {
    v2 = 6;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("6” rounded phone")) & 1) != 0)
  {
    v2 = 7;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("6.1” rounded phone")) & 1) != 0)
  {
    v2 = 8;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("6.5” rounded phone")) & 1) != 0)
  {
    v2 = 9;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("6.6” rounded phone")) & 1) != 0)
  {
    v2 = 10;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("6.7” rounded phone")) & 1) != 0)
  {
    v2 = 11;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("pad")) & 1) != 0)
  {
    v2 = 12;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("10.5” pad")) & 1) != 0)
  {
    v2 = 13;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("12.9” pad")) & 1) != 0)
  {
    v2 = 14;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("12.9” rounded pad (display zoom)")) & 1) != 0)
  {
    v2 = 15;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("10.9” rounded pad")) & 1) != 0)
  {
    v2 = 16;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("11” rounded pad")) & 1) != 0)
  {
    v2 = 17;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("11.1” rounded pad")) & 1) != 0)
  {
    v2 = 18;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("11” rounded pad (more space)")) & 1) != 0)
  {
    v2 = 19;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("12.9” rounded pad")) & 1) != 0)
  {
    v2 = 20;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("13” rounded pad")) & 1) != 0)
  {
    v2 = 21;
  }
  else if (objc_msgSend(v1, "isEqualToString:", CFSTR("12.9” rounded pad (more space)")))
  {
    v2 = 22;
  }
  else
  {
    v2 = -1;
  }

  return v2;
}

uint64_t SBApplicationClassicModeRepresentsPhone(uint64_t a1)
{
  return ((unint64_t)(a1 + 1) > 0x17) | (0x1FFCu >> (a1 + 1)) & 1;
}

id SBStringForSwitcherAsyncRenderingAttributes()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;

  v0 = (void *)MEMORY[0x1E0CB3940];
  NSStringFromBOOL();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromBOOL();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR("<wantsAsyncRendering:%@ wantsMinificationFilter:%@>"), v1, v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

__CFString *SBStringForSwitcherShelfContentOptions(uint64_t a1)
{
  char v1;
  id v2;
  void *v3;
  __CFString *v4;

  if (!a1)
  {
    v4 = CFSTR("none");
    return v4;
  }
  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  v3 = v2;
  if ((v1 & 1) == 0)
  {
    if ((v1 & 2) == 0)
      goto LABEL_4;
LABEL_10:
    objc_msgSend(v3, "addObject:", CFSTR("fullScreenWindows"));
    if ((v1 & 4) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  objc_msgSend(v2, "addObject:", CFSTR("centerWindows"));
  if ((v1 & 2) != 0)
    goto LABEL_10;
LABEL_4:
  if ((v1 & 4) != 0)
LABEL_5:
    objc_msgSend(v3, "addObject:", CFSTR("plusWindow"));
LABEL_6:
  objc_msgSend(v3, "componentsJoinedByString:", CFSTR("|"));
  v4 = (__CFString *)objc_claimAutoreleasedReturnValue();

  return v4;
}

const __CFString *SBStringForSwitcherShelfAnimationStyle(uint64_t a1)
{
  if (a1)
    return CFSTR("genie");
  else
    return CFSTR("fade");
}

uint64_t SBSwitcherShelfPresentationAttributesMake@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  *(_QWORD *)a4 = 0;
  *(_BYTE *)a4 = result;
  *(double *)(a4 + 8) = a5;
  *(double *)(a4 + 16) = a6;
  *(double *)(a4 + 24) = a7;
  *(double *)(a4 + 32) = a8;
  *(_QWORD *)(a4 + 40) = a2;
  *(_QWORD *)(a4 + 48) = a3;
  return result;
}

id SBStringForSwitcherShelfPresentationAttributes(uint64_t a1)
{
  void *v2;
  const __CFString *v3;
  void *v4;
  __CFString *v5;
  uint64_t v6;
  uint64_t v7;
  __CFString *v8;
  void *v9;
  void *v10;

  v2 = (void *)MEMORY[0x1E0CB3940];
  if (*(_BYTE *)a1)
    v3 = CFSTR("YES");
  else
    v3 = CFSTR("NO");
  NSStringFromCGRect(*(CGRect *)(a1 + 8));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = CFSTR("genie");
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  if (!v6)
    v5 = CFSTR("fade");
  v8 = v5;
  SBStringForSwitcherShelfContentOptions(v7);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("<presented:%@ targetFrame:%@ animationStyle:%@ contentOptions:%@>"), v3, v4, v8, v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

const __CFString *SBSwitcherContinuousExposeStripTongueStateDescription(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("unknown");
  if (a1 == 1)
    v1 = CFSTR("collapsed");
  if (a1 == 2)
    return CFSTR("peek");
  else
    return v1;
}

const __CFString *SBSwitcherContinuousExposeStripTongueDirectionDescription(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("unknown");
  if (a1 == 1)
    v1 = CFSTR("left");
  if (a1 == 2)
    return CFSTR("right");
  else
    return v1;
}

id SBSwitcherContinuousExposeStripTongueAttributesDescription(uint64_t a1, uint64_t a2)
{
  void *v2;
  const __CFString *v3;
  __CFString *v4;
  const __CFString *v5;
  __CFString *v6;
  void *v7;

  v2 = (void *)MEMORY[0x1E0CB3940];
  v3 = CFSTR("unknown");
  v4 = CFSTR("collapsed");
  if (a1 != 1)
    v4 = CFSTR("unknown");
  if (a1 == 2)
    v4 = CFSTR("peek");
  if (a2 == 1)
    v3 = CFSTR("left");
  if (a2 == 2)
    v5 = CFSTR("right");
  else
    v5 = v3;
  v6 = v4;
  objc_msgSend(v2, "stringWithFormat:", CFSTR("<state:%@ direction:%@>"), v6, v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

void sub_1D09826F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v12;
  va_list va;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v12 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1D098486C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0984BF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0984DD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

double mean_tetragon_orientation(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  double v15;
  double v16;
  double v17;
  __double2 v18;
  __double2 v19;
  __double2 v20;

  v15 = atan2(a8 - a2, a7 - a1);
  v16 = atan2(a6 - a2, a5 - a1);
  v17 = atan2(a8 - a4, a7 - a3);
  v18 = __sincos_stret(v15);
  v19 = __sincos_stret(v16);
  v20 = __sincos_stret(v17);
  return atan2(v19.__sinval + v18.__sinval * 2.0 + v20.__sinval, v19.__cosval + v18.__cosval * 2.0 + v20.__cosval);
}

void sub_1D09855D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

uint64_t SBRecognizedEdgeForHomeGestureRecognizer(void *a1)
{
  uint64_t result;

  result = objc_msgSend(a1, "touchedEdges");
  if ((result & 4) != 0)
    return 4;
  return result;
}

uint64_t SBScreenOrientedEdgeForHomeGestureRecognizer(void *a1)
{
  id v1;

  v1 = a1;
  objc_msgSend(v1, "touchedEdges");
  objc_msgSend(v1, "_touchInterfaceOrientation");

  return _screenRegionGivenInterfaceOrientedRegion();
}

uint64_t SBInterfaceOrientationOfTouchedEdgeForHomeGestureRecognizer(void *a1)
{
  id v1;
  int v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];
  void (*v9)(_QWORD *);
  void *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v1 = a1;
  objc_msgSend(v1, "touchedEdges");
  v2 = 4;
  objc_msgSend(v1, "_touchInterfaceOrientation");
  v3 = _screenRegionGivenInterfaceOrientedRegion();
  v13 = 0;
  v14 = &v13;
  v15 = 0x2020000000;
  v16 = 1;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v9 = (void (*)(_QWORD *))__SBInterfaceOrientationOfTouchedEdgeForHomeGestureRecognizer_block_invoke;
  v10 = &unk_1E8EA3890;
  v11 = &v13;
  v12 = v3;
  v4 = v8;
  v5 = 0;
  v17 = 0;
  do
  {
    if (((1 << v5) & 0x1E) != 0)
    {
      v9(v4);
      if (v17)
        break;
      --v2;
    }
    if (v5 > 0x3E)
      break;
    ++v5;
  }
  while (v2 > 0);

  v6 = v14[3];
  _Block_object_dispose(&v13, 8);

  return v6;
}

void sub_1D0985E10(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double _SBLocationForTouch(void *a1)
{
  id v1;
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  v1 = a1;
  objc_msgSend(v1, "window");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "locationInView:", 0);
  v4 = v3;
  v6 = v5;

  objc_msgSend(v2, "convertPoint:toWindow:", 0, v4, v6);
  v8 = v7;

  return v8;
}

const __CFString *stringForSBTouchTemplateMatchResult(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("possible");
  if (a1 == 1)
    v1 = CFSTR("match");
  if (a1 == 2)
    return CFSTR("noMatch");
  else
    return v1;
}

uint64_t SetupWiFiScanComplete(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  return objc_msgSend(a4, "_thread_wifiScanComplete:error:", a2, a3 != 0);
}

void sub_1D098F484(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0990544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0990644(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBWhitePointAdaptivityStyleForAdaptationMode(unsigned int a1)
{
  if (a1 > 6)
    return 0;
  else
    return qword_1D0E89A20[a1];
}

uint64_t SBAdaptationModeForWhitePointAdaptivityStyle(unint64_t a1)
{
  if (a1 < 5)
    return (a1 + 1);
  else
    return 0;
}

double _SBSampleValueWithTimingFunction(void *a1, double result)
{
  float v2;

  if (a1)
  {
    *(float *)&result = result;
    objc_msgSend(a1, "_solveForInput:", result);
    return v2;
  }
  return result;
}

const __CFString *SBStringFromInsertionSwitcherModifierPhase(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("Possible");
  else
    return off_1E8EAEA10[a1 - 1];
}

void sub_1D09925E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0992D54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0997A44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D099A4CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  uint64_t v13;
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D099C320(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D099C884(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void SBPPTLockInterfaceOrientation(uint64_t a1, void *a2)
{
  void (**v3)(_QWORD);
  void *v4;
  dispatch_time_t v5;
  _QWORD v6[4];
  void (**v7)(_QWORD);
  uint64_t v8;

  v3 = a2;
  if (objc_msgSend((id)SBApp, "activeInterfaceOrientation") == a1)
  {
    v3[2](v3);
  }
  else
  {
    +[SBOrientationLockManager sharedInstance](SBOrientationLockManager, "sharedInstance");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "lock:", a1);

    v5 = dispatch_time(0, 1000000000);
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __SBPPTLockInterfaceOrientation_block_invoke;
    v6[3] = &unk_1E8EA9A80;
    v8 = a1;
    v7 = v3;
    dispatch_after(v5, MEMORY[0x1E0C80D38], v6);

  }
}

void SBPPTUnlockInterfaceOrientation()
{
  id v0;

  +[SBOrientationLockManager sharedInstance](SBOrientationLockManager, "sharedInstance");
  v0 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "unlock");

}

void SBPPTObserveNotification(void *a1, void *a2, void *a3, double a4)
{
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  dispatch_block_t v17;
  void *v18;
  dispatch_time_t v19;
  _QWORD block[4];
  id v21;
  uint64_t *v22;
  _QWORD v23[4];
  id v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  void (*v31)(uint64_t);
  id v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t (*v36)(uint64_t, uint64_t);
  void (*v37)(uint64_t);
  id v38;

  v7 = a1;
  v8 = a2;
  v9 = a3;
  v33 = 0;
  v34 = &v33;
  v35 = 0x3032000000;
  v36 = __Block_byref_object_copy__55;
  v37 = __Block_byref_object_dispose__55;
  v38 = 0;
  v27 = 0;
  v28 = &v27;
  v29 = 0x3032000000;
  v30 = __Block_byref_object_copy__6;
  v31 = __Block_byref_object_dispose__7;
  v32 = 0;
  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3828], "mainQueue");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __SBPPTObserveNotification_block_invoke;
  v23[3] = &unk_1E8EAEE80;
  v25 = &v33;
  v26 = &v27;
  v13 = v9;
  v24 = v13;
  objc_msgSend(v10, "addObserverForName:object:queue:usingBlock:", v7, v8, v11, v23);
  v14 = objc_claimAutoreleasedReturnValue();
  v15 = (void *)v28[5];
  v28[5] = v14;

  block[0] = v12;
  block[1] = 3221225472;
  block[2] = __SBPPTObserveNotification_block_invoke_2;
  block[3] = &unk_1E8EA8CD0;
  v21 = v13;
  v22 = &v27;
  v16 = v13;
  v17 = dispatch_block_create((dispatch_block_flags_t)0, block);
  v18 = (void *)v34[5];
  v34[5] = (uint64_t)v17;

  v19 = dispatch_time(0, (uint64_t)(a4 * 1000000000.0));
  dispatch_after(v19, MEMORY[0x1E0C80D38], (dispatch_block_t)v34[5]);

  _Block_object_dispose(&v27, 8);
  _Block_object_dispose(&v33, 8);

}

void sub_1D099E408(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

id SBPPTEventActionsToTapAtPoint(double a1, double a2)
{
  _QWORD v3[6];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __SBPPTEventActionsToTapAtPoint_block_invoke;
  v3[3] = &__block_descriptor_48_e34_v16__0___RCPEventStreamComposer__8l;
  *(double *)&v3[4] = a1;
  *(double *)&v3[5] = a2;
  return (id)MEMORY[0x1D17E5550](v3);
}

id SBPPTEventActionsToTouchAndHoldAtPoint(double a1, double a2)
{
  _QWORD v3[6];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __SBPPTEventActionsToTouchAndHoldAtPoint_block_invoke;
  v3[3] = &__block_descriptor_48_e34_v16__0___RCPEventStreamComposer__8l;
  *(double *)&v3[4] = a1;
  *(double *)&v3[5] = a2;
  return (id)MEMORY[0x1D17E5550](v3);
}

id SBPPTEventActionsToPeekAndPopAtPoint(char a1, double a2, double a3, double a4)
{
  _QWORD v5[7];
  char v6;

  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __SBPPTEventActionsToPeekAndPopAtPoint_block_invoke;
  v5[3] = &__block_descriptor_57_e34_v16__0___RCPEventStreamComposer__8l;
  *(double *)&v5[4] = a2;
  *(double *)&v5[5] = a3;
  v6 = a1;
  *(double *)&v5[6] = a4;
  return (id)MEMORY[0x1D17E5550](v5);
}

void *SBPPTEventActionsToSwipeUpInMiddleOfInterface()
{
  return &__block_literal_global_164;
}

void *SBPPTEventActionsToSwipeDownInMiddleOfInterface()
{
  return &__block_literal_global_14_2;
}

void *SBPPTEventActionsToSwipeLeftInMiddleOfInterface()
{
  return &__block_literal_global_15_1;
}

void *SBPPTEventActionsToSwipeRightInMiddleOfInterface()
{
  return &__block_literal_global_16_0;
}

void *SBPPTEventActionsToSwipeUpFromBottomOfInterface()
{
  return &__block_literal_global_17;
}

void *SBPPTEventActionsToSwipeDownFromTopOfInterface()
{
  return &__block_literal_global_18_1;
}

void *SBPPTEventActionsToSwipeLeftFromRightOfInterface()
{
  return &__block_literal_global_19_0;
}

void *SBPPTEventActionsToSwipeRightFromLeftOfInterface()
{
  return &__block_literal_global_20_1;
}

void *SBPPTEventActionsToArcSwipeBetweenApps()
{
  return &__block_literal_global_21_0;
}

void *SBPPTEventActionsToBottomEdgeSwipeBetweenApps()
{
  return &__block_literal_global_22_1;
}

void *SBPPTEventActionsToFiveFingerScrunchToHomeScreen()
{
  return &__block_literal_global_23_2;
}

void SBPPTBeginFiveFingerScrunch(void *a1, void *a2, double a3)
{
  id v4;
  void (**v5)(id, id, _BYTE *, uint64_t);
  void *v6;
  void *v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double *v21;
  double v22;
  double v23;
  double *v24;
  void *v25;
  void *v26;
  double v27;
  _BYTE v29[80];
  _BYTE v30[80];
  uint64_t v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = a1;
  v5 = a2;
  +[SBFluidScrunchGestureRecognizer _scrunchTemplatesForTouchType:displayConfiguration:](SBFluidScrunchGestureRecognizer, "_scrunchTemplatesForTouchType:displayConfiguration:", 0, 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "bs_firstObjectPassingTest:", &__block_literal_global_38_1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void SBPPTBeginFiveFingerScrunch(__strong id<RCPEventStreamComposer>, CGFloat, __strong SBPPTGestureContinuationHandler)");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "handleFailureInFunction:file:lineNumber:description:", v26, CFSTR("SBPPTSupport.m"), 382, CFSTR("Couldn't find five-finger touch template."));

  }
  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "bounds");
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v32.origin.x = v10;
  v32.origin.y = v12;
  v32.size.width = v14;
  v32.size.height = v16;
  v27 = CGRectGetWidth(v32) * 0.5;
  v33.origin.x = v10;
  v33.origin.y = v12;
  v33.size.width = v14;
  v33.size.height = v16;
  v17 = CGRectGetHeight(v33) * 0.5;
  objc_msgSend(v7, "_centroid");
  v34.origin.x = v10;
  v34.origin.y = v12;
  v34.size.width = v14;
  v34.size.height = v16;
  CGRectGetWidth(v34);
  v35.origin.x = v10;
  v35.origin.y = v12;
  v35.size.width = v14;
  v35.size.height = v16;
  CGRectGetHeight(v35);
  objc_msgSend(v7, "distanceOfFarthestPointFromCentroid");
  v18 = 0;
  v19 = 0;
  v20 = 1.0 - a3;
  do
  {
    objc_msgSend(v7, "_pointAtIndex:", v19);
    UIPointRoundToScale();
    v21 = (double *)&v30[v18];
    *v21 = v22;
    v21[1] = v23;
    v24 = (double *)&v29[v18];
    *v24 = v27 * a3 + v20 * v22;
    v24[1] = v17 * a3 + v20 * v23;
    ++v19;
    v18 += 16;
  }
  while (v19 != 5);
  objc_msgSend(v4, "touchDownAtPoints:touchCount:", v30, 5);
  objc_msgSend(v4, "moveToPoints:touchCount:duration:", v29, 5, 0.25);
  v5[2](v5, v4, v29, 5);

}

void *SBPPTEventActionsToFiveFingerScrunchToAppSwitcher()
{
  return &__block_literal_global_26_2;
}

void *SBPPTEventActionsToFiveFingerScrunchAndSwipeBetweenApps()
{
  return &__block_literal_global_28_1;
}

void *SBPPTEventActionsToFourFingerSwipeBetweenApps()
{
  return &__block_literal_global_30_3;
}

void *SBPPTEventActionsToSwipeAndPauseToAppSwitcher()
{
  return &__block_literal_global_31_0;
}

void *SBPPTEventActionsToSwipeToHomeScreen()
{
  return &__block_literal_global_32_1;
}

void SBPPTSynthesizeEventsForEventActions(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  id v6;

  v3 = (objc_class *)MEMORY[0x1E0D83C38];
  v4 = a2;
  v5 = a1;
  v6 = objc_alloc_init(v3);
  objc_msgSend(MEMORY[0x1E0D83C30], "playEventActions:options:completion:", v5, v6, v4);

}

void SBPPTSynthesizeEventsForCommandString(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  id v6;

  v3 = (objc_class *)MEMORY[0x1E0D83C38];
  v4 = a2;
  v5 = a1;
  v6 = objc_alloc_init(v3);
  objc_msgSend(MEMORY[0x1E0D83C30], "playCommandString:options:completion:", v5, v6, v4);

}

void SBPPTSynthesizeEventsForEventStream(void *a1, void *a2)
{
  objc_class *v3;
  id v4;
  id v5;
  id v6;

  v3 = (objc_class *)MEMORY[0x1E0D83C38];
  v4 = a2;
  v5 = a1;
  v6 = objc_alloc_init(v3);
  objc_msgSend(MEMORY[0x1E0D83C30], "playEventStream:options:completion:", v5, v6, v4);

}

void sub_1D09A0618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSBAppLibraryLogStep(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xB)
    return CFSTR("PlaceholderAdd");
  else
    return off_1E8EAF1A0[a1 - 1];
}

const __CFString *SBStringFromSystemApertureCustomLayout(unint64_t a1)
{
  if (a1 > 4)
    return CFSTR("INVALID");
  else
    return off_1E8EAF248[a1];
}

__CFString *SBStringFromSystemApertureLayoutCustomizingOptions(char a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  __CFString *v6;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if ((a1 & 1) != 0)
    objc_msgSend(v2, "addObject:", CFSTR("Prominent Pill"));
  if ((a1 & 2) != 0)
    objc_msgSend(v3, "addObject:", CFSTR("Suppress Trailing"));
  if (objc_msgSend(v3, "count"))
  {
    v4 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR(" | "));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "stringWithFormat:", CFSTR("<%@>"), v5);
    v6 = (__CFString *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v6 = CFSTR("Unspecified");
  }

  return v6;
}

const __CFString *NSStringFromSBRestartType(int a1)
{
  if ((a1 - 1) > 3)
    return CFSTR("SpringBoard");
  else
    return off_1E8EAF2D8[a1 - 1];
}

void sub_1D09AA348(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09AAAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09AB0BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09AB4C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09AB778(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09AD5EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1D09AE124(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09AE428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09B12AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1D09B18D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09B2C14(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSBSystemActionSuppressionViewObstructionEligibility(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Always");
  if (a1 == 1)
    v1 = CFSTR("Restricted");
  if (a1 == 2)
    return CFSTR("None");
  else
    return v1;
}

void sub_1D09B5630(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09B5A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSwitcherWindowManagementStyle(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("SingleApp");
  if (a1 == 1)
    v1 = CFSTR("Medusa");
  if (a1 == 2)
    return CFSTR("Chamois");
  else
    return v1;
}

void sub_1D09B6F00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09B7214(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09B7514(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09B8B8C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09BDE7C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09BE654(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09C2F40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,id location)
{
  id *v31;
  id *v32;
  id *v33;

  objc_destroyWeak(v31);
  objc_destroyWeak(v33);
  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09C3614(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09C3D4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  uint64_t v32;

  _Block_object_dispose((const void *)(v32 - 176), 8);
  _Block_object_dispose((const void *)(v32 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D09C46F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 256), 8);
  _Block_object_dispose((const void *)(v1 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1D09C4B4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v10;
  va_list va;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  va_list va1;

  va_start(va1, a9);
  va_start(va, a9);
  v10 = va_arg(va1, _QWORD);
  v12 = va_arg(va1, _QWORD);
  v13 = va_arg(va1, _QWORD);
  v14 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1D09C5ACC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09C6260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a71;
  uint64_t v71;

  _Block_object_dispose(&a51, 8);
  _Block_object_dispose(&a71, 8);
  _Block_object_dispose(&STACK[0x290], 8);
  _Block_object_dispose((const void *)(v71 - 240), 8);
  _Block_object_dispose((const void *)(v71 - 208), 8);
  _Block_object_dispose((const void *)(v71 - 176), 8);
  _Unwind_Resume(a1);
}

void sub_1D09C6A20(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 136));
  objc_destroyWeak((id *)(v3 - 128));
  _Unwind_Resume(a1);
}

void sub_1D09C9748(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09C9994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *SBViewMorphAnimatorCompletedSourceAnimationsDescription(uint64_t a1)
{
  void *v3;
  id v4;
  uint64_t *v5;
  uint8x8_t v6;
  int v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  id v14;
  char v15;

  if (a1 == 15)
    return CFSTR("All");
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 4);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = MEMORY[0x1E0C809B0];
  v11 = 3221225472;
  v12 = __SBViewMorphAnimatorCompletedSourceAnimationsDescription_block_invoke;
  v13 = &unk_1E8E9EB40;
  v4 = v3;
  v14 = v4;
  v5 = &v10;
  if (a1)
  {
    v15 = 0;
    v6 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v6.i16[0] = vaddlv_u8(v6);
    v7 = v6.i32[0];
    if (v6.i32[0])
    {
      v8 = 0;
      do
      {
        if (((1 << v8) & a1) != 0)
        {
          ((void (*)(uint64_t *))v12)(v5);
          if (v15)
            break;
          --v7;
        }
        if (v8 > 0x3E)
          break;
        ++v8;
      }
      while (v7 > 0);
    }
  }

  if (!objc_msgSend(v4, "count", v10, v11))
    objc_msgSend(v4, "addObject:", CFSTR("None"));
  objc_msgSend(v4, "componentsJoinedByString:", CFSTR(", "));
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return (__CFString *)v9;
}

__CFString *SBViewMorphAnimatorCompletedTargetAnimationsDescription(uint64_t a1)
{
  void *v3;
  id v4;
  uint64_t *v5;
  uint8x8_t v6;
  int v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  id v14;
  char v15;

  if (a1 == 7)
    return CFSTR("All");
  objc_msgSend(MEMORY[0x1E0C99DE8], "arrayWithCapacity:", 3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = MEMORY[0x1E0C809B0];
  v11 = 3221225472;
  v12 = __SBViewMorphAnimatorCompletedTargetAnimationsDescription_block_invoke;
  v13 = &unk_1E8E9EB40;
  v4 = v3;
  v14 = v4;
  v5 = &v10;
  if (a1)
  {
    v15 = 0;
    v6 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v6.i16[0] = vaddlv_u8(v6);
    v7 = v6.i32[0];
    if (v6.i32[0])
    {
      v8 = 0;
      do
      {
        if (((1 << v8) & a1) != 0)
        {
          ((void (*)(uint64_t *))v12)(v5);
          if (v15)
            break;
          --v7;
        }
        if (v8 > 0x3E)
          break;
        ++v8;
      }
      while (v7 > 0);
    }
  }

  if (!objc_msgSend(v4, "count", v10, v11))
    objc_msgSend(v4, "addObject:", CFSTR("None"));
  objc_msgSend(v4, "componentsJoinedByString:", CFSTR(", "));
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return (__CFString *)v9;
}

void sub_1D09CAAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09CD9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09CF1A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *SBSystemGestureRecognizerStateDescription(unint64_t a1)
{
  if (a1 > 5)
    return 0;
  else
    return off_1E8EAFEF8[a1];
}

double SBTotalMovementForMovedTouches(void *a1, void *a2)
{
  id v3;
  double v4;
  double v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  unint64_t v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v5 = *MEMORY[0x1E0C9D538];
  v4 = *(double *)(MEMORY[0x1E0C9D538] + 8);
  objc_msgSend(a1, "view");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v7 = v3;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
        objc_msgSend(v12, "previousLocationInView:", v6, (_QWORD)v21);
        v14 = v13;
        v16 = v15;
        objc_msgSend(v12, "locationInView:", v6);
        v5 = v5 + vabdd_f64(v17, v14);
        v4 = v4 + vabdd_f64(v18, v16);
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v9);
  }

  v19 = objc_msgSend(v7, "count");
  objc_msgSend(v7, "count");

  return v5 / (double)v19;
}

double SBMagicHysteresisValue()
{
  return 10.0;
}

void sub_1D09D2890(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D09D3964(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09D467C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1D09D53A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09D562C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09D57A0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09D6A50(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09D6C1C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id OUTLINED_FUNCTION_3_8(id a1)
{
  return a1;
}

uint64_t OUTLINED_FUNCTION_11()
{
  return objc_opt_class();
}

void sub_1D09DAF68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09DB730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

uint64_t _SBSystemApertureZoomPreferencesDidChange(int a1, void *a2, CFTypeRef cf1)
{
  uint64_t result;

  result = CFEqual(cf1, (CFTypeRef)*MEMORY[0x1E0DDE340]);
  if ((_DWORD)result)
  {
    result = _AXSZoomTouchEnabled();
    if ((_DWORD)result)
      return objc_msgSend(a2, "_axRegisterForZoomUpdatesIfNecessary");
  }
  return result;
}

void sub_1D09DB9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09DBE2C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D09DC4B0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 48));
  objc_destroyWeak((id *)(v3 - 40));
  _Unwind_Resume(a1);
}

void sub_1D09DC650(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 48));
  objc_destroyWeak((id *)(v3 - 40));
  _Unwind_Resume(a1);
}

void sub_1D09DCAB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09DD070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09DD170(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09DD2E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  void *v14;

  objc_destroyWeak(&location);
  objc_sync_exit(v14);
  _Unwind_Resume(a1);
}

void sub_1D09DD410(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09DD498(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09DD680(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09DD860(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09DDB84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_sync_exit(v16);
  _Unwind_Resume(a1);
}

void sub_1D09DE68C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09DE700(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09DE85C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09DFBFC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D09E081C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09E3190(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09E5834(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09E5AE0(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1D09F3284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09F6284(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D09F8154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09F83F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09F8668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D09F87B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBCreateUIImageFromIOSurfaceResizingIfNecessary(void *a1, void *a2, int a3, uint64_t a4, int a5, double a6, double a7)
{
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t CGImageWithIOSurface;
  CGImage *v24;

  v13 = a1;
  v14 = a2;
  v15 = v13;
  v16 = v14;
  v17 = v16;
  if (a6 <= 0.0)
  {
    objc_msgSend(v16, "scale");
    a6 = v18;
  }
  if (a7 <= 0.0)
    v19 = 1.0;
  else
    v19 = a7;
  if (v19 == 1.0)
  {
    v20 = v15;
  }
  else
  {
    SBCreateScaledIOSurface(v15, a5, v19);
    v20 = (id)objc_claimAutoreleasedReturnValue();
  }
  v21 = v20;
  if (!v20)
    goto LABEL_14;
  if (!a3)
  {
    CGImageWithIOSurface = _makeCGImageWithIOSurface(v20, a4, a5);
    if (CGImageWithIOSurface)
    {
      v24 = (CGImage *)CGImageWithIOSurface;
      v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA638]), "initWithCGImage:scale:orientation:", CGImageWithIOSurface, 0, a6);
      CGImageRelease(v24);
      goto LABEL_15;
    }
LABEL_14:
    v22 = 0;
    goto LABEL_15;
  }
  v22 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA638]), "_initWithIOSurface:scale:orientation:", v20, 0, a6);
LABEL_15:

  return v22;
}

id SBCreateScaledIOSurface(void *a1, int a2, double a3)
{
  id v5;
  void *v6;
  void *v7;
  const __CFAllocator *v8;
  CVReturn v9;
  __CVBuffer *v10;
  BOOL v11;
  OSStatus v12;
  BOOL v13;
  CVReturn IOSurfaceBackedCVPixelBufferWithAttributes;
  BOOL v15;
  NSObject *v16;
  id v17;
  int v18;
  double v19;
  CGImage *CGImageWithIOSurface;
  void *v21;
  id v22;
  uint64_t v23;
  OSStatus v25;
  VTPixelTransferSessionRef pixelTransferSessionOut;
  CVPixelBufferRef texture;
  CVPixelBufferRef pixelBufferOut;
  uint8_t buf[8];
  uint64_t v30;
  uint64_t (*v31)(uint64_t);
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  double v36;
  double v37;

  v5 = a1;
  v6 = v5;
  v7 = 0;
  if (!v5 || a3 <= 0.0)
    goto LABEL_32;
  objc_msgSend(v5, "width");
  objc_msgSend(v6, "height");
  texture = 0;
  pixelBufferOut = 0;
  pixelTransferSessionOut = 0;
  v8 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
  v9 = CVPixelBufferCreateWithIOSurface((CFAllocatorRef)*MEMORY[0x1E0C9AE00], (IOSurfaceRef)v6, 0, &pixelBufferOut);
  v10 = pixelBufferOut;
  if (v9)
    v11 = 1;
  else
    v11 = pixelBufferOut == 0;
  if (v11)
  {
    v7 = 0;
    if (!pixelBufferOut)
      goto LABEL_24;
    goto LABEL_23;
  }
  v12 = VTPixelTransferSessionCreate(v8, &pixelTransferSessionOut);
  v9 = v12;
  if (v12)
    v13 = 1;
  else
    v13 = pixelTransferSessionOut == 0;
  if (v13)
    goto LABEL_21;
  IOSurfaceBackedCVPixelBufferWithAttributes = VTSessionSetProperty(pixelTransferSessionOut, (CFStringRef)*MEMORY[0x1E0CED7B0], (CFTypeRef)*MEMORY[0x1E0C9AE50]);
  if (IOSurfaceBackedCVPixelBufferWithAttributes
    || ((IOSurfaceGetPixelFormat((IOSurfaceRef)v6),
         (IOSurfaceBackedCVPixelBufferWithAttributes = FigCreateIOSurfaceBackedCVPixelBufferWithAttributes()) == 0)
      ? (v15 = texture == 0)
      : (v15 = 1),
        v15))
  {
    v9 = IOSurfaceBackedCVPixelBufferWithAttributes;
LABEL_21:
    v7 = 0;
    goto LABEL_22;
  }
  v25 = VTPixelTransferSessionTransferImage(pixelTransferSessionOut, pixelBufferOut, texture);
  v9 = v25;
  if (v25)
    goto LABEL_21;
  CVPixelBufferGetIOSurface(texture);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_22:
  v10 = pixelBufferOut;
  if (pixelBufferOut)
LABEL_23:
    CVPixelBufferRelease(v10);
LABEL_24:
  if (texture)
    CVPixelBufferRelease(texture);
  if (pixelTransferSessionOut)
  {
    VTPixelTransferSessionInvalidate(pixelTransferSessionOut);
    CFRelease(pixelTransferSessionOut);
  }
  if (v9)
  {
    SBLogCommon();
    v16 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v16, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1D0540000, v16, OS_LOG_TYPE_INFO, "SBCreateScaledIOSurface: Failed to initalize hardware scaler, falling back to CPU scaling", buf, 2u);
    }

    v17 = v6;
    v18 = (int)((double)objc_msgSend(v17, "width") * a3);
    v19 = (double)(int)((double)objc_msgSend(v17, "height") * a3);
    CGImageWithIOSurface = (CGImage *)_makeCGImageWithIOSurface(v17, 0, a2);

    objc_msgSend(MEMORY[0x1E0CEA638], "imageWithCGImage:", CGImageWithIOSurface);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    CGImageRelease(CGImageWithIOSurface);
    objc_msgSend(v21, "sbf_colorSpace");
    *(_QWORD *)buf = MEMORY[0x1E0C809B0];
    v30 = 3221225472;
    v31 = ___SBCreateScaledIOSurfaceUsingCPU_block_invoke;
    v32 = &unk_1E8EA25E0;
    v34 = 0;
    v35 = 0;
    v33 = v21;
    v36 = (double)v18;
    v37 = v19;
    v22 = v21;
    BSUISurfaceWithColorSpaceAndDrawBlock();
    v23 = objc_claimAutoreleasedReturnValue();

    v7 = (void *)v23;
  }
LABEL_32:

  return v7;
}

id SBCreateMainScreenSnapshot()
{
  return SBCreateSnapshotBelowWindowWithOptions(0, 0, 0, 0, 1u, 1.0);
}

id SBCreateMainScreenSnapshotBelowWindow(void *a1, int a2)
{
  return SBCreateSnapshotBelowWindowWithOptions(a1, a2, 0, 0, 1u, 1.0);
}

id SBCreateMainScreenSnapshotBelowWindowWithOrientation(void *a1, int a2, uint64_t a3, void *a4)
{
  return SBCreateSnapshotBelowWindowWithOptions(a1, a2, a3, a4, 1u, 1.0);
}

id SBCreateSnapshotBelowWindowWithOptions(void *a1, int a2, uint64_t a3, void *a4, unsigned int a5, double a6)
{
  id v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  CGFloat v16;
  double v17;
  CGFloat v18;
  double v19;
  CGFloat v20;
  double v21;
  CGFloat v22;
  __int128 v23;
  __int128 v24;
  double x;
  double y;
  double v27;
  double v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t i;
  id v34;
  uint64_t v35;
  void *v36;
  int v37;
  double v39;
  char v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  const void *v45;
  CFTypeID v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  float v52;
  void *v53;
  float v54;
  void *v55;
  void *v56;
  void *v57;
  void *v59;
  void *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  id v65;
  CATransform3D v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  CATransform3D v71;
  CGAffineTransform t1;
  CGAffineTransform t2;
  CGAffineTransform v74;
  _QWORD v75[6];
  _QWORD v76[6];
  uint64_t v77;
  void *v78;
  _QWORD v79[2];
  _QWORD v80[2];
  _BYTE v81[128];
  uint64_t v82;
  CGRect v83;
  CGRect v84;
  CGRect v85;
  CGRect v86;

  v82 = *MEMORY[0x1E0C80C00];
  v11 = a1;
  v65 = a4;
  objc_msgSend(v11, "screen");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "scale");
  v14 = v13 * a6;
  objc_msgSend(v12, "_referenceBounds");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  memset(&v74, 0, sizeof(v74));
  CGAffineTransformMakeScale(&v74, v14, v14);
  if (BSFloatLessThanFloat())
  {
    *(_OWORD *)&v71.m11 = *(_OWORD *)&v74.a;
    *(_OWORD *)&v71.m13 = *(_OWORD *)&v74.c;
    *(_OWORD *)&v71.m21 = *(_OWORD *)&v74.tx;
    v83.origin.x = v16;
    v83.origin.y = v18;
    v83.size.width = v20;
    v83.size.height = v22;
    v84 = CGRectApplyAffineTransform(v83, (CGAffineTransform *)&v71);
    CGAffineTransformMakeScale((CGAffineTransform *)&v71, v14 * (round(v84.size.width) / v84.size.width), v14 * (round(v84.size.height) / v84.size.height));
    *(_OWORD *)&v74.a = *(_OWORD *)&v71.m11;
    *(_OWORD *)&v74.c = *(_OWORD *)&v71.m13;
    *(_OWORD *)&v74.tx = *(_OWORD *)&v71.m21;
  }
  memset(&t2, 0, sizeof(t2));
  v61 = a5;
  if (a3 == 3)
  {
    t2.tx = 0.0;
    t2.ty = 0.0;
    v23 = xmmword_1D0E89D30;
  }
  else
  {
    if (a3 != 2)
    {
      if (a3 == 1)
      {
        t2.tx = 0.0;
        t2.ty = 0.0;
        t2.a = -1.0;
        t2.b = 0.0;
        t2.c = 0.0;
        t2.d = -1.0;
      }
      else
      {
        v24 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        *(_OWORD *)&t2.a = *MEMORY[0x1E0C9BAA8];
        *(_OWORD *)&t2.c = v24;
        *(_OWORD *)&t2.tx = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
      }
      goto LABEL_11;
    }
    t2.tx = 0.0;
    t2.ty = 0.0;
    v23 = xmmword_1D0E89D40;
  }
  *(_OWORD *)&t2.b = v23;
LABEL_11:
  t1 = v74;
  CGAffineTransformConcat((CGAffineTransform *)&v71, &t1, &t2);
  *(_OWORD *)&v74.c = *(_OWORD *)&v71.m13;
  *(_OWORD *)&v74.tx = *(_OWORD *)&v71.m21;
  *(_OWORD *)&v74.a = *(_OWORD *)&v71.m11;
  v85.origin.x = v16;
  v85.origin.y = v18;
  v85.size.width = v20;
  v85.size.height = v22;
  v86 = CGRectApplyAffineTransform(v85, (CGAffineTransform *)&v71);
  x = v86.origin.x;
  y = v86.origin.y;
  memset(&v71, 0, sizeof(v71));
  t1 = v74;
  CATransform3DMakeAffineTransform(&v71, &t1);
  objc_msgSend(v11, "windowLevel");
  v28 = v27;
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v64 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = 0u;
  v68 = 0u;
  v69 = 0u;
  v70 = 0u;
  objc_msgSend(MEMORY[0x1E0CEAC18], "allWindowsIncludingInternalWindows:onlyVisibleWindows:", 1, 1);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v67, v81, 16);
  if (!v30)
    goto LABEL_30;
  v31 = v30;
  v32 = *(_QWORD *)v68;
  v63 = *MEMORY[0x1E0CD3098];
  v62 = *MEMORY[0x1E0CD3140];
  do
  {
    for (i = 0; i != v31; ++i)
    {
      if (*(_QWORD *)v68 != v32)
        objc_enumerationMutation(v29);
      v34 = *(id *)(*((_QWORD *)&v67 + 1) + 8 * i);
      objc_msgSend(v34, "screen");
      v35 = objc_claimAutoreleasedReturnValue();
      v36 = (void *)v35;
      if (v34 == v11)
        v37 = a2;
      else
        v37 = 1;
      if ((void *)v35 == v12 && v37 != 0)
      {
        if (objc_msgSend(v34, "_isWindowServerHostingManaged"))
        {
          objc_msgSend(v34, "windowLevel");
          if (v39 <= v28)
          {
            v40 = objc_msgSend(v65, "containsObject:", v34);

            if ((v40 & 1) != 0)
              continue;
            v79[0] = v63;
            objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInt:", objc_msgSend(v34, "_contextId"));
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            v80[0] = v36;
            v79[1] = v62;
            v66 = v71;
            objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithBytes:objCType:", &v66, "{CATransform3D=dddddddddddddddd}");
            v41 = (void *)objc_claimAutoreleasedReturnValue();
            v80[1] = v41;
            objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v80, v79, 2);
            v42 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v64, "addObject:", v42);

          }
        }
      }

    }
    v31 = objc_msgSend(v29, "countByEnumeratingWithState:objects:count:", &v67, v81, 16);
  }
  while (v31);
LABEL_30:

  v77 = *MEMORY[0x1E0CEC3C8];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", v61);
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  v78 = v43;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v78, &v77, 1);
  v44 = (void *)objc_claimAutoreleasedReturnValue();
  v45 = (const void *)_UIRenderingBufferCreate();

  if (v45)
  {
    v46 = CFGetTypeID(v45);
    v47 = v64;
    if (v46 != IOSurfaceGetTypeID())
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "UIImage *SBCreateSnapshotBelowWindowWithOptions(UIWindow *__strong, BOOL, UIImageOrientation, NSArray *__strong, CGFloat, BOOL)");
      v60 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v59, "handleFailureInFunction:file:lineNumber:description:", v60, CFSTR("SBImageUtilities.m"), 251, CFSTR("_UIRenderingBuffer is not IOSurface-backed anymore"));

    }
    v48 = *MEMORY[0x1E0CD3108];
    v49 = *MEMORY[0x1E0CD30A8];
    v75[0] = *MEMORY[0x1E0CD30F0];
    v75[1] = v49;
    v76[0] = v48;
    v76[1] = v45;
    v75[2] = *MEMORY[0x1E0CD30B0];
    objc_msgSend(v12, "displayConfiguration");
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v50, "name");
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    v76[2] = v51;
    v75[3] = *MEMORY[0x1E0CD3120];
    v52 = x;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", llroundf(v52));
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    v76[3] = v53;
    v75[4] = *MEMORY[0x1E0CD3128];
    v54 = y;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithLong:", llroundf(v54));
    v55 = (void *)objc_claimAutoreleasedReturnValue();
    v75[5] = *MEMORY[0x1E0CD30A0];
    v76[4] = v55;
    v76[5] = v64;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v76, v75, 6);
    v56 = (void *)objc_claimAutoreleasedReturnValue();
    CARenderServerSnapshot();

    v57 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA638]), "_initWithIOSurface:scale:orientation:", v45, 0, v14);
    CFRelease(v45);
  }
  else
  {
    v57 = 0;
    v47 = v64;
  }

  return v57;
}

uint64_t SBSizeTagForOrientation(double a1, double a2)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("{%0f,%0f}"), *(_QWORD *)&a1, *(_QWORD *)&a2);
}

const __CFString *SBImageTagForOrientation(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return &stru_1E8EC7EC0;
  else
    return off_1E8EB0EA8[a1 - 1];
}

id SBCreateResourceImageWithoutCaching(void *a1)
{
  id v1;
  void *v2;
  double v3;
  double v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  NSObject *v10;

  v1 = a1;
  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "scale");
  v4 = v3;

  if (v4 > 1.0)
  {
    SBScaleSuffixForScale(v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "stringByAppendingString:", v5);
    v6 = objc_claimAutoreleasedReturnValue();

    v1 = (id)v6;
  }
  objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "pathForResource:ofType:", v1, CFSTR("png"));
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA638]), "initWithContentsOfFile:", v8);
  if (!v9)
  {
    SBLogCommon();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      SBCreateResourceImageWithoutCaching_cold_1((uint64_t)v1, v10);

  }
  return v9;
}

uint64_t _makeCGImageWithIOSurface(void *a1, uint64_t a2, int a3)
{
  id v4;
  int v5;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[2];
  _QWORD v13[2];
  _QWORD v14[3];
  _QWORD v15[4];

  v15[3] = *MEMORY[0x1E0C80C00];
  v4 = a1;
  v5 = objc_msgSend(v4, "pixelFormat");
  if (v5 == 1999843442 || v5 == 1647534392)
  {
    v7 = *MEMORY[0x1E0CBC800];
    if (a3)
    {
      v14[0] = *MEMORY[0x1E0CBC750];
      v14[1] = v7;
      v15[0] = &unk_1E91D1058;
      v15[1] = &unk_1E91D1070;
      v14[2] = *MEMORY[0x1E0CBD130];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithBool:", 1);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v15[2] = v8;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v15, v14, 3);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v12[0] = *MEMORY[0x1E0CBC750];
      v12[1] = v7;
      v13[0] = &unk_1E91D1058;
      v13[1] = &unk_1E91D1070;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v13, v12, 2);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
    }
    v10 = CGImageCreateFromIOSurface();

  }
  else
  {
    v10 = _UICreateCGImageFromIOSurfaceWithOptions();
  }

  return v10;
}

void sub_1D09FC3E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

double _CentroidOfTouches(void *a1, int a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t i;
  void *v11;
  void *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (!v4)
    goto LABEL_13;
  v5 = v4;
  v6 = 0;
  v7 = *(_QWORD *)v20;
  v8 = 0.0;
  v9 = 0.0;
  do
  {
    for (i = 0; i != v5; ++i)
    {
      if (*(_QWORD *)v20 != v7)
        objc_enumerationMutation(v3);
      v11 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * i);
      if (!a2 || objc_msgSend(*(id *)(*((_QWORD *)&v19 + 1) + 8 * i), "phase") <= 2)
      {
        objc_msgSend(v11, "window");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "locationInView:", 0);
        objc_msgSend(v12, "_convertPointToSceneReferenceSpace:");
        v14 = v13;
        v16 = v15;

        v8 = v8 + v14;
        v9 = v9 + v16;
        ++v6;
      }
    }
    v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  }
  while (v5);
  if (v6 >= 1)
    v17 = v8 / (double)v6;
  else
LABEL_13:
    v17 = 0.0;

  return v17;
}

void sub_1D0A06878(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A073F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A0A1A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A0AAAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A0ACD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A0B6AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A0B85C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A0D5A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A0D730(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A0E758(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A0F830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A11284(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A14CD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,id a59)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a59);
  _Unwind_Resume(a1);
}

void sub_1D0A153C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A16A64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A17420(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A17928(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A18758(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D0A18B2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D0A1E224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location)
{
  id *v28;
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(v28);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A22220(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  id *v21;
  id *v22;
  id *v23;
  uint64_t v24;

  objc_destroyWeak(v23);
  _Block_object_dispose(&a21, 8);
  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak((id *)(v24 - 88));
  _Unwind_Resume(a1);
}

void sub_1D0A23158(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A23414(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1D0A23770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A23930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A262CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  _Block_object_dispose(&a43, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A27900(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A27B9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A28618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A2B858(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A2BF28(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0A2BF90(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0A2C0E8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0A2C25C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0A34E54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A37C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void SBDisplayWindowingModeDescription(unint64_t a1)
{
  void *v1;
  void *v2;

  if (a1 >= 3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *SBDisplayWindowingModeDescription(SBDisplayWindowingMode)");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "handleFailureInFunction:file:lineNumber:description:", v2, CFSTR("SBDisplayWindowingMode.m"), 20, CFSTR("invalid displayMode"));

  }
}

__CFString *SBDisplayItemGridLayoutRestrictionsDescription(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t *v4;
  uint8x8_t v5;
  int v6;
  unint64_t v7;
  void *v8;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  void *v13;
  id v14;
  char v15;

  if (!a1)
    return CFSTR("none");
  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = MEMORY[0x1E0C809B0];
  v11 = 3221225472;
  v12 = __SBDisplayItemGridLayoutRestrictionsDescription_block_invoke;
  v13 = &unk_1E8E9EB40;
  v3 = v2;
  v14 = v3;
  v4 = &v10;
  v15 = 0;
  v5 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
  v5.i16[0] = vaddlv_u8(v5);
  v6 = v5.i32[0];
  if (v5.i32[0])
  {
    v7 = 0;
    do
    {
      if (((1 << v7) & a1) != 0)
      {
        ((void (*)(uint64_t *))v12)(v4);
        if (v15)
          break;
        --v6;
      }
      if (v7 > 0x3E)
        break;
      ++v7;
    }
    while (v6 > 0);
  }

  objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", "), v10, v11);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return (__CFString *)v8;
}

void sub_1D0A3AC9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3E214(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3E454(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3E5B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3E6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3E9E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3EAD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3EBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3ECB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3EDE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3F020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3F15C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A3FF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  _Block_object_dispose(&a36, 8);
  _Block_object_dispose(&a44, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A40BD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,id location)
{
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A44B38(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 224));
  _Unwind_Resume(a1);
}

void sub_1D0A45B8C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1D0A47084(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 184), 8);
  _Unwind_Resume(a1);
}

const __CFString *SBStringForSceneLayoutDropAction(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 9)
    return CFSTR("CancelDrop");
  else
    return off_1E8EB22C8[a1 - 1];
}

uint64_t _SBAssistantControllerGenerativeModelsAvailabilityDidChange(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_generativeModelsAvailabilityDidChange");
}

void sub_1D0A4C0E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D0A4C680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A4DE60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL SBSystemActionCoachingPolicyWantsCoachingPresented(void *a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  BOOL v29;
  _BOOL8 v30;
  _QWORD v33[6];
  _QWORD v34[3];

  v34[2] = *MEMORY[0x1E0C80C00];
  v6 = a1;
  v7 = (void *)MEMORY[0x1E0C99E60];
  v34[0] = CFSTR("SilentMode");
  v34[1] = CFSTR("Flashlight");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v34, 2);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setWithArray:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = (void *)MEMORY[0x1E0C99E60];
  v33[0] = CFSTR("Camera");
  v33[1] = CFSTR("VoiceMemos");
  v33[2] = CFSTR("Translate");
  v33[3] = CFSTR("Magnifier");
  v33[4] = CFSTR("MusicRecognition");
  v33[5] = CFSTR("Shortcuts");
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v33, 6);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "setWithArray:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "configuredAction");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "sectionIdentifier");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v14, "isEqualToString:", CFSTR("Focus")))
  {
    objc_msgSend(v13, "sb_configuredIntentAction");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    -[WFConfiguredStaccatoIntentAction sb_focusModeIdentifier](v15);
    v16 = (void *)objc_claimAutoreleasedReturnValue();

    if (objc_msgSend(v16, "isEqualToString:", *MEMORY[0x1E0DAACD0]))
    {
      objc_msgSend(v12, "setByAddingObject:", CFSTR("Focus"));
      v17 = objc_claimAutoreleasedReturnValue();
      v18 = v12;
      v12 = (void *)v17;
    }
    else
    {
      objc_msgSend(v9, "setByAddingObject:", CFSTR("Focus"));
      v19 = objc_claimAutoreleasedReturnValue();
      v18 = v9;
      v9 = (void *)v19;
    }

  }
  if (objc_msgSend(v14, "isEqualToString:", CFSTR("Accessibility")))
  {
    objc_msgSend(v13, "sb_configuredIntentAction");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = (char *)-[WFConfiguredStaccatoIntentAction sb_accessibilityTripleClickState](v20);

    if ((unint64_t)(v21 - 1) >= 2)
    {
      if (v21)
        goto LABEL_12;
      objc_msgSend(v12, "setByAddingObject:", CFSTR("Accessibility"));
      v24 = objc_claimAutoreleasedReturnValue();
      v23 = v12;
      v12 = (void *)v24;
    }
    else
    {
      objc_msgSend(v9, "setByAddingObject:", CFSTR("Accessibility"));
      v22 = objc_claimAutoreleasedReturnValue();
      v23 = v9;
      v9 = (void *)v22;
    }

  }
LABEL_12:
  if (objc_msgSend(v14, "isEqualToString:", CFSTR("Controls")))
  {
    objc_msgSend(v6, "controlAction");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v26 = -[SBControlSystemAction type](v25);

    switch((unint64_t)v26)
    {
      case 0uLL:
      case 2uLL:
        objc_msgSend(v12, "setByAddingObject:", CFSTR("Controls"));
        v27 = v12;
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        break;
      case 1uLL:
      case 3uLL:
        objc_msgSend(v9, "setByAddingObject:", CFSTR("Controls"));
        v27 = v9;
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        break;
      default:
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "BOOL SBSystemActionCoachingPolicyWantsCoachingPresented(SBSystemAction *__strong _Nonnull, NSUInteger, NSUInteger, NSUInteger)");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "handleFailureInFunction:file:lineNumber:description:", v28, CFSTR("SBSystemActionCoachingPolicySupport.m"), 79, CFSTR("Unhandled control type: %lu"), v26);

        break;
    }

  }
  if (objc_msgSend(v9, "containsObject:", v14))
  {
    v29 = a2 >= a3;
  }
  else
  {
    if (!objc_msgSend(v12, "containsObject:", v14))
    {
      v30 = a2 != 0;
      goto LABEL_26;
    }
    v29 = a2 >= a4;
  }
  v30 = v29;
LABEL_26:

  return v30;
}

void sub_1D0A50430(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A5083C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A50DE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id a21)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a21);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromSBKeyboardFocusLockReasonStrength(unint64_t a1)
{
  if (a1 < 3)
    return off_1E8EB2550[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<invalid:%X>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0A56300(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A563E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A564D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A565C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A566B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A567A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A56908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A56B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A56C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A56D94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A56EE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A56FD0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A58D20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

void sub_1D0A5AFB8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A5B160(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A5B2B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSBAppViewControllerMode(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("None");
  if (a1 == 1)
    v1 = CFSTR("Static");
  if (a1 == 2)
    return CFSTR("Live");
  else
    return v1;
}

void sub_1D0A5CFA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromSBContinuitySessionState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xA)
    return CFSTR(".unknown");
  else
    return off_1E8EB2820[a1 - 1];
}

uint64_t SBContinuitySessionStateTranslateForClient(uint64_t a1, void *a2, _QWORD *a3)
{
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a2;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  switch(a1)
  {
    case 1:
      objc_msgSend(v5, "bs_compactMap:", &__block_literal_global_209);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v8, "mutableCopy");

      v7 = 1;
      goto LABEL_11;
    case 2:
      v7 = 1;
      break;
    case 3:
      v7 = 2;
      break;
    case 4:
      v7 = 3;
      break;
    case 5:
      v7 = 4;
      break;
    case 6:
    case 7:
    case 8:
    case 9:
      v7 = 5;
      break;
    case 10:
      v7 = 6;
      break;
    case 11:
      objc_msgSend(v5, "bs_compactMap:", &__block_literal_global_209);
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = objc_msgSend(v10, "mutableCopy");

      v7 = 7;
LABEL_11:
      v6 = (void *)v9;
      break;
    default:
      v7 = 0;
      break;
  }
  v11 = objc_retainAutorelease(v6);
  *a3 = v11;

  return v7;
}

__CFString *SBStringForFloatingConfiguration(unint64_t a1)
{
  if (a1 > 4)
    return 0;
  else
    return off_1E8EB2908[a1];
}

__CFString *SBStringForCenterConfiguration(unint64_t a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_1E8EB2930[a1];
}

__CFString *SBStringForPeekConfiguration(unint64_t a1)
{
  if (a1 > 3)
    return 0;
  else
    return off_1E8EB2948[a1];
}

BOOL SBSpaceConfigurationIsValid(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 4;
}

BOOL SBSpaceConfigurationIsSplitView(uint64_t a1)
{
  return (unint64_t)(a1 - 2) < 3;
}

BOOL SBFloatingConfigurationIsValid(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 4;
}

BOOL SBFloatingConfigurationIsStashed(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

BOOL SBFloatingConfigurationIsLeft(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

BOOL SBFloatingConfigurationIsRight(uint64_t a1)
{
  return a1 == 2 || a1 == 4;
}

BOOL SBCenterConfigurationIsValid(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t SBSpaceConfigurationForSpaceConfigurationAndInterfaceOrientation(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = SBAppLayoutConfigurationFromMainDisplayLayoutStateSpaceConfiguration(a1);
  v4 = SBEffectiveAppLayoutConfigurationForInterfaceOrientation(v3, a2);
  return SBMainDisplayLayoutStateSpaceConfigurationFromAppLayoutConfiguration(v4);
}

void sub_1D0A60500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t configurationFromProtobufConfiguration(int a1)
{
  uint64_t v1;

  v1 = (a1 - 1);
  if (v1 < 4)
    return v1 + 1;
  else
    return 0;
}

uint64_t protobufConfigurationFromConfiguration(uint64_t result)
{
  if ((unint64_t)(result - 1) < 4)
    return result;
  else
    return 0;
}

uint64_t environmentFromProtobufEnvironment(int a1)
{
  if ((a1 - 1) > 2)
    return 1;
  else
    return qword_1D0E89FE0[a1 - 1];
}

uint64_t protobufEnvironmentFromEnvironment(uint64_t a1)
{
  if (a1 == 3)
    return 3;
  else
    return a1 == 2;
}

uint64_t roleFromProtobufRole(int a1)
{
  uint64_t *v1;

  if ((a1 - 1) > 3)
    v1 = &SBLayoutRoleUndefined;
  else
    v1 = off_1E8EB2AB0[a1 - 1];
  return *v1;
}

uint64_t protobufRoleFromRole(uint64_t a1)
{
  switch(a1)
  {
    case 1:
      return 1;
    case 2:
      return 2;
    case 3:
      return 3;
  }
  return 4 * (a1 == 4);
}

uint64_t centerConfigurationFromProtobufCenterConfiguration(int a1)
{
  if (a1 == 2)
    return 2;
  else
    return a1 == 1;
}

uint64_t protobufCenterConfigurationFromCenterConfiguration(uint64_t a1)
{
  if (a1 == 2)
    return 2;
  else
    return a1 == 1;
}

__CFString *SBStringForAppLayoutCenterConfiguration(unint64_t a1)
{
  if (a1 > 2)
    return 0;
  else
    return off_1E8EB2AF0[a1];
}

__CFString *SBStringForAppLayoutEnvironment(unint64_t a1)
{
  if (a1 > 3)
    return 0;
  else
    return off_1E8EB2AD0[a1];
}

SBAppLayout *SBAppLayoutGenericAppLayoutWithConfiguration(uint64_t a1)
{
  void *v2;
  SBAppLayout *v3;
  SBDisplayItem *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  SBDisplayItem *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  SBAppLayout *v15;
  void *v16;
  SBDisplayItem *v17;
  void *v18;
  _QWORD v19[2];

  v19[1] = *MEMORY[0x1E0C80C00];
  if (a1)
  {
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a1);
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(0, "objectForKey:", v2);
    v3 = (SBAppLayout *)objc_claimAutoreleasedReturnValue();
    if (!v3)
    {
      v4 = -[SBDisplayItem initWithType:bundleIdentifier:uniqueIdentifier:]([SBDisplayItem alloc], "initWithType:bundleIdentifier:uniqueIdentifier:", 0, CFSTR("com.apple.springboard.GenericAppLayout"), CFSTR("com.apple.springboard.GenericAppLayout.1"));
      v5 = (void *)MEMORY[0x1E0C99E08];
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 1);
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v18 = v6;
      v19[0] = v4;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, &v18, 1);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "dictionaryWithDictionary:", v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      if (a1 != 1)
      {
        v9 = -[SBDisplayItem initWithType:bundleIdentifier:uniqueIdentifier:]([SBDisplayItem alloc], "initWithType:bundleIdentifier:uniqueIdentifier:", 0, CFSTR("com.apple.springboard.GenericAppLayout"), CFSTR("com.apple.springboard.GenericAppLayout.2"));
        objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", 2);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v16 = v10;
        v17 = v9;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v17, &v16, 1);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "addEntriesFromDictionary:", v11);

      }
      v3 = -[SBAppLayout initWithItemsForLayoutRoles:configuration:environment:preferredDisplayOrdinal:]([SBAppLayout alloc], "initWithItemsForLayoutRoles:configuration:environment:preferredDisplayOrdinal:", v8, a1, 1, 0);
      v14 = v2;
      v15 = v3;
      objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v15, &v14, 1);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(0, "addEntriesFromDictionary:", v12);

    }
  }
  else
  {
    v3 = 0;
  }
  return v3;
}

void sub_1D0A62230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1D0A62488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A64134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A64298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBMainDisplayLayoutStateSpaceConfigurationFromAppLayoutConfiguration(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 4)
    return 0;
  return result;
}

uint64_t SBEffectiveAppLayoutConfigurationForInterfaceOrientation(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = 3;
  if ((unint64_t)(a2 - 1) < 2)
    v2 = 4;
  if (result == 3)
    return v2;
  return result;
}

uint64_t SBAppLayoutCenterConfigurationFromMainDisplayLayoutStateCenterConfiguration(uint64_t a1)
{
  if (a1 == 1)
    return 1;
  else
    return 2 * (a1 == 2);
}

uint64_t SBMainDisplayLayoutStateCenterConfigurationFromAppLayoutCenterConfiguration(uint64_t a1)
{
  if (a1 == 1)
    return 1;
  else
    return 2 * (a1 == 2);
}

void sub_1D0A6A7B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A6AE8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A6B334(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBSAStringFromPreferencesInvalidationReason(int a1)
{
  void *v2;
  int v3;
  const __CFString *v4;
  BOOL v5;
  void *v6;
  void *v7;
  void *v8;

  objc_msgSend(MEMORY[0x1E0C99DE8], "array");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 1;
  while (1)
  {
    if ((v3 & a1) == 0)
      goto LABEL_38;
    if (v3 <= 255)
    {
      if (v3 <= 15)
      {
        v4 = CFSTR("StackInitiated");
        switch(v3)
        {
          case 1:
            goto LABEL_37;
          case 2:
            v4 = CFSTR("InitOrDefaults");
            goto LABEL_37;
          case 4:
            v4 = CFSTR("LumaSampling");
            goto LABEL_37;
          case 8:
            v4 = CFSTR("SystemApertureManager");
            goto LABEL_37;
          default:
            goto LABEL_38;
        }
        goto LABEL_38;
      }
      if (v3 > 63)
      {
        if (v3 == 64)
        {
          v4 = CFSTR("MilestoneReached");
          goto LABEL_37;
        }
        if (v3 == 128)
        {
          v4 = CFSTR("Accessibility");
          goto LABEL_37;
        }
      }
      else
      {
        if (v3 == 16)
        {
          v4 = CFSTR("CloningOrRenderingStyle");
          goto LABEL_37;
        }
        if (v3 == 32)
        {
          v4 = CFSTR("TimerExpired");
          goto LABEL_37;
        }
      }
      goto LABEL_38;
    }
    if (v3 > 4095)
      break;
    if (v3 > 1023)
    {
      if (v3 == 1024)
      {
        v4 = CFSTR("Gestures");
        goto LABEL_37;
      }
      if (v3 == 2048)
      {
        v4 = CFSTR("AnimatedPropertyUpdateBegin");
        goto LABEL_37;
      }
    }
    else
    {
      if (v3 == 256)
      {
        v4 = CFSTR("DynamicsAnimation");
        goto LABEL_37;
      }
      if (v3 == 512)
      {
        v4 = CFSTR("TransitionEffectAssertion");
        goto LABEL_37;
      }
    }
LABEL_38:
    v5 = v3 > 0x8000;
    v3 *= 2;
    if (v5)
      goto LABEL_43;
  }
  if (v3 < 0x4000)
  {
    if (v3 == 4096)
    {
      v4 = CFSTR("AnimatedPropertyUpdateEnd");
      goto LABEL_37;
    }
    if (v3 == 0x2000)
    {
      v4 = CFSTR("ElementRequested");
      goto LABEL_37;
    }
    goto LABEL_38;
  }
  if (v3 == 0x4000)
  {
    v4 = CFSTR("Orientation");
    goto LABEL_37;
  }
  if (v3 == 0x8000)
  {
    v4 = CFSTR("ActiveDisplayChanged");
LABEL_37:
    objc_msgSend(v2, "addObject:", v4);
    goto LABEL_38;
  }
  if (v3 != 0x10000)
    goto LABEL_38;
  objc_msgSend(v2, "addObject:", CFSTR("ReachabilityChanged"));
LABEL_43:
  v6 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v2, "componentsJoinedByString:", CFSTR(" | "));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "stringWithFormat:", CFSTR("[ %@ ]"), v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

id _SBSystemApertureWellKnownActivityElementIdentifiersForComparison()
{
  if (_SBSystemApertureWellKnownActivityElementIdentifiersForComparison_onceToken != -1)
    dispatch_once(&_SBSystemApertureWellKnownActivityElementIdentifiersForComparison_onceToken, &__block_literal_global_214);
  return (id)_SBSystemApertureWellKnownActivityElementIdentifiersForComparison___wellKnownElementIdentifiers;
}

id _SBSystemApertureActivityElementIdentifiersRelatedToElementIdentifier(void *a1, char *a2)
{
  id v3;
  void *v4;
  char v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  id v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void *v18;
  char v19;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = a1;
  _SBSystemApertureWellKnownActivityElementIdentifiersForComparison();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "containsObject:", v3);

  if ((v5 & 1) != 0)
  {
    if (a2)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSSet<SBUISystemApertureElementIdentifier> *_SBSystemApertureActivityElementIdentifiersRelatedToElementIdentifier(__strong SBUISystemApertureElementIdentifier, BOOL *)");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v27, "handleFailureInFunction:file:lineNumber:description:", v28, CFSTR("SBSystemApertureElementAuthority.m"), 45, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("[_SBSystemApertureWellKnownActivityElementIdentifiersForComparison() containsObject:elementIdentifier]"));

    if (a2)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSSet<SBUISystemApertureElementIdentifier> *_SBSystemApertureActivityElementIdentifiersRelatedToElementIdentifier(__strong SBUISystemApertureElementIdentifier, BOOL *)");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "handleFailureInFunction:file:lineNumber:description:", v30, CFSTR("SBSystemApertureElementAuthority.m"), 46, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("isSuperiorSet != nil"));

LABEL_3:
  v6 = *MEMORY[0x1E0DAC968];
  if (!objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC968]))
  {
    v8 = *MEMORY[0x1E0DAC938];
    if (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC938]))
    {
      v9 = objc_alloc(MEMORY[0x1E0C99E60]);
      v7 = (id)objc_msgSend(v9, "initWithObjects:", v6, *MEMORY[0x1E0DAC988], 0, v34, v37, v38, v39);
      goto LABEL_15;
    }
    v10 = *MEMORY[0x1E0DAC930];
    if (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC930]))
    {
      v11 = objc_alloc_init(MEMORY[0x1E0C99E60]);
LABEL_22:
      v18 = v11;
      v19 = 0;
      goto LABEL_16;
    }
    v12 = *MEMORY[0x1E0DAC990];
    if (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC990]))
    {
      v13 = objc_alloc(MEMORY[0x1E0C99E60]);
      v14 = *MEMORY[0x1E0DAC9A8];
      v15 = *MEMORY[0x1E0DAC970];
      v16 = *MEMORY[0x1E0DAC998];
      v17 = (uint64_t *)MEMORY[0x1E0DAC988];
    }
    else
    {
      v21 = *MEMORY[0x1E0DAC960];
      if (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC960]))
      {
        v22 = objc_alloc(MEMORY[0x1E0C99E60]);
        v11 = (id)objc_msgSend(v22, "initWithObjects:", v10, *MEMORY[0x1E0DAC980], 0, v34, v37);
        goto LABEL_22;
      }
      v23 = *MEMORY[0x1E0DAC980];
      if (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC980]))
      {
        v11 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E60]), "initWithObjects:", v10, 0, v32, v34, v37);
        goto LABEL_22;
      }
      if (!objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC9A8]))
      {
        if (!objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC970]))
        {
          v24 = *MEMORY[0x1E0DAC950];
          if (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC950]))
          {
            v25 = objc_alloc(MEMORY[0x1E0C99E60]);
            v36 = 0;
          }
          else
          {
            if (!objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC978]))
            {
              v26 = *MEMORY[0x1E0DAC998];
              if (!objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC998]))
              {
                v31 = *MEMORY[0x1E0DAC988];
                if (objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC988]))
                {
                  v7 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E60]), "initWithObjects:", v6, 0, v32, v34, v37, v38, v39);
                  goto LABEL_15;
                }
                if (!objc_msgSend(v3, "isEqualToString:", *MEMORY[0x1E0DAC958]))
                {
                  v18 = 0;
                  goto LABEL_17;
                }
                v13 = objc_alloc(MEMORY[0x1E0C99E60]);
                v37 = v31;
                v38 = 0;
                v33 = v12;
                v35 = v26;
                goto LABEL_14;
              }
              v13 = objc_alloc(MEMORY[0x1E0C99E60]);
              v14 = *MEMORY[0x1E0DAC988];
              v35 = 0;
LABEL_13:
              v33 = v14;
LABEL_14:
              v7 = (id)objc_msgSend(v13, "initWithObjects:", v6, v8, v33, v35, v37, v38, v39);
              goto LABEL_15;
            }
            v25 = objc_alloc(MEMORY[0x1E0C99E60]);
            v36 = v24;
            v37 = 0;
          }
          v11 = (id)objc_msgSend(v25, "initWithObjects:", v10, v21, v23, v36, v37);
          goto LABEL_22;
        }
        v13 = objc_alloc(MEMORY[0x1E0C99E60]);
        v14 = *MEMORY[0x1E0DAC998];
        v15 = *MEMORY[0x1E0DAC988];
        v16 = *MEMORY[0x1E0DAC958];
        v38 = 0;
LABEL_12:
        v35 = v15;
        v37 = v16;
        goto LABEL_13;
      }
      v13 = objc_alloc(MEMORY[0x1E0C99E60]);
      v14 = *MEMORY[0x1E0DAC970];
      v15 = *MEMORY[0x1E0DAC998];
      v16 = *MEMORY[0x1E0DAC988];
      v17 = (uint64_t *)MEMORY[0x1E0DAC958];
    }
    v38 = *v17;
    v39 = 0;
    goto LABEL_12;
  }
  v7 = objc_alloc_init(MEMORY[0x1E0C99E60]);
LABEL_15:
  v18 = v7;
  v19 = 1;
LABEL_16:
  *a2 = v19;
LABEL_17:

  return v18;
}

id _SBShortElementDescription(void *a1)
{
  void *v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = (void *)MEMORY[0x1E0CB3940];
  v2 = a1;
  objc_msgSend(v2, "elementIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "clientIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v1, "stringWithFormat:", CFSTR("<%@, %@>"), v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t _CompareActivityElementsByElementIdentifier(void *a1, void *a2, _QWORD *a3)
{
  unint64_t v5;
  unint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  void **v13;
  int v14;
  void *v15;
  id v16;
  int v17;
  void *v18;
  id v19;
  void *v20;
  void *v21;
  const __CFString *v22;
  void *v23;
  const __CFString *v24;
  const __CFString *v26;
  const __CFString *v27;
  void *v28;
  void *v29;
  char v30;

  v5 = a1;
  v6 = a2;
  v7 = (void *)v6;
  if (!(v5 | v6))
  {
    v8 = 0;
    goto LABEL_41;
  }
  if (!v5 || v6)
  {
    if (!v5 && v6)
    {
      v8 = 1;
      goto LABEL_41;
    }
    objc_msgSend((id)v5, "elementIdentifier");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "elementIdentifier");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    _SBSystemApertureWellKnownActivityElementIdentifiersForComparison();
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "containsObject:", v9);
    v13 = (void **)MEMORY[0x1E0DAC958];
    if ((v12 & 1) == 0)
    {
      v14 = SAHasActivityBehavior();
      v15 = *v13;
      if (!v14)
        v15 = 0;
      v16 = v15;

      v9 = v16;
    }
    if ((objc_msgSend(v11, "containsObject:", v10) & 1) == 0)
    {
      v17 = SAHasActivityBehavior();
      v18 = *v13;
      if (!v17)
        v18 = 0;
      v19 = v18;

      v10 = v19;
    }
    v8 = 0;
    if (!v9 || !v10)
    {
LABEL_40:

      goto LABEL_41;
    }
    if ((objc_msgSend(v9, "isEqualToString:", v10) & 1) != 0)
    {
      v8 = 0;
      goto LABEL_40;
    }
    v30 = 0;
    _SBSystemApertureActivityElementIdentifiersRelatedToElementIdentifier(v9, &v30);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v20, "containsObject:", v10))
    {
      if (v30)
        v8 = 1;
      else
        v8 = -1;
      if (!a3)
        goto LABEL_39;
      v28 = (void *)MEMORY[0x1E0CB3940];
      _SBShortElementDescription(v7);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      if (v30)
        v22 = CFSTR("superior");
      else
        v22 = CFSTR("inferior");
      v26 = v22;
      _SBShortElementDescription((void *)v5);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v28, "stringWithFormat:", CFSTR("Element with well known identifier '%@' present in %@ set of '%@'"), v21, v26, v23);
    }
    else
    {
      if (v30)
        v8 = -1;
      else
        v8 = 1;
      if (!a3)
        goto LABEL_39;
      v29 = (void *)MEMORY[0x1E0CB3940];
      _SBShortElementDescription(v7);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      if (v30)
        v24 = CFSTR("superior");
      else
        v24 = CFSTR("inferior");
      v27 = v24;
      _SBShortElementDescription((void *)v5);
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v29, "stringWithFormat:", CFSTR("Element with well known identifier '%@' NOT present in %@ set of '%@'"), v21, v27, v23);
    }
    *a3 = (id)objc_claimAutoreleasedReturnValue();

LABEL_39:
    goto LABEL_40;
  }
  v8 = -1;
LABEL_41:

  return v8;
}

id SBStringFromInvalidationEventResponseOptions(char a1)
{
  id v2;
  void *v3;
  id v4;
  void *v5;

  v2 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
  v3 = v2;
  if ((a1 & 1) != 0)
  {
    objc_msgSend(v2, "appendFormat:", CFSTR("%@|"), CFSTR("Model"));
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  objc_msgSend(v3, "appendFormat:", CFSTR("%@|"), CFSTR("Layout"));
  if ((a1 & 4) != 0)
LABEL_4:
    objc_msgSend(v3, "appendFormat:", CFSTR("%@|"), CFSTR("Identifier Preference"));
LABEL_5:
  if (objc_msgSend(v3, "length"))
  {
    objc_msgSend(v3, "substringWithRange:", 0, objc_msgSend(v3, "length") - 1);
    v4 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v4 = v3;
  }
  v5 = v4;

  return v5;
}

BOOL SBInvalidationDodgingOptionsContainsOption(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

void sub_1D0A7170C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 192));
  _Unwind_Resume(a1);
}

void sub_1D0A7483C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBContinuousExposeHomeScreenBackdropMaterialRecipeName()
{
  return CFSTR("homeScreenBackdrop-chamois");
}

void sub_1D0A752AC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1D0A75918(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBPBAppLayoutReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  uint64_t v16;
  int v17;
  char v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t result;
  SBPBDisplayItem *v27;
  uint64_t v28;
  char v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  char v35;
  unsigned int v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  char v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  char v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  char v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  char v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      v15 = v9++ >= 9;
      if (v15)
      {
        v10 = 0;
        v16 = *v5;
        v17 = *(unsigned __int8 *)(a2 + v16);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *v5;
    v17 = *(unsigned __int8 *)(a2 + v16);
    if (*(_BYTE *)(a2 + v16))
      v10 = 0;
LABEL_14:
    if (v17 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v19 = 0;
        v20 = 0;
        v21 = 0;
        while (1)
        {
          v22 = *v3;
          v23 = *(_QWORD *)(a2 + v22);
          v24 = v23 + 1;
          if (v23 == -1 || v24 > *(_QWORD *)(a2 + *v4))
            break;
          v25 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v23);
          *(_QWORD *)(a2 + v22) = v24;
          v21 |= (unint64_t)(v25 & 0x7F) << v19;
          if ((v25 & 0x80) == 0)
            goto LABEL_95;
          v19 += 7;
          v15 = v20++ >= 9;
          if (v15)
          {
            LODWORD(v21) = 0;
            goto LABEL_97;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_95:
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_97:
        v75 = 100;
        goto LABEL_118;
      case 2u:
        v27 = objc_alloc_init(SBPBDisplayItem);
        v28 = 104;
        goto LABEL_59;
      case 3u:
        v29 = 0;
        v30 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 148) |= 2u;
        while (2)
        {
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          v33 = v32 + 1;
          if (v32 == -1 || v33 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v34 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v33;
            v21 |= (unint64_t)(v34 & 0x7F) << v29;
            if (v34 < 0)
            {
              v29 += 7;
              v15 = v30++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_101:
        v75 = 128;
        goto LABEL_118;
      case 4u:
        v27 = objc_alloc_init(SBPBDisplayItem);
        v28 = 120;
        goto LABEL_59;
      case 5u:
        v35 = 0;
        v36 = 0;
        v21 = 0;
        while (2)
        {
          v37 = *v3;
          v38 = *(_QWORD *)(a2 + v37);
          v39 = v38 + 1;
          if (v38 == -1 || v39 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v40 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v38);
            *(_QWORD *)(a2 + v37) = v39;
            v21 |= (unint64_t)(v40 & 0x7F) << v35;
            if (v40 < 0)
            {
              v35 += 7;
              v15 = v36++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_105:
        v75 = 96;
        goto LABEL_118;
      case 6u:
        v41 = 0;
        v42 = 0;
        v43 = 0;
        while (2)
        {
          v44 = *v3;
          v45 = *(_QWORD *)(a2 + v44);
          v46 = v45 + 1;
          if (v45 == -1 || v46 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v47 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v45);
            *(_QWORD *)(a2 + v44) = v46;
            v43 |= (unint64_t)(v47 & 0x7F) << v41;
            if (v47 < 0)
            {
              v41 += 7;
              v15 = v42++ >= 9;
              if (v15)
              {
                v43 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v43 = 0;
LABEL_109:
        *(_BYTE *)(a1 + 144) = v43 != 0;
        goto LABEL_128;
      case 7u:
        v48 = 0;
        v49 = 0;
        v21 = 0;
        *(_BYTE *)(a1 + 148) |= 1u;
        while (2)
        {
          v50 = *v3;
          v51 = *(_QWORD *)(a2 + v50);
          v52 = v51 + 1;
          if (v51 == -1 || v52 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v53 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v51);
            *(_QWORD *)(a2 + v50) = v52;
            v21 |= (unint64_t)(v53 & 0x7F) << v48;
            if (v53 < 0)
            {
              v48 += 7;
              v15 = v49++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_113:
        v75 = 48;
        goto LABEL_118;
      case 8u:
        v27 = objc_alloc_init(SBPBDisplayItem);
        v28 = 40;
LABEL_59:
        objc_storeStrong((id *)(a1 + v28), v27);
        goto LABEL_78;
      case 9u:
        v54 = 0;
        v55 = 0;
        v21 = 0;
        while (2)
        {
          v56 = *v3;
          v57 = *(_QWORD *)(a2 + v56);
          v58 = v57 + 1;
          if (v57 == -1 || v58 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v59 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v57);
            *(_QWORD *)(a2 + v56) = v58;
            v21 |= (unint64_t)(v59 & 0x7F) << v54;
            if (v59 < 0)
            {
              v54 += 7;
              v15 = v55++ >= 9;
              if (v15)
              {
                LODWORD(v21) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          LODWORD(v21) = 0;
LABEL_117:
        v75 = 32;
LABEL_118:
        *(_DWORD *)(a1 + v75) = v21;
        goto LABEL_128;
      case 0xAu:
        v60 = *v3;
        v61 = *(_QWORD *)(a2 + v60);
        if (v61 <= 0xFFFFFFFFFFFFFFF7 && v61 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v62 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v61);
          *(_QWORD *)(a2 + v60) = v61 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v62 = 0;
        }
        v76 = 24;
        goto LABEL_127;
      case 0xBu:
        v63 = *v3;
        v64 = *(_QWORD *)(a2 + v63);
        if (v64 <= 0xFFFFFFFFFFFFFFF7 && v64 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v62 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v64);
          *(_QWORD *)(a2 + v63) = v64 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + v16) = 1;
          v62 = 0;
        }
        v76 = 16;
LABEL_127:
        *(_QWORD *)(a1 + v76) = v62;
        goto LABEL_128;
      case 0xCu:
        v27 = objc_alloc_init(SBPBDisplayItemLayoutAttributes);
        v65 = 112;
        goto LABEL_76;
      case 0xDu:
        v27 = objc_alloc_init(SBPBDisplayItemLayoutAttributes);
        v65 = 136;
        goto LABEL_76;
      case 0xEu:
        v27 = objc_alloc_init(SBPBDisplayItemLayoutAttributes);
        v65 = 56;
LABEL_76:
        objc_storeStrong((id *)(a1 + v65), v27);
        goto LABEL_91;
      case 0xFu:
        v27 = objc_alloc_init(SBPBDisplayItem);
        -[SBPBAppLayout addDisplayItems:](a1, v27);
LABEL_78:
        if (!PBReaderPlaceMark() || (SBPBDisplayItemReadFrom((uint64_t)v27, a2) & 1) == 0)
          goto LABEL_130;
        goto LABEL_93;
      case 0x10u:
        v27 = objc_alloc_init(SBPBDisplayItemLayoutAttributes);
        -[SBPBAppLayout addDisplayItemLayoutAttributes:](a1, v27);
        goto LABEL_91;
      case 0x11u:
        v66 = 0;
        v67 = 0;
        v68 = 0;
        while (2)
        {
          v69 = *v3;
          v70 = *(_QWORD *)(a2 + v69);
          v71 = v70 + 1;
          if (v70 == -1 || v71 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v72 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v70);
            *(_QWORD *)(a2 + v69) = v71;
            v68 |= (unint64_t)(v72 & 0x7F) << v66;
            if (v72 < 0)
            {
              v66 += 7;
              v15 = v67++ >= 9;
              if (v15)
              {
                v68 = 0;
                goto LABEL_122;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v68 = 0;
LABEL_122:
        *(_QWORD *)(a1 + 8) = v68;
        goto LABEL_128;
      case 0x12u:
        PBReaderReadString();
        v73 = objc_claimAutoreleasedReturnValue();
        v74 = *(void **)(a1 + 64);
        *(_QWORD *)(a1 + 64) = v73;

        goto LABEL_128;
      case 0x13u:
        v27 = objc_alloc_init(SBPBDisplayItemLayoutAttributes);
        -[SBPBAppLayout addDisplayItemLayoutAttributesForNonPreferredDisplay:](a1, v27);
LABEL_91:
        if (PBReaderPlaceMark() && (SBPBDisplayItemLayoutAttributesReadFrom((uint64_t)v27, a2) & 1) != 0)
        {
LABEL_93:
          PBReaderRecallMark();

LABEL_128:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_130:

        return 0;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_128;
    }
  }
}

const __CFString *NSStringFromSBSwitcherModifierEventResponseType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0x2D)
    return CFSTR("Anonymous");
  else
    return off_1E8EB3028[a1 - 1];
}

void SBSystemAperturePowerLogEvent(void *a1, void *a2, uint64_t a3, void *a4, void *a5)
{
  id v9;
  id v10;
  id v11;
  void *v12;
  void *v13;
  id v14;

  v14 = a1;
  v9 = a2;
  v10 = a4;
  v11 = a5;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a3);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "setObject:forKeyedSubscript:", v13, CFSTR("Layout"));

  if (v14 && v9)
  {
    objc_msgSend(v12, "setObject:forKeyedSubscript:", v14, CFSTR("PrimaryClient"));
    objc_msgSend(v12, "setObject:forKeyedSubscript:", v9, CFSTR("PrimaryElement"));
  }
  if (v10 && v11)
  {
    objc_msgSend(v12, "setObject:forKeyedSubscript:", v10, CFSTR("SecondaryClient"));
    objc_msgSend(v12, "setObject:forKeyedSubscript:", v11, CFSTR("SecondaryElement"));
  }
  PLLogTimeSensitiveRegisteredEvent();

}

void sub_1D0A7EA68(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void SystemSoundCompleted(uint64_t a1)
{
  id v2;

  +[SBSoundController sharedInstance](SBSoundController, "sharedInstance");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_cleanupSystemSound:andKill:", a1, 0);

}

void sub_1D0A82DB8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0A82F68(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0A8438C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A85ECC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A860E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBModifierCacheCoordinatorResponseDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("IncrementGenCount");
  else
    return off_1E8EB4D38[a1 - 1];
}

uint64_t SBChainableModifierMethodCacheQueryTrampolineForMethod(const char *a1, char *__s2, uint64_t a3)
{
  uint64_t v6;

  v6 = 0;
  while (strcmp((&sQueryTrampolines)[v6], __s2))
  {
    v6 += 2;
    if (v6 == 174)
      SBChainableModifierMethodCacheQueryTrampolineForMethod_cold_1(a1, (uint64_t)__s2);
  }
  return ((uint64_t (*)(uint64_t, const char *))(&sQueryTrampolines)[v6 + 1])(a3, a1);
}

uint64_t SBChainableModifierMethodCacheContextTrampolineForMethod(const char *a1, char *__s2, uint64_t a3)
{
  uint64_t v6;

  v6 = 0;
  while (strcmp((&sContextTrampolines)[v6], __s2))
  {
    v6 += 2;
    if (v6 == 174)
      SBChainableModifierMethodCacheContextTrampolineForMethod_cold_1(a1, (uint64_t)__s2);
  }
  return ((uint64_t (*)(uint64_t, const char *))(&sContextTrampolines)[v6 + 1])(a3, a1);
}

IMP blockIMPFromQuerySignature0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature0_block_invoke;
  v6[3] = &__block_descriptor_48_e29__16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature1(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature1_block_invoke;
  v6[3] = &__block_descriptor_48_e32__24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature2(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature2_block_invoke;
  v6[3] = &__block_descriptor_48_e32__24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature3(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature3_block_invoke;
  v6[3] = &__block_descriptor_48_e29_B16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature4_block_invoke;
  v6[3] = &__block_descriptor_48_e32_B24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature5(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature5_block_invoke;
  v6[3] = &__block_descriptor_48_e29_q16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature6(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature6_block_invoke;
  v6[3] = &__block_descriptor_48_e29_Q16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature7(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature7_block_invoke;
  v6[3] = &__block_descriptor_48_e32_Q24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature8_block_invoke;
  v6[3] = &__block_descriptor_48_e29_d16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature9(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature9_block_invoke;
  v6[3] = &__block_descriptor_48_e32_d24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature10(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature10_block_invoke;
  v6[3] = &__block_descriptor_48_e41___NSRange_QQ_16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature11(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature11_block_invoke;
  v6[3] = &__block_descriptor_48_e63__CGRect__CGPoint_dd__CGSize_dd__24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature12(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature12_block_invoke;
  v6[3] = &__block_descriptor_48_e55__UIRectCornerRadii_dddd_24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature13(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature13_block_invoke;
  v6[3] = &__block_descriptor_48_e60__CGRect__CGPoint_dd__CGSize_dd__16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature14(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature14_block_invoke;
  v6[3] = &__block_descriptor_48_e40__CGPoint_dd_16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature15(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature15_block_invoke;
  v6[3] = &__block_descriptor_48_e39__CGSize_dd_16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature16(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature16_block_invoke;
  v6[3] = &__block_descriptor_48_e32_B24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature17(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature17_block_invoke;
  v6[3] = &__block_descriptor_48_e63__CGRect__CGPoint_dd__CGSize_dd__24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature18(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature18_block_invoke;
  v6[3] = &__block_descriptor_48_e32_d24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature19(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature19_block_invoke;
  v6[3] = &__block_descriptor_48_e66__CGRect__CGPoint_dd__CGSize_dd__32__0__SBChainableModifier_8q16q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature20(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature20_block_invoke;
  v6[3] = &__block_descriptor_48_e32_v24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature21(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature21_block_invoke;
  v6[3] = &__block_descriptor_48_e46__CGPoint_dd_32__0__SBChainableModifier_8_16d24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature22(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature22_block_invoke;
  v6[3] = &__block_descriptor_48_e32_q24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature23(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature23_block_invoke;
  v6[3] = &__block_descriptor_48_e32_Q24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature24(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature24_block_invoke;
  v6[3] = &__block_descriptor_48_e46__CGPoint_dd_32__0__SBChainableModifier_8Q16q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature25(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature25_block_invoke;
  v6[3] = &__block_descriptor_48_e68__CGPoint_dd_48__0__SBChainableModifier_8_CGPoint_dd_16_CGPoint_dd_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature26(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature26_block_invoke;
  v6[3] = &__block_descriptor_48_e29_v16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature27(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature27_block_invoke;
  v6[3] = &__block_descriptor_48_e104__CGPoint_dd_96__0__SBChainableModifier_8_CGPoint_dd_16_CGPoint_dd_32_CGPoint_dd_48_CGPoint_dd_64_d80_d88l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature28(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature28_block_invoke;
  v6[3] = &__block_descriptor_48_e57__CGPoint_dd_40__0__SBChainableModifier_8_16_CGPoint_dd_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature29(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature29_block_invoke;
  v6[3] = &__block_descriptor_48_e35__32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature30(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature30_block_invoke;
  v6[3] = &__block_descriptor_48_e69__CGRect__CGPoint_dd__CGSize_dd__40__0__SBChainableModifier_8q16_24q32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature31(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature31_block_invoke;
  v6[3] = &__block_descriptor_48_e66__CGRect__CGPoint_dd__CGSize_dd__32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature32(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature32_block_invoke;
  v6[3] = &__block_descriptor_48_e35_B32__0__SBChainableModifier_8_16Q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature33(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature33_block_invoke;
  v6[3] = &__block_descriptor_48_e58__UIRectCornerRadii_dddd_32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature34(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature34_block_invoke;
  v6[3] = &__block_descriptor_48_e35__32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature35(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature35_block_invoke;
  v6[3] = &__block_descriptor_48_e35_B32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature36(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature36_block_invoke;
  v6[3] = &__block_descriptor_48_e46__40__0__SBChainableModifier_8_16_CGPoint_dd_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature37(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature37_block_invoke;
  v6[3] = &__block_descriptor_48_e42__CGSize_dd_24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature38(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature38_block_invoke;
  v6[3] = &__block_descriptor_48_e35_B32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature39(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature39_block_invoke;
  v6[3] = &__block_descriptor_48_e45__40__0__SBChainableModifier_8_16_CGSize_dd_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature40(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature40_block_invoke;
  v6[3] = &__block_descriptor_48_e55__CGSize_dd_40__0__SBChainableModifier_8_CGSize_dd_16_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature41(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature41_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature42(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature42_block_invoke;
  v6[3] = &__block_descriptor_48_e49__48__0__SBChainableModifier_8q16_24_CGPoint_dd_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature43(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature43_block_invoke;
  v6[3] = &__block_descriptor_48_e35_Q32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature44(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature44_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8q16Q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature45(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature45_block_invoke;
  v6[3] = &__block_descriptor_48_e32_q24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature46(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature46_block_invoke;
  v6[3] = &__block_descriptor_48_e38_Q40__0__SBChainableModifier_8Q16q24_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature47(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature47_block_invoke;
  v6[3] = &__block_descriptor_48_e43__CGPoint_dd_24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature48(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature48_block_invoke;
  v6[3] = &__block_descriptor_48_e67__CGAffineTransform_dddddd_32__0__SBChainableModifier_8_CGSize_dd_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature49(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature49_block_invoke;
  v6[3] = &__block_descriptor_48_e66__CGRect__CGPoint_dd__CGSize_dd__32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature50(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature50_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature51(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature51_block_invoke;
  v6[3] = &__block_descriptor_48_e70__SBSwitcherAsyncRenderingAttributes_BB_24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature52(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature52_block_invoke;
  v6[3] = &__block_descriptor_48_e38_d40__0__SBChainableModifier_8q16_24Q32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature53(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature53_block_invoke;
  v6[3] = &__block_descriptor_48_e38_d36__0__SBChainableModifier_8_16d24B32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature54(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature54_block_invoke;
  v6[3] = &__block_descriptor_48_e106__SBSwitcherShelfPresentationAttributes_B_CGRect__CGPoint_dd__CGSize_dd__QQ_24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature55(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature55_block_invoke;
  v6[3] = &__block_descriptor_48_e35_Q32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature56(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature56_block_invoke;
  v6[3] = &__block_descriptor_48_e38_B40__0__SBChainableModifier_8q16_24Q32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature57(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature57_block_invoke;
  v6[3] = &__block_descriptor_48_e46__CGPoint_dd_32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature58(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature58_block_invoke;
  v6[3] = &__block_descriptor_48_e43__CGPoint_dd_24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature59(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature59_block_invoke;
  v6[3] = &__block_descriptor_48_e46__CGPoint_dd_32__0__SBChainableModifier_8q16Q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature60(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature60_block_invoke;
  v6[3] = &__block_descriptor_48_e46_B40__0__SBChainableModifier_8Q16_CGPoint_dd_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature61(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature61_block_invoke;
  v6[3] = &__block_descriptor_48_e97__CGRect__CGPoint_dd__CGSize_dd__56__0__SBChainableModifier_8Q16_CGRect__CGPoint_dd__CGSize_dd__24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature62(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature62_block_invoke;
  v6[3] = &__block_descriptor_48_e100__CGRect__CGPoint_dd__CGSize_dd__64__0__SBChainableModifier_8q16_24_CGRect__CGPoint_dd__CGSize_dd__32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature63(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature63_block_invoke;
  v6[3] = &__block_descriptor_48_e129__CGPoint_dd_112__0__SBChainableModifier_8q16Q24_CGRect__CGPoint_dd__CGSize_dd__32_CGPoint_dd_64_CGRect__CGPoint_dd__CGSize_dd__80l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature64(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature64_block_invoke;
  v6[3] = &__block_descriptor_48_e49_B48__0__SBChainableModifier_8q16Q24_CGPoint_dd_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature65(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature65_block_invoke;
  v6[3] = &__block_descriptor_48_e103__CGRect__CGPoint_dd__CGSize_dd__72__0__SBChainableModifier_8q16_24q32_CGRect__CGPoint_dd__CGSize_dd__40l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature66(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature66_block_invoke;
  v6[3] = &__block_descriptor_48_e66__CGRect__CGPoint_dd__CGSize_dd__32__0__SBChainableModifier_8_16q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature67(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature67_block_invoke;
  v6[3] = &__block_descriptor_48_e84__UIRectCornerRadii_dddd_64__0__SBChainableModifier_8q16_24_UIRectCornerRadii_dddd_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature68(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature68_block_invoke;
  v6[3] = &__block_descriptor_48_e38_Q40__0__SBChainableModifier_8q16_24Q32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature69(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature69_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8q16d24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature70(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature70_block_invoke;
  v6[3] = &__block_descriptor_48_e35_Q32__0__SBChainableModifier_8_16Q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature71(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature71_block_invoke;
  v6[3] = &__block_descriptor_48_e32_c24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature72(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature72_block_invoke;
  v6[3] = &__block_descriptor_48_e45__CGSize_dd_32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature73(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature73_block_invoke;
  v6[3] = &__block_descriptor_48_e103__CGRect__CGPoint_dd__CGSize_dd__72__0__SBChainableModifier_8q16_24_CGRect__CGPoint_dd__CGSize_dd__32q64l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature74(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature74_block_invoke;
  v6[3] = &__block_descriptor_48_e79__CGSize_dd_64__0__SBChainableModifier_8q16_24_CGRect__CGPoint_dd__CGSize_dd__32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature75(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature75_block_invoke;
  v6[3] = &__block_descriptor_48_e97__CGRect__CGPoint_dd__CGSize_dd__56__0__SBChainableModifier_8_CGRect__CGPoint_dd__CGSize_dd__16_48l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature76(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature76_block_invoke;
  v6[3] = &__block_descriptor_48_e57__CGPoint_dd_40__0__SBChainableModifier_8_CGPoint_dd_16_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature77(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature77_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8_16d24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature78(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature78_block_invoke;
  v6[3] = &__block_descriptor_48_e73__SBSwitcherWallpaperGradientAttributes_dd_24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature79(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature79_block_invoke;
  v6[3] = &__block_descriptor_48_e35_Q32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature80(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature80_block_invoke;
  v6[3] = &__block_descriptor_48_e80__SBSwitcherContinuousExposeStripTongueAttributes_QQ_16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature81(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature81_block_invoke;
  v6[3] = &__block_descriptor_48_e38_B36__0__SBChainableModifier_8_16_24B32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature82(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature82_block_invoke;
  v6[3] = &__block_descriptor_48_e38__40__0__SBChainableModifier_8_16_24_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature83(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature83_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8d16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature84(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature84_block_invoke;
  v6[3] = &__block_descriptor_48_e103__CGRect__CGPoint_dd__CGSize_dd__72__0__SBChainableModifier_8Q16_24Q32_CGRect__CGPoint_dd__CGSize_dd__40l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature85(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature85_block_invoke;
  v6[3] = &__block_descriptor_48_e49__48__0__SBChainableModifier_8_CGPoint_dd_16_32_40l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromQuerySignature86(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromQuerySignature86_block_invoke;
  v6[3] = &__block_descriptor_48_e43_B32__0__SBChainableModifier_8_CGPoint_dd_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

uint64_t __blockIMPFromQuerySignature10_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromQuerySignature14_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromQuerySignature15_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromQuerySignature17_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature19_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature20_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature21_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature22_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature24_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature25_block_invoke(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  id v11;
  uint64_t (*v12)(id, _QWORD, double, double, double, double);

  v11 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v12(v11, *(_QWORD *)(a1 + 40), a3, a4, a5, a6);
}

uint64_t __blockIMPFromQuerySignature26_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromQuerySignature27_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  id v23;
  uint64_t (*v24)(id, _QWORD, uint64_t, uint64_t, double, double, double, double, double, double, double, double);

  v23 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v24(v23, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t __blockIMPFromQuerySignature28_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature30_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature31_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature32_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature33_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature36_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature37_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature38_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature39_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature40_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature42_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v11;
  uint64_t (*v12)(id, _QWORD, uint64_t, uint64_t, double, double);

  v11 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v12(v11, *(_QWORD *)(a1 + 40), a3, a4, a5, a6);
}

uint64_t __blockIMPFromQuerySignature46_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature48_block_invoke(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, double, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

double __blockIMPFromQuerySignature49_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  double (*v11)(id, _QWORD, id, id);
  double v12;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = a3;
  v10 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v12 = v11(v10, *(_QWORD *)(a1 + 40), v9, v8);

  return v12;
}

double __blockIMPFromQuerySignature50_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  double (*v11)(id, _QWORD, id, id);
  double v12;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = a3;
  v10 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v12 = v11(v10, *(_QWORD *)(a1 + 40), v9, v8);

  return v12;
}

uint64_t __blockIMPFromQuerySignature53_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature54_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromQuerySignature59_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature60_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature63_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  id v17;
  uint64_t (*v18)(id, _QWORD, uint64_t, uint64_t, double, double, double, double, double, double);

  v17 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v18(v17, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t __blockIMPFromQuerySignature64_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v11;
  uint64_t (*v12)(id, _QWORD, uint64_t, uint64_t, double, double);

  v11 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v12(v11, *(_QWORD *)(a1 + 40), a3, a4, a5, a6);
}

uint64_t __blockIMPFromQuerySignature65_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  id v17;
  uint64_t (*v18)(id, _QWORD, uint64_t, uint64_t, uint64_t, double, double, double, double);

  v17 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v18(v17, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8, a9);
}

uint64_t __blockIMPFromQuerySignature66_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature69_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature70_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromQuerySignature71_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

double __blockIMPFromQuerySignature72_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  double (*v10)(id, _QWORD, uint64_t, id);
  double v11;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v11 = v10(v9, *(_QWORD *)(a1 + 40), a3, v8);

  return v11;
}

double __blockIMPFromQuerySignature73_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  double (*v20)(id, _QWORD, uint64_t, id, uint64_t, double, double, double, double);
  double v21;

  v16 = *(_QWORD *)(a2 + 16);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = a4;
  v19 = MethodCacheDispatchDataForSelectorIndex(v16, v17);
  v21 = v20(v19, *(_QWORD *)(a1 + 40), a3, v18, a5, a6, a7, a8, a9);

  return v21;
}

double __blockIMPFromQuerySignature74_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6, double a7, double a8)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  double (*v18)(id, _QWORD, uint64_t, id, double, double, double, double);
  double v19;

  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = a4;
  v17 = MethodCacheDispatchDataForSelectorIndex(v14, v15);
  v19 = v18(v17, *(_QWORD *)(a1 + 40), a3, v16, a5, a6, a7, a8);

  return v19;
}

uint64_t __blockIMPFromQuerySignature79_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t (*v11)(id, _QWORD, id, id);
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = a3;
  v10 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v12 = v11(v10, *(_QWORD *)(a1 + 40), v9, v8);

  return v12;
}

uint64_t __blockIMPFromQuerySignature81_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature82_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromQuerySignature85_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v11;
  uint64_t (*v12)(id, _QWORD, uint64_t, uint64_t, double, double);

  v11 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v12(v11, *(_QWORD *)(a1 + 40), a3, a4, a5, a6);
}

uint64_t __blockIMPFromQuerySignature86_block_invoke(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, double, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 16), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

IMP blockIMPFromContextSignature0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature0_block_invoke;
  v6[3] = &__block_descriptor_48_e29__16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature1(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature1_block_invoke;
  v6[3] = &__block_descriptor_48_e32__24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature2(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature2_block_invoke;
  v6[3] = &__block_descriptor_48_e32__24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature3(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature3_block_invoke;
  v6[3] = &__block_descriptor_48_e29_B16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature4_block_invoke;
  v6[3] = &__block_descriptor_48_e32_B24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature5(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature5_block_invoke;
  v6[3] = &__block_descriptor_48_e29_q16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature6(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature6_block_invoke;
  v6[3] = &__block_descriptor_48_e29_Q16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature7(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature7_block_invoke;
  v6[3] = &__block_descriptor_48_e32_Q24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature8(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature8_block_invoke;
  v6[3] = &__block_descriptor_48_e29_d16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature9(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature9_block_invoke;
  v6[3] = &__block_descriptor_48_e32_d24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature10(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature10_block_invoke;
  v6[3] = &__block_descriptor_48_e41___NSRange_QQ_16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature11(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature11_block_invoke;
  v6[3] = &__block_descriptor_48_e63__CGRect__CGPoint_dd__CGSize_dd__24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature12(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature12_block_invoke;
  v6[3] = &__block_descriptor_48_e55__UIRectCornerRadii_dddd_24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature13(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature13_block_invoke;
  v6[3] = &__block_descriptor_48_e60__CGRect__CGPoint_dd__CGSize_dd__16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature14(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature14_block_invoke;
  v6[3] = &__block_descriptor_48_e40__CGPoint_dd_16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature15(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature15_block_invoke;
  v6[3] = &__block_descriptor_48_e39__CGSize_dd_16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature16(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature16_block_invoke;
  v6[3] = &__block_descriptor_48_e32_B24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature17(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature17_block_invoke;
  v6[3] = &__block_descriptor_48_e63__CGRect__CGPoint_dd__CGSize_dd__24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature18(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature18_block_invoke;
  v6[3] = &__block_descriptor_48_e32_d24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature19(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature19_block_invoke;
  v6[3] = &__block_descriptor_48_e66__CGRect__CGPoint_dd__CGSize_dd__32__0__SBChainableModifier_8q16q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature20(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature20_block_invoke;
  v6[3] = &__block_descriptor_48_e32_v24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature21(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature21_block_invoke;
  v6[3] = &__block_descriptor_48_e46__CGPoint_dd_32__0__SBChainableModifier_8_16d24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature22(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature22_block_invoke;
  v6[3] = &__block_descriptor_48_e32_q24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature23(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature23_block_invoke;
  v6[3] = &__block_descriptor_48_e32_Q24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature24(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature24_block_invoke;
  v6[3] = &__block_descriptor_48_e46__CGPoint_dd_32__0__SBChainableModifier_8Q16q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature25(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature25_block_invoke;
  v6[3] = &__block_descriptor_48_e68__CGPoint_dd_48__0__SBChainableModifier_8_CGPoint_dd_16_CGPoint_dd_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature26(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature26_block_invoke;
  v6[3] = &__block_descriptor_48_e29_v16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature27(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature27_block_invoke;
  v6[3] = &__block_descriptor_48_e104__CGPoint_dd_96__0__SBChainableModifier_8_CGPoint_dd_16_CGPoint_dd_32_CGPoint_dd_48_CGPoint_dd_64_d80_d88l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature28(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature28_block_invoke;
  v6[3] = &__block_descriptor_48_e57__CGPoint_dd_40__0__SBChainableModifier_8_16_CGPoint_dd_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature29(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature29_block_invoke;
  v6[3] = &__block_descriptor_48_e35__32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature30(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature30_block_invoke;
  v6[3] = &__block_descriptor_48_e69__CGRect__CGPoint_dd__CGSize_dd__40__0__SBChainableModifier_8q16_24q32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature31(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature31_block_invoke;
  v6[3] = &__block_descriptor_48_e66__CGRect__CGPoint_dd__CGSize_dd__32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature32(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature32_block_invoke;
  v6[3] = &__block_descriptor_48_e35_B32__0__SBChainableModifier_8_16Q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature33(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature33_block_invoke;
  v6[3] = &__block_descriptor_48_e58__UIRectCornerRadii_dddd_32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature34(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature34_block_invoke;
  v6[3] = &__block_descriptor_48_e35__32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature35(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature35_block_invoke;
  v6[3] = &__block_descriptor_48_e35_B32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature36(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature36_block_invoke;
  v6[3] = &__block_descriptor_48_e46__40__0__SBChainableModifier_8_16_CGPoint_dd_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature37(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature37_block_invoke;
  v6[3] = &__block_descriptor_48_e42__CGSize_dd_24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature38(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature38_block_invoke;
  v6[3] = &__block_descriptor_48_e35_B32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature39(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature39_block_invoke;
  v6[3] = &__block_descriptor_48_e45__40__0__SBChainableModifier_8_16_CGSize_dd_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature40(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature40_block_invoke;
  v6[3] = &__block_descriptor_48_e55__CGSize_dd_40__0__SBChainableModifier_8_CGSize_dd_16_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature41(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature41_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature42(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature42_block_invoke;
  v6[3] = &__block_descriptor_48_e49__48__0__SBChainableModifier_8q16_24_CGPoint_dd_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature43(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature43_block_invoke;
  v6[3] = &__block_descriptor_48_e35_Q32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature44(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature44_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8q16Q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature45(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature45_block_invoke;
  v6[3] = &__block_descriptor_48_e32_q24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature46(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature46_block_invoke;
  v6[3] = &__block_descriptor_48_e38_Q40__0__SBChainableModifier_8Q16q24_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature47(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature47_block_invoke;
  v6[3] = &__block_descriptor_48_e43__CGPoint_dd_24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature48(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature48_block_invoke;
  v6[3] = &__block_descriptor_48_e67__CGAffineTransform_dddddd_32__0__SBChainableModifier_8_CGSize_dd_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature49(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature49_block_invoke;
  v6[3] = &__block_descriptor_48_e66__CGRect__CGPoint_dd__CGSize_dd__32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature50(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature50_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature51(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature51_block_invoke;
  v6[3] = &__block_descriptor_48_e70__SBSwitcherAsyncRenderingAttributes_BB_24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature52(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature52_block_invoke;
  v6[3] = &__block_descriptor_48_e38_d40__0__SBChainableModifier_8q16_24Q32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature53(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature53_block_invoke;
  v6[3] = &__block_descriptor_48_e38_d36__0__SBChainableModifier_8_16d24B32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature54(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature54_block_invoke;
  v6[3] = &__block_descriptor_48_e106__SBSwitcherShelfPresentationAttributes_B_CGRect__CGPoint_dd__CGSize_dd__QQ_24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature55(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature55_block_invoke;
  v6[3] = &__block_descriptor_48_e35_Q32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature56(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature56_block_invoke;
  v6[3] = &__block_descriptor_48_e38_B40__0__SBChainableModifier_8q16_24Q32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature57(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature57_block_invoke;
  v6[3] = &__block_descriptor_48_e46__CGPoint_dd_32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature58(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature58_block_invoke;
  v6[3] = &__block_descriptor_48_e43__CGPoint_dd_24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature59(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature59_block_invoke;
  v6[3] = &__block_descriptor_48_e46__CGPoint_dd_32__0__SBChainableModifier_8q16Q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature60(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature60_block_invoke;
  v6[3] = &__block_descriptor_48_e46_B40__0__SBChainableModifier_8Q16_CGPoint_dd_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature61(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature61_block_invoke;
  v6[3] = &__block_descriptor_48_e97__CGRect__CGPoint_dd__CGSize_dd__56__0__SBChainableModifier_8Q16_CGRect__CGPoint_dd__CGSize_dd__24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature62(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature62_block_invoke;
  v6[3] = &__block_descriptor_48_e100__CGRect__CGPoint_dd__CGSize_dd__64__0__SBChainableModifier_8q16_24_CGRect__CGPoint_dd__CGSize_dd__32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature63(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature63_block_invoke;
  v6[3] = &__block_descriptor_48_e129__CGPoint_dd_112__0__SBChainableModifier_8q16Q24_CGRect__CGPoint_dd__CGSize_dd__32_CGPoint_dd_64_CGRect__CGPoint_dd__CGSize_dd__80l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature64(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature64_block_invoke;
  v6[3] = &__block_descriptor_48_e49_B48__0__SBChainableModifier_8q16Q24_CGPoint_dd_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature65(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature65_block_invoke;
  v6[3] = &__block_descriptor_48_e103__CGRect__CGPoint_dd__CGSize_dd__72__0__SBChainableModifier_8q16_24q32_CGRect__CGPoint_dd__CGSize_dd__40l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature66(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature66_block_invoke;
  v6[3] = &__block_descriptor_48_e66__CGRect__CGPoint_dd__CGSize_dd__32__0__SBChainableModifier_8_16q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature67(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature67_block_invoke;
  v6[3] = &__block_descriptor_48_e84__UIRectCornerRadii_dddd_64__0__SBChainableModifier_8q16_24_UIRectCornerRadii_dddd_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature68(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature68_block_invoke;
  v6[3] = &__block_descriptor_48_e38_Q40__0__SBChainableModifier_8q16_24Q32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature69(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature69_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8q16d24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature70(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature70_block_invoke;
  v6[3] = &__block_descriptor_48_e35_Q32__0__SBChainableModifier_8_16Q24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature71(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature71_block_invoke;
  v6[3] = &__block_descriptor_48_e32_c24__0__SBChainableModifier_8_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature72(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature72_block_invoke;
  v6[3] = &__block_descriptor_48_e45__CGSize_dd_32__0__SBChainableModifier_8q16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature73(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature73_block_invoke;
  v6[3] = &__block_descriptor_48_e103__CGRect__CGPoint_dd__CGSize_dd__72__0__SBChainableModifier_8q16_24_CGRect__CGPoint_dd__CGSize_dd__32q64l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature74(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature74_block_invoke;
  v6[3] = &__block_descriptor_48_e79__CGSize_dd_64__0__SBChainableModifier_8q16_24_CGRect__CGPoint_dd__CGSize_dd__32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature75(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature75_block_invoke;
  v6[3] = &__block_descriptor_48_e97__CGRect__CGPoint_dd__CGSize_dd__56__0__SBChainableModifier_8_CGRect__CGPoint_dd__CGSize_dd__16_48l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature76(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature76_block_invoke;
  v6[3] = &__block_descriptor_48_e57__CGPoint_dd_40__0__SBChainableModifier_8_CGPoint_dd_16_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature77(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature77_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8_16d24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature78(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature78_block_invoke;
  v6[3] = &__block_descriptor_48_e73__SBSwitcherWallpaperGradientAttributes_dd_24__0__SBChainableModifier_8Q16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature79(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature79_block_invoke;
  v6[3] = &__block_descriptor_48_e35_Q32__0__SBChainableModifier_8_16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature80(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature80_block_invoke;
  v6[3] = &__block_descriptor_48_e80__SBSwitcherContinuousExposeStripTongueAttributes_QQ_16__0__SBChainableModifier_8l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature81(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature81_block_invoke;
  v6[3] = &__block_descriptor_48_e38_B36__0__SBChainableModifier_8_16_24B32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature82(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature82_block_invoke;
  v6[3] = &__block_descriptor_48_e38__40__0__SBChainableModifier_8_16_24_32l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature83(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature83_block_invoke;
  v6[3] = &__block_descriptor_48_e35_d32__0__SBChainableModifier_8d16_24l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature84(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature84_block_invoke;
  v6[3] = &__block_descriptor_48_e103__CGRect__CGPoint_dd__CGSize_dd__72__0__SBChainableModifier_8Q16_24Q32_CGRect__CGPoint_dd__CGSize_dd__40l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature85(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature85_block_invoke;
  v6[3] = &__block_descriptor_48_e49__48__0__SBChainableModifier_8_CGPoint_dd_16_32_40l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

IMP blockIMPFromContextSignature86(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  IMP v4;
  _QWORD v6[6];

  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __blockIMPFromContextSignature86_block_invoke;
  v6[3] = &__block_descriptor_48_e43_B32__0__SBChainableModifier_8_CGPoint_dd_16l;
  v6[4] = a1;
  v6[5] = a2;
  v2 = (void *)MEMORY[0x1D17E5550](v6);
  v3 = (void *)MEMORY[0x1D17E5550]();
  v4 = imp_implementationWithBlock(v3);

  return v4;
}

uint64_t __blockIMPFromContextSignature2_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature4_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature6_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature7_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature9_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature10_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature11_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature12_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature15_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature19_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature20_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature21_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature23_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature24_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature25_block_invoke(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  id v11;
  uint64_t (*v12)(id, _QWORD, double, double, double, double);

  v11 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v12(v11, *(_QWORD *)(a1 + 40), a3, a4, a5, a6);
}

uint64_t __blockIMPFromContextSignature26_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature27_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12)
{
  id v23;
  uint64_t (*v24)(id, _QWORD, uint64_t, uint64_t, double, double, double, double, double, double, double, double);

  v23 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v24(v23, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t __blockIMPFromContextSignature28_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature29_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature30_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature31_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature32_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature33_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature34_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature35_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature36_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature37_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature38_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature39_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature40_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature41_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature42_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v11;
  uint64_t (*v12)(id, _QWORD, uint64_t, uint64_t, double, double);

  v11 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v12(v11, *(_QWORD *)(a1 + 40), a3, a4, a5, a6);
}

uint64_t __blockIMPFromContextSignature43_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature44_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature45_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature46_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature47_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature48_block_invoke(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, double, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

double __blockIMPFromContextSignature49_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  double (*v11)(id, _QWORD, id, id);
  double v12;

  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = a3;
  v10 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v12 = v11(v10, *(_QWORD *)(a1 + 40), v9, v8);

  return v12;
}

double __blockIMPFromContextSignature50_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  double (*v11)(id, _QWORD, id, id);
  double v12;

  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = a3;
  v10 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v12 = v11(v10, *(_QWORD *)(a1 + 40), v9, v8);

  return v12;
}

uint64_t __blockIMPFromContextSignature51_block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t (*v8)(id, _QWORD, id);
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = a3;
  v7 = MethodCacheDispatchDataForSelectorIndex(v4, v5);
  v9 = v8(v7, *(_QWORD *)(a1 + 40), v6);

  return v9;
}

uint64_t __blockIMPFromContextSignature52_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature53_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature54_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature55_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature56_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature57_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature58_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature59_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature60_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, double, double);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature61_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  id v13;
  uint64_t (*v14)(id, _QWORD, uint64_t, double, double, double, double);

  v13 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v14(v13, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7);
}

uint64_t __blockIMPFromContextSignature62_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  id v15;
  uint64_t (*v16)(id, _QWORD, uint64_t, uint64_t, double, double, double, double);

  v15 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v16(v15, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8);
}

uint64_t __blockIMPFromContextSignature63_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  id v17;
  uint64_t (*v18)(id, _QWORD, uint64_t, uint64_t, double, double, double, double, double, double);

  v17 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v18(v17, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t __blockIMPFromContextSignature64_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v11;
  uint64_t (*v12)(id, _QWORD, uint64_t, uint64_t, double, double);

  v11 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v12(v11, *(_QWORD *)(a1 + 40), a3, a4, a5, a6);
}

uint64_t __blockIMPFromContextSignature65_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  id v17;
  uint64_t (*v18)(id, _QWORD, uint64_t, uint64_t, uint64_t, double, double, double, double);

  v17 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v18(v17, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8, a9);
}

uint64_t __blockIMPFromContextSignature66_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature67_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  id v15;
  uint64_t (*v16)(id, _QWORD, uint64_t, uint64_t, double, double, double, double);

  v15 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v16(v15, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8);
}

uint64_t __blockIMPFromContextSignature68_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature69_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature70_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, uint64_t);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature71_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

double __blockIMPFromContextSignature72_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  double (*v10)(id, _QWORD, uint64_t, id);
  double v11;

  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v11 = v10(v9, *(_QWORD *)(a1 + 40), a3, v8);

  return v11;
}

double __blockIMPFromContextSignature73_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  double (*v20)(id, _QWORD, uint64_t, id, uint64_t, double, double, double, double);
  double v21;

  v16 = *(_QWORD *)(a2 + 24);
  v17 = *(_QWORD *)(a1 + 32);
  v18 = a4;
  v19 = MethodCacheDispatchDataForSelectorIndex(v16, v17);
  v21 = v20(v19, *(_QWORD *)(a1 + 40), a3, v18, a5, a6, a7, a8, a9);

  return v21;
}

double __blockIMPFromContextSignature74_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5, double a6, double a7, double a8)
{
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  double (*v18)(id, _QWORD, uint64_t, id, double, double, double, double);
  double v19;

  v14 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = a4;
  v17 = MethodCacheDispatchDataForSelectorIndex(v14, v15);
  v19 = v18(v17, *(_QWORD *)(a1 + 40), a3, v16, a5, a6, a7, a8);

  return v19;
}

double __blockIMPFromContextSignature75_block_invoke(uint64_t a1, uint64_t a2, void *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  double (*v16)(id, _QWORD, id, double, double, double, double);
  double v17;

  v12 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = a3;
  v15 = MethodCacheDispatchDataForSelectorIndex(v12, v13);
  v17 = v16(v15, *(_QWORD *)(a1 + 40), v14, a4, a5, a6, a7);

  return v17;
}

double __blockIMPFromContextSignature76_block_invoke(uint64_t a1, uint64_t a2, void *a3, double a4, double a5)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  double (*v12)(id, _QWORD, id, double, double);
  double v13;

  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a2 + 24);
  v10 = a3;
  v11 = MethodCacheDispatchDataForSelectorIndex(v9, v8);
  v13 = v12(v11, *(_QWORD *)(a1 + 40), v10, a4, a5);

  return v13;
}

double __blockIMPFromContextSignature77_block_invoke(uint64_t a1, uint64_t a2, void *a3, double a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  double (*v10)(id, _QWORD, id, double);
  double v11;

  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a3;
  v9 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v11 = v10(v9, *(_QWORD *)(a1 + 40), v8, a4);

  return v11;
}

uint64_t __blockIMPFromContextSignature78_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5;
  uint64_t (*v6)(id, _QWORD, uint64_t);

  v5 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v6(v5, *(_QWORD *)(a1 + 40), a3);
}

uint64_t __blockIMPFromContextSignature79_block_invoke(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  uint64_t (*v11)(id, _QWORD, id, id);
  uint64_t v12;

  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = a4;
  v9 = a3;
  v10 = MethodCacheDispatchDataForSelectorIndex(v6, v7);
  v12 = v11(v10, *(_QWORD *)(a1 + 40), v9, v8);

  return v12;
}

uint64_t __blockIMPFromContextSignature80_block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t (*v4)(id, _QWORD);

  v3 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v4(v3, *(_QWORD *)(a1 + 40));
}

uint64_t __blockIMPFromContextSignature81_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature82_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v9;
  uint64_t (*v10)(id, _QWORD, uint64_t, uint64_t, uint64_t);

  v9 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v10(v9, *(_QWORD *)(a1 + 40), a3, a4, a5);
}

uint64_t __blockIMPFromContextSignature83_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, uint64_t, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

uint64_t __blockIMPFromContextSignature84_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  id v17;
  uint64_t (*v18)(id, _QWORD, uint64_t, uint64_t, uint64_t, double, double, double, double);

  v17 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v18(v17, *(_QWORD *)(a1 + 40), a3, a4, a5, a6, a7, a8, a9);
}

uint64_t __blockIMPFromContextSignature85_block_invoke(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  id v11;
  uint64_t (*v12)(id, _QWORD, uint64_t, uint64_t, double, double);

  v11 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v12(v11, *(_QWORD *)(a1 + 40), a3, a4, a5, a6);
}

uint64_t __blockIMPFromContextSignature86_block_invoke(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id v7;
  uint64_t (*v8)(id, _QWORD, double, double);

  v7 = MethodCacheDispatchDataForSelectorIndex(*(_QWORD *)(a2 + 24), *(_QWORD *)(a1 + 32));
  return v8(v7, *(_QWORD *)(a1 + 40), a3, a4);
}

void sub_1D0A92268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBNSStringFromCMPocketStateType(unint64_t a1)
{
  if (a1 > 3)
    return CFSTR("Unknown");
  else
    return off_1E8EB4D78[a1];
}

void sub_1D0A93830(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0A94C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,char a25)
{
  id *v25;
  uint64_t v26;

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a25, 8);
  _Block_object_dispose((const void *)(v26 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D0A9532C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0A95E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16)
{
  id *v16;
  id *v17;
  uint64_t v18;

  objc_destroyWeak(v17);
  objc_destroyWeak(v16);
  objc_destroyWeak((id *)(v18 - 120));
  objc_destroyWeak((id *)(v18 - 112));
  _Unwind_Resume(a1);
}

void sub_1D0A97524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_3_9(uint64_t a1)
{
  return *(_QWORD *)(*(_QWORD *)a1 + 8);
}

id OUTLINED_FUNCTION_5_7(id a1)
{
  return a1;
}

id OUTLINED_FUNCTION_7_3(void *a1, const char *a2)
{
  return objc_getProperty(a1, a2, 48, 1);
}

void sub_1D0A97E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_sync_exit(v16);
  _Unwind_Resume(a1);
}

void sub_1D0A980F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  void *v15;

  objc_sync_exit(v15);
  _Unwind_Resume(a1);
}

void sub_1D0AA035C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AA07B4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1D0AA0BC8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

__CFString *NSStringFromSBSystemActionSuppressionState(unint64_t a1)
{
  if (a1 < 3)
    return off_1E8EB5010[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown: %lu>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

double _SBSAMinimumFrameForElementAtIndex(uint64_t a1, void *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  id v11;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  void *v16;
  void *v17;
  unint64_t v18;
  double v19;
  double v20;
  CGFloat v22;
  double v23;
  double v24;
  double v25;
  double v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;

  v11 = a2;
  objc_msgSend(v11, "inertContainerFrame");
  x = v27.origin.x;
  y = v27.origin.y;
  width = v27.size.width;
  height = v27.size.height;
  v26 = CGRectGetWidth(v27);
  v28.origin.x = x;
  v28.origin.y = y;
  v28.size.width = width;
  v28.size.height = height;
  v24 = CGRectGetHeight(v28);
  v29.origin.x = a3;
  v29.origin.y = a4;
  v29.size.width = a5;
  v29.size.height = a6;
  v25 = CGRectGetWidth(v29);
  v30.origin.x = a3;
  v30.origin.y = a4;
  v30.size.width = a5;
  v30.size.height = a6;
  v23 = CGRectGetHeight(v30);
  v31.origin.x = a3;
  v31.origin.y = a4;
  v31.size.width = a5;
  v31.size.height = a6;
  v38.origin.x = x;
  v38.origin.y = y;
  v38.size.width = width;
  v38.size.height = height;
  if (CGRectContainsRect(v31, v38))
    goto LABEL_5;
  if (v23 - v24 <= 0.0 || v25 - v26 <= 0.0)
  {
    if (v25 < v23 || v23 < v25)
    {
      v32.origin.x = a3;
      v32.origin.y = a4;
      v32.size.width = a5;
      v32.size.height = a6;
      CGRectGetMinX(v32);
      v33.origin.x = a3;
      v33.origin.y = a4;
      v33.size.width = a5;
      v33.size.height = a6;
      CGRectGetMinY(v33);
    }
  }
  else
  {
    objc_msgSend(v11, "elementContexts", v25 - v26);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "objectAtIndexedSubscript:", a1);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "interfaceOrientation");

    if (v18 < 3)
    {
LABEL_5:
      objc_msgSend(v11, "inertContainerFrame");
      goto LABEL_6;
    }
    if (v18 == 4)
    {
      v35.origin.x = a3;
      v35.origin.y = a4;
      v35.size.width = a5;
      v22 = a6;
      v35.size.height = a6;
      CGRectGetMinX(v35);
    }
    else
    {
      if (v18 != 3)
        goto LABEL_6;
      v34.origin.x = a3;
      v34.origin.y = a4;
      v34.size.width = a5;
      v22 = a6;
      v34.size.height = a6;
      CGRectGetMaxX(v34);
    }
    v36.origin.x = a3;
    v36.origin.y = a4;
    v36.size.width = a5;
    v36.size.height = v22;
    CGRectGetMinY(v36);
    v37.origin.x = a3;
    v37.origin.y = a4;
    v37.size.width = a5;
    v37.size.height = v22;
    CGRectGetHeight(v37);
  }
LABEL_6:
  objc_msgSend(v11, "displayScale");
  UIRectIntegralWithScale();
  v20 = v19;

  return v20;
}

void sub_1D0AAAFD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  uint64_t v17;
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D0AAB46C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t SBSecureAppTypeForApplication(void *a1)
{
  void *v1;
  uint64_t v2;

  objc_msgSend(a1, "bundleIdentifier");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = SBSSecureAppTypeForIdentifier();

  return v2;
}

__CFString *SBSecureAppBundleIdentifierForSecureAppType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xC)
    return (__CFString *)0;
  else
    return *off_1E8EB5210[a1 - 1];
}

void sub_1D0AAC3E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AAC4C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AACC4C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *a12, id *location, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,id a41,id a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  objc_destroyWeak(location);
  objc_destroyWeak(a12);
  objc_destroyWeak(&a41);
  objc_destroyWeak(&a42);
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AAD2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AADCB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AADF44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromPictureInPictureInsetsSource(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xA)
    return CFSTR("none");
  else
    return off_1E8EB53C8[a1 - 1];
}

void sub_1D0AB0120(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AB11F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 88));
  _Unwind_Resume(a1);
}

void sub_1D0AB61AC(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 120));
  _Unwind_Resume(a1);
}

void sub_1D0AB61F0()
{
  JUMPOUT(0x1D0AB61E0);
}

const __CFString *SBRecordingIndicatorLocationDebugName(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Standalone");
  if (a1 == 1)
    v1 = CFSTR("StatusBar");
  if (a1 == 2)
    return CFSTR("SystemAperture");
  else
    return v1;
}

void sub_1D0AB6DF4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D0AB7A38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_3_10(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_1D0ABCB50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0ABE660(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a66;
  char a70;
  uint64_t v70;

  _Block_object_dispose(&a66, 8);
  _Block_object_dispose(&a70, 8);
  _Block_object_dispose((const void *)(v70 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1D0AC02F4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

uint64_t SBCornerMaskForElementInLayoutState(void *a1, void *a2, char a3)
{
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = a1;
  v6 = a2;
  v7 = v6;
  if ((a3 & 1) != 0)
  {
    v8 = 15;
  }
  else if (objc_msgSend(v6, "layoutContainsRole:", 2))
  {
    v9 = objc_msgSend(v5, "layoutRole");
    v10 = objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection");
    v11 = 1;
    if (v10 == 1)
      v11 = 2;
    if (v9 == v11)
      v8 = 10;
    else
      v8 = 5;
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

id SBDefaultCornerRadiusConfigurationForElementInLayoutState(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a1;
  v4 = a2;
  SBScreenDisplayCornerRadius();
  if (BSFloatIsZero())
  {
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D01730]), "initWithCornerRadius:", 0.0);
  }
  else
  {
    +[SBMedusaDomain rootSettings](SBMedusaDomain, "rootSettings");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "cornerRadiusForInnerCorners");
    v8 = v7;
    v9 = SBScreenDisplayCornerRadius();
    v10 = v9;
    if (objc_msgSend(v4, "layoutContainsRole:", 2))
    {
      v11 = objc_msgSend(v3, "layoutRole");
      v12 = objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection");
      v13 = 1;
      if (v12 == 1)
        v13 = 2;
      if (v11 == v13)
        v10 = v8;
      else
        v10 = v9;
      if (v11 != v13)
        v9 = v8;
    }
    v5 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D01730]), "initWithTopLeft:bottomLeft:bottomRight:topRight:", v9, v9, v10, v10);

  }
  return v5;
}

void sub_1D0AC2340(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0AC23B0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0AC2528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AC2784(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AC34C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0AC4730(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AC4BFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double CGPointFromState(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  double v4;
  double v5;
  void *v6;

  v1 = *MEMORY[0x1E0DABF10];
  v2 = a1;
  objc_msgSend(v2, "objectForKeyedSubscript:", v1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "doubleValue");
  v5 = v4;

  objc_msgSend(v2, "objectForKeyedSubscript:", *MEMORY[0x1E0DABF18]);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "doubleValue");
  return v5;
}

__CFString *NSStringFromSBCaptureButtonSuppressionState(unint64_t a1)
{
  if (a1 < 4)
    return off_1E8EB5A50[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown: %lu>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0ACA398(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0ACB2C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __PUIHomeScreenStyleTypeFromSBIconUserInterfaceStyleType(void *a1)
{
  id v1;
  uint64_t v2;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA278]) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA280]) & 1) != 0)
  {
    v2 = 2;
  }
  else if (objc_msgSend(v1, "isEqualToString:", *MEMORY[0x1E0DAA268]))
  {
    v2 = 3;
  }
  else
  {
    v2 = 0;
  }

  return v2;
}

id __SBIconUserInterfaceStyleTypeFromPUIHomeScreenStyleType(uint64_t a1)
{
  id *v1;

  if ((unint64_t)(a1 - 1) > 2)
    v1 = (id *)MEMORY[0x1E0DAA270];
  else
    v1 = (id *)qword_1E8EB5BC0[a1 - 1];
  return *v1;
}

void sub_1D0ACC140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0ACCED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0ACCFB4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void *__getPRIconUserInterfaceSizeLargeSymbolLoc_block_invoke(uint64_t a1)
{
  void *result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  if (!PosterKitLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_1E8EB5B90;
    v5 = 0;
    PosterKitLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!PosterKitLibraryCore_frameworkLibrary)
    __getPRIconUserInterfaceSizeLargeSymbolLoc_block_invoke_cold_1(&v3);
  result = dlsym((void *)PosterKitLibraryCore_frameworkLibrary, "PRIconUserInterfaceSizeLarge");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getPRIconUserInterfaceSizeLargeSymbolLoc_ptr = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPUIMutableStylePickerHomeScreenConfigurationClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  if (!PosterUIFoundationLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_1E8EB5BA8;
    v5 = 0;
    PosterUIFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!PosterUIFoundationLibraryCore_frameworkLibrary)
    __getPUIMutableStylePickerHomeScreenConfigurationClass_block_invoke_cold_1(&v3);
  result = objc_getClass("PUIMutableStylePickerHomeScreenConfiguration");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPUIMutableStylePickerHomeScreenConfigurationClass_block_invoke_cold_2();
  getPUIMutableStylePickerHomeScreenConfigurationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8)
                                                                             + 24);
  return result;
}

__CFString *SBManagedDisplayModeRequirementMaskDescription(uint64_t a1)
{
  void *v2;
  __CFString *v3;
  _QWORD *v4;
  uint8x8_t v5;
  int v6;
  unint64_t v7;
  _QWORD v9[2];
  void (*v10)(uint64_t, uint64_t);
  void *v11;
  __CFString *v12;
  _QWORD *v13;
  _QWORD v14[3];
  char v15;
  char v16;

  if (a1)
  {
    objc_msgSend(MEMORY[0x1E0CB37A0], "string");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v14[0] = 0;
    v14[1] = v14;
    v14[2] = 0x2020000000;
    v15 = 1;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 3221225472;
    v10 = __SBManagedDisplayModeRequirementMaskDescription_block_invoke;
    v11 = &unk_1E8EA1400;
    v13 = v14;
    v3 = v2;
    v12 = v3;
    v4 = v9;
    v16 = 0;
    v5 = (uint8x8_t)vcnt_s8((int8x8_t)a1);
    v5.i16[0] = vaddlv_u8(v5);
    v6 = v5.i32[0];
    if (v5.i32[0])
    {
      v7 = 0;
      do
      {
        if (((1 << v7) & a1) != 0)
        {
          ((void (*)(_QWORD *))v10)(v4);
          if (v16)
            break;
          --v6;
        }
        if (v7 > 0x3E)
          break;
        ++v7;
      }
      while (v6 > 0);
    }

    _Block_object_dispose(v14, 8);
  }
  else
  {
    v3 = CFSTR(".None");
  }
  return v3;
}

void sub_1D0ACD81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0ACE970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *SBDashBoardCaptureLaunchSourceFromWorkspaceTransitionSource(uint64_t a1)
{
  __CFString **v1;

  v1 = &SBDashBoardCaptureLaunchSourceGeneral;
  if (a1 == 70)
    v1 = &SBDashBoardCaptureLaunchSourceCaptureButton;
  return *v1;
}

void sub_1D0AD28C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

void sub_1D0AD372C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_list va;

  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AD4D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD51A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD546C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD584C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location,id a24)
{
  id *v24;
  id *v25;
  id *v26;
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(v24);
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a24);
  _Unwind_Resume(a1);
}

void sub_1D0AD5F20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD6248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD63E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD6818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD6E18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD7334(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AD9364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL _STBackgroundActivityIdentifiersNotEmptyAfterSubtractingIdentifiers(void *a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  _BOOL8 v7;

  v3 = a2;
  objc_msgSend(a1, "allObjects");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v4, "mutableCopy");

  objc_msgSend(v3, "allObjects");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "removeObjectsInArray:", v6);
  v7 = objc_msgSend(v5, "count") != 0;

  return v7;
}

void sub_1D0ADD318(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBPBDisplayItemLayoutAttributesReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  int *v8;
  int *v9;
  int *v10;
  int *v11;
  int *v12;
  int *v13;
  int *v14;
  int *v15;
  int *v16;
  int *v17;
  int *v18;
  int *v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  BOOL v27;
  uint64_t v28;
  int v29;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char v73;
  int *v74;
  int *v75;
  int *v76;
  int *v77;
  int *v78;
  int *v79;
  uint64_t result;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  unint64_t v84;
  char v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  char v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    v8 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v9 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v10 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v11 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v12 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v13 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v14 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v15 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v16 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v17 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v18 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    v19 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v20 = 0;
      v21 = 0;
      v22 = 0;
      while (1)
      {
        v23 = *v3;
        v24 = *(_QWORD *)(a2 + v23);
        v25 = v24 + 1;
        if (v24 == -1 || v25 > *(_QWORD *)(a2 + *v4))
          break;
        v26 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v24);
        *(_QWORD *)(a2 + v23) = v25;
        v22 |= (unint64_t)(v26 & 0x7F) << v20;
        if ((v26 & 0x80) == 0)
          goto LABEL_12;
        v20 += 7;
        v27 = v21++ >= 9;
        if (v27)
        {
          v22 = 0;
          v28 = *v5;
          v29 = *(unsigned __int8 *)(a2 + v28);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v28 = *v5;
      v29 = *(unsigned __int8 *)(a2 + v28);
      if (*(_BYTE *)(a2 + v28))
        v22 = 0;
LABEL_14:
      if (v29 || (v22 & 7) == 4)
        break;
      switch((v22 >> 3))
      {
        case 0xCu:
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = v8[203];
          goto LABEL_139;
        case 0xDu:
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = v9[204];
          goto LABEL_139;
        case 0xEu:
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v37);
            *(_QWORD *)(a2 + v36) = v37 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = v10[205];
          goto LABEL_139;
        case 0xFu:
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = v11[206];
          goto LABEL_139;
        case 0x10u:
          v40 = 0;
          v41 = 0;
          v42 = 0;
          while (2)
          {
            v43 = *v3;
            v44 = *(_QWORD *)(a2 + v43);
            v45 = v44 + 1;
            if (v44 == -1 || v45 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v46 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v44);
              *(_QWORD *)(a2 + v43) = v45;
              v42 |= (unint64_t)(v46 & 0x7F) << v40;
              if (v46 < 0)
              {
                v40 += 7;
                v27 = v41++ >= 9;
                if (v27)
                {
                  v42 = 0;
                  goto LABEL_96;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
LABEL_96:
          v98 = v12[207];
          goto LABEL_105;
        case 0x11u:
          v47 = 0;
          v48 = 0;
          v42 = 0;
          while (2)
          {
            v49 = *v3;
            v50 = *(_QWORD *)(a2 + v49);
            v51 = v50 + 1;
            if (v50 == -1 || v51 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v52 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v50);
              *(_QWORD *)(a2 + v49) = v51;
              v42 |= (unint64_t)(v52 & 0x7F) << v47;
              if (v52 < 0)
              {
                v47 += 7;
                v27 = v48++ >= 9;
                if (v27)
                {
                  v42 = 0;
                  goto LABEL_100;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
LABEL_100:
          v98 = v13[208];
          goto LABEL_105;
        case 0x12u:
          v53 = *v3;
          v54 = *(_QWORD *)(a2 + v53);
          if (v54 <= 0xFFFFFFFFFFFFFFF7 && v54 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v54);
            *(_QWORD *)(a2 + v53) = v54 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = v14[209];
          goto LABEL_139;
        case 0x13u:
          v55 = *v3;
          v56 = *(_QWORD *)(a2 + v55);
          if (v56 <= 0xFFFFFFFFFFFFFFF7 && v56 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v56);
            *(_QWORD *)(a2 + v55) = v56 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = v15[210];
          goto LABEL_139;
        case 0x14u:
          v57 = 0;
          v58 = 0;
          v42 = 0;
          while (2)
          {
            v59 = *v3;
            v60 = *(_QWORD *)(a2 + v59);
            v61 = v60 + 1;
            if (v60 == -1 || v61 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v62 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v60);
              *(_QWORD *)(a2 + v59) = v61;
              v42 |= (unint64_t)(v62 & 0x7F) << v57;
              if (v62 < 0)
              {
                v57 += 7;
                v27 = v58++ >= 9;
                if (v27)
                {
                  v42 = 0;
                  goto LABEL_104;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v42 = 0;
LABEL_104:
          v98 = v16[211];
LABEL_105:
          *(_QWORD *)(a1 + v98) = v42;
          continue;
        case 0x15u:
          v63 = *v3;
          v64 = *(_QWORD *)(a2 + v63);
          if (v64 <= 0xFFFFFFFFFFFFFFF7 && v64 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v64);
            *(_QWORD *)(a2 + v63) = v64 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = v17[212];
          goto LABEL_139;
        case 0x16u:
          v65 = *v3;
          v66 = *(_QWORD *)(a2 + v65);
          if (v66 <= 0xFFFFFFFFFFFFFFF7 && v66 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v66);
            *(_QWORD *)(a2 + v65) = v66 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = v18[213];
          goto LABEL_139;
        case 0x17u:
          v67 = 0;
          v68 = 0;
          v69 = 0;
          while (2)
          {
            v70 = *v3;
            v71 = *(_QWORD *)(a2 + v70);
            v72 = v71 + 1;
            if (v71 == -1 || v72 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v73 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v71);
              *(_QWORD *)(a2 + v70) = v72;
              v69 |= (unint64_t)(v73 & 0x7F) << v67;
              if (v73 < 0)
              {
                v67 += 7;
                v27 = v68++ >= 9;
                if (v27)
                {
                  LODWORD(v69) = 0;
                  goto LABEL_109;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v69) = 0;
LABEL_109:
          v99 = v19[214];
          goto LABEL_114;
        case 0x1Au:
          v81 = *v3;
          v82 = *(_QWORD *)(a2 + v81);
          if (v82 <= 0xFFFFFFFFFFFFFFF7 && v82 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v82);
            *(_QWORD *)(a2 + v81) = v82 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = 56;
          goto LABEL_139;
        case 0x1Bu:
          v83 = *v3;
          v84 = *(_QWORD *)(a2 + v83);
          if (v84 <= 0xFFFFFFFFFFFFFFF7 && v84 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v84);
            *(_QWORD *)(a2 + v83) = v84 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + v28) = 1;
            v33 = 0;
          }
          v100 = 40;
LABEL_139:
          *(_QWORD *)(a1 + v100) = v33;
          continue;
        case 0x1Cu:
          v85 = 0;
          v86 = 0;
          v69 = 0;
          while (2)
          {
            v87 = *v3;
            v88 = *(_QWORD *)(a2 + v87);
            v89 = v88 + 1;
            if (v88 == -1 || v89 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v90 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v88);
              *(_QWORD *)(a2 + v87) = v89;
              v69 |= (unint64_t)(v90 & 0x7F) << v85;
              if (v90 < 0)
              {
                v85 += 7;
                v27 = v86++ >= 9;
                if (v27)
                {
                  LODWORD(v69) = 0;
                  goto LABEL_113;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            LODWORD(v69) = 0;
LABEL_113:
          v99 = 112;
LABEL_114:
          *(_DWORD *)(a1 + v99) = v69;
          continue;
        case 0x1Du:
          v91 = 0;
          v92 = 0;
          v93 = 0;
          break;
        default:
          v74 = v8;
          v75 = v9;
          v76 = v10;
          v77 = v11;
          v78 = v12;
          v101 = a1;
          v79 = v5;
          result = PBReaderSkipValueWithTag();
          v19 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
          v5 = v79;
          v14 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
          a1 = v101;
          v12 = v78;
          v13 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
          v11 = v77;
          v15 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
          v10 = v76;
          v17 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
          v9 = v75;
          v16 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
          v8 = v74;
          v18 = &OBJC_IVAR___SBCaptureButtonSuppressionManager__observers;
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v94 = *v3;
        v95 = *(_QWORD *)(a2 + v94);
        v96 = v95 + 1;
        if (v95 == -1 || v96 > *(_QWORD *)(a2 + *v4))
          break;
        v97 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v95);
        *(_QWORD *)(a2 + v94) = v96;
        v93 |= (unint64_t)(v97 & 0x7F) << v91;
        if ((v97 & 0x80) == 0)
          goto LABEL_116;
        v91 += 7;
        v27 = v92++ >= 9;
        if (v27)
        {
          v93 = 0;
          goto LABEL_118;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_116:
      if (*(_BYTE *)(a2 + *v5))
        v93 = 0;
LABEL_118:
      *(_BYTE *)(a1 + 120) = v93 != 0;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

void sub_1D0AE096C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D0AE0D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AE2AFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AE4DD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_3_11(uint64_t a1)
{
  return *(_QWORD *)a1;
}

void sub_1D0AE90C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBLockScreenChargePercentageLabelForBattery(void *a1)
{
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  int v10;
  void *v11;
  void *v12;
  double v13;
  const __CFString *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;

  v1 = a1;
  v2 = objc_msgSend(v1, "percentCharge");
  if (objc_msgSend(v1, "isInternal"))
  {
    if (v2 == 100 || objc_msgSend(v1, "sb_supportsDetailedBatteryMetrics"))
    {
      v3 = (void *)MEMORY[0x1E0CB3940];
      objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("BATTERY_CHARGE_PERCENTAGE"), &stru_1E8EC7EC0, CFSTR("SpringBoard"));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = (void *)SBApp;
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", (double)v2 / 100.0);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "formattedPercentStringForNumber:", v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "stringWithFormat:", v5, v8);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "localizedStringForKey:value:table:", CFSTR("BATTERY_CHARGING"), &stru_1E8EC7EC0, CFSTR("SpringBoard"));
      v9 = (void *)objc_claimAutoreleasedReturnValue();
    }
  }
  else
  {
    v10 = objc_msgSend(v1, "isCharging");
    v11 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = v12;
    v13 = (double)v2 / 100.0;
    if (v10)
      v14 = CFSTR("BATTERY_CHARGE_PERCENTAGE");
    else
      v14 = CFSTR("BATTERY_CHARGE_REMAINING");
    objc_msgSend(v12, "localizedStringForKey:value:table:", v14, &stru_1E8EC7EC0, CFSTR("SpringBoard"));
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (void *)SBApp;
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v13);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "formattedPercentStringForNumber:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "stringWithFormat:", v15, v18);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v9;
}

id SBLockScreenSimpleChargePercentageLabelForBattery(void *a1)
{
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;

  v1 = objc_msgSend(a1, "percentCharge") / 100;
  v2 = objc_alloc_init(MEMORY[0x1E0CB37F0]);
  objc_msgSend(MEMORY[0x1E0C99DC8], "currentLocale");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setLocale:", v3);

  objc_msgSend(v2, "setNumberStyle:", 3);
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringFromNumber:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1D0AF3980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AF431C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBPIPPositionGeometryContextIsEqualToContext(uint64_t a1, uint64_t a2)
{
  char v4;

  if (BSSizeEqualToSize()
    && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 96), *(float64x2_t *)(a2 + 96)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 112), *(float64x2_t *)(a2 + 112)))), 0xFuLL))) & 1) != 0&& BSSizeEqualToSize()&& BSPointEqualToPoint()&& BSSizeEqualToSize()&& BSRectEqualToRect()&& *(_QWORD *)(a1 + 200) == *(_QWORD *)(a2 + 200)&& (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 160), *(float64x2_t *)(a2 + 160)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 176), *(float64x2_t *)(a2 + 176)))), 0xFuLL))) & 1) != 0&& *(_QWORD *)(a1 + 192) == *(_QWORD *)(a2 + 192))
  {
    v4 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 128), *(float64x2_t *)(a2 + 128)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 144), *(float64x2_t *)(a2 + 144)))), 0xFuLL)));
  }
  else
  {
    v4 = 0;
  }
  return v4 & 1;
}

id SBPIPPositionGeometryContextDescription(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[10];
  _QWORD v18[12];

  v18[10] = *MEMORY[0x1E0C80C00];
  v13 = (void *)MEMORY[0x1E0CB3940];
  v17[0] = CFSTR("Current Size");
  NSStringFromCGSize(*(CGSize *)a1);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v18[0] = v16;
  v17[1] = CFSTR("Last Steady Size");
  NSStringFromCGSize(*(CGSize *)(a1 + 16));
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v18[1] = v15;
  v17[2] = CFSTR("Stashed Size");
  NSStringFromCGSize(*(CGSize *)(a1 + 32));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v18[2] = v14;
  v17[3] = CFSTR("Edge Insets");
  NSStringFromUIEdgeInsets(*(UIEdgeInsets *)(a1 + 96));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v18[3] = v2;
  v17[4] = CFSTR("Anchor");
  NSStringFromCGPoint(*(CGPoint *)(a1 + 48));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v18[4] = v3;
  v17[5] = CFSTR("Container Bounds");
  NSStringFromCGRect(*(CGRect *)(a1 + 64));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v18[5] = v4;
  v17[6] = CFSTR("Orientation");
  BSInterfaceOrientationDescription();
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v18[6] = v5;
  v17[7] = CFSTR("Min Padding");
  NSStringFromUIEdgeInsets(*(UIEdgeInsets *)(a1 + 128));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v18[7] = v6;
  v17[8] = CFSTR("Stash Min Padding");
  NSStringFromUIEdgeInsets(*(UIEdgeInsets *)(a1 + 160));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v18[8] = v7;
  v17[9] = CFSTR("Offscreen Corners");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", *(_QWORD *)(a1 + 192));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v18[9] = v8;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v18, v17, 10);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "description");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "stringWithFormat:", CFSTR("(SBPIPPositionGeometryContext){\n%@\n}"), v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

void sub_1D0AFB698(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AFC8E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AFCBF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0AFD5F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  _Block_object_dispose(&a57, 8);
  _Unwind_Resume(a1);
}

void sub_1D0AFDAF4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_5_8(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_9_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

void OUTLINED_FUNCTION_10(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

uint64_t OUTLINED_FUNCTION_11_0(uint64_t a1, uint64_t a2)
{
  return a2;
}

void sub_1D0B00908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBDashBoardSceneHandleEqualToSceneHandle(void *a1, void *a2)
{
  id v3;
  id v4;
  int v5;
  uint64_t v6;
  void *v7;
  void *v8;

  v3 = a1;
  v4 = a2;
  if ((v3 != 0) != (v4 == 0)
    && (v5 = objc_msgSend(v3, "isSecure"), v5 == objc_msgSend(v4, "isSecure")))
  {
    objc_msgSend(v3, "sceneIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "sceneIdentifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v7, "isEqualToString:", v8);

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

void sub_1D0B03034(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBSwitcherDropRegionDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 6)
    return CFSTR("SBSwitcherDropRegionNone");
  else
    return off_1E8EB6908[a1 - 1];
}

const __CFString *SBSwitcherDropActionDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 8)
    return CFSTR("SBSwitcherDropActionNone");
  else
    return off_1E8EB6940[a1 - 1];
}

uint64_t SBSwitcherDropRegionWarrantsModelUpdate(unint64_t a1)
{
  return (a1 > 7) | (0x78u >> a1) & 1;
}

void sub_1D0B05D3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B06194(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

__CFString *NSStringFromSBSystemUIScenesCoordinatorErrorCode(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) < 4)
    return off_1E8EB6A28[a1 - 1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown error code: %ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0B0B118(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B0DED8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D0B0F4C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B0F93C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B0FAA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  os_activity_scope_leave((os_activity_scope_state_t)(v1 - 48));
  _Unwind_Resume(a1);
}

void sub_1D0B0FE2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1D0B1026C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromSBControlSystemActionHintType(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("default");
  if (a1 == 1)
  {
    v1 = CFSTR("verbPhrase");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown: %lu>"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

id NSStringFromSBControlSystemActionAttributes(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;
  _QWORD *v4;
  uint8x8_t v5;
  int v6;
  unint64_t v7;
  void *v8;
  void *v9;
  _QWORD v11[2];
  uint64_t (*v12)(uint64_t, uint64_t);
  void *v13;
  id v14;
  char v15;

  v1 = a1;
  if (a1)
  {
    objc_msgSend(MEMORY[0x1E0C99DE8], "array");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v12 = __NSStringFromSBControlSystemActionAttributes_block_invoke;
    v13 = &unk_1E8E9EB40;
    v3 = v2;
    v14 = v3;
    v4 = v11;
    v15 = 0;
    v5 = (uint8x8_t)vcnt_s8((int8x8_t)v1);
    v5.i16[0] = vaddlv_u8(v5);
    v6 = v5.i32[0];
    if (v5.i32[0])
    {
      v7 = 0;
      do
      {
        if (((1 << v7) & v1) != 0)
        {
          ((void (*)(_QWORD *))v12)(v4);
          if (v15)
            break;
          --v6;
        }
        if (v7 > 0x3E)
          break;
        ++v7;
      }
      while (v6 > 0);
    }

    v8 = (void *)MEMORY[0x1E0CB3940];
    objc_msgSend(v3, "componentsJoinedByString:", CFSTR(", "));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "stringWithFormat:", CFSTR("(%@)"), v9);
    v1 = objc_claimAutoreleasedReturnValue();

  }
  return (id)v1;
}

void sub_1D0B14D24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id __stringForStyleRequest(void *a1)
{
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  void *v7;
  void *v8;

  if (a1)
  {
    v1 = (void *)MEMORY[0x1E0CB3940];
    v2 = a1;
    v3 = objc_opt_class();
    v4 = objc_msgSend(v2, "style");
    v5 = objc_msgSend(v2, "isLegacy");
    v6 = objc_msgSend(v2, "legibilityStyle");
    objc_msgSend(v2, "foregroundColor");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "stringWithFormat:", CFSTR("<%@:%p style=%i legacy=%i legibility=%i fgColor=%@>"), v3, v2, v4, v5, v6, v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = 0;
  }
  return v8;
}

uint64_t SBUICScaledRectWithOffset()
{
  BSSizeEqualToSize();
  SBScreenScale();
  return BSRectRoundForScale();
}

const __CFString *SBStringForSBContinuousExposeToAppExposeSwitcherModifierDirection(uint64_t a1)
{
  if (a1)
    return CFSTR("ToSwitcher");
  else
    return CFSTR("ToAppExpose");
}

void sub_1D0B17818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *SBSystemGestureTypeDebugName(uint64_t a1)
{
  __CFString *v3;

  v3 = CFSTR("None");
  switch(a1)
  {
    case 0:
      return v3;
    case 1:
      v3 = CFSTR("Show Cover Sheet");
      return v3;
    case 2:
      return CFSTR("Dismiss Cover Sheet");
    case 3:
      return CFSTR("Dismiss Cover Sheet More");
    case 4:
      return CFSTR("Dismiss Secure App");
    case 5:
      return CFSTR("Dismiss Long Look");
    case 6:
      return CFSTR("Show ControlCenter");
    case 7:
      return CFSTR("Show Control Center from Status Bar");
    case 8:
      return CFSTR("Dismiss Control Center");
    case 10:
      return CFSTR("Show Control Center from Status Bar from Pointer");
    case 11:
      return CFSTR("Dismiss Cover Sheet from Pointer");
    case 12:
      return CFSTR("Dismiss Cover Sheet Scrunch");
    case 13:
      return CFSTR("Dismiss Secure App from Pointer");
    case 14:
      return CFSTR("Dismiss Secure App Scrunch");
    case 15:
      return CFSTR("Dismiss Control Center From Pointer");
    case 16:
      return CFSTR("Dismiss Control Center Scrunch");
    case 17:
      return CFSTR("Dismiss SystemUI Scene");
    case 18:
      return CFSTR("Scrunch");
    case 19:
      return CFSTR("Floating Application Scrunch");
    case 20:
      return CFSTR("Bring Occluded Item Container Forward");
    case 21:
      return CFSTR("Click Down To Bring Occluded Item Container Forward");
    case 22:
      return CFSTR("Scene Resize");
    case 23:
      return CFSTR("Legacy Scene Resize");
    case 24:
      return CFSTR("Unpin Side Application");
    case 25:
      return CFSTR("Present Right Floating Application");
    case 26:
      return CFSTR("Present Left Floating Application");
    case 29:
      return CFSTR("Move Floating Application");
    case 30:
      return CFSTR("Pin Floating Application");
    case 31:
      return CFSTR("Move Floating Application (Client Relationship)");
    case 32:
      return CFSTR("Floating Application Bottom Edge");
    case 33:
      return CFSTR("Dismiss Transient UI");
    case 34:
      return CFSTR("Dismiss Transient UI Indirect Pan");
    case 35:
      return CFSTR("Unhide Transient UI");
    case 36:
      return CFSTR("Unhide Transient UI Double Tap");
    case 38:
      return CFSTR("Dismiss Dock");
    case 42:
      return CFSTR("Present Right Floating Application From Pointer");
    case 43:
      return CFSTR("Present Left Floating Application From Pointer");
    case 44:
      return CFSTR("Dismiss Floating Application From Pointer");
    case 45:
      return CFSTR("Switcher Bottom Edge");
    case 46:
      return CFSTR("Dismiss Modal UI");
    case 47:
      return CFSTR("Dismiss Alert Item");
    case 48:
      return CFSTR("Click and Drag Home Gesture");
    case 49:
      return CFSTR("Dismiss Modal UI From Pointer");
    case 50:
      return CFSTR("Dismiss Modal UI Scrunch");
    case 51:
      return CFSTR("Dismiss Alert Item From Pointer");
    case 52:
      return CFSTR("Dismiss Alert Item Scrunch");
    case 54:
      return CFSTR("Reveal Continuous Expose Strips Pointer");
    case 55:
      return CFSTR("Reveal Continuous Expose Strip Overflow Pointer");
    case 56:
      return CFSTR("Reveal Continuous Expose Strip Overflow Drag");
    case 57:
      return CFSTR("Reveal Continuous Expose Strip Grabber Tongue");
    case 65:
      return CFSTR("CarPlay Banner Dismiss");
    case 92:
      return CFSTR("Dismiss Camera UI DashBoard");
    case 93:
      return CFSTR("Dismiss Modal UI DashBoard");
    case 94:
      return CFSTR("Dismiss Camera UI DashBoard From Pointer");
    case 95:
      return CFSTR("Dismiss Camera UI DashBoard Scrunch");
    case 96:
      return CFSTR("Home Affordance Bounce Tap");
    case 97:
      return CFSTR("Home Affordance Bounce Double Tap");
    case 98:
      return CFSTR("Home Affordance Bounce Double Tap Failure");
    case 99:
      return CFSTR("Home Affordance Reveal Tap");
    case 100:
      return CFSTR("Home Affordance Reveal Double Tap");
    case 101:
      return CFSTR("Home Affordance Reveal Edge Pan");
    case 107:
      return CFSTR("Dismiss Cover Sheet Home Screen Overlay From Pointer");
    case 108:
      return CFSTR("Dismiss Cover Sheet Home Screen Overlay Scrunch");
    case 110:
      return CFSTR("Pan Banner");
    case 111:
      return CFSTR("Dismiss Banner That Owns Home Affordance");
    case 112:
      return CFSTR("Dismiss Banner That Owns Home Affordance From Pointer");
    case 113:
      return CFSTR("Dismiss Banner That Owns Home Affordance Scrunch");
    case 114:
      return CFSTR("Dismiss Siri");
    case 115:
      return CFSTR("Dismiss Siri by Bottom Edge Pan");
    case 116:
      return CFSTR("Dismiss Siri by Pan");
    case 117:
      return CFSTR("Present Notes PIP from Left Corner by Pencil");
    case 118:
      return CFSTR("Present Notes PIP from Right Corner by Pencil");
    case 119:
      return CFSTR("Present Notes PIP from Left Corner by Finger");
    case 120:
      return CFSTR("Present Notes PIP from Right Corner by Finger");
    case 121:
      return CFSTR("Notes PIP Pan While Pinching");
    case 122:
      return CFSTR("Notes PIP Pinch");
    case 123:
      return CFSTR("Notes PIP Rotate");
    case 132:
      return CFSTR("System Aperture Resize");
    case 133:
      return CFSTR("System Aperture Interaction");
    default:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown (%lu)"), a1);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v3;
  }
}

void sub_1D0B1A854(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBSystemGestureOrientation()
{
  return objc_msgSend((id)SBApp, "activeInterfaceOrientation");
}

const __CFString *SBStringFromSystemActionCoachingHUDViewControllerState(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Possible");
  if (a1 == 1)
    v1 = CFSTR("CoachingCompact");
  if (a1 == 2)
    return CFSTR("CoachingExpanded");
  else
    return v1;
}

void sub_1D0B1FE94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B20848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBSystemActionExecutionErrorCreate(uint64_t a1, void *a2)
{
  return _SBSystemActionExecutionErrorCreateWithUnderlyingErrorAndDescription(a1, 0, a2);
}

id _SBSystemActionExecutionErrorCreateWithUnderlyingErrorAndDescription(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = a2;
  v6 = a3;
  objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v5)
    objc_msgSend(v7, "setObject:forKey:", v5, *MEMORY[0x1E0CB3388]);
  if (v6)
    objc_msgSend(v8, "setObject:forKey:", v6, *MEMORY[0x1E0CB2938]);
  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("SBSystemActionErrorDomain"), a1, v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

id SBSystemActionExecutionErrorCreateWithError(uint64_t a1, void *a2)
{
  return _SBSystemActionExecutionErrorCreateWithUnderlyingErrorAndDescription(a1, a2, 0);
}

void sub_1D0B278F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B28F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B297F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B2A30C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0B2E4F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *SBStringForPIPBehaviorOverrideReason(unint64_t a1)
{
  if (a1 > 9)
    return 0;
  else
    return off_1E8EB74F0[a1];
}

void sub_1D0B3046C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B305B8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_4_12(void *a1, const char *a2)
{
  return objc_msgSend(a1, "pid");
}

void sub_1D0B329E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B36FF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B3A624(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 144));
  _Unwind_Resume(a1);
}

void sub_1D0B3B428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0B42AD8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1D0B4521C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B45428(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void _SBTrackAlertWindowPreferencesChangedHandler()
{
  dispatch_async(MEMORY[0x1E0C80D38], &__block_literal_global_123);
}

void sub_1D0B464B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void SBSendFakeHomeButtonTapEventToApplication(void *a1, int a2)
{
  id v3;

  v3 = a1;
  SBSendFakeButtonPressEventToApplication(v3, a2, 101, 1);
  SBSendFakeButtonPressEventToApplication(v3, a2, 101, 0);

}

void SBSendFakeButtonPressEventToApplication(void *a1, int a2, uint64_t a3, int a4)
{
  id v7;
  NSObject *v8;
  void *v9;
  void *v10;
  void *v11;
  const void *KeyboardEvent;
  void *v13;
  void *v14;
  uint8_t buf[4];
  id v16;
  __int16 v17;
  void *v18;
  __int16 v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v7 = a1;
  if (a2 <= 0)
  {
    SBLogCommon();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      SB_NSStringFromUIPressType();
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138543874;
      v16 = v7;
      v17 = 2114;
      v18 = v14;
      v19 = 1024;
      v20 = a4;
      _os_log_error_impl(&dword_1D0540000, v8, OS_LOG_TYPE_ERROR, "SBSendFakeButtonPressEventToApplication: invalid pid for bundle:%{public}@ pressType:%{public}@ down:%{BOOL}u", buf, 0x1Cu);

    }
  }
  else
  {
    mach_absolute_time();
    if ((unint64_t)(a3 - 101) >= 4)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void SBSendFakeButtonPressEventToApplication(NSString *__strong _Nonnull, pid_t, UIPressType, BOOL)");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      SB_NSStringFromUIPressType();
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "handleFailureInFunction:file:lineNumber:description:", v10, CFSTR("SBHIDEventDispatchController.m"), 70, CFSTR("pressType:%@ is not supported"), v11);

    }
    KeyboardEvent = (const void *)IOHIDEventCreateKeyboardEvent();
    objc_msgSend(MEMORY[0x1E0D00CA8], "keyboardFocusEnvironment");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    BKSHIDEventSendToProcessAndFollowDeferringRules();

    CFRelease(KeyboardEvent);
  }

}

id _SBHIDDispatchPredicateFromAnyService(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;

  v1 = (objc_class *)MEMORY[0x1E0D00D98];
  v2 = a1;
  v3 = objc_alloc_init(v1);
  objc_msgSend(v3, "setSenderDescriptors:", 0);
  objc_msgSend(v3, "setDescriptors:", v2);

  return v3;
}

id _SBHIDTrackpadPredicate()
{
  void *v0;
  void *v1;
  void *v2;
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  _QWORD v9[5];

  v0 = (void *)MEMORY[0x1E0C99E60];
  objc_msgSend(MEMORY[0x1E0D00CD8], "descriptorWithEventType:", 11);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "setWithObject:", v1);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  v3 = (objc_class *)MEMORY[0x1E0D00D98];
  v4 = v2;
  v5 = objc_alloc_init(v3);
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ___SBHIDDispatchPredicateFromDeviceUsagePair_block_invoke;
  v9[3] = &__block_descriptor_40_e44_v16__0__BKSMutableHIDEventSenderDescriptor_8l;
  v9[4] = 0xC0000000DLL;
  objc_msgSend(MEMORY[0x1E0D00D30], "build:", v9);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setSenderDescriptors:", v7);

  objc_msgSend(v5, "setDescriptors:", v4);
  return v5;
}

id _SBHIDSendersForDisplays(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  _QWORD v14[5];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v16;
    v7 = MEMORY[0x1E0C809B0];
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v16 != v6)
          objc_enumerationMutation(v3);
        v9 = *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * v8);
        v14[0] = v7;
        v14[1] = 3221225472;
        v14[2] = ___SBHIDSendersForDisplays_block_invoke;
        v14[3] = &unk_1E8EB7AE8;
        v14[4] = v9;
        objc_msgSend(MEMORY[0x1E0D00D30], "build:", v14);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v2, "addObject:", v10);

        ++v8;
      }
      while (v5 != v8);
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v5);
  }

  if (objc_msgSend(v2, "count"))
    v11 = v2;
  else
    v11 = 0;
  v12 = v11;

  return v12;
}

id _SBHIDDispatchPredicateFromHardwareType(void *a1, uint64_t a2)
{
  objc_class *v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  _QWORD v9[5];

  v3 = (objc_class *)MEMORY[0x1E0D00D98];
  v4 = a1;
  v5 = objc_alloc_init(v3);
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = ___SBHIDDispatchPredicateFromHardwareType_block_invoke;
  v9[3] = &__block_descriptor_40_e44_v16__0__BKSMutableHIDEventSenderDescriptor_8l;
  v9[4] = a2;
  objc_msgSend(MEMORY[0x1E0D00D30], "build:", v9);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setSenderDescriptors:", v7);

  objc_msgSend(v5, "setDescriptors:", v4);
  return v5;
}

void sub_1D0B4BF80(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0B4C0B4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0B4C460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D0B4D7DC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0B4E118(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0B4E298(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0B4F160(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void SBGetAggregatedLockStatus(_BYTE *a1, _BYTE *a2)
{
  uint64_t v3;
  void *v5;
  void *v6;
  void *v7;
  char v8;
  char v9;
  void *v10;
  void *v11;
  _QWORD v12[5];
  _QWORD v13[5];
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;

  v3 = MEMORY[0x1E0C809B0];
  if (a1)
  {
    v14 = 0;
    v15 = &v14;
    v16 = 0x2020000000;
    v17 = 1;
    objc_msgSend((id)SBApp, "windowSceneManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "connectedWindowScenes");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v13[0] = v3;
    v13[1] = 3221225472;
    v13[2] = __SBGetAggregatedLockStatus_block_invoke;
    v13[3] = &unk_1E8EB7B60;
    v13[4] = &v14;
    objc_msgSend(v6, "enumerateObjectsUsingBlock:", v13);

    *a1 = *((_BYTE *)v15 + 24);
    _Block_object_dispose(&v14, 8);
  }
  if (a2)
  {
    v14 = 0;
    v15 = &v14;
    v16 = 0x2020000000;
    v17 = 0;
    objc_msgSend((id)SBApp, "lockOutController");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isLockedOut");

    v17 = v8;
    v9 = *((_BYTE *)v15 + 24);
    if (v9)
    {
      objc_msgSend((id)SBApp, "windowSceneManager");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "connectedWindowScenes");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12[0] = v3;
      v12[1] = 3221225472;
      v12[2] = __SBGetAggregatedLockStatus_block_invoke_2;
      v12[3] = &unk_1E8EB7B60;
      v12[4] = &v14;
      objc_msgSend(v11, "enumerateObjectsUsingBlock:", v12);

      v9 = *((_BYTE *)v15 + 24);
    }
    *a2 = v9;
    _Block_object_dispose(&v14, 8);
  }
}

void sub_1D0B4F84C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *____loadBiometricKitIfNecessary_block_invoke()
{
  void *result;

  result = dlopen("/System/Library/PrivateFrameworks/BiometricKit.framework/BiometricKit", 1);
  __loadBiometricKitIfNecessary_biometricKit = (uint64_t)result;
  if (result)
  {
    BKLogEventFn = (uint64_t (*)(_QWORD))dlsym(result, "BKLogEvent");
    result = dlsym((void *)__loadBiometricKitIfNecessary_biometricKit, "BKLogCode");
    BKLogCodeFn = (uint64_t (*)(_QWORD, _QWORD))result;
  }
  return result;
}

void sub_1D0B54524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B54E50(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

uint64_t __EventProviderCallback(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return objc_msgSend(a4, "handleEvent:token:action:", a3, a2, a1);
}

void sub_1D0B5ADD0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBMainWindowScene()
{
  return (id)_SBMainWindowScene;
}

void SBSetMainWindowScene(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  void *v4;

  v1 = a1;
  if (_SBMainWindowScene)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void SBSetMainWindowScene(UIWindowScene *__strong)");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, CFSTR("SBCommon.m"), 36, CFSTR("called when _SBMainWindowScene() is already set"));

  }
  v2 = (void *)_SBMainWindowScene;
  _SBMainWindowScene = (uint64_t)v1;

}

void SBCommonInitialize()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  NSObject *v4;
  _BOOL4 v5;
  const char *v6;
  NSObject *v7;
  uint32_t v8;
  NSObject *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  NSObject *v20;
  void *v21;
  id v22;
  _QWORD v23[2];
  uint8_t buf[4];
  uint64_t v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  SBUICommonInitialize();
  if (SBCommonInitialize_onceToken != -1)
    dispatch_once(&SBCommonInitialize_onceToken, &__block_literal_global_280);
  objc_msgSend(MEMORY[0x1E0D87D68], "currentProcess");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "lastExitContext");
  v1 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v1, "type"))
  {
    objc_msgSend(v1, "status");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v1, "type");
    SBLogCommon();
    v4 = objc_claimAutoreleasedReturnValue();
    v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
    if (v3 == 1)
    {
      if (!v5)
        goto LABEL_10;
      *(_WORD *)buf = 0;
      v6 = "SpringBoard starting up after exiting voluntarily.";
      v7 = v4;
      v8 = 2;
    }
    else
    {
      if (!v5)
        goto LABEL_10;
      *(_DWORD *)buf = 138543362;
      v25 = (uint64_t)v2;
      v6 = "SpringBoard starting up after exiting with %{public}@.";
      v7 = v4;
      v8 = 12;
    }
    _os_log_impl(&dword_1D0540000, v7, OS_LOG_TYPE_DEFAULT, v6, buf, v8);
LABEL_10:

    if (objc_msgSend(v2, "isSignal") && objc_msgSend(v2, "code") == 9)
    {
      SBLogCommon();
      v9 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
      {
        v10 = objc_msgSend(v2, "code");
        *(_DWORD *)buf = 134217984;
        v25 = v10;
        _os_log_impl(&dword_1D0540000, v9, OS_LOG_TYPE_DEFAULT, "Clearing the Board™ because SpringBoard exited with signal %llu.", buf, 0xCu);
      }

      objc_msgSend(MEMORY[0x1E0D87D70], "identifierForCurrentProcess");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D87DA0], "predicateMatchingIdentifier:");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D87DA0], "predicateNotMatchingPredicate:", v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0D87DA0], "predicateForClearTheBoard");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = (void *)MEMORY[0x1E0D87DA0];
      v23[0] = v12;
      v23[1] = v13;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v23, 2);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "predicateMatchingPredicates:", v15);
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      v17 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D87E00]), "initWithExplanation:", CFSTR("SpringBoard legacy Clear the Board™"));
      objc_msgSend(v17, "setReportType:", 0);
      objc_msgSend(v17, "setExceptionDomain:", 10);
      objc_msgSend(v17, "setExceptionCode:", 1539435077);
      objc_msgSend(v17, "setMaximumTerminationResistance:", 50);
      v18 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0D87E08]), "initWithPredicate:context:", v16, v17);
      v22 = 0;
      LOBYTE(v14) = objc_msgSend(v18, "execute:", &v22);
      v19 = v22;
      if ((v14 & 1) == 0)
      {
        SBLogCommon();
        v20 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
          SBCommonInitialize_cold_1((uint64_t)v19, v20);

      }
    }

  }
}

uint64_t SBIsBeingDebugged()
{
  return 0;
}

double SBScreenMaximumFramesPerSecond()
{
  double v0;
  NSObject *v1;
  void *v2;
  uint8_t v4[16];

  v0 = *(double *)&__screenMaximumFramesPerSecond;
  if (*(double *)&__screenMaximumFramesPerSecond < 0.0)
  {
    SBLogCommon();
    v1 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v1, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1D0540000, v1, OS_LOG_TYPE_INFO, "Reading screen maximum frames per second static before it has been initialized", v4, 2u);
    }

    objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    v0 = (double)objc_msgSend(v2, "maximumFramesPerSecond");

  }
  return v0;
}

double SBScaledPoint(double a1)
{
  double v2;
  void *v4;
  void *v5;

  v2 = *(double *)&__screenScale;
  if (*(double *)&__screenScale == -1.0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler", -1.0, *(double *)&__screenScale);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGPoint SBScaledPoint(CGPoint)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("SBCommon.m"), 138, CFSTR("Reading screen scale static before it has been initialized"));

    v2 = *(double *)&__screenScale;
  }
  return a1 * v2;
}

double SBScaledSize(double a1)
{
  double v2;
  void *v4;
  void *v5;

  v2 = *(double *)&__screenScale;
  if (*(double *)&__screenScale == -1.0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler", -1.0, *(double *)&__screenScale);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "CGSize SBScaledSize(CGSize)");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("SBCommon.m"), 143, CFSTR("Reading screen scale static before it has been initialized"));

    v2 = *(double *)&__screenScale;
  }
  return a1 * v2;
}

double SBScaledRect(double a1, double a2, double a3)
{
  double v4;

  v4 = SBScaledPoint(a1);
  SBScaledSize(a3);
  return v4;
}

__CFString *SBScaleSuffixForScale(double a1)
{
  __CFString *v2;

  if (a1 <= 1.0 || a1 > 3.0)
  {
    v2 = &stru_1E8EC7EC0;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("@%ldx"), (uint64_t)rint(a1));
    v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v2;
}

double SBScaleForImagePath(void *a1)
{
  id v1;
  int v2;
  double v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = a1;
  v2 = 2;
  while (1)
  {
    v3 = (double)v2;
    SBScaleSuffixForScale((double)v2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "rangeOfString:", v4);
    v6 = v5;

    if (v6)
      break;
    if (++v2 == 4)
    {
      v3 = 1.0;
      break;
    }
  }

  return v3;
}

void SBScreenBounds(uint64_t a1)
{
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGAffineTransform v12;
  CGRect v13;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_referenceBounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  switch(a1)
  {
    case 1:
      v11 = 0.0;
      break;
    case 3:
      v11 = 1.57079633;
      break;
    case 4:
      v11 = -1.57079633;
      break;
    default:
      v11 = 3.14159265;
      if (a1 != 2)
        v11 = 0.0;
      break;
  }
  CGAffineTransformMakeRotation(&v12, v11);
  v13.origin.x = v4;
  v13.origin.y = v6;
  v13.size.width = v8;
  v13.size.height = v10;
  CGRectApplyAffineTransform(v13, &v12);
}

void SBScreenBoundsRotatedRoundCenter(uint64_t a1)
{
  void *v2;
  double v3;
  CGFloat v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  double MidX;
  double MidY;
  CGAffineTransform v14;
  CGAffineTransform v15;
  CGAffineTransform v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "_referenceBounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  switch(a1)
  {
    case 1:
      v11 = 0.0;
      break;
    case 3:
      v11 = 1.57079633;
      break;
    case 4:
      v11 = -1.57079633;
      break;
    case 2:
      v11 = 3.14159265;
      break;
    default:
      v11 = 0.0;
      break;
  }
  v17.origin.x = v4;
  v17.origin.y = v6;
  v17.size.width = v8;
  v17.size.height = v10;
  MidX = CGRectGetMidX(v17);
  v18.origin.x = v4;
  v18.origin.y = v6;
  v18.size.width = v8;
  v18.size.height = v10;
  MidY = CGRectGetMidY(v18);
  memset(&v16, 0, sizeof(v16));
  CGAffineTransformMakeTranslation(&v16, MidX, MidY);
  v14 = v16;
  CGAffineTransformRotate(&v15, &v14, v11);
  v16 = v15;
  v14 = v15;
  CGAffineTransformTranslate(&v15, &v14, -MidX, -MidY);
  v16 = v15;
  v19.origin.x = v4;
  v19.origin.y = v6;
  v19.size.width = v8;
  v19.size.height = v10;
  CGRectApplyAffineTransform(v19, &v15);
}

double SBInvertEdgeInsets(double a1)
{
  return -a1;
}

id SBMainScreenSnapshotViewWithRect(void *a1, double a2, double a3, double a4, double a5)
{
  unsigned int (**v9)(id, _QWORD);
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  uint64_t v16;
  void *v17;
  void *v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v9 = a1;
  v10 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(MEMORY[0x1E0CEAC18], "allWindowsIncludingInternalWindows:onlyVisibleWindows:", 1, 1);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v21;
    do
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v21 != v14)
          objc_enumerationMutation(v11);
        v16 = *(_QWORD *)(*((_QWORD *)&v20 + 1) + 8 * i);
        if (v9[2](v9, v16))
          objc_msgSend(v10, "addObject:", v16);
      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v13);
  }
  objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "_snapshotExcludingWindows:withRect:", v10, a2, a3, a4, a5);
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  return v18;
}

uint64_t SBDefaultStatusBarStyle()
{
  return 1;
}

id SBHomeDirectory()
{
  if (SBHomeDirectory_onceToken != -1)
    dispatch_once(&SBHomeDirectory_onceToken, &__block_literal_global_23_7);
  return (id)SBHomeDirectory___path;
}

id SBEarlierDate(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = v4;
  if (v3 && (v6 = v3, v4))
  {
    objc_msgSend(v3, "earlierDate:", v4);
    v7 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = v6;
  }
  v8 = v7;

  return v8;
}

id SBLaterDate(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;

  v3 = a1;
  v4 = a2;
  v5 = v4;
  v6 = v4;
  if (v3 && (v6 = v3, v4))
  {
    objc_msgSend(v3, "laterDate:", v4);
    v7 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = v6;
  }
  v8 = v7;

  return v8;
}

uint64_t SBEqualStrings(void *a1, void *a2)
{
  if (a1 && a2)
    return objc_msgSend(a1, "isEqualToString:", a2);
  else
    return a1 == a2;
}

CFTypeRef SBSafeAutoreleasedRegionFromCGRect()
{
  CFTypeRef result;

  result = (CFTypeRef)CGRegionCreateWithRect();
  if (result)
    return CFAutorelease(result);
  return result;
}

uint64_t SBPIPPositionInteractionStateContextIsEqualToContext(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result;

  if (a1[2] != a2[2])
    return 0;
  result = BSPointEqualToPoint();
  if (!(_DWORD)result)
    return result;
  result = BSFloatEqualToFloat();
  if (!(_DWORD)result)
    return result;
  result = BSFloatEqualToFloat();
  if (!(_DWORD)result)
    return result;
  if (a1[1] != a2[1])
    return 0;
  result = BSPointEqualToPoint();
  if ((_DWORD)result)
  {
    result = BSPointEqualToPoint();
    if ((_DWORD)result)
    {
      if (*a1 == *a2)
        return a1[3] == a2[3];
      return 0;
    }
  }
  return result;
}

id SBPIPPositionInteractionStateContextDescription(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  _QWORD v16[9];
  _QWORD v17[11];

  v17[9] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB3940];
  v16[0] = CFSTR("Stashed");
  NSStringFromBOOL();
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v15;
  v16[1] = CFSTR("Interactive");
  NSStringFromBOOL();
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v14;
  v16[2] = CFSTR("Has Active Gesture");
  NSStringFromBOOL();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v17[2] = v3;
  v16[3] = CFSTR("Freely Positionable");
  NSStringFromBOOL();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v17[3] = v4;
  v16[4] = CFSTR("Projected Position");
  NSStringFromCGPoint(*(CGPoint *)(a1 + 8));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v17[4] = v5;
  v16[5] = CFSTR("Initial Position");
  NSStringFromCGPoint(*(CGPoint *)(a1 + 24));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v17[5] = v6;
  v16[6] = CFSTR("Current Position");
  NSStringFromCGPoint(*(CGPoint *)(a1 + 40));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17[6] = v7;
  v16[7] = CFSTR("Current Position Stash Progress");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 56));
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v17[7] = v8;
  v16[8] = CFSTR("Projected Position Stash Progress");
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 64));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v17[8] = v9;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v17, v16, 9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "description");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("(SBPIPPositionInteractionStateContext){\n%@\n}"), v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

void sub_1D0B6383C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1D0B63D04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBBaseCachesPathForApplication(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(a1, "info");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "dataContainerURL");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "path");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  SBFCachesPathForSandboxPath();
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

void sub_1D0B68940(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void SBAddSuppressionMetricsIntoEventPayload(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  id v8;
  _QWORD v9[4];
  id v10;
  id v11;

  v5 = a1;
  v6 = a3;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __SBAddSuppressionMetricsIntoEventPayload_block_invoke;
  v9[3] = &unk_1E8EB8138;
  v10 = v6;
  v11 = v5;
  v7 = v5;
  v8 = v6;
  objc_msgSend(a2, "enumerateKeysAndObjectsUsingBlock:", v9);

}

void sub_1D0B68B3C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D0B68EF0(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D0B694F4(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;

  _Unwind_Resume(a1);
}

void sub_1D0B6B5FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id SBApplicationDropSessionGetDragItem(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  void *v4;

  objc_msgSend(a1, "items");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "bs_filter:", &__block_literal_global_287);
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v2, "count") > 1)
  {
    objc_msgSend(v2, "bs_filter:", &__block_literal_global_8_4);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if ((unint64_t)objc_msgSend(v4, "count") > 1)
    {
      v3 = 0;
    }
    else
    {
      objc_msgSend(v4, "firstObject");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
    }

  }
  else
  {
    objc_msgSend(v2, "firstObject");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v3;
}

id SBApplicationDropSessionErrorCreate(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v10;
  uint64_t v11;
  objc_class *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v18;
  _QWORD v19[2];

  v19[1] = *MEMORY[0x1E0C80C00];
  v10 = (void *)MEMORY[0x1E0CB35C8];
  v11 = SBApplicationDropSessionErrorDomain;
  v18 = *MEMORY[0x1E0CB2938];
  v12 = (objc_class *)MEMORY[0x1E0CB3940];
  v13 = a2;
  v14 = (void *)objc_msgSend([v12 alloc], "initWithFormat:arguments:", v13, &a9);

  v19[0] = v14;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v19, &v18, 1);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "errorWithDomain:code:userInfo:", v11, a1, v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  return v16;
}

const __CFString *_SB_NSStringFromUIRectEdge(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7)
    return CFSTR("(unknown)");
  else
    return off_1E8EB8628[a1 - 1];
}

void sub_1D0B74B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B75210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B771BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a41, 8);
  _Unwind_Resume(a1);
}

id __mockShortcutPlist()
{
  if (__mockShortcutPlist_onceToken != -1)
    dispatch_once(&__mockShortcutPlist_onceToken, &__block_literal_global_291);
  return (id)__mockShortcutPlist_mockShortcutPlist;
}

void ____mockShortcutPlist_block_invoke()
{
  void *v0;

  v0 = (void *)__mockShortcutPlist_mockShortcutPlist;
  __mockShortcutPlist_mockShortcutPlist = (uint64_t)&unk_1E91D2648;

}

const __CFString *SBDisplayAssertionLevelDescription(unint64_t a1)
{
  void *v2;
  void *v3;

  if (a1 < 4)
    return off_1E8EB8770[a1];
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString * _Nonnull SBDisplayAssertionLevelDescription(SBDisplayAssertionLevel)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBDisplayAssertionLevel.m"), 26, CFSTR("invalid level"));

  return CFSTR("<invalid>");
}

BOOL SBDisplayAssertionLevelIsValid(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 3;
}

void sub_1D0B7EDBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B82E58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B83B2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBSACustomLayoutForBehaviorOverrider()
{
  void *v0;
  void *v1;
  uint64_t v2;

  SATargetElementFromBehaviorOverrider();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "viewProvider");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v2 = objc_msgSend(v1, "systemApertureCustomLayout");
  else
    v2 = 0;

  return v2;
}

uint64_t SBSACustomizingOptionsForBehaviorOverrider()
{
  void *v0;
  void *v1;
  uint64_t v2;

  SATargetElementFromBehaviorOverrider();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "viewProvider");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v2 = objc_msgSend(v1, "systemApertureLayoutCustomizingOptions");
  else
    v2 = 0;

  return v2;
}

BOOL SBSAIsCustomLayout(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 4;
}

BOOL SBSARectApproximatelyContainsRect(double a1, double a2, double a3, double a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8, double a9)
{
  CGRect v22;
  CGRect v23;

  v22 = CGRectInset(*(CGRect *)&a1, a9 * -2.0, a9 * -2.0);
  v23.origin.x = a5;
  v23.origin.y = a6;
  v23.size.width = a7;
  v23.size.height = a8;
  return CGRectContainsRect(v22, v23);
}

double SBSARectApplyDirectionEdgeInsets(uint64_t a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  if (a1 != 1)
    a9 = a7;
  return a2 + a9;
}

double SBSARectApplyEdgeInsets(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

double SBSAInvertEdgeInsets(double a1)
{
  return -a1;
}

const __CFString *SBSAStringFromUITraitEnvironmentLayoutDirection(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) > 2)
    return CFSTR("[invalid]");
  else
    return off_1E8EB8900[a1 + 1];
}

const __CFString *SBSAStringFromUIViewControllerAppearState(unsigned int a1)
{
  if (a1 > 3)
    return CFSTR("[invalid]");
  else
    return off_1E8EB8918[a1];
}

const __CFString *SBStringFromLiveResizeEdge(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 7)
    return CFSTR("None");
  else
    return off_1E8EB8938[a1 - 1];
}

BOOL _SBStatusBarLegibilityStyleFromStyle(_BOOL8 result)
{
  if (result != 2)
    return result == 1;
  return result;
}

__CFString *_SBStringFromStatusBarLegacyStyle(unint64_t a1)
{
  if (a1 < 4)
    return off_1E8EB89B8[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown UIStatusBarStyle #%ld"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *_SBStringFromStatusBarStyle(uint64_t a1)
{
  __CFString *v3;

  v3 = CFSTR("_UIStatusBarResolvedStyleDefault");
  switch(a1)
  {
    case 0:
      return v3;
    case 1:
      v3 = CFSTR("_UIStatusBarResolvedStyleLightContent");
      return v3;
    case 2:
      return CFSTR("_UIStatusBarResolvedStyleDarkContent");
    case 3:
      goto LABEL_8;
    case 4:
      return CFSTR("_UIStatusBarResolvedStyleInherited");
    default:
      if (a1 == 64)
        return CFSTR("_UIStatusBarResolvedStyleAutomaticWithLightBias");
      if (a1 == 128)
        return CFSTR("_UIStatusBarResolvedStyleAutomaticWithDarkBias");
LABEL_8:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown _UIStatusBarResolvedStyle #%ld"), a1);
      v3 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v3;
  }
}

uint64_t _SBStatusBarStyleForPartWithIdentifier(void *a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2;
  objc_msgSend(a1, "statusBar");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "styleForPartWithIdentifier:", v3);

  if (v5 == 2)
    v6 = 3;
  else
    v6 = v5 == 1;

  return v6;
}

uint64_t _SBStatusBarColorStyleFromStyle(uint64_t result)
{
  if (result != 64)
  {
    if (result == 4)
      return result;
    if (result != 1)
      return 2;
  }
  return 1;
}

id getHiddenAppsCategoryIdentifier(void *a1)
{
  void *v1;

  objc_msgSend(a1, "bs_firstObjectPassingTest:", &__block_literal_global_5_2);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v1)
    v1 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DAA4D0]), "initWithPredictionCategoryID:localizedDisplayNameKey:", 7, CFSTR("PROACTIVE_HIDDEN_APPS_LOCALIZED_CATEGORY_NAME"));
  return v1;
}

BOOL __getHiddenAppsCategoryIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "predictionCategoryID") == 7;
}

void OUTLINED_FUNCTION_4_14(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = a1;
}

__CFString *NSStringFromSBAccidentalActivationMitigationSessionCancellationEventType(uint64_t a1)
{
  __CFString *v1;

  if (!a1)
    return CFSTR("attention awareness");
  if (a1 == 1)
  {
    v1 = CFSTR("lift to wake");
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown: %lu>"), a1);
    v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  }
  return v1;
}

__CFString *NSStringFromSBAttentionAwarenessClientLastEventMask(uint64_t a1)
{
  __CFString *v1;
  __CFString *result;

  if (a1 > 127)
  {
    if (a1 <= 1023)
    {
      switch(a1)
      {
        case 128:
          return CFSTR("AWAttentionEventMaskFaceDetect");
        case 256:
          return CFSTR("AWAttentionEventMaskDigitalCrown");
        case 512:
          return CFSTR("AWAttentionEventMaskMesaTouch");
      }
    }
    else if (a1 > 3966)
    {
      if (a1 == 3967)
        return CFSTR("AWAttentionEventMaskAnyNonSampled");
      if (a1 == 4095)
        return CFSTR("AWAttentionEventMaskAny");
    }
    else
    {
      if (a1 == 1024)
        return CFSTR("AWAttentionEventMaskRemoteProximity");
      if (a1 == 2048)
        return CFSTR("AWAttentionEventMaskGenericGesture");
    }
  }
  else
  {
    if (a1 <= 15)
    {
      v1 = CFSTR("AWAttentionEventMaskAttentionLost");
      switch(a1)
      {
        case 1:
          return v1;
        case 2:
          result = CFSTR("AWAttentionEventMaskButton");
          break;
        case 4:
          result = CFSTR("AWAttentionEventMaskKeyboard");
          break;
        case 8:
          result = CFSTR("AWAttentionEventMaskDigitizer");
          break;
        default:
          goto LABEL_29;
      }
      return result;
    }
    switch(a1)
    {
      case 16:
        return CFSTR("AWAttentionEventMaskPointer");
      case 32:
        return CFSTR("AWAttentionEventMaskRemote");
      case 64:
        return CFSTR("AWAttentionEventMaskGameController");
    }
  }
LABEL_29:
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown: %lu>"), a1);
  v1 = (__CFString *)objc_claimAutoreleasedReturnValue();
  return v1;
}

id SBWTErrorCreate(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  objc_class *v9;
  void *v10;
  void *v12;
  void *v13;

  v5 = a1;
  v6 = a3;
  if (v5)
  {
    if (!a2)
      goto LABEL_6;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSError *SBWTErrorCreate(BSTransaction *__strong, SBWTErrorCode, NSString *__strong)");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "handleFailureInFunction:file:lineNumber:description:", v13, CFSTR("SBWorkspaceTransaction.m"), 38, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("transaction"));

    if (!a2)
      goto LABEL_6;
  }
  v7 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  v8 = v7;
  if (v6)
    objc_msgSend(v7, "setObject:forKey:", v6, *MEMORY[0x1E0CB2D68]);
  v9 = (objc_class *)objc_opt_class();
  NSStringFromClass(v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "setObject:forKey:", v10, CFSTR("SBTransaction"));

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("SBWorkspaceTransaction"), a2, v8);
  a2 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_6:
  return a2;
}

void sub_1D0B8E754(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

void sub_1D0B8ED40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,id location)
{
  id *v55;

  objc_destroyWeak(v55);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B8FE08(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B9042C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D0B93EA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0B99408(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0B995E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromSBSADynamicDiscreteAnimation(unint64_t a1)
{
  if (a1 > 4)
    return CFSTR("INVALID");
  else
    return off_1E8EB9450[a1];
}

const __CFString *SBStringFromSBSADynamicPersistentAnimation(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("INVALID");
  else
    return off_1E8EB9478[a1];
}

void sub_1D0B9EB84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBFloatingConfigurationForMovingFloatingApplication(uint64_t a1, void *a2, double a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, double a8, double a9)
{
  id v15;
  double MinX;
  double MaxX;
  double v18;
  id *v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  _BOOL4 IsLeft;
  uint64_t v27;
  _BOOL4 v28;
  _BOOL4 v29;
  int v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  int v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  uint64_t v46;
  double v49;
  CGRect v51;
  CGRect v52;

  v15 = a2;
  v51.origin.x = a4;
  v51.origin.y = a5;
  v51.size.width = a6;
  v51.size.height = a7;
  MinX = CGRectGetMinX(v51);
  v52.origin.x = a4;
  v52.origin.y = a5;
  v52.size.width = a6;
  v52.size.height = a7;
  MaxX = CGRectGetMaxX(v52);
  v18 = a8 * 0.5;
  v19 = (id *)MEMORY[0x1E0CEB258];
  v20 = v18 + MinX + 24.0;
  if (objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection") == 1)
    v21 = MaxX + -24.0 - v18;
  else
    v21 = v18 + MinX + 24.0;
  if (objc_msgSend(*v19, "userInterfaceLayoutDirection", *(_QWORD *)&a3) != 1)
    v20 = MaxX + -24.0 - v18;
  v22 = MinX + -24.0 - v18;
  v23 = v18 + MaxX + 24.0;
  if (objc_msgSend(*v19, "userInterfaceLayoutDirection") == 1)
    v24 = v18 + MaxX + 24.0;
  else
    v24 = MinX + -24.0 - v18;
  if (objc_msgSend(*v19, "userInterfaceLayoutDirection") == 1)
    v25 = v22;
  else
    v25 = v23;
  IsLeft = SBFloatingConfigurationIsLeft(a1);
  v27 = objc_msgSend(*v19, "userInterfaceLayoutDirection");
  v28 = v20 >= a9;
  if (v27 == 1)
    v28 = v20 <= a9;
  v29 = v21 <= a9;
  if (v27 == 1)
    v29 = v21 >= a9;
  if (IsLeft)
    v30 = v29;
  else
    v30 = v28;
  switch(a1)
  {
    case 0:
    case 4:
      v31 = v30 == 0;
      if (v30)
        v24 = v21;
      else
        v24 = v20;
      if (v30)
        v25 = v20;
      v30 = 1;
      if (v31)
        v32 = 2;
      else
        v32 = 1;
      goto LABEL_42;
    case 1:
      if (v30)
      {
        v24 = v21;
        v25 = v20;
      }
      else
      {
        v25 = v21;
      }
      if (v30)
        v33 = 2;
      else
        v33 = 1;
      v32 = 3;
      v30 = 0;
      break;
    case 2:
      v31 = v30 == 0;
      if (v30)
        v24 = v21;
      else
        v24 = v20;
      if (v30)
      {
        v25 = v20;
        v32 = 1;
      }
      else
      {
        v32 = 2;
      }
LABEL_42:
      if (v31)
        v33 = 4;
      else
        v33 = 2;
      break;
    case 3:
      if (v30)
      {
        v24 = v21;
        v25 = v20;
      }
      else
      {
        v25 = v21;
      }
      if (v30)
        v32 = 1;
      else
        v32 = 3;
      if (v30)
        v33 = 2;
      else
        v33 = 1;
      break;
    default:
      v32 = 0;
      v33 = 0;
      v30 = 0;
      v24 = 0.0;
      v25 = 0.0;
      break;
  }
  if (objc_msgSend(*v19, "userInterfaceLayoutDirection") == 1)
    v34 = v25;
  else
    v34 = v24;
  if (objc_msgSend(*v19, "userInterfaceLayoutDirection") == 1)
    v35 = v24;
  else
    v35 = v25;
  if (objc_msgSend(*v19, "userInterfaceLayoutDirection") == 1)
    v36 = v33;
  else
    v36 = v32;
  if (objc_msgSend(*v19, "userInterfaceLayoutDirection") == 1)
    v33 = v32;
  v37 = v30 ^ (objc_msgSend(*v19, "userInterfaceLayoutDirection") == 1);
  objc_msgSend(v15, "movePanGestureNegativeVelocityThreshold");
  v39 = v38;
  objc_msgSend(v15, "movePanGesturePositiveVelocityThreshold");
  v41 = v40;
  objc_msgSend(v15, "movePanGestureThresholdPercentage");
  if (v37)
    v43 = -v39;
  else
    v43 = v41;
  v44 = -v41;
  if (!v37)
    v44 = v39;
  if (v34 >= v35)
    SBFloatingConfigurationForMovingFloatingApplication_cold_1();
  if (v43 <= 0.0)
    SBFloatingConfigurationForMovingFloatingApplication_cold_2();
  if (v44 >= 0.0)
    SBFloatingConfigurationForMovingFloatingApplication_cold_3();
  if (v34 >= a9)
    v45 = v34;
  else
    v45 = a9;
  if (v35 <= v45)
    v45 = v35;
  v46 = v33;
  if (v43 > v49)
  {
    v46 = v36;
    if (v44 < v49)
    {
      if (v37)
        v42 = 1.0 - v42;
      if (v45 <= v34 + (v35 - v34) * v42)
        v46 = v36;
      else
        v46 = v33;
    }
  }

  return v46;
}

id SBStringFromSystemApertureContainerRenderingConfiguration(_QWORD *a1)
{
  void *v1;
  const __CFString *v2;
  uint64_t v3;
  const __CFString *v4;
  __CFString *v5;
  __CFString *v6;
  void *v7;
  void *v8;

  v1 = (void *)MEMORY[0x1E0CB3940];
  if (*a1 > 3uLL)
    v2 = CFSTR("Unspecified");
  else
    v2 = off_1E8EB95F8[*a1];
  v3 = a1[1];
  v4 = CFSTR("Visible");
  if (v3 == 1)
    v4 = CFSTR("Alpha Transition");
  if (v3)
    v5 = (__CFString *)v4;
  else
    v5 = CFSTR("Hidden");
  v6 = v5;
  NSStringFromBOOL();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringWithFormat:", CFSTR("Rendering Style: <%@>, Cloning Style: <%@>, Always Render In Snapshots: <%@>"), v2, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

const __CFString *SBStringFromSBSystemApertureActiveDisplay(uint64_t a1)
{
  if (a1)
    return CFSTR("ContinuityDisplay");
  else
    return CFSTR("EmbeddedDisplay");
}

void sub_1D0BA3D30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double SBSystemNotesThumbnailSize()
{
  return 110.0;
}

double SBSystemNotesThumbnailCornerRadius()
{
  return 8.0;
}

double SBSystemNotesDefaultWindowSize()
{
  return 496.0;
}

double SBSystemNotesMaximumWindowSize()
{
  void *v0;
  void *v1;
  int IsMoreSpace;
  int v3;
  char v4;
  int v5;
  char v6;
  BOOL v7;
  double result;
  double v9;
  double v10;
  double v11;
  _BOOL4 v12;

  SBHScreenTypeForCurrentDevice();
  IsMoreSpace = SBHScreenTypeIsMoreSpace();
  v3 = __sb__runningInSpringBoard();
  v4 = v3;
  if (v3)
  {
    if (SBFEffectiveDeviceClass() != 2 || SBFEffectiveHomeButtonType() != 2)
      goto LABEL_10;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v0 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v0, "userInterfaceIdiom") != 1 || SBFEffectiveHomeButtonType() != 2)
    {

      goto LABEL_10;
    }
  }
  v5 = __sb__runningInSpringBoard();
  v6 = v5;
  if (v5)
  {
    __sb__mainScreenReferenceBounds();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA950], "mainScreen");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v1, "_referenceBounds");
  }
  BSSizeRoundForScale();
  v12 = v11 == *(double *)(MEMORY[0x1E0DAB260] + 280) && v10 == *(double *)(MEMORY[0x1E0DAB260] + 272);
  if ((v6 & 1) == 0)

  if ((v4 & 1) != 0)
  {
    if (v12)
      goto LABEL_24;
LABEL_10:
    v7 = IsMoreSpace == 0;
    result = 620.0;
    v9 = 719.0;
    goto LABEL_11;
  }

  if (!v12)
    goto LABEL_10;
LABEL_24:
  v7 = IsMoreSpace == 0;
  result = 527.0;
  v9 = 611.0;
LABEL_11:
  if (!v7)
    return v9;
  return result;
}

double SBSystemNotesMinimumWindowSize()
{
  return 403.0;
}

double SBSystemNotesWindowCornerRadius()
{
  return 34.0;
}

void sub_1D0BA58D0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

void sub_1D0BA665C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0BA89CC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D0BA8EDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, id *location, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id a40)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a40);
  _Unwind_Resume(a1);
}

void sub_1D0BA9580(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BADE4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  _Block_object_dispose(&a9, 8);
  _Unwind_Resume(a1);
}

void sub_1D0BAE4D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

uint64_t HangTracerLibrary()
{
  void *v1;
  __int128 v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v1 = 0;
  if (!HangTracerLibraryCore_frameworkLibrary)
  {
    v2 = xmmword_1E8EB9740;
    v3 = 0;
    HangTracerLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!HangTracerLibraryCore_frameworkLibrary)
    HangTracerLibrary_cold_1(&v1);
  return HangTracerLibraryCore_frameworkLibrary;
}

void sub_1D0BAEB9C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id SBLogStartup()
{
  if (SBLogStartup_onceToken != -1)
    dispatch_once(&SBLogStartup_onceToken, &__block_literal_global_307);
  return (id)SBLogStartup___logObj;
}

id SBLogAccessory()
{
  if (SBLogAccessory_onceToken != -1)
    dispatch_once(&SBLogAccessory_onceToken, &__block_literal_global_3_4);
  return (id)SBLogAccessory___logObj;
}

id SBLogAppResize()
{
  if (SBLogAppResize_onceToken != -1)
    dispatch_once(&SBLogAppResize_onceToken, &__block_literal_global_5_3);
  return (id)SBLogAppResize___logObj;
}

id SBLogCharging()
{
  if (SBLogCharging_onceToken != -1)
    dispatch_once(&SBLogCharging_onceToken, &__block_literal_global_7_2);
  return (id)SBLogCharging___logObj;
}

id SBLogSceneResize()
{
  if (SBLogSceneResize_onceToken != -1)
    dispatch_once(&SBLogSceneResize_onceToken, &__block_literal_global_9_5);
  return (id)SBLogSceneResize___logObj;
}

id SBLogLockScreenHint()
{
  if (SBLogLockScreenHint_onceToken != -1)
    dispatch_once(&SBLogLockScreenHint_onceToken, &__block_literal_global_13_1);
  return (id)SBLogLockScreenHint___logObj;
}

id SBLogAlarm()
{
  if (SBLogAlarm_onceToken != -1)
    dispatch_once(&SBLogAlarm_onceToken, &__block_literal_global_17_4);
  return (id)SBLogAlarm___logObj;
}

id SBLogDock()
{
  if (SBLogDock_onceToken != -1)
    dispatch_once(&SBLogDock_onceToken, &__block_literal_global_19_4);
  return (id)SBLogDock___logObj;
}

id SBLogBanner()
{
  if (SBLogBanner_onceToken != -1)
    dispatch_once(&SBLogBanner_onceToken, &__block_literal_global_21_4);
  return (id)SBLogBanner___logObj;
}

id SBLogSound()
{
  if (SBLogSound_onceToken != -1)
    dispatch_once(&SBLogSound_onceToken, &__block_literal_global_23_8);
  return (id)SBLogSound___logObj;
}

id SBLogUserSession()
{
  if (SBLogUserSession_onceToken != -1)
    dispatch_once(&SBLogUserSession_onceToken, &__block_literal_global_25_4);
  return (id)SBLogUserSession___logObj;
}

id SBLogBacklight()
{
  if (SBLogBacklight_onceToken != -1)
    dispatch_once(&SBLogBacklight_onceToken, &__block_literal_global_27_3);
  return (id)SBLogBacklight___logObj;
}

id SBLogAlertItemStack()
{
  if (SBLogAlertItemStack_onceToken != -1)
    dispatch_once(&SBLogAlertItemStack_onceToken, &__block_literal_global_31_5);
  return (id)SBLogAlertItemStack___logObj;
}

id SBLogLiftToWake()
{
  if (SBLogLiftToWake_onceToken != -1)
    dispatch_once(&SBLogLiftToWake_onceToken, &__block_literal_global_33_6);
  return (id)SBLogLiftToWake___logObj;
}

id SBLogTopAffordance()
{
  if (SBLogTopAffordance_onceToken != -1)
    dispatch_once(&SBLogTopAffordance_onceToken, &__block_literal_global_41_4);
  return (id)SBLogTopAffordance___logObj;
}

id SBLogAffordancePresenceController()
{
  if (SBLogAffordancePresenceController_onceToken != -1)
    dispatch_once(&SBLogAffordancePresenceController_onceToken, &__block_literal_global_43_0);
  return (id)SBLogAffordancePresenceController___logObj;
}

id SBLogContinuity()
{
  if (SBLogContinuity_onceToken != -1)
    dispatch_once(&SBLogContinuity_onceToken, &__block_literal_global_45_0);
  return (id)SBLogContinuity___logObj;
}

id SBLogDataReset()
{
  if (SBLogDataReset_onceToken != -1)
    dispatch_once(&SBLogDataReset_onceToken, &__block_literal_global_49_2);
  return (id)SBLogDataReset___logObj;
}

id SBLogIconController()
{
  if (SBLogIconController_onceToken != -1)
    dispatch_once(&SBLogIconController_onceToken, &__block_literal_global_59);
  return (id)SBLogIconController___logObj;
}

id SBLogElasticHUD()
{
  if (SBLogElasticHUD_onceToken != -1)
    dispatch_once(&SBLogElasticHUD_onceToken, &__block_literal_global_61_1);
  return (id)SBLogElasticHUD___logObj;
}

id SBLogBrightnessHUD()
{
  if (SBLogBrightnessHUD_onceToken != -1)
    dispatch_once(&SBLogBrightnessHUD_onceToken, &__block_literal_global_63_4);
  return (id)SBLogBrightnessHUD___logObj;
}

id SBLogVolumeHUD()
{
  if (SBLogVolumeHUD_onceToken != -1)
    dispatch_once(&SBLogVolumeHUD_onceToken, &__block_literal_global_65_1);
  return (id)SBLogVolumeHUD___logObj;
}

id SBLogRingerHUD()
{
  if (SBLogRingerHUD_onceToken != -1)
    dispatch_once(&SBLogRingerHUD_onceToken, &__block_literal_global_67_0);
  return (id)SBLogRingerHUD___logObj;
}

id SBLogFlashlightHUD()
{
  if (SBLogFlashlightHUD_onceToken != -1)
    dispatch_once(&SBLogFlashlightHUD_onceToken, &__block_literal_global_69);
  return (id)SBLogFlashlightHUD___logObj;
}

id SBLogGreen()
{
  if (SBLogGreen_onceToken != -1)
    dispatch_once(&SBLogGreen_onceToken, &__block_literal_global_75_0);
  return (id)SBLogGreen___logObj;
}

id SBLogChronoVerbose()
{
  if (SBLogChronoVerbose_onceToken != -1)
    dispatch_once(&SBLogChronoVerbose_onceToken, &__block_literal_global_79_0);
  return (id)SBLogChronoVerbose___logObj;
}

id SBLogProactiveHome()
{
  if (SBLogProactiveHome_onceToken != -1)
    dispatch_once(&SBLogProactiveHome_onceToken, &__block_literal_global_81);
  return (id)SBLogProactiveHome___logObj;
}

id SBLogHUD()
{
  if (SBLogHUD_onceToken != -1)
    dispatch_once(&SBLogHUD_onceToken, &__block_literal_global_87_0);
  return (id)SBLogHUD___logObj;
}

id SBLogWebClip()
{
  if (SBLogWebClip_onceToken != -1)
    dispatch_once(&SBLogWebClip_onceToken, &__block_literal_global_89);
  return (id)SBLogWebClip___logObj;
}

id SBLogPencilSqueeze()
{
  if (SBLogPencilSqueeze_onceToken != -1)
    dispatch_once(&SBLogPencilSqueeze_onceToken, &__block_literal_global_91_0);
  return (id)SBLogPencilSqueeze___logObj;
}

id SBLogHIDKeyboardEvents()
{
  if (SBLogHIDKeyboardEvents_onceToken != -1)
    dispatch_once(&SBLogHIDKeyboardEvents_onceToken, &__block_literal_global_95_0);
  return (id)SBLogHIDKeyboardEvents___logObj;
}

id SBLogSmartCover()
{
  if (SBLogSmartCover_onceToken != -1)
    dispatch_once(&SBLogSmartCover_onceToken, &__block_literal_global_97);
  return (id)SBLogSmartCover___logObj;
}

id SBLogInteractiveScreenshot()
{
  if (SBLogInteractiveScreenshot_onceToken != -1)
    dispatch_once(&SBLogInteractiveScreenshot_onceToken, &__block_literal_global_99_0);
  return (id)SBLogInteractiveScreenshot___logObj;
}

id SBLogDodging()
{
  if (SBLogDodging_onceToken != -1)
    dispatch_once(&SBLogDodging_onceToken, &__block_literal_global_103);
  return (id)SBLogDodging___logObj;
}

id SBLogShelfLiveContent()
{
  if (SBLogShelfLiveContent_onceToken != -1)
    dispatch_once(&SBLogShelfLiveContent_onceToken, &__block_literal_global_105_2);
  return (id)SBLogShelfLiveContent___logObj;
}

id SBLogLegibility()
{
  if (SBLogLegibility_onceToken != -1)
    dispatch_once(&SBLogLegibility_onceToken, &__block_literal_global_107_0);
  return (id)SBLogLegibility___logObj;
}

id SBLogCameraActivation()
{
  if (SBLogCameraActivation_onceToken != -1)
    dispatch_once(&SBLogCameraActivation_onceToken, &__block_literal_global_115);
  return (id)SBLogCameraActivation___logObj;
}

id SBLogSiri()
{
  if (SBLogSiri_onceToken != -1)
    dispatch_once(&SBLogSiri_onceToken, &__block_literal_global_117);
  return (id)SBLogSiri___logObj;
}

id SBLogActivity()
{
  if (SBLogActivity_onceToken != -1)
    dispatch_once(&SBLogActivity_onceToken, &__block_literal_global_119_0);
  return (id)SBLogActivity___logObj;
}

id SBLogShellSceneKit()
{
  if (SBLogShellSceneKit_onceToken != -1)
    dispatch_once(&SBLogShellSceneKit_onceToken, &__block_literal_global_121_0);
  return (id)SBLogShellSceneKit___logObj;
}

id SBLogVideoOut()
{
  if (SBLogVideoOut_onceToken != -1)
    dispatch_once(&SBLogVideoOut_onceToken, &__block_literal_global_123_0);
  return (id)SBLogVideoOut___logObj;
}

id SBLogStreamBuddy()
{
  if (SBLogStreamBuddy_onceToken != -1)
    dispatch_once(&SBLogStreamBuddy_onceToken, &__block_literal_global_125);
  return (id)SBLogStreamBuddy___logObj;
}

id SBLogScreenLongevityController()
{
  if (SBLogScreenLongevityController_onceToken != -1)
    dispatch_once(&SBLogScreenLongevityController_onceToken, &__block_literal_global_127);
  return (id)SBLogScreenLongevityController___logObj;
}

id SBLogAppPlaceholder()
{
  if (SBLogAppPlaceholder_onceToken != -1)
    dispatch_once(&SBLogAppPlaceholder_onceToken, &__block_literal_global_131_0);
  return (id)SBLogAppPlaceholder___logObj;
}

id SBLogIconStyle()
{
  if (SBLogIconStyle_onceToken != -1)
    dispatch_once(&SBLogIconStyle_onceToken, &__block_literal_global_133_0);
  return (id)SBLogIconStyle___logObj;
}

id SBLogShellScene()
{
  if (SBLogShellScene_onceToken != -1)
    dispatch_once(&SBLogShellScene_onceToken, &__block_literal_global_135);
  return (id)SBLogShellScene___logObj;
}

id SBLogSystemGesture()
{
  if (SBLogSystemGesture_onceToken != -1)
    dispatch_once(&SBLogSystemGesture_onceToken, &__block_literal_global_137_0);
  return (id)SBLogSystemGesture___logObj;
}

id SBLogSystemGestureControlCenter()
{
  if (SBLogSystemGestureControlCenter_onceToken != -1)
    dispatch_once(&SBLogSystemGestureControlCenter_onceToken, &__block_literal_global_141_0);
  return (id)SBLogSystemGestureControlCenter___logObj;
}

id SBLogSystemGestureCoverSheet()
{
  if (SBLogSystemGestureCoverSheet_onceToken != -1)
    dispatch_once(&SBLogSystemGestureCoverSheet_onceToken, &__block_literal_global_143_1);
  return (id)SBLogSystemGestureCoverSheet___logObj;
}

id SBLogSystemGestureBannerDismiss()
{
  if (SBLogSystemGestureBannerDismiss_onceToken != -1)
    dispatch_once(&SBLogSystemGestureBannerDismiss_onceToken, &__block_literal_global_145);
  return (id)SBLogSystemGestureBannerDismiss___logObj;
}

id SBLogSystemGestureScrunch()
{
  if (SBLogSystemGestureScrunch_onceToken != -1)
    dispatch_once(&SBLogSystemGestureScrunch_onceToken, &__block_literal_global_147);
  return (id)SBLogSystemGestureScrunch___logObj;
}

id SBLogSystemGestureSwitchApp()
{
  if (SBLogSystemGestureSwitchApp_onceToken != -1)
    dispatch_once(&SBLogSystemGestureSwitchApp_onceToken, &__block_literal_global_151_1);
  return (id)SBLogSystemGestureSwitchApp___logObj;
}

id SBLogSystemGestureHome()
{
  if (SBLogSystemGestureHome_onceToken != -1)
    dispatch_once(&SBLogSystemGestureHome_onceToken, &__block_literal_global_153_0);
  return (id)SBLogSystemGestureHome___logObj;
}

id SBLogSystemGesturePencilSqueeze()
{
  if (SBLogSystemGesturePencilSqueeze_onceToken != -1)
    dispatch_once(&SBLogSystemGesturePencilSqueeze_onceToken, &__block_literal_global_155);
  return (id)SBLogSystemGesturePencilSqueeze___logObj;
}

id SBLogAppSwitcherDrag()
{
  if (SBLogAppSwitcherDrag_onceToken != -1)
    dispatch_once(&SBLogAppSwitcherDrag_onceToken, &__block_literal_global_157);
  return (id)SBLogAppSwitcherDrag___logObj;
}

id SBLogWidgetDiscoverability()
{
  if (SBLogWidgetDiscoverability_onceToken != -1)
    dispatch_once(&SBLogWidgetDiscoverability_onceToken, &__block_literal_global_159);
  return (id)SBLogWidgetDiscoverability___logObj;
}

id SBLogSystemActionCoaching()
{
  if (SBLogSystemActionCoaching_onceToken != -1)
    dispatch_once(&SBLogSystemActionCoaching_onceToken, &__block_literal_global_163_0);
  return (id)SBLogSystemActionCoaching___logObj;
}

id SBLogSystemActionControl()
{
  if (SBLogSystemActionControl_onceToken != -1)
    dispatch_once(&SBLogSystemActionControl_onceToken, &__block_literal_global_165_0);
  return (id)SBLogSystemActionControl___logObj;
}

id SBLogSystemActionDataSource()
{
  if (SBLogSystemActionDataSource_onceToken != -1)
    dispatch_once(&SBLogSystemActionDataSource_onceToken, &__block_literal_global_167);
  return (id)SBLogSystemActionDataSource___logObj;
}

id SBLogSystemActionExecution()
{
  if (SBLogSystemActionExecution_onceToken != -1)
    dispatch_once(&SBLogSystemActionExecution_onceToken, &__block_literal_global_169);
  return (id)SBLogSystemActionExecution___logObj;
}

id SBLogSystemActionPreviewing()
{
  if (SBLogSystemActionPreviewing_onceToken != -1)
    dispatch_once(&SBLogSystemActionPreviewing_onceToken, &__block_literal_global_171);
  return (id)SBLogSystemActionPreviewing___logObj;
}

id SBLogSystemActionSuppression()
{
  if (SBLogSystemActionSuppression_onceToken != -1)
    dispatch_once(&SBLogSystemActionSuppression_onceToken, &__block_literal_global_173);
  return (id)SBLogSystemActionSuppression___logObj;
}

id SBLogSystemApertureContainer()
{
  if (SBLogSystemApertureContainer_onceToken != -1)
    dispatch_once(&SBLogSystemApertureContainer_onceToken, &__block_literal_global_177);
  return (id)SBLogSystemApertureContainer___logObj;
}

id SBLogSystemApertureNotice()
{
  if (SBLogSystemApertureNotice_onceToken != -1)
    dispatch_once(&SBLogSystemApertureNotice_onceToken, &__block_literal_global_179);
  return (id)SBLogSystemApertureNotice___logObj;
}

id SBLogSystemAperturePills()
{
  if (SBLogSystemAperturePills_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePills_onceToken, &__block_literal_global_181);
  return (id)SBLogSystemAperturePills___logObj;
}

id SBLogSystemApertureLocalElement()
{
  if (SBLogSystemApertureLocalElement_onceToken != -1)
    dispatch_once(&SBLogSystemApertureLocalElement_onceToken, &__block_literal_global_183_0);
  return (id)SBLogSystemApertureLocalElement___logObj;
}

id SBLogSystemApertureLockElement()
{
  if (SBLogSystemApertureLockElement_onceToken != -1)
    dispatch_once(&SBLogSystemApertureLockElement_onceToken, &__block_literal_global_185);
  return (id)SBLogSystemApertureLockElement___logObj;
}

id SBLogSystemAperturePreferencesStackMutation()
{
  if (SBLogSystemAperturePreferencesStackMutation_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackMutation_onceToken, &__block_literal_global_193);
  return (id)SBLogSystemAperturePreferencesStackMutation___logObj;
}

id SBLogSystemAperturePreferencesStackMitosis()
{
  if (SBLogSystemAperturePreferencesStackMitosis_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackMitosis_onceToken, &__block_literal_global_201);
  return (id)SBLogSystemAperturePreferencesStackMitosis___logObj;
}

id SBLogSystemAperturePreferencesStackSequencedBehaviors()
{
  if (SBLogSystemAperturePreferencesStackSequencedBehaviors_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackSequencedBehaviors_onceToken, &__block_literal_global_203_0);
  return (id)SBLogSystemAperturePreferencesStackSequencedBehaviors___logObj;
}

id SBLogSystemAperturePreferencesStackGestures()
{
  if (SBLogSystemAperturePreferencesStackGestures_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackGestures_onceToken, &__block_literal_global_205);
  return (id)SBLogSystemAperturePreferencesStackGestures___logObj;
}

id SBLogSystemAperturePreferencesStackPruning()
{
  if (SBLogSystemAperturePreferencesStackPruning_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackPruning_onceToken, &__block_literal_global_207);
  return (id)SBLogSystemAperturePreferencesStackPruning___logObj;
}

id SBLogSystemAperturePreferencesStackDynamicsAnimations()
{
  if (SBLogSystemAperturePreferencesStackDynamicsAnimations_onceToken != -1)
    dispatch_once(&SBLogSystemAperturePreferencesStackDynamicsAnimations_onceToken, &__block_literal_global_209);
  return (id)SBLogSystemAperturePreferencesStackDynamicsAnimations___logObj;
}

id SBLogCoverGesture()
{
  if (SBLogCoverGesture_onceToken != -1)
    dispatch_once(&SBLogCoverGesture_onceToken, &__block_literal_global_211);
  return (id)SBLogCoverGesture___logObj;
}

id SBLogButtonsHome()
{
  if (SBLogButtonsHome_onceToken != -1)
    dispatch_once(&SBLogButtonsHome_onceToken, &__block_literal_global_213);
  return (id)SBLogButtonsHome___logObj;
}

id SBLogButtonsLock()
{
  if (SBLogButtonsLock_onceToken != -1)
    dispatch_once(&SBLogButtonsLock_onceToken, &__block_literal_global_215);
  return (id)SBLogButtonsLock___logObj;
}

id SBLogButtonsVolume()
{
  if (SBLogButtonsVolume_onceToken != -1)
    dispatch_once(&SBLogButtonsVolume_onceToken, &__block_literal_global_217);
  return (id)SBLogButtonsVolume___logObj;
}

id SBLogButtonsRinger()
{
  if (SBLogButtonsRinger_onceToken != -1)
    dispatch_once(&SBLogButtonsRinger_onceToken, &__block_literal_global_219);
  return (id)SBLogButtonsRinger___logObj;
}

id SBLogButtonsCombo()
{
  if (SBLogButtonsCombo_onceToken != -1)
    dispatch_once(&SBLogButtonsCombo_onceToken, &__block_literal_global_221_0);
  return (id)SBLogButtonsCombo___logObj;
}

id SBLogButtonsCapture()
{
  if (SBLogButtonsCapture_onceToken != -1)
    dispatch_once(&SBLogButtonsCapture_onceToken, &__block_literal_global_227);
  return (id)SBLogButtonsCapture___logObj;
}

id SBLogStationaryMotionDetector()
{
  if (SBLogStationaryMotionDetector_onceToken != -1)
    dispatch_once(&SBLogStationaryMotionDetector_onceToken, &__block_literal_global_229);
  return (id)SBLogStationaryMotionDetector___logObj;
}

id SBLogButtonHintingUI()
{
  if (SBLogButtonHintingUI_onceToken != -1)
    dispatch_once(&SBLogButtonHintingUI_onceToken, &__block_literal_global_231);
  return (id)SBLogButtonHintingUI___logObj;
}

id SBLogCameraCaptureLaunch()
{
  if (SBLogCameraCaptureLaunch_onceToken != -1)
    dispatch_once(&SBLogCameraCaptureLaunch_onceToken, &__block_literal_global_233);
  return (id)SBLogCameraCaptureLaunch___logObj;
}

id SBLogCameraCaptureSuppression()
{
  if (SBLogCameraCaptureSuppression_onceToken != -1)
    dispatch_once(&SBLogCameraCaptureSuppression_onceToken, &__block_literal_global_235);
  return (id)SBLogCameraCaptureSuppression___logObj;
}

id SBLogCameraCaptureButtonScanMode()
{
  if (SBLogCameraCaptureButtonScanMode_onceToken != -1)
    dispatch_once(&SBLogCameraCaptureButtonScanMode_onceToken, &__block_literal_global_237);
  return (id)SBLogCameraCaptureButtonScanMode___logObj;
}

id SBLogCameraCaptureOverlay()
{
  if (SBLogCameraCaptureOverlay_onceToken != -1)
    dispatch_once(&SBLogCameraCaptureOverlay_onceToken, &__block_literal_global_239);
  return (id)SBLogCameraCaptureOverlay___logObj;
}

id SBLogCameraCaptureLaunchAnimation()
{
  if (SBLogCameraCaptureLaunchAnimation_onceToken != -1)
    dispatch_once(&SBLogCameraCaptureLaunchAnimation_onceToken, &__block_literal_global_241);
  return (id)SBLogCameraCaptureLaunchAnimation___logObj;
}

id SBLogCameraCaptureRestriction()
{
  if (SBLogCameraCaptureRestriction_onceToken != -1)
    dispatch_once(&SBLogCameraCaptureRestriction_onceToken, &__block_literal_global_243);
  return (id)SBLogCameraCaptureRestriction___logObj;
}

id SBLogCameraCaptureStudyLogs()
{
  if (SBLogCameraCaptureStudyLogs_onceToken != -1)
    dispatch_once(&SBLogCameraCaptureStudyLogs_onceToken, &__block_literal_global_245_0);
  return (id)SBLogCameraCaptureStudyLogs___logObj;
}

id SBLogAmbientPresentation()
{
  if (SBLogAmbientPresentation_onceToken != -1)
    dispatch_once(&SBLogAmbientPresentation_onceToken, &__block_literal_global_247_0);
  return (id)SBLogAmbientPresentation___logObj;
}

id SBLogAmbientChargerConnection()
{
  if (SBLogAmbientChargerConnection_onceToken != -1)
    dispatch_once(&SBLogAmbientChargerConnection_onceToken, &__block_literal_global_249);
  return (id)SBLogAmbientChargerConnection___logObj;
}

id SBLogAmbientIdleTimer()
{
  if (SBLogAmbientIdleTimer_onceToken != -1)
    dispatch_once(&SBLogAmbientIdleTimer_onceToken, &__block_literal_global_251_0);
  return (id)SBLogAmbientIdleTimer___logObj;
}

id SBLogAmbientAuthentication()
{
  if (SBLogAmbientAuthentication_onceToken != -1)
    dispatch_once(&SBLogAmbientAuthentication_onceToken, &__block_literal_global_253_0);
  return (id)SBLogAmbientAuthentication___logObj;
}

id SBLogAmbientDeviceState()
{
  if (SBLogAmbientDeviceState_onceToken != -1)
    dispatch_once(&SBLogAmbientDeviceState_onceToken, &__block_literal_global_255);
  return (id)SBLogAmbientDeviceState___logObj;
}

id SBLogBiome()
{
  if (SBLogBiome_onceToken != -1)
    dispatch_once(&SBLogBiome_onceToken, &__block_literal_global_257_0);
  return (id)SBLogBiome___logObj;
}

id SBLogContinuityDisplay()
{
  if (SBLogContinuityDisplay_onceToken != -1)
    dispatch_once(&SBLogContinuityDisplay_onceToken, &__block_literal_global_259_0);
  return (id)SBLogContinuityDisplay___logObj;
}

id SBLogContinuitySession()
{
  if (SBLogContinuitySession_onceToken != -1)
    dispatch_once(&SBLogContinuitySession_onceToken, &__block_literal_global_261_0);
  return (id)SBLogContinuitySession___logObj;
}

id SBLogAppProtection()
{
  if (SBLogAppProtection_onceToken != -1)
    dispatch_once(&SBLogAppProtection_onceToken, &__block_literal_global_263_0);
  return (id)SBLogAppProtection___logObj;
}

id SBLogCaptureApplication()
{
  if (SBLogCaptureApplication_onceToken != -1)
    dispatch_once(&SBLogCaptureApplication_onceToken, &__block_literal_global_265);
  return (id)SBLogCaptureApplication___logObj;
}

id SBLogCaptureViewfinderMonitor()
{
  if (SBLogCaptureViewfinderMonitor_onceToken != -1)
    dispatch_once(&SBLogCaptureViewfinderMonitor_onceToken, &__block_literal_global_267_0);
  return (id)SBLogCaptureViewfinderMonitor___logObj;
}

double SBMGGetCGRectAnswer(uint64_t a1, double a2)
{
  void *v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  NSObject *v15;
  const char *v16;
  int v18;
  uint64_t v19;
  uint64_t v20;
  CGRect v21;
  CGRect v22;

  v20 = *MEMORY[0x1E0C80C00];
  v4 = (void *)MGCopyAnswer();
  v5 = v4;
  if (!v4)
  {
    SBLogButtonHintingUI();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v18 = 138543362;
      v19 = a1;
      v16 = "No data found for MG query %{public}@";
      goto LABEL_8;
    }
LABEL_9:

    v8 = a2;
    goto LABEL_10;
  }
  objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithBytes:objCType:", objc_msgSend(objc_retainAutorelease(v4), "bytes"), "{CGRect={CGPoint=dd}{CGSize=dd}}");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "CGRectValue");
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v14 = v13;

  v21.origin.x = v8;
  v21.origin.y = v10;
  v21.size.width = v12;
  v21.size.height = v14;
  if (CGRectEqualToRect(v21, *MEMORY[0x1E0C9D648])
    || (v22.origin.x = v8, v22.origin.y = v10, v22.size.width = v12, v22.size.height = v14, CGRectIsNull(v22)))
  {
    SBLogButtonHintingUI();
    v15 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      v18 = 138543362;
      v19 = a1;
      v16 = "Invalid data found for MG query %{public}@";
LABEL_8:
      _os_log_impl(&dword_1D0540000, v15, OS_LOG_TYPE_DEFAULT, v16, (uint8_t *)&v18, 0xCu);
      goto LABEL_9;
    }
    goto LABEL_9;
  }
LABEL_10:

  return v8;
}

uint64_t SBMainScreenDPI()
{
  void *v0;
  uint64_t v1;

  v0 = (void *)MGCopyAnswer();
  v1 = objc_msgSend(v0, "unsignedIntValue");

  return v1;
}

double SBMainScreenPointsPerMillimeter()
{
  if (SBMainScreenPointsPerMillimeter_onceToken != -1)
    dispatch_once(&SBMainScreenPointsPerMillimeter_onceToken, &__block_literal_global_308);
  return *(double *)&SBMainScreenPointsPerMillimeter_pointsPerMM;
}

uint64_t SBBaselineScreenDPIForIdiom()
{
  double v0;
  void *v1;
  uint64_t v2;

  if (!__sb__runningInSpringBoard())
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = objc_msgSend(v1, "userInterfaceIdiom");

    if (v2 == 1)
      goto LABEL_3;
LABEL_5:
    v0 = 163.0;
    return (SBScreenScale() * v0);
  }
  if (SBFEffectiveDeviceClass() != 2)
    goto LABEL_5;
LABEL_3:
  v0 = 132.0;
  return (SBScreenScale() * v0);
}

uint64_t SBBaselineScreenDPIForCurrentIdiom()
{
  void *v0;
  uint64_t v1;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "userInterfaceIdiom");
  v1 = SBBaselineScreenDPIForIdiom();

  return v1;
}

void _SBIndirectGestureLog(void *a1, void *a2)
{
  id v3;
  id v4;
  NSObject *v5;

  v3 = a1;
  v4 = a2;
  SBLogSystemGesture();
  v5 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEBUG))
    _SBIndirectGestureLog_cold_1(v3, (uint64_t)v4, v5);

}

void sub_1D0BB5E74(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D0BB6454(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

double _SBOrientedPointerLocation(void *a1, void *a2)
{
  id v3;
  void *v4;
  double v5;
  double v6;

  v3 = a1;
  objc_msgSend(a2, "locationInView:", 0);
  objc_msgSend(v3, "view");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "size");
  _UIWindowConvertPointFromOrientationToOrientation();
  v6 = v5;

  return v6;
}

uint64_t SBDeviceHasRoundedScreenCorners()
{
  void *v0;
  uint64_t v1;

  +[SBPlatformController sharedInstance](SBPlatformController, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isRoundCornerPad");

  return v1;
}

void sub_1D0BB83B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBWidgetExtensionDebugError(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;

  v3 = a2;
  v4 = (void *)objc_opt_new();
  objc_msgSend(v4, "setObject:forKey:", v3, *MEMORY[0x1E0CB2D50]);

  objc_msgSend(MEMORY[0x1E0CB35C8], "errorWithDomain:code:userInfo:", CFSTR("SBAvocadoDebuggingControllerErrorDomain"), a1, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1D0BBB640(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,char a59)
{
  _Block_object_dispose(&a59, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromSBCaptureButtonCoachingHUDViewControllerState(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Possible");
  if (a1 == 1)
    v1 = CFSTR("CoachingCompact");
  if (a1 == 2)
    return CFSTR("CoachingExpanded");
  else
    return v1;
}

void sub_1D0BC435C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BC45D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BCA7FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id NSStringFromSBSystemActionCompoundPreviewState()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  v0 = (void *)MEMORY[0x1E0CB3940];
  NSStringFromBOOL();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromBOOL();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromBOOL();
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromBOOL();
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringWithFormat:", CFSTR("(isPreviewing=%@, isExpanding=%@, isProminent=%@, isUrgent=%@)"), v1, v2, v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

__CFString *NSStringFromSBSystemActionCompoundPreviewEvent(uint64_t a1)
{
  if (!a1)
    return CFSTR("Pop");
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown: %lu>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0BD44F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t BridgeLocationForSBSLocation(unint64_t a1)
{
  if (a1 > 0xC)
    return 1;
  else
    return qword_1D0E8B4E0[a1];
}

void sub_1D0BD5E50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

id _SBFindFirstView(void *a1)
{
  id v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v1 = a1;
  v2 = (void *)MEMORY[0x1E0CEABB0];
  objc_msgSend(MEMORY[0x1E0CEAC18], "allWindowsIncludingInternalWindows:onlyVisibleWindows:", 1, 1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = ___SBFindFirstView_block_invoke;
  v7[3] = &unk_1E8EAC3A8;
  v8 = v1;
  v4 = v1;
  objc_msgSend(v2, "sb_firstDescendantOfViews:passingTest:", v3, v7);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1D0BD9868(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

__CFString *NSStringFromSBThermalLevel(uint64_t a1)
{
  if ((unint64_t)(a1 + 2) < 6)
    return off_1E8EBB048[a1 + 2];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%li"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0BDFCAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BE352C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BE3A1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0BE51B0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BE57E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D0BE5ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BE6218(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BE642C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0BE66EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BE7818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BE7C40(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D0BE7CE8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0BEA668(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0BEA890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0BEAAA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0BEAD6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBDisplayPowerLogWindowingModeDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("Invalid");
  else
    return off_1E8EBB578[a1 - 1];
}

const __CFString *SBDisplayPowerLogZoomLevelDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("Invalid");
  else
    return off_1E8EBB5A0[a1 - 1];
}

unint64_t SBDisplayPowerLogZoomLevelFromScale(unint64_t a1)
{
  if (a1 < 3)
    return a1 + 1;
  else
    return 0;
}

const __CFString *SBStringFromGesturePhase(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Possible");
  else
    return off_1E8EBB6A0[a1 - 1];
}

void sub_1D0BF79A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id a16)
{
  objc_destroyWeak(location);
  objc_destroyWeak(&a16);
  _Unwind_Resume(a1);
}

void sub_1D0BF8310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BF88A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BF958C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  uint64_t v7;
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 96), 8);
  _Unwind_Resume(a1);
}

Class __getLNAppConnectionListenerClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  if (!AppIntentsLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_1E8EBB928;
    v5 = 0;
    AppIntentsLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!AppIntentsLibraryCore_frameworkLibrary)
    __getLNAppConnectionListenerClass_block_invoke_cold_1(&v3);
  result = objc_getClass("LNAppConnectionListener");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getLNAppConnectionListenerClass_block_invoke_cold_2();
  getLNAppConnectionListenerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id SBSAStringFromDictionaryDescription(void *a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  const __CFString *v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB37A0]), "initWithString:", CFSTR("<"));
  v20 = objc_msgSend(v1, "count");
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  v3 = v1;
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v4)
  {
    v5 = v4;
    v6 = 0;
    v19 = *(_QWORD *)v22;
    do
    {
      v7 = 0;
      v18 = v6;
      v8 = v6 + 1;
      do
      {
        if (*(_QWORD *)v22 != v19)
          objc_enumerationMutation(v3);
        v9 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * v7);
        objc_msgSend(v3, "objectForKey:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          objc_msgSend(v10, "dictionaryDescription");
          v11 = (id)objc_claimAutoreleasedReturnValue();
          SBSAStringFromDictionaryDescription();
          v12 = (id)objc_claimAutoreleasedReturnValue();
        }
        else
        {
          v13 = objc_opt_class();
          v11 = v10;
          if (v13)
          {
            if ((objc_opt_isKindOfClass() & 1) != 0)
              v14 = v11;
            else
              v14 = 0;
          }
          else
          {
            v14 = 0;
          }
          v12 = v14;
        }
        v15 = v12;

        if (v15)
          objc_msgSend(v2, "appendFormat:", CFSTR("%@: %@"), v9, v15);
        if (v8 + v7 >= v20)
          v16 = CFSTR(">");
        else
          v16 = CFSTR("; ");
        objc_msgSend(v2, "appendString:", v16);

        ++v7;
      }
      while (v5 != v7);
      v6 = v18 + v5;
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v5);
  }

  return v2;
}

void _SBSALogDictionaryDescribable(void *a1, void *a2, uint64_t a3)
{
  id v5;
  void (**v6)(_QWORD, _QWORD);
  void *v7;
  uint64_t v8;
  uint64_t i;
  uint64_t v10;
  id v11;
  uint64_t j;
  void (**v13)(_QWORD, _QWORD);
  void *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id obj;
  _QWORD v25[6];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v5 = a2;
  v6 = (void (**)(_QWORD, _QWORD))v5;
  if (a1 && v5)
  {
    objc_msgSend(a1, "dictionaryDescription");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v22 = objc_msgSend(v7, "count");
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v29 = 0u;
    obj = v7;
    v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    if (!v23)
      goto LABEL_27;
    v8 = 0;
    v21 = *(_QWORD *)v27;
    while (1)
    {
      for (i = 0; i != v23; ++i)
      {
        if (*(_QWORD *)v27 != v21)
          objc_enumerationMutation(obj);
        v10 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * i);
        v11 = objc_alloc_init(MEMORY[0x1E0CB37A0]);
        for (j = a3; j; --j)
          objc_msgSend(v11, "appendString:", CFSTR("    "));
        if (!v8)
          objc_msgSend(v11, "appendString:", CFSTR("<"));
        ++v8;
        objc_msgSend(v11, "appendFormat:", CFSTR("%@:"), v10);
        v25[0] = MEMORY[0x1E0C809B0];
        v25[1] = 3221225472;
        v25[2] = ___SBSALogDictionaryDescribable_block_invoke;
        v25[3] = &__block_descriptor_48_e25_v16__0__NSMutableString_8l;
        v25[4] = v8;
        v25[5] = v22;
        v13 = (void (**)(_QWORD, _QWORD))MEMORY[0x1D17E5550](v25);
        objc_msgSend(obj, "objectForKey:", v10);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        v15 = objc_opt_class();
        v16 = v14;
        if (v15)
        {
          if ((objc_opt_isKindOfClass() & 1) != 0)
            v17 = v16;
          else
            v17 = 0;
        }
        else
        {
          v17 = 0;
        }
        v18 = v17;

        if (v18)
        {
          objc_msgSend(v11, "appendFormat:", CFSTR(" %@"), v18);
        }
        else
        {
          if ((objc_opt_respondsToSelector() & 1) == 0)
            goto LABEL_25;
          ((void (**)(_QWORD, id))v6)[2](v6, v11);
          _SBSALogDictionaryDescribable(v16, v6, a3 + 1);
          v19 = objc_alloc_init(MEMORY[0x1E0CB37A0]);

          if (a3)
          {
            v20 = a3;
            do
            {
              objc_msgSend(v19, "appendString:", CFSTR("    "));
              --v20;
            }
            while (v20);
          }
          v11 = v19;
        }
        ((void (**)(_QWORD, id))v13)[2](v13, v11);
        ((void (**)(_QWORD, id))v6)[2](v6, v11);
LABEL_25:

      }
      v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
      if (!v23)
      {
LABEL_27:

        break;
      }
    }
  }

}

void sub_1D0BFC2D8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D0BFC7F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0BFC9C8(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0BFCA88(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0BFD55C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0BFD638(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0BFE664(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,id location)
{
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0BFFC58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C01384(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C0164C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_1D0C04070(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C04AAC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C05008(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C0559C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C05ECC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

double _offsetOfDropletView(void *a1, void *a2, uint64_t a3)
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  double v17;
  double MinX;
  void *v19;
  double v20;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v5 = a2;
  objc_msgSend(a1, "layer");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "presentationLayer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v5, "layer");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "bounds");
  objc_msgSend(v8, "convertRect:fromLayer:", v7);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  if (a3 == 8)
  {
    v23.origin.x = v10;
    v23.origin.y = v12;
    v23.size.width = v14;
    v23.size.height = v16;
    MinX = CGRectGetMinX(v23);
    objc_msgSend(v5, "layer");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "bounds");
    v20 = MinX - CGRectGetMaxX(v24);

    if (v20 <= 0.0)
      v17 = v20;
    else
      v17 = 0.0;
  }
  else
  {
    v17 = 0.0;
    if (a3 == 2)
    {
      v22.origin.x = v10;
      v22.origin.y = v12;
      v22.size.width = v14;
      v22.size.height = v16;
      v17 = fmax(CGRectGetMaxX(v22), 0.0);
    }
  }

  return v17;
}

__CFString *NSStringFromSBKeyboardFocusCoalitionAffinity(unint64_t a1)
{
  if (a1 < 3)
    return off_1E8EBBD88[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<invalid:%X>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0C0A6C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C0AC38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_3_15(id *a1)
{
  return objc_msgSend(*a1, "count");
}

void sub_1D0C0F080(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C0F194(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C0F2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C0F3F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C0F504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C0F620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *_NSStringFromHapticType(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("FlyIn");
  if (a1 == 2)
    v1 = CFSTR("ReduceMotion");
  if (a1 == 1)
    return CFSTR("EmptySwitcher");
  else
    return v1;
}

const __CFString *_NSStringFromPhase(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Warmup");
  if (a1 == 1)
    v1 = CFSTR("Actuate");
  if (a1 == 2)
    return CFSTR("Cooldown");
  else
    return v1;
}

uint64_t SBDismissSpotlight()
{
  uint64_t IsVisible;
  void *v1;
  int IsActive;
  void *v3;
  void *v4;
  void *v5;

  IsVisible = SBSpotlightIsVisible();
  +[SBLockScreenManager sharedInstance](SBLockScreenManager, "sharedInstance");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_msgSend(v1, "isUILocked") & 1) != 0)
  {

LABEL_5:
    +[SBLockScreenManager sharedInstance](SBLockScreenManager, "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "coverSheetViewController");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0D1BB48], "actionWithType:", 1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "handleAction:fromSender:", v4, v3);
    goto LABEL_6;
  }
  IsActive = SBWorkspaceSpringBoardIsActive();

  if (!IsActive)
    goto LABEL_5;
  +[SBIconController sharedInstance](SBIconController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "iconManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "presentHomeScreenIconsAnimated:", 1);
LABEL_6:

  return IsVisible;
}

uint64_t SBTodayViewIsVisible()
{
  void *v0;
  char v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void *v5;

  +[SBLockScreenManager sharedInstance](SBLockScreenManager, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isUILocked");

  if ((v1 & 1) != 0)
  {
    +[SBLockScreenManager sharedInstance](SBLockScreenManager, "sharedInstance");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "coverSheetViewController");
    v3 = (void *)objc_claimAutoreleasedReturnValue();

    v4 = objc_msgSend(v3, "isShowingTodayView");
  }
  else
  {
    +[SBIconController sharedInstance](SBIconController, "sharedInstance");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "iconManager");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v5, "isOverlayTodayViewVisible");

  }
  return v4;
}

uint64_t SBLibraryIsVisible()
{
  void *v0;
  char v1;
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char v11;
  void *v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  +[SBLockScreenManager sharedInstance](SBLockScreenManager, "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "isUILocked");

  if ((v1 & 1) != 0)
    return 0;
  +[SBIconController sharedInstance](SBIconController, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v3, "isModalAppLibrarySupported"))
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    objc_msgSend((id)SBApp, "windowSceneManager", 0);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "connectedWindowScenes");
    v5 = (void *)objc_claimAutoreleasedReturnValue();

    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v15;
      while (2)
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v15 != v8)
            objc_enumerationMutation(v5);
          objc_msgSend(*(id *)(*((_QWORD *)&v14 + 1) + 8 * v9), "modalLibraryController");
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          v11 = objc_msgSend(v10, "isPresentingLibrary");

          if ((v11 & 1) != 0)
          {

            v2 = 1;
            goto LABEL_15;
          }
          ++v9;
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
        if (v7)
          continue;
        break;
      }
    }

    v2 = 0;
  }
  else
  {
    objc_msgSend(v3, "iconManager");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = objc_msgSend(v12, "isMainDisplayLibraryViewVisible");

  }
LABEL_15:

  return v2;
}

uint64_t SBSpotlightLastPresentationSource()
{
  return 0;
}

void sub_1D0C0FE48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBLayoutRoleMaskAppLayout()
{
  return 1014;
}

uint64_t SBLayoutRoleForIdentifier(void *a1)
{
  id v1;
  uint64_t v2;
  unint64_t v3;
  void *v4;

  v1 = a1;
  if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBLayoutRolePrimary")) & 1) != 0)
  {
    v2 = 1;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBLayoutRoleSide")) & 1) != 0)
  {
    v2 = 2;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBLayoutRoleFloating")) & 1) != 0)
  {
    v2 = 3;
  }
  else if ((objc_msgSend(v1, "isEqualToString:", CFSTR("SBLayoutRoleCenter")) & 1) != 0)
  {
    v2 = 4;
  }
  else if (objc_msgSend(v1, "containsString:", CFSTR("SBLayoutRoleAdditionalSide-"))
         && (v3 = objc_msgSend(v1, "length"), v3 > objc_msgSend(CFSTR("SBLayoutRoleAdditionalSide-"), "length")))
  {
    objc_msgSend(v1, "substringFromIndex:", objc_msgSend(CFSTR("SBLayoutRoleAdditionalSide-"), "length"));
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = objc_msgSend(v4, "integerValue") + 5;

  }
  else
  {
    v2 = 0;
  }

  return v2;
}

const __CFString *SBStringForSwitcherHomeScreenBackdropBlurType(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Live");
  if (a1 == 2)
    v1 = CFSTR("Static");
  if (a1 == 1)
    return CFSTR("None");
  else
    return v1;
}

const __CFString *SBStringForSwitcherWallpaperStyle(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Black");
  else
    return off_1E8EBC008[a1 - 1];
}

const __CFString *SBStringForSwitcherSnapshotPreferredInterfaceOrientation(uint64_t a1)
{
  if (a1 == 1)
    return CFSTR("Active");
  else
    return CFSTR("Switcher");
}

const __CFString *SBStringFromSwitcherScrollAxis(uint64_t a1)
{
  if (a1)
    return CFSTR("Horizontal");
  else
    return CFSTR("Vertical");
}

const __CFString *SBStringFromSwitcherMutationReason(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("Unspecified");
  else
    return off_1E8EBC020[a1 - 1];
}

const __CFString *SBStringFromSwitcherPlusButtonStyle(uint64_t a1)
{
  if (a1)
    return CFSTR("muted");
  else
    return CFSTR("vibrant");
}

const __CFString *SBStringForBlurTargetPreference(uint64_t a1)
{
  if (a1)
    return CFSTR("itemContainer");
  else
    return CFSTR("liveContentOverlay");
}

void OUTLINED_FUNCTION_3_16(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;

  _os_log_debug_impl(a1, v4, OS_LOG_TYPE_DEBUG, a4, v5, 0xCu);
}

void sub_1D0C13CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBWorkspaceEntitiesAreAnalagous(void *a1, void *a2)
{
  if (a1 == a2)
    return 1;
  else
    return objc_msgSend(a1, "isAnalogousToEntity:", a2);
}

BOOL SBPocketStateIsInPocketOrObscuredScreen(uint64_t a1)
{
  return (a1 & 0xFFFFFFFFFFFFFFFDLL) == 1;
}

const __CFString *NSStringFromSBPocketStateType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("OutOfPocket");
  else
    return off_1E8EBC1A0[a1 - 1];
}

void sub_1D0C17520(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C184CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C19E40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL SBIsHomeGestureEnabledByDefault()
{
  void *v1;
  uint64_t v2;

  if (SBFEffectiveHomeButtonType() == 2)
    return 1;
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v1, "userInterfaceIdiom");

  return (v2 & 0xFFFFFFFFFFFFFFFBLL) == 1;
}

void sub_1D0C1C814(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C1CA1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C1CBCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C1CD5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C1CF84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C1DAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C1E228(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id SBTemplateItemViewFromProvider(void *a1, void *a2)
{
  id v3;
  void (**v4)(_QWORD);
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v16[4];
  id v17;

  v3 = a1;
  v4 = a2;
  if (v3)
  {
    objc_msgSend(v3, "templateItemImageProvider");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v5;
    if (v5)
    {
      objc_msgSend(v5, "image");
      v7 = objc_claimAutoreleasedReturnValue();
      if (v7)
      {
        v8 = (void *)v7;
        v9 = (id)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA658]), "initWithImage:", v7);

        if (v9)
          goto LABEL_12;
      }
    }
    objc_msgSend(v3, "templateItemButtonConfiguration");
    v10 = objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      v11 = (void *)v10;
      if (v4)
      {
        v4[2](v4);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v12 = 0;
      }
      objc_msgSend(MEMORY[0x1E0CEA3A0], "buttonWithConfiguration:primaryAction:", v11, v12);
      v9 = (id)objc_claimAutoreleasedReturnValue();

      if (v9)
      {
LABEL_12:
        objc_msgSend(v3, "accessibilityIdentifier");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "setAccessibilityIdentifier:", v13);

        v14 = (void *)MEMORY[0x1E0CEABB0];
        v16[0] = MEMORY[0x1E0C809B0];
        v16[1] = 3221225472;
        v16[2] = __SBTemplateItemViewFromProvider_block_invoke;
        v16[3] = &unk_1E8E9DED8;
        v9 = v9;
        v17 = v9;
        objc_msgSend(v14, "performWithoutAnimation:", v16);
        if (objc_msgSend(v3, "isHidden"))
          objc_msgSend(v9, "setHidden:", 1);

      }
    }
    else
    {
      v9 = 0;
    }

    goto LABEL_16;
  }
  v9 = 0;
LABEL_16:

  return v9;
}

void sub_1D0C1E874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C22F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  _Block_object_dispose(&a33, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C23CEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1D0C24D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C27570(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0C29F90(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D0C2A20C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C2A42C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C2A9A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C2ACE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C2AE40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C2B25C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C2B4F0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C2EA50(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D0C2EC78(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D0C30224(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, id *location)
{
  id *v11;
  uint64_t v12;

  objc_destroyWeak(v11);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 160));
  _Unwind_Resume(a1);
}

__CFString *NSStringFromSBDisabledDigitizerMode(unint64_t a1)
{
  if (a1 < 5)
    return off_1E8EBC788[a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("<unknown:%X>"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0C3A0E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C3A618(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C3C1C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,id location)
{
  id *v33;

  objc_destroyWeak(v33);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C40E60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, id a18)
{
  id *v18;
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a18);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromSBPIPContentType(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("-invalid-");
  else
    return off_1E8EBC8F0[a1];
}

void sub_1D0C467B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C496FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBSAStringFromBounceStyle(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("up");
  if (a1 == 1)
    v1 = CFSTR("left");
  if (a1 == 2)
    return CFSTR("right");
  else
    return v1;
}

void sub_1D0C4C9AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C4CC60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location)
{
  void *v24;

  objc_sync_exit(v24);
  _Unwind_Resume(a1);
}

void sub_1D0C4D5D4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C4DB40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C4DDB4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C4E2FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,id a47)
{
  void *v47;

  objc_sync_exit(v47);
  objc_destroyWeak(location);
  objc_destroyWeak(&a47);
  _Unwind_Resume(a1);
}

void sub_1D0C4E6E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,id a45)
{
  void *v45;

  objc_sync_exit(v45);
  objc_destroyWeak(location);
  objc_destroyWeak(&a45);
  _Unwind_Resume(a1);
}

void sub_1D0C4F6AC(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C50584(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C50A40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C50E40(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C5126C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C513F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C51580(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C51A70(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C51D74(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C520C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id location)
{
  void *v30;
  id *v31;
  id *v32;
  uint64_t v33;

  objc_destroyWeak(v32);
  objc_destroyWeak(v31);
  objc_destroyWeak(&location);
  objc_sync_exit(v30);
  _Block_object_dispose((const void *)(v33 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1D0C5242C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C524F0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C53AA4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C54A14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C57C54(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C57E94(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C58258(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C5853C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C587C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C5B410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C5B61C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C5BAE8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 96));
  objc_destroyWeak((id *)(v3 - 88));
  _Unwind_Resume(a1);
}

void sub_1D0C5EEAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  uint64_t v15;
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Block_object_dispose((const void *)(v15 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1D0C5FB30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBStringForChainableModifierState(uint64_t a1)
{
  if (a1)
    return CFSTR("Complete");
  else
    return CFSTR("Active");
}

void sub_1D0C60E00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C6163C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C654D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;
  uint64_t v18;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  os_activity_scope_leave((os_activity_scope_state_t)(v18 - 64));
  _Unwind_Resume(a1);
}

void sub_1D0C6560C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_1D0C68EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C693F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location)
{
  id *v10;
  id *v11;
  id *v12;
  id *v13;
  uint64_t v14;

  objc_destroyWeak(v13);
  objc_destroyWeak(v12);
  objc_destroyWeak(v11);
  objc_destroyWeak(v10);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v14 - 168));
  _Unwind_Resume(a1);
}

void sub_1D0C69890(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D0C69C20(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromPGPlaybackStateContentType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 5)
    return CFSTR("Unknown");
  else
    return off_1E8EBD3B8[a1 - 1];
}

void sub_1D0C6C3EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  objc_destroyWeak((id *)(v1 - 128));
  _Unwind_Resume(a1);
}

void sub_1D0C6C5BC(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0C6C78C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 104));
  _Unwind_Resume(a1);
}

void sub_1D0C6D444(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C71584(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C7173C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void SBStaticInitializer()
{
  __SecTask *v0;
  __SecTask *v1;

  v0 = SecTaskCreateFromSelf(0);
  if (v0)
  {
    v1 = v0;
    if ((SecTaskGetCodeSignStatus(v0) & 0xC000001) != 0x4000001 && (os_variant_has_internal_content() & 1) == 0)
      SBStaticInitializer_cold_1();
    CFRelease(v1);
  }
}

void sub_1D0C722E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1D0C73F38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C75DF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,id location)
{
  id *v29;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C768C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location,char a29)
{
  id *v29;
  uint64_t v30;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v30 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1D0C76C64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,id location,char a29)
{
  id *v29;
  uint64_t v30;

  objc_destroyWeak(v29);
  objc_destroyWeak(&location);
  _Block_object_dispose(&a29, 8);
  _Block_object_dispose((const void *)(v30 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1D0C76F18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C78DA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C796E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBStringForShelfDisplayMode(uint64_t a1)
{
  if (a1)
    return CFSTR("scenes");
  else
    return CFSTR("spaces");
}

void sub_1D0C7C888(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id *location, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id a25)
{
  id *v25;

  objc_destroyWeak(v25);
  objc_destroyWeak(location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

void sub_1D0C7DAF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C86548(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0C873D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C89238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  void *v0;

  return objc_msgSend(v0, "state");
}

__CFString *NSStringFromSBAlwaysOnTelemetryBacklightState(unint64_t a1)
{
  if (a1 > 6)
    return 0;
  else
    return off_1E8EBDA48[a1];
}

id NSNumberDoubleMin(void *a1, void *a2)
{
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "doubleValue");
  objc_msgSend(v4, "doubleValue");
  if (v3)
  {
    if (v4)
    {
      objc_msgSend(v3, "doubleValue");
      v6 = v5;
      objc_msgSend(v4, "doubleValue");
      if (v6 >= v7)
      {

        return v4;
      }
      v3 = v3;

    }
    v4 = v3;
  }
  return v4;
}

id NSNumberDoubleMax(void *a1, void *a2)
{
  id v3;
  id v4;
  double v5;
  double v6;
  double v7;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "doubleValue");
  objc_msgSend(v4, "doubleValue");
  if (v3)
  {
    if (v4)
    {
      objc_msgSend(v3, "doubleValue");
      v6 = v5;
      objc_msgSend(v4, "doubleValue");
      if (v6 <= v7)
      {

        return v4;
      }
      v3 = v3;

    }
    v4 = v3;
  }
  return v4;
}

void sub_1D0C91950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;

  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 240), 8);
  _Block_object_dispose((const void *)(v39 - 192), 8);
  _Unwind_Resume(a1);
}

void sub_1D0C94D58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C988B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL SBDodgingAxisMaskContainsAxis(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = 1;
  if (a2)
    v2 = 2;
  return (v2 & a1) != 0;
}

uint64_t SBDodgingAxisMaskForAxis(uint64_t a1)
{
  if (a1)
    return 2;
  else
    return 1;
}

void sub_1D0C9B1A4(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_1D0C9B55C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0C9C4FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *location)
{
  id *v13;
  id *v14;
  id *v15;
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v15);
  objc_destroyWeak(v13);
  objc_destroyWeak(v16);
  objc_destroyWeak(v14);
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v17 - 128));
  _Unwind_Resume(a1);
}

void sub_1D0C9ED74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CA136C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CA2274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CA8B8C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 160));
  _Unwind_Resume(a1);
}

void sub_1D0CA958C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0CAC8E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  void *v16;
  id *v17;

  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  objc_sync_exit(v16);
  _Unwind_Resume(a1);
}

void sub_1D0CAC9C4(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0CB2740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const __CFString *SBFloatingDockWindowLevelPriorityDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("app switcher");
  else
    return off_1E8EBE108[a1 - 1];
}

void sub_1D0CB6860(_Unwind_Exception *a1)
{
  uint64_t v1;

  objc_destroyWeak((id *)(v1 - 120));
  _Unwind_Resume(a1);
}

void sub_1D0CB88E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CB8A50(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CB98C0(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0CB994C(_Unwind_Exception *a1)
{
  void *v1;

  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_1D0CB9B34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CB9CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CBB3F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CBE390(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,id a30)
{
  id *v30;
  id *v31;

  objc_destroyWeak(v31);
  objc_destroyWeak(v30);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a30);
  _Unwind_Resume(a1);
}

void sub_1D0CBE528(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0CBED60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CBF09C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CC0C6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;
  id *v16;
  uint64_t v17;

  objc_destroyWeak(v16);
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  objc_destroyWeak((id *)(v17 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0CC2D74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CC2F9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CC3940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CC3EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CC4A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CC72E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CC8378(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id _SBCallDescriptionBlock(void *a1)
{
  void (**v1)(void);
  void *v2;

  v1 = a1;
  v1[2]();
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

id _SBCallDescriptionBlockForEachVisibleAppLayout(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;

  v3 = a1;
  v4 = a2;
  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v3, "visibleAppLayouts");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appLayouts");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = ___SBCallDescriptionBlockForEachVisibleAppLayout_block_invoke;
  v13[3] = &unk_1E8EBEC18;
  v15 = v5;
  v16 = v4;
  v14 = v6;
  v8 = v5;
  v9 = v4;
  v10 = v6;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", v13);
  objc_msgSend(v8, "sb_switcherModifierDebugTimelineDescription");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

id _SBCallDescriptionBlockForEachVisibleAppLayoutByIndex(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  _QWORD v13[4];
  id v14;
  id v15;
  id v16;

  v3 = a1;
  v4 = a2;
  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v3, "visibleAppLayouts");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appLayouts");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = ___SBCallDescriptionBlockForEachVisibleAppLayoutByIndex_block_invoke;
  v13[3] = &unk_1E8EBEC18;
  v15 = v5;
  v16 = v4;
  v14 = v6;
  v8 = v5;
  v9 = v4;
  v10 = v6;
  objc_msgSend(v7, "enumerateObjectsUsingBlock:", v13);
  objc_msgSend(v8, "sb_switcherModifierDebugTimelineDescription");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  return v11;
}

id _SBCallDescriptionBlockForEachLayoutRoleInEachVisibleAppLayout(void *a1, const char *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD v16[4];
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  const char *v22;

  v5 = a1;
  v6 = a3;
  v7 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v5, "visibleAppLayouts");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "appLayouts");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "methodSignatureForSelector:", a2);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (v10)
  {
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = ___SBCallDescriptionBlockForEachLayoutRoleInEachVisibleAppLayout_block_invoke;
    v16[3] = &unk_1E8EBEC40;
    v17 = v8;
    v18 = v10;
    v19 = v5;
    v22 = a2;
    v21 = v6;
    v11 = v7;
    v20 = v11;
    objc_msgSend(v9, "enumerateObjectsUsingBlock:", v16);
    objc_msgSend(v11, "sb_switcherModifierDebugTimelineDescription");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    v13 = v17;
  }
  else
  {
    v14 = (void *)MEMORY[0x1E0CB3940];
    NSStringFromSelector(a2);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "stringWithFormat:", CFSTR("No context method for %@"), v13);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v12;
}

id _SBCallDescriptionBlockForEachLayoutRoleInEachVisibleAppLayoutAtIndex(void *a1, const char *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  _QWORD v15[4];
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  const char *v21;

  v5 = a1;
  v6 = a3;
  NSStringFromSelector(a2);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v5, "visibleAppLayouts");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "appLayouts");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "methodSignatureForSelector:", a2);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = ___SBCallDescriptionBlockForEachLayoutRoleInEachVisibleAppLayoutAtIndex_block_invoke;
    v15[3] = &unk_1E8EBEC40;
    v16 = v9;
    v17 = v11;
    v18 = v5;
    v21 = a2;
    v20 = v6;
    v12 = v8;
    v19 = v12;
    objc_msgSend(v10, "enumerateObjectsUsingBlock:", v15);
    objc_msgSend(v12, "sb_switcherModifierDebugTimelineDescription");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("No context method for %@"), v7);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v13;
}

id _SBCallDescriptionBlockForEachShelf(void *a1, void *a2)
{
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  _QWORD v11[4];
  id v12;
  id v13;

  v3 = a1;
  v4 = a2;
  v5 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
  objc_msgSend(v3, "visibleShelves");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = ___SBCallDescriptionBlockForEachShelf_block_invoke;
  v11[3] = &unk_1E8EBECB8;
  v12 = v5;
  v13 = v4;
  v7 = v5;
  v8 = v4;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v11);
  objc_msgSend(v7, "sb_switcherModifierDebugTimelineDescription");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

void sub_1D0CD21C4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 72));
  _Unwind_Resume(a1);
}

id _SBSRemoteAlertHandleContextFromRemoteTransientOverlaySession(void *a1)
{
  objc_class *v1;
  id v2;
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v1 = (objc_class *)MEMORY[0x1E0DAAF98];
  v2 = a1;
  v3 = [v1 alloc];
  objc_msgSend(v2, "sessionID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)objc_msgSend(v3, "initWithHandleID:", v4);

  v6 = objc_msgSend(v2, "isActivated");
  objc_msgSend(v5, "setActive:", v6);
  return v5;
}

void sub_1D0CD3EB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CD4028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CD578C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49)
{
  _Block_object_dispose(&a49, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CD68D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CD7818(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  _Block_object_dispose(&a32, 8);
  _Block_object_dispose(&a38, 8);
  _Block_object_dispose(&a44, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDAA28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDAB3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDAC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDAD14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDAE3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDAF6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDB07C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDB198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CDB2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t SBAnalyticsLayoutLocationFromString(uint64_t a1)
{
  unint64_t v2;
  __CFString *v3;

  v2 = 0;
  while (1)
  {
    v3 = CFSTR("switcher");
    if (v2 <= 9)
      v3 = off_1E8EBEFB0[v2];
    if ((-[__CFString isEqual:](v3, "isEqual:", a1) & 1) != 0)
      break;
    if (++v2 == 10)
      return 0x7FFFFFFFFFFFFFFFLL;
  }
  return v2;
}

id PETEventPropertyForLayoutLocations(void *a1)
{
  id v1;
  id v2;
  unint64_t i;
  const __CFString *v4;
  void *v5;
  void *v6;

  v1 = a1;
  v2 = objc_alloc_init(MEMORY[0x1E0C99E08]);
  for (i = 0; i != 10; ++i)
  {
    v4 = CFSTR("switcher");
    if (i <= 9)
      v4 = off_1E8EBEFB0[i];
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", i);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setObject:forKeyedSubscript:", v4, v5);

  }
  objc_msgSend(MEMORY[0x1E0D80F20], "propertyWithName:enumMapping:", v1, v2);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

id PETEventPropertyForIconLocation(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[11];

  v17[10] = *MEMORY[0x1E0C80C00];
  v1 = (void *)MEMORY[0x1E0D80F20];
  v2 = (void *)*MEMORY[0x1E0DAA9E0];
  v3 = a1;
  PETStringValueForIconLocation(v2);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = v16;
  PETStringValueForIconLocation((void *)*MEMORY[0x1E0DAA990]);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v17[1] = v15;
  PETStringValueForIconLocation(CFSTR("SBIconLocationFloatingDockSuggestions"));
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v17[2] = v14;
  PETStringValueForIconLocation((void *)*MEMORY[0x1E0DAA9A0]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v17[3] = v4;
  PETStringValueForIconLocation((void *)*MEMORY[0x1E0DAA9E8]);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v17[4] = v5;
  PETStringValueForIconLocation(CFSTR("SBIconLocationAppSwitcher"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v17[5] = v6;
  PETStringValueForIconLocation(CFSTR("SBIconLocationCommandTab"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v17[6] = v7;
  PETStringValueForIconLocation((void *)*MEMORY[0x1E0DAA950]);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v17[7] = v8;
  PETStringValueForIconLocation((void *)*MEMORY[0x1E0DAA968]);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v17[8] = v9;
  PETStringValueForIconLocation((void *)*MEMORY[0x1E0DAA988]);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v17[9] = v10;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v17, 10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "propertyWithName:possibleValues:", v3, v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  return v12;
}

id PETEventPropertyForBoolValues(void *a1)
{
  void *v1;
  void *v2;
  id v3;
  void *v4;
  void *v5;
  _QWORD v7[2];
  _QWORD v8[3];

  v8[2] = *MEMORY[0x1E0C80C00];
  v1 = (void *)MEMORY[0x1E0D80F20];
  v7[0] = MEMORY[0x1E0C9AAB0];
  v7[1] = MEMORY[0x1E0C9AAA0];
  v8[0] = CFSTR("Yes");
  v8[1] = CFSTR("No");
  v2 = (void *)MEMORY[0x1E0C99D80];
  v3 = a1;
  objc_msgSend(v2, "dictionaryWithObjects:forKeys:count:", v8, v7, 2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "propertyWithName:enumMapping:", v3, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

uint64_t SBReachabilityGestureShouldActivate(uint64_t a1)
{
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  int v9;
  int v10;
  uint64_t result;
  double v12;
  _BOOL4 v13;
  void *v14;
  int v15;
  _BOOL4 v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double v22;

  v2 = *(double *)a1;
  v1 = *(double *)(a1 + 8);
  v3 = *(double *)(a1 + 32);
  v19 = *(_QWORD *)(a1 + 24);
  v21 = *(_QWORD *)(a1 + 16);
  v4 = *(double *)(a1 + 40);
  v5 = *(double *)(a1 + 48);
  v6 = *(double *)(a1 + 56);
  v7 = *(double *)(a1 + 64);
  v8 = *(double *)(a1 + 72);
  v9 = *(unsigned __int8 *)(a1 + 80);
  v10 = *(unsigned __int8 *)(a1 + 81);
  if (SBReachabilityGestureShouldActivate_onceToken != -1)
    dispatch_once(&SBReachabilityGestureShouldActivate_onceToken, &__block_literal_global_372);
  result = objc_msgSend((id)SBReachabilityGestureShouldActivate_reachabilityExclusionTrapezoid, "shouldBeginGestureAtStartingPoint:velocity:bounds:", v2, v1, v3, v4, v5, v6, v7, v8, v19, v21);
  if ((_DWORD)result)
  {
    v12 = fabs(v22);
    v13 = fabs(v20) >= v12 || v12 < 10.0;
    +[SBAssistantController sharedInstance](SBAssistantController, "sharedInstance");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "isSystemAssistantExperienceHomeAffordanceDoubleTapGestureEnabled");

    if (v15)
    {
      v16 = v9 != 0;
      if (v10)
        v17 = v9 != 0;
      else
        v17 = 1;
      if (v10)
        v16 = 0;
      v18 = (v16 | (v4 > 0.0) & ~v17) & v13;
    }
    else
    {
      if (v10)
        v18 = 0;
      else
        v18 = v13;
      if (v4 > 900.0)
        v18 = 1;
    }
    if (v1 <= v8 + -24.0)
      v18 = 0;
    if (v1 + v4 * 0.15 > v8 + -2.0)
      return v18;
    else
      return 0;
  }
  return result;
}

id NSStringFromSBReachabilityActivationContext(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v2 = (void *)MEMORY[0x1E0CB3940];
  NSStringFromCGPoint(*(CGPoint *)a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromCGPoint(*(CGPoint *)(a1 + 16));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromCGPoint(*(CGPoint *)(a1 + 32));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromCGRect(*(CGRect *)(a1 + 48));
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromBOOL();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "stringWithFormat:", CFSTR("location: %@\ttranslation: %@\tvelocity: %@\tviewBounds:%@\teverTranslatedUpwards: %@"), v3, v4, v5, v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  return v8;
}

void sub_1D0CDCD3C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CDE2E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CDFC98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CE04AC(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 112));
  _Unwind_Resume(a1);
}

void sub_1D0CE073C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CE0FE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CE151C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CE28AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CE324C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void SBEnumerateAndCullDeviceApplicationSceneStatusBarStateObservers(void *a1, void *a2)
{
  unint64_t v2;
  id v4;
  void (**v5)(id, void *, unint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  unsigned int v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v4 = a1;
  v5 = a2;
  if (v5)
  {
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v14;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v14 != v8)
            objc_enumerationMutation(v4);
          v10 = *(void **)(*((_QWORD *)&v13 + 1) + 8 * i);
          objc_msgSend(v10, "observer");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v10, "flags");
          if (v11)
          {
            v2 = v2 & 0xFFFFFFFF00000000 | v12;
            v5[2](v5, v11, v2);
          }

        }
        v7 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
      }
      while (v7);
    }
  }

}

void _SBAppendDescrptionForStatusBarDescribingToBuilder(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  CGRect v19;

  v3 = a1;
  v4 = a2;
  _SBStringFromStatusBarStyle(objc_msgSend(v3, "statusBarStyle"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "appendString:withName:", v5, CFSTR("statusBarStyle"));

  objc_msgSend(v4, "activeMultilinePrefix");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = ___SBAppendDescrptionForStatusBarDescribingToBuilder_block_invoke;
  v16[3] = &unk_1E8E9E820;
  v17 = v3;
  v18 = v4;
  v7 = v4;
  v15 = v3;
  objc_msgSend(v7, "appendBodySectionWithName:multilinePrefix:block:", CFSTR("statusBarPartStyles"), v6, v16);

  objc_msgSend(v15, "statusBarAlpha");
  v8 = (id)objc_msgSend(v7, "appendFloat:withName:decimalPrecision:", CFSTR("statusBarAlpha"), 2);
  v9 = (id)objc_msgSend(v7, "appendBool:withName:", objc_msgSend(v15, "statusBarHidden"), CFSTR("statusBarHidden"));
  objc_msgSend(v15, "statusBarOrientation");
  BSInterfaceOrientationDescription();
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "appendString:withName:", v10, CFSTR("statusBarOrientation"));

  objc_msgSend(v15, "statusBarAvoidanceFrame");
  NSStringFromCGRect(v19);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "appendString:withName:", v11, CFSTR("statusBarAvoidanceFrame"));

  objc_msgSend(v15, "statusBarSceneIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "appendString:withName:", v12, CFSTR("statusBarSceneIdentifier"));

  objc_msgSend(v15, "_allObservers");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (id)objc_msgSend(v7, "appendObject:withName:", v13, CFSTR("observers"));

}

void sub_1D0CE8910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, id *a13, id *a14, id *a15, id *location, id *a17)
{
  uint64_t v17;

  objc_destroyWeak(location);
  objc_destroyWeak(a14);
  objc_destroyWeak(a13);
  objc_destroyWeak(a15);
  objc_destroyWeak(a17);
  objc_destroyWeak((id *)(v17 - 184));
  _Unwind_Resume(a1);
}

__CFString *SBStatusBarDataNetworkDebugName(uint64_t a1)
{
  if (a1 < 0xF)
    return off_1E8EBFC68[(int)a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%i)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

__CFString *SBStatusBarBatteryStateDebugName(uint64_t a1)
{
  if (a1 < 3)
    return off_1E8EBFCE0[(int)a1];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%i)"), a1);
  return (__CFString *)(id)objc_claimAutoreleasedReturnValue();
}

void sub_1D0CED174(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1D0CED71C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBStringFromHoverSwitcherModifierEventPhase(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("Hovering");
  if (a1 == 1)
    v1 = CFSTR("EndHovering");
  if (a1 == 2)
    return CFSTR("CancelHovering");
  else
    return v1;
}

const __CFString *SBFloatingDockBehaviorLevelDescription(unint64_t a1)
{
  if (a1 > 0xC)
    return CFSTR("invalid");
  else
    return off_1E8EBFE30[a1];
}

void sub_1D0CF8E14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CFA2A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CFB0DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CFCEEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CFD180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CFD294(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CFE8E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0CFED44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  _Block_object_dispose(&a35, 8);
  _Unwind_Resume(a1);
}

void sub_1D0CFFE08(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)&STACK[0x200]);
  objc_destroyWeak((id *)&STACK[0x208]);
  _Block_object_dispose(&STACK[0x340], 8);
  _Unwind_Resume(a1);
}

void sub_1D0D008C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t SBPointerOrientation()
{
  return objc_msgSend((id)SBApp, "interfaceOrientationForCurrentDeviceOrientation:", 0);
}

uint64_t SBPointerHIDSubEventFromEvent()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _BYTE v11[128];
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  IOHIDEventGetChildren();
  v7 = 0u;
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v0 = (id)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
  if (v1)
  {
    v2 = v1;
    v3 = *(_QWORD *)v8;
LABEL_3:
    v4 = 0;
    while (1)
    {
      if (*(_QWORD *)v8 != v3)
        objc_enumerationMutation(v0);
      v5 = *(_QWORD *)(*((_QWORD *)&v7 + 1) + 8 * v4);
      if (IOHIDEventGetType() == 17)
        break;
      if (v2 == ++v4)
      {
        v2 = objc_msgSend(v0, "countByEnumeratingWithState:objects:count:", &v7, v11, 16);
        if (v2)
          goto LABEL_3;
        goto LABEL_9;
      }
    }
  }
  else
  {
LABEL_9:
    v5 = 0;
  }

  return v5;
}

void *SBPointerEventRepresentsTrackpadTouchUp(void *result)
{
  id v1;
  int v2;
  uint64_t v3;
  unsigned int v4;

  if (result)
  {
    v1 = result;
    v2 = objc_msgSend(v1, "source");
    v3 = objc_msgSend(v1, "fingerDownCount");
    v4 = objc_msgSend(v1, "options");

    if (v2 == 12 && v3 == 0)
      return (void *)((v4 >> 1) & 1);
    else
      return 0;
  }
  return result;
}

void *SBPointerEventIsTrackpadEvent(void *result)
{
  if (result)
    return (void *)(objc_msgSend(result, "source") == 12);
  return result;
}

BOOL SBPointerEventHasMovementOnAxis(void *a1, uint64_t a2)
{
  id v3;
  double v4;
  double v5;
  _BOOL4 v6;
  double v7;
  double v8;
  _BOOL4 v9;
  _BOOL4 v10;

  v3 = a1;
  objc_msgSend(v3, "acceleratedRelativePositionX");
  v5 = v4;
  v6 = v4 != 0.0;
  objc_msgSend(v3, "acceleratedRelativePositionY");
  v8 = v7;

  v9 = v8 != 0.0;
  v10 = v5 != 0.0;
  if (v8 != 0.0)
    v10 = 1;
  if (a2 != 2)
    v9 = 1;
  if (a2 == 3)
    v9 = v10;
  if (a2 == 1)
    return v6;
  else
    return v9;
}

double SBPointerEventAcceleratedRelativePositionForOrientation(void *a1, uint64_t a2, void *a3)
{
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  _BOOL4 v27;
  double v28;
  double v29;

  v5 = a3;
  v6 = (void *)SBApp;
  v7 = a1;
  v8 = objc_msgSend(v6, "interfaceOrientationForCurrentDeviceOrientation:", 0);
  objc_msgSend(v7, "acceleratedRelativePositionX");
  v10 = v9;
  objc_msgSend(v7, "acceleratedRelativePositionY");
  v12 = v11;

  if (v8 != a2 && a2 != 0 && v8 != 0)
  {
    objc_msgSend(v5, "_referenceBounds");
    _UIWindowConvertPointFromOrientationToOrientation();
    v16 = v15;
    v18 = v17;
    objc_msgSend(v5, "_referenceBounds");
    _UIWindowConvertPointFromOrientationToOrientation();
    v20 = v19;
    v22 = v21;
    objc_msgSend(v5, "_referenceBounds");
    _UIWindowConvertPointFromOrientationToOrientation();
    v24 = v20 - v16;
    v26 = v25 - v18;
    v27 = v20 - v16 == 0.0;
    if (v26 == 0.0)
      v27 = 1;
    v28 = v23 - v16;
    if (v27)
      v24 = v22 - v18;
    else
      v28 = v26;
    v29 = v12 * v28;
    if (v27)
      v10 = v29;
    else
      v10 = v10 * v24;
  }

  return v10;
}

void sub_1D0D05B44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D076C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D07850(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D0799C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D07C6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D07E30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D097C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D098EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 80), 8);
  _Unwind_Resume(a1);
}

const __CFString *SBDisplayCloneMirroringModeDescription(uint64_t a1)
{
  const __CFString *v1;

  v1 = CFSTR("<.Invalid>");
  if (a1 == 1)
    v1 = CFSTR(".Default");
  if (a1 == 2)
    return CFSTR(".Disabled");
  else
    return v1;
}

BOOL SBDisplayItemSizingPolicyIsValid(unint64_t a1)
{
  return a1 < 3;
}

const __CFString *NSStringFromDisplayItemSizingPolicyMask(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4)
    return CFSTR("(other)");
  else
    return off_1E8EC0278[a1 - 1];
}

uint64_t SBDisplayItemSizingPolicyAllowingSmallestSize(unint64_t a1)
{
  uint64_t v1;

  v1 = 1;
  if ((a1 & 2) == 0)
    v1 = (a1 >> 1) & 2;
  if ((a1 & 1) != 0)
    return 0;
  else
    return v1;
}

uint64_t SBDisplayItemSizingPolicyAllowingLargestSize(unint64_t a1)
{
  if ((a1 & 4) != 0)
    return 2;
  else
    return (a1 >> 1) & 1;
}

uint64_t SBPreferredDisplayItemSizingPolicy(uint64_t a1, unint64_t a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = 2;
  if (a3 == a7 && a4 == a8)
    v9 = 2;
  else
    v9 = 0;
  if (a1)
    v9 = a1;
  if (a1 != 2 || a3 == a7 && a4 == a8)
    v10 = v9;
  else
    v10 = 0;
  if ((a2 & 4) == 0)
    v8 = (a2 >> 1) & 1;
  if (((a2 & 4) >> 2) | (v10 != 2))
    return v10;
  else
    return v8;
}

void sub_1D0D0D614(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  _Unwind_Resume(exception_object);
}

const __CFString *NSStringFromSBBlurViewCoordinatorState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 2)
    return CFSTR("idle");
  else
    return off_1E8EC02E0[a1 - 1];
}

BOOL SBBacklightStateIsActive(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

id _SBLazyMutableSetAddString(void *a1, void *a2)
{
  id v3;
  id v4;

  v3 = a1;
  v4 = a2;
  if (!v3)
  {
    objc_msgSend(MEMORY[0x1E0C99E20], "set");
    v3 = (id)objc_claimAutoreleasedReturnValue();
  }
  objc_msgSend(v3, "addObject:", v4);

  return v3;
}

const __CFString *SBBacklightStateDescription(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3)
    return CFSTR("unknown");
  else
    return off_1E8EC0348[a1 - 1];
}

uint64_t BLSBacklightChangeSourceEventForSBSBacklightChangeSource(uint64_t a1)
{
  if ((unint64_t)(a1 - 2) > 0x2C)
    return 0;
  else
    return qword_1D0E8BCA0[a1 - 2];
}

void sub_1D0D14580(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_list va;

  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D14E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t SBSystemActionInstanceIdentityEqualToIdentity(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  uint64_t v10;

  v3 = a1;
  v4 = a2;
  if (v3 == v4)
  {
    v10 = 1;
  }
  else
  {
    objc_msgSend(v3, "hostIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "hostIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = BSEqualStrings();

    if (v7)
    {
      objc_msgSend(v3, "configurationIdentifier");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "configurationIdentifier");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = BSEqualStrings();

    }
    else
    {
      v10 = 0;
    }
  }

  return v10;
}

void sub_1D0D17998(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,id location)
{
  id *v32;

  objc_destroyWeak(v32);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D19764(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D1B7AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D1BAB4(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;
  id *v5;

  v5 = v3;
  objc_destroyWeak(v5);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void sub_1D0D1C0D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1D0D1CF3C(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 56));
  _Unwind_Resume(a1);
}

uint64_t _SBWindowFrameDescription(double a1, double a2, double a3, double a4)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%g %g; %g %g)"),
           *(_QWORD *)&a1,
           *(_QWORD *)&a2,
           *(_QWORD *)&a3,
           *(_QWORD *)&a4);
}

__CFString *NSStringFromSBSystemUISceneControllerErrorCode(uint64_t a1)
{
  uint64_t v1;
  __CFString *v2;

  v1 = a1 - 1;
  v2 = CFSTR("None");
  switch(v1)
  {
    case 0:
      return v2;
    case 1:
      return CFSTR("The controller policy doesn't allow to handle this request");
    case 2:
      return CFSTR("Tried to re-activate an unknown scene session");
    case 3:
      return CFSTR("Unknown persistent identifiers");
    case 4:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Reached maximum allowed number of scenes per display (%d)"), 5);
      goto LABEL_7;
    default:
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("Unknown error code: %ld"), CFSTR("None"));
LABEL_7:
      v2 = (__CFString *)objc_claimAutoreleasedReturnValue();
      return v2;
  }
}

void sub_1D0D1FFF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D2743C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0D2B65C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D2FAD8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1D0D304E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D309AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location,id a22)
{
  id *v22;
  id *v23;

  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a22);
  _Unwind_Resume(a1);
}

void sub_1D0D30AB0(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0D30BC8(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0D31A34(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  id *v3;
  uint64_t v4;

  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 104));
  _Unwind_Resume(a1);
}

void sub_1D0D35804(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D35898(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void _SBVoiceControlDispatchMain(void *a1)
{
  void *v1;
  void (**block)(void);

  v1 = (void *)MEMORY[0x1E0CB3978];
  block = a1;
  if (objc_msgSend(v1, "isMainThread"))
    block[2]();
  else
    dispatch_async(MEMORY[0x1E0C80D38], block);

}

void sub_1D0D35E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D35F28(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0D36910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D36B10(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D0D3709C(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1D0D37140(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0D39CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, id *a9, id *a10, id *a11, id *a12, id *a13, id *location, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id a66;
  id *v66;
  id *v67;

  objc_destroyWeak(v67);
  objc_destroyWeak(v66);
  objc_destroyWeak(location);
  objc_destroyWeak(a13);
  objc_destroyWeak(a12);
  objc_destroyWeak(a11);
  objc_destroyWeak(a10);
  objc_destroyWeak(a9);
  objc_destroyWeak(&a66);
  _Unwind_Resume(a1);
}

void sub_1D0D3A33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  _Block_object_dispose(&a29, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D3A7E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,os_activity_scope_state_s state)
{
  os_activity_scope_leave(&state);
  _Unwind_Resume(a1);
}

void sub_1D0D3BA6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_1D0D3BDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, os_activity_scope_state_s a9)
{
  os_activity_scope_leave(&a9);
  _Unwind_Resume(a1);
}

void sub_1D0D3C7B8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 128));
  _Unwind_Resume(a1);
}

void sub_1D0D3D10C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D3F368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D47074(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D47AE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D4B170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D4B8D8(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0D4C884(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void SBPPTPerformAfterCommitWithDelay(void *a1, double a2)
{
  id v3;
  int IsZero;
  void *v5;
  _QWORD v6[4];
  id v7;
  double v8;

  v3 = a1;
  IsZero = BSFloatIsZero();
  v5 = (void *)MEMORY[0x1E0CD28B0];
  if (IsZero)
  {
    objc_msgSend(MEMORY[0x1E0CD28B0], "bs_performAfterCommit:", v3);
  }
  else
  {
    v6[0] = MEMORY[0x1E0C809B0];
    v6[1] = 3221225472;
    v6[2] = __SBPPTPerformAfterCommitWithDelay_block_invoke;
    v6[3] = &unk_1E8EA9A80;
    v8 = a2;
    v7 = v3;
    objc_msgSend(v5, "bs_performAfterCommit:", v6);

  }
}

void sub_1D0D53174(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  id *v19;

  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D54210(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t LostModeStateChanged(uint64_t a1, void *a2)
{
  void *v3;
  int v4;
  NSObject *v5;
  _BOOL4 v6;
  uint8_t v8[16];
  uint8_t buf[16];

  objc_msgSend(MEMORY[0x1E0D21380], "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "lostModeIsActive");

  SBLogCommon();
  v5 = objc_claimAutoreleasedReturnValue();
  v6 = os_log_type_enabled(v5, OS_LOG_TYPE_INFO);
  if (v4)
  {
    if (v6)
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1D0540000, v5, OS_LOG_TYPE_INFO, "Lost mode is active after receiving lost mode change notification", buf, 2u);
    }

    return objc_msgSend(a2, "activateLostModeForRemoteLock:", 1);
  }
  else
  {
    if (v6)
    {
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_1D0540000, v5, OS_LOG_TYPE_INFO, "Lost mode is not active after receiving lost mode change notification", v8, 2u);
    }

    return objc_msgSend(a2, "exitLostModeIfNecessaryFromRemoteRequest:", 1);
  }
}

void LockScreenToggled()
{
  void *v0;
  void *v1;
  void *v2;
  id v3;

  objc_msgSend(MEMORY[0x1E0D229A0], "sharedInstance");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "prepareForExitAndRelaunch:", 1);

  objc_msgSend(MEMORY[0x1E0D00DC0], "actionWithOptions:", 1);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0D229A8], "sharedInstance");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", v3);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "sendActionsToBackBoard:", v2);

}

void sub_1D0D5445C(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0D555DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1D0D55DD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D5602C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D57544(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1D0D5B534(_Unwind_Exception *a1)
{
  id *v1;
  id *v2;
  uint64_t v3;

  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 160));
  _Unwind_Resume(a1);
}

void sub_1D0D5EA70(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 32));
  _Unwind_Resume(a1);
}

void sub_1D0D5EFB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D604E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

BOOL SBWindowLevelRangeIsValid(double a1, double a2)
{
  return a2 >= a1;
}

double SBWindowLevelRangeInvalid()
{
  return 0.0;
}

double SBWindowLevelUnionRange(double a1, double a2, double a3, double a4)
{
  double v4;
  double v5;

  if (a2 < a1)
    v4 = a3;
  else
    v4 = a1;
  if (a1 >= a3)
    v5 = a3;
  else
    v5 = a1;
  if (a2 < a1 || a4 < a3)
    return v4;
  else
    return v5;
}

BOOL SBWindowLevelInExclusiveRange(double a1, double a2, double a3)
{
  _BOOL4 v3;

  v3 = a2 < a1;
  if (a3 <= a1)
    v3 = 0;
  return a3 >= a2 && v3;
}

uint64_t NSStringFromSBWindowLevelRange(double a1, double a2)
{
  return objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("(%.f, %.f)"), *(_QWORD *)&a1, *(_QWORD *)&a2);
}

void sub_1D0D6215C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D62FE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D6395C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D63FB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D6481C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  id *v15;

  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D67900(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;

  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D68C9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,char a55)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose(&a43, 8);
  _Block_object_dispose(&a49, 8);
  _Block_object_dispose(&a55, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D69098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  uint64_t v11;
  uint64_t v13;
  va_list va;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  va_list va1;

  va_start(va1, a11);
  va_start(va, a11);
  v13 = va_arg(va1, _QWORD);
  v15 = va_arg(va1, _QWORD);
  v16 = va_arg(va1, _QWORD);
  v17 = va_arg(va1, _QWORD);
  v18 = va_arg(va1, _QWORD);
  v19 = va_arg(va1, _QWORD);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

id SBStashedModelPath()
{
  void *v0;
  void *v1;
  void *v2;

  SBHomeDirectory();
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "stringByAppendingPathComponent:", CFSTR("StashedModel"));
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "stringByAppendingPathExtension:", CFSTR("plist"));
  v2 = (void *)objc_claimAutoreleasedReturnValue();

  return v2;
}

void sub_1D0D6A21C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D6AD28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D6B0FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D6BB9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPBServerConnectionClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  if (!PasteboardLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_1E8EC18A8;
    v5 = 0;
    PasteboardLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!PasteboardLibraryCore_frameworkLibrary)
    __getPBServerConnectionClass_block_invoke_cold_1(&v3);
  result = objc_getClass("PBServerConnection");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPBServerConnectionClass_block_invoke_cold_2();
  getPBServerConnectionClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void SBCornerFingerGestureUpdateFailureRequirements(void *a1, void *a2)
{
  id v3;
  char v4;
  id v5;
  uint64_t v6;
  id v7;

  v7 = a1;
  v3 = a2;
  v4 = objc_msgSend(v7, "edges");
  if ((v4 & 4) != 0)
  {
    objc_msgSend(v3, "gestureRecognizerOfType:shouldRequireFailureOfGestureRecognizer:", 45, v7);
    objc_msgSend(v3, "gestureRecognizerOfType:shouldBeRequiredToFailByGestureRecognizer:", 32, v7);
    objc_msgSend(v3, "gestureRecognizerOfType:shouldRequireFailureOfGestureRecognizer:", 101, v7);
    objc_msgSend(v3, "gestureRecognizerOfType:shouldBeRequiredToFailByGestureRecognizer:", 3, v7);
    objc_msgSend(v3, "gestureRecognizerOfType:shouldBeRequiredToFailByGestureRecognizer:", 1, v7);
  }
  if ((v4 & 2) != 0)
  {
    v6 = 26;
    goto LABEL_7;
  }
  v5 = v7;
  if ((v4 & 8) != 0)
  {
    v6 = 25;
LABEL_7:
    objc_msgSend(v3, "gestureRecognizerOfType:shouldRequireFailureOfGestureRecognizer:", v6, v7);
    v5 = v7;
  }
  objc_msgSend(v3, "gestureRecognizerOfType:shouldRequireFailureOfGestureRecognizer:", 29, v5);
  objc_msgSend(v3, "gestureRecognizerOfType:shouldBeRequiredToFailByGestureRecognizer:", 117, v7);
  objc_msgSend(v3, "gestureRecognizerOfType:shouldBeRequiredToFailByGestureRecognizer:", 118, v7);

}

void sub_1D0D6FE44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,id location)
{
  id *v25;
  id *v26;

  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D7036C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *SBWindowSceneStatusBarLayoutLayerDescription(unint64_t a1)
{
  if (a1 > 2)
    return CFSTR("invalid");
  else
    return off_1E8EC1938[a1];
}

void sub_1D0D71C48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a27, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D71F30(_Unwind_Exception *a1)
{
  uint64_t v1;

  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1D0D721FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_list va;

  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D72404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D72848(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  id *v20;
  id *v21;

  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D73610(_Unwind_Exception *a1)
{
  id *v1;
  uint64_t v2;

  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void SBActivityAlertErrorDescription(unint64_t a1)
{
  void *v2;
  void *v3;

  if (a1 >= 3)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "NSString *SBActivityAlertErrorDescription(SBActivityAlertErrorCode)");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBActivityAlertError.m"), 22, CFSTR("Unsupported error: %d"), a1);

  }
}

id SBActivityAlertError(unint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v7;
  _QWORD v8[2];

  v8[1] = *MEMORY[0x1E0C80C00];
  v2 = (void *)MEMORY[0x1E0CB35C8];
  v7 = *MEMORY[0x1E0CB2D50];
  SBActivityAlertErrorDescription(a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = v3;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v8, &v7, 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "errorWithDomain:code:userInfo:", CFSTR("SBActivityAlertErrorDomain"), a1, v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

void sub_1D0D7827C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

const __CFString *NSStringFromStartupTransitionDestination(unint64_t a1)
{
  if (a1 > 4)
    return CFSTR("Application");
  else
    return off_1E8EC1B88[a1];
}

void sub_1D0D79AC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  id *v16;

  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D79BB8(_Unwind_Exception *a1)
{
  id *v1;

  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1D0D7A648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D7A838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D7AA64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  id *v14;

  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D7B4A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1D0D7B8CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  id *v18;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D7BF30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  uint64_t v9;
  va_list va;

  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1D0D8153C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,id location)
{
  id *v27;

  objc_destroyWeak(v27);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1D0D832C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  id *v21;
  id *v22;

  objc_destroyWeak(v22);
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void SBSystemApertureApplyUnDisplayZoomScaleToWindowInWindowSceneIfNecessary(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  double v6;
  double v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  __int128 v13;
  CGAffineTransform *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  CGAffineTransform v18;
  CGAffineTransform v19;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v4, "screen");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "nativeScale");
  v7 = v6;

  objc_msgSend(v4, "screen");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "scale");
  v10 = v9;

  v11 = vabdd_f64(v10, v7);
  if (v7 == 0.0 || v11 <= 0.00000011920929)
  {
    v13 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
    v15 = *MEMORY[0x1E0C9BAA8];
    v16 = v13;
    v17 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
    v14 = (CGAffineTransform *)&v15;
  }
  else
  {
    CGAffineTransformMakeScale(&v19, v10 / v7, v10 / v7);
    v18 = v19;
    v14 = &v18;
  }
  objc_msgSend(v3, "setTransform:", v14, v15, v16, v17, *(_OWORD *)&v18.a, *(_OWORD *)&v18.c, *(_OWORD *)&v18.tx);

}

_QWORD *sub_1D0D85DB0(_QWORD *result)
{
  *result = ++qword_1EFC55D90;
  return result;
}

uint64_t sub_1D0D85DCC(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x1E0C804E8];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1D0D86024(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x1E0C804E8];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_1D0D861B0(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x1E0C804E8];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1D0D8639C(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E0C85B60])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1D0D86514(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x5005140540A45D4ALL);
  v4 = v2 - 33836109;
  v3 = v2 - 33836109 < 0;
  v5 = 33836109 - v2;
  if (!v3)
    v5 = v4;
  v1 = *(_DWORD *)(a1 + 16) + 1755732067 * ((((2 * a1) | 0x5E2356CE) - a1 - 789687143) ^ 0xF1D716BC) - 1;
  return (*((uint64_t (**)(void))*(&off_1E8EC5D70 + v1 - 20)
          + ((1130 * (v1 - 1947265726 + (v1 ^ v5 ^ 0x7D50EB34) + ((2 * v5) & 0xFAA1D7BA) - 155189769 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1D0D86610()
{
  int v0;
  _QWORD *v1;
  unsigned int v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = *(_DWORD *)(*v1 + 4 * v2) == 1176788107;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (2 * v4)) ^ v0)))();
}

uint64_t sub_1D0D86640()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 8 * v3)
                              + 8
                              * ((1130
                                * (v0 + ((v0 - 206139903) & 0xC4971FF ^ 0xFFFFFF15) + v1 - 1947265726 < 0x7FFFFFFF)) ^ v0)))();
}

_DWORD *sub_1D0D8669C(_DWORD *result)
{
  int v1;

  *result = v1;
  return result;
}

uint64_t sub_1D0D866A4(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  int v4;
  int v5;

  v1 = 535753261 * ((2 * (a1 & 0x6240BBC7) - a1 + 499074104) ^ 0x174B4A17);
  v2 = *(_DWORD *)(a1 + 12) ^ v1;
  v3 = v1 + *(_DWORD *)(a1 + 8) - 372458650;
  v4 = (*(_DWORD *)(*(_QWORD *)a1 - 0x7299FD1B0C63AD32) ^ 0x8453FA77) + v3;
  v5 = v4 - ((2 * v4) & 0x8A7F4EE) - 2074871177;
  *(_DWORD *)(*(_QWORD *)a1 - 0x7299FD1B0C63AD32) = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E8EC5D70 + (v2 ^ 0xA4))
                              + ((232 * (((v2 + 40) ^ ((v5 ^ 0x8453FA77) < v3)) & 1)) ^ v2))
                            - 8))();
}

void sub_1D0D86778(uint64_t a1@<X8>)
{
  int v1;

  *(_DWORD *)(a1 - 0x7299FD1B0C63AD36) = (*(_DWORD *)(a1 - 0x7299FD1B0C63AD36) ^ 0xC478CA45)
                                         - 998716859
                                         - ((((v1 + 2002959710) & 0x889D4279 ^ 0x73)
                                           + 2 * (*(_DWORD *)(a1 - 0x7299FD1B0C63AD36) ^ 0xC478CA45)) & 0x88F1948A)
                                         + 1;
}

void sub_1D0D867DC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 + 1734042137 * (a1 ^ 0x5CCEC34D);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x5005140540A45D4ALL) - 33836109 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x5005140540A45D4ALL) - 33836109;
  else
    v3 = 33836109 - *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x5005140540A45D4ALL);
  v2 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x5005140540A45D4ALL) - 33836109 >= 0)
    v4 = *(_DWORD *)(v2 - 0x5005140540A45D4ALL) - 33836109;
  else
    v4 = 33836109 - *(_DWORD *)(v2 - 0x5005140540A45D4ALL);
  v7 = *(_QWORD *)(a1 + 8);
  v6 = (535753261 * ((&v6 & 0x66FED9C2 | ~(&v6 | 0x66FED9C2)) ^ 0x93F52812)) ^ (v1 + 529);
  sub_1D0D9B100((uint64_t)&v6);
  if (v3 >= v4)
    v5 = v4;
  else
    v5 = v3;
  __asm { BR              X14 }
}

uint64_t sub_1D0D86954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  unsigned int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  _BOOL4 v24;

  v21 = 2 * (v14 ^ 0x4E2);
  v22 = 4 * (v19 + v15);
  v23 = v17
      + 1318728281
      + (*(_DWORD *)(*(_QWORD *)(v20 - 0x5005140540A45D46) + v22) ^ v18)
      + (*(_DWORD *)(*(_QWORD *)(a10 - 0x5005140540A45D46) + v22) ^ v18);
  *(_DWORD *)(*(_QWORD *)(a12 - 0x5005140540A45D46) + v22) = v23 + v18 - (v16 & (2 * v23));
  v24 = v19 + 701131669 < (int)(v13 + 1873845881);
  if (v13 > 0x104F6186 != v19 + 701131669 < -273637767)
    v24 = v13 > 0x104F6186;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((1431 * v24) ^ v21)) - 8))();
}

uint64_t sub_1D0D86A8C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v3 + 2104311169 > 1129541733 || v3 + 2104311169 < (int)(((211 * (v1 ^ 0x28F)) ^ 0xC35371C0) + v2);
  return (*(uint64_t (**)(void))(v0 + 8 * ((v5 * (v1 + 1196)) ^ v1)))();
}

uint64_t sub_1D0D86AE8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  _BOOL4 v17;

  v13 = 4 * (v11 + v7);
  v14 = v1 + v9 + (*(_DWORD *)(*(_QWORD *)(v12 - 0x5005140540A45D46) + v13) ^ v10);
  *(_DWORD *)(*(_QWORD *)(v6 - 0x5005140540A45D46) + v13) = v14 + v10 - (v8 & (2 * v14));
  v15 = v11 + 1 + v2;
  v17 = v15 <= v3 && v15 >= v5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((241 * v17) ^ (v4 + 214))))();
}

uint64_t sub_1D0D86BA8()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v6;

  v4 = (((v1 ^ 0x2C1) - 367) ^ 0x57B5D25) + v3;
  v5 = (v2 > 0x349E6DCD) ^ (v4 < -882798030);
  v6 = v4 < (int)(v2 + 1264685618);
  if (v5)
    v6 = v2 > 0x349E6DCD;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((98 * v6) ^ v1)) - 12))();
}

uint64_t sub_1D0D86C1C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  _BOOL4 v24;
  uint64_t v25;
  int v26;
  int v27;
  _BOOL4 v28;

  v23 = (a1 + 1129595790) & 0xBCABBB1F;
  v24 = v21 > v15;
  v25 = 4 * (v22 + v17);
  v26 = v11 + v19 + (*(_DWORD *)(*(_QWORD *)(a10 - 0x5005140540A45D46) + v25) ^ v20);
  *(_DWORD *)(*(_QWORD *)(v16 - 0x5005140540A45D46) + v25) = v20 + ((v23 + 701) | 4) + v26 - (v18 & (2 * v26)) - 983;
  v27 = v13 + v22 + 553;
  LODWORD(v25) = v24 ^ (v27 < v12);
  v28 = v27 < v14;
  if (!(_DWORD)v25)
    v24 = v28;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (int)((894 * v24) ^ v23)) - 12))();
}

uint64_t sub_1D0D86D18()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * ((1452 * ((((v2 + 1) ^ (v1 == 0x21FBA404E9A3259)) & 1) == 0)) ^ v2))
                            - 12))();
}

void sub_1D0D86D58()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;

  *(_DWORD *)(*(_QWORD *)(v2 - 0x5005140540A45D46) + 4 * (v5 + v3)) = v0
                                                                        - ((v1 + 2 * v0 + 1657509751) & v4)
                                                                        - 141940174;
  *(_DWORD *)(v2 - 0x5005140540A45D4ALL) = (((v5 + 1 + v3) * (v6 - 549541838)) ^ 0x3ECDDD6D)
                                         - 1019842848
                                         + ((2 * (v5 + 1 + v3) * (v6 - 549541838)) & 0x7D9BBADA);
}

void sub_1D0D86E30(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) ^ (1734042137 * (((a1 | 0x3389861B) - a1 + (a1 & 0xCC7679E4)) ^ 0x6F474556));
  __asm { BR              X10 }
}

uint64_t sub_1D0D86EEC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((*(_DWORD *)(*(_QWORD *)(a1 + 16) + v4) == ((v3 - 1655) | 0xD1) + v1)
                                          * (v3 - 1621)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0D86F28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _DWORD *v3;
  uint64_t result;
  _QWORD v5[2];
  unsigned int v6;

  v6 = v2
     - 1390
     + 1374699841 * ((((2 * v5) | 0xB0228A8C) - v5 - 1477526854) ^ 0x35E55D4F)
     + 50;
  v5[0] = v1;
  v5[1] = a1;
  result = sub_1D0DBA800((uint64_t)v5);
  *v3 = 67672218 - *v3;
  return result;
}

void sub_1D0D870A4(uint64_t a1)
{
  int v1;
  int v2;

  v1 = 628203409 * ((a1 - 1979313088 - 2 * (a1 & 0x8A061440)) ^ 0x88E1873);
  v2 = *(_DWORD *)(a1 + 16) - v1;
  __asm { BR              X14 }
}

uint64_t sub_1D0D8716C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v8;
  int v9;
  int v10;

  v5 = (((v3 + 771) ^ 0x27552765) + v4) & 0xBBEBF684;
  v6 = 1755732067 * (((&v8 | 0x4690B055) - (&v8 & 0x4690B055)) ^ 0x98560D8E);
  v9 = v6 + v3 + 1045;
  v10 = v1 - v6 - v5 + 1906347249;
  v8 = v2;
  return ((uint64_t (*)(uint64_t *))(*(_QWORD *)(a1 + 8 * (v3 ^ 0x150)) - 12))(&v8);
}

uint64_t sub_1D0D872B0(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))(qword_1E8EC2370[(1503
                                                           * ((*(_DWORD *)(a2 + 4) - 1811329848) < 0x15)) ^ 0x369u]
                                          - 12))(4294925278);
}

uint64_t sub_1D0D872F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;

  *(_DWORD *)(*(_QWORD *)(a2 + 96) + 24) = v3;
  v4 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 672307600) & 0xD99E8B92) + 14193297;
  return (*(uint64_t (**)(_QWORD))(v2
                                           + 8
                                           * ((23
                                             * (((2 * v4) & 0xBFFADFBE ^ 0x999A8B92) + (v4 ^ 0xB3322A16) + 789246838 != 252207957)) ^ 0x1EDu)))(0);
}

uint64_t sub_1D0D87388(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((485 * ((a4 + a3 + 537038881) < 8)) ^ 0xFB)) - 12))();
}

uint64_t sub_1D0D873F4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((1085 * (v1 - v3 - 4 >= (unint64_t)(191 * (v2 ^ 0x119)) - 1305)) ^ v2))
                            - 12))();
}

uint64_t sub_1D0D87434()
{
  uint64_t v0;
  unsigned int v1;
  int v2;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v0 + 8 * ((((v2 ^ 0x447) - 1362) * (v1 < 0x20)) ^ v2 ^ 0x447))
                                         - (((v2 ^ 0x447u) + 479614292) ^ 0x1C965AA5)))((v2 ^ 0x447u) - 1208);
}

uint64_t sub_1D0D87480@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v9 = a3 + a2 + a1;
  v10 = v5 + v9;
  v11 = *(_OWORD *)(v10 - 31);
  v12 = a4 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8 * ((((v6 & 0xFFFFFFE0) != 32) * ((v8 - 479614675) ^ 0x3E0)) ^ (v8 + v7)))
                            - 4))();
}

void sub_1D0D874DC()
{
  JUMPOUT(0x1D0D8749CLL);
}

uint64_t sub_1D0D874E8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v5
                                                     + 8
                                                     * ((((a5 + ((a2 - 838) | 0x4A) + 764) ^ (a5 + 947)) * (v6 == v7)) ^ a2))
                                         - 4))(0);
}

uint64_t sub_1D0D87524(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((448 * (((((a3 - 189) | 0x80) ^ 0xB9) & v4) == ((a3 + 1106) | 9) - 1337)) ^ a3))
                            - 12))();
}

uint64_t sub_1D0D8756C@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;

  *(_QWORD *)(a2 - 7 + (v6 + v4 - v7)) = *(_QWORD *)(v3 - 7 + (v6 + v4 - v7));
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1644 * (((a1 + 125) ^ 0x116) + v7 == (v5 & 0xFFFFFFF8))) ^ a1))
                            - 8))();
}

uint64_t sub_1D0D875BC(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  uint64_t v7;
  int v8;

  *(_QWORD *)(a4 + (a5 - v8)) = *(_QWORD *)(a3 + (a5 - v8));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((a6 + v8 == a2) * a7) ^ a1)) - 8))();
}

uint64_t sub_1D0D875E8(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2
                                                     + 8
                                                     * (((v5 + ((v4 + 345376515) | 0x800528C) + 352) * (v3 == a2)) ^ v4))
                                         - (((v4 + 778) | 0x111u) ^ 0x535)))(0);
}

uint64_t sub_1D0D87640@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;

  *(_BYTE *)(a2 + (v6 + v5)) = *(_BYTE *)(v4 + (v6 + v5));
  return (*(uint64_t (**)(_QWORD))(v2
                                           + 8
                                           * (((v6 - 1 != v3) * (((a1 + 403065556) | 0x4900AA0) ^ 0x1C965E79)) ^ (a1 - 844))))(0);
}

void sub_1D0D87698()
{
  JUMPOUT(0x1D0D8766CLL);
}

void sub_1D0D876A0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24)
     - 1178560073 * ((((2 * (a1 ^ 0x51A934A8)) | 0xD9B356F8) - (a1 ^ 0x51A934A8) + 321279108) ^ 0x9718B22F);
  __asm { BR              X10 }
}

uint64_t sub_1D0D877F0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v5;

  v5 = *(_DWORD *)(v2 + 40) - v0 == 1720235092 || (*(_QWORD *)(v2 + 32) | *(_QWORD *)(v2 + 8)) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 | (8 * v5)) ^ v1)))();
}

uint64_t sub_1D0D87830()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  BOOL v5;

  v3 = v0 ^ 0x333;
  v5 = v1[2] == 0x11127EB20C1B7506 || (v1[8] | v1[6]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((302 * ((v3 ^ 0xEB ^ v5) & 1)) ^ v3)) - 12))();
}

uint64_t sub_1D0D87894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, uint64_t, unint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * (v17 ^ (233 * (v16 == 0)))) - ((v17 + 1988369917) & 0x897BE2C5) + 572))(a1, a8 + 0x4499A48786C6483ALL, a2, a3, a4, a5, a6, a7, a9, v18, a11, a12, a13, a14, &STACK[0x5005140540A45E1E], a16, &STACK[0x5005140540A45E3E], a8 + 0x4499A48786C64B6ALL, a8 + 0x4499A48786C64A5ALL);
}

uint64_t sub_1D0D879B4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  void (*v33)(uint64_t);
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(uint64_t);
  uint64_t v45;
  void (*v46)(uint64_t);
  uint64_t v47;

  v31 = v22 ^ 0x16F;
  v32 = ((((2 * (v30 - 144)) | 0x915946F0) - (v30 - 144) + 928210056) ^ 0x3232502E) * v28;
  *(_QWORD *)(v30 - 120) = v20;
  *(_QWORD *)(v30 - 144) = v27;
  *(_DWORD *)(v30 - 136) = (v22 - 25) ^ v32;
  *(_DWORD *)(v30 - 132) = (v23 - 1287922435 + (v22 ^ 0x16F)) ^ v32;
  v47 = a1 + v21;
  (*(void (**)(uint64_t))(v24 + 8 * (v22 - 418)))(v30 - 144);
  HIDWORD(a9) = (v31 - 168723328) & 0xA0E83FC;
  LODWORD(a8) = v31 - 552;
  *(_DWORD *)(v30 - 128) = v31 - 552 - ((((v30 - 144) | 0x9DE8374D) - ((v30 - 144) & 0x9DE8374D)) ^ 0x6776C41B) * v28;
  *(_QWORD *)(v30 - 144) = a20;
  *(_QWORD *)(v30 - 136) = a19;
  v46 = *(void (**)(uint64_t))(v24 + 8 * (v31 - 784));
  v46(v30 - 144);
  HIDWORD(v45) = v31 + 185;
  *(_QWORD *)(v30 - 120) = a19;
  *(_QWORD *)(v30 - 112) = v25;
  *(_DWORD *)(v30 - 128) = v31 + 185 - 1374699841 * ((v30 - 920209880 - 2 * ((v30 - 144) & 0xC926B6B8)) ^ 0xA4D2AEB1);
  *(_QWORD *)(v30 - 144) = v27;
  *(_QWORD *)(v30 - 136) = a20;
  v44 = *(void (**)(uint64_t))(v24 + 8 * (v31 & 0x5FAF74B3));
  v44(v30 - 144);
  LODWORD(v45) = v31 + 789;
  *(_QWORD *)(v30 - 104) = v29;
  *(_DWORD *)(v30 - 112) = (v31 + 789) ^ (1755732067
                                        * (((((v30 - 144) | 0xFDE837B0) ^ 0xFFFFFFFE) - (~(v30 - 144) | 0x217C84F)) ^ 0xDCD17594));
  *(_QWORD *)(v30 - 128) = a20;
  *(_QWORD *)(v30 - 120) = v25;
  *(_QWORD *)(v30 - 144) = v25;
  *(_QWORD *)(v30 - 136) = a19;
  v33 = (void (*)(uint64_t))(*(_QWORD *)(v24 + 8 * (v31 ^ 0x364)) - 4);
  v33(v30 - 144);
  HIDWORD(a4) = v31 + 255;
  *(_DWORD *)(v30 - 112) = v31
                         + 255
                         - 1225351577
                         * ((((v30 - 144) | 0x4A122FF4) - (v30 - 144) + ((v30 - 144) & 0xB5EDD008)) ^ 0x6988F7E2);
  *(_QWORD *)(v30 - 104) = a19;
  *(_QWORD *)(v30 - 144) = a20;
  *(_QWORD *)(v30 - 136) = v25;
  *(_QWORD *)(v30 - 128) = a11;
  *(_QWORD *)(v30 - 120) = v25;
  v34 = (void (*)(uint64_t))*(&off_1E8EC5D70 + (v31 ^ 0x319));
  v34(v30 - 144);
  *(_DWORD *)(v30 - 128) = v31
                         - 552
                         - 3804331 * ((2 * ((v30 - 144) & 0x335A7EF8) - (v30 - 144) + 1285914884) ^ 0xB63B7252);
  *(_QWORD *)(v30 - 144) = a20;
  *(_QWORD *)(v30 - 136) = a15;
  v46(v30 - 144);
  *(_DWORD *)(v30 - 128) = v31
                         + 185
                         - 1374699841 * ((((v30 - 144) | 0x720384D1) + (~(v30 - 144) | 0x8DFC7B2E)) ^ 0x1FF79CD9);
  *(_QWORD *)(v30 - 144) = v27;
  *(_QWORD *)(v30 - 136) = a20;
  *(_QWORD *)(v30 - 120) = a15;
  *(_QWORD *)(v30 - 112) = a10;
  v44(v30 - 144);
  *(_QWORD *)(v30 - 128) = a20;
  *(_QWORD *)(v30 - 120) = a10;
  *(_QWORD *)(v30 - 144) = a10;
  *(_QWORD *)(v30 - 136) = a15;
  *(_QWORD *)(v30 - 104) = v29;
  *(_DWORD *)(v30 - 112) = (v31 + 789) ^ (1755732067
                                        * ((343500220 - ((v30 - 144) | 0x147965BC) + ((v30 - 144) | 0xEB869A43)) ^ 0x35402798));
  v33(v30 - 144);
  *(_QWORD *)(v30 - 144) = a20;
  *(_QWORD *)(v30 - 136) = a10;
  *(_DWORD *)(v30 - 112) = v31 + 255 - 1225351577 * ((v30 - 144) ^ 0x239AD816);
  *(_QWORD *)(v30 - 128) = a12;
  *(_QWORD *)(v30 - 120) = a10;
  *(_QWORD *)(v30 - 104) = a15;
  v34(v30 - 144);
  *(_QWORD *)(v30 - 144) = v25;
  *(_QWORD *)(v30 - 128) = a10;
  *(_DWORD *)(v30 - 136) = (v31 - 538) ^ (1734042137
                                        * (((v30 - 144) & 0x63AE73F | ~((v30 - 144) | 0x63AE73F)) ^ 0xA50BDB8D));
  ((void (*)(uint64_t))((char *)*(&off_1E8EC5D70 + (v31 ^ 0x31B)) - 8))(v30 - 144);
  *(_QWORD *)(v30 - 136) = a10;
  *(_DWORD *)(v30 - 144) = (v31 + 136) ^ (535753261
                                        * ((((v30 - 144) ^ 0xF3500E6A) & 0x788BE91F | ~((v30 - 144) ^ 0xF3500E6A | 0x788BE91F)) ^ 0x7ED016A5));
  sub_1D0D9B100(v30 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void (*)(uint64_t), uint64_t, void (*)(uint64_t), uint64_t, uint64_t, uint64_t, void (*)(uint64_t), char *, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * (((*(_DWORD *)(v30 - 128) < 0x20C157CEu) * (HIDWORD(a9) ^ 0x3F5)) ^ v31)) - 4))(v35, v36, v37, v38, v39, v40, v41, v42, a2, a3, a4, v44, v45, v46, a8, a9, a10, v33, (char *)*(&off_1E8EC5D70 + v31 - 670) - 8,
           v25,
           v47);
}

uint64_t sub_1D0D87ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void (*a18)(uint64_t), void (*a19)(uint64_t), uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  void (*v29)(uint64_t);
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  *(_DWORD *)(v34 - 128) = v30
                         + 125
                         - 235795823
                         * ((2 * (((v34 - 144) ^ 0x73895C5) & 0x46C3A981) - ((v34 - 144) ^ 0x73895C5) + 960255612) ^ 0xAAA98AE0)
                         - 334;
  *(_QWORD *)(v34 - 144) = v32;
  *(_QWORD *)(v34 - 136) = v33;
  v29(v34 - 144);
  *(_DWORD *)(v34 - 112) = (v30 + 789) ^ (1755732067
                                        * ((-578105421 - ((v34 - 144) | 0xDD8ACFB3) + ((v34 - 144) | 0x2275304C)) ^ 0xFCB38D97));
  *(_QWORD *)(v34 - 128) = a27;
  *(_QWORD *)(v34 - 120) = v32;
  *(_QWORD *)(v34 - 144) = v32;
  *(_QWORD *)(v34 - 136) = v33;
  *(_QWORD *)(v34 - 104) = a29;
  a18(v34 - 144);
  *(_QWORD *)(v34 - 128) = a27;
  *(_QWORD *)(v34 - 120) = a21;
  *(_QWORD *)(v34 - 104) = v32;
  *(_DWORD *)(v34 - 112) = (v30 + 789) ^ (1755732067
                                        * ((((v34 - 144) ^ 0x88E45E9D | 0x3F0CA017)
                                          - ((v34 - 144) ^ 0x88E45E9D)
                                          + (((v34 - 144) ^ 0x88E45E9D) & 0xC0F35FE8)) ^ 0x692E4351));
  *(_QWORD *)(v34 - 144) = v32;
  *(_QWORD *)(v34 - 136) = v33;
  a18(v34 - 144);
  *(_DWORD *)(v34 - 144) = v30
                         + 125
                         - 1178560073 * ((v34 + 764086285 - 2 * ((v34 - 144) & 0x2D8B089D)) ^ 0x7E32566)
                         + 426522077;
  *(_QWORD *)(v34 - 136) = v32;
  *(_QWORD *)(v34 - 128) = a26;
  sub_1D0DC4EB0(v34 - 144);
  *(_DWORD *)(v34 - 128) = v30
                         + 125
                         - 235795823 * (((v34 - 144) & 0x9278D866 | ~((v34 - 144) | 0x9278D866)) ^ 0xF92A6EC0)
                         - 334;
  *(_QWORD *)(v34 - 144) = v32;
  *(_QWORD *)(v34 - 136) = a20;
  a19(v34 - 144);
  *(_DWORD *)(v34 - 128) = v30
                         + 125
                         + 1374699841 * ((v34 + 754788994 - 2 * ((v34 - 144) & 0x2CFD2B12)) ^ 0x4109331B)
                         - 613;
  *(_QWORD *)(v34 - 144) = a20;
  *(_QWORD *)(v34 - 136) = v32;
  v35 = sub_1D0DBA800(v34 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v31
                                                      + 8
                                                      * ((507 * (((a25 == 0) ^ (v30 + 125) ^ 0x31) & 1)) ^ (v30 + 434)))
                                          - 4))(v35);
}

uint64_t sub_1D0D88134()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  uint64_t v6;
  int v7;
  uint64_t v8;

  v4 = 1225351577 * ((((v3 - 144) | 0x5D966E65) - ((v3 - 144) & 0x5D966E65)) ^ 0x7E0CB673);
  *(_DWORD *)(v3 - 120) = v4 + v2 - 321;
  *(_QWORD *)(v3 - 128) = v8;
  *(_DWORD *)(v3 - 136) = v4 + v7 - 1256447095 + v2 - 1031;
  *(_QWORD *)(v3 - 144) = v1;
  result = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8EC5D70 + (v2 ^ 0x458)) - 4))(v3 - 144);
  *(_DWORD *)(v6 - 0x11127EB20C1B7506) = v7;
  *(_DWORD *)(v0 + 56) = -623068998;
  return result;
}

void sub_1D0D882A8(unint64_t a1)
{
  unsigned int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  _DWORD *v8;
  uint64_t v9;
  int v10;
  _QWORD v11[3];
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  int v19;
  unint64_t v20;
  _DWORD *v21;
  int32x4_t v22;
  int32x4_t v23;
  int32x4_t v24;
  unint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  char v32;
  char v33;
  char v34;
  char v35;
  unint64_t *v37;
  int v38;
  unsigned int v39;
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v2 = 535753261 * ((~(_DWORD)a1 & 0xA9C956D5 | a1 & 0x5636A92A) ^ 0xA33D58FA);
  v3 = *(_DWORD *)(a1 + 32);
  v4 = *(_DWORD *)(a1 + 28) ^ v2;
  v5 = 460628867 * ((&v37 & 0x8542F8A5 | ~(&v37 | 0x8542F8A5)) ^ 0x362B8527);
  v31 = *(_DWORD *)(a1 + 48) ^ v2;
  v20 = 535753261 * ((~a1 & 0xA8D5B041A9C956D5 | a1 & 0x572A4FBE5636A92ALL) ^ 0x5D37ED2CA33D58FALL);
  v6 = v3 + v2;
  v38 = v4 - v5 - 1882357543;
  v39 = v5 - 432370878;
  v25 = &STACK[0x7299FD1B0C63AE62];
  v37 = &STACK[0x7299FD1B0C63AE62];
  sub_1D0DB7FC0((uint64_t)&v37);
  v7 = v31;
  v8 = (_DWORD *)a1;
  v9 = (uint64_t)*(&off_1E8EC5D70 + (v4 ^ 0x9A));
  v26 = *(_QWORD *)(v9 + 8 * v4) - 12;
  v19 = v6 + 733739561;
  v18 = v4 + 1667289419;
  v17 = v6 - 1185201940;
  v14 = v6 - 1881445403;
  v13 = v6 - 561091287;
  v11[2] = (char *)&v11[-24697088] + 6;
  v11[1] = (char *)&v11[-24697033] + 6;
  v30 = (v4 - 2072775634) & 0x7B8C0BB7;
  v16 = 1667289498;
  v12 = v4 + 134807472;
  v15 = (v4 + 134807472);
  v28 = v15;
  v21 = v8;
  v29 = v4;
  v23 = vdupq_n_s32(0xDADCB8BA);
  v24 = vdupq_n_s32(0x5ADCB8BFu);
  v22 = vdupq_n_s32(0xB5B97174);
  v27 = *((_QWORD *)v8 + 5);
  v10 = v7 - (((v7 << (((v4 + 45) ^ 0x18) - 99)) + 123216296) & 0xC4BF686) - 908981225;
  v32 = (HIBYTE(v10) ^ 6) - (((3 * ((v4 + 45) ^ 0x18)) ^ 0xF2) & (2 * (HIBYTE(v10) ^ 6))) - 17;
  v33 = (BYTE2(v10) ^ 0x25) + (~(2 * (BYTE2(v10) ^ 0x25)) | 0x21) - 16;
  v34 = (BYTE1(v10) ^ 0xFB) - ((2 * (BYTE1(v10) ^ 0xFB)) & 0xDF) - 17;
  v35 = (v7 - ((((_BYTE)v7 << (((v4 + 45) ^ 0x18) - 99)) - 88) & 0x86) + 23) ^ 0xAC;
  __asm { BR              X16 }
}

uint64_t sub_1D0D8867C@<X0>(int a1@<W2>, uint64_t a2@<X5>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v4;
  char v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a2 + (v6 + v4 - 194 - 107)) = v5;
  *(_BYTE *)(a2 + (a4 - 1950020606)) = *(_BYTE *)(a3 + 1);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((202
                                          * (((v4 - 194) ^ a1) + 922043577 + ((v4 + 1040559234) & 0xC1FA52F1) != 922043816)) ^ (v4 - 194)))
                            - 12))();
}

uint64_t sub_1D0D89A14@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a1 + (v6 + a3 + 1)) = *(_BYTE *)(a2 + (v4 - 922043816));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1791 * (v3 - 922043815 < ((v5 - 96) | 0xFu) - 75)) ^ v5)) - 12))();
}

uint64_t sub_1D0D89A70@<X0>(uint64_t a1@<X5>, uint64_t a2@<X6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t a23,uint64_t (*a24)(uint64_t))
{
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;

  v27 = (v25 - 149) | 0x44;
  *(_BYTE *)(a1 + (a3 + v27 - 77)) = *(_BYTE *)(a2 + (v24 - 922043815));
  v28 = 535753261 * ((((2 * (v26 - 168)) | 0xC4187D24) - (v26 - 168) - 1644969618) ^ 0x68F830BD);
  *(_DWORD *)(v26 - 160) = 372458654 - v28;
  *(_DWORD *)(v26 - 156) = (v27 + 34) ^ v28;
  STACK[0x358] = a23;
  v29 = sub_1D0D866A4(v26 - 168);
  return a24(v29);
}

uint64_t sub_1D0D89B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  int v14;
  int v15;
  uint64_t v16;
  _BOOL4 v17;

  v17 = a14 < 0xC7804356;
  if (v17 == (v14 + 1916553800) < 0xC7804356)
    v17 = v14 + 1916553800 < a14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((219 * !v17) ^ v15)) - (((v15 - 360) | 0x48u) ^ 0x5FLL)))();
}

uint64_t sub_1D0D89B7C@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  int v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;
  _BOOL4 v13;
  char v14;
  unsigned int v15;
  int v16;
  _BOOL4 v17;

  v13 = a3 < v10;
  v14 = *(_BYTE *)(a7 + (v11 + v8 + 7));
  *(_BYTE *)(a6 + (a8 + a1)) = v14 + ((2 * v14) & 0xDF ^ ((v9 ^ a5) - 92)) - 16;
  v15 = v8 + 1 + a2;
  v16 = v13 ^ (v15 < v10);
  v17 = v15 < a3;
  if (!v16)
    v13 = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((!v13 * a4) ^ v9)) - 4))();
}

uint64_t sub_1D0D89BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48)
{
  uint64_t v48;
  int v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;

  v51 = 535753261 * ((((2 * (v50 - 168)) | 0x724C342) - (v50 - 168) - 59924897) ^ 0x9666F8E);
  *(_DWORD *)(v50 - 160) = a13 - v51;
  *(_DWORD *)(v50 - 156) = (v49 + 22) ^ v51;
  STACK[0x358] = a28;
  v52 = sub_1D0D866A4(v50 - 168);
  v53 = a48 & (v49 + 1371 + (v49 ^ 0x14u) - 1478);
  *(&a39 + (v53 ^ 0x37)) = 111;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48
                                                                        + 8
                                                                        * ((1472 * ((v53 ^ 0x37) > 0x37)) ^ v49))
                                                            - 4))(v52, 3372923396, a33);
}

uint64_t sub_1D0D89CF4()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1018 * (v0 != ((v1 - 805218999) & 0x2FFEA55B) - 28)) ^ v1)))();
}

uint64_t sub_1D0D89D3C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((31 * ((((a1 ^ 8u) < 8) ^ (v1 - 103)) & 1)) ^ (v1 - 681)))
                            - ((v1 - 681) ^ 0x301)))();
}

uint64_t sub_1D0D89D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(a10 + v11) = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * (((16 * ((v10 & 0x38) != 8)) | (((v10 & 0x38) != 8) << 7)) ^ (v12 + 1064)))
                            - 4))();
}

uint64_t sub_1D0D89DD0()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *v0 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((16 * (v2 != 0)) | ((v2 != 0) << 7)) ^ v1)) - 4))();
}

uint64_t sub_1D0D89DF8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((((v1 - 856144526) & 0x3307B7DB) + 1395) * (v2 == v0)) ^ v1))
                            - 12))();
}

uint64_t sub_1D0D89E44@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a2 + v3 + a1 - 1) = v5;
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((((unint64_t)(a2 + v3) < 0x40) * ((7 * (v2 ^ v4)) ^ v6)) ^ (v2 + 1383))))();
}

void sub_1D0D89E80()
{
  JUMPOUT(0x1D0D88BF8);
}

uint64_t sub_1D0D89EA4()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((107 * (v0 + ((v2 + 1503) ^ 0xF4393EFC) < 0x38)) ^ (v2 + 362)))
                            - 12))();
}

uint64_t sub_1D0D89EF4@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v4 = v1;
  v5 = v1 + v2;
  if (v5 <= 0x38)
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((100 * (v5 - v4 + 197576494 > 7)) ^ a1)) - 12))();
}

uint64_t sub_1D0D89F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(a11 + v13 + v11 - 922) = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((((v12 & 0xFFFFFFFFFFFFFFF8) == 8) * v14) ^ v11)) - 4))();
}

uint64_t sub_1D0D89F9C()
{
  unsigned int v0;
  _QWORD *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v2 == 0) * v3) ^ v0)) - 4))();
}

uint64_t sub_1D0D89FC0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1943 * (v0 != v1)) ^ v2)) - 12))();
}

uint64_t sub_1D0D89FF0@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  char v5;
  uint64_t v6;

  *(_BYTE *)(a2 + v3 + a1 - 1) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a2 + v3) < 0x38) * v4) ^ (v2 + 362))) - 12))();
}

void sub_1D0D8A020()
{
  JUMPOUT(0x1D0D88BF8);
}

uint64_t sub_1D0D8A26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,int a53)
{
  uint64_t v53;
  int v54;
  uint64_t v56;
  unint64_t v57;

  if (a34 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v53
                                                                 + 8 * ((628 * (a53 != 1894502684)) ^ (v54 + 107)))
                                                     - (v54 + 107)
                                                     + 182))(a1, a14);
  if (a34 == 1)
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v53
                                                        + 8
                                                        * (((a53 == 1894502684) | (32 * (a53 == 1894502684))) ^ (v54 + 76)))
                                            - ((v54 + 358103152) & 0xEAA7C7DB)
                                            + 151))(a14);
  v56 = (v54 + 545);
  v57 = ((2 * (_QWORD)&a37) & 0xF6BFDBFA7BBC730)
      + ((unint64_t)&a37 ^ 0x87B5FEDFD3DDE39BLL)
      + (v56 ^ 0x7A7A7DBA3F7B9C70);
  a52 = ((v57 + 101) ^ 0xBA) * (v57 + 118);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v53 + 8 * (int)v56) - 12))(a14);
}

void sub_1D0D8A5B4()
{
  JUMPOUT(0x1D0D8A584);
}

uint64_t sub_1D0D8A5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,unint64_t a53,unint64_t a54)
{
  unint64_t *v54;
  uint64_t v55;
  int v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  uint64_t v62;

  v60 = *v54;
  a53 = 0xEFEFEFEFEFEFEFEFLL;
  a54 = 0xEFEFEFEFEFEFEFEFLL;
  v61 = 235795823 * ((1465197097 - ((v58 - 168) | 0x57552229) + ((v58 - 168) | 0xA8AADDD6)) ^ 0x3C07948F);
  STACK[0x370] = v60;
  STACK[0x380] = (unint64_t)&STACK[0x5800F43E2BD23CAC];
  *(_DWORD *)(v58 - 160) = v61 + 1234927745;
  *(_DWORD *)(v58 - 132) = (v56 + 1737) ^ v61;
  STACK[0x358] = (unint64_t)&a51;
  STACK[0x368] = v58 - 188;
  v62 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v59 + 8 * (v56 + 149)) - 8))(v58 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55
                                                      + 8 * ((816 * (*(_DWORD *)(v58 - 136) == v57 + v56 - 8)) | v56))
                                          - ((v56 + 281) | 0x216u)
                                          + 811))(v62);
}

uint64_t sub_1D0D8A6DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  _BOOL4 v9;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(v1 + 16) + v0 - 0xB0FF4B32C421AELL)
     - *(unsigned __int8 *)(v5 + v0 - 0xB0FF4B32C421AELL);
  v7 = ((v3 - 744) ^ 0x4ELL) + v0;
  v9 = (v6 ^ 0xFDFDEFED) + 2147474808 + ((2 * v6) & 0xFBFBDFDA) == 2113785189 && v7 != v2 + 16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((15 * v9) ^ v3)) - 12))();
}

uint64_t sub_1D0D8A768@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;

  v4 = 1759421093
     * (((~(v3 - 168) | 0x9150A8F56C1A5442) + ((v3 - 168) | 0x6EAF570A93E5ABBDLL)) ^ 0x4011965A20981BE8);
  v5 = a1 - 551331744 + v4;
  *(_DWORD *)(v3 - 128) = v5;
  STACK[0x368] = v1 ^ v4;
  STACK[0x378] = 2113785189 - v4;
  *(_DWORD *)(v3 - 168) = v5 + 33;
  *(_DWORD *)(v3 - 164) = v4;
  *(_DWORD *)(v3 - 144) = a1 - 551331744 - v4 - 8;
  *(_DWORD *)(v3 - 160) = v4 + a1 + 2021363698;
  v6 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8EC5D70 + a1 + 77) - 8))(v3 - 168);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * *(int *)(v3 - 140)) - 12))(v6);
}

void sub_1D0D8A848()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 8) = -623068998;
}

void sub_1D0D8A894(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;

  v2 = (*(_DWORD *)(a2 + 4) - 1811329848) < 0x102;
  __asm { BR              X11 }
}

uint64_t sub_1D0D8A8F8()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((14 * (v1 != 1811329848)) | 0x680u)) - 8))();
}

uint64_t sub_1D0D8A92C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  int v7;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;

  v4 = v1 - (**(_BYTE **)(v3 + 8) == 0);
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 528) = 1964514043;
  *(_DWORD *)(*(_QWORD *)(v2 + 96) + 532) = 33836109;
  *(_QWORD *)(*(_QWORD *)(v2 + 96) + 536) = *(_QWORD *)(v2 + 96) + 544;
  v5 = *(_QWORD *)(v2 + 96) + 0x5005140540A45F5ELL;
  v6 = 3804331 * ((2022953891 - (&v9 | 0x7893D3A3) + (&v9 | 0x876C2C5C)) ^ 0x7DF2DF0A);
  v13 = *(_QWORD *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  v10 = v6 ^ 0x227;
  v11 = (v4 - 1379016376) ^ v6;
  v9 = v5;
  (*(void (**)(uint64_t *))(a1 + 1264))(&v9);
  v7 = v12;
  *(_QWORD *)(*(_QWORD *)(v2 + 96) + 512) = *(_QWORD *)(v3 + 8) + (*(_DWORD *)(v3 + 4) - v4);
  return (v7 - 1162155859);
}

void sub_1D0D8AA98(uint64_t a1)
{
  __asm { BR              X8 }
}

void sub_1D0D8ABC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v9;
  int v10;
  int v11;
  _BOOL4 v13;

  v10 = (6 * ((a5 + 2042223874) ^ 0x11D)) ^ 0x266;
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 8 * (a6 & 0x20602F7)) - 2);
  v13 = ((v10 + 1092701772) | 0x38988D02)
      + ((**(unsigned __int8 **)(v9 + 80) - (v11 ^ 0xEF)) ^ 0x7EFC79FB)
      + ((2 * (**(unsigned __int8 **)(v9 + 80) - (v11 ^ 0xEF))) & 0xFDF8F3F6)
      + 1546525324 == v7
     && a3 - 0x754CFBFF8A74EC57 + ((6 * ((a5 + 2042223874) ^ 0x11Du)) ^ 0x754CFBFEF45A97A0) != 0;
  __asm { BR              X15 }
}

uint64_t sub_1D0D8BCA0@<X0>(int a1@<W0>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v3 + (a1 + v5)) = *(_BYTE *)(a3 + (a1 + v5));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((a1 - 1 == v4) * ((a2 + 54) ^ 0x34B)) ^ a2)) - 4))();
}

void sub_1D0D8BCDC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) ^ (1225351577 * ((-2 - ((~(_DWORD)a1 | 0xDE54387B) + (a1 | 0x21ABC784))) ^ 0xFDCEE06D));
  __asm { BR              X9 }
}

uint64_t sub_1D0D8BDC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, int a6, unsigned int a7, int a8)
{
  uint64_t v8;
  int v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  int v17;

  v17 = (*(_DWORD *)(a1 + 16) ^ v12) + *(_DWORD *)(v8 - 0x4FDE89866017873);
  v14 = 1734042137
      * ((((&a5 | 0x69F868C4) ^ 0xFFFFFFFE) - (~&a5 | 0x9607973B)) ^ 0xCAC95476);
  a7 = 610549684 - v14;
  a8 = (v17 - 10528628) ^ v14;
  a6 = v13 - v14 + 727;
  a5 = v8;
  v15 = (*(uint64_t (**)(uint64_t *))(a2 + 8 * (v13 ^ 0x23E)))(&a5);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((1877 * (*v10 == v9)) ^ v13))
                                          - (((v13 - 516) | 0x620u) ^ 0x665)))(v15);
}

uint64_t sub_1D0D8BEA0()
{
  _QWORD *v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * (((*v0 == 0x49E3D721B33288E3) * (((v1 - 1629) | 0x241) ^ 0x2AF)) ^ v1))
                            - 119 * (v1 ^ 0x666u)
                            + 825))();
}

uint64_t sub_1D0D8BF00()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 == (v0 ^ 0x104) + 978751583) * (v0 ^ 0x38A)) ^ v0)) - 8))();
}

void sub_1D0D8BF38(int a1@<W8>)
{
  int v1;
  _DWORD *v2;
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = (a1 & 0xBFFFFFFF ^ 0xD413A399)
     - 736910439
     + ((2 * (((v1 ^ 0x10B) + 336830805) & (a1 & 0xBFFFFFFF ^ 0xD413A399) ^ (a1 | 0xFFFFFFF9))) ^ 0x8000000D)
     + 1;
  v6 = *(_QWORD *)(v3 - 0x4FDE89866017883);
  v7 = *v2 - 316202568;
  *(_BYTE *)(v6 + (*v2 - 316202567)) = (BYTE2(v5) ^ 0x13) + (~(2 * (BYTE2(v5) ^ 0x13)) | 0x21) - 16;
  *(_BYTE *)(v6 + v7 + 2) = (BYTE1(v5) ^ 0xA3) - ((2 * (BYTE1(v5) ^ 0xA3)) & 0xDF) - 17;
  *(_BYTE *)(v6 + v7) = (HIBYTE(v5) ^ 0xD4) - ((2 * (HIBYTE(v5) ^ 0xD4)) & 0xDF) - 17;
  *(_BYTE *)(v6 + v7 + 3) = v5 ^ 0x76;
  v8 = *(_QWORD *)(v3 - 0x4FDE89866017883);
  v9 = v4 - ((2 * v4 + 189979320) & 0xC4BF686) - 875599713;
  v10 = ((2 * (*v2 - 316202564)) & 0xAD6FAEA2) + ((*v2 - 316202564) ^ 0xD6B7D751) + 692594863;
  *(_BYTE *)(v8 + v10) = (HIBYTE(v9) ^ 6) - ((2 * (HIBYTE(v9) ^ 6)) & 0xDF) - 17;
  *(_BYTE *)(v8 + v10 + 1) = (BYTE2(v9) ^ 0x25) + (~(2 * (BYTE2(v9) ^ 0x25)) | 0x21) - 16;
  *(_BYTE *)(v8 + v10 + 2) = (BYTE1(v9) ^ 0xFB) - ((2 * (BYTE1(v9) ^ 0xFB)) & 0xDF) - 17;
  *(_BYTE *)(v8 + v10 + 3) = (v4 - ((2 * v4 - 72) & 0x86) - 97) ^ 0xAC;
  *v2 = v11 - 978752156;
}

void sub_1D0D8C1A4(uint64_t a1)
{
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  _DWORD v10[2];
  _BYTE *v11;
  _DWORD *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int32x4_t v22;
  unint64_t *v23;
  int32x4_t v24;
  int32x4_t v25;
  int v26;
  int v27;
  uint64_t *v28;
  int v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  char v37;
  char v38;
  uint64_t v39;
  _BYTE v40[7];
  unint64_t *v42;
  int v43;
  unsigned int v44;
  uint64_t v45;

  v45 = *MEMORY[0x1E0C80C00];
  v2 = *(_DWORD *)(a1 + 4) - 1224239923 * ((2 * (a1 & 0x723AC1F0) - a1 - 1916453361) ^ 0x7F76C3D8);
  v3 = *(_DWORD *)(a1 + 24) + 1224239923 * ((2 * (a1 & 0x723AC1F0) - a1 - 1916453361) ^ 0x7F76C3D8);
  v4 = 460628867 * (((&v42 | 0xB2A65199) + (~&v42 | 0x4D59AE66)) ^ 0xFE30D3E5);
  v5 = *(_DWORD *)(a1 + 16);
  v16 = 1224239923 * ((2 * (a1 & 0x7635C7F723AC1F0) - a1 + 0x789CA3808DC53E0FLL) ^ 0x50C616E97F76C3D8);
  v6 = v5 ^ (1224239923 * ((2 * (a1 & 0x723AC1F0) - a1 - 1916453361) ^ 0x7F76C3D8));
  v43 = v2 - v4 - 1882357516;
  v44 = v4 - 432370878;
  v23 = &STACK[0x7299FD1B0C63B046];
  v42 = &STACK[0x7299FD1B0C63B046];
  sub_1D0DB7FC0((uint64_t)&v42);
  v7 = v3;
  v31 = v6 + 1452494822;
  v30 = -734932396;
  v15 = v6 - 1492476553;
  v18 = v6 + 972491289;
  v17 = v6 - 1735081428;
  v28 = &v39;
  v11 = v40;
  v12 = &v10[-492910843];
  v19 = v2 ^ 0xE1;
  v27 = (v2 - 869955678) & 0x33DA7EF9;
  v25 = vdupq_n_s32(0x5ADCB8BFu);
  v13 = (v2 - 149715144) & 0x8EC78D7;
  v26 = (v2 - 1717112678) & 0x66590FFD;
  v14 = v2 - 1049507925;
  v10[1] = (v2 - 1049507925) & 0x3E8E38F3;
  v24 = vdupq_n_s32(0xB5B97174);
  v34 = 3048829300;
  v33 = 3048829300;
  v29 = v2;
  v22 = vdupq_n_s32(0xDADCB8BA);
  v20 = a1;
  v32 = *(_QWORD *)(a1 + 8);
  v8 = (uint64_t)*(&off_1E8EC5D70 + (v2 ^ 0xE1));
  v21 = *(_QWORD *)(v8 + 8 * v2) - 4;
  v9 = v7 - ((2 * v7 + 4668652) & 0xC4BF686) - 431384135;
  v35 = ((((v2 - 48) ^ 0xC1) + 65) ^ HIBYTE(v9))
      - ((((((v2 + 1232) ^ 0x6C1) + 65) ^ HIBYTE(v9)) << (((v2 - 48) | 1) - 4)) & 0xDE)
      - 17;
  v36 = (BYTE2(v9) ^ 0x25) + (~(2 * (BYTE2(v9) ^ 0x25)) | 0x21) - 16;
  v37 = (BYTE1(v9) ^ 0xFB) - ((2 * (BYTE1(v9) ^ 0xFB)) & 0xDF) - 17;
  v38 = (v7 - ((2 * v7 - 20) & 0x86) - 71) ^ 0xAC;
  __asm { BR              X15 }
}

uint64_t sub_1D0D8C5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;

  v8 = v6 + ((125 * (v3 ^ 0x3C0)) ^ 0x208DC265);
  if (v8 <= 0x40)
    v8 = 64;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((15
                                                                         * (-v4 - v5 + ((v3 + 137) ^ 0xDF723BA2) + v8 < 0xF)) ^ v3)))(2555686449, 2713698739, a3, 1482178028);
}

uint64_t sub_1D0D8C684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  int v32;
  unsigned int v33;
  BOOL v34;

  v32 = v28 + v27 + 546160599;
  v33 = v28 + v27 + 546160660;
  if (v33 <= 0x40)
    v33 = 64;
  v34 = __CFADD__(v32 + 60, v29 - 546161758 + v30 + v33 + 1098);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 + 8 * ((52 * ((v34 ^ ((v26 ^ 0x3F) + 6)) & 1)) ^ v26)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1D0D8C700@<X0>(int a1@<W1>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,arg32_1D0D8C700 a32)
{
  uint64_t v32;
  int v33;
  uint64_t v34;

  *(_OWORD *)(a2 + (a3 + a1)) = *(_OWORD *)&a32.arr[4];
  return (*(uint64_t (**)(void))(v34 + 8 * (((((v32 + 1) & 0x1FFFFFFF0) != 16) * ((v33 - 317) ^ 0x214)) ^ (v33 - 30))))();
}

uint64_t sub_1D0D8C748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  _OWORD *v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;

  *(_OWORD *)(a6 + v9) = *v7;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 != 0) * v8) ^ v6)))();
}

uint64_t sub_1D0D8C770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((496 * (((v26 == v28) ^ (v27 + 37)) & 1)) ^ v27)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1D0D8C7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  int v39;
  uint64_t v40;

  *(_BYTE *)(a6 + (a9 - 1581268557)) = *(&a39 + a35 - 1482178028);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * ((((a9 - 1581268556) < 0x40) * (v39 ^ 0x23A)) ^ v39 ^ 0x4B)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_1D0D8C828()
{
  JUMPOUT(0x1D0D8C7CCLL);
}

uint64_t sub_1D0D8C830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,unint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v34;
  uint64_t v35;
  int v36;
  int v37;
  unint64_t v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  _BOOL4 v47;
  int v49;
  _BOOL4 v51;
  uint64_t (*v52)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * v34);
  v39 = STACK[0x31C];
  v40 = STACK[0x31C];
  v41 = STACK[0x320];
  v42 = STACK[0x324];
  v43 = STACK[0x320];
  v44 = STACK[0x324];
  v45 = LOBYTE(STACK[0x330]) ^ 0x8A;
  if (v45 == 2)
  {
    v49 = a3 + 349;
    v51 = (unint64_t)&STACK[0x2D0] < a31 && v38 < (unint64_t)&STACK[0x310];
    return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(v35 + 8 * (v49 ^ (13 * v51)))
                                                   - ((a30 - 1332) ^ 0x194)))(LODWORD(STACK[0x328]), LODWORD(STACK[0x328]));
  }
  else if (v45 == 1)
  {
    v47 = (unint64_t)&STACK[0x2D0] >= a31 || v38 >= (unint64_t)&STACK[0x310];
    return (*(uint64_t (**)(uint64_t))(v35 + 8 * (int)(((((a3 - 52) | 0xCC) + a29 - 298) * v47) ^ (a3 + 770))))(850264557);
  }
  else
  {
    LODWORD(STACK[0x318]) = 2 * (LODWORD(STACK[0x318]) ^ v36) + v36 - (v37 & (4 * (LODWORD(STACK[0x318]) ^ v36)));
    LODWORD(STACK[0x31C]) = (v40 ^ v36) + (v39 ^ v36) + v36 - (v37 & (2 * ((v40 ^ v36) + (v39 ^ v36))));
    LODWORD(STACK[0x320]) = (v43 ^ v36) + (v41 ^ v36) + v36 - (v37 & (2 * ((v43 ^ v36) + (v41 ^ v36))));
    LODWORD(STACK[0x324]) = (v44 ^ v36) + (v42 ^ v36) + v36 - (v37 & (2 * ((v44 ^ v36) + (v42 ^ v36))));
    return v52(a1, 4294967178, a3, 2689333823, a34, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
}

uint64_t sub_1D0D8D878(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32,unsigned int a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  _BOOL4 v37;

  if (a33 < a32 != a36 + 1820754117 < (((a3 + 268) | 0xA7) ^ 0xD431D025 ^ ((a3 + 206) | 0x294)))
    v37 = a36 + 1820754117 < (((a3 + 268) | 0xA7) ^ 0xD431D025 ^ ((a3 + 206) | 0x294));
  else
    v37 = a36 + 1820754117 > a33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v36 + 8 * ((112 * v37) ^ (a3 + 252))) - 8))();
}

uint64_t sub_1D0D8D910(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((35 * (((26 * (v2 ^ 0x394)) ^ (a1 + 136) ^ (11 * (v2 ^ 0x381u))) + v1 < v1 + a1)) ^ v2)))();
}

uint64_t sub_1D0D8D964(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  v12 = *(_BYTE *)(a5 + a1 + v7 + (v9 ^ v10) - 31);
  *(_BYTE *)(a6 + v8) = v12 - ((2 * v12) & 0xDF) - 17;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 != 63) * a7) ^ v9)))();
}

uint64_t sub_1D0D8D9B0(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int8x16_t *a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;
  int8x16_t v11;
  int8x16_t v12;

  *a6 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a5 + (v8 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(a5 + (v8 + a1)), *(int8x16_t *)(a5 + (v8 + a1))), v12)), v11);
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v9 + a8) & a4) + 477) ^ (v9 + 201))))();
}

uint64_t sub_1D0D8DA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  uint64_t v34;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34
                                                                                 + 8
                                                                                 * ((194
                                                                                   * ((((a34 - 1482177969) < 0xFFFFFFFB) ^ a14) & 1)) ^ ((int)a3 + 1098)))
                                                                     - 12))(a1, a2, a3, a4);
}

void sub_1D0D8DA70()
{
  JUMPOUT(0x1D0D8CBA0);
}

uint64_t sub_1D0D8DAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17)
{
  int v17;
  int v18;
  uint64_t v19;
  _BOOL4 v20;

  v20 = a17 < 0xB7958C87;
  if (v20 == v17 + 1340750520 < ((v18 + 1585818776) & 0xA17A55F6) - 1214937071)
    v20 = v17 + 1340750520 < a17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((22 * v20) ^ v18)) - 8))();
}

uint64_t sub_1D0D8DB34@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  _BOOL4 v14;
  unsigned int v15;
  int v16;
  _BOOL4 v17;

  v14 = a3 < v12;
  *(_BYTE *)(a6 + (a9 + v11)) = *(_BYTE *)(a8 + (v9 + a1))
                                            - ((2 * *(_BYTE *)(a8 + (v9 + a1))) & 0xDF)
                                            - 17;
  v15 = ((v10 + a5) & a7) + a2 + v9;
  v16 = v14 ^ (v15 < v12);
  v17 = v15 < a3;
  if (!v16)
    v14 = v17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((v14 * a4) ^ v10)) - 8))();
}

uint64_t sub_1D0D8DBA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25)
{
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  v28 = 535753261 * ((v27 - 168) ^ 0xAF40E2F);
  STACK[0x358] = a25;
  *(_DWORD *)(v27 - 160) = a17 - v28;
  *(_DWORD *)(v27 - 156) = (v25 - 1029) ^ v28;
  sub_1D0D866A4(v27 - 168);
  v29 = STACK[0x314] & 0x3F;
  *((_BYTE *)&STACK[0x2D0] + (v29 ^ 0x37)) = 111;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * ((213
                                                        * (((v25 - 82 + v25 + 38 + 1) ^ ((v29 ^ 0x37) > 0x37)) & 1)) ^ v25))
                                          - 4))(2555686449);
}

uint64_t sub_1D0D8DCA0()
{
  int v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((((v0 - 1971644092) < 0x38) * (((v2 - 52) | 0x21A) - 532)) ^ (v2 + 469)))
                            - 12))();
}

uint64_t sub_1D0D8DCF4@<X0>(int a1@<W8>)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = v1 + v2;
  if (v4 <= 0x38)
    v4 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((v4 - v1 + 1971644092 < 8) ^ (a1 - 1)) & 1)
                                          * (((a1 + 910) | 1) ^ 0x539)) ^ a1))
                            - 12))();
}

uint64_t sub_1D0D8DD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(a11 + v12) = v15;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (int)(((((v13 ^ 0xFFFFFFFFFFFFFA51) & v11) != 8)
                                     * ((((v13 ^ 0xF4) - 849844878) & 0x32A79739) - 277)) ^ v13 ^ 0xF4)))();
}

uint64_t sub_1D0D8DDC4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v1 + v4) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v2 != v4) * v3) ^ v0)))();
}

uint64_t sub_1D0D8DDE4()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((19 * ((((v2 + 1) ^ (v0 == v1)) & 1) == 0)) ^ v2)) - 12))();
}

uint64_t sub_1D0D8DE34@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a2 + v3 + a1 - 1) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((((unint64_t)(a2 + v3) < 0x38) * v5) | (v2 + 469))) - 12))();
}

void sub_1D0D8DE64(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  unsigned int v4;
  char v5;
  char v6;
  unint64_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unint64_t v13;

  v3 = LOBYTE(STACK[0x330]) ^ 0x8A;
  if (v3 == 1)
  {
    v10 = STACK[0x314];
    v11 = STACK[0x310];
    v6 = a3 - 5;
    v12 = (a3 + 1275) ^ (LODWORD(STACK[0x314]) >> 5);
    LOBYTE(STACK[0x308]) = ((8 * LOBYTE(STACK[0x314])) ^ 0xB8) - ((2 * ((8 * LOBYTE(STACK[0x314])) ^ 0xB8)) & 0xDF) - 17;
    LOBYTE(STACK[0x309]) = (v12 ^ 0xFC) - ((2 * (v12 ^ 0xFC)) & 0xDF) - 17;
    LOBYTE(STACK[0x30A]) = ((v10 >> 13) ^ 0x9F) - ((2 * ((v10 >> 13) ^ 0x9F)) & 0xDF) - 17;
    LOBYTE(STACK[0x30B]) = ((v10 >> 21) ^ 0x22) + (~(2 * ((v10 >> 21) ^ 0x22)) | 0x21) - 16;
    HIDWORD(v13) = v11 ^ 5;
    LODWORD(v13) = v10 ^ 0x80000000;
    LOBYTE(STACK[0x30C]) = (v13 >> 29) - ((2 * (v13 >> 29)) & 0xDF) - 17;
    LOBYTE(STACK[0x30D]) = ((v11 >> 5) ^ 0x52) - ((2 * ((v11 >> 5) ^ 0x52)) & 0xDF) - 17;
    LOBYTE(STACK[0x30E]) = ((v11 >> 13) ^ 0xC6) - ((2 * ((v11 >> 13) ^ 0xC6)) & 0xDF) - 17;
    v8 = -34;
    v9 = (v11 >> 21) ^ 0x23;
  }
  else
  {
    if (v3 != 2)
      goto LABEL_6;
    v9 = STACK[0x310];
    v4 = STACK[0x314];
    v5 = ((a3 - 110) ^ (LODWORD(STACK[0x310]) >> 13)) - ((2 * ((a3 - 110) ^ (LODWORD(STACK[0x310]) >> 13))) & 0xDF);
    LOBYTE(STACK[0x308]) = ((LODWORD(STACK[0x310]) >> 21) ^ 0x23)
                         + (~(2 * ((LODWORD(STACK[0x310]) >> 21) ^ 0x23)) | 0x21)
                         - 16;
    LOBYTE(STACK[0x309]) = v5 - 17;
    v6 = a3 - 5;
    LOBYTE(STACK[0x30A]) = ((v9 >> 5) ^ 0x52) - ((2 * ((v9 >> 5) ^ 0x52)) & 0xDF) - 17;
    HIDWORD(v7) = v9 ^ 5;
    LODWORD(v7) = v4 ^ 0x80000000;
    LOBYTE(STACK[0x30B]) = (v7 >> 29) - ((2 * (v7 >> 29)) & 0xDF) - 17;
    LOBYTE(STACK[0x30C]) = ((v4 >> 21) ^ 0x22) - ((2 * ((v4 >> 21) ^ 0x22)) & 0xDF) - 17;
    LOBYTE(STACK[0x30D]) = ((v4 >> 13) ^ 0x9F) - ((2 * ((v4 >> 13) ^ 0x9F)) & 0xDF) - 17;
    LOBYTE(STACK[0x30E]) = ((v4 >> 5) ^ 0xD3) - ((2 * ((v4 >> 5) ^ 0xD3)) & 0xDF) - 17;
    v8 = -48;
    LOBYTE(v9) = (8 * v4) ^ 0xB8;
  }
  LOBYTE(STACK[0x30F]) = v9 - (((_BYTE)v9 << ((v6 + 5) ^ 0x35)) & v8) - 17;
LABEL_6:
  JUMPOUT(0x1D0D8CB94);
}

uint64_t sub_1D0D8E1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  int v39;
  uint64_t v40;

  return ((uint64_t (*)(char *, uint64_t))(*(_QWORD *)(v40
                                                              + 8
                                                              * ((1030 * ((((a10 ^ 0xE7) - 56) & v39) != 1482178028)) ^ a10))
                                                  - 12))(&a39, 2812789268);
}

uint64_t sub_1D0D8E24C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X5>, int a4@<W8>)
{
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(a3 + (a4 + v6)) = *(_BYTE *)(a1 + v5 + a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((((v5 + 1) & 0xFFFFFFFCLL) == v7) * (((v4 - 1153) | 0x451) - 773)) ^ ((v4 - 1153) | 0x451)))
                            - 12))();
}

uint64_t sub_1D0D8E2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24)
{
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  v26 = 535753261 * ((v25 - 1591590627 - 2 * ((v25 - 168) & 0xA12241C5)) ^ 0xABD64FEA);
  STACK[0x358] = a24;
  *(_DWORD *)(v25 - 160) = 372458654 - v26;
  *(_DWORD *)(v25 - 156) = (v24 + 61) ^ v26;
  v27 = sub_1D0D866A4(v25 - 168);
  return a20(v27);
}

uint64_t sub_1D0D8E310(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  uint64_t v39;
  uint64_t v41;
  unint64_t v42;

  if (a33 == 2)
    return ((uint64_t (*)(void))(*(_QWORD *)(v39
                                          + 8 * (((LODWORD(STACK[0x32C]) != 1894502684) * (a3 ^ 0x2B)) ^ (a3 + 309)))
                              - 8))();
  if (a33 == 1)
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v39
                                                        + 8
                                                        * (((LODWORD(STACK[0x32C]) != 1894502684) * (a3 + 566)) ^ (a3 + 309)))
                                            - 8))(a19);
  v41 = (a3 - 616569269) & 0x24C01BFD;
  v42 = ((2 * (_QWORD)&a39) & 0x6BFEEABFDFFAFF70)
      + ((unint64_t)&a39 ^ 0xB5FF755FEFFD7FBBLL)
      + (v41 ^ 0x5AD7DFFFFF76FE0DLL);
  LOBYTE(STACK[0x32B]) = (((((a3 + 75) & 0xFD) - 77) | 4) ^ (v42 - 43) ^ 0x8E) * (v42 - 26);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v39 + 8 * v41) - 12))(a19);
}

void sub_1D0D8E640()
{
  JUMPOUT(0x1D0D8E60CLL);
}

uint64_t sub_1D0D8E64C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t result;
  _DWORD *v5;

  v3 = 235795823 * ((((v1 - 168) | 0x6C9568F5) + (~(v1 - 168) | 0x936A970A)) ^ 0xF83821AD);
  *(_DWORD *)(v1 - 132) = (a1 + 1693) ^ v3;
  *(_DWORD *)(v1 - 160) = v3 + 1234927745;
  result = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (a1 ^ 0xA9)) - 8))(v1 - 168);
  *v5 = *(_DWORD *)(v1 - 136);
  return result;
}

uint64_t sub_1D0D8E748(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  char v7;

  v2 = (unint64_t)&v7 ^ qword_1EFC54628 ^ qword_1EFC551E8;
  qword_1EFC54628 = (1209664481 * v2) ^ 0x2DEB88543200F8ELL;
  qword_1EFC551E8 = 1209664481 * (v2 ^ 0x2DEB88543200F8ELL);
  v3 = *(_DWORD *)(a2 + 4);
  v4 = (uint64_t)*(&off_1E8EC5D70
                + ((-31 * ((qword_1EFC551E8 + ((-31 * v2) ^ 0x8E)) ^ 0x8E)) ^ byte_1D0E9B4B0[byte_1D0E96DB0[(-31 * ((qword_1EFC551E8 + ((-31 * v2) ^ 0x8E)) ^ 0x8E))] ^ 0x46])
                + 126);
  if (v3 == 1811329851)
    __asm { BR              X17 }
  if (v3 == 1811329858)
  {
    v5 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BR              X1 }
  }
  return 4294925278;
}

void sub_1D0D8EDC4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BR              X0 }
}

uint64_t sub_1D0D8EF1C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((181 * ((((v2 & 0x7C14F7ED) - 1424) | 0x1E0) ^ 0x1F2) - 1156)
                                          * (((2 * v1) & 0xFFEFDCB2 ^ v0) + (v1 ^ 0x4935AEE9) - 52767596 == 2094187245)) ^ v2 & 0x7C14F7ED))
                            - 8))();
}

uint64_t sub_1D0D8EF98(int a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1380 * (a2 + a1 - 2146954841 >= ((a4 - 331) ^ (a4 + 1244) ^ 0x673u))) ^ a4))
                            - 12))();
}

uint64_t sub_1D0D8EFE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8
                                             * ((74 * (a3 + v8 + 1729 < (((a8 ^ 0x4A) + 1521) ^ 0xFFFFF921))) ^ a8))
                            - 4))();
}

uint64_t sub_1D0D8F020(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _BOOL4 v22;

  v13 = *(_QWORD *)(v12 - 120);
  v14 = (a2 + a1 + a3 + a7) + v13;
  v15 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 + (_BYTE)a7) & 0xF;
  v16 = v15 + v9 - v14;
  v17 = (v15 | v8) - v14;
  v18 = (v15 | v10) - v14;
  v22 = (unint64_t)(v7 - v13) > 0xF && v16 > 0xF && v17 > 0xF && v18 > 0xF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((14 * v22) | a6)) - 4))();
}

uint64_t sub_1D0D8F088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                 + 8
                                                                                 * ((986
                                                                                   * ((((158 * (a6 ^ 0xE3) - 1336458814) ^ (v6 < 158 * (a6 ^ 0xE3u) - 458)) & 1) == 0)) ^ (158 * (a6 ^ 0xE3))))
                                                                     - 12))(a1, a2, a3, a4);
}

uint64_t sub_1D0D8F0E4(int a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  int v51;
  uint64_t v52;
  int v53;
  int8x16_t v54;
  int8x16_t v55;
  uint64_t v56;
  int8x16_t v57;
  int8x16_t v58;
  int8x16_t v59;
  int8x16x4_t v61;
  int8x16x4_t v62;

  v53 = a5 + 384;
  v61.val[1].i64[0] = (v50 + 4) & 0xF;
  v61.val[1].i64[1] = (v50 + 3) & 0xF;
  v61.val[2].i64[0] = (v50 + 2) & 0xF;
  v61.val[2].i64[1] = (v50 + 1) & 0xF;
  v61.val[3].i64[0] = v50 & 0xF;
  v61.val[3].i64[1] = (v50 - 1) & 0xF;
  v62.val[0].i64[0] = (v50 + 14) & 0xF;
  v62.val[0].i64[1] = (v50 + 13) & 0xF;
  v62.val[1].i64[0] = (v50 + 12) & 0xF;
  v62.val[1].i64[1] = (v50 + 11) & 0xF;
  v62.val[2].i64[0] = (v50 + 10) & 0xF;
  v62.val[2].i64[1] = (v50 + 9) & 0xF;
  v62.val[3].i64[0] = (v50 + 8) & 0xF;
  v62.val[3].i64[1] = (v50 + 7) & 0xF;
  v54.i64[0] = 0x6161616161616161;
  v54.i64[1] = 0x6161616161616161;
  v55.i64[0] = 0xEFEFEFEFEFEFEFEFLL;
  v55.i64[1] = 0xEFEFEFEFEFEFEFEFLL;
  v56 = a3 + a2 + a1 + 1069 + ((v53 - 730) | 0x224u);
  v61.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 + 45 + ((v53 + 38) | 0x24)) & 0xF;
  v61.val[0].i64[1] = (v50 + 5) & 0xF;
  v57.i64[0] = vqtbl4q_s8(v61, (int8x16_t)xmmword_1D0E9B5B0).u64[0];
  v57.i64[1] = vqtbl4q_s8(v62, (int8x16_t)xmmword_1D0E9B5B0).u64[0];
  v58 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v46 - 15 + v56), *(int8x16_t *)(v48 + (v56 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v47 + (v56 & 0xF) - 15), *(int8x16_t *)(v49 + (v56 & 0xF) - 15))));
  v59 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v58, v58, 8uLL), v55), vmulq_s8(v57, v54)));
  *(int8x16_t *)(*(_QWORD *)(v52 - 120) - 15 + v56) = vextq_s8(v59, v59, 8uLL);
  return (*(uint64_t (**)(void))(a46 + 8 * ((1535 * ((v51 & 0xFFFFFFF0) == 16)) ^ v53)))();
}

void sub_1D0D8F258()
{
  JUMPOUT(0x1D0D8F1D4);
}

uint64_t sub_1D0D8F264()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2
                                                               + 8
                                                               * ((35
                                                                 * (((v0 + 1125720885) & 0xBCE6DCF3) + 918698941 != v1)) ^ v0))
                                                   - 4))(35, 8190584);
}

uint64_t sub_1D0D8F2C0(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;

  v12 = ((7 * (v6 ^ 0x47F)) ^ 0xFF83017B) + a2;
  *(_BYTE *)(*(_QWORD *)(v11 - 120) + v12) = *(_BYTE *)(v2 + v12) ^ *(_BYTE *)(v4 + (v12 & 0xF)) ^ *(_BYTE *)(v3 + (v12 & 0xF)) ^ *(_BYTE *)(v5 + (v12 & 0xF)) ^ (97 * (v12 & 0xF)) ^ 0xEF;
  v13 = a2 + 1331854128 < v9;
  if (v8 > 0xB0208A58 != a2 + 1331854128 < v7)
    v13 = v8 > 0xB0208A58;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v13 * a1) ^ v6)) - 4))();
}

uint64_t sub_1D0D8F368()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 ^ 0x37E) - 460) * (v0 == v3)) ^ v1)) - (v1 ^ 0x657u) + 1255))();
}

uint64_t sub_1D0D8F3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((((((a8 + 55) | 0x4C0) ^ 0x6D9) & v8) == 0) * ((a8 + 450) ^ 0x3B3)) ^ a8))
                            - 12))();
}

uint64_t sub_1D0D8F3E4(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  int v52;
  uint64_t v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  char v57;
  uint64_t v58;
  int8x16x4_t v60;

  v55 = (a6 + 843837411) & 0xCDB40FEE;
  *(_DWORD *)(v53 - 136) = v52;
  v56 = (v55 ^ 0xFFFFFC96) & v52;
  *(_QWORD *)(v53 - 128) = *(_QWORD *)(v53 - 120) - 7;
  *(_DWORD *)(v53 - 144) = v56;
  v57 = v51 + a2 + a1;
  *(_DWORD *)(v53 - 152) = v55 - 654;
  v58 = (a3 + a2 + a1 + 1745 - v54);
  v60.val[0].i64[0] = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 - 47 - (_BYTE)v54) & 0xF;
  v60.val[0].i64[1] = (v57 + 113 - (_BYTE)v54) & 0xF;
  v60.val[1].i64[0] = (v57 + 112 - (_BYTE)v54) & 0xF;
  v60.val[1].i64[1] = (v57 + 111 - (_BYTE)v54) & 0xF;
  v60.val[2].i64[0] = (v57 + (((_BYTE)a6 - 29) & 0xEE) - (_BYTE)v54) & 0xF;
  v60.val[2].i64[1] = (v57 + 109 - (_BYTE)v54) & 0xF;
  v60.val[3].i64[0] = (v50 - (_BYTE)v54) & 0xF;
  v60.val[3].i64[1] = (v57 + 123 - (_BYTE)v54) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v53 - 128) + v58) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v46 - 7 + v58), *(int8x8_t *)(v48 + (v58 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v47 + (v58 & 0xF) - 7), *(int8x8_t *)(v49 + (v58 & 0xF) - 7)))), (int8x8_t)0xEFEFEFEFEFEFEFEFLL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, (int8x16_t)xmmword_1D0E9B5C0), (int8x8_t)0x6161616161616161)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a46 + 8 * (int)((242 * (-v54 != 8 - v56)) ^ v55)) - 12))((__n128)xmmword_1D0E9B5C0);
}

void sub_1D0D8F550()
{
  JUMPOUT(0x1D0D8F478);
}

uint64_t sub_1D0D8F578()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (*(_DWORD *)(v1 - 152) ^ (1066
                                                                  * (*(_DWORD *)(v1 - 136) == *(_DWORD *)(v1 - 144)))))
                            - (*(_DWORD *)(v1 - 152) + 1521)
                            - ((*(_DWORD *)(v1 - 152) + 773275163) & 0xD1E8C5F7)
                            + 3008))();
}

uint64_t sub_1D0D8F5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = (a5 - 2094188122);
  *(_BYTE *)(*(_QWORD *)(v13 - 120) + v14) = *(_BYTE *)(v7 + v14) ^ *(_BYTE *)(v9 + (v14 & 0xF)) ^ *(_BYTE *)(v8 + (v14 & 0xF)) ^ *(_BYTE *)(v10 + (v14 & 0xF)) ^ (97 * (v14 & 0xF)) ^ 0xEF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((a5 - 1 == v11) * (((a7 - 1648) | 0x492) - 232)) ^ (a7 - 1552)))
                            - 4))();
}

uint64_t sub_1D0D8F644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  int v43;

  v41 = *(_QWORD *)(v38 + 24);
  *(int8x16_t *)(v40 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(v38 + 40) - 0x5800F43E2BD23B4CLL), (int8x16_t)xmmword_1D0E9B5D0);
  if (*(_QWORD *)(v40 - 120))
    v42 = v41 == 0xAEAB1E0EC55390ELL;
  else
    v42 = 1;
  v43 = !v42;
  HIDWORD(a12) = 2 * v37;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 + 8 * (int)((394 * v43) ^ a6)) - 12))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1D0D8F6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  _BOOL4 v41;

  v39 = (2 * a6) ^ 0xC6C;
  v41 = (((((2 * a6) ^ 0x98) & BYTE4(a12))
        + (v37 ^ 0xBF)
        + (((_BYTE)v39 - 11) & 0xEB)
        - 106) & 0xF) != 0
     || (((2 * (_DWORD)a6) ^ 0xE677BE98) & HIDWORD(a12)) + (v37 ^ 0xF33BDBBF) == (((v39 - 1274) | 0x303) ^ 0xF33BD82C);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (((2 * v41) | (32 * v41)) ^ v39)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_1D0D8F75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48)
{
  uint64_t v48;

  return ((uint64_t (*)(void))(*(_QWORD *)(v48
                                        + 8
                                        * (a48 ^ (1807
                                                * ((((a11 - (a14 & 0xD4DD4916) - 1596775398) << (((a48 - 116) & 0xD9)
                                                                                               + 48)) & 0xF72EFF34 ^ 0xD40C4914)
                                                 + ((a11 - (a14 & 0xD4DD4916) - 1596775398) ^ 0x11F9DB11)
                                                 + 1417598334 != 1343640856))))
                            - 4))();
}

uint64_t sub_1D0D8F850(uint64_t a1, int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((89 * ((a2 + v3 + 73957478) > 7)) ^ a3)) - 4))();
}

uint64_t sub_1D0D8F8C8(int a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((1202 * (a1 + 5 * (a3 ^ 0xB1) + a7 - 1531 > 0xFFFFFFEF)) ^ a3))
                            - ((a3 + 473636149) & 0xE3C4E7FD ^ 0x6D5)))();
}

uint64_t sub_1D0D8F924(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _BOOL4 v24;
  int v27;

  v12 = (a2 + v9 + a1);
  v13 = *(_QWORD *)(v11 - 120);
  v14 = v12 + v13 + 1;
  v15 = ((5 * (a6 ^ 0x4B6)) ^ 0x6DE) & v12;
  v16 = v6 + v15 - v12;
  v17 = (a6 ^ 0x4B6u) + 573 + v6 + v15 - 921;
  v18 = v15 + v7 - v12 + 2;
  v19 = v15 + v7 + 3;
  v20 = v15 + v8;
  v21 = v20 - v12 + 4;
  v22 = v20 + 5;
  v24 = v17 > v13 && v16 < v14;
  if (v19 > v13 && v18 < v14)
    v24 = 1;
  v27 = v22 > v13 && v21 < v14 || v24;
  return (*(uint64_t (**)(void))(v10 + 8 * ((966 * v27) ^ a6)))();
}

uint64_t sub_1D0D8F9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  unsigned int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v8
                                                             + 8
                                                             * ((89
                                                               * (v7 < ((417 * (a7 ^ 0x399) - 778) ^ (a7 - 465)))) ^ a7)))(a1, a2, 0);
}

uint64_t sub_1D0D8FA00(int a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  unsigned int v53;
  int8x16_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int8x16x4_t v58;
  int8x16x4_t v59;

  v58.val[1].i64[0] = ((_BYTE)v49 + 5) & 0xF;
  v58.val[1].i64[1] = ((_BYTE)v49 + 4) & 0xF;
  v58.val[2].i64[0] = ((_BYTE)v49 + 3) & 0xF;
  v58.val[2].i64[1] = ((_BYTE)v49 + 2) & 0xF;
  v58.val[3].i64[0] = ((_BYTE)v49 + 1) & 0xF;
  v58.val[3].i64[1] = v49 & 0xF;
  v53 = a2 + v50 + a1;
  v59.val[0].i64[0] = ((_BYTE)v49 - 1) & 0xF;
  v59.val[0].i64[1] = ((_BYTE)v49 + 14) & 0xF;
  v59.val[1].i64[0] = ((_BYTE)v49 + 13) & 0xF;
  v59.val[1].i64[1] = ((_BYTE)v49 + 12) & 0xF;
  v59.val[2].i64[0] = ((_BYTE)v49 + 11) & 0xF;
  v59.val[2].i64[1] = ((_BYTE)v49 + 10) & 0xF;
  v59.val[3].i64[0] = (v49 + 9) & 0xF;
  v59.val[3].i64[1] = (v49 + 8) & 0xF;
  v54.i64[0] = 0x7777777777777777;
  v54.i64[1] = 0x7777777777777777;
  v58.val[0].i64[0] = v53 & 0xF;
  v58.val[0].i64[1] = ((_BYTE)v49 + 6) & 0xF;
  v55.i64[0] = vqtbl4q_s8(v58, (int8x16_t)xmmword_1D0E9B5B0).u64[0];
  v55.i64[1] = vqtbl4q_s8(v59, (int8x16_t)xmmword_1D0E9B5B0).u64[0];
  v56 = vrev64q_s8(vmulq_s8(v55, v54));
  *(int8x16_t *)(*(_QWORD *)(v52 - 120) - 15 + v53) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v46 + v58.val[0].i64[0] - 15), *(int8x16_t *)(*(_QWORD *)(v52 - 120) - 15 + v53)), *(int8x16_t *)(v58.val[0].i64[0] + v47 - 13)), *(int8x16_t *)((((16 * a4) ^ 0x1C10) & 0xFFFFFFF0 | v58.val[0].i64[0])+ v48- 139)), vextq_s8(v56, v56, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a46 + 8 * ((2014 * ((v51 & 0xFFFFFFF0) == 16)) ^ a4)) - 4))();
}

void sub_1D0D8FB60()
{
  JUMPOUT(0x1D0D8FAE4);
}

uint64_t sub_1D0D8FB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  int v46;
  unsigned __int8 *v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  int v53;
  unint64_t v54;
  int v55;
  char *v56;
  unsigned __int8 v57;
  int v58;
  int v59;
  uint64_t v60;
  int v61;
  char *v62;
  char v63;
  unint64_t v64;
  int v65;
  unsigned __int8 v66;
  uint64_t v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  uint64_t v72;
  int v73;
  unsigned int v74;
  uint64_t v75;
  unsigned int v76;
  int v77;
  uint64_t v78;
  int v79;
  char *v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  char *v129;
  char *v130;
  int v131;
  char *v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  int v136;
  unsigned __int8 *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  char *v149;
  uint64_t v150;
  char *v151;
  int v152;
  uint64_t v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  unsigned int v158;
  int v159;
  int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  int v209;
  int v210;
  uint64_t v211;
  int v212;
  char *v213;
  int v214;
  unsigned int v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;

  v51 = (v46 + 1998801758) & 0x88DCB7DF;
  v52 = (uint64_t)*(&off_1E8EC5D70 + v46 - 795);
  v53 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v48 - 0xAEAB1E0EC55390DLL) ^ 0x85));
  HIDWORD(v54) = v53 ^ 0x2F;
  LODWORD(v54) = ((v51 - 81) ^ v53) << 24;
  v55 = (v54 >> 30) ^ 0x9F;
  v56 = (char *)*(&off_1E8EC5D70 + v46 - 703) - 8;
  HIDWORD(v54) = v56[*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553903) ^ 0xBFLL];
  LODWORD(v54) = (HIDWORD(v54) ^ 0x55555555) << 24;
  v57 = v54 >> 28;
  v58 = v55 << 16;
  v59 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553909) ^ 0x6FLL));
  HIDWORD(v54) = v59 ^ 0x2F;
  LODWORD(v54) = (v59 ^ 0x80) << 24;
  v60 = (uint64_t)*(&off_1E8EC5D70 + (v46 ^ 0x337));
  v61 = v57 | ((*(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553904) ^ 0xB7)) ^ 0x1D) << 8);
  v62 = (char *)*(&off_1E8EC5D70 + (v46 & 0x169E283F)) - 12;
  v63 = v62[*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553902) ^ 0xD8];
  v64 = ((*(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553900) ^ 0xC7)) ^ 0xFDLL) << 8) & 0xFFFFFFFF00FFFFFFLL | ((unint64_t)(v63 ^ 0xFAu) << 24);
  v65 = (((v54 >> 30) ^ 0x68) << 16) | ((*(unsigned __int8 *)(v60
                                                                             + (*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553908) ^ 0xDFLL)) ^ 0x3C) << 8);
  HIDWORD(v54) = v56[*(unsigned __int8 *)(v48 - 0xAEAB1E0EC5538FFLL) ^ 0xBCLL];
  LODWORD(v54) = (HIDWORD(v54) ^ 0x55555555) << 24;
  v66 = v54 >> 28;
  v67 = v66 ^ 0x68;
  HIDWORD(v54) = v56[*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553907) ^ 0x98];
  LODWORD(v54) = (HIDWORD(v54) ^ 0x55555555) << 24;
  v68 = v65 & 0xFFFFFF00 | ((v62[*(unsigned __int8 *)(v48 - 0xAEAB1E0EC55390ALL) ^ 0xAFLL] ^ 0x2A) << 24) | (v54 >> 28);
  v69 = v58 | ((*(unsigned __int8 *)(v60 + (*(unsigned __int8 *)(v48 - 0xAEAB1E0EC55390CLL) ^ 0x49)) ^ 0xB6) << 8) | ((v62[*v47 ^ 0xFELL] ^ 0xFFFFFFF3) << 24);
  HIDWORD(v54) = v56[*(unsigned __int8 *)(v48 - 0xAEAB1E0EC55390BLL) ^ 0xD0];
  LODWORD(v54) = (HIDWORD(v54) ^ 0x55555555) << 24;
  v70 = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553901) ^ 0xB6));
  LOBYTE(v56) = (v54 >> 28) ^ 0x3C;
  HIDWORD(v54) = v70 ^ 0x2F;
  LODWORD(v54) = (v70 ^ 0x80) << 24;
  v71 = v69 & 0xFFFFFF00 | v56;
  v72 = (v54 >> 30) ^ 0x21;
  LODWORD(v52) = *(unsigned __int8 *)(v52 + (*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553905) ^ 0xC8));
  HIDWORD(v54) = v52 ^ 0x2F;
  LODWORD(v54) = (v52 ^ 0x80) << 24;
  v73 = v62[*(unsigned __int8 *)(v48 - 0xAEAB1E0EC553906) ^ 0x18];
  v74 = (v64 | ((_DWORD)v72 << 16) | v67) ^ 0x75F49EF4;
  v75 = (uint64_t)*(&off_1E8EC5D70 + v46 - 793);
  v76 = v61 & 0xFF00FFFF | (((v54 >> 30) ^ 0x37) << 16) | ((v73 ^ 0xB5) << 24);
  v77 = (((unsigned __int16)((v64 | v67) ^ 0x9EF4) >> 8)
       - ((2 * (((v64 | (v72 << 16) | v67) ^ 0x75F49EF4) >> 8)) & 0x180)
       - 352575552) ^ *(_DWORD *)(v75 + 4 * (((unsigned __int16)((v64 | v67) ^ 0x9EF4) >> 8) ^ 0xF5));
  v78 = (uint64_t)*(&off_1E8EC5D70 + v46 - 846);
  v79 = *(_DWORD *)(v78 + 4 * (v63 ^ 0xE5u));
  HIDWORD(v54) = v79 ^ 1;
  LODWORD(v54) = v79 ^ 0x58BA67C0;
  LODWORD(v67) = v72 ^ 0xDD;
  v80 = (char *)*(&off_1E8EC5D70 + (v46 ^ 0x307)) - 4;
  LODWORD(v67) = (v54 >> 2) ^ *(_DWORD *)&v80[4 * v67] ^ (v77 - ((2 * v77) & 0x149369CA) + 172602597);
  v81 = v67 - ((2 * v67) & 0x32736D2E);
  v82 = (uint64_t)*(&off_1E8EC5D70 + (v46 ^ 0x32C));
  v256 = v71;
  v83 = *(_DWORD *)(v82 + 4 * (v66 ^ 0xD9u)) ^ v71 ^ (v81 + 423212695);
  v84 = v68;
  v254 = v76;
  v252 = v83 ^ v68 ^ 0x2789BBD4;
  v85 = v76 ^ 0xE6 ^ v252;
  v86 = *(_DWORD *)(v78 + 4 * (((v85 ^ v74) >> 24) ^ 0x21));
  HIDWORD(v54) = v86 ^ 1;
  LODWORD(v54) = v86 ^ 0x58BA67C0;
  v87 = ((v54 >> 2) - ((2 * (v54 >> 2)) & 0x32736D2E) + 423212695) ^ *(_DWORD *)(v82
                                                                               + 4
                                                                               * ((v85 ^ v74) ^ 0xDEu));
  HIDWORD(v250) = v85 ^ v74;
  v253 = v83;
  LODWORD(v250) = *(_DWORD *)(v75 + 4 * (((unsigned __int16)(v85 ^ v74) >> 8) ^ 0x1Eu)) ^ *(_DWORD *)&v80[4 * (((v85 ^ v74) >> 16) ^ 0x8F)] ^ v83 ^ ((((unsigned __int16)(v85 ^ v74) >> 8) ^ 0xEB) - ((2 * (((v85 ^ v74) >> 8) ^ 0x4BA6EB)) & 0x180) - 352575552) ^ (v87 + 172602597 + (~(2 * v87) | 0xEB6C9635) + 1);
  v88 = v250 ^ 0x76E748E2 ^ v83 ^ v68;
  v255 = v74;
  v89 = *(_DWORD *)(v78 + 4 * (((v88 ^ v74) >> 24) ^ 0xA2));
  HIDWORD(v54) = v89 ^ 1;
  LODWORD(v54) = v89 ^ 0x58BA67C0;
  v90 = v88 ^ v74 ^ 0xC84590C6;
  v91 = *(_DWORD *)(v75 + 4 * (BYTE1(v90) ^ 0xF5u)) ^ *(_DWORD *)&v80[4
                                                                      * (((v88 ^ v74) >> 16) ^ 0x6C)] ^ (BYTE1(v90) - ((v90 >> 7) & 0x180) - 352575552) ^ ((v54 >> 2) - ((2 * (v54 >> 2)) & 0x149369CA) + 172602597);
  HIDWORD(v248) = v250 ^ 0x76E748E2 ^ *(_DWORD *)(v82 + 4 * ((v88 ^ v74) ^ 0x83u)) ^ (v91 - ((2 * v91) & 0x32736D2E) + 423212695);
  LODWORD(v249) = v88 ^ v74;
  v92 = HIDWORD(v248) ^ 0x2789BBD4 ^ v88 ^ 0x8EDEEA78;
  v251 = v85;
  HIDWORD(v249) = v88;
  HIDWORD(v247) = v88 ^ v85;
  LODWORD(v248) = HIDWORD(v248) ^ 0x2789BBD4 ^ v88;
  v93 = v92 ^ v88 ^ v85;
  v94 = *(_DWORD *)(v78 + 4 * (((v93 ^ v90) >> 24) ^ 0x67));
  HIDWORD(v54) = v94 ^ 1;
  LODWORD(v54) = v94 ^ 0x58BA67C0;
  v95 = (v54 >> 2) ^ *(_DWORD *)(v75 + 4 * (((unsigned __int16)(v93 ^ v90) >> 8) ^ 0x97u)) ^ ((((unsigned __int16)(v93 ^ v90) >> 8) ^ 0x62) - ((2 * (((v93 ^ v90) >> 8) ^ 0xD8B62)) & 0x180) - 352575552);
  v96 = (v95 - ((2 * v95) & 0x32736D2E) + 423212695) ^ *(_DWORD *)(v82 + 4 * ((v93 ^ v90) ^ 0xE1u));
  v97 = HIDWORD(v248) ^ 0x2789BBD4 ^ *(_DWORD *)&v80[4 * (((v93 ^ v90 ^ 0x2142BA5) >> 16) ^ 0xB6)] ^ (v96 - ((2 * v96) & 0x149369CA) + 172602597);
  HIDWORD(v246) = v93 ^ v90;
  LODWORD(v247) = v93;
  HIDWORD(v245) = v97 ^ v92;
  v98 = v97 ^ v92 ^ 0x307C325C;
  LODWORD(v245) = v98 ^ v93 ^ 0x5EF1BA37;
  v99 = *(_DWORD *)(v78 + 4 * (((v245 ^ v93 ^ v90) >> 24) ^ 0xA4));
  HIDWORD(v54) = v99 ^ 1;
  LODWORD(v54) = v99 ^ 0x58BA67C0;
  v100 = ((v54 >> 2) - ((2 * (v54 >> 2)) & 0x32736D2E) + 423212695) ^ *(_DWORD *)(v82
                                                                                + 4
                                                                                * ((v245 ^ v93 ^ v90) ^ 0x18u));
  v101 = v245 ^ v93 ^ v90 ^ 0xCEE37B5D;
  HIDWORD(v244) = v245 ^ v93 ^ v90;
  LODWORD(v246) = v97;
  v102 = *(_DWORD *)&v80[4 * (BYTE6(v244) ^ 0xCA)] ^ *(_DWORD *)(v75 + 4 * (BYTE1(v101) ^ 0xF5u)) ^ v97 ^ (BYTE1(v101) - ((v101 >> 7) & 0x180) - 352575552) ^ 0xD5336FF8 ^ (v100 - ((2 * v100) & 0x149369CA) + 172602597);
  v103 = v102 ^ ((v93 ^ 0x5EF1BA37) - ((2 * (v93 ^ 0x5EF1BA37)) & 0xAA66DFF0) - 718049288);
  v104 = *(_DWORD *)(v78 + 4 * (((v103 ^ v101) >> 24) ^ 0x70));
  HIDWORD(v54) = v104 ^ 1;
  LODWORD(v54) = v104 ^ 0x58BA67C0;
  v105 = ((v54 >> 2) - ((2 * (v54 >> 2)) & 0x149369CA) + 172602597) ^ *(_DWORD *)&v80[4
                                                                                    * (((v103 ^ v101 ^ 0xF3443494) >> 16) ^ 0xE4)];
  v106 = (v105 - ((2 * v105) & 0x32736D2E) + 423212695) ^ *(_DWORD *)(v82
                                                                    + 4
                                                                    * ((v102 ^ ((v93 ^ 0x37)
                                                                                               - ((2 * (v93 ^ 0x37)) & 0xF0)
                                                                                               - 8) ^ v101) ^ 0x91u));
  LODWORD(v243) = v103 ^ v101;
  v107 = v103 ^ v101 ^ 0x1A89BBD4;
  v108 = (v106 - ((2 * v106) & 0xD5F83F80) - 352575552) ^ *(_DWORD *)(v75 + 4 * (BYTE1(v107) ^ 0xF5u));
  v109 = v102 ^ BYTE1(v107) ^ (v108 - ((2 * v108) & 0xAA66DFF0) - 718049288);
  HIDWORD(v243) = v103;
  LODWORD(v244) = v102;
  LODWORD(v242) = v102 ^ (v98 - ((2 * v98) & 0xAA66DFF0) - 718049288);
  HIDWORD(v241) = v109 ^ v242;
  v110 = v109 ^ v242 ^ 0xE6F58988;
  v111 = v110 ^ v103;
  v112 = v110 ^ v103 ^ v107;
  v113 = *(_DWORD *)(v78 + 4 * (HIBYTE(v112) ^ 0x43));
  HIDWORD(v54) = v113 ^ 1;
  LODWORD(v54) = v113 ^ 0x58BA67C0;
  v114 = *(_DWORD *)(v75 + 4 * (((unsigned __int16)(v112 ^ 0x7ABE) >> 8) ^ 0xF5u)) ^ *(_DWORD *)&v80[4 * (((v112 ^ 0x4D501F31) >> 16) ^ 0xE2)] ^ (((unsigned __int16)(v112 ^ 0x7ABE) >> 8) - (((v112 ^ 0x299B7ABE) >> 7) & 0x180) - 352575552) ^ ((v54 >> 2) - ((2 * (v54 >> 2)) & 0x149369CA) + 172602597);
  HIDWORD(v242) = v109;
  v115 = v109 ^ *(_DWORD *)(v82 + 4 * (v112 ^ 0xFBu)) ^ (v114 - ((2 * v114) & 0x32736D2E) + 423212695);
  HIDWORD(v239) = v115 ^ v110;
  v116 = v115 ^ v110 ^ 0x5BF36347;
  LODWORD(v241) = v111;
  LODWORD(v239) = v116 ^ v111;
  v117 = v116 ^ v111 ^ 0x2745D0FF;
  v118 = v117 ^ v112 ^ 0x299B7ABE;
  v119 = v118 ^ 0x3DCC6B2B;
  v120 = (((unsigned __int16)(v118 ^ 0x6B2B) >> 8) - (((v118 ^ 0x3DCC6B2B) >> 7) & 0x180) - 352575552) ^ *(_DWORD *)(v75 + 4 * (((unsigned __int16)(v118 ^ 0x6B2B) >> 8) ^ 0xF5u));
  v121 = (v120 - ((2 * v120) & 0x32736D2E) + 423212695) ^ *(_DWORD *)(v82 + 4 * (v118 ^ 0x6Eu));
  HIDWORD(v238) = v118;
  v122 = *(_DWORD *)(v78 + 4 * (HIBYTE(v118) ^ 0x57));
  HIDWORD(v54) = v122 ^ 1;
  LODWORD(v54) = v122 ^ 0x58BA67C0;
  v240 = __PAIR64__(v112, v115);
  LODWORD(v238) = (v54 >> 2) ^ *(_DWORD *)&v80[4 * (((v118 ^ 0x516EF336) >> 16) ^ 0x8B)] ^ v115 ^ (v121 - ((2 * v121) & 0x149369CA) + 172602597);
  HIDWORD(v237) = v238 ^ 0x930000ED ^ v116;
  LODWORD(v237) = HIDWORD(v237) ^ 0x8D06EA22 ^ v117;
  v123 = v237 ^ v118 ^ 0x3DCC6B2B;
  v124 = *(_DWORD *)(v78 + 4 * (HIBYTE(v123) ^ 0x39));
  HIDWORD(v54) = v124 ^ 1;
  LODWORD(v54) = v124 ^ 0x58BA67C0;
  HIDWORD(v236) = v123;
  v125 = ((unsigned __int16)(v123 ^ 0xAA41) >> 8);
  LODWORD(v62) = *(_DWORD *)(v82 + 4 * ((v237 ^ v119) ^ 4u)) ^ *(_DWORD *)(v75 + 4 * (v125 ^ 0xF5u)) ^ 0xF3C5A957 ^ (v54 >> 2);
  v126 = *(_DWORD *)&v80[4 * (((v237 ^ v119 ^ 0x9289BB39) >> 16) ^ 0x7E)] ^ v238 ^ 0x930000ED ^ v125 ^ 0x90E32BAB ^ ((_DWORD)v62 - ((2 * (_DWORD)v62) & 0x149369CA) + 172602597);
  LODWORD(v62) = (HIDWORD(v237) ^ 0x8D06EA22) - ((2 * (HIDWORD(v237) ^ 0x8D06EA22)) & 0x21C65756);
  v127 = v126 ^ (v117 - ((2 * v117) & 0x21C65756) - 1864160341);
  v128 = v127 ^ v123 ^ 0x53DEAA41;
  LODWORD(v78) = *(_DWORD *)(v78 + 4 * (HIBYTE(v128) ^ 0x44));
  HIDWORD(v54) = v78 ^ 1;
  LODWORD(v54) = v78 ^ 0x58BA67C0;
  LODWORD(v75) = *(_DWORD *)(v75 + 4 * (BYTE1(v128) ^ 0xFDu)) ^ *(_DWORD *)(v82
                                                                            + 4
                                                                            * ((v127 ^ v123 ^ 0x41) ^ 0xC4u)) ^ ((BYTE1(v128) ^ 8) - ((v128 >> 7) & 0x180) - 352575552) ^ ((v54 >> 2) - ((2 * (v54 >> 2)) & 0x32736D2E) + 423212695);
  HIDWORD(v235) = v128 ^ 0xBE882E0;
  LODWORD(v75) = (v75 - ((2 * v75) & 0x149369CA) + 172602597) ^ *(_DWORD *)&v80[4 * (BYTE2(v128) ^ 0x16)];
  v129 = (char *)*(&off_1E8EC5D70 + v46 - 766) - 8;
  v130 = (char *)*(&off_1E8EC5D70 + (v46 ^ 0x358)) - 12;
  v131 = v130[*(unsigned __int8 *)(v50 - 109) ^ 0xA5];
  HIDWORD(v54) = v131 ^ 0xE;
  LODWORD(v54) = (v131 ^ 0x40) << 24;
  v132 = (char *)*(&off_1E8EC5D70 + (v46 ^ 0x3AD)) - 12;
  v232 = v130;
  v234 = (uint64_t)*(&off_1E8EC5D70 + (v46 ^ 0x354));
  v133 = (v130[*(unsigned __int8 *)(v50 - 101) ^ 0x60] ^ 0x85) & 0xFFFF00FF | ((v129[*(unsigned __int8 *)(v50 - 103) ^ 5] ^ 0x63) << 16) | (((*(_BYTE *)(v234 + (*(unsigned __int8 *)(v50 - 102) ^ 4)) + (*(_BYTE *)(v50 - 102) ^ 0xB) + 118) ^ 0x33) << 8) | ((v132[*(unsigned __int8 *)(v50 - 104) ^ 0x1CLL] ^ 0xAAAAAAAA) << 24);
  v134 = (v130[*(unsigned __int8 *)(v50 - 97) ^ 0x7BLL] ^ 0x31) & 0xFFFF00FF | ((((*(_BYTE *)(v50 - 98) ^ 0xD0) + *(_BYTE *)(v234 + (*(unsigned __int8 *)(v50 - 98) ^ 0xDFLL)) + 118) ^ 0xE4) << 8) | ((v129[*(unsigned __int8 *)(v50 - 99) ^ 0xAALL] ^ 0x51) << 16) | ((v132[*(unsigned __int8 *)(v50 - 100) ^ 0x45] ^ 0x65) << 24);
  v233 = v129;
  LODWORD(v52) = (v130[*(unsigned __int8 *)(v50 - 105) ^ 0x28] ^ 0x44) & 0xFFFF00FF | ((((*(_BYTE *)(v50 - 106) ^ 0xAC) + *(_BYTE *)(v234 + (*(unsigned __int8 *)(v50 - 106) ^ 0xA3)) + 118) ^ 0xF6) << 8) | ((v132[*(unsigned __int8 *)(v50 - 108) ^ 0xB2] ^ 0x5D) << 24) | ((v129[*(unsigned __int8 *)(v50 - 107) ^ 0x27] ^ 7) << 16);
  LODWORD(v130) = (((((v54 >> 30) ^ 0xDB) >> 2) | (((v54 >> 30) ^ 0xDB) << 6)) | ((v129[*(unsigned __int8 *)(v50 - 111) ^ 0x7ALL] ^ 0x32) << 16) | ((v132[*(unsigned __int8 *)(v50 - 112) ^ 0x78] ^ 0x5F) << 24) | (((*(_BYTE *)(v234 + (*(unsigned __int8 *)(v50 - 110) ^ 0x5DLL)) + (*(_BYTE *)(v50 - 110) ^ 0x52) + 118) ^ 0x5D) << 8)) ^ 0x8AF70D7D;
  v135 = v134 ^ 0xB1D2DA26;
  HIDWORD(v231) = v49 + 214180929;
  v136 = v75 - ((2 * v75) & 0x21C65756) - 1864160341;
  HIDWORD(v230) = v51 - 1547088982;
  LODWORD(v230) = v51 ^ 0x6E3;
  HIDWORD(v229) = v51 ^ 0x617;
  HIDWORD(v228) = v126 ^ ((_DWORD)v62 - 1864160341);
  LODWORD(v229) = v51 ^ 0x682;
  LODWORD(v228) = v51 ^ 0x6F9;
  HIDWORD(v227) = (v46 + 1998801758) & 0x804C3109;
  LODWORD(v236) = v126;
  HIDWORD(v226) = v136 ^ v126;
  LODWORD(v227) = v51 ^ 0x692;
  LODWORD(v226) = v51 ^ 0x6B4;
  HIDWORD(v225) = v51 ^ 0x6A6;
  LODWORD(v225) = v51 ^ 0x630;
  *(_DWORD *)(v50 - 128) = v51;
  HIDWORD(v224) = v51 ^ 0x606;
  LODWORD(v235) = v127 ^ 0x626A2240;
  LODWORD(v231) = ((_DWORD)v62 - 1864160341) ^ 0x3DC8BA5D ^ v136;
  LODWORD(v224) = v231 ^ v127 ^ 0x626A2240;
  *(_QWORD *)(v50 - 192) = 7;
  v137 = *(unsigned __int8 **)(v50 - 120);
  v138 = v137[7];
  *(_QWORD *)(v50 - 176) = 12;
  LODWORD(v138) = v232[v138 ^ 0x41];
  v139 = v137[12] ^ 0x60;
  v140 = (((v51 - 1547088982) & 0x5C36AFEF) - 628) & 0x4B1A8AB9 ^ 0x4B1A8AB9;
  *(_QWORD *)(v50 - 168) = v140;
  *(_QWORD *)(v50 - 136) = 1;
  LODWORD(v139) = v132[v139] ^ 0xDE;
  LODWORD(v80) = v132[v137[v140] ^ 0xC1] ^ 0x6A;
  LODWORD(v140) = v129[v137[1] ^ 0x66] ^ 0xDE;
  *(_QWORD *)(v50 - 144) = 15;
  v141 = v137[15] ^ 0xE9;
  *(_QWORD *)(v50 - 160) = 11;
  LODWORD(v141) = v232[v141] ^ 0x93 | ((_DWORD)v139 << 24);
  LODWORD(v139) = v232[v137[11] ^ 0xC3];
  *(_QWORD *)(v50 - 184) = 0;
  v142 = ((_DWORD)v140 << 16) | ((v132[*v137 ^ 0x30] ^ 0xEEEEEEEE) << 24);
  LOBYTE(v140) = v139 ^ 0x59;
  LODWORD(v139) = v139 ^ 0x59 | ((_DWORD)v80 << 24);
  *(_QWORD *)(v50 - 152) = 2;
  v143 = v142 & 0xFFFF00FF | (((*(_BYTE *)(v234 + (v137[2] ^ 0xC0)) + (v137[2] ^ 0xCF) + 118) ^ 0xF9) << 8);
  *(_QWORD *)(v50 - 224) = 4;
  LODWORD(v80) = v132[v137[4] ^ 0xFCLL] ^ 0x50;
  LODWORD(v138) = v138 ^ 0x43;
  *(_QWORD *)(v50 - 240) = 9;
  v144 = (v233[v137[9] ^ 0x5DLL] ^ 0xD) << 16;
  *(_QWORD *)(v50 - 208) = 10;
  LODWORD(v139) = v144 & 0xFFFF00FF | (((*(_BYTE *)(v234 + (v137[10] ^ 0xD5))
                                                        + (v137[10] ^ 0xDA)
                                                        + 118) ^ 0xCF) << 8) | v139;
  *(_QWORD *)(v50 - 200) = 14;
  LODWORD(v141) = v141 & 0xFFFF00FF | ((*(_BYTE *)(v234 + (v137[14] ^ 0xE4)) + (v137[14] ^ 0xEB) - 10) << 8);
  *(_QWORD *)(v50 - 232) = 3;
  LODWORD(v62) = v232[v137[3] ^ 0xDCLL] ^ 0x87;
  *(_DWORD *)(v50 - 216) = 1260030649;
  *(_DWORD *)(v50 - 212) = 1260030653;
  *(_QWORD *)(v50 - 256) = 13;
  LODWORD(v141) = v141 | ((v233[v137[13] ^ 0x92] ^ 0x30) << 16);
  v145 = v139 - 2 * (v139 & 0x419433FF ^ v140 & 0x18);
  LOBYTE(v139) = *(_BYTE *)(v234 + (v137[6] ^ 0x4FLL)) + (v137[6] ^ 0x40);
  *(_QWORD *)(v50 - 248) = 5;
  LODWORD(v139) = ((v233[v137[5] ^ 0xA9] ^ 0xE3) << 16) | (((v139 + 118) ^ 0xB7) << 8) | v138 | ((_DWORD)v80 << 24);
  v146 = v130 ^ v256 ^ ((v62 | v143)
                                    + 860795972
                                    - 2 * ((v62 | v143) & 0x334EB45F ^ v62 & 0x1B));
  LODWORD(v140) = v52 ^ 0x59F1F62A ^ v84 ^ (v139 - 2 * (v139 & 0x60484F9F ^ v138 & 0xC) - 532131949);
  LODWORD(v80) = v135 ^ v255 ^ (v141 - ((2 * v141) & 0x10D6C73E) + 141255583);
  v147 = v133 ^ 0x782D8A5E ^ v254 ^ (v145 - 1047251993);
  LODWORD(v138) = (v130 ^ v256 ^ ((v62 | v143)
                                                                  + 68
                                                                  - 2
                                                                  * ((v62 | v143) & 0x5F ^ v62 & 0x1B)));
  v148 = (v135 ^ v255 ^ (v141 - ((2 * v141) & 0x3E) - 97));
  v149 = (char *)*(&off_1E8EC5D70 + (int)v229) - 8;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v147) ^ 0x3F)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v150 = (uint64_t)*(&off_1E8EC5D70 + (int)v230);
  LODWORD(v139) = (v54 >> 1) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v80) ^ 0x34u)) ^ ((BYTE2(v80) ^ 0x68)
                                                                               - 997446034
                                                                               - 2
                                                                               * ((BYTE2(v80) ^ 0x68) & 0x7E ^ (v80 >> 16) & 0x10));
  v151 = (char *)*(&off_1E8EC5D70 + SHIDWORD(v229)) - 4;
  LODWORD(v52) = *(_DWORD *)&v151[4 * (v147 ^ 0xC6)] ^ *(_DWORD *)(v150 + 4 * (BYTE2(v146) ^ 0x89u)) ^ ((BYTE2(v146) ^ 0xD5) - 997446034 - ((2 * (HIWORD(v146) ^ 0x6CD5)) & 0xDC)) ^ ((v147 ^ 0xAB) + 1869721935 + ((2 * (v147 ^ 0xAB) + 254) & 0x19E ^ 0xDFDA7BFF));
  LODWORD(v62) = *(_DWORD *)(v150 + 4 * (BYTE2(v140) ^ 0x8Cu)) ^ *(_DWORD *)&v151[4 * (v148 ^ 0xB6)] ^ ((v148 ^ 0xDB) + 1869721934 - ((2 * (v148 ^ 0xDB) + 842892542) & 0x2025859E)) ^ ((BYTE2(v140) ^ 0xD0) - 997446034 - ((2 * (WORD1(v140) ^ 0xC8D0)) & 0xDC));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v140) ^ 0xC8)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v152 = (_DWORD)v62 - 1880988761 - ((2 * (_DWORD)v62) & 0x1FC4C74E);
  LODWORD(v138) = ((BYTE2(v147) ^ 0xAD) - 997446034 - ((2 * (HIWORD(v147) ^ 0x3FAD)) & 0xDC)) ^ *(_DWORD *)&v151[4 * (v138 ^ 0x1C)] ^ ((v138 ^ 0x71) + 1869721935 + ((2 * (v138 ^ 0x71) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ (v54 >> 1);
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v146) ^ 0x6C)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v62) = v54 >> 1;
  LODWORD(v138) = v138 ^ *(_DWORD *)(v150 + 4 * (BYTE2(v147) ^ 0xF1u));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v80 >> 24) ^ 0xB7)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v82) = v138 - 1880988761 - ((2 * v138) & 0x1FC4C74E);
  v153 = (uint64_t)*(&off_1E8EC5D70 + *(_DWORD *)(v50 - 128) - 1687);
  v154 = (v140 ^ 0x10) + 1869721935 + ((2 * (v140 ^ 0x10) + 254) & 0x19E ^ 0xDFDA7BFF);
  LODWORD(v139) = *(_DWORD *)(v153 + 4 * (BYTE1(v146) ^ 0xDEu)) ^ v251 ^ *(_DWORD *)&v151[4
                                                                                          * (v140 ^ 0x7D)] ^ (v139 - 1880988761 - ((2 * v139) & 0x1FC4C74E));
  LODWORD(v138) = (v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E)) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v140) ^ 0x2Fu)) ^ (v54 >> 1);
  v155 = v138 - ((2 * v138) & 0xFCFBE0FA);
  LODWORD(v138) = *(_DWORD *)(v153 + 4 * (BYTE1(v147) ^ 0x29u)) ^ v253 ^ v62 ^ v152;
  LODWORD(v80) = *(_DWORD *)(v153 + 4 * (BYTE1(v80) ^ 0x66u)) ^ v252 ^ v82;
  LODWORD(v140) = v139 ^ v154;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v139 ^ ~v154) >> 24)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v156 = v54 >> 1;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v138) ^ 0x91)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v141) = v54 >> 1;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v80 >> 24) ^ 0xA3)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v157 = v141 ^ ((BYTE2(v80) ^ 0xAC)
               - 997446034
               - 2 * (((v80 >> 16) ^ 0xA3AC) & 0x6F ^ (v80 >> 16) & 1)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v80) ^ 0xF0u));
  LODWORD(v52) = (v54 >> 1) ^ *(_DWORD *)&v151[4 * (v138 ^ 0x7B)] ^ *(_DWORD *)(v150
                                                                                               + 4
                                                                                               * (BYTE2(v140) ^ 0x15u)) ^ ((BYTE2(v140) ^ 0x49) - 997446034 - ((2 * (WORD1(v140) ^ 0xFF49)) & 0xDC)) ^ ((v138 ^ 0x16) + 1869721934 - ((2 * (v138 ^ 0x16) + 842892542) & 0x2025859E));
  LODWORD(v141) = v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E);
  v158 = (v155 + 2122182781) ^ HIDWORD(v250);
  v159 = (v157 - 1880988761 - ((2 * v157) & 0x1FC4C74E)) ^ *(_DWORD *)(v153
                                                                     + 4
                                                                     * (((unsigned __int16)(v139 ^ v154) >> 8) ^ 0x2Cu));
  LODWORD(v139) = v156 ^ *(_DWORD *)&v151[4 * (v80 ^ 3)] ^ ((v80 ^ 0x6E)
                                                                           + 1869721934
                                                                           - ((2 * (v80 ^ 0x6E)
                                                                             + 842892542) & 0x2025859E)) ^ ((BYTE2(v158) ^ 0x44) - 997446034 - 2 * ((BYTE2(v158) ^ 0x44) & 0x7F ^ HIWORD(v158) & 0x11)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v158) ^ 0x18u));
  LODWORD(v52) = *(_DWORD *)(v150 + 4 * (BYTE2(v138) ^ 0x2Eu)) ^ ((BYTE2(v138) ^ 0x72)
                                                                  - 997446034
                                                                  - 2
                                                                  * ((WORD1(v138) ^ 0x9172) & 0x6F ^ WORD1(v138) & 1));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v158) ^ 0x10)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v52) = ((v140 ^ 0xFC)
                + 1869721935
                + ((2 * (v140 ^ 0xFC) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ *(_DWORD *)(v153
                                                                                                 + 4
                                                                                                 * (BYTE1(v80) ^ 0xBDu)) ^ *(_DWORD *)&v151[4 * (v140 ^ 0x91)] ^ (v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E)) ^ (v54 >> 1);
  LODWORD(v140) = ((v158 ^ 0x30) - 1726037377) ^ v250 ^ *(_DWORD *)&v151[4
                                                                                        * (v158 ^ 0x5D)] ^ (v159 - 699207985 - ((2 * v159) & 0xACA5DD9E));
  LODWORD(v138) = *(_DWORD *)(v153 + 4 * (BYTE1(v138) ^ 0x57u)) ^ HIDWORD(v247) ^ (v139
                                                                                   - 1880988761
                                                                                   - ((2 * v139) & 0x1FC4C74E));
  LODWORD(v80) = (v52 - ((2 * v52) & 0xAF192B36) - 678652517) ^ v249;
  LODWORD(v141) = *(_DWORD *)(v153 + 4 * (BYTE1(v158) ^ 0x6Bu)) ^ v88 ^ v141;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v80 >> 24) ^ 0x3A)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v52) = ((v141 ^ 0xA1)
                + 1869721934
                - ((2 * (v141 ^ 0xA1) + 842892542) & 0x2025859E)) ^ *(_DWORD *)&v151[4 * (v141 ^ 0xCC)];
  LODWORD(v139) = *(_DWORD *)(v150 + 4 * (BYTE2(v140) ^ 0xDBu)) ^ ((BYTE2(v140) ^ 0x87)
                                                                   - 997446034
                                                                   - ((2 * (WORD1(v140) ^ 0x3A87)) & 0xDC)) ^ (v54 >> 1);
  LODWORD(v52) = (v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E)) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v140) ^ 0xDEu));
  v160 = (((v158 ^ 0x30) + 127) ^ v250 ^ v151[4 * (v158 ^ 0x5D)] ^ (v159 - 49 - ((2 * v159) & 0x9E)));
  v161 = ((v160 ^ 0x9E) + 1869721934 - ((2 * (v160 ^ 0x9E) + 842892542) & 0x2025859E)) ^ *(_DWORD *)&v151[4 * (v160 ^ 0xF3)];
  LODWORD(v139) = (v139 - 1880988761 - ((2 * v139) & 0x1FC4C74E)) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v141) ^ 0x57u));
  LODWORD(v62) = ((v138 ^ 0x740CBC3A) >> 16);
  LODWORD(v82) = (_DWORD)v62 - 997446034 - (((v138 ^ 0x740CBC3A) >> 15) & 0xDC);
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v138) ^ 0x37)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v162 = v54 >> 1;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v140) ^ 0x3A)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v140) = *(_DWORD *)(v153 + 4 * ((unsigned __int16)(v138 ^ 0xBC3A) >> 8)) ^ BYTE2(v141) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v141) ^ 0xF6u)) ^ (v54 >> 1);
  LODWORD(v140) = ((v80 ^ 0x8B) - 1726037377) ^ HIDWORD(v248) ^ *(_DWORD *)&v151[4
                                                                                                * (v80 ^ 0xE6)] ^ ((v140 ^ 0x4B6E4D63) - 699207985 - 2 * ((v140 ^ 0x4B6E4D63) & 0x5652EEDF ^ v140 & 0x10));
  LODWORD(v138) = ((v138 ^ 0x3A) - 1726037377) ^ HIDWORD(v246) ^ *(_DWORD *)&v151[4
                                                                                                 * (v138 ^ 0x57)] ^ (v139 - 699207985 - ((2 * v139) & 0xACA5DD9E));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v141) ^ 0x7C)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v52) = *(_DWORD *)(v150 + 4 * (BYTE2(v80) ^ 0xAu)) ^ v247 ^ BYTE2(v80) ^ v162 ^ (v52
                                                                                           - 997446034
                                                                                           - ((2 * v52) & 0x89185CDC));
  LODWORD(v141) = v52 ^ 0xFA64A595;
  v163 = *(_DWORD *)(v153 + 4 * (BYTE1(v80) ^ 0x75u)) ^ v248 ^ v82 ^ *(_DWORD *)(v150
                                                                                 + 4 * (v62 ^ 0x5C)) ^ (v54 >> 1) ^ (v161 - 1880988761 - ((2 * v161) & 0x1FC4C74E));
  LODWORD(v139) = ((v52 ^ 0x95) + 1869721935 + ((2 * (v52 ^ 0xFA64A595) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ *(_DWORD *)&v151[4 * (v52 ^ 0xF8)];
  v164 = v139 - 1880988761 - ((2 * v139) & 0x1FC4C74E);
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v140) ^ 0x5B)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v139) = (v54 >> 1) ^ ((v138 ^ 0x72)
                              + 1869721934
                              - ((2 * (v138 ^ 0x72) + 842892542) & 0x2025859E));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v138) ^ 0x28)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v165 = v54 >> 1;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v52) ^ 0xB9)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v52) = v54 >> 1;
  LODWORD(v139) = v139 ^ *(_DWORD *)&v151[4 * (v138 ^ 0x1F)];
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v163) ^ 0xB4)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v52) = v52 ^ *(_DWORD *)&v151[4 * (v163 ^ 0x8B)] ^ ((v163 ^ 0xE6)
                                                                             + 1869721934
                                                                             - ((2 * (v163 ^ 0xE6)
                                                                               + 842892542) & 0x2025859E));
  v166 = BYTE2(v140) ^ 0x95;
  v167 = v166 - 997446034 - ((2 * (WORD1(v140) ^ 0x5B95)) & 0xDC);
  v168 = v140;
  v169 = (v140 ^ 0xF4) + 1869721935 + ((2 * (v140 ^ 0xF4) + 254) & 0x19E ^ 0xDFDA7BFF);
  LODWORD(v80) = ((BYTE2(v138) ^ 0x14) - 997446034 - ((2 * (WORD1(v138) ^ 0x2814)) & 0xDC)) ^ v245 ^ *(_DWORD *)(v153 + 4 * (BYTE1(v140) ^ 0x1Fu)) ^ (v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v138) ^ 0x48u));
  LODWORD(v140) = *(_DWORD *)(v153 + 4 * BYTE1(v141)) ^ v246 ^ ((BYTE2(v163) ^ 0x59)
                                                                - 997446034
                                                                - ((2 * (HIWORD(v163) ^ 0xB459)) & 0xDC)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v163) ^ 5u)) ^ (v139 - 1880988761 - ((2 * v139) & 0x1FC4C74E));
  LODWORD(v139) = (BYTE2(v141) - 997446034 - ((v141 >> 15) & 0xDC)) ^ HIDWORD(v245) ^ ((v54 >> 1) - 1880988761 - ((2 * (v54 >> 1)) & 0x1FC4C74E)) ^ *(_DWORD *)&v151[4 * (v168 ^ 0x99)] ^ v169 ^ *(_DWORD *)(v153 + 4 * (BYTE1(v138) ^ 0x12u));
  LODWORD(v138) = *(_DWORD *)(v153 + 4 * (BYTE1(v163) ^ 0x34u)) ^ HIDWORD(v244) ^ *(_DWORD *)(v150
                                                                                              + 4 * (v166 ^ 0x5Cu)) ^ v164 ^ v167 ^ v165;
  v170 = v139 ^ *(_DWORD *)(v150 + 4 * (BYTE2(v141) ^ 0x5Cu));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v138) ^ 0xEB)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v257 = (v54 >> 1) - 1880988761 - ((2 * (v54 >> 1)) & 0x1FC4C74E);
  v171 = ((BYTE2(v170) ^ 0x81) - 997446034 - ((v170 >> 15) & 0xDC)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v170) ^ 0xDDu));
  v172 = ((v170 ^ 0x51) + 1869721935 + ((2 * (v170 ^ 0x51) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ *(_DWORD *)&v151[4 * (v170 ^ 0x3C)];
  v173 = *(_DWORD *)(v150 + 4 * (BYTE2(v80) ^ 0xDBu)) ^ ((BYTE2(v80) ^ 0x87)
                                                         - 997446034
                                                         + (~(2 * ((v80 >> 16) ^ 0x7787)) | 0xFFFFFF23)
                                                         + 1);
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v170) ^ 0x14)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v62) = v54 >> 1;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v140) ^ 0x9A)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v139) = *(_DWORD *)(v150 + 4 * (((v138 ^ 0xA87CE98B) >> 16) ^ 0x5Cu)) ^ ((v138 ^ 0xA87CE98B) >> 16) ^ (v172 - 997446034 - ((2 * v172) & 0x89185CDC));
  v174 = ((v138 ^ 0x8B) + 1869721934 - ((2 * (v138 ^ 0x8B) + 842892542) & 0x2025859E)) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v80) ^ 0xDEu)) ^ *(_DWORD *)&v151[4 * (v138 ^ 0xE6)] ^ (v171 - 1880988761 - ((2 * v171) & 0x1FC4C74E)) ^ (v54 >> 1);
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v80 >> 24) ^ 0x77)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v80) = *(_DWORD *)(v153 + 4 * (BYTE1(v170) ^ 0x34u)) ^ v243 ^ ((BYTE2(v140) ^ 0xE9)
                                                                         - 997446034
                                                                         - ((2 * (WORD1(v140) ^ 0x9AE9)) & 0xDC)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v140) ^ 0xB5u)) ^ ((v80 ^ 0x9E) + 1869721935 + ((2 * (v80 ^ 0x9E) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ *(_DWORD *)&v151[4 * (v80 ^ 0xF3)] ^ v257;
  LODWORD(v52) = *(_DWORD *)(v153 + 4 * (BYTE1(v138) ^ 0xBu)) ^ v242 ^ ((v140 ^ 0xA8)
                                                                        + 1869721934
                                                                        - ((2 * (v140 ^ 0xA8)
                                                                          + 842892542) & 0x2025859E)) ^ *(_DWORD *)&v151[4 * (v140 ^ 0xC5)] ^ v62 ^ (v173 - 1880988761 - ((2 * v173) & 0x1FC4C74E));
  LODWORD(v140) = *(_DWORD *)(v153 + 4 * (BYTE1(v140) ^ 0x2Du)) ^ HIDWORD(v243) ^ (v54 >> 1) ^ (v139
                                                                                                - 1880988761
                                                                                                - ((2 * v139) & 0x1FC4C74E));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v52) ^ 0x6D)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v175 = v54 >> 1;
  LODWORD(v141) = (v174 - 718049288 - ((2 * v174) & 0xAA66DFF0)) ^ v244;
  v176 = *(_DWORD *)&v149[4 * (BYTE3(v141) ^ 0xFD)];
  v177 = *(_DWORD *)(v150 + 4 * (((v52 ^ 0x2E0E654A) >> 16) ^ 0x5Cu)) ^ (v176 << 31) ^ (v176 >> 1) ^ (((v52 ^ 0x2E0E654A) >> 16) - 997446034 - (((v52 ^ 0x2E0E654A) >> 15) & 0xDC)) ^ 0x58F92357;
  LODWORD(v139) = ((v52 ^ 0x4A) + 1869721935 + ((2 * (v52 ^ 0x2E0E654A) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ *(_DWORD *)&v151[4 * (v52 ^ 0x27)];
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v140) ^ 0xAE)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v178 = v177 - 1880988761 - ((2 * v177) & 0x1FC4C74E);
  v179 = (v54 >> 1) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v141) ^ 0xA4u)) ^ (v139 - 1880988761 - ((2 * v139) & 0x1FC4C74E));
  v180 = v179 - 997446034 - ((2 * v179) & 0x89185CDC);
  v181 = *(_DWORD *)(v150 + 4 * (BYTE2(v140) ^ 0x3Au)) ^ v175 ^ ((v141 ^ 0x20)
                                                                 + 1869721935
                                                                 + ((2 * (v141 ^ 0x20) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ *(_DWORD *)&v151[4 * (v141 ^ 0x4D)] ^ ((BYTE2(v140) ^ 0x66) - 997446034 - 2 * ((BYTE2(v140) ^ 0x66) & 0x7E ^ WORD1(v140) & 0x10));
  LODWORD(v138) = ((v140 ^ 0xB3)
                 + 687941159
                 + ((2 * (v140 ^ 0xB3) + 254) & 0x34E ^ 0xEDFB7BFF)) ^ *(_DWORD *)(v153
                                                                                                  + 4 * (BYTE1(v52) ^ 0x65u));
  LODWORD(v138) = (v138 - 699207985 - ((2 * v138) & 0xACA5DD9E)) ^ *(_DWORD *)&v151[4 * (v140 ^ 0xDE)];
  v182 = *(_DWORD *)(v150 + 4 * (BYTE2(v141) ^ 0x40u)) ^ ((BYTE2(v141) ^ 0x1C)
                                                          - 997446034
                                                          - ((2 * (WORD1(v141) ^ 0xFD1C)) & 0xDC));
  v183 = (v182 ^ 0xD9E215AF ^ -(v182 ^ 0xD9E215AF) ^ ((v182 ^ v138 ^ 0x431D28D3) + (v138 ^ 0x6500C283) + 1))
       + (v138 ^ 0x6500C283);
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v80 ^ 0x3F162902) >> 24)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v138) = ((v80 ^ 0x3F162902) >> 16) ^ v241 ^ *(_DWORD *)(v150 + 4 * (((v80 ^ 0x3F162902) >> 16) ^ 0x5Cu)) ^ v180;
  v184 = (v54 >> 1) ^ HIDWORD(v240) ^ v183;
  LODWORD(v141) = *(_DWORD *)(v153 + 4 * (BYTE1(v80) ^ 0xCBu)) ^ HIDWORD(v241) ^ (v181
                                                                                  - 1880988761
                                                                                  - ((2 * v181) & 0x1FC4C74E));
  v185 = *(_DWORD *)(v153 + 4 * (BYTE1(v140) ^ 0x7Cu)) ^ HIDWORD(v242) ^ ((v80 ^ 2)
                                                                          + 1869721934
                                                                          - ((2 * (v80 ^ 2) + 842892542) & 0x2025859E)) ^ *(_DWORD *)&v151[4 * (v80 ^ 0x6F)] ^ v178;
  v186 = ((BYTE2(v185) ^ 0xE9) - 997446034 - ((2 * (HIWORD(v185) ^ 0xB8E9)) & 0xDC)) ^ *(_DWORD *)(v150
                                                                                                 + 4
                                                                                                 * (BYTE2(v185) ^ 0xB5u));
  LODWORD(v140) = v186 - 1880988761 - ((2 * v186) & 0x1FC4C74E);
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v138) ^ 0x9D)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v187 = v54 >> 1;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v141) ^ 0x61)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v188 = *(_DWORD *)&v151[4 * (v185 ^ 0xC5)] ^ *(_DWORD *)(v150 + 4 * (BYTE2(v138) ^ 0x28u)) ^ ((v185 ^ 0xA8) + 1869721935 + ((2 * (v185 ^ 0xA8) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ ((BYTE2(v138) ^ 0x74) - 997446034 - ((2 * (WORD1(v138) ^ 0x9D74)) & 0xDC)) ^ (v54 >> 1);
  LODWORD(v52) = v187 ^ ((BYTE2(v184) ^ 0xE6) - 997446034 - 2 * ((BYTE2(v184) ^ 0xE6) & 0x7F ^ HIWORD(v184) & 0x11)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v184) ^ 0xBAu));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v185) ^ 0xB8)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v139) = ((BYTE2(v141) ^ 8) - 997446034 - ((2 * (WORD1(v141) ^ 0x6108)) & 0xDC)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v141) ^ 0x54u)) ^ *(_DWORD *)&v151[4 * (v184 ^ 0x29)] ^ ((v184 ^ 0x44) + 1869721935 + ((2 * (v184 ^ 0x44) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ (v54 >> 1);
  v189 = *(_DWORD *)&v149[4 * (HIBYTE(v184) ^ 0xB0)];
  v190 = *(_DWORD *)(v153 + 4 * (BYTE1(v184) ^ 0xDDu)) ^ HIDWORD(v239) ^ (v188 - 1880988761 - ((2 * v188) & 0x1FC4C74E));
  HIDWORD(v54) = v189;
  LODWORD(v54) = v189 ^ 0xB1F246AE;
  LODWORD(v80) = *(_DWORD *)(v153 + 4 * (BYTE1(v138) ^ 0xBDu)) ^ v240 ^ (v139 - 1880988761 - ((2 * v139) & 0x1FC4C74E));
  LODWORD(v140) = *(_DWORD *)(v153 + 4 * (BYTE1(v141) ^ 0x8Fu)) ^ HIDWORD(v238) ^ *(_DWORD *)&v151[4 * (v138 ^ 0xB4)] ^ ((v138 ^ 0xD9) + 1869721935 + ((2 * (v138 ^ 0xD9) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ (v54 >> 1) ^ v140;
  v191 = ((v141 ^ 0x85) + 1869721935 + ((2 * (v141 ^ 0x85) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ v239 ^ *(_DWORD *)&v151[4 * (v141 ^ 0xE8)] ^ *(_DWORD *)(v153 + 4 * (BYTE1(v185) ^ 0x2Du)) ^ (v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E));
  v192 = ((BYTE2(v191) ^ 0x66) - 997446034 - ((2 * (HIWORD(v191) ^ 0xAE66)) & 0xDC)) ^ *(_DWORD *)(v150
                                                                                                 + 4
                                                                                                 * (BYTE2(v191) ^ 0x3Au));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (BYTE3(v140) ^ 0x18)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v141) = BYTE2(v80);
  LODWORD(v138) = ((v54 >> 1) - 997446034 - ((2 * (v54 >> 1)) & 0x89185CDC)) ^ *(_DWORD *)(v150
                                                                                         + 4 * (BYTE2(v80) ^ 0x40u));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v80 >> 24) ^ 0xEF)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v52) = (v54 >> 1) ^ *(_DWORD *)&v151[4 * (v140 ^ 0x90)] ^ ((v140 ^ 0xFD)
                                                                                    + 1869721935
                                                                                    + ((2
                                                                                      * (v140 ^ 0xFD)
                                                                                      + 254) & 0x19E ^ 0xDFDA7BFF));
  v193 = v192 - 1880988761 - ((2 * v192) & 0x1FC4C74E);
  v194 = v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E);
  LODWORD(v52) = *(_DWORD *)&v151[4 * (v190 ^ 0x27)] ^ ((v190 ^ 0x4A)
                                                                       + 1869721935
                                                                       + ((2 * (v190 ^ 0x4A) + 254) & 0x19E ^ 0xDFDA7BFF));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v191) ^ 0xAE)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v52) = (v54 >> 1) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v140) ^ 0xFu)) ^ (v52
                                                                              - 997446034
                                                                              - ((2 * v52) & 0x89185CDC));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v190) ^ 0xDC)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v82) = v138 - 1880988761 - ((2 * v138) & 0x1FC4C74E);
  LODWORD(v138) = ((BYTE2(v190) ^ 0xE) - 997446034 - 2 * ((HIWORD(v190) ^ 0xDC0E) & 0x6F ^ HIWORD(v190) & 1)) ^ v238 ^ *(_DWORD *)(v153 + 4 * (BYTE1(v191) ^ 0x7Cu)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v190) ^ 0x52u)) ^ v194;
  v195 = *(_DWORD *)(v153 + 4 * (BYTE1(v140) ^ 0x1Bu)) ^ HIDWORD(v237) ^ *(_DWORD *)&v151[4
                                                                                          * (v80 ^ 0x4D)] ^ ((v80 ^ 0x20) + 1869721935 + ((2 * (v80 ^ 0x20) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ (v54 >> 1) ^ v193;
  v196 = ((v191 ^ 0xB3) + 1869721935 + ((2 * (v191 ^ 0xB3) + 254) & 0x19E ^ 0xDFDA7BFF)) ^ HIDWORD(v236) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v190) ^ 0x65u)) ^ *(_DWORD *)&v151[4 * (v191 ^ 0xDE)] ^ v82;
  LODWORD(v80) = *(_DWORD *)(v153 + 4 * (BYTE1(v80) ^ 0xA4u)) ^ v237 ^ (v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E));
  v197 = (v80 ^ BYTE2(v140));
  LOBYTE(v190) = v196 ^ v141;
  v198 = v196 ^ v141 ^ 0x7641388B;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * HIBYTE(v198)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v199 = v54 >> 1;
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v138 ^ 0xF7E9CFA8) >> 24)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  v200 = v54 >> 1;
  LODWORD(v140) = (BYTE2(v198) - 997446034 - ((v198 >> 15) & 0xDC)) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v198) ^ 0x5Cu));
  HIDWORD(v54) = *(_DWORD *)&v149[4 * ((v80 >> 24) ^ 0xE7)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v141) = v54 >> 1;
  v201 = v199 ^ *(_DWORD *)&v151[4 * (v197 ^ 0x18)] ^ (((v138 ^ 0xF7E9CFA8) >> 16)
                                                     - 997446034
                                                     - (((v138 ^ 0xF7E9CFA8) >> 15) & 0xDC)) ^ *(_DWORD *)(v150 + 4 * (((v138 ^ 0xF7E9CFA8) >> 16) ^ 0x5Cu)) ^ ((v197 ^ 0x75) + 1869721934 - ((2 * (v197 ^ 0x75) + 842892542) & 0x2025859E));
  v202 = (v201 - 1880988761 - ((2 * v201) & 0x1FC4C74E)) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v195) ^ 0xECu));
  LODWORD(v52) = v200 ^ *(_DWORD *)(v150 + 4 * (BYTE2(v195) ^ 0xA7u)) ^ ((BYTE2(v195) ^ 0xFB)
                                                                         - 997446034
                                                                         - ((2 * (HIWORD(v195) ^ 0x57FB)) & 0xDC)) ^ (v198 + 1869721934 - ((2 * v198 + 842892542) & 0x2025859E)) ^ *(_DWORD *)&v151[4 * (v190 ^ 0xE6)];
  HIDWORD(v54) = *(_DWORD *)&v149[4 * (HIBYTE(v195) ^ 0x57)];
  LODWORD(v54) = HIDWORD(v54) ^ 0xB1F246AE;
  LODWORD(v52) = (v52 - 1880988761 - ((2 * v52) & 0x1FC4C74E)) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v80) ^ 0x6Du));
  LODWORD(v149) = ((v138 ^ 0xA8)
                 + 1869721934
                 - ((2 * (v138 ^ 0xA8) + 842892542) & 0x2025859E)) ^ ((BYTE2(v80) ^ 0x31)
                                                                                     - 997446034
                                                                                     - ((2
                                                                                       * ((v80 >> 16) ^ 0xE731)) & 0xDC)) ^ *(_DWORD *)&v151[4 * (v138 ^ 0xC5)] ^ (v54 >> 1) ^ *(_DWORD *)(v150 + 4 * (BYTE2(v80) ^ 0x6Du));
  v203 = *(_DWORD *)&v151[4 * (v195 ^ 0x42)];
  v204 = HIDWORD(v228) ^ *(_DWORD *)(v153 + 4 * (BYTE1(v196) ^ 0xDAu)) ^ ((_DWORD)v149
                                                                          - 1880988761
                                                                          - ((2 * (_DWORD)v149) & 0x1FC4C74E));
  LODWORD(v149) = (v52 - 1864160341 - ((2 * v52) & 0x21C65756)) ^ v236;
  LODWORD(v151) = v202 + 634882657 - ((2 * v202) & 0x4BAF14C2);
  LODWORD(v80) = *(_DWORD *)(v153 + 4 * (BYTE1(v138) ^ 0x2Du)) ^ v235 ^ ((v195 ^ 0x2F)
                                                                         + 1869721934
                                                                         - ((2 * (v195 ^ 0x2F)
                                                                           + 842892542) & 0x2025859E)) ^ v141 ^ v203 ^ (v140 - 1880988761 - ((2 * v140) & 0x1FC4C74E));
  BYTE2(v138) = BYTE2(v204) ^ 0x8C;
  v205 = *(unsigned int *)(v50 - 128);
  v206 = (char *)*(&off_1E8EC5D70 + (int)v205 - 1633) - 12;
  v207 = (char *)*(&off_1E8EC5D70 + SHIDWORD(v227)) - 8;
  v208 = (uint64_t)*(&off_1E8EC5D70 + (int)v227);
  v209 = (*(_DWORD *)(v208 + 4 * (BYTE2(v149) ^ 0x9Eu)) - 902265528) ^ (*(_DWORD *)&v206[4
                                                                                         * ((*(_BYTE *)(v153 + 4 * (BYTE1(v138) ^ 0x2Du)) ^ v235 ^ ((v195 ^ 0x2F) + 78 - ((2 * (v195 ^ 0x2F) - 2) & 0x9E)) ^ v141 ^ v203 ^ (v140 - 89 - ((2 * v140) & 0x4E))) ^ 0xC9)]
                                                                        + 1733068541);
  v210 = *(_DWORD *)&v206[4 * (v204 ^ 0xC8)];
  v211 = (*(_DWORD *)(v208 + 4 * (BYTE2(v80) ^ 0x38u)) - 902265528) ^ (*(_DWORD *)&v207[4
                                                                                        * ((v204 ^ 0x898C5DC8) >> 24)]
                                                                       + 76310633) ^ (*(_DWORD *)&v206[4 * (v149 ^ 0xA2)]
                                                                                                  + 1733068541);
  LODWORD(v140) = v151 ^ HIDWORD(v235);
  LODWORD(v141) = v151 ^ HIDWORD(v235) ^ 0x351D74B9;
  LODWORD(v151) = *(_DWORD *)&v206[4 * ((v151 ^ BYTE4(v235)) ^ 0xB9)];
  v212 = *(_DWORD *)&v207[4 * ((v149 >> 24) ^ 0xE7)];
  LODWORD(v206) = *(_DWORD *)&v207[4 * ((v80 >> 24) ^ 0xB8)];
  LODWORD(v207) = *(_DWORD *)&v207[4 * (BYTE3(v140) ^ 0x65)];
  v213 = (char *)*(&off_1E8EC5D70 + (int)v228) - 4;
  v214 = (v209 - 2097880290 - ((2 * v209) & 0x5E9C63C)) ^ *(_DWORD *)&v213[4 * (BYTE1(v204) ^ 0x61)] ^ ((_DWORD)v207 + 76310633);
  LODWORD(v207) = *(_DWORD *)&v213[4 * (BYTE1(v149) ^ 0xA0)];
  LODWORD(v150) = *(_DWORD *)&v213[4 * (BYTE1(v80) ^ 0xE9)];
  LODWORD(v153) = *(_DWORD *)(v208 + 4 * BYTE2(v138));
  LODWORD(v138) = *(_DWORD *)(v208 + 4 * BYTE2(v141));
  LODWORD(v149) = *(_DWORD *)&v213[4 * BYTE1(v141)] ^ v231 ^ (v211 - 2097880290 - ((2 * v211) & 0x5E9C63C));
  v215 = v224 ^ HIDWORD(v235) ^ (v214 + 634882657 - ((2 * v214) & 0x4BAF14C2));
  v216 = *(_QWORD *)(v50 - 120);
  v217 = (uint64_t)*(&off_1E8EC5D70 + (int)v226);
  *(_BYTE *)(v216 + 6) = *(_BYTE *)(v217 + (BYTE1(v149) ^ 0x99)) ^ 0x3F;
  v218 = (char *)*(&off_1E8EC5D70 + SHIDWORD(v225)) - 12;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 256)) = (v218[BYTE2(v215) ^ 0xADLL] + 6) ^ 0xC5;
  v219 = (char *)*(&off_1E8EC5D70 + (int)v225) - 8;
  LODWORD(v138) = v207 ^ v224 ^ (v210 - ((2 * v210 + 110693882) & 0x5E9C63C) - 364811749) ^ ((_DWORD)v206 + 76310633) ^ (v138 - 902265528);
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 192)) = v219[v149 ^ 0xFCLL] ^ 2;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 240)) = (v218[BYTE2(v138) ^ 0x8CLL] + 6) ^ 0x47;
  v220 = (uint64_t)*(&off_1E8EC5D70 + SHIDWORD(v224));
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 224)) = (*(_BYTE *)(v220 + ((v149 >> 24) ^ 0xDELL)) - 71) ^ 0x1B;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 248)) = ((v218[BYTE2(v149) ^ 0x15]
                                              + ((v218[BYTE2(v149) ^ 0x15] + 6) ^ 0xDA)
                                              + 7) ^ 0xFE)
                                            + v218[BYTE2(v149) ^ 0x15]
                                            + 6;
  v221 = HIDWORD(v226) ^ v150 ^ ((_DWORD)v153 - 902265528) ^ ((_DWORD)v151 + 1733068541) ^ (v212 - ((2 * v212 + 18403538) & 0x5E9C63C) - 2021569657);
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 232)) = v219[v221 ^ 5] ^ 0xF0;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 176)) = (*(_BYTE *)(v220 + (HIBYTE(v215) ^ 0x4ELL)) - 71) ^ 0xE6;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 168)) = (*(_BYTE *)(v220 + (BYTE3(v138) ^ 0x9CLL)) - 71) ^ 0xB8;
  v222 = *(_QWORD *)(v50 - 184);
  *(_BYTE *)(v216 + v222) = (*(_BYTE *)(v220 + (BYTE3(v221) ^ 0x67)) - 71) ^ 0x91;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 160)) = v219[v138 ^ 0xF2] ^ 0xFA;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 208)) = *(_BYTE *)(v217 + (BYTE1(v138) ^ 0x1ELL)) ^ 0x9C;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 152)) = *(_BYTE *)(v217 + (BYTE1(v221) ^ 0x33)) ^ 0x85;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 200)) = *(_BYTE *)(v217 + (BYTE1(v215) ^ 0xBCLL)) ^ 0x4B;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 144)) = v219[v215 ^ 0x9FLL] ^ 2;
  *(_BYTE *)(v216 + *(_QWORD *)(v50 - 136)) = (v218[BYTE2(v221) ^ 0xDLL] + 6) ^ 0x8E;
  return ((uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a46 + 8 * ((25 * ((((_DWORD)v222 + 1260030665 - 2 * (((_DWORD)v222 + 16) & *(_DWORD *)(v50 - 212) ^ *(_DWORD *)(v50 - 216) & 4)) ^ 0x4B1A8AB9u) >= HIDWORD(v231))) ^ ((int)v205 - 487))) - 12))(v211, v217, v219, v221, 218, HIDWORD(v235), 3392701768, v205, a9, a10, a11, a12, v224, v225, v226, v227, v228, v229, v230,
           v231,
           v132,
           v232,
           v233,
           v234,
           v235,
           v236,
           v237,
           v238,
           v239,
           v240,
           v241,
           v242,
           v243,
           v244,
           v245,
           v246,
           v247,
           v248,
           v249,
           v250);
}

void sub_1D0D92BE0()
{
  JUMPOUT(0x1D0D909D8);
}

uint64_t sub_1D0D92C14(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  uint64_t v9;

  return (*(uint64_t (**)(void))(v9 + 8 * ((422 * (((v8 == a3) ^ (a8 + 1)) & 1)) ^ a8)))();
}

uint64_t sub_1D0D92C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  unsigned int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v10
                                                                                + 8
                                                                                * (int)(((((a8 - 111) | 0x6C0) - 836)
                                                                                       * ((v9 >> 3) & 1)) ^ (a8 + 286)))
                                                                    - ((a8 + 2) | 0x461u)
                                                                    + 1247))(a1, a2, a3, (v8 - a3));
}

uint64_t sub_1D0D92C80(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  int v51;
  int v52;
  uint64_t v53;
  int v54;
  unsigned int v55;
  uint64_t v56;
  int v57;
  char v58;
  uint64_t v59;
  int8x16x4_t v61;

  v54 = (a6 - 1121) | 0x460;
  *(_DWORD *)(v53 - 128) = v52;
  v55 = (v54 ^ 0xFFFFFB1A) & v52;
  v56 = *(_QWORD *)(v53 - 120) - 7;
  v57 = -a3;
  *(_DWORD *)(v53 - 136) = v55;
  v58 = v50 + a2 + v51;
  v59 = (v57 + a2 + v51 + a1);
  v61.val[0].i64[0] = ((_BYTE)v57 + (_BYTE)a2 + (_BYTE)v51 + (_BYTE)a1) & 0xF;
  v61.val[0].i64[1] = ((_BYTE)v57 + v58 + 6) & 0xF;
  v61.val[1].i64[0] = ((_BYTE)v57 + v49 + ((v54 - 68) ^ 0xFB)) & 0xF;
  v61.val[1].i64[1] = ((_BYTE)v57 + v58 + 4) & 0xF;
  v61.val[2].i64[0] = ((_BYTE)v57 + v58 + 3) & 0xF;
  v61.val[2].i64[1] = ((_BYTE)v57 + v58 + 2) & 0xF;
  v61.val[3].i64[0] = ((_BYTE)v57 + v58 + 1) & 0xF;
  v61.val[3].i64[1] = ((_BYTE)v57 + v49) & 0xF;
  *(int8x8_t *)(v56 + v59) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v46 + (v59 & 0xF) - 7), *(int8x8_t *)(v56 + v59)), veor_s8(*(int8x8_t *)((v59 & 0xF) + v47 - 5), *(int8x8_t *)((v59 & 0xF) + v48 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v61, (int8x16_t)xmmword_1D0E9B5C0), (int8x8_t)0x7777777777777777)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a46 + 8 * ((v57 != 8 - v55) ^ v54)) - 12))((__n128)xmmword_1D0E9B5C0);
}

void sub_1D0D92DB0()
{
  JUMPOUT(0x1D0D92CE8);
}

uint64_t sub_1D0D92DD4()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 ^ (1013 * (*(_DWORD *)(v2 - 128) == *(_DWORD *)(v2 - 136)))))
                            - ((349 * (v0 ^ 0x19Bu)) ^ 0x6D5)))();
}

uint64_t sub_1D0D92E14(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = (a4 - 1343640857);
  *(_BYTE *)(*(_QWORD *)(v10 - 120) + v11) ^= *(_BYTE *)(v6 + (v11 & 0xF)) ^ *(_BYTE *)((v11 & 0xF) + v7 + 2) ^ *(_BYTE *)((v11 & 0xF) + v8 + 4) ^ (119 * (v11 & 0xF));
  return (*(uint64_t (**)(void))(v9 + 8 * ((a5 - 1617) | (8 * (a4 - 1 != v5)))))();
}

void sub_1D0D92E78()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1426171139)
    v1 = -623068998;
  else
    v1 = 623108962;
  *(_DWORD *)(v2 + 32) = v1;
}

void sub_1D0D92EDC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1374699841 * ((a1 + 1891232920 - 2 * (a1 & 0x70B9EC98)) ^ 0x1D4DF491);
  __asm { BR              X15 }
}

uint64_t sub_1D0D92FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;

  v16 = v13 + v12 + v14 + ((v14 - 391480466) & 0x175583F7);
  if (v16 >= 0)
    v17 = v13 + v12 + v14 + ((v14 - 391480466) & 0x175583F7);
  else
    v17 = -v16;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * ((79 * (v17 < 0x83)) ^ v14)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1D0D9303C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27)
{
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  _BOOL4 v30;

  *a27 = 1176788107;
  v30 = v27 <= 0x7C00C6CF && (int)(v27 + 67057968) < 67057969;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v29 + 8 * (((4 * v30) | (8 * v30)) ^ v28))
                                                   - ((v28 - 204629012) & 0xC32675F)
                                                   + 1335))(a1, 2214541616);
}

void sub_1D0D93124(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;

  *(_DWORD *)(a2 + v3) = v2;
}

void sub_1D0D93E90(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 3804331 * ((((2 * a1) | 0x5B2BA828) - a1 - 764793876) ^ 0xD70B2742);
  __asm { BR              X8 }
}

uint64_t sub_1D0D93F20()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 - 1222)))(200, 2354554103) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((507 * v3) ^ v0)) - 8))();
}

uint64_t sub_1D0D93F60(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  result = (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 8 * (v2 & 0x84FA17D)))(a1, 0);
  if ((_DWORD)result == 16)
  {
    v3 = 1252934858;
    goto LABEL_7;
  }
  if ((_DWORD)result == 12)
  {
LABEL_7:
    result = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v2 ^ 0x4E5)))(a1);
    goto LABEL_8;
  }
  if ((_DWORD)result)
  {
    v3 = 429191531;
    goto LABEL_7;
  }
  *v5 = a1;
  v3 = 629852285;
LABEL_8:
  *(_DWORD *)(v1 + 12) = -1245853537 * v3 - 589114787;
  return result;
}

void sub_1D0D93FF8(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) - 3804331 * ((2 * (a1 & 0x2F66049F) - a1 - 795215008) ^ 0x2A070836);
  v2 = *(_QWORD *)a1;
  ((void (*)(_QWORD, void (*)()))*(&off_1E8EC5D70 + v1 - 940))(*(&off_1E8EC5D70 + (v1 ^ 0x44D)), sub_1D0DC48D8);
  __asm { BR              X10 }
}

uint64_t sub_1D0D940A4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v2 + 8 * (a1 - 711)) - 4) != 0) * (a1 + 908)) ^ a1))
                            - 12))();
}

uint64_t sub_1D0D940D0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 607)))(v1);
}

uint64_t sub_1D0D940FC(_DWORD *a1, uint64_t a2)
{
  unsigned int v3;
  int v4;
  int v5;
  uint64_t result;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = 628203409 * ((a1 & 0xC4813AD7 | ~(a1 | 0xC4813AD7)) ^ 0xB9F6C91B);
  v4 = a1[12] ^ v3;
  v5 = a1[8] - v3;
  v9 = v4
     - 235795823 * ((2 * (&v9 & 0x3CBF2484) - &v9 - 1019159688) ^ 0x57ED9221)
     - 1404134225;
  result = -[SBSystemActionElementPreviewingCoordinator pop](&v9, a2);
  if (v5 > 936444426)
  {
    if (v5 == 1221657098)
    {
      v7 = 3;
    }
    else
    {
      if (v5 != 936444427)
        goto LABEL_11;
      v7 = 1;
    }
LABEL_10:
    v8 = *((_QWORD *)*(&off_1E8EC5D70 + (v4 ^ 0x45E0928E))
         + ((115
           * (((v4 + 38) ^ (((uint64_t (*)(_QWORD, uint64_t))*(&off_1E8EC5D70
                                                                                       + (v4 ^ 0x45E09262)))((*((_DWORD *)*(&off_1E8EC5D70 + (v4 & 0x220A2DF0))+ 6 * v7+ 1)- 1811329848), 3511634213) == 0)) & 1)) ^ (v4 - 1172343972)));
    __asm { BR              X9 }
  }
  if (v5 == 936444423)
  {
    v7 = 0;
    goto LABEL_10;
  }
  if (v5 == 936444426)
  {
    v7 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[6] = 623108870;
  return result;
}

void sub_1D0D94714(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BR              X13 }
}

uint64_t sub_1D0D94824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * ((750 * ((v4 ^ 0xAB1ECB32) != v3 - 428)) ^ v3))
                                                                    - 4))(a1, a2, a3, (v3 + 39));
}

uint64_t sub_1D0D9486C()
{
  uint64_t v0;
  int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;
  uint64_t v11;

  v10 = v3 > 0x3D41D450;
  v11 = (v6 - 692724667);
  *(_BYTE *)(v7 + v11) = *(_BYTE *)(*(_QWORD *)(v9 + 8 * (v1 - 267)) + (v11 & 0xF) - 12) ^ *(_BYTE *)(v0 + v11) ^ (23 * ((v6 + 69) & 0xF)) ^ *(_BYTE *)(*(_QWORD *)(v9 + 8 * (v1 - 358)) + (v11 & 0xF) - 8) ^ *(_BYTE *)((v11 & 0xF) + *(_QWORD *)(v9 + 8 * (v1 ^ 0x119)) + 1);
  if (v10 == v6 - 1720449035 < v2)
    v10 = v6 - 1720449035 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v10 * v5) ^ v1)) - 4))();
}

uint64_t sub_1D0D9492C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = ((2 * v1) & 0xBFE37FDE ^ (v0 + 1251666346) & 0x356511D3 ^ 0x16211797)
     + (((v0 ^ 0x3AB) - 185635105) ^ v1)
     - 152087617 == 1457591214;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (8 * v3)) ^ v0)))();
}

uint64_t sub_1D0D949AC@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v1 - 653) ^ v1 ^ 0x628 ^ 0x36B) * ((a1 + v2 - 1609678831) > 7)) ^ v1)))();
}

uint64_t sub_1D0D94A1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((2004 * ((a7 & 0xFFFFFFF0) == ((71 * (a3 ^ 0x37D)) ^ 0x5FF1BCA4))) ^ a3))
                            - 4))();
}

uint64_t sub_1D0D94A68@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v18;
  unint64_t v19;
  int v21;

  v10 = (a3 + v7 + a1);
  v11 = v10 + v3;
  v12 = v10 + v8;
  v13 = (a3 + v7) & 0xF;
  v14 = v13 - v12;
  v15 = (v4 | v13) - v12;
  v16 = (v6 | v13) - v12;
  v18 = (unint64_t)(v11 - v12) >= 0x10
     && (unint64_t)(v14 + v5) >= 0x10
     && (unint64_t)(v15 + 4) >= 0x10;
  v19 = v16 + 1;
  v21 = !v18 || v19 < (unint64_t)((a2 - 81322846) & 0x4D8E3DF) - 966;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((37 * v21) ^ a2)) - 4))();
}

uint64_t sub_1D0D94AEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((112 * (v4 >= ((a4 + 805583531) & 0xCFFBC396 ^ 0x186))) ^ (a4 + 741)))
                         - ((a4 + 64) ^ 0x39CLL));
  *(_DWORD *)(v6 - 140) = v4;
  return v7();
}

uint64_t sub_1D0D94B44@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  int8x16_t v60;
  int8x16_t v61;
  int8x16_t v62;
  int8x16x4_t v64;
  int8x16x4_t v65;

  *(_QWORD *)(v58 - 136) = (v54 + 14) & 0xF;
  *(_QWORD *)(v58 - 128) = (v54 - 1) & 0xF;
  v64.val[1].i64[0] = *(_QWORD *)(v58 - 128);
  v64.val[1].i64[1] = *(_QWORD *)(v58 - 136);
  v64.val[2].i64[0] = (v54 - 1 + 42 * (a2 ^ 0x97)) & 0xF;
  v64.val[2].i64[1] = (v54 + 12) & 0xF;
  v64.val[3].i64[0] = (v54 + 11) & 0xF;
  v64.val[3].i64[1] = (v54 + 10) & 0xF;
  v59 = a3 + v56 + a1;
  v60.i64[0] = 0xC9C9C9C9C9C9C9C9;
  v60.i64[1] = 0xC9C9C9C9C9C9C9C9;
  v64.val[0].i64[0] = v59 & 0xF;
  v64.val[0].i64[1] = v54 & 0xF;
  v61.i64[0] = vqtbl4q_s8(v64, (int8x16_t)xmmword_1D0E9B5B0).u64[0];
  v65.val[0].i64[1] = (v54 + 8) & 0xF;
  v65.val[1].i64[1] = (v54 + 6) & 0xF;
  v65.val[2].i64[1] = (v54 + 4) & 0xF;
  v65.val[3].i64[1] = (v54 + 2) & 0xF;
  v65.val[0].i64[0] = (v54 + 9) & 0xF;
  v65.val[1].i64[0] = (v54 + 7) & 0xF;
  v65.val[2].i64[0] = (v54 + 5) & 0xF;
  v65.val[3].i64[0] = (v54 + 3) & 0xF;
  v61.i64[1] = vqtbl4q_s8(v65, (int8x16_t)xmmword_1D0E9B5B0).u64[0];
  v62 = vrev64q_s8(vmulq_s8(v61, v60));
  *(int8x16_t *)(v57 - 15 + v59) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v52 + v64.val[0].i64[0] - 15), *(int8x16_t *)(v50 - 15 + v59)), veorq_s8(*(int8x16_t *)(v64.val[0].i64[0] + v51 - 11), *(int8x16_t *)(v64.val[0].i64[0] + v53 - 14))), vextq_s8(v62, v62, 8uLL));
  return ((uint64_t (*)(void))(*(_QWORD *)(a50
                                        + 8
                                        * ((((v55 & 0xFFFFFFF0) != 16) * (((298 * (a2 ^ 0x397) - 862) | 0x18C) - 194)) ^ (298 * (a2 ^ 0x397))))
                            - 8))();
}

void sub_1D0D94CC8()
{
  JUMPOUT(0x1D0D94C48);
}

uint64_t sub_1D0D94CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((110 * (*(_DWORD *)(v25 - 140) != v24)) ^ v22))
                                          - ((v22 - 168082867) & 0xA04BF77)
                                          + 877))(a22);
}

uint64_t sub_1D0D94D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  unsigned int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a5 ^ (1754 * ((v5 >> 3) & 1))))
                            - (a5 ^ 0xFFFFFFFFFFFFFD1FLL)
                            - ((a5 - 607) | 0x84)))();
}

uint64_t sub_1D0D94D68@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  int v55;
  char v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  unsigned int v61;
  int v62;
  char v63;
  uint64_t v64;
  int8x16x4_t v66;

  v61 = v55 & 0xFFFFFFF8;
  *(_QWORD *)(v60 - 136) = v58 - 7;
  *(_QWORD *)(v60 - 128) = v50 - 7;
  *(_DWORD *)(v60 - 144) = v61;
  v62 = -v59;
  v63 = a3 + v57 + v56;
  v64 = (a3 + v57 + a1 - v59);
  v66.val[0].i64[0] = v64 & 0xF;
  v66.val[0].i64[1] = (v54 + (_BYTE)v62) & 0xF;
  v66.val[1].i64[0] = (v63 - 81 + (_BYTE)v62) & 0xF;
  v66.val[1].i64[1] = (v63 - 82 + (_BYTE)v62) & 0xF;
  v66.val[2].i64[0] = (v63 - 83 + (_BYTE)v62) & 0xF;
  v66.val[2].i64[1] = (v63 + (_BYTE)v62 + 107 * (a2 ^ 0x92)) & 0xF;
  v66.val[3].i64[0] = (v63 - 85 + (_BYTE)v62) & 0xF;
  v66.val[3].i64[1] = (v63 - 86 + (_BYTE)v62) & 0xF;
  *(int8x8_t *)(*(_QWORD *)(v60 - 136) + v64) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v52 + v66.val[0].i64[0] - 7), *(int8x8_t *)(*(_QWORD *)(v60 - 128) + v64)), veor_s8(*(int8x8_t *)(v66.val[0].i64[0] + v51 - 3), *(int8x8_t *)(v66.val[0].i64[0] + v53 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v66, (int8x16_t)xmmword_1D0E9B5C0), (int8x8_t)0xC9C9C9C9C9C9C9C9)));
  return (*(uint64_t (**)(__n128))(a50 + 8 * ((1497 * (8 - v61 == v62)) ^ a2)))((__n128)xmmword_1D0E9B5C0);
}

void sub_1D0D94EA4()
{
  JUMPOUT(0x1D0D94DCCLL);
}

uint64_t sub_1D0D94EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  uint64_t v24;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * ((733
                                                        * (((*(_DWORD *)(v24 - 140) == *(_DWORD *)(v24 - 144)) ^ v22 ^ 0x7F) & 1)) ^ v22))
                                          - ((2 * v22) ^ 0x35CLL)))(a22);
}

uint64_t sub_1D0D94F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (((a6 - 982) | 0x1D3) ^ 0xA91EEB62) + a5;
  *(_BYTE *)(v11 + v13) = *(_BYTE *)(v9 + (v13 & 0xF)) ^ *(_BYTE *)(v6 + v13) ^ *(_BYTE *)((v13 & 0xF) + v8 + 4) ^ *(_BYTE *)((v13 & 0xF) + v10 + 1) ^ (-55 * (v13 & 0xF));
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((1138 * (a5 - 1 != v7)) ^ (a6 - 554))) - 4))();
}

uint64_t sub_1D0D94F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  int v51;

  v49 = *(_QWORD *)(a1 + 24);
  *(int8x16_t *)(v48 - 112) = veorq_s8(*(int8x16_t *)(*(_QWORD *)(a1 + 16) - 0x4F927BF50B0C4CFBLL), (int8x16_t)xmmword_1D0E9B5E0);
  if (v46)
    v50 = v49 == 0xAEAB1E0EC55390ELL;
  else
    v50 = 1;
  v51 = !v50;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * (int)((1265 * v51) ^ a4)) - (a4 + 912) + 1371))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1D0D94FF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v46;
  BOOL v48;

  v48 = (((_BYTE)a23 + 7) & 0xF) != 0 || (_DWORD)a23 == (((_DWORD)a4 - 329) | 0x34) + 1521900331;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 + 8 * (int)((37 * ((a4 ^ v48) & 1)) ^ a4)) - 8))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46);
}

uint64_t sub_1D0D95050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,unsigned int a53,uint64_t a54,uint64_t a55)
{
  unsigned __int8 *v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned __int8 v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  int v82;
  int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  int v129;
  char *v130;
  int v131;
  char *v132;
  char *v133;
  int v134;
  unsigned int v135;
  char *v136;
  int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  int v154;
  unsigned int v155;
  int v156;
  int v157;
  int v158;
  int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  int v165;
  unsigned int v166;
  int v167;
  int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  int v192;
  int v193;
  int v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  unsigned int v199;
  int v200;
  unsigned int v201;
  unsigned int v202;
  int v203;
  unsigned __int8 *v204;
  int v205;
  int v206;
  uint64_t v207;
  unsigned __int8 v208;
  char v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  int v213;
  uint64_t v214;
  int v215;
  int v216;
  int v217;
  int v218;
  unsigned int v219;
  int v220;
  uint64_t v221;
  unsigned int v222;
  int v223;
  char *v224;
  unsigned int v225;
  unsigned int v226;
  uint64_t v227;
  unsigned int v228;
  unsigned int v229;
  char *v230;
  int v231;
  unint64_t v232;
  int v233;
  char *v234;
  int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  unsigned int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  int v266;
  int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  unsigned int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  int v288;
  int v289;
  int v290;
  int v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  int v297;
  int v298;
  int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  int v311;
  unsigned int v312;
  int v313;
  int v314;
  unsigned int v315;
  int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  unsigned int v323;
  int v324;
  int v325;
  unsigned int v326;
  unsigned int v327;
  int v328;
  int v329;
  int v330;
  int v331;
  unsigned int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  uint64_t v341;
  char *v342;
  char *v343;
  char *v344;
  int v345;
  int v346;
  int v347;
  int v348;
  char *v349;
  int v350;
  uint64_t v351;
  uint64_t v352;
  int v353;
  int v354;
  uint64_t v355;
  char *v356;
  uint64_t v357;
  char *v358;
  int v359;
  int v360;
  unsigned int v361;
  int v362;
  char *v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  int v374;
  uint64_t v375;
  uint64_t v376;
  unsigned int v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  int v383;
  unsigned int v384;
  uint64_t v385;
  unsigned int v386;
  int v387;
  int v388;
  int v389;
  int v390;
  uint64_t v391;
  int v392;
  int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  uint64_t v398;
  unsigned int v399;
  int v400;
  int v401;
  int v402;
  uint64_t v403;
  unsigned __int8 v404;
  unsigned int v405;
  int v406;
  int v407;
  int v408;
  uint64_t v409;
  int v410;
  unsigned int v411;
  int v412;
  int v413;
  int v414;
  uint64_t v415;
  int v416;
  int v417;
  int v418;
  unsigned int v419;
  unsigned int v420;
  uint64_t v421;
  int v422;
  int v423;
  int v424;
  int v425;
  int v426;
  uint64_t v427;
  int v428;
  unsigned int v429;
  int v430;
  int v431;
  int v432;
  uint64_t v433;
  unsigned __int8 v434;
  unsigned int v435;
  int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  uint64_t v440;
  int v441;
  unsigned int v442;
  unsigned int v443;
  int v444;
  uint64_t v445;
  unsigned int v446;
  int v447;
  int v448;
  int v449;
  uint64_t v450;
  int v451;
  unsigned int v452;
  int v453;
  int v454;
  int v455;
  uint64_t v456;
  int v457;
  int v458;
  int v459;
  int v460;
  int v461;
  uint64_t v462;
  int v463;
  unsigned int v464;
  int v465;
  int v466;
  uint64_t v467;
  int v468;
  int v469;
  int v470;
  uint64_t v471;
  unsigned int v472;
  int v473;
  int v474;
  int v475;
  uint64_t v476;
  int v477;
  int v478;
  unsigned int v479;
  unsigned int v480;
  int v481;
  uint64_t v482;
  int v483;
  int v484;
  int v485;
  unsigned int v486;
  uint64_t v487;
  unsigned int v488;
  int v489;
  unsigned int v490;
  unsigned int v491;
  uint64_t v492;
  int v493;
  int v494;
  int v495;
  unsigned int v496;
  uint64_t v497;
  unsigned int v498;
  int v499;
  unsigned int v500;
  char *v501;
  int v502;
  uint64_t v503;
  unsigned int v504;
  char *v505;
  int v506;
  unsigned int v507;
  char *v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  unint64_t v512;
  int v513;
  uint64_t v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  uint64_t v521;
  int v522;
  int v523;
  unsigned int v524;
  int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  int v533;
  int v534;
  int v535;
  int v536;
  int v537;
  int v538;
  int v539;
  int v540;

  v60 = *(unsigned __int8 *)(v56 - 0xAEAB1E0EC55390CLL);
  *(_DWORD *)(v59 - 128) = (2 * v57) ^ 0x2AA;
  v61 = *(_QWORD *)(v58 + 8 * (v57 ^ 0xA8)) - 8;
  v62 = *(_QWORD *)(v58 + 8 * (v57 ^ 0xD2)) - 8;
  v63 = (*(unsigned __int8 *)(v61 + (v60 ^ 0xD7)) ^ 0x8C) << ((2 * v57) ^ 0x74);
  v64 = *(_QWORD *)(v58 + 8 * (v57 ^ 0xAC)) - 4;
  LODWORD(v60) = *(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553901) ^ 0x49));
  HIDWORD(v65) = v60 ^ 1;
  LODWORD(v65) = (v60 ^ 0xC8) << 24;
  LOBYTE(v60) = v65 >> 26;
  v66 = v63 | ((*(unsigned __int8 *)(v62 + (*v55 ^ 0xB1)) ^ 0xB2) << 24);
  v67 = *(_QWORD *)(v58 + 8 * (int)(v57 & 0xE0153F11)) - 8;
  v68 = *(unsigned __int8 *)(v62 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553902) ^ 0xB8));
  v69 = *(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553905) ^ 0x6BLL));
  HIDWORD(v65) = v69 ^ 1;
  LODWORD(v65) = (v69 ^ 0xC8) << 24;
  v70 = ((v65 >> 26) ^ 0x53) << 16;
  v71 = *(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC55390DLL) ^ 0x47));
  HIDWORD(v65) = v71 ^ 1;
  LODWORD(v65) = (v71 ^ 0xC8) << 24;
  v72 = v66 | ((*(_BYTE *)(v67 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC55390BLL) ^ 0xECLL)) ^ 9) + 96) | (((v65 >> 26) ^ 0x1E) << 16);
  v73 = *(_BYTE *)(v61 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553900) ^ 0x2ELL));
  LODWORD(v64) = *(unsigned __int8 *)(v64 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553909) ^ 0xCBLL));
  HIDWORD(v65) = v64 ^ 1;
  LODWORD(v65) = (v64 ^ 0xC8) << 24;
  v74 = (*(_BYTE *)(v67 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC5538FFLL) ^ 0x36)) + 96) ^ 0x2A | ((v73 ^ 0x49) << 8) | ((v60 ^ 0xFB) << 16) | ((v68 ^ 0xA) << 24);
  v75 = ((*(_BYTE *)(v67 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553907) ^ 0xA9)) + 96) | ((*(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553908) ^ 0x30)) ^ 0xB9) << 8)) & 0xFF00FFFF | (((v65 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v62 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC55390ALL) ^ 0x35)) ^ 0x7D) << 24);
  v76 = *(_QWORD *)(v58 + 8 * (v57 - 161));
  v77 = v70 | ((*(unsigned __int8 *)(v61 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553904) ^ 0x77)) ^ 0x43) << 8) | ((*(unsigned __int8 *)(v62 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553906) ^ 0xBFLL)) ^ 0x64) << 24);
  v78 = *(_QWORD *)(v58 + 8 * (v57 ^ 0xD3)) - 12;
  LODWORD(v62) = *(_DWORD *)(v76
                           + 4
                           * ((*(_BYTE *)(v67
                                                         + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC5538FFLL) ^ 0x36))
                                              + 96) ^ 0xFDu)) ^ 0x4DED1179 ^ *(_DWORD *)(v78
                                                                                       + 4
                                                                                       * (v60 ^ 0x61u));
  v79 = *(_QWORD *)(v58 + 8 * (v57 - 80)) - 12;
  LODWORD(v60) = (v62 - ((2 * v62) & 0x662A48BE) - 1290460065) ^ *(_DWORD *)(v79 + 4 * (v68 ^ 0x9Fu));
  v80 = *(_QWORD *)(v58 + 8 * (v57 - 93)) - 12;
  LODWORD(v61) = *(_DWORD *)(v80 + 4 * (v73 ^ 0x71u)) ^ v72 ^ (v60 - ((2 * v60) & 0xC27A2298) - 516091572);
  v512 = __PAIR64__(v72, v74);
  LODWORD(v60) = v74 - ((2 * v74) & 0xC82F6EE) + 104954743;
  LOBYTE(v68) = (*(_BYTE *)(v67 + (*(unsigned __int8 *)(v56 - 0xAEAB1E0EC553903) ^ 0xB5)) + 96) ^ 0xA8;
  v81 = v77 & 0xFFFFFF00 | v68;
  HIDWORD(v511) = v75;
  v82 = v61;
  v410 = v61;
  LODWORD(v62) = v61 ^ v75 ^ 0x4D;
  LODWORD(v61) = v61 ^ v75;
  *(_DWORD *)(v59 - 160) = v61;
  *(_DWORD *)(v59 - 136) = v62 ^ v81;
  LODWORD(v60) = v62 ^ v81 ^ v60;
  v428 = BYTE1(v60);
  v441 = BYTE2(v60);
  v83 = *(_DWORD *)(v80 + 4 * (BYTE1(v60) ^ 0x81u)) ^ *(_DWORD *)(v78 + 4 * (BYTE2(v60) ^ 0xFFu));
  v84 = v60 ^ 0xBCB656DE;
  v448 = v60;
  LODWORD(v60) = ((v83 ^ 0x1D39C2F0) - ((2 * (v83 ^ 0x1D39C2F0)) & 0x63D3858A) - 1310080315) ^ *(_DWORD *)(v76 + 4 * (v60 ^ 0x5Eu));
  v446 = HIBYTE(v84);
  v85 = v82 ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v84) ^ 0x65)) ^ (v60 - ((2 * v60) & 0x662A48BE) - 1290460065);
  v404 = v62;
  LODWORD(v511) = v81;
  v86 = v85 ^ 0xDA617B28;
  v87 = v85;
  *(_DWORD *)(v59 - 148) = v85;
  v88 = v85 ^ 0xDA617B28 ^ (v81 - 2 * (v81 & 0x5A617B2D ^ v68 & 5) - 631145688);
  LODWORD(v60) = v88 ^ v84;
  v89 = v88;
  *(_DWORD *)(v59 - 144) = v88;
  v459 = ((v88 ^ v84) >> 16);
  v463 = ((unsigned __int16)(v88 ^ v84) >> 8);
  v90 = *(_DWORD *)(v80 + 4 * (v463 ^ 0x9Bu)) ^ *(_DWORD *)(v78 + 4 * (v459 ^ 0x2Eu));
  v91 = (v88 ^ v84);
  *(_DWORD *)(v59 - 248) = v91;
  v92 = ((v90 ^ 0x1D39C2F0) - 2 * ((v90 ^ 0x1D39C2F0) & 0x31E9C2CD ^ v90 & 8) - 1310080315) ^ *(_DWORD *)(v76 + 4 * (v91 ^ 0xD2u));
  v93 = v60 ^ 0xAA1AED2C;
  *(_DWORD *)(v59 - 200) = BYTE3(v60);
  v94 = (v92 - 1290460065 + (~(2 * v92) | 0x99D5B741) + 1) ^ *(_DWORD *)(v79 + 4 * (BYTE3(v60) ^ 0x69));
  LODWORD(v60) = v94 ^ v62 ^ 0xD921B0B6;
  v502 = v94 ^ v62;
  v527 = v60 ^ v89;
  v95 = v60 ^ v89 ^ 0xE122011;
  v96 = ((v60 ^ v89 ^ 0x43A7BD5C) - 2 * (v95 & 0x12 ^ (v60 ^ v89 ^ 0x43A7BD5C) & 0x5EBD4C77) - 558019483) ^ v93;
  v513 = ((v96 ^ 0x9547167F) >> 16);
  v97 = (v61 ^ 0xBAF72DE4) - 2 * (v62 & 4 ^ (v61 ^ 0xBAF72DE4) & 0x5A617B2C);
  v518 = ((unsigned __int16)(((v60 ^ v89 ^ 0xBD5C)
                                             - 2 * (v95 & 0x12 ^ (v60 ^ v89 ^ 0xBD5C) & 0x4C77)
                                             + 19557) ^ v93 ^ 0x167F) >> 8);
  v98 = *(_DWORD *)(v78 + 4 * (v513 ^ 0x89u)) ^ *(_DWORD *)(v80 + 4 * (v518 ^ 0x3Au)) ^ 0x1D39C2F0;
  v515 = (((v60 ^ v89 ^ 0x5C) - 2 * (v95 & 0x12 ^ (v60 ^ v89 ^ 0x5C) & 0x77) + 101) ^ v93);
  v99 = (v98 - ((2 * v98) & 0x63D3858A) - 1310080315) ^ *(_DWORD *)(v76 + 4 * (v515 ^ 0xE4u));
  v524 = (v96 ^ 0x9547167F) >> 24;
  v100 = (v99 - ((2 * v99) & 0x662A48BE) - 1290460065) ^ *(_DWORD *)(v79 + 4 * (v524 ^ 0x1D));
  v479 = v94 ^ v87;
  v538 = (v100 - ((2 * v100) & 0x7D2A6C76) + 1049966139) ^ v94 ^ v87;
  v101 = v538 ^ 0x3E95363B ^ v94 ^ v62;
  *(_DWORD *)(v59 - 232) = v538 ^ 0x3E95363B;
  v102 = ((v101 ^ 0xFE25CD6D) - ((2 * (v101 ^ 0xFE25CD6D)) & 0xBD7A98CA) - 558019483) ^ v93;
  v103 = ((unsigned __int16)(((v101 ^ 0xCD6D) - ((2 * (v101 ^ 0xCD6D)) & 0x98CA) + 19557) ^ v93) >> 8);
  *(_DWORD *)(v59 - 208) = v103;
  v104 = *(_DWORD *)(v80 + 4 * (v103 ^ 0x6Fu));
  *(_DWORD *)(v59 - 216) = BYTE2(v102);
  LODWORD(v67) = v104 ^ *(_DWORD *)(v78 + 4 * (BYTE2(v102) ^ 0xA8u)) ^ 0x1D39C2F0;
  LODWORD(v67) = (v67 - ((2 * v67) & 0x662A48BE) - 1290460065) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v102) ^ 0x85));
  v535 = (((v101 ^ 0x6D) - ((2 * (v101 ^ 0x6D)) & 0xCA) + 101) ^ v93);
  LODWORD(v67) = (v67 - ((2 * v67) & 0x63D3858A) - 1310080315) ^ *(_DWORD *)(v76 + 4 * (v535 ^ 0x25u));
  v105 = (v67 - ((2 * v67) & 0xC7AD3A3E) + 1675009311) ^ v60;
  v533 = v101 ^ v95;
  v106 = v105 ^ v101 ^ v95;
  *(_DWORD *)(v59 - 168) = v105;
  LOBYTE(v60) = ((v101 ^ 0x6D) - ((2 * (v101 ^ 0x6D)) & 0xCA) + 101) ^ v93 ^ v106;
  v107 = v106;
  *(_DWORD *)(v59 - 184) = v106;
  *(_DWORD *)(v59 - 240) = v102;
  v108 = v102 ^ v106 ^ 0x5AC12A4E;
  v435 = HIBYTE(v108);
  v418 = BYTE2(v108);
  v109 = *(_DWORD *)(v79 + 4 * (HIBYTE(v108) ^ 0x1D)) ^ *(_DWORD *)(v78 + 4 * (BYTE2(v108) ^ 0x89u)) ^ 0x4F11F7E3;
  v422 = BYTE1(v108);
  v110 = (v109 - ((2 * v109) & 0xC27A2298) - 516091572) ^ *(_DWORD *)(v80 + 4 * (BYTE1(v108) ^ 0x3Au));
  v416 = v60;
  LODWORD(v60) = *(_DWORD *)(v76 + 4 * (v60 ^ 0xD5u));
  *(_DWORD *)(v59 - 176) = v538 ^ 0x3E95363B ^ v67;
  v111 = v538 ^ 0x3E95363B ^ v67 ^ v60 ^ (v110 - ((2 * v110) & 0x63D3858A) - 1310080315);
  v434 = BYTE2(v105) ^ 0x16;
  v112 = v111 ^ v105 ^ 0x7C166C11;
  *(_DWORD *)(v59 - 140) = v111;
  v113 = (v112 ^ v102) >> 24;
  *(_DWORD *)(v59 - 220) = v113;
  v506 = (v112 ^ v102);
  LODWORD(v60) = *(_DWORD *)(v79 + 4 * (v113 ^ 0x9B)) ^ *(_DWORD *)(v76 + 4 * (v506 ^ 0x31u)) ^ 0x2FCE69A;
  v490 = ((v112 ^ v102) >> 8) ^ 0x86839A;
  v495 = ((unsigned __int16)(v112 ^ v102) >> 8) ^ 0x9A;
  LODWORD(v62) = (v60 - ((2 * v60) & 0xC27A2298) - 516091572) ^ *(_DWORD *)(v80
                                                                          + 4
                                                                          * (((unsigned __int16)(v112 ^ v102) >> 8) ^ 0xA0u));
  LODWORD(v60) = v112 ^ v102 ^ 0x6080ACAD;
  v485 = ((v112 ^ v102) >> 16);
  LODWORD(v62) = (v62 - ((2 * v62) & 0xF809A778) - 66792516) ^ *(_DWORD *)(v78 + 4 * (v485 ^ 0xAu));
  v386 = (v62 - 1420582837 + (~(2 * v62) | 0xA958BF6B)) ^ v111;
  v451 = v386 ^ 0x56D03AE0 ^ v112;
  v114 = v386 ^ 0x56D03AE0;
  *(_DWORD *)(v59 - 192) = v386 ^ 0x56D03AE0;
  v498 = v112 ^ v107;
  v474 = v112;
  v488 = v112 ^ v107 ^ 0xA86A155A;
  v115 = ((v451 ^ 0x5A137D54) - ((2 * (v451 ^ 0x5A137D54)) & 0xC1346592) - 526765367) ^ v488;
  v116 = ((v115 ^ 0x51FFD6C7) - 2 * ((v115 ^ 0x51FFD6C7) & 0x6603361F ^ v115 & 0x18) - 435997177) ^ v60 ^ 0x479AB031;
  v117 = ((unsigned __int16)(((v115 ^ 0xD6C7) - 2 * ((v115 ^ 0xD6C7) & 0x361F ^ v115 & 0x18) + 13831) ^ v112 ^ v102 ^ 0xACAD ^ 0xB031) >> 8);
  *(_DWORD *)(v59 - 256) = v117;
  v118 = v86 ^ (v97 - 631145688);
  v522 = (((v115 ^ 0xC7) - 2 * ((v115 ^ 0xC7) & 0x1F ^ v115 & 0x18) + 7) ^ v112 ^ v102 ^ 0xAD);
  v119 = *(_DWORD *)(v76 + 4 * (v522 ^ 0xAAu)) ^ *(_DWORD *)(v80 + 4 * (v117 ^ 0x3Au));
  v424 = BYTE2(v116);
  v120 = ((v119 ^ 0x50D4D389) - 2 * ((v119 ^ 0x50D4D389) & 0x7C04D3BE ^ v119 & 2) - 66792516) ^ *(_DWORD *)(v78 + 4 * (BYTE2(v116) ^ 0x89u));
  v438 = HIBYTE(v116);
  v121 = (v120 - ((2 * v120) & 0x662A48BE) - 1290460065) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v116) ^ 0x1D));
  v122 = v121 ^ v112;
  v123 = ((v121 ^ v112 ^ 0xA6C48CD5) - ((2 * (v121 ^ v112 ^ 0xA6C48CD5)) & 0xCC066C0E) - 435997177) ^ v60;
  LODWORD(v67) = HIBYTE(v123);
  v124 = ((unsigned __int16)(((v121 ^ v112 ^ 0x8CD5) - ((2 * (v121 ^ v112 ^ 0x8CD5)) & 0x6C0E) + 13831) ^ v60) >> 8);
  LODWORD(v60) = *(_DWORD *)(v80 + 4 * (BYTE1(v123) ^ 0x6Fu)) ^ *(_DWORD *)(v79 + 4 * (HIBYTE(v123) ^ 5));
  v493 = v123;
  LODWORD(v60) = ((v60 ^ 0x52283513) - 2 * ((v60 ^ 0x52283513) & 0x31E9C2CD ^ v60 & 8) - 1310080315) ^ *(_DWORD *)(v76 + 4 * (v123 ^ 0x25u));
  v125 = v60 - ((2 * v60) & 0xF809A778);
  LODWORD(v60) = BYTE2(v123);
  v126 = v121 ^ v386 ^ 0x56D03AE0 ^ *(_DWORD *)(v78 + 4 * (BYTE2(v123) ^ 0xA8u)) ^ (v125 - 66792516);
  v127 = v115 ^ 0xD6600EC7 ^ v126;
  v531 = ((unsigned __int16)(v127 ^ v123) >> 8);
  LODWORD(v80) = *(_DWORD *)(v80 + 4 * (v531 ^ 0x44u));
  v395 = (v127 ^ v123) >> 24;
  LODWORD(v79) = *(_DWORD *)(v79 + 4 * (v395 ^ 0x47));
  v401 = (v127 ^ v123);
  v128 = ((v79 ^ v80 ^ 0x52283513) - 2 * ((v79 ^ v80 ^ 0x52283513) & 0x31E9C2CD ^ (v79 ^ v80) & 8) - 1310080315) ^ *(_DWORD *)(v76 + 4 * (v401 ^ 0xD5u));
  v388 = ((v127 ^ v123) >> 16);
  v129 = (v128 - 66792516 + (~(2 * v128) | 0x7F65887) + 1) ^ *(_DWORD *)(v78 + 4 * (v388 ^ 0xCBu));
  HIDWORD(v510) = v126 ^ 0xA2C7A930 ^ (v129 - ((2 * v129) & 0x44610932) + 573605017);
  v392 = v126 ^ v122;
  LODWORD(v510) = v126 ^ v122 ^ 0xFCC84120 ^ (HIDWORD(v510) - ((2 * HIDWORD(v510)) & 0xB0D51C68) - 664105420);
  HIDWORD(v509) = v510 ^ v127 ^ 0x42632BF0 ^ 0x4662A266;
  LODWORD(v509) = (HIDWORD(v509) - 2 * (HIDWORD(v509) & 0x4AFFBB09 ^ (v510 ^ v127 ^ 0x42632BF0) & 9) + 1258273536) ^ v127 ^ v123;
  v130 = (char *)*(&off_1E8EC5D70 + (int)(v57 & 0xBE93FA87)) - 8;
  v131 = (((v121 ^ v114 ^ 0x1B9155BDu) >> 16)
        - ((2 * ((v121 ^ v114 ^ 0x1B9155BDu) >> 16) + 9213016) & 0x88133E)
        + 84628427) ^ *(_DWORD *)&v130[4 * (((v121 ^ v114 ^ 0x1B9155BDu) >> 16) ^ 0x2D)];
  LODWORD(v60) = ((v60 ^ 0x89) - ((2 * (v60 ^ 0x89) + 9213016) & 0x88133E) + 84628427) ^ *(_DWORD *)&v130[4 * (v60 ^ 0xA4)];
  v132 = (char *)*(&off_1E8EC5D70 + v57 - 114) - 8;
  LODWORD(v78) = (v131 - ((2 * v131) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4
                                                                                  * (((unsigned __int16)(v121 ^ v386 ^ 0x3AE0) >> 8) ^ 0x47)];
  v530 = v57;
  v133 = (char *)*(&off_1E8EC5D70 + (v57 ^ 0x8E)) - 4;
  v134 = (v60 - ((2 * v60) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)&v133[4 * (v67 ^ 0xCC)];
  v135 = v115 ^ 0xD6600EC7 ^ v122;
  v136 = (char *)*(&off_1E8EC5D70 + (v57 ^ 0x21)) - 8;
  LODWORD(v67) = *(_DWORD *)&v136[4 * (v115 ^ 0xC7 ^ v122 ^ 0x53)];
  LODWORD(v67) = *(_DWORD *)&v130[4 * (BYTE2(v135) ^ 0xAA)] ^ *(_DWORD *)&v133[4 * (HIBYTE(v135) ^ 0x3E)] ^ ((BYTE2(v135) ^ 0x87) - ((2 * (BYTE2(v135) ^ 0x87) + 9213016) & 0x88133E) + 84628427) ^ (181304767 * v67 - ((362609534 * v67 + 624060594) & 0x7FBA9178) - 1837728491);
  v137 = *(_DWORD *)&v136[4 * (v122 ^ 0x74)];
  v138 = (181304767 * v137 - ((362609534 * v137 - 1523423054) & 0x922D5438) - 1682973067) ^ *(_DWORD *)&v132[4 * (BYTE1(v122) ^ 0x5A)];
  v504 = v138 - ((2 * v138) & 0x7FBA9178);
  v500 = HIBYTE(v122) ^ 0xB2;
  v469 = BYTE2(v122);
  v465 = (BYTE2(v122) ^ 0x4C) - ((2 * (BYTE2(v122) ^ 0x4C) + 9213016) & 0x88133E);
  v472 = v124 ^ 0xB0;
  v483 = v134 - ((2 * v134) & 0x922D5438);
  v477 = v67 - ((2 * v67) & 0x922D5438);
  HIDWORD(v514) = (v78 - ((2 * v78) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)&v133[4
                                                                                 * ((v121 ^ v114 ^ 0x1B9155BDu) >> 24)] ^ (181304767 * *(_DWORD *)&v136[4 * ((v121 ^ v114) ^ 0x7D)] + 1385772121);
  LODWORD(v61) = *(_DWORD *)&v130[4 * (((v118 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v118 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                              - ((2
                                                                                                * (((v118 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                                + 9213016) & 0x88133E)
                                                                                              + 84628427);
  LODWORD(v67) = *(_DWORD *)(v59 - 144) ^ 0x31676F78;
  v139 = *(_DWORD *)&v130[4 * (BYTE2(v67) ^ 0x7B)] ^ ((BYTE2(v67) ^ 0x56)
                                                    - ((2 * (BYTE2(v67) ^ 0x56) + 9213016) & 0x88133E)
                                                    + 84628427);
  LODWORD(v67) = (v139 + 1071466685 + (~(2 * v139) | 0x80456E87)) ^ *(_DWORD *)&v133[4 * BYTE3(v67)];
  v140 = *(_DWORD *)&v130[4 * (v459 ^ 0x34)] ^ ((v459 ^ 0x19) - ((2 * (v459 ^ 0x19) + 9213016) & 0x88133E) + 84628427);
  v141 = (v140 - ((2 * v140) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4 * (v463 ^ 5)];
  v460 = v67 - ((2 * v67) & 0x922D5438);
  v464 = v141 - ((2 * v141) & 0x7FBA9178);
  LODWORD(v67) = *(_DWORD *)&v136[4 * (*(_DWORD *)(v59 - 148) ^ 0xDF)];
  v142 = *(_DWORD *)(v59 - 148) ^ 0x5A18571F;
  LODWORD(v67) = *(_DWORD *)&v133[4 * HIBYTE(v142)] ^ ((BYTE2(v142) ^ 0xC1)
                                                     - ((2 * (BYTE2(v142) ^ 0xC1) + 9213016) & 0x88133E)
                                                     + 84628427) ^ *(_DWORD *)&v130[4 * (BYTE2(v142) ^ 0xEC)] ^ (181304767 * v67 - ((362609534 * v67 + 624060594) & 0x7FBA9178) - 1837728491);
  LODWORD(v61) = *(_DWORD *)&v133[4 * ((v118 ^ 0xE9B45E6C) >> 24)] ^ (v61 + 1071466685 + (~(2 * v61) | 0x80456E87));
  v443 = BYTE1(v118) ^ 0xB4;
  v454 = v61 - ((2 * v61) & 0x922D5438);
  v457 = v67 - ((2 * v67) & 0x922D5438);
  LOWORD(v134) = v451 ^ 0x8EA4;
  v143 = v451 ^ 0x35C48CD5;
  v452 = HIBYTE(v115) ^ 0xC3;
  LODWORD(v62) = *(_DWORD *)&v130[4 * (v424 ^ 0xDE)] ^ ((v424 ^ 0xF3)
                                                      - ((2 * (v424 ^ 0xF3) + 9213016) & 0x88133E)
                                                      + 84628427);
  LODWORD(v61) = *(_DWORD *)&v130[4 * (BYTE2(v143) ^ 0xFE)] ^ ((BYTE2(v143) ^ 0xD3)
                                                             - ((2 * (BYTE2(v143) ^ 0xD3) + 9213016) & 0x88133E)
                                                             + 84628427);
  v144 = *(_DWORD *)&v136[4 * (v115 ^ 2)];
  LODWORD(v62) = (v62 - ((2 * v62) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)&v133[4 * (v438 ^ 0x36)];
  v145 = *(_DWORD *)&v130[4 * (BYTE2(v386) ^ 0xFC)] ^ ((BYTE2(v386) ^ 0xD1)
                                                     - ((2 * (BYTE2(v386) ^ 0xD1) + 9213016) & 0x88133E)
                                                     + 84628427);
  v146 = (v145 - ((2 * v145) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4
                                                                          * (BYTE1(*(_DWORD *)(v59 - 192)) ^ 0x8B)];
  v425 = v62 - ((2 * v62) & 0x922D5438);
  v439 = v146 - ((2 * v146) & 0x7FBA9178);
  LODWORD(v62) = *(_DWORD *)&v132[4 * (((unsigned __int16)(v115 ^ 0xD6C7) >> 8) ^ 0x20)] ^ ((((v115 ^ 0xB4FFD6C7) >> 16) ^ 0xD7) - ((2 * (((v115 ^ 0xB4FFD6C7) >> 16) ^ 0xD7) + 9213016) & 0x88133E) + 84628427) ^ *(_DWORD *)&v130[4 * (((v115 ^ 0xB4FFD6C7) >> 16) ^ 0xFA)] ^ (181304767 * v144 - ((362609534 * v144 - 1523423054) & 0x922D5438) - 1682973067);
  v147 = (v61 - ((2 * v61) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)&v133[4 * HIBYTE(v143)] ^ (181304767
                                                                                             * *(_DWORD *)&v136[4 * (v134 ^ 0x99)]
                                                                                             + 1385772121);
  v399 = BYTE1(v134) ^ 0x14;
  v407 = v147 - ((2 * v147) & 0x922D5438);
  v413 = v62 - ((2 * v62) & 0x7FBA9178);
  v148 = v428 ^ 0xEB;
  v429 = v410 ^ 0x2BEAE26B;
  v149 = *(_DWORD *)&v130[4 * (((v410 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v410 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                       - ((2
                                                                                         * (((v410 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                         + 9213016) & 0x88133E)
                                                                                       + 84628427) ^ (181304767 * *(_DWORD *)&v136[4 * (v410 ^ 0x1E)] + 1385772121);
  v150 = (v149 - ((2 * v149) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4 * (BYTE1(v410) ^ 8)];
  LODWORD(v62) = *(_DWORD *)&v130[4 * (v441 ^ 0x61)] ^ ((v441 ^ 0x4C)
                                                      - ((2 * (v441 ^ 0x4C) + 9213016) & 0x88133E)
                                                      + 84628427);
  LODWORD(v78) = *(_DWORD *)&v136[4 * (v404 ^ 0x55)];
  v442 = v150 - ((2 * v150) & 0x7FBA9178);
  v383 = BYTE2(*(_DWORD *)(v59 - 136));
  v411 = v446 ^ 0x4B;
  v151 = (v62 - ((2 * v62) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4 * v148] ^ (181304767
                                                                                     * *(_DWORD *)&v136[4 * (v448 ^ 0x2D)]
                                                                                     + 1385772121);
  v447 = v151 - ((2 * v151) & 0x7FBA9178);
  v405 = HIBYTE(v386) ^ 0xBA;
  v152 = *(_DWORD *)(v59 - 160);
  v153 = (181304767 * v78 - ((362609534 * v78 + 624060594) & 0x7FBA9178) - 1837728491) ^ ((BYTE2(v152) ^ 0xBA)
                                                                                        - ((2 * (BYTE2(v152) ^ 0xBA)
                                                                                          + 9213016) & 0x88133E)
                                                                                        + 84628427) ^ *(_DWORD *)&v133[4 * (HIBYTE(v152) ^ 0x2F)] ^ *(_DWORD *)&v130[4 * (BYTE2(v152) ^ 0x97)];
  v387 = v153 - ((2 * v153) & 0x922D5438);
  v154 = *(_DWORD *)&v130[4 * (BYTE2(*(_DWORD *)(v59 - 184)) ^ 0x36)] ^ ((BYTE2(*(_DWORD *)(v59 - 184)) ^ 0x1B)
                                                                                        - ((2
                                                                                          * (BYTE2(*(_DWORD *)(v59 - 184)) ^ 0x1B)
                                                                                          + 9213016) & 0x88133E)
                                                                                        + 84628427);
  LODWORD(v62) = *(_DWORD *)&v130[4 * (BYTE2(*(_DWORD *)(v59 - 176)) ^ 0x56)] ^ ((BYTE2(*(_DWORD *)(v59 - 176)) ^ 0x7B)
                                                                                                + 84628428
                                                                                                + ((2 * (BYTE2(*(_DWORD *)(v59 - 176)) ^ 0x7B)
                                                                                                  + 88) & 0xFFFFFF3F ^ 0xFF77EFFF));
  v155 = (v154 - ((2 * v154) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4
                                                                          * (BYTE1(*(_DWORD *)(v59 - 184)) ^ 0x6A)] ^ (181304767 * *(_DWORD *)&v136[4 * (*(_DWORD *)(v59 - 184) ^ 0x3D)] + 1385772121);
  LODWORD(v78) = *(_DWORD *)&v136[4 * (*(_DWORD *)(v59 - 168) ^ 0xFB)];
  LODWORD(v78) = (181304767 * v78 - ((362609534 * v78 - 1523423054) & 0x922D5438) - 1682973067) ^ *(_DWORD *)&v132[4 * (BYTE1(*(_DWORD *)(v59 - 168)) ^ 0xEF)];
  LODWORD(v381) = v78 - ((2 * v78) & 0x7FBA9178);
  HIDWORD(v381) = v155 - ((2 * v155) & 0x7FBA9178);
  LODWORD(v62) = (v62 - ((2 * v62) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)&v133[4
                                                                                * (HIBYTE(*(_DWORD *)(v59 - 176)) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v136[4 * (*(_DWORD *)(v59 - 176) ^ 0x79)] + 1385772121);
  LODWORD(v78) = *(_DWORD *)&v130[4 * (v418 ^ 0x86)] ^ ((v418 ^ 0xAB)
                                                      - ((2 * (v418 ^ 0xAB) + 9213016) & 0x88133E)
                                                      + 84628427);
  LODWORD(v78) = (v78 - ((2 * v78) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)&v133[4 * v435];
  v449 = v78 + 1226222108 + (~(2 * v78) | 0x6DD2ABC7);
  v436 = v62 - ((2 * v62) & 0x922D5438);
  v431 = v434;
  LODWORD(v78) = *(_DWORD *)&v130[4 * (v388 ^ 0x8B)] ^ ((v388 ^ 0xA6)
                                                      - ((2 * (v388 ^ 0xA6) + 9213016) & 0x88133E)
                                                      + 84628427);
  LODWORD(v76) = ((v115 ^ 0xD6600EC7 ^ v126 ^ 0x42632BF0) >> 16);
  v389 = (v76 ^ 0xEC) - ((2 * (v76 ^ 0xEC) + 9213016) & 0x88133E);
  LODWORD(v67) = v395 ^ 0x22;
  v156 = *(_DWORD *)&v130[4 * (BYTE2(v126) ^ 0xE8)] ^ ((BYTE2(v126) ^ 0xC5)
                                                     - ((2 * (BYTE2(v126) ^ 0xC5) + 9213016) & 0x88133E)
                                                     + 84628427);
  v384 = BYTE1(v135) ^ 0x8E;
  LODWORD(v60) = (181304767 * *(_DWORD *)&v136[4 * (v126 ^ 0xCA)] + 1385772121) ^ *(_DWORD *)&v133[4 * (HIBYTE(v126) ^ 0x8E)] ^ (v156 - ((2 * v156) & 0x7FBA9178) + 1071466684);
  v419 = v126 ^ v122 ^ 0x44039AAA;
  v157 = (181304767 * *(_DWORD *)&v136[4 * (v392 ^ 0xDB)] + 1385772121) ^ (((v392 ^ 0x44039AAAu) >> 16)
                                                                                          - ((2
                                                                                            * ((v392 ^ 0x44039AAAu) >> 16)
                                                                                            + 9213016) & 0x88133E)
                                                                                          + 84628427) ^ *(_DWORD *)&v130[4 * (((v392 ^ 0x44039AAAu) >> 16) ^ 0x2D)];
  v396 = v60 - ((2 * v60) & 0x922D5438);
  LODWORD(v60) = *(_DWORD *)&v133[4 * v67];
  LODWORD(v67) = (v157 - ((2 * v157) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4
                                                                                  * (((unsigned __int16)(v126 ^ v122) >> 8) ^ 0xC0)];
  LODWORD(v60) = v60 ^ (181304767 * *(_DWORD *)&v136[4 * (v401 ^ 0xFE)] + 1385772121) ^ (v78
                                                                                       - ((2 * v78) & 0x7FBA9178)
                                                                                       + 1071466684);
  v402 = v67 - ((2 * v67) & 0x7FBA9178);
  v393 = v60 - ((2 * v60) & 0x922D5438);
  LODWORD(v60) = *(_DWORD *)&v136[4 * (v479 ^ 0xEC)];
  LODWORD(v78) = *(_DWORD *)&v130[4 * (v513 ^ 0x32)] ^ ((v513 ^ 0x1F)
                                                      - ((2 * (v513 ^ 0x1F) + 9213016) & 0x88133E)
                                                      + 84628427);
  LODWORD(v67) = *(_DWORD *)&v136[4 * (v502 ^ 0xE6)];
  v158 = *(_DWORD *)&v133[4 * (HIBYTE(v479) ^ 0xCA)] ^ ((BYTE2(v479) ^ 0x2F)
                                                      - ((2 * (BYTE2(v479) ^ 0x2F) + 9213016) & 0x88133E)
                                                      + 84628427) ^ *(_DWORD *)&v130[4 * (BYTE2(v479) ^ 2)] ^ (181304767 * v60 - ((362609534 * v60 + 624060594) & 0x7FBA9178) - 1837728491);
  v159 = (v78 - ((2 * v78) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4 * (v518 ^ 0x8C)] ^ (181304767
                                                                                              * *(_DWORD *)&v136[4 * (v515 ^ 0xD9)]
                                                                                              + 1385772121);
  LODWORD(v60) = *(_DWORD *)&v133[4 * ((v502 ^ 0x49A657C7u) >> 24)] ^ ((((v502 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                     - ((2
                                                                       * (((v502 ^ 0x49A657C7u) >> 16) ^ 0x35)
                                                                       + 9213016) & 0x88133E)
                                                                     + 84628427) ^ *(_DWORD *)&v130[4 * (((v502 ^ 0x49A657C7u) >> 16) ^ 0x18)] ^ (181304767 * v67 - ((362609534 * v67 + 624060594) & 0x7FBA9178) - 1837728491);
  LODWORD(v67) = *(_DWORD *)&v130[4 * (((v527 ^ 0x7D5AAB23u) >> 16) ^ 0x2D)] ^ (((v527 ^ 0x7D5AAB23u) >> 16)
                                                                                               - ((2
                                                                                                 * ((v527 ^ 0x7D5AAB23u) >> 16)
                                                                                                 + 9213016) & 0x88133E)
                                                                                               + 84628427);
  LODWORD(v514) = (v158 - ((2 * v158) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4 * (BYTE1(v479) ^ 0x2E)];
  v519 = v159 - ((2 * v159) & 0x7FBA9178);
  v160 = (v67 - ((2 * v67) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)&v133[4 * ((v527 ^ 0x7D5AAB23u) >> 24)] ^ (181304767 * *(_DWORD *)&v136[4 * (v527 ^ 0xB3)] + 1385772121);
  v480 = BYTE1(v527) ^ 0x2B;
  v528 = v60 - ((2 * v60) & 0x922D5438);
  v516 = v160 - ((2 * v160) & 0x922D5438);
  v161 = *(_DWORD *)&v130[4 * (v485 ^ 0xC1)] ^ ((v485 ^ 0xEC) - ((2 * (v485 ^ 0xEC) + 9213016) & 0x88133E) + 84628427);
  v162 = (v161 - ((2 * v161) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4
                                                                          * ((v495 - ((2 * v490) & 0x166) + 179) ^ 0x54)] ^ (181304767 * *(_DWORD *)&v136[4 * (v506 ^ 0xE2)] + 1385772121);
  v163 = *(_DWORD *)&v136[4 * (v488 ^ 0x5A)];
  v164 = (181304767 * v163 - ((362609534 * v163 + 624060594) & 0x7FBA9178) - 1837728491) ^ *(_DWORD *)&v133[4 * (HIBYTE(v498) ^ 9)];
  v507 = HIBYTE(*(_DWORD *)(v59 - 168)) ^ 0xE8;
  *(_DWORD *)(v59 - 168) = v162 - ((2 * v162) & 0x7FBA9178);
  v491 = v164 - ((2 * v164) & 0x922D5438);
  v496 = v474 ^ 0xEEA2BFA8;
  v165 = *(_DWORD *)&v130[4 * (((v474 ^ 0xEEA2BFA8) >> 16) ^ 0x86)] ^ ((((v474 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                      - ((2
                                                                                        * (((v474 ^ 0xEEA2BFA8) >> 16) ^ 0xAB)
                                                                                        + 9213016) & 0x88133E)
                                                                                      + 84628427);
  LODWORD(v61) = (181304767 * *(_DWORD *)&v136[4 * (v474 ^ 0x68)] + 1385772121) ^ *(_DWORD *)&v132[4 * (BYTE1(v474) ^ 0x55)] ^ (v165 - ((2 * v165) & 0x922D5438) + 1226222108);
  v374 = v76 ^ 0xC1;
  v486 = *(_DWORD *)(v59 - 140) ^ 0x231B9DB5;
  LODWORD(v379) = v61 - ((2 * v61) & 0x7FBA9178);
  v166 = v538 ^ 0xAF37F92F;
  v539 = *(_DWORD *)&v136[4 * (v493 ^ 0x60)];
  v167 = *(_DWORD *)&v136[4 * (*(_DWORD *)(v59 - 248) ^ 0xFB)];
  v168 = *(_DWORD *)(v59 - 144);
  LODWORD(v76) = *(_DWORD *)&v136[4 * (v168 ^ 0xB8)];
  v377 = HIBYTE(v102) ^ 0x7B;
  v169 = *(_DWORD *)&v136[4 * (v118 ^ 0xAC)];
  v170 = *(_DWORD *)&v136[4 * (*(_DWORD *)(v59 - 192) ^ 0xA3)];
  v171 = *(_DWORD *)&v136[4 * (v522 ^ 0xF0)];
  v172 = *(_DWORD *)&v136[4 * (*(_DWORD *)(v59 - 136) ^ 0x57)];
  v173 = *(_DWORD *)&v136[4 * (v416 ^ 0x73)];
  v174 = v115 ^ 0xD6600EC7 ^ v126;
  LODWORD(v78) = *(_DWORD *)&v136[4 * (v174 ^ 0x78)];
  LODWORD(v62) = *(_DWORD *)&v136[4 * (*(_DWORD *)(v59 - 140) ^ 0x75)];
  LODWORD(v61) = *(_DWORD *)&v136[4 * (v535 ^ 0x74)];
  LODWORD(v67) = v533;
  v175 = *(_DWORD *)&v136[4 * (v533 ^ 0xF)];
  v176 = *(_DWORD *)&v136[4 * (v101 ^ 0x2A)];
  LODWORD(v136) = *(_DWORD *)&v136[4 * (v166 ^ 0x39)];
  HIDWORD(v378) = 181304767 * v539 + 1385772121;
  *(_DWORD *)(v59 - 248) = 181304767 * v167 + 1385772121;
  v536 = 181304767 * v76 + 1385772121;
  v540 = 181304767 * v169 + 1385772121;
  v475 = 181304767 * v170 + 1385772121;
  HIDWORD(v379) = 181304767 * v171 + 1385772121;
  *(_DWORD *)(v59 - 192) = 181304767 * v172 + 1385772121;
  v494 = 181304767 * v78 + 1385772121;
  v390 = 181304767 * v62 + 1385772121;
  v523 = 181304767 * (_DWORD)v136 + 1385772121;
  LODWORD(v61) = (181304767 * v61 - ((362609534 * v61 + 624060594) & 0x7FBA9178) - 1837728491) ^ *(_DWORD *)&v133[4 * v377];
  v177 = *(_DWORD *)&v130[4 * (BYTE2(v67) ^ 0x68)] ^ ((BYTE2(v67) ^ 0x45)
                                                    - ((2 * (BYTE2(v67) ^ 0x45) + 9213016) & 0x88133E)
                                                    + 84628427) ^ (181304767 * v175 + 1385772121);
  v178 = (v177 - ((2 * v177) & 0x922D5438) + 1226222108) ^ *(_DWORD *)&v132[4 * (BYTE1(v533) ^ 0x39)];
  HIDWORD(v376) = v465 + 84628427;
  LODWORD(v382) = (v383 ^ 0xA7) - ((2 * (v383 ^ 0xA7) + 9213016) & 0x88133E) + 84628427;
  LODWORD(v378) = (v431 ^ 0x65) - ((2 * (v431 ^ 0x65) + 9213016) & 0x88133E) + 84628427;
  LODWORD(v376) = v389 + 84628427;
  HIDWORD(a23) = (BYTE2(v486) ^ 0xC1) - ((2 * (BYTE2(v486) ^ 0xC1) + 9213016) & 0x88133E) + 84628427;
  v466 = (BYTE2(v498) ^ 0x85) - ((2 * (BYTE2(v498) ^ 0x85) + 9213016) & 0x88133E) + 84628427;
  LODWORD(v62) = *(_DWORD *)&v130[4 * (BYTE2(v166) ^ 0x3C)] ^ ((BYTE2(v166) ^ 0x11)
                                                             - ((2 * (BYTE2(v166) ^ 0x11) + 9213016) & 0x88133E)
                                                             + 84628427);
  v179 = (181304767 * v176 + 1385772121) ^ ((BYTE2(v101) ^ 0x37)
                                          + 84628428
                                          + ((2 * (BYTE2(v101) ^ 0x37) + 88) & 0xFFFFFF3F ^ 0xFF77EFFF)) ^ *(_DWORD *)&v130[4 * (BYTE2(v101) ^ 0x1A)];
  v470 = *(_DWORD *)&v130[4 * (v469 ^ 0x61)];
  v180 = v61 - ((2 * v61) & 0x922D5438);
  v417 = *(_DWORD *)&v130[4 * (v383 ^ 0x8A)];
  HIDWORD(v382) = *(_DWORD *)&v130[4 * (v431 ^ 0x48)];
  LODWORD(v373) = *(_DWORD *)&v130[4 * v374];
  v181 = (v179 - ((2 * v179) & 0x7FBA9178) + 1071466684) ^ *(_DWORD *)&v133[4 * (HIBYTE(v101) ^ 0xF9)];
  HIDWORD(v373) = *(_DWORD *)&v130[4 * (BYTE2(v486) ^ 0xEC)];
  LODWORD(v375) = *(_DWORD *)&v130[4 * (BYTE2(v498) ^ 0xA8)];
  LODWORD(v78) = *(_DWORD *)(v59 - 216);
  v432 = *(_DWORD *)&v130[4 * (v78 ^ 0x1A)];
  HIDWORD(v372) = *(_DWORD *)&v132[4 * v472];
  v473 = *(_DWORD *)&v132[4 * v384];
  LODWORD(v385) = *(_DWORD *)&v132[4 * (BYTE1(v168) ^ 0x85)];
  HIDWORD(v375) = *(_DWORD *)&v132[4 * (BYTE1(*(_DWORD *)(v59 - 148)) ^ 0xBD)];
  HIDWORD(v380) = *(_DWORD *)&v132[4 * v443];
  LODWORD(v372) = *(_DWORD *)&v132[4 * (*(_DWORD *)(v59 - 256) ^ 0x1A)];
  v400 = *(_DWORD *)&v132[4 * v399];
  v182 = *(_DWORD *)(v59 - 136);
  *(_DWORD *)(v59 - 216) = *(_DWORD *)&v132[4 * (BYTE1(v182) ^ 0xF5)];
  *(_DWORD *)(v59 - 160) = *(_DWORD *)&v132[4 * (BYTE1(*(_DWORD *)(v59 - 160)) ^ 0xD6)];
  *(_DWORD *)(v59 - 256) = *(_DWORD *)&v132[4 * (v422 ^ 0xEE)];
  v444 = *(_DWORD *)&v132[4 * (BYTE1(*(_DWORD *)(v59 - 176)) ^ 0xD7)];
  LODWORD(v371) = *(_DWORD *)&v132[4 * (BYTE1(v174) ^ 0x76)];
  v183 = *(_DWORD *)&v132[4 * (BYTE1(v126) ^ 0x16)];
  v499 = *(_DWORD *)&v132[4 * (v531 ^ 0xBE)];
  LODWORD(v60) = ((*(_DWORD *)(v59 - 240) >> 15) & 0x58 ^ 0x48) + (v78 ^ 0x4C64A1B);
  *(_DWORD *)(v59 - 176) = *(_DWORD *)&v132[4 * (BYTE1(v502) ^ 0xB9)];
  *(_DWORD *)(v59 - 240) = *(_DWORD *)&v132[4 * v480];
  HIDWORD(v371) = *(_DWORD *)&v132[4 * (BYTE1(*(_DWORD *)(v59 - 140)) ^ 0x77)];
  v468 = *(_DWORD *)&v132[4 * (BYTE1(v488) ^ 0xE8)];
  v532 = v60 - ((2 * v60) & 0x88133E);
  *(_DWORD *)(v59 - 208) = *(_DWORD *)&v132[4 * (*(_DWORD *)(v59 - 208) ^ 0x84)];
  v537 = *(_DWORD *)&v132[4 * (BYTE1(v101) ^ 0x2E)];
  LODWORD(v136) = v178 - ((2 * v178) & 0x7FBA9178);
  v184 = *(_DWORD *)&v132[4 * (BYTE1(*(_DWORD *)(v59 - 232)) ^ 0xC8)];
  v489 = v483 + 1226222108;
  v481 = *(_DWORD *)&v133[4 * v500];
  v484 = v477 + 1226222108;
  *(_DWORD *)(v59 - 200) = *(_DWORD *)&v133[4 * (*(_DWORD *)(v59 - 200) ^ 7)];
  v534 = v460 + 1226222108;
  LODWORD(v380) = v457 + 1226222108;
  v423 = v454 + 1226222108;
  v478 = *(_DWORD *)&v133[4 * v405];
  v426 = v425 + 1226222108;
  v461 = *(_DWORD *)&v133[4 * v452];
  v406 = *(_DWORD *)&v133[4 * (HIBYTE(v182) ^ 0xB8)];
  *(_DWORD *)(v59 - 232) = *(_DWORD *)&v133[4 * HIBYTE(v429)];
  v430 = v407 + 1226222108;
  v408 = v387 + 1226222108;
  v412 = *(_DWORD *)&v133[4 * v411];
  v455 = *(_DWORD *)&v133[4 * v507];
  v458 = *(_DWORD *)&v133[4 * (HIBYTE(*(_DWORD *)(v59 - 184)) ^ 0x15)];
  v453 = v436 + 1226222108;
  LODWORD(v61) = v396 + 1226222108;
  v185 = v393 + 1226222108;
  *(_DWORD *)(v59 - 184) = v528 + 1226222108;
  v529 = v516 + 1226222108;
  v397 = v491 + 1226222108;
  v517 = v180 + 1226222108;
  v437 = v181 - ((2 * v181) & 0x922D5438) + 1226222108;
  v186 = *(_DWORD *)&v133[4 * (HIBYTE(v174) ^ 0xA6)];
  v187 = *(_DWORD *)&v133[4 * HIBYTE(v419)];
  v188 = v184 ^ (v62 - ((2 * v62) & 0x922D5438) + 1226222108);
  v525 = *(_DWORD *)&v133[4 * (v524 ^ 0xAA)];
  HIDWORD(a9) = *(_DWORD *)&v133[4 * HIBYTE(v486)];
  HIDWORD(v370) = *(_DWORD *)&v133[4 * (*(_DWORD *)(v59 - 220) ^ 0x38)];
  LODWORD(v370) = *(_DWORD *)&v133[4 * HIBYTE(v496)];
  v394 = *(_DWORD *)&v133[4 * (BYTE3(v67) ^ 0xE7)];
  HIDWORD(v385) = *(_DWORD *)&v133[4 * HIBYTE(v166)];
  v189 = v504 + 1071466684;
  v420 = v464 + 1071466684;
  v190 = v413 + 1071466684;
  *(_DWORD *)(v59 - 220) = v442 + 1071466684;
  v414 = v447 + 1071466684;
  v520 = v519 + 1071466684;
  v191 = *(_DWORD *)(v59 - 168) + 1071466684;
  *(_DWORD *)(v59 - 168) = (_DWORD)v136 + 1071466684;
  v192 = v188 - ((2 * v188) & 0x7FBA9178) + 1071466684;
  v193 = HIDWORD(v514) ^ v514 ^ 0x6285F181;
  v194 = v61 ^ v183 ^ v193;
  v195 = (char *)*(&off_1E8EC5D70 + (v530 ^ 0xCC)) - 8;
  v196 = (char *)*(&off_1E8EC5D70 + v530 - 127) - 4;
  v197 = (uint64_t)*(&off_1E8EC5D70 + (v530 ^ 0x65));
  v198 = (char *)*(&off_1E8EC5D70 + (v530 & 0x6A6321E3)) - 8;
  v199 = (v198[*(unsigned __int8 *)(v59 - 109) ^ 0x41] ^ 0xBE) & 0xFF00FFFF | (((*(_BYTE *)(v197 + (*(unsigned __int8 *)(v59 - 111) ^ 0x40)) + 94) ^ 0x5A) << 16) | ((v196[*(unsigned __int8 *)(v59 - 110) ^ 0xBBLL] ^ 0xB8) << 8) | ((v195[*(unsigned __int8 *)(v59 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v59 - 112) - ((2 * *(unsigned __int8 *)(v59 - 112)) & 0x2A) + 21) ^ 0x84) << 24);
  v505 = v196;
  v508 = v195;
  v200 = v198[*(unsigned __int8 *)(v59 - 97) ^ 0x74] ^ 0x19 | (((*(_BYTE *)(v197 + (*(unsigned __int8 *)(v59 - 99) ^ 0xF3)) + 94) ^ 2) << 16) | ((v196[*(unsigned __int8 *)(v59 - 98) ^ 0x20] ^ 0x52) << 8) | ((v195[*(unsigned __int8 *)(v59 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v59 - 100) - ((2 * *(unsigned __int8 *)(v59 - 100)) & 0x2A) + 21) ^ 0x85) << 24);
  v501 = v198;
  v503 = v197;
  v201 = (v198[*(unsigned __int8 *)(v59 - 105) ^ 0xE4] ^ 0x88) & 0xFF00FFFF | ((v195[*(unsigned __int8 *)(v59 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v59 - 108) - ((2 * *(unsigned __int8 *)(v59 - 108)) & 0x2A) + 21) ^ 0xFFFFFFE1) << 24) | (((*(_BYTE *)(v197 + (*(unsigned __int8 *)(v59 - 107) ^ 0x27)) + 94) ^ 0x96) << 16) | ((v196[*(unsigned __int8 *)(v59 - 106) ^ 9] ^ 0xBD) << 8);
  v202 = (v198[*(unsigned __int8 *)(v59 - 101) ^ 0xF2] ^ 0x31) & 0xFF00FFFF | ((v195[*(unsigned __int8 *)(v59 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v59 - 104) - ((2 * *(unsigned __int8 *)(v59 - 104)) & 0x2A) + 21) ^ 0xE0) << 24) | ((v196[*(unsigned __int8 *)(v59 - 102) ^ 0xBELL] ^ 0x1A) << 8) & 0xFF00FFFF | (((*(_BYTE *)(v197 + (*(unsigned __int8 *)(v59 - 103) ^ 0xE9)) + 94) ^ 0x8A) << 16);
  if ((v194 & 0x80) != 0)
    v203 = -128;
  else
    v203 = 128;
  *(_DWORD *)(v59 - 136) = v200 ^ 0xCCD14D24;
  *(_DWORD *)(v59 - 140) = v199 ^ 0x4678B4BB;
  *(_DWORD *)(v59 - 144) = v201 ^ 0x481F558;
  *(_DWORD *)(v59 - 148) = v202 ^ 0x9D9A358B;
  v204 = *(unsigned __int8 **)(v59 - 120);
  HIDWORD(v497) = v185 ^ v499;
  LODWORD(v497) = v186 ^ v371 ^ v376 ^ v373 ^ v494;
  HIDWORD(v492) = (v402 + 1071466684) ^ v187;
  LODWORD(v492) = HIDWORD(v378) ^ HIDWORD(v372) ^ v489;
  HIDWORD(v487) = v484 ^ v473;
  LODWORD(v487) = v481 ^ HIDWORD(v376) ^ v470 ^ v189;
  HIDWORD(v482) = v430 ^ v400;
  LODWORD(v482) = v426 ^ v372 ^ HIDWORD(v379);
  HIDWORD(v476) = (v439 + 1071466684) ^ v478 ^ v475;
  LODWORD(v476) = v190 ^ v461;
  HIDWORD(v471) = HIDWORD(v371) ^ HIDWORD(a9) ^ HIDWORD(a23) ^ HIDWORD(v373) ^ v390;
  LODWORD(v471) = v468 ^ v466 ^ v375 ^ v397;
  HIDWORD(v467) = (v379 + 1071466684) ^ v370;
  LODWORD(v467) = v191 ^ HIDWORD(v370);
  HIDWORD(v462) = v453 ^ v444;
  LODWORD(v462) = v455 ^ v378 ^ HIDWORD(v382) ^ (v381 + 1071466684);
  HIDWORD(v456) = (HIDWORD(v381) + 1071466684) ^ v458;
  LODWORD(v456) = (181304767 * v173 + 1385772121) ^ *(_DWORD *)(v59 - 256) ^ (v449 + 1);
  HIDWORD(v450) = v523 ^ HIDWORD(v385) ^ v192;
  LODWORD(v450) = v437 ^ v537;
  HIDWORD(v445) = *(_DWORD *)(v59 - 168) ^ v394;
  LODWORD(v445) = *(_DWORD *)(v59 - 208) ^ (v532 + 4524447) ^ v432 ^ v517;
  HIDWORD(v440) = v520 ^ v525;
  LODWORD(v440) = *(_DWORD *)(v59 - 176) ^ *(_DWORD *)(v59 - 184);
  HIDWORD(v433) = v529 ^ *(_DWORD *)(v59 - 240);
  LODWORD(v433) = v380 ^ HIDWORD(v375);
  HIDWORD(v427) = v534 ^ v385 ^ v536;
  LODWORD(v427) = v540 ^ HIDWORD(v380) ^ v423;
  HIDWORD(v421) = *(_DWORD *)(v59 - 248) ^ *(_DWORD *)(v59 - 200) ^ v420;
  LODWORD(v421) = v408 ^ *(_DWORD *)(v59 - 160);
  HIDWORD(v415) = *(_DWORD *)(v59 - 216) ^ v382 ^ v406 ^ v417 ^ *(_DWORD *)(v59 - 192);
  LODWORD(v415) = v414 ^ v412;
  HIDWORD(v409) = *(_DWORD *)(v59 - 220) ^ *(_DWORD *)(v59 - 232);
  LODWORD(v409) = (v203 + (v194 ^ 0x2497E332)) ^ v193;
  v205 = *(_DWORD *)(v59 - 128);
  HIDWORD(v403) = v205 ^ 0x3D5;
  LODWORD(v403) = v205 ^ 0x381;
  HIDWORD(v398) = v205 ^ 0x383;
  LODWORD(v398) = v205 ^ 0x305;
  HIDWORD(v391) = v205 ^ 0x3F6;
  LODWORD(v391) = v205 ^ 0x37C;
  HIDWORD(a23) = v205 ^ 0x34D;
  v206 = v205;
  v521 = (v205 + 108) | 0x121u;
  v207 = v521 ^ 0x56E;
  *(_QWORD *)(v59 - 184) = v207;
  v208 = *(_BYTE *)(v197 + (v204[v207] ^ 0xF3)) + 94;
  *(_QWORD *)(v59 - 160) = 1;
  v209 = *(_BYTE *)(v197 + (v204[1] ^ 0x57));
  *(_QWORD *)(v59 - 168) = 10;
  v210 = v204[10] ^ 0xB6;
  *(_QWORD *)(v59 - 192) = 4;
  v211 = v204[4];
  v212 = v508[v211 ^ 0x9A];
  v213 = (v505[v210] ^ 0x37) << 8;
  *(_QWORD *)(v59 - 240) = 7;
  LODWORD(v210) = v212 ^ (v211 - ((2 * v211) & 0x2A) + 21) ^ 0xFFFFFFCF;
  v214 = v204[7] ^ 0xD6;
  *(_QWORD *)(v59 - 232) = 2;
  LODWORD(v210) = v501[v214] ^ 0xDB | ((_DWORD)v210 << 24);
  LODWORD(v214) = v505[v204[2]] ^ 0x25;
  *(_QWORD *)(v59 - 200) = 3;
  v215 = (((v209 + 94) ^ 0xF6) << 16) | ((_DWORD)v214 << 8);
  LODWORD(v214) = v501[v204[3] ^ 0x74];
  *(_QWORD *)(v59 - 176) = 12;
  v216 = v215 | v214 ^ 0x19;
  LODWORD(v214) = v508[v204[12] ^ 0x6ELL] ^ (v204[12] - ((2 * v204[12]) & 0x2A) + 21) ^ 0x51;
  *(_QWORD *)(v59 - 216) = 0;
  v217 = ((v208 ^ 2) << 16) | ((_DWORD)v214 << 24);
  v218 = v216 | ((v508[*v204 ^ 0x15] ^ (*v204 + (~(2 * *v204) | 0xD5) + 22) ^ 0xAE) << 24);
  v219 = v213 | ((v508[v204[8] ^ 0x46] ^ (v204[8] - ((2 * v204[8]) & 0x2A) + 21) ^ 0xFFFFFFE7) << 24);
  *(_QWORD *)(v59 - 208) = 14;
  LODWORD(v214) = v505[v204[14] ^ 0xD5] ^ 0xAD;
  *(_QWORD *)(v59 - 248) = 5;
  LODWORD(v210) = v210 & 0xFF00FFFF | (((*(_BYTE *)(v197 + (v204[5] ^ 0x9DLL)) + 94) ^ 0xF7) << 16);
  v220 = v501[v204[11] ^ 0xC2] ^ 0x3C | v219;
  *(_DWORD *)(v59 - 220) = 365567535;
  v221 = v204[6] ^ 0xA4;
  v222 = v220 & 0xFF00FFFF | (((*(_BYTE *)(v197 + (v204[9] ^ 0x3ELL)) + 94) ^ 0xDF) << 16);
  *(_QWORD *)(v59 - 256) = 15;
  v223 = v501[v204[15] ^ 0x47] ^ 0x19 | v217 | ((_DWORD)v214 << 8);
  v526 = v210 | ((v505[v221] ^ 0xFD) << 8);
  v224 = (char *)*(&off_1E8EC5D70 + (int)v403) - 4;
  v225 = *(_DWORD *)&v224[4 * (((unsigned __int16)(v526 ^ v510) >> 8) ^ 0x21)] ^ ((((unsigned __int16)(v526 ^ v510) >> 8) ^ 0x4C)
                                                                                                 - 11119213
                                                                                                 - (((v526 ^ v510) >> 7) & 0x126));
  v226 = v218 ^ HIDWORD(v510) ^ 0x730032AA;
  v227 = (uint64_t)*(&off_1E8EC5D70 + SHIDWORD(v403));
  v228 = (v225 - 534621661 - ((2 * v225) & 0xC044A446)) ^ *(_DWORD *)(v227
                                                                    + 4
                                                                    * ((v218 ^ BYTE4(v510)) ^ 0xAAu));
  v229 = ((((unsigned __int16)(v509 ^ v223) >> 8) ^ 0xDA)
        - 11119213
        - 2 * ((((v509 ^ v223) >> 8) ^ 0x1C0FDA) & 0x97 ^ ((v509 ^ v223) >> 8) & 4)) ^ *(_DWORD *)&v224[4 * (((unsigned __int16)(v509 ^ v223) >> 8) ^ 0xB7)];
  v230 = (char *)*(&off_1E8EC5D70 + SHIDWORD(v398)) - 12;
  v231 = *(_DWORD *)&v230[4 * (((v222 ^ HIDWORD(v509)) >> 16) ^ 0x68)];
  HIDWORD(v232) = v231 ^ 0x504;
  LODWORD(v232) = v231 ^ 0x798AE000;
  LODWORD(v204) = v232 >> 12;
  v233 = *(_DWORD *)&v230[4 * ((v218 ^ HIDWORD(v510)) >> 16)];
  HIDWORD(v232) = v233 ^ 0x504;
  LODWORD(v232) = v233 ^ 0x798AE000;
  v234 = (char *)*(&off_1E8EC5D70 + v206 - 957) - 4;
  v235 = *(_DWORD *)&v234[4 * (((v526 ^ v510) >> 24) ^ 0xB7)] ^ (v232 >> 12);
  v236 = *(_DWORD *)&v230[4 * (((v509 ^ v223) >> 16) ^ 0xF)];
  HIDWORD(v232) = v236 ^ 0x504;
  LODWORD(v232) = v236 ^ 0x798AE000;
  v237 = (v229 - 1404213423 - ((2 * v229) & 0x589ACEA2)) ^ v235;
  v238 = (BYTE1(v222) ^ BYTE5(v509)) ^ *(_DWORD *)(v227 + 4
                                                                         * ((v526 ^ v510) ^ 0xFBu)) ^ *(_DWORD *)&v224[4 * ((BYTE1(v222) ^ BYTE5(v509)) ^ 0x23)] ^ (v232 >> 12);
  LODWORD(v210) = *(_DWORD *)&v230[4 * (((v526 ^ v510) >> 16) ^ 0x1C)];
  HIDWORD(v232) = v210 ^ 0x504;
  LODWORD(v232) = v210 ^ 0x798AE000;
  LODWORD(v210) = *(_DWORD *)&v234[4 * (((v222 ^ HIDWORD(v509)) >> 24) ^ 0xF6)] ^ (BYTE1(v226)
                                                                                 - 11119213
                                                                                 - ((v226 >> 7) & 0x126)) ^ *(_DWORD *)&v224[4 * (BYTE1(v226) ^ 0x6D)] ^ ((v232 >> 12) - 1404213423 - ((2 * (v232 >> 12)) & 0x589ACEA2));
  v239 = HIDWORD(v497) ^ v204 ^ *(_DWORD *)&v234[4 * (((v509 ^ v223) >> 24) ^ 0x1C)];
  LODWORD(v204) = *(_DWORD *)&v234[4 * HIBYTE(v226)];
  v240 = v239 ^ (v228 - 1404213423 - ((2 * v228) & 0x589ACEA2));
  LODWORD(v210) = v497 ^ *(_DWORD *)(v227 + 4 * ((v509 ^ v223) ^ 0x4Fu)) ^ (v210
                                                                                             - 534621661
                                                                                             - ((2 * v210) & 0xC044A446));
  v241 = HIDWORD(v492) ^ *(_DWORD *)(v227 + 4 * ((v222 ^ BYTE4(v509)) ^ 0x5Fu)) ^ (v237 - 534621661 - ((2 * v237) & 0xC044A446));
  LODWORD(v204) = v409 ^ v204 ^ ((v238 ^ 0x1F7407FE)
                                             - 1404213422
                                             + ((2 * ((v238 ^ 0x1F7407FE) & 0x2C4D6753 ^ v238 & 2)) ^ 0xFFFFFFFB));
  v242 = v240 ^ 0xF9388C2F;
  v243 = *(_DWORD *)&v230[4 * ((v240 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v232) = v243 ^ 0x504;
  LODWORD(v232) = v243 ^ 0x798AE000;
  v244 = v232 >> 12;
  v245 = *(_DWORD *)&v230[4 * (BYTE2(v210) ^ 0xB3)];
  HIDWORD(v232) = v245 ^ 0x504;
  LODWORD(v232) = v245 ^ 0x798AE000;
  v246 = v232 >> 12;
  v247 = *(_DWORD *)&v230[4 * (BYTE2(v241) ^ 0x66)];
  HIDWORD(v232) = v247 ^ 0x504;
  LODWORD(v232) = v247 ^ 0x798AE000;
  v248 = (v232 >> 12) ^ *(_DWORD *)&v224[4 * (BYTE1(v204) ^ 5)] ^ ((BYTE1(v204) ^ 0x68)
                                                                 - 11119213
                                                                 - ((v204 >> 7) & 0x126));
  v249 = (v244 - 534621661 - ((2 * v244) & 0xC044A446)) ^ *(_DWORD *)(v227
                                                                    + 4
                                                                    * ((BYTE4(v492) ^ *(_BYTE *)(v227 + 4 * ((v222 ^ BYTE4(v509)) ^ 0x5Fu)) ^ (v237 + 35 - ((2 * v237) & 0x46))) ^ 0xB6u));
  v250 = (v248 - 534621661 - ((2 * v248) & 0xC044A446)) ^ *(_DWORD *)(v227 + 4 * (v240 ^ 0x61u));
  v251 = (((unsigned __int16)(v240 ^ 0x8C2F) >> 8) - 11119213 - (((v240 ^ 0xF9388C2F) >> 7) & 0x126)) ^ 0xD678EAEF ^ *(_DWORD *)&v224[4 * (((unsigned __int16)(v240 ^ 0x8C2F) >> 8) ^ 0x6D)];
  v252 = *(_DWORD *)&v234[4 * (HIBYTE(v241) ^ 0x43)] ^ 0xE573CEF;
  v253 = v251 + v252 - 2 * (v251 & v252);
  v254 = *(_DWORD *)&v230[4 * (BYTE2(v204) ^ 0xBD)];
  HIDWORD(v232) = v254 ^ 0x504;
  LODWORD(v232) = v254 ^ 0x798AE000;
  v255 = *(_DWORD *)&v234[4 * HIBYTE(v242)] ^ (v246 - 1404213423 - ((2 * v246) & 0x589ACEA2));
  v256 = (v255 - 534621661 - ((2 * v255) & 0xC044A446)) ^ *(_DWORD *)(v227 + 4 * (v204 ^ 0xABu));
  v257 = *(_DWORD *)&v234[4 * ((v204 >> 24) ^ 0x42)] ^ HIDWORD(v514) ^ *(_DWORD *)&v224[4 * (BYTE1(v210) ^ 0x14)] ^ ((BYTE1(v210) ^ 0x79) - 11119213 - ((2 * ((v210 >> 8) ^ 0xA3B379)) & 0x126)) ^ (v249 - 1404213422 + ~((2 * v249) & 0x589ACEA2));
  LOBYTE(v249) = ((unsigned __int16)(WORD2(v492) ^ *(_WORD *)(v227
                                                            + 4 * ((v222 ^ BYTE4(v509)) ^ 0x5Fu)) ^ (v237 + 21027 - ((2 * v237) & 0xA446))) >> 8) ^ 0x54;
  v258 = v492 ^ *(_DWORD *)&v224[4
                               * (((unsigned __int16)(WORD2(v492) ^ *(_WORD *)(v227
                                                                                              + 4
                                                                                              * ((v222 ^ BYTE4(v509)) ^ 0x5Fu)) ^ (v237 + 21027 - ((2 * v237) & 0xA446))) >> 8) ^ 0x39)] ^ (v256 - 11119213 - ((2 * v256) & 0xFEACAB26));
  LODWORD(v204) = HIDWORD(v487) ^ *(_DWORD *)&v234[4 * (BYTE3(v210) ^ 0xA3)] ^ (v250
                                                                              - 1404213423
                                                                              - ((2 * v250) & 0x589ACEA2));
  LODWORD(v210) = v487 ^ *(_DWORD *)(v227 + 4 * (v210 ^ 0xC8u)) ^ ((v253 ^ (v232 >> 12))
                                                                                    - 534621661
                                                                                    - ((2 * (v253 ^ (v232 >> 12))) & 0xC044A446));
  v259 = *(_DWORD *)&v230[4 * (BYTE2(v210) ^ 0x79)];
  HIDWORD(v232) = v259 ^ 0x504;
  LODWORD(v232) = v259 ^ 0x798AE000;
  BYTE1(v246) = BYTE1(v204) ^ 0x68;
  v260 = ((v232 >> 12) - 1404213423 - ((2 * (v232 >> 12)) & 0x589ACEA2)) ^ *(_DWORD *)&v234[4
                                                                                          * ((v204 ^ 0x2261685E) >> 24)];
  v261 = ((BYTE1(v210) ^ 0xD0)
        - 11119213
        - 2 * (((v210 >> 8) ^ 0x679D0) & 0x9F ^ (v210 >> 8) & 0xC)) ^ *(_DWORD *)&v224[4 * (BYTE1(v210) ^ 0xBD)];
  v262 = (v261 - 534621661 - ((2 * v261) & 0xC044A446)) ^ *(_DWORD *)(v227 + 4 * (v257 ^ 0x76u));
  v263 = ((BYTE1(v258) ^ 0xEC) - 11119213 - ((2 * ((v258 >> 8) ^ 0xE5FEC)) & 0x126)) ^ *(_DWORD *)&v224[4 * (BYTE1(v258) ^ 0x81)];
  v264 = *(_DWORD *)&v230[4 * (BYTE2(v258) ^ 0x5F)];
  HIDWORD(v232) = v264 ^ 0x504;
  LODWORD(v232) = v264 ^ 0x798AE000;
  v265 = v232 >> 12;
  HIDWORD(v232) = *(_DWORD *)(v227 + 4 * (v204 ^ 0x5Eu)) ^ 0x93575AB;
  LODWORD(v232) = HIDWORD(v232);
  v266 = (v232 >> 28) ^ __ROR4__(*(_DWORD *)&v234[4 * (BYTE3(v210) ^ 6)] ^ 0x7462B151 ^ (v263- 1404213423- ((2 * v263) & 0x589ACEA2)), 28);
  v267 = (v265 - 1404213423 - ((2 * v265) & 0x589ACEA2)) ^ *(_DWORD *)&v234[4 * (HIBYTE(v257) ^ 0xD2)];
  v268 = (v267 - 534621661 - ((2 * v267) & 0xC044A446)) ^ *(_DWORD *)(v227 + 4 * (v210 ^ 0x4Cu));
  LODWORD(v210) = *(_DWORD *)&v230[4 * (BYTE2(v204) ^ 0x1B)];
  HIDWORD(v232) = v210 ^ 0x504;
  LODWORD(v232) = v210 ^ 0x798AE000;
  v269 = v232 >> 12;
  v270 = v260 - 534621661 - ((2 * v260) & 0xC044A446);
  v271 = *(_DWORD *)&v230[4 * (BYTE2(v257) ^ 0xCC)];
  HIDWORD(v232) = v271 ^ 0x504;
  LODWORD(v232) = v271 ^ 0x798AE000;
  LODWORD(v204) = HIDWORD(v482) ^ (v232 >> 12) ^ __ROR4__(v266 ^ 0x78071371, 4);
  LOBYTE(v266) = v258 ^ v249;
  v272 = v482 ^ *(_DWORD *)&v234[4 * (HIBYTE(v258) ^ 0xE)] ^ v269 ^ (v262 - 1404213423 - ((2 * v262) & 0x589ACEA2));
  v273 = BYTE1(v246);
  v274 = HIDWORD(v476) ^ *(_DWORD *)&v224[4 * (BYTE1(v246) ^ 0x6D)] ^ (v268 - 11119213 - ((2 * v268) & 0xFEACAB26));
  v275 = v476 ^ ((BYTE1(v257) ^ 0xC0) - 11119212 + ~(2 * (((v257 >> 8) ^ 0xD2CCC0) & 0x97 ^ (v257 >> 8) & 4))) ^ *(_DWORD *)(v227 + 4 * (v266 ^ 0xCAu)) ^ *(_DWORD *)&v224[4 * (BYTE1(v257) ^ 0xAD)] ^ v270;
  v276 = ((unsigned __int16)(v476 ^ ((BYTE1(v257) ^ 0xC0)
                                                    + 21908
                                                    + ~(2 * (((v257 >> 8) ^ 0xCCC0) & 0x97 ^ (v257 >> 8) & 4))) ^ *(_WORD *)(v227 + 4 * (v266 ^ 0xCAu)) ^ *(_WORD *)&v224[4 * (BYTE1(v257) ^ 0xAD)] ^ v270) >> 8) ^ 0xD9;
  v277 = v273 ^ 0x4552953C ^ v274;
  v278 = *(_DWORD *)&v230[4 * BYTE2(v277)];
  HIDWORD(v232) = v278 ^ 0x504;
  LODWORD(v232) = v278 ^ 0x798AE000;
  v279 = v232 >> 12;
  BYTE1(v278) = BYTE1(v204) ^ 0xE7;
  v280 = *(_DWORD *)&v230[4 * ((v204 ^ 0x99FEE750) >> 16)];
  HIDWORD(v232) = v280 ^ 0x504;
  LODWORD(v232) = v280 ^ 0x798AE000;
  v281 = BYTE1(v272) ^ 0x29;
  v282 = v281 - 11119213 - ((2 * ((v272 >> 8) ^ 0xA73B29)) & 0x126);
  LODWORD(v207) = (BYTE1(v277) - 11119213 - ((v277 >> 7) & 0x126)) ^ *(_DWORD *)(v227
                                                                               + 4 * (v272 ^ 0x72u)) ^ *(_DWORD *)&v224[4 * (BYTE1(v277) ^ 0x6D)] ^ ((v232 >> 12) - 534621661 - ((2 * (v232 >> 12)) & 0xC044A446));
  LODWORD(v210) = *(_DWORD *)&v230[4 * (BYTE2(v275) ^ 2)];
  HIDWORD(v232) = v210 ^ 0x504;
  LODWORD(v232) = v210 ^ 0x798AE000;
  LODWORD(v210) = *(_DWORD *)&v234[4 * (HIBYTE(v272) ^ 0xA7)] ^ (v232 >> 12) ^ *(_DWORD *)(v227
                                                                                         + 4 * v277);
  v283 = *(_DWORD *)&v230[4 * (BYTE2(v272) ^ 0x3B)];
  HIDWORD(v232) = v283 ^ 0x504;
  LODWORD(v232) = v283 ^ 0x798AE000;
  v284 = HIDWORD(v471) ^ (v276 - 11119213 - ((2 * ((v275 >> 8) ^ 0x9802D9)) & 0x126)) ^ *(_DWORD *)(v227
                                                                                                  + 4 * (v204 ^ 0x1Eu)) ^ *(_DWORD *)&v224[4 * (v276 ^ 0x6D)] ^ (v232 >> 12) ^ *(_DWORD *)&v234[4 * (HIBYTE(v274) ^ 0x61)];
  v285 = v471 ^ *(_DWORD *)&v234[4 * (HIBYTE(v275) ^ 0x98)] ^ (v207 - 1404213423 - ((2 * v207) & 0x589ACEA2));
  v286 = HIDWORD(v467) ^ *(_DWORD *)(v227 + 4 * (v275 ^ 0x3Du)) ^ v282 ^ *(_DWORD *)&v234[4 * ((v204 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)&v224[4 * (v281 ^ 0x6D)] ^ v279;
  LODWORD(v204) = v467 ^ *(_DWORD *)&v224[4
                                        * (((unsigned __int16)((unsigned __int16)v204 ^ 0xE750) >> 8) ^ 0x6D)] ^ ((v210 ^ 0x4C6F3572) - 11119213 - 2 * ((v210 ^ 0x4C6F3572) & 0x7F565597 ^ v210 & 4));
  LODWORD(v207) = *(_DWORD *)&v230[4 * (BYTE2(v284) ^ 0x42)];
  HIDWORD(v232) = v207 ^ 0x504;
  LODWORD(v232) = v207 ^ 0x798AE000;
  LODWORD(v207) = v232 >> 12;
  v287 = *(_DWORD *)&v230[4 * (BYTE2(v286) ^ 0x87)];
  HIDWORD(v232) = v287 ^ 0x504;
  LODWORD(v232) = v287 ^ 0x798AE000;
  v288 = BYTE1(v286) ^ 0xCA;
  v289 = v288 - 11119213 - ((2 * ((v286 >> 8) ^ 0x9987CA)) & 0x126);
  LODWORD(v210) = *(_DWORD *)(v227 + 4 * ((v204 ^ BYTE1(v278)) ^ 0x41u)) ^ (((unsigned __int16)(v284 ^ 0x4F72) >> 8) - 11119213 - (((v284 ^ 0xAC384F72) >> 7) & 0x126)) ^ *(_DWORD *)&v224[4 * (((unsigned __int16)(v284 ^ 0x4F72) >> 8) ^ 0x6D)] ^ ((v232 >> 12) - 534621661 - ((2 * (v232 >> 12)) & 0xC044A446));
  v290 = *(_DWORD *)&v230[4 * (BYTE2(v204) ^ 0x81)];
  HIDWORD(v232) = v290 ^ 0x504;
  LODWORD(v232) = v290 ^ 0x798AE000;
  v291 = ((v232 >> 12) - 1404213423 - ((2 * (v232 >> 12)) & 0x589ACEA2)) ^ *(_DWORD *)&v234[4
                                                                                          * ((v284 ^ 0xAC384F72) >> 24)];
  v292 = (v291 - 534621661 - ((2 * v291) & 0xC044A446)) ^ *(_DWORD *)(v227 + 4 * (v286 ^ 0x77u));
  v293 = *(_DWORD *)&v230[4 * (BYTE2(v285) ^ 0xC6)];
  LODWORD(v207) = *(_DWORD *)(v227 + 4 * (v285 ^ 0xFCu)) ^ (v207
                                                                             - 534621661
                                                                             - ((2 * v207) & 0xC044A446)) ^ ((BYTE1(v204) ^ 0xA0) - 11119213 - ((2 * ((v204 >> 8) ^ 0x6881A0)) & 0x126)) ^ *(_DWORD *)&v224[4 * (BYTE1(v204) ^ 0xCD)];
  LODWORD(v232) = __ROR4__((v293 >> 12) ^ 0x26A458C, 17) ^ 0xEE910136;
  HIDWORD(v232) = v232;
  v294 = HIDWORD(v462) ^ *(_DWORD *)&v224[4 * (BYTE1(v285) ^ 0x75)] ^ (v292 - 11119213 - ((2 * v292) & 0xFEACAB26));
  v295 = v462 ^ *(_DWORD *)&v234[4 * (HIBYTE(v286) ^ 0x99)] ^ (v207 - 1404213423 - ((2 * v207) & 0x589ACEA2));
  v296 = HIDWORD(v456) ^ *(_DWORD *)&v234[4 * (HIBYTE(v285) ^ 0x5A)] ^ (v210 - 1404213423 - ((2 * v210) & 0x589ACEA2));
  LODWORD(v204) = v456 ^ v289 ^ *(_DWORD *)(v227 + 4 * (v284 ^ 0x72u)) ^ *(_DWORD *)&v224[4 * (v288 ^ 0x6D)] ^ *(_DWORD *)&v234[4 * ((v204 >> 24) ^ 0x68)] ^ ((v232 >> 15) + (v293 << 20));
  LODWORD(v207) = ((BYTE1(v294) ^ 0x9D) - 11119213 - ((2 * ((v294 >> 8) ^ 0xC2489D)) & 0x126)) ^ *(_DWORD *)&v224[4 * (BYTE1(v294) ^ 0xF0)];
  LODWORD(v210) = *(_DWORD *)&v230[4 * (BYTE2(v295) ^ 0x8F)];
  LODWORD(v207) = *(_DWORD *)(v227 + 4 * (v204 ^ 0xF8u)) ^ ((_DWORD)v210 << 20) ^ (v210 >> 12) ^ 0x504798AE ^ (v207 - 534621661 - ((2 * v207) & 0xC044A446));
  LODWORD(v210) = *(_DWORD *)&v230[4 * ((v296 ^ 0xCFB8D782) >> 16)];
  HIDWORD(v232) = v210 ^ 0x504;
  LODWORD(v232) = v210 ^ 0x798AE000;
  LODWORD(v210) = ((v232 >> 12) - 534621661 - ((2 * (v232 >> 12)) & 0xC044A446)) ^ *(_DWORD *)(v227
                                                                                             + 4
                                                                                             * ((v294 ^ BYTE1(v285)) ^ 0x3Fu));
  v297 = BYTE1(v295) ^ 0xD9;
  v298 = v297 - 11119213 - ((2 * ((v295 >> 8) ^ 0xC78FD9)) & 0x126);
  v299 = *(_DWORD *)&v230[4 * (BYTE2(v294) ^ 0x48)];
  HIDWORD(v232) = v299 ^ 0x504;
  LODWORD(v232) = v299 ^ 0x798AE000;
  v300 = ((BYTE1(v204) ^ 0x55) - 11119213 - ((2 * ((v204 >> 8) ^ 0x3AA455)) & 0x126)) ^ *(_DWORD *)(v227 + 4 * (v296 ^ 0xCCu)) ^ *(_DWORD *)&v224[4 * (BYTE1(v204) ^ 0x38)] ^ ((v232 >> 12) - 534621661 - ((2 * (v232 >> 12)) & 0xC044A446));
  v301 = *(_DWORD *)&v230[4 * (BYTE2(v204) ^ 0xA4)];
  HIDWORD(v232) = v301 ^ 0x504;
  LODWORD(v232) = v301 ^ 0x798AE000;
  v302 = HIDWORD(v450) ^ (((unsigned __int16)(v296 ^ 0xD782) >> 8)
                        - 11119213
                        - (((v296 ^ 0xCFB8D782) >> 7) & 0x126)) ^ *(_DWORD *)(v227
                                                                            + 4 * (v295 ^ 0x50u)) ^ *(_DWORD *)&v224[4 * (((unsigned __int16)(v296 ^ 0xD782) >> 8) ^ 0x6D)] ^ (v232 >> 12) ^ *(_DWORD *)&v234[4 * (HIBYTE(v294) ^ 0xC2)];
  v303 = v450 ^ *(_DWORD *)&v234[4 * (HIBYTE(v295) ^ 0xC7)] ^ (v300 - 1404213423 - ((2 * v300) & 0x589ACEA2));
  v304 = HIDWORD(v445) ^ *(_DWORD *)&v234[4 * ((v296 ^ 0xCFB8D782) >> 24)] ^ (v207
                                                                            - 1404213422
                                                                            + ~((2 * v207) & 0x589ACEA2));
  v305 = v445 ^ v298 ^ *(_DWORD *)&v224[4 * (v297 ^ 0x6D)] ^ *(_DWORD *)&v234[4 * ((v204 >> 24) ^ 0x3A)] ^ (v210 - 1404213423 - ((2 * v210) & 0x589ACEA2));
  v306 = *(_DWORD *)&v230[4 * (BYTE2(v303) ^ 0xE6)];
  HIDWORD(v232) = v306 ^ 0x504;
  LODWORD(v232) = v306 ^ 0x798AE000;
  v307 = v232 >> 12;
  v308 = *(_DWORD *)&v230[4 * (BYTE2(v304) ^ 0x1C)];
  HIDWORD(v232) = v308 ^ 0x504;
  LODWORD(v232) = v308 ^ 0x798AE000;
  v309 = (((unsigned __int16)(v305 ^ 0xCCA2) >> 8) - 11119213 - (((v305 ^ 0x33C8CCA2) >> 7) & 0x126)) ^ *(_DWORD *)&v224[4 * (((unsigned __int16)(v305 ^ 0xCCA2) >> 8) ^ 0x6D)];
  LODWORD(v207) = (v232 >> 12) ^ *(_DWORD *)&v224[4 * (BYTE1(v303) ^ 0xD9)] ^ ((BYTE1(v303) ^ 0xB4)
                                                                             - 11119213
                                                                             - 2
                                                                             * (((v303 >> 8) ^ 0x4FE6B4) & 0x9B ^ (v303 >> 8) & 8));
  LODWORD(v207) = (v207 - 534621661 - ((2 * v207) & 0xC044A446)) ^ *(_DWORD *)(v227
                                                                             + 4 * (v302 ^ 0x98u));
  v310 = (v309 - 534621661 - ((2 * v309) & 0xC044A446)) ^ *(_DWORD *)(v227 + 4 * (v304 ^ 0x3Au));
  v311 = *(_DWORD *)(v227 + 4 * (v303 ^ 0x96u));
  HIDWORD(v232) = v311 ^ 0x225223;
  LODWORD(v232) = ~v311;
  HIDWORD(v232) = (v232 >> 29) ^ 0x6615DA09;
  LODWORD(v232) = HIDWORD(v232);
  v312 = *(_DWORD *)(v227 + 4 * (v305 ^ 0xA2u)) ^ (((unsigned __int16)(v302 ^ 0x2198) >> 8)
                                                                    - 11119213
                                                                    - (((v302 ^ 0x555C2198) >> 7) & 0x126)) ^ *(_DWORD *)&v224[4 * (((unsigned __int16)(v302 ^ 0x2198) >> 8) ^ 0x6D)] ^ (v307 - 534621661 - ((2 * v307) & 0xC044A446));
  v313 = (v232 >> 3) - 11119213 - ((2 * (v232 >> 3)) & 0xFEACAB26);
  LODWORD(v210) = *(_DWORD *)&v230[4 * ((v302 ^ 0x555C2198) >> 16)];
  HIDWORD(v232) = v210 ^ 0x504;
  LODWORD(v232) = v210 ^ 0x798AE000;
  LODWORD(v210) = v232 >> 12;
  v314 = *(_DWORD *)&v230[4 * ((v305 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v232) = v314 ^ 0x504;
  LODWORD(v232) = v314 ^ 0x798AE000;
  v315 = HIDWORD(v440) ^ *(_DWORD *)&v234[4 * (HIBYTE(v305) ^ 0x17)] ^ (v207 - 1404213423 - ((2 * v207) & 0x589ACEA2));
  v316 = BYTE1(v304);
  LODWORD(v207) = v313 ^ *(_DWORD *)&v224[4 * (BYTE1(v304) ^ 0xD1)] ^ (v232 >> 12);
  LODWORD(v204) = v440 ^ *(_DWORD *)&v234[4 * (HIBYTE(v303) ^ 0x4F)] ^ v210 ^ (v310
                                                                             - 1404213423
                                                                             - ((2 * v310) & 0x589ACEA2));
  v317 = HIDWORD(v433) ^ *(_DWORD *)&v234[4 * (HIBYTE(v304) ^ 0x1B)] ^ (v312 - 1404213423 - ((2 * v312) & 0x589ACEA2));
  LODWORD(v210) = *(_DWORD *)&v230[4 * (BYTE2(v317) ^ 0x7E)];
  HIDWORD(v232) = v210 ^ 0x504;
  LODWORD(v232) = v210 ^ 0x798AE000;
  v318 = v232 >> 12;
  LODWORD(v210) = *(_DWORD *)&v230[4 * (BYTE2(v204) ^ 1)];
  HIDWORD(v232) = v210 ^ 0x504;
  LODWORD(v232) = v210 ^ 0x798AE000;
  v319 = *(_DWORD *)&v234[4 * (HIBYTE(v302) ^ 0x71)] ^ v514 ^ (v207 - 1404213423 - ((2 * v207) & 0x589ACEA2));
  LODWORD(v207) = ((v232 >> 12) - 534621661 - ((2 * (v232 >> 12)) & 0xC044A446)) ^ *(_DWORD *)(v227
                                                                                             + 4
                                                                                             * (v315 ^ 0xC6u));
  LODWORD(v210) = ((BYTE1(v315) ^ 0x71) - 11119213 - ((2 * ((v315 >> 8) ^ 0xF25B71)) & 0x126)) ^ *(_DWORD *)&v224[4 * (BYTE1(v315) ^ 0x1C)];
  LODWORD(v210) = (v210 - 1404213423 - ((2 * v210) & 0x589ACEA2)) ^ *(_DWORD *)&v234[4
                                                                                   * ((v204 >> 24) ^ 0x1F)];
  v320 = *(_DWORD *)&v230[4 * (BYTE2(v315) ^ 0x5B)];
  HIDWORD(v232) = v320 ^ 0x504;
  LODWORD(v232) = v320 ^ 0x798AE000;
  v321 = v232 >> 12;
  v322 = v210 - 534621661 - ((2 * v210) & 0xC044A446);
  v323 = v316 ^ 0x73F4E0AF ^ v319;
  v324 = *(_DWORD *)&v230[4 * BYTE2(v323)];
  HIDWORD(v232) = v324 ^ 0x504;
  LODWORD(v232) = v324 ^ 0x798AE000;
  v325 = v232 >> 12;
  HIDWORD(v232) = v318 ^ ((BYTE1(v204) ^ 0x81)
                        - 11119212
                        + ~(2 * (((v204 >> 8) ^ 0x1F0181) & 0x9B ^ (v204 >> 8) & 8))) ^ 0xD678EAEF ^ *(_DWORD *)&v224[4 * (BYTE1(v204) ^ 0xEC)];
  LODWORD(v232) = HIDWORD(v232);
  LODWORD(v232) = (v232 >> 11) ^ __ROR4__(*(_DWORD *)&v234[4 * (HIBYTE(v315) ^ 0xF2)] ^ 0xE573CEF, 11) ^ 0xD490839A;
  HIDWORD(v232) = v232;
  LODWORD(v210) = v380 ^ HIDWORD(v375) ^ *(_DWORD *)(v227 + 4 * (v204 ^ 0xB8u)) ^ ((BYTE1(v317) ^ 0xAA) - 11119213 - 2 * (((v317 >> 8) ^ 0x967EAA) & 0x97 ^ (v317 >> 8) & 4)) ^ *(_DWORD *)&v234[4 * (HIBYTE(v319) ^ 0x57)] ^ *(_DWORD *)&v224[4 * (BYTE1(v317) ^ 0xC7)] ^ v321;
  v326 = HIDWORD(v427) ^ *(_DWORD *)&v234[4 * (HIBYTE(v317) ^ 0x96)] ^ (BYTE1(v323) - 11119213 - ((v323 >> 7) & 0x126)) ^ *(_DWORD *)&v224[4 * (BYTE1(v323) ^ 0x6D)] ^ (v207 - 1404213423 - ((2 * v207) & 0x589ACEA2));
  LODWORD(v207) = v427 ^ *(_DWORD *)(v227 + 4 * (v317 ^ 0x88u)) ^ v325 ^ v322;
  v327 = HIDWORD(v421) ^ *(_DWORD *)(v227 + 4 * v323) ^ ((v232 >> 21)
                                                                          - 534621661
                                                                          - ((2 * (v232 >> 21)) & 0xC044A446));
  v328 = *(_DWORD *)&v230[4 * (BYTE2(v210) ^ 0x84)];
  HIDWORD(v232) = v328 ^ 0x504;
  LODWORD(v232) = v328 ^ 0x798AE000;
  v329 = v232 >> 12;
  v330 = *(_DWORD *)&v224[4 * (BYTE1(v326) ^ 0x96)] ^ ((BYTE1(v326) ^ 0xFB)
                                                     - 11119213
                                                     - ((2 * ((v326 >> 8) ^ 0x3EA2FB)) & 0x126));
  v331 = *(_DWORD *)&v230[4 * (BYTE2(v326) ^ 0xA2)];
  HIDWORD(v232) = v331 ^ 0x504;
  LODWORD(v232) = v331 ^ 0x798AE000;
  v332 = (v330 - 534621661 - ((2 * v330) & 0xC044A446)) ^ *(_DWORD *)(v227 + 4 * (v207 ^ 0x75u));
  v333 = (((unsigned __int16)(v207 ^ 0xF075) >> 8)
        - 11119213
        - (((v207 ^ 0xB54AF075) >> 7) & 0x126)) ^ (v232 >> 12) ^ *(_DWORD *)&v224[4
                                                                                              * (((unsigned __int16)(v207 ^ 0xF075) >> 8) ^ 0x6D)];
  v334 = (v333 - 1404213423 - ((2 * v333) & 0x589ACEA2)) ^ *(_DWORD *)&v234[4 * (HIBYTE(v327) ^ 0xED)];
  v335 = *(_DWORD *)&v234[4 * (HIBYTE(v326) ^ 0x3E)];
  v327 ^= 0xC9AF1D8F;
  LODWORD(v204) = *(_DWORD *)(v227 + 4 * v327);
  v336 = *(_DWORD *)(v227 + 4 * (v326 ^ 0x9Au));
  v337 = *(_DWORD *)(v227 + 4 * (v210 ^ 0x1Du));
  v338 = *(_DWORD *)&v230[4 * BYTE2(v327)];
  LODWORD(v227) = *(_DWORD *)&v230[4 * (BYTE2(v207) ^ 0x4A)];
  HIDWORD(v232) = v227 ^ 0x504;
  LODWORD(v232) = v227 ^ 0x798AE000;
  LODWORD(v227) = v421 ^ v336 ^ v329 ^ (BYTE1(v327) - 11119213 - ((v327 >> 7) & 0x126)) ^ *(_DWORD *)&v234[4 * (BYTE3(v207) ^ 0x91)] ^ *(_DWORD *)&v224[4 * (BYTE1(v327) ^ 0x6D)];
  v339 = HIDWORD(v415) ^ ((BYTE1(v210) ^ 0xF5)
                        - 11119213
                        - 2 * (((v210 >> 8) ^ 0x8B84F5) & 0x9B ^ (v210 >> 8) & 8)) ^ v335 ^ *(_DWORD *)&v224[4 * (BYTE1(v210) ^ 0x98)] ^ v204 ^ (v232 >> 12);
  LODWORD(v224) = v415 ^ v337 ^ (v334 - 534621661 - ((2 * v334) & 0xC044A446));
  v340 = HIDWORD(v409) ^ *(_DWORD *)&v234[4 * (BYTE3(v210) ^ 0x8B)] ^ (v338 >> 12) ^ (v338 << 20) ^ (v332 - 1404213423 - ((2 * v332) & 0x589ACEA2));
  v341 = *(unsigned int *)(v59 - 128);
  v342 = (char *)*(&off_1E8EC5D70 + (int)v341 - 773) - 8;
  v343 = (char *)*(&off_1E8EC5D70 + (int)v398) - 12;
  LODWORD(v210) = *(_DWORD *)&v342[4 * ((v415 ^ v337 ^ (v334 + 35 - ((2 * v334) & 0x46))) ^ 7)] ^ *(_DWORD *)&v343[4 * (((unsigned __int16)(WORD2(v409) ^ *(_WORD *)&v234[4 * (BYTE3(v210) ^ 0x8B)] ^ (v338 >> 12) ^ (v332 + 26449 - ((2 * v332) & 0xCEA2))) >> 8) ^ 0xBB)] ^ 0x87D1705D;
  v344 = (char *)*(&off_1E8EC5D70 + SHIDWORD(v391)) - 8;
  v345 = *(_DWORD *)&v344[4 * (HIBYTE(v339) ^ 0xC4)] ^ (v210 + 1944669227 - ((2 * v210) & 0xE7D29856));
  LODWORD(v210) = *(_DWORD *)&v343[4 * (BYTE1(v227) ^ 0x44)];
  v346 = *(_DWORD *)&v343[4 * ((unsigned __int16)((unsigned __int16)v224 ^ 0x6F07) >> 8)];
  LODWORD(v234) = *(_DWORD *)&v343[4 * (BYTE1(v339) ^ 0x92)];
  LODWORD(v230) = *(_DWORD *)&v344[4 * ((v224 >> 24) ^ 0xEF)];
  v347 = *(_DWORD *)&v344[4 * (HIBYTE(v340) ^ 0xCD)];
  v348 = *(_DWORD *)&v344[4 * (BYTE3(v227) ^ 0x7D)];
  v349 = (char *)*(&off_1E8EC5D70 + (int)v341 - 877) - 4;
  LODWORD(v343) = *(_DWORD *)&v349[4 * (BYTE2(v340) ^ 0xFB)];
  v350 = *(_DWORD *)&v349[4 * (BYTE2(v224) ^ 0x2A)];
  v351 = *(unsigned int *)&v349[4 * (BYTE2(v339) ^ 0x2E)];
  LODWORD(v349) = *(_DWORD *)&v349[4 * (BYTE2(v227) ^ 0xE4)] ^ (v345 - 1796037031 - ((2 * v345) & 0x29E54CB2));
  v352 = *(unsigned int *)&v342[4 * (v227 ^ 0xAE)];
  v353 = *(_DWORD *)&v342[4 * (v339 ^ 0xF5)];
  v354 = *(_DWORD *)&v342[4 * (v340 ^ 0x75)];
  v355 = *(_DWORD *)(v59 - 148) ^ v511 ^ ((_DWORD)v349 - ((2 * (_DWORD)v349) & 0x3E316E12) + 521713417);
  v356 = (char *)*(&off_1E8EC5D70 + (int)v391) - 8;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + 8) = v356[BYTE3(v355) ^ 0xD7] ^ 0xA7;
  LODWORD(v343) = ((v346 ^ v343 ^ 0xF37EB0A2)
                 + 1944669227
                 - 2 * ((v346 ^ v343 ^ 0xF37EB0A2) & 0x73E94C3B ^ (v346 ^ v343) & 0x10)) ^ v348;
  LODWORD(v343) = ((_DWORD)v343 - 530749786 - ((2 * (_DWORD)v343) & 0xC0BACD4C)) ^ v353;
  LODWORD(v343) = *(_DWORD *)(v59 - 144) ^ HIDWORD(v511) ^ ((_DWORD)v343 - ((2 * (_DWORD)v343) & 0xC06EFB4) - 2046593062);
  v357 = (uint64_t)*(&off_1E8EC5D70 + (int)v341 - 815);
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + *(_QWORD *)(v59 - 240)) = (*(_BYTE *)(v357 + (v343 ^ 0xC7)) - 56) ^ 0x5F;
  v358 = (char *)*(&off_1E8EC5D70 + (int)v341 - 830) - 12;
  v359 = v358[BYTE1(v343) ^ 0x13];
  HIDWORD(v232) = v359 ^ 7;
  LODWORD(v232) = (v359 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + 6) = (v232 >> 30) ^ 0x40;
  v360 = ((v352 ^ 0x74AFC0FF ^ v350) + 1944669227 - ((2 * (v352 ^ 0x74AFC0FF ^ v350)) & 0xE7D29856)) ^ v347;
  v361 = (v360 + 1737234172 + (~(2 * v360) | 0x30E7D209)) ^ v234;
  LODWORD(v234) = *(_DWORD *)(v59 - 140) ^ HIDWORD(v512) ^ (v361 - ((2 * v361) & 0x89F46C72) - 990235079);
  v362 = v358[(unsigned __int16)(*(_WORD *)(v59 - 140) ^ WORD2(v512) ^ (v361
                                                                                       - ((2 * v361) & 0x6C72)
                                                                                       + 13881)) >> 8];
  HIDWORD(v232) = v362 ^ 7;
  LODWORD(v232) = (v362 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + *(_QWORD *)(v59 - 232)) = (v232 >> 30) ^ 0x7E;
  v363 = (char *)*(&off_1E8EC5D70 + SHIDWORD(a23)) - 4;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + 9) = v363[BYTE2(v355) ^ 0xFBLL] ^ 0xEA;
  v364 = ((v230 ^ v210 ^ 0x14655AD0)
        - 1796037031
        - 2 * ((v230 ^ v210 ^ 0x14655AD0) & 0x14F2A65D ^ (v230 ^ v210) & 4)) ^ v351;
  v365 = (v364 - 530749786 - ((2 * v364) & 0xC0BACD4C)) ^ v354;
  v366 = *(_DWORD *)(v59 - 136) ^ v512 ^ (v365 + 1314115334 + (~(2 * v365) | 0x635861F5));
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + *(_QWORD *)(v59 - 184)) = v363[BYTE2(v366) ^ 0xB8] ^ 0x39;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + 11) = (*(_BYTE *)(v357 + (v355 ^ 0x1BLL)) - 56) ^ 0x7D;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + *(_QWORD *)(v59 - 248)) = v363[BYTE2(v343) ^ 3] ^ 0x47;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + *(_QWORD *)(v59 - 192)) = v356[(v343 >> 24) ^ 0x6DLL] ^ 0x5F;
  LODWORD(v343) = v358[BYTE1(v355) ^ 0x92];
  HIDWORD(v232) = v343 ^ 7;
  LODWORD(v232) = (v343 ^ 0x40) << 24;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + *(_QWORD *)(v59 - 168)) = (v232 >> 30) ^ 0xD2;
  v367 = *(_QWORD *)(v59 - 216);
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + v367) = v356[(v234 >> 24) ^ 0x53] ^ 0xB3;
  *(_BYTE *)(*(_QWORD *)(v59 - 120) + *(_QWORD *)(v59 - 200)) = (*(_BYTE *)(v357 + (v234 ^ 0x95)) - 56) ^ 0xAF;
  LOBYTE(v343) = *(_BYTE *)(v357 + (v366 ^ 0x64));
  v368 = *(_QWORD *)(v59 - 120);
  *(_BYTE *)(v368 + *(_QWORD *)(v59 - 256)) = ((_BYTE)v343 - 56) ^ 0x27;
  *(_BYTE *)(v368 + *(_QWORD *)(v59 - 176)) = v356[HIBYTE(v366) ^ 0x6ELL] ^ 0x25;
  LODWORD(v343) = v358[BYTE1(v366) ^ 0x1FLL];
  HIDWORD(v232) = v343 ^ 7;
  LODWORD(v232) = (v343 ^ 0x40) << 24;
  *(_BYTE *)(v368 + *(_QWORD *)(v59 - 208)) = (v232 >> 30) ^ 0x58;
  *(_BYTE *)(v368 + *(_QWORD *)(v59 - 160)) = v363[BYTE2(v234) ^ 0xC8] ^ 0x68;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, char *, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(a55 + 8 * ((1288 * ((((_DWORD)v367 + 365567543 - 2 * (((_DWORD)v367 + 16) & *(_DWORD *)(v59 - 220))) ^ 0x15CA1E27u) < a53)) ^ ((int)v341 - 515))) - 8))(v351, 1944669227, v352, 2498930265, v355, 3233467724, v341, 125, a9, v370, v371, v372, v373, v375, v376, v378, v379, v380, v381,
           v382,
           v385,
           a22,
           a23,
           v391,
           v398,
           v403,
           v409,
           v415,
           v421,
           v427,
           v433,
           v440,
           v445,
           v450,
           v456,
           v462,
           v467,
           v471,
           v476,
           v482,
           v487,
           v492,
           v497,
           v501,
           v503,
           v505,
           v508,
           v509,
           v510,
           v511,
           v512,
           v514,
           a53,
           v521);
}

void sub_1D0D99824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56,int a57,int a58,int a59)
{
  uint64_t v59;

  *(_DWORD *)(v59 - 136) = a56 ^ 0x95619429;
  *(_DWORD *)(v59 - 148) = a58 ^ 0xA441D6A6;
  *(_DWORD *)(v59 - 140) = a59 ^ 0xB0ECFFC1;
  *(_DWORD *)(v59 - 144) = a57 ^ 0x7F5FE8C6;
  JUMPOUT(0x1D0D97AD8);
}

uint64_t sub_1D0D99878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54,int a55)
{
  uint64_t v55;
  unsigned int v56;

  v56 = a23 - (((a55 + 241) ^ 0xEF7C472A) & (2 * a53)) - 1660435242;
  return (*(uint64_t (**)(void))(v55
                              + 8
                              * ((19
                                * (((2 * v56) & 0xFABEAF68 ^ 0xEA3C0168) + (v56 ^ 0xAE1770B) + 1542651442 != 1498568166)) ^ a55)))();
}

uint64_t sub_1D0D99934(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v1 - 1586) | 0x110) - 109) * ((a1 + v2 + 44083276) > 7)) ^ v1)))();
}

uint64_t sub_1D0D999A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * (((((a6 - 18) | 8) + 503) * ((v7 + a7 - 16) > 0xFFFFFFEF)) ^ a6))
                            - ((a6 - 1329438012) & 0x4F3D9FDF ^ 0x3DELL)))();
}

uint64_t sub_1D0D999F4(int a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _BOOL4 v21;
  int v24;

  v10 = (a1 + v7 + v6);
  v11 = v10 + v8 + 1;
  v12 = (((a3 + 686) ^ 0x54) - 883) & v10;
  v13 = v12 - v10;
  v14 = v4 + v13;
  ++v12;
  v15 = v4 + v12;
  v16 = v3 + v13;
  v17 = v3 + v12;
  v18 = v5 + v13;
  v19 = v5 + v12;
  v21 = v15 > v8 && v14 < v11;
  if (v17 > v8 && v16 < v11)
    v21 = 1;
  v24 = v19 > v8 && v18 < v11 || v21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((26 * v24) ^ a3)) - 8))();
}

uint64_t sub_1D0D99A78(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, _QWORD);

  v6 = (uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 + 8 * ((1866 * (v3 >= v2 - 882)) ^ v2)) - 8);
  *(_DWORD *)(v5 - 128) = v3;
  return v6(a1, a2, 0);
}

uint64_t sub_1D0D99AA8(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unsigned int v65;
  int8x16_t v66;
  int8x16_t v67;
  uint64_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int8x16_t v71;
  int8x16x4_t v73;
  int8x16x4_t v74;

  v63 = 208 * (v55 ^ 0x386);
  v64 = v62 - 15;
  v73.val[1].i64[0] = ((_BYTE)a2 + 9) & 0xF;
  v73.val[1].i64[1] = ((_BYTE)a2 + 8) & 0xF;
  v73.val[2].i64[0] = ((_BYTE)a2 + 7) & 0xF;
  v73.val[2].i64[1] = ((_BYTE)a2 + 6) & 0xF;
  v73.val[3].i64[0] = ((_BYTE)a2 + 5) & 0xF;
  v73.val[3].i64[1] = ((_BYTE)a2 + 4) & 0xF;
  v74.val[0].i64[0] = ((_BYTE)a2 + 3) & 0xF;
  v74.val[0].i64[1] = (a2 + 2) & 0xF;
  v65 = a1 + v61 + v60;
  v74.val[1].i64[0] = ((_BYTE)a2 + 1) & 0xF;
  v74.val[1].i64[1] = a2 & 0xF;
  v74.val[2].i64[0] = ((_BYTE)a2 - 1) & 0xF;
  v74.val[2].i64[1] = ((_BYTE)a2 + 14) & 0xF;
  v74.val[3].i64[0] = ((_BYTE)a2 + 13) & 0xF;
  v74.val[3].i64[1] = ((_BYTE)a2 + 12) & 0xF;
  v66.i64[0] = 0x505050505050505;
  v66.i64[1] = 0x505050505050505;
  v67.i64[0] = 0xEFEFEFEFEFEFEFEFLL;
  v67.i64[1] = 0xEFEFEFEFEFEFEFEFLL;
  v68 = (((v63 - 941753233) & 0x382204FB) - 1180) & v65;
  v73.val[0].i64[0] = v68;
  v73.val[0].i64[1] = ((_BYTE)a2 + 10) & 0xF;
  v69.i64[0] = vqtbl4q_s8(v73, (int8x16_t)xmmword_1D0E9B5B0).u64[0];
  v69.i64[1] = vqtbl4q_s8(v74, (int8x16_t)xmmword_1D0E9B5B0).u64[0];
  v70 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v64 + v65), *(int8x16_t *)(v57 + v68 - 15)), veorq_s8(*(int8x16_t *)(v56 + v68 - 15), *(int8x16_t *)(v58 + v68 - 15))));
  v71 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v70, v70, 8uLL), v67), vmulq_s8(v69, v66)));
  *(int8x16_t *)(v64 + v65) = vextq_s8(v71, v71, 8uLL);
  return (*(uint64_t (**)(void))(a55 + 8 * ((1543 * ((v59 & 0xFFFFFFF0) == 16)) ^ v63)))();
}

void sub_1D0D99C2C()
{
  JUMPOUT(0x1D0D99BB0);
}

uint64_t sub_1D0D99C38(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v3 - 266614965) & 0xFE437DF ^ 0x26E) * (*(_DWORD *)(v5 - 128) == a3)) ^ v3))
                            - ((v3 - 889) ^ 0x136)))();
}

uint64_t sub_1D0D99C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8
                                                                                + 8
                                                                                * ((688
                                                                                  * (((((2 * a7) ^ 0x1B2) - 974) & v7) != ((279 * (a7 ^ 0x130)) ^ 0x22E))) ^ a7))
                                                                    - 8))(a1, a2, a3, (a2 - a3));
}

uint64_t sub_1D0D99CD4(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  char v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  char v65;
  uint64_t v66;
  int8x16x4_t v68;

  *(_DWORD *)(v63 - 136) = v58 & 0xFFFFFFF8;
  v64 = -8 - a3;
  v65 = a1 + v61 + v60;
  *(_DWORD *)(v63 - 140) = (a6 - 524) | 0x110;
  v66 = (a1 + v61 + v59 + v64 + 8);
  v68.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v61 + (_BYTE)v59 + (_BYTE)v64 + 8) & 0xF;
  v68.val[0].i64[1] = (v65 + 56 + (_BYTE)v64 + 8) & 0xF;
  v68.val[1].i64[0] = (v65 + 55 + (_BYTE)v64 + 8) & 0xF;
  v68.val[1].i64[1] = (v65 + 54 + (_BYTE)v64 + 8) & 0xF;
  v68.val[2].i64[0] = (v65 + 53 + (_BYTE)v64 + 8) & 0xF;
  v68.val[2].i64[1] = (v65 + 52 + (_BYTE)v64 + 8) & 0xF;
  v68.val[3].i64[0] = (v65 + 51 + (_BYTE)v64 + 8) & 0xF;
  v68.val[3].i64[1] = (v65 + (_BYTE)v64 + (_BYTE)a6 - 12 + 8) & 0xF;
  *(int8x8_t *)(v62 - 7 + v66) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v62 - 7 + v66), *(int8x8_t *)(v56 + (v66 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v55 + (v66 & 0xF) - 7), *(int8x8_t *)(v57 + (v66 & 0xF) - 7)))), (int8x8_t)0xEFEFEFEFEFEFEFEFLL), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v68, (int8x16_t)xmmword_1D0E9B5C0), (int8x8_t)0x505050505050505)));
  return ((uint64_t (*)(__n128))(*(_QWORD *)(a55
                                                     + 8
                                                     * (((2 * (-(v58 & 0xFFFFFFF8) == v64)) | (16
                                                                                             * (-(v58 & 0xFFFFFFF8) == v64))) ^ a6))
                                         - 4))((__n128)xmmword_1D0E9B5C0);
}

void sub_1D0D99E2C()
{
  JUMPOUT(0x1D0D99D34);
}

uint64_t sub_1D0D99E34()
{
  uint64_t v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((((*(_DWORD *)(v1 - 140) + 676) ^ 0xF2)
                                          * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 136))) ^ *(_DWORD *)(v1 - 140)))
                            - ((*(_DWORD *)(v1 - 140) - 1477641564) & 0x581307FF)
                            + 974))();
}

uint64_t sub_1D0D99E84(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (a4 - 1498568469);
  *(_BYTE *)(v11 + v13) ^= *(_BYTE *)(v9 + (v13 & 0xF)) ^ *(_BYTE *)(v8 + (v13 & 0xF)) ^ *(_BYTE *)(v10 + (v13 & 0xF)) ^ (5 * (v13 & 0xF)) ^ 0xEF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * (((2 * (a4 - 1 != a8)) | (8 * (a4 - 1 != a8))) ^ (a5 - 448))) - 8))();
}

void sub_1D0D99EE8()
{
  int v0;
  int v1;
  uint64_t v2;

  if (v0 == 1336078082)
    v1 = -623068998;
  else
    v1 = 623108962;
  *(_DWORD *)(v2 + 40) = v1;
}

void sub_1D0D99F4C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1755732067 * ((-1951871487 - (a1 | 0x8BA8CE01) + (a1 | 0x745731FE)) ^ 0xAA918C25));
  __asm { BR              X14 }
}

void sub_1D0D9A06C(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_DWORD *)(v1 + a1) = 33836109;
}

void sub_1D0D9AF00(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(_QWORD *)(a1 + 24))
    v2 = *(_DWORD *)(a1 + 20) - v1 == 965551447;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_1D0D9AF9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 - 791)))(32, 0x101004023FF3BD5) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 * (v0 + 770)) ^ v0)))();
}

uint64_t sub_1D0D9AFDC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 832) | 0x340) ^ 0x359) * (v0 == v1)) | (v2 - 512))))();
}

uint64_t sub_1D0D9B028@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  int v7;
  int v9;
  uint64_t v10;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;

  v12 = v3 - 965551448;
  v13 = v3 - 1;
  v14 = *(unsigned __int8 *)(v6 + v12);
  if (v14 == 239)
    __asm { BR              X12 }
  if (v14 == 111)
  {
    v15 = -623068998;
    v16 = *(_QWORD *)(v4 + 8);
    v17 = *(unsigned __int8 *)(v4 + 16) ^ v5;
    *(_QWORD *)result = v6;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v13;
    if (v17 == 59)
      v18 = 1606380076;
    else
      v18 = 1606380077;
    *(_DWORD *)(result + 16) = 316202568;
    *(_DWORD *)(result + 20) = v18;
    *(_DWORD *)(result + 24) = -623068998;
    *(_QWORD *)(v16 - 0x591956795CC936E4) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v10 + 8 * (v9 ^ 0x34A)))();
    v15 = 623108963;
  }
  *(_DWORD *)v4 = v15;
  return result;
}

void sub_1D0D9B100(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 ^ (535753261 * (((a1 ^ 0xB522495B) & 0xFC4AF52D | ~(a1 ^ 0xB522495B | 0xFC4AF52D)) ^ 0xBC634DA6));
  v2 = *(_QWORD *)(a1 + 8);
  v5 = v1 - 1755732067 * ((2 * (&v3 & 0x7340758) - &v3 + 2026633376) ^ 0xA60D457B) - 717;
  v4 = v2;
  sub_1D0D86514((uint64_t)&v3);
  __asm { BR              X8 }
}

void sub_1D0D9B208()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;

  if ((*(_DWORD *)(v2 - 0x5005140540A45D4ALL) - 33836110) >= 0x7FFFFFFF)
    v3 = v1;
  else
    v3 = v1 + 2;
  *(_DWORD *)(v0 + 16) = v3;
}

uint64_t sub_1D0D9B274(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) + 1734042137 * (((a1 | 0xF38AD011) - a1 + (a1 & 0xC752FEE)) ^ 0xAF44135C);
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E8EC5D70 + (v1 ^ 0x103))
                              + (int)(((*(_QWORD *)a1 == 0x4FDE89866017883) * ((v1 + 120031719) & 0xF8D87657 ^ 0x1D6)) ^ v1))
                            - 4))();
}

uint64_t sub_1D0D9B320()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((2029
                                          * (*(_DWORD *)(v2 - 0x4FDE8986601786BLL) == (((v0 - 515) | 0x1C4) ^ 0xDADCB96C))) ^ v0))
                            - 4))();
}

uint64_t sub_1D0D9B374()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v2 - 0x4FDE89866017873) - 625330043;
  v4 = *(_DWORD *)(v2 - 0x4FDE89866017877) - 1274678922;
  v5 = v4 < 0xED9316CD;
  v6 = v3 < v4;
  if (v3 < (v0 ^ 0xED9314D8) != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((404 * v6) ^ v0)) - 4))();
}

uint64_t sub_1D0D9B408@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2;

  *v2 = a2;
  *(_DWORD *)(result + 8) = 623109007;
  return result;
}

uint64_t sub_1D0D9B41C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_1E8EC2370[(541 * (*(_DWORD *)(a2 + 4) == 1811329849)) ^ 0x43Du] - 12))();
}

uint64_t sub_1D0D9B458(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xFBEFB2D6)
                       + 397803520
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x1AC);
  return 0;
}

uint64_t sub_1D0D9B48C()
{
  return 4294925278;
}

void sub_1D0D9B494(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)a1 ^ (3804331 * ((-1456938809 - (a1 | 0xA928E0C7) + (a1 | 0x56D71F38)) ^ 0xAC49EC6E));
  v2 = *(_QWORD *)(a1 + 8);
  ((void (*)(_QWORD, void (*)()))*(&off_1E8EC5D70 + v1 - 803))(*(&off_1E8EC5D70 + (v1 ^ 0x4C2)), sub_1D0DC48D8);
  __asm { BR              X10 }
}

uint64_t sub_1D0D9B550@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1561
                                * (((*(_QWORD *)(*(_QWORD *)(v2 + 8 * (a1 - 530)) - 4) == 0) ^ a1) & 1)) ^ a1)))();
}

uint64_t sub_1D0D9B580@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 432)))(v1);
}

void sub_1D0D9B5AC(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  int v6;
  int v7;

  v1 = 1225351577 * (((a1 | 0xA3D2D055) - (a1 & 0xA3D2D055)) ^ 0x80480843);
  v2 = *(_DWORD *)(a1 + 24) - v1;
  v3 = *(_DWORD *)(a1 + 8) - v1;
  v4 = *(_DWORD *)(*(_QWORD *)a1 - 0x5005140540A45D4ALL);
  v6 = v4 - 33836109;
  v5 = v4 - 33836109 < 0;
  v7 = 33836109 - v4;
  if (!v5)
    v7 = v6;
  __asm { BR              X13 }
}

uint64_t sub_1D0D9B688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((230 * (v7 == (((v9 ^ 0x622) - 546) ^ 0x291) + 463787686)) ^ v9 ^ 0x622)) - 4))(a1, a2, a3, a4, a5, a6, a7, 1154464405);
}

uint64_t sub_1D0D9B6D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(result + 28) = a8;
  return result;
}

uint64_t sub_1D0D9B6F4(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 + 8 * (v2 ^ 0x7EB))
                                                                              - ((((v2 ^ 0x20D) - 58) | 0x19) ^ ((v2 ^ 0x20D) + 557275199) & 0xDEC8A5CD ^ 0x25ALL)))(a1, 557275199, 3737691597, 25, 1535751604);
}

uint64_t sub_1D0D9B7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  _BOOL4 v13;

  v13 = v5 > v9;
  if (v13 == a5 - 984405236 < -1596137280)
    v13 = a5 - 984405236 < v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v11 & ~((v10 + 1267191882) & (v7 + 567) ^ v13)) * v12) ^ v10))
                            - ((v10 + 1267191882 + v7) | 0x45u)
                            + 453))();
}

uint64_t sub_1D0D9B848@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W8>, uint64_t a4, _QWORD *a5)
{
  int v5;
  uint64_t v6;
  char v7;
  int v8;
  char v9;
  char v10;
  char v11;
  int v12;
  int v13;
  int v14;

  v14 = *(_DWORD *)(*a5 + 4 * (a2 - 1535752065 + v8 - 499));
  *(_BYTE *)(*(_QWORD *)(a1 + 16) + (v5 + a3)) = (v14 ^ v7)
                                                             - ((v11 ^ (2 * ((v8 + 13 + v9) & v10 ^ 0xEE))) & (2 * (v14 ^ v7)))
                                                             - 17;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v8 - 499) ^ ((v5 - 1 == v12) * v13))))();
}

void sub_1D0D9B8C4()
{
  JUMPOUT(0x1D0D9B790);
}

void sub_1D0D9B8D0()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[1208];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v0 = (unint64_t)&v2[qword_1EFC551E8 - qword_1EFC55228];
  qword_1EFC55228 = (1209664481 * v0) ^ 0x2DEB88543200F8ELL;
  qword_1EFC551E8 = 1209664481 * (v0 ^ 0x2DEB88543200F8ELL);
  *(_DWORD *)*(&off_1E8EC5D70
             + ((-31 * ((qword_1EFC551E8 - qword_1EFC55228) ^ 0x8E)) ^ byte_1D0E93820[byte_1D0E8EB90[(-31 * ((qword_1EFC551E8 - qword_1EFC55228) ^ 0x8E))] ^ 0xAB])
             + 79) = -623068998;
  v1 = ((uint64_t (*)(uint64_t, uint64_t))*(&off_1E8EC5D70
                                                  + ((-31 * (qword_1EFC55228 ^ 0x8E ^ qword_1EFC551E8)) ^ byte_1D0E93520[byte_1D0E8E890[(-31 * (qword_1EFC55228 ^ 0x8E ^ qword_1EFC551E8))] ^ 0x18])
                                                  - 155))(512, 1509315540);
  *(_QWORD *)*(&off_1E8EC5D70
             + ((-31 * ((qword_1EFC551E8 + qword_1EFC55228) ^ 0x8E)) ^ byte_1D0E8EA90[byte_1D0E9B3B0[(-31 * ((qword_1EFC551E8 + qword_1EFC55228) ^ 0x8E))] ^ 0x8C])
             - 195) = v1;
  __asm { BR              X8 }
}

uint64_t sub_1D0D9BA7C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = v0;
  v2 = 1224239923
     * ((~((v1 - 144) | 0x9AFB9A7A47D7B686) + ((v1 - 144) & 0x9AFB9A7A47D7B686)) ^ 0x4D5ED0EC4A9BB4AELL);
  *(_QWORD *)(v1 - 104) = dword_1EFC55190 - v2;
  *(_DWORD *)(v1 - 120) = v2 - 1501685844;
  *(_DWORD *)(v1 - 116) = v2 - 954590878;
  *(_DWORD *)(v1 - 144) = v2 ^ 0xC71A1956;
  *(_DWORD *)(v1 - 140) = -1224239923 * ((~((v1 - 144) | 0x47D7B686) + ((v1 - 144) & 0x47D7B686)) ^ 0x4A9BB4AE);
  *(_QWORD *)(v1 - 128) = v2 ^ 0x3FDC3ED7;
  *(_DWORD *)(v1 - 112) = -954590917 - v2;
  v3 = sub_1D0DC4D4C(v1 - 144);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v1 - 136)))(v3);
}

uint64_t sub_1D0D9BD58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(uint64_t, uint64_t), uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  int v43;
  uint64_t (*v44)(void);
  int v45;
  unsigned int *v46;
  int v47;
  int v48;
  unsigned int v49;
  int v50;

  v47 = v42 ^ (v42 + 967);
  a13(a12, 2965982036);
  v48 = v44();
  v49 = v48 + (v47 ^ 0x908F0FB8) - (v45 & (2 * v48));
  *v46 = v49;
  v50 = ((v47 ^ 0x711) - 1869673869 + ((v49 >> 30) ^ 2) - 2 * ((v49 >> 30) ^ 2) - 730) ^ v49;
  v46[1] = v43 + 1812433253 * v50 - ((-670100790 * v50 + 2) & v45);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a42 + 8 * v47) - 4))(1812433253);
}

void sub_1D0D9BE24()
{
  JUMPOUT(0x1D0D9BDC0);
}

uint64_t sub_1D0D9BE3C(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, int32x4_t a18, int8x16_t a19, int8x16_t a20,int8x16_t a21)
{
  uint64_t v21;
  int v22;
  uint64_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  int32x4_t v28;
  int8x16_t v29;

  v24 = (int8x16_t)vld1q_dup_f32((const float *)v23);
  v25.i64[0] = 0x8000000080000000;
  v25.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(_QWORD *)(v23 + 4);
  a2.i32[2] = *(_DWORD *)(v23 + 12);
  v26 = vextq_s8(v24, a2, 0xCuLL);
  v27 = a2;
  v27.i32[3] = *(_DWORD *)(v23 + 4 * ((1118439144 - v22) ^ 0x5E2));
  v28 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v27, a21), vandq_s8(v26, v25)), 1uLL), a20);
  v29.i32[0] = *(_DWORD *)(v21 + 4 * ((*(_DWORD *)(v23 + 4) & 1) == 0));
  v29.i32[1] = *(_DWORD *)(v21 + 4 * (~*(_DWORD *)(v23 + 8) & 1));
  v29.i32[2] = *(_DWORD *)(v21 + 4 * (~*(_DWORD *)(v23 + 12) & 1));
  v29.i32[3] = *(_DWORD *)(v21 + 4 * ((v27.i8[12] & 1) == 0));
  *(int8x16_t *)v23 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v23 + 1588), v29), a17), (int8x16_t)vaddq_s32(vsubq_s32(v28, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v28, v28), a19)), a18));
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (1118438455 - v22)) - 4))();
}

uint64_t sub_1D0D9C5E8(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  int v17;
  unsigned int v18;

  v15 = (unsigned int *)(v14 + 4 * v8);
  v16 = v8 + (v6 ^ v9) * v11 - 368;
  v17 = *(_DWORD *)(v14 + 4 * v16);
  v18 = a4 ^ ((v17 & 0x7FFFFFFE | v7 & 0x80000000) >> 1);
  *v15 = v15[397] ^ a6 ^ *(_DWORD *)(v10 + 4 * ((v17 & 1) == 0)) ^ (v18 + a3 - (v13 & (2 * v18)));
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * (((v16 == 227) * v12) ^ v6)) - 4))();
}

uint64_t sub_1D0D9C65C@<X0>(uint64_t a1@<X4>, int a2@<W8>, int8x16_t a3@<Q1>, int8x16_t a4@<Q4>, int8x16_t a5@<Q5>, int8x16_t a6@<Q6>, int32x4_t a7@<Q7>)
{
  uint64_t v7;
  uint64_t v8;
  int8x16_t v9;
  int8x16_t v10;
  const float *v11;
  int8x16_t v12;
  uint64_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int32x4_t v16;
  int8x16_t v17;

  v11 = (const float *)(v8 + 908);
  v12 = (int8x16_t)vld1q_dup_f32(v11);
  v13 = (a2 + 813);
  a3.i32[0] = *(_DWORD *)(v8 + 912);
  a3.i32[1] = *(_DWORD *)(v8 + 4 * (v13 ^ 0x47B));
  a3.i32[2] = *(_DWORD *)(v8 + 920);
  v14 = vextq_s8(v12, a3, 0xCuLL);
  v15 = a3;
  v15.i32[3] = *(_DWORD *)(v8 + 924);
  v16 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v15, a4), vandq_s8(v14, v10)), 1uLL), a5);
  v17.i32[0] = *(_DWORD *)(v7 + 4 * ((*(_DWORD *)(v8 + 912) & 1) == 0));
  v17.i32[1] = *(_DWORD *)(v7 + 4 * ((*(_DWORD *)(v8 + 4 * (v13 ^ 0x47B)) & 1) == 0));
  v17.i32[2] = *(_DWORD *)(v7 + 4 * (~*(_DWORD *)(v8 + 920) & 1));
  v17.i32[3] = *(_DWORD *)(v7 + 4 * ((v15.i8[12] & 1) == 0));
  *(int8x16_t *)(v8 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v8, v17), v9), (int8x16_t)vaddq_s32(vsubq_s32(v16, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v16, v16), a6)), a7));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * a2) - 12))();
}

void sub_1D0D9C73C()
{
  JUMPOUT(0x1D0D9C674);
}

uint64_t sub_1D0D9C748(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,unsigned int a46)
{
  int v46;
  uint64_t v47;
  int v48;
  _DWORD *v49;
  unsigned int v50;

  v50 = a4 ^ ((*v49 & 0x7FFFFFFE | v49[623] & 0x80000000) >> 1);
  v49[623] = v49[396] ^ a6 ^ (v46 - 1869675051 + v50 - (v48 & (2 * v50))) ^ *(_DWORD *)(v47
                                                                                      + 4
                                                                                      * (*v49 & ((v46 + 1118436452) ^ 0x42AA0103u) ^ 1));
  return ((uint64_t (*)(void))(*(_QWORD *)(a5 + 8 * ((356 * (a46 > 0x26F)) ^ v46)) - 12))();
}

uint64_t sub_1D0D9C7EC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  *v35 = 2050352858;
  v37 = 1225351577
      * ((~((v36 - 144) | 0x217B100DE68A7068) + ((v36 - 144) & 0x217B100DE68A7068)) ^ 0x331247AA3AEF5781);
  *(_QWORD *)(v36 - 128) = (*a27 + 2140117860) + v37;
  *(_QWORD *)(v36 - 104) = v37 ^ 0xBF6BDA3BLL;
  *(_DWORD *)(v36 - 144) = a1 + 569278512 - v37 + 6;
  *(_DWORD *)(v36 - 136) = a1 + 569278512 + v37;
  *(_DWORD *)(v36 - 112) = (a1 + 1487478160) ^ v37;
  *(_DWORD *)(v36 - 120) = v37 ^ 1;
  *(_DWORD *)(v36 - 116) = (a1 + 569278540) ^ v37;
  v38 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8EC5D70 + a1 - 1118437562) - 12))(v36 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a35 + 8 * *(int *)(v36 - 140)) - 8))(v38);
}

uint64_t sub_1D0D9C918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unint64_t a33,uint64_t a34,int *a35)
{
  uint64_t v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;

  if (v37 >= v38)
    v41 = *a35 + 1;
  else
    v41 = v40;
  *a35 = v41;
  v42 = (((v36 >> 11) ^ 0x1211E1) - 1869673869 - 2 * (((v36 >> 11) ^ 0x1211E1) & 0xF0A7B ^ (v36 >> 11) & 8)) ^ v36;
  v43 = (((v42 << (a15 ^ 0xC2)) & 0x9D2C5680 ^ v42) << 15) & 0xEFC60000 ^ (v42 << (a15 ^ 0xC2)) & 0x9D2C5680 ^ v42;
  *(_DWORD *)(*a28 + a33) ^= v43 ^ (v43 >> 18);
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * ((v39 - 1118437450) ^ ((a33 < 0x1FC) | (4 * (a33 < 0x1FC))))) - 8))();
}

void sub_1D0D9C9FC()
{
  JUMPOUT(0x1D0D9BBF4);
}

void sub_1D0D9CA08()
{
  _DWORD *v0;
  int v1;

  *v0 = v1 + 105;
}

void sub_1D0DA2FF0(uint64_t a1)
{
  int v1;
  BOOL v3;

  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x5005140540A45D4ALL) == 33836109
    || *(_DWORD *)(*(_QWORD *)a1 - 0x5005140540A45D4ALL) == 33836109;
  v1 = *(_DWORD *)(a1 + 8) - 235795823 * (((a1 | 0xDA219BBE) - (a1 & 0xDA219BBE)) ^ 0x4E8CD2E7);
  __asm { BR              X14 }
}

uint64_t sub_1D0DA30F0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((190 * (((((v2 ^ 0x286) - 248) | 0x165) ^ 0xFFFFFE9E) + v3 + a1 > 0x7FFFFF7C)) ^ v2 ^ 0x286))
                            - ((((v2 ^ 0x286) - 204) | 0x352u) ^ 0x3F6)))();
}

uint64_t sub_1D0DA3150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v3 + 8 * (v5 ^ (1007 * (v4 > 0)))))(1007, (v5 + 695), a3);
}

uint64_t sub_1D0DA31BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  _BOOL4 v20;

  v20 = v16 > -24647007;
  *(_DWORD *)(a14 + 4 * (v19 - 1427279897)) = v15;
  if (v20 == v19 + 744850758 < ((v17 - 37) ^ 0x17814BB))
    v20 = v19 + 744850758 < v18;
  return (*(uint64_t (**)(void))(v14 + 8 * ((198 * !v20) ^ v17)))();
}

uint64_t sub_1D0DA3234()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 + 695) ^ 0x1B6) * (v1 == 0)) ^ v2)))();
}

uint64_t sub_1D0DA3260()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * (((v2 ^ 0x2A ^ (4 * v2) ^ 0x448) * (v1 > 0)) ^ v2)))();
}

uint64_t sub_1D0DA32B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;

  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((843
                                * (*(_DWORD *)(a14 + 4 * (v18 + v17 + 377)) == v15
                                                                                             + ((v16 - 264848431) & 0xFC9417C)
                                                                                             - 332)) ^ (v16 - 690))))();
}

uint64_t sub_1D0DA3310()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * ((1367 * (v2 + v3 + ((v1 - 276) | 0x3C6) - 646 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1D0DA334C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((843
                                * (*(_DWORD *)(a1 + 4 * (v5 + v4 + 377)) == v2
                                                                                          + ((v3 - 264848431) & 0xFC9417C)
                                                                                          - 332)) ^ (v3 - 690))))();
}

uint64_t sub_1D0DA339C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v2 - 120) = (v1 + 575) ^ (535753261
                                      * ((2 * ((v2 - 120) & 0x16B2EB40) - (v2 - 120) + 1766659257) ^ 0x63B91A96));
  *(_QWORD *)(v2 - 112) = v4;
  sub_1D0D9B100(v2 - 120);
  *(_QWORD *)(v2 - 112) = v5;
  *(_DWORD *)(v2 - 120) = (v1 + 575) ^ (535753261 * (((v2 - 120) & 0xD6A3CD8E | ~((v2 - 120) | 0xD6A3CD8E)) ^ 0x23A83C5E));
  sub_1D0D9B100(v2 - 120);
  *(_QWORD *)(v2 - 120) = v5;
  *(_QWORD *)(v2 - 112) = v0;
  *(_DWORD *)(v2 - 104) = v1 + 1374699841 * ((v2 - 120) ^ 0x6DF41809) - 49;
  return sub_1D0DBA800(v2 - 120);
}

uint64_t sub_1D0DA37B0(_DWORD *a1)
{
  unsigned int v1;

  v1 = 1224239923
     * ((2 * ((a1 ^ 0x6CFE4100) & 0x6997F88A) - (a1 ^ 0x6CFE4100) - 1771567243) ^ 0x825BBA2);
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E8EC5D70 + (int)(a1[4] - v1 - 1106))
                              + (int)((84 * (((*a1 + v1) ^ 0xDADCB8BA) - 1 < 0x63)) ^ (a1[4] - v1)))
                            - ((a1[4] - v1 + 837157400) & 0xCE19FADF)
                            + 539))();
}

uint64_t sub_1D0DA3860@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;

  *(_DWORD *)(*(_QWORD *)(result + 8) - 0x6A115CBB5709FBB8) = (a2 ^ 0x25234745)
                                                              - ((2 * (a2 ^ 0x25234745) - 85198) & 0xB5B97174)
                                                              + (((v2 - 538) | 0x522) ^ 0xDADC1774);
  return result;
}

void g9eargdzvoj3()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x1E0C80C00];
  v0[1] = -504207030
        - 1734042137 * ((v0 - 1024062060 - 2 * ((unint64_t)v0 & 0xC2F60D94)) ^ 0x9E38CED9);
  sub_1D0DC4FA8(v0);
  __asm { BR              X8 }
}

uint64_t sub_1D0DA39D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = 350 - 460628867 * (((&a13 | 0x9D7D7D30) - (&a13 & 0x9D7D7D30)) ^ 0xD1EBFF4D);
  a13 = &STACK[0x5E9AF8031DC7FF3F];
  sub_1D0DBA6E4((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((1802 * (a14 == ((v15 + 1096) ^ 0x5B8))) ^ v16))
                                                                                       - 8))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_1D0DA3A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  a14 = v16;
  a15 = a11;
  a16 = v18 + 3804331 * (((&a13 | 0x3E79ACC6) - (&a13 & 0x3E79ACC6)) ^ 0xC4E75F90) - 690;
  v21 = ((uint64_t (*)(int *))(*(_QWORD *)(v19 + 8 * (v18 - 1310)) - 4))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (((a13 == v17) * (v18 - 575)) ^ v18)) - 4))(v21);
}

uint64_t sub_1D0DA3B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unint64_t a14, int a15, uint64_t a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v22 = 1178560073 * (((v18 | 0x584FE73A97701A0ALL) - v18 + (v18 & 0xA7B018C5688FE5F0)) ^ 0x98D6989EBD1837F1);
  a15 = v22 + v19 - 919;
  a16 = a11;
  a14 = (v16 ^ 0x45DFFDAD7F9EC7C3) + ((2 * v16) & 0x8BBFFB5AFF3D8F86) - v22 - 0x5975824340882C0;
  v23 = ((uint64_t (*)(int *))(*(_QWORD *)(v20 + 8 * (v19 ^ 0x538)) - 8))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * (((a13 == v17) * ((v19 + 1289648454) & 0x839F ^ 0x2E0)) ^ v19))
                                          - 4))(v23);
}

uint64_t sub_1D0DA3C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, int a15, uint64_t a16, int a17, unint64_t *a18)
{
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1374699841 * ((&a13 & 0x3FFC14FF | ~(&a13 | 0x3FFC14FF)) ^ 0xADF7F309);
  a16 = a11;
  a15 = v22 ^ 0x515D506C;
  a13 = v22 + 459559847;
  a18 = &STACK[0x1A99DB821DFE8BAA];
  a17 = (v19 - 2024874547) ^ v22;
  v23 = sub_1D0DC5684((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (((a14 == v18) * (v21 ^ 0x14F)) ^ v19)) - 4))(v23);
}

uint64_t sub_1D0DA3CC4()
{
  int v0;
  void (*v1)(unint64_t **);
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  unint64_t *v7;
  unint64_t *v8;
  int v9;
  unint64_t *v10;
  unint64_t *v11;
  unint64_t *v12;

  v11 = &STACK[0x28677D891274AFDE];
  v12 = v7;
  LODWORD(v10) = (v3 - 947) ^ ((((&v10 | 0x3FA9C01)
                               - &v10
                               + (&v10 & 0xFC0563F8)) ^ 0x6E0E8408)
                             * v0);
  ((void (*)(unint64_t **))(*(_QWORD *)(v4 + 8 * (v3 - 1399)) - 12))(&v10);
  HIDWORD(v11) = v3
               - 1734042137 * (((&v10 | 0xBCBD6A17) - (&v10 & 0xBCBD6A17)) ^ 0xE073A95A)
               - 994;
  v10 = v7;
  sub_1D0D9B274((uint64_t)&v10);
  if ((_DWORD)v11 == (v3 ^ 0x726 ^ (v2 + 362)))
    v5 = v9;
  else
    v5 = (int)v11;
  HIDWORD(v10) = v3
               + 535753261 * ((((2 * &v10) | 0x1FE5BCF4) - &v10 - 267574906) ^ 0x506D055)
               - 422;
  v11 = v7;
  v1(&v10);
  v11 = v8;
  HIDWORD(v10) = (v3 ^ 0x726)
               + 535753261 * ((2 * (&v10 & 0x5599B070) - &v10 + 711348104) ^ 0x209241A7)
               + 372;
  v1(&v10);
  return v5 ^ v2;
}

void sub_1D0DA3E84(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  unint64_t *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  v3 = 460628867 * ((2 * (&v5 & 0x1D697128) - &v5 + 1654034134) ^ 0x2E000CAB);
  v6 = -1882357464 - v3;
  v7 = v3 - 432370878;
  v5 = &STACK[0x7299FD1B0C63AFAA];
  sub_1D0DB7FC0((uint64_t)&v5);
  __asm { BR              X9 }
}

uint64_t sub_1D0DA4024@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v9 = 24 * (a2 ^ 0x51) + v7 - 1303959576;
  v10 = ((a7 - 1236659586) < 0xC75E56A9) ^ (v9 < 0xC75E56A9);
  v11 = v9 < a7 - 1236659586;
  if (v10)
    v12 = (a7 - 1236659586) < 0xC75E56A9;
  else
    v12 = v11;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * ((221 * v12) ^ a2)) - 4))(a1, 3941126511);
}

uint64_t sub_1D0DA40A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  int v16;
  uint64_t v17;

  v15 = (a6 - 419444797) & 0x9FE0BFBF;
  v16 = 535753261
      * ((~((v14 - 120) ^ 0x323A17E6 | 0xF0BA43E2) + (((v14 - 120) ^ 0x323A17E6) & 0xF0BA43E2)) ^ 0x378BA5D4);
  *(_QWORD *)(v14 - 120) = a10;
  *(_DWORD *)(v14 - 112) = a13 - v16 + 85917807;
  *(_DWORD *)(v14 - 108) = (a6 + 65) ^ v16;
  sub_1D0D866A4(v14 - 120);
  v17 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(_BYTE *)(v14 - 220 + (v17 ^ 0x37)) = 111;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8
                                                      * ((242 * ((v17 ^ 0x37) > (v15 ^ 0x86E08784))) ^ a6))
                                          - 12))(3941126511);
}

uint64_t sub_1D0DA41C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * ((978
                                                       * (((v6 == 63) ^ (a6 + (v7 ^ 0xB) + 46)) & 1)) ^ v7)))(a1, -870327928);
}

uint64_t sub_1D0DA420C@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((a1 ^ 8u) >= v1 - 970) * (v1 + 928)) ^ v1)) - 8))();
}

uint64_t sub_1D0DA423C@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 220 + v3 + a1) = 0xEFEFEFEFEFEFEFEFLL;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((58
                                                        * (((v2 - 555) | 0x218u) - 951 != (((v2 - 194) ^ 0x28) & a2))) ^ (v2 - 194)))
                                          - 4))(2262861731);
}

uint64_t sub_1D0DA42AC@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  unsigned int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v5 < a2;
  *(_BYTE *)(v11 - 220 + (v7 + a3)) = *(_BYTE *)(v10 + (v8 + a1))
                                                  + ((a5 - 35) ^ 0xDF)
                                                  - ((2 * *(_BYTE *)(v10 + (v8 + a1))) & 0xDF);
  v13 = a4 + v8 + 49;
  v14 = v12 ^ (v13 < a2);
  v15 = v13 < v5;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((v12 * v6) ^ a5)) - 4))();
}

uint64_t sub_1D0DA4324@<X0>(uint64_t a1@<X0>, char a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * ((109 * (((v3 == a3) ^ (v4 - a2 - 111)) & 1)) ^ v4))
                                          - (((v4 - 2136966078) | 0x64007B2u) ^ (unint64_t)(a1 + 24))))(3941126511);
}

uint64_t sub_1D0DA4380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int32x4_t a29,int32x4_t a30,int32x4_t a31,int32x4_t a32)
{
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, _QWORD, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128);
  const char *v41;
  __n128 v42;
  __n128 v43;
  __n128 v44;
  __n128 v45;
  __n128 v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  uint8x16_t v54;
  uint16x8_t v55;
  int8x16_t v56;
  uint16x8_t v57;
  int8x16_t v58;
  uint8x16_t v59;
  uint16x8_t v60;
  uint16x8_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  uint8x16_t v66;
  int8x16_t v69;
  int8x16_t v74;
  int32x4_t v75;
  int32x4_t v76;
  int32x4_t v77;
  uint64_t v79;
  uint8x16_t v80;
  uint16x8_t v81;
  uint16x8_t v82;
  uint8x16_t v83;
  uint8x16_t v88;
  uint16x8_t v89;
  uint16x8_t v90;
  int32x4_t v91;
  int32x4_t v92;
  int32x4_t v93;
  int32x4_t v94;
  _DWORD *v95;
  int v96;
  unsigned int v97;
  int v98;
  unint64_t v99;
  int v100;
  uint64_t v101;
  unint64_t v102;
  int8x16x4_t v103;
  int8x16x4_t v104;

  v40 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v34 + 8 * (a7 + v32 - 32)) - 12);
  v41 = (const char *)(v39 - 220);
  v42.n128_u64[0] = 0xEFEFEFEFEFEFEFEFLL;
  v42.n128_u64[1] = 0xEFEFEFEFEFEFEFEFLL;
  v43 = (__n128)vdupq_n_s32(0x5ADCB8BFu);
  v44 = (__n128)vdupq_n_s32(0xDADCB8BA);
  v45 = (__n128)vdupq_n_s32(0xB5B97174);
  v46.n128_u64[0] = 0xDEDEDEDEDEDEDEDELL;
  v46.n128_u64[1] = 0xDEDEDEDEDEDEDEDELL;
  v47 = *(_DWORD *)(v39 - 148);
  v48 = *(_DWORD *)(v39 - 144);
  v49 = v47;
  v50 = v48;
  v51 = *(_DWORD *)(v39 - 140);
  v52 = *(_DWORD *)(v39 - 136);
  a21 = v51 | 0xBE74454400000000;
  v53 = *(_BYTE *)(v39 - 124) ^ 0x8A;
  HIDWORD(a17) = *(unsigned __int8 *)(v39 - 124) ^ 0xFFFFFF8A;
  if (v53 == 2)
  {
    HIDWORD(v101) = v47;
    v102 = __PAIR64__(v52, v48);
    v104 = vld4q_s8(v41);
    v79 = *(unsigned int *)(v39 - 132);
    HIDWORD(a15) = *(_DWORD *)(v39 - 132);
    v80 = (uint8x16_t)veorq_s8(v104.val[0], (int8x16_t)v42);
    v81 = vmovl_u8(*(uint8x8_t *)v80.i8);
    v82 = vmovl_high_u8(v80);
    v83 = (uint8x16_t)veorq_s8(v104.val[1], (int8x16_t)v42);
    _Q22 = vmovl_u8(*(uint8x8_t *)v83.i8);
    _Q21 = vmovl_high_u8(v83);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v88 = (uint8x16_t)veorq_s8(v104.val[2], (int8x16_t)v42);
    v89 = vmovl_high_u8(v88);
    v90 = vmovl_u8(*(uint8x8_t *)v88.i8);
    v104.val[0] = veorq_s8(v104.val[3], (int8x16_t)v42);
    v104.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v104.val[0]);
    v104.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v104.val[1]);
    v104.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v104.val[1].i8);
    v104.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v104.val[0].i8);
    v104.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v104.val[0]);
    v104.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v104.val[0].i8);
    v91 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v81.i8), 0x18uLL)), v104.val[0]);
    v92 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v90, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v81), 0x18uLL)), v104.val[3]);
    v93 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v89.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)), v104.val[1]);
    v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v89, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)), v104.val[2]);
    v104.val[0] = veorq_s8(vandq_s8((int8x16_t)v91, (int8x16_t)v43), (int8x16_t)(*(_OWORD *)v104.val & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v104.val[3] = veorq_s8(vandq_s8((int8x16_t)v92, (int8x16_t)v43), (int8x16_t)(*(_OWORD *)&v104.val[3] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v104.val[1] = veorq_s8(vandq_s8((int8x16_t)v93, (int8x16_t)v43), (int8x16_t)(*(_OWORD *)&v104.val[1] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v104.val[2] = veorq_s8(vandq_s8((int8x16_t)v94, (int8x16_t)v43), (int8x16_t)(*(_OWORD *)&v104.val[2] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    a31 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v104.val[1], (int32x4_t)v104.val[1])), (int32x4_t)v44);
    a32 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v104.val[2], (int32x4_t)v104.val[2])), (int32x4_t)v44);
    a29 = vaddq_s32(vsubq_s32(v91, vaddq_s32((int32x4_t)v104.val[0], (int32x4_t)v104.val[0])), (int32x4_t)v44);
    a30 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v104.val[3], (int32x4_t)v104.val[3])), (int32x4_t)v44);
    v95 = (_DWORD *)&a29 + v36 + 674059267;
    v96 = *(v95 - 8) ^ *(v95 - 3);
    v97 = v96 + v33 - ((2 * v96) & 0xB5B97174);
    v98 = *(v95 - 16) ^ *(v95 - 14);
    HIDWORD(v99) = v98 ^ 0x5ADCB8BA ^ v97;
    LODWORD(v99) = v98 ^ ~v97;
    *v95 = (v99 >> 31) + v33 - ((2 * (v99 >> 31)) & 0xB5B97174);
    LODWORD(v101) = HIDWORD(a12) + 1409653228;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128), unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 + 8 * ((1369 * (v38 != 674059204)) ^ (a6 + a7 + 769))) - 8))(3048829300, v50, 27176202, 2004929403, v49, 1369, (a6 + a7 + 769), v79, a9, a10, a11, a12, a13, a14, a15, v38 - 16, a17, v101, v102,
             v40,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
  else if (v53 == 1)
  {
    v103 = vld4q_s8(v41);
    v54 = (uint8x16_t)veorq_s8(v103.val[0], (int8x16_t)v42);
    v55 = vmovl_high_u8(v54);
    v56 = (int8x16_t)vmovl_high_u16(v55);
    v57 = vmovl_u8(*(uint8x8_t *)v54.i8);
    v58 = (int8x16_t)vmovl_high_u16(v57);
    v59 = (uint8x16_t)veorq_s8(v103.val[1], (int8x16_t)v42);
    v60 = vmovl_u8(*(uint8x8_t *)v59.i8);
    v61 = vmovl_high_u8(v59);
    v62 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v60.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8));
    v63 = vorrq_s8((int8x16_t)vshll_high_n_u16(v60, 8uLL), v58);
    v64 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v61.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v55.i8));
    v65 = vorrq_s8((int8x16_t)vshll_high_n_u16(v61, 8uLL), v56);
    v66 = (uint8x16_t)veorq_s8(v103.val[2], (int8x16_t)v42);
    _Q22 = (int8x16_t)vmovl_high_u8(v66);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
    v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v103.val[0] = veorq_s8(v103.val[3], (int8x16_t)v42);
    v103.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v103.val[0].i8);
    v103.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v103.val[0]);
    v75 = (int32x4_t)vorrq_s8(vorrq_s8(v62, v69), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v103.val[1].i8), 0x18uLL));
    v103.val[1] = vorrq_s8(vorrq_s8(v63, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v103.val[1]), 0x18uLL));
    v76 = (int32x4_t)vorrq_s8(vorrq_s8(v64, v74), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v103.val[0].i8), 0x18uLL));
    v77 = (int32x4_t)vorrq_s8(vorrq_s8(v65, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v103.val[0]), 0x18uLL));
    a31 = vaddq_s32(vsubq_s32(v76, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v76, v76), (int8x16_t)v45)), (int32x4_t)v44);
    a32 = vaddq_s32(vsubq_s32(v77, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v77, v77), (int8x16_t)v45)), (int32x4_t)v44);
    a29 = vaddq_s32(vsubq_s32(v75, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v75, v75), (int8x16_t)v45)), (int32x4_t)v44);
    a30 = vaddq_s32(vsubq_s32((int32x4_t)v103.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v103.val[1], (int32x4_t)v103.val[1]), (int8x16_t)v45)), (int32x4_t)v44);
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 + 8 * (a6 ^ (a6 - 88))) - 12))(674059267, v48, 27176202, 2004929403);
  }
  else
  {
    v100 = a21;
    *(_DWORD *)(v39 - 148) = 2 * (v47 ^ v37) + v37 - (v35 & (4 * (v47 ^ v37)));
    *(_DWORD *)(v39 - 144) = 2 * (v48 ^ v37) + v37 - (v35 & (4 * (v48 ^ v37)));
    *(_DWORD *)(v39 - 140) = (v51 ^ v37) + (v100 ^ v37) + v37 - (v35 & (2 * ((v51 ^ v37) + (v100 ^ v37))));
    *(_DWORD *)(v39 - 136) = 2 * (v52 ^ v37) + v37 - (v35 & (4 * (v52 ^ v37)));
    return v40(a1, v48, 27176202, 2004929403, v42, v43, v44, v45, v46);
  }
}

uint64_t sub_1D0DA5230(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18)
{
  uint64_t v18;
  _BOOL4 v19;

  if (a18 < 0x6519DE17 != a14 + 1342353350 < (a6 ^ (a6 + 45) ^ 0x6519DE44u))
    v19 = a14 + 1342353350 < (a6 ^ (a6 + 45) ^ 0x6519DE44u);
  else
    v19 = a14 + 1342353350 > a18;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((1455 * !v19) ^ (a7 + a6 + 307))) - 12))();
}

uint64_t sub_1D0DA52C0(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((875
                                * (((v2 + a1 + 63 < (v2 + a1)) ^ (((v1 + 32) | 0x81) + 10)) & 1)) ^ ((v1 + 288) | 0x481))))();
}

uint64_t sub_1D0DA5314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;

  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((1001
                                * (a13 + v13 - (unint64_t)((((v14 - 2044690911) | 0xC003A1) ^ 0x6C0856DCu) + v15) >= ((v14 - 2044690911) ^ 0x86208402uLL))) ^ v14)))();
}

uint64_t sub_1D0DA5378(int a1, int8x16_t a2, double a3, double a4, double a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  int8x16_t *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  *v14 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v17 + (v15 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v17 + (v15 + a1)), *(int8x16_t *)(v17 + (v15 + a1))), a6)), a2);
  return (*(uint64_t (**)(void))(v16 + 8 * ((248 * (((a12 + v13 - 72) | a13) != 105)) ^ (a12 + v13 + 479))))();
}

uint64_t sub_1D0DA53D8@<X0>(int a1@<W0>, int a2@<W2>, unsigned int a3@<W3>, int a4@<W6>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v6 + a5) = *(_BYTE *)(v9 + (v7 + a1))
                      - ((2 * *(_BYTE *)(v9 + (v7 + a1))) & 0xDF)
                      - 17;
  return (*(uint64_t (**)(void))(v8 + 8 * ((127 * (a5 + ((v5 + a2) & a3) != 120)) ^ (a4 + v5 + 479))))();
}

uint64_t sub_1D0DA5430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v7;
  uint64_t v8;
  int v9;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8
                                                               + 8
                                                               * ((((v7 - 870327928) < 0x38)
                                                                 * ((v9 - a6 + 486) ^ 0x402)) ^ (a7 + v9 + 333)))
                                                   - 4))(2262861731, -870327928);
}

uint64_t sub_1D0DA5488(uint64_t a1, uint64_t a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;

  v5 = (v2 ^ 0x3DFu ^ (unint64_t)(a2 + 552)) + v3;
  if (v5 <= 0x38)
    v5 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((v5 - v3 + 870327928 < 8) * (((v2 - 222) | 0xA0) + 573)) ^ v2))
                            - 4))();
}

uint64_t sub_1D0DA54E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 220 + a2 + a1) = 0xEFEFEFEFEFEFEFEFLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((43 * ((v3 ^ 0x3A4) - 405 != ((v3 ^ 0xFFFFFFFFFFFFFDC1) & v2))) ^ v3 ^ 0x2B))
                            - 12))();
}

uint64_t sub_1D0DA5548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;

  if (a18 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23
                                                                                   + 8
                                                                                   * (((*(_DWORD *)(v24 - 128) != 1894502684)
                                                                                     * ((a6 ^ (a6 - 653)) + 1155)) ^ (a7 + a6 + 581)))
                                                                       - 12))(a1, 2262861731, 2262861747, a9);
  if (a18 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23
                                                                          + 8
                                                                          * (((*(_DWORD *)(v24 - 128) == 1894502684)
                                                                            * (a7 + a6 + 59)) ^ (a7 + a6 + 462)))
                                                              - 12))(a1, 2262861731, 2262861747);
  v26 = (a6 - 928) ^ 0x86E087B3;
  v27 = ((unint64_t)&a23 ^ 0xFF5FFEFE7DC7DFBCLL)
      + 0x4FECF7DFBAC00044
      + ((v26 - 0x140020304704430) & (2 * (_QWORD)&a23));
  *(_BYTE *)(v24 - 129) = (v27 ^ 0xBA) * (v27 + 17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23
                                                                        + 8
                                                                        * (int)((1677
                                                                               * ((((_DWORD)v26 - 1895896037) & 0xF7E197F7 ^ 0x86E087B3) == 91)) ^ v26))
                                                            - 8))(a1, 2262861731, 2262861747);
}

void sub_1D0DA5BB0()
{
  JUMPOUT(0x1D0DA5B7CLL);
}

uint64_t sub_1D0DA5BBC()
{
  return 0;
}

void sub_1D0DA5BFC(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1D0DA5C98@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((906 * (**(_BYTE **)(a1 + 8) == 0)) ^ a2))
                            - ((a2 + 2104145432) ^ 0x7D6AB6C7)))();
}

uint64_t sub_1D0DA5CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  *(_QWORD *)(*(_QWORD *)(a16 + 96) + 504) = v18 + 1;
  *(_DWORD *)(*(_QWORD *)(a16 + 96) + 496) = a18 - 1;
  v21 = 460628867 * ((117828239 - ((v20 - 160) | 0x705EA8F) + ((v20 - 160) | 0xF8FA1570)) ^ 0xB46C970D);
  *(_QWORD *)(v20 - 160) = &STACK[0x7299FD1B0C63B012];
  *(_DWORD *)(v20 - 148) = -1882357464 - v21;
  *(_DWORD *)(v20 - 144) = v21 - 432370878;
  v22 = sub_1D0DB7FC0(v20 - 160);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((16
                                                        * (a18
                                                         + 362385064
                                                         + ((2 * (STACK[0x2E0] & 0x1F)) ^ 0x2E)
                                                         + (STACK[0x2E0] & 0x3F ^ 0x7E6FBDE8u) < 0xFFFFFFC0)) | 0x1A4u))
                                          - 4))(v22);
}

uint64_t sub_1D0DA5ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26)
{
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  unsigned int v30;

  v30 = v26 + ((a26 + 216) ^ 0x81904733);
  if (v30 <= 0x40)
    v30 = 64;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((93 * (a6 - v27 - v28 + v30 > 0xE)) ^ a26)) - 12))();
}

uint64_t sub_1D0DA5F4C(unsigned int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;

  v13 = v8 + v7;
  v14 = v13 + v9 + 3 * (a4 ^ 0x440);
  if (v14 <= 0x40)
    v14 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((310 * (a6 - v13 >= v11 + v10 + (v6 ^ (a6 - 1295)) + v14)) ^ a4))
                            - 12))();
}

uint64_t sub_1D0DA5FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  int v19;
  int v20;
  uint64_t v21;

  return (*(uint64_t (**)(void))(v21
                              + 8
                              * ((742
                                * ((unint64_t)&STACK[0x29C] + ~a18 + (v19 + v18 + 362) >= ((v20 + 440) ^ (v20 + 934) ^ 0x622uLL))) ^ v20)))();
}

uint64_t sub_1D0DA5FF0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int8x16_t *v5;
  uint64_t v6;
  int8x16_t v7;
  int8x16_t v8;

  v7.i64[0] = 0xDEDEDEDEDEDEDEDELL;
  v7.i64[1] = 0xDEDEDEDEDEDEDEDELL;
  v8.i64[0] = 0xEFEFEFEFEFEFEFEFLL;
  v8.i64[1] = 0xEFEFEFEFEFEFEFEFLL;
  *(int8x16_t *)(v3 + a1 + (((v4 ^ 0x32) - 504) ^ (v1 + 265))) = vaddq_s8(vsubq_s8(*v5, vandq_s8(vaddq_s8(*v5, *v5), v7)), v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)((50 * (((v4 ^ 0x1FFFFFCD3) & (v2 + 1)) != 16)) ^ v4 ^ 0x32))
                            - 4))();
}

void sub_1D0DA606C()
{
  JUMPOUT(0x1D0DA6028);
}

uint64_t sub_1D0DA6074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7
                                                              + 8
                                                              * ((114 * (((v4 == v5) ^ (v6 - 8)) & 1)) ^ v6)))(a1, 3386008234, a4);
}

uint64_t sub_1D0DA60B4@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v7 = (v4 + 693072044) & 0xD6B08B5B;
  *((_BYTE *)&STACK[0x29C] + (a3 + v3)) = *(_BYTE *)(a2 + v5 - 1250992187)
                                                      - ((v7 - 59) & (2 * *(_BYTE *)(a2 + v5 - 1250992187)))
                                                      - 17;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((8 * ((a1 + a3 + 1) < 0x40)) | (((a1 + a3 + 1) < 0x40) << 10)) ^ v7)))();
}

void sub_1D0DA6128()
{
  JUMPOUT(0x1D0DA60E0);
}

uint64_t sub_1D0DA6130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int32x4_t a33,int32x4_t a34,int32x4_t a35,int32x4_t a36)
{
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  uint64_t (*v43)(uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128);
  __n128 v44;
  __n128 v45;
  __n128 v46;
  uint64_t v47;
  __n128 v48;
  __n128 v49;
  int v50;
  uint64_t v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  uint8x16_t v58;
  uint16x8_t v59;
  int8x16_t v60;
  uint16x8_t v61;
  int8x16_t v62;
  uint8x16_t v63;
  uint16x8_t v64;
  uint16x8_t v65;
  int8x16_t v66;
  int8x16_t v67;
  int8x16_t v68;
  int8x16_t v69;
  uint8x16_t v70;
  int8x16_t v73;
  int8x16_t v78;
  int32x4_t v79;
  int32x4_t v80;
  int32x4_t v81;
  uint64_t v82;
  char *v83;
  uint8x16_t v85;
  uint16x8_t v86;
  uint16x8_t v87;
  uint8x16_t v88;
  uint8x16_t v93;
  uint16x8_t v94;
  uint16x8_t v95;
  int32x4_t v96;
  int32x4_t v97;
  int32x4_t v98;
  int32x4_t v99;
  _DWORD *v100;
  int v101;
  unsigned int v102;
  int v103;
  unint64_t v104;
  uint64_t v106;
  unint64_t v107;
  int8x16x4_t v108;
  int8x16x4_t v109;

  v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v41 + 8 * v36)
                                                                                                  - 12);
  v44.n128_u64[0] = 0xEFEFEFEFEFEFEFEFLL;
  v44.n128_u64[1] = 0xEFEFEFEFEFEFEFEFLL;
  v45 = (__n128)vdupq_n_s32(0x5ADCB8BFu);
  v46 = (__n128)vdupq_n_s32(0xDADCB8BA);
  a26 = v39 - 16;
  v47 = (v42 - 2);
  v48 = (__n128)vdupq_n_s32(0xB5B97174);
  v49.n128_u64[0] = 0xDEDEDEDEDEDEDEDELL;
  v49.n128_u64[1] = 0xDEDEDEDEDEDEDEDELL;
  v50 = STACK[0x2E4];
  v51 = LODWORD(STACK[0x2E8]);
  HIDWORD(a25) = STACK[0x2E4];
  v52 = STACK[0x2EC];
  v53 = STACK[0x2F0];
  v54 = STACK[0x2EC];
  v55 = STACK[0x2F0];
  LODWORD(v106) = LOBYTE(STACK[0x2FC]) ^ 0xFFFFFF8A;
  v56 = LOBYTE(STACK[0x2FC]) ^ 0x8A;
  if (v56 == 2)
  {
    v109 = vld4q_s8((const char *)&STACK[0x29C]);
    v85 = (uint8x16_t)veorq_s8(v109.val[0], (int8x16_t)v44);
    v86 = vmovl_u8(*(uint8x8_t *)v85.i8);
    v87 = vmovl_high_u8(v85);
    v88 = (uint8x16_t)veorq_s8(v109.val[1], (int8x16_t)v44);
    _Q22 = vmovl_u8(*(uint8x8_t *)v88.i8);
    _Q21 = vmovl_high_u8(v88);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v93 = (uint8x16_t)veorq_s8(v109.val[2], (int8x16_t)v44);
    v94 = vmovl_high_u8(v93);
    v95 = vmovl_u8(*(uint8x8_t *)v93.i8);
    v109.val[0] = veorq_s8(v109.val[3], (int8x16_t)v44);
    v109.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v109.val[0]);
    v109.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v109.val[1]);
    v109.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v109.val[1].i8);
    v109.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v109.val[0].i8);
    v109.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v109.val[0]);
    v109.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v109.val[0].i8);
    v96 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v95.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v86.i8), 0x18uLL)), v109.val[0]);
    v97 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v95, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v86), 0x18uLL)), v109.val[3]);
    v98 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v94.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v87.i8), 0x18uLL)), v109.val[1]);
    v99 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v94, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v87), 0x18uLL)), v109.val[2]);
    v109.val[0] = veorq_s8(vandq_s8((int8x16_t)v96, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)v109.val & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v109.val[3] = veorq_s8(vandq_s8((int8x16_t)v97, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v109.val[3] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v109.val[1] = veorq_s8(vandq_s8((int8x16_t)v98, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v109.val[1] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v109.val[2] = veorq_s8(vandq_s8((int8x16_t)v99, (int8x16_t)v45), (int8x16_t)(*(_OWORD *)&v109.val[2] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    a35 = vaddq_s32(vsubq_s32(v98, vaddq_s32((int32x4_t)v109.val[1], (int32x4_t)v109.val[1])), (int32x4_t)v46);
    a36 = vaddq_s32(vsubq_s32(v99, vaddq_s32((int32x4_t)v109.val[2], (int32x4_t)v109.val[2])), (int32x4_t)v46);
    a33 = vaddq_s32(vsubq_s32(v96, vaddq_s32((int32x4_t)v109.val[0], (int32x4_t)v109.val[0])), (int32x4_t)v46);
    a34 = vaddq_s32(vsubq_s32(v97, vaddq_s32((int32x4_t)v109.val[3], (int32x4_t)v109.val[3])), (int32x4_t)v46);
    v100 = (_DWORD *)&a33 + v37 + 903386470;
    v101 = *(v100 - 8) ^ *(v100 - 3);
    v102 = v101 + v38 - ((2 * v101) & 0xB5B97174);
    v103 = *(v100 - 16) ^ *(v100 - 14);
    HIDWORD(v104) = v103 ^ 0x5ADCB8BA ^ v102;
    LODWORD(v104) = v103 ^ ~v102;
    *v100 = v38 + (v104 >> 31) - ((2 * (v104 >> 31)) & 0xB5B97174);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41
                                                                          + 8 * ((616 * (v39 == 903386407)) ^ 0x46Eu))
                                                              - 4))(2190821864, 147749105, v47);
  }
  else if (v56 == 1)
  {
    v107 = __PAIR64__(v52, v51);
    LODWORD(a23) = STACK[0x2F0];
    v108 = vld4q_s8((const char *)&STACK[0x29C]);
    v57 = 141 * (a5 ^ (a5 - 3));
    v58 = (uint8x16_t)veorq_s8(v108.val[0], (int8x16_t)v44);
    v59 = vmovl_high_u8(v58);
    v60 = (int8x16_t)vmovl_high_u16(v59);
    v61 = vmovl_u8(*(uint8x8_t *)v58.i8);
    v62 = (int8x16_t)vmovl_high_u16(v61);
    v63 = (uint8x16_t)veorq_s8(v108.val[1], (int8x16_t)v44);
    v64 = vmovl_u8(*(uint8x8_t *)v63.i8);
    v65 = vmovl_high_u8(v63);
    v66 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v61.i8));
    v67 = vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v62);
    v68 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v59.i8));
    v69 = vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v60);
    v70 = (uint8x16_t)veorq_s8(v108.val[2], (int8x16_t)v44);
    _Q22 = (int8x16_t)vmovl_high_u8(v70);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v70.i8);
    v73 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v78 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v108.val[0] = veorq_s8(v108.val[3], (int8x16_t)v44);
    v108.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v108.val[0].i8);
    v108.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v108.val[0]);
    v79 = (int32x4_t)vorrq_s8(vorrq_s8(v66, v73), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v108.val[1].i8), 0x18uLL));
    v108.val[1] = vorrq_s8(vorrq_s8(v67, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v108.val[1]), 0x18uLL));
    v80 = (int32x4_t)vorrq_s8(vorrq_s8(v68, v78), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v108.val[0].i8), 0x18uLL));
    v81 = (int32x4_t)vorrq_s8(vorrq_s8(v69, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v108.val[0]), 0x18uLL));
    a35 = vaddq_s32(vsubq_s32(v80, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v80, v80), (int8x16_t)v48)), (int32x4_t)v46);
    a36 = vaddq_s32(vsubq_s32(v81, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v81, v81), (int8x16_t)v48)), (int32x4_t)v46);
    a33 = vaddq_s32(vsubq_s32(v79, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v79, v79), (int8x16_t)v48)), (int32x4_t)v46);
    a34 = vaddq_s32(vsubq_s32((int32x4_t)v108.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v108.val[1], (int32x4_t)v108.val[1]), (int8x16_t)v48)), (int32x4_t)v46);
    v82 = v51;
    v83 = (char *)*(&off_1E8EC5D70 + (v57 ^ 0x137)) - 8;
    HIDWORD(v106) = HIDWORD(a17) - 1663580744;
    return ((uint64_t (*)(uint64_t (**)(int, int, int, int, int, int, int, int, uint64_t, uint64_t), uint64_t, uint64_t, char *, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 + 8 * ((114 * (a26 + 1 != v39)) ^ v57)) - 12))(&off_1E8EC5D70, 2969339992, v47, v83, a26 + 1, -(v83[a26 + v37] - 24), v82, 903386470, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a3,
             a20,
             v106,
             v107,
             a23,
             v43,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32);
  }
  else
  {
    LODWORD(STACK[0x2E4]) = (v50 ^ v42)
                          + (HIDWORD(a25) ^ v42)
                          + v42
                          - (v40 & (2 * ((v50 ^ v42) + (HIDWORD(a25) ^ v42))));
    LODWORD(STACK[0x2E8]) = 2 * (v51 ^ v42) + v42 - (v40 & (4 * (v51 ^ v42)));
    LODWORD(STACK[0x2EC]) = (v54 ^ v42) + (v52 ^ v42) + v42 - (v40 & (2 * ((v54 ^ v42) + (v52 ^ v42))));
    LODWORD(STACK[0x2F0]) = (v55 ^ v42) + (v53 ^ v42) + v42 - (v40 & (2 * ((v55 ^ v42) + (v53 ^ v42))));
    a31 = 0;
    return v43(2190821864, 147749105, v47, v44, v45, v46, v48, v49);
  }
}

uint64_t sub_1D0DA6CD0(int a1, unsigned int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,int a21,unsigned int a22)
{
  uint64_t v22;
  _BOOL4 v23;

  if (a22 < a2 != a19 - 1103243018 < a2)
    v23 = a19 - 1103243018 < a2;
  else
    v23 = a19 - 1103243018 > a22;
  return ((uint64_t (*)(void))(*(_QWORD *)(v22 + 8 * ((!v23 * (11 * (a5 ^ (a5 - 109)) - 1032)) ^ (a1 + a5 + 241))) - 4))();
}

uint64_t sub_1D0DA6D5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * ((210
                                          * (a4 + v5 + 63 >= a4
                                                           + v5
                                                           + 7 * (v6 ^ (a5 - 1567) ^ (a5 - 170))
                                                           - 1638)) ^ v6))
                            - 12))();
}

uint64_t sub_1D0DA6DB8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(void))(*(_QWORD *)(v21
                                        + 8
                                        * ((~a18
                                          + v19
                                          - (unint64_t)(v18 + 939829498 + v20 - a1 - 1459) < (((v20 + 1544203292) | 0x21600449u) ^ 0x7D6AB6DBuLL)) ^ v20))
                            - 12))();
}

uint64_t sub_1D0DA6E28@<X0>(int a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  *(_BYTE *)(v5 + a3) = *(_BYTE *)(v7 + (v3 + a2))
                      - ((2 * *(_BYTE *)(v7 + (v3 + a2))) & 0xDF)
                      - 17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((a3 + 1 == ((v4 + v8) & v10 ^ 0x18)) * v6) ^ (a1 + v4 + 822)))
                            - 12))();
}

uint64_t sub_1D0DA6E80(int a1, int8x16_t a2, double a3, double a4, double a5, int8x16_t a6, uint64_t a7, uint64_t a8, int a9, int a10, int a11, int a12)
{
  int v12;
  int v13;
  int8x16_t *v14;
  uint64_t v15;
  uint64_t v16;

  *v14 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v15 + (v12 + a9)), vandq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v12 + a9)), *(int8x16_t *)(v15 + (v12 + a9))), a6)), a2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * (((a11 & ~(v13 - a10 + 88)) * a12) ^ (a1 + v13 + 1034))) - 12))();
}

uint64_t sub_1D0DA6EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  int v22;
  _BOOL4 v23;

  v21 = ((v19 - 1493785429) & 0x5909593F) + v18 + 47928251;
  v22 = ((a18 - 512409350) < 0x4D6BF433) ^ (v21 < 0x4D6BF433);
  v23 = v21 < a18 - 512409350;
  if (v22)
    v23 = (a18 - 512409350) < 0x4D6BF433;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((203 * !v23) ^ v19)) - 8))();
}

uint64_t sub_1D0DA6F6C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  int v29;

  v19 = (a3 + 1830946380) | 0x1048B042;
  v29 = (a3 + 68) | 0x100;
  v20 = 535753261 * ((2 * ((v18 - 160) & 0x6FA83390) - (v18 - 160) + 274189419) ^ 0x1AA3C244);
  *(_QWORD *)(v18 - 160) = a14;
  *(_DWORD *)(v18 - 152) = HIDWORD(a17) - v20 - 1438871199;
  *(_DWORD *)(v18 - 148) = (a3 + 52) ^ v20;
  sub_1D0D866A4(v18 - 160);
  v27 = *(_QWORD *)(a16 + 96) + 1128;
  v21 = v29 ^ STACK[0x2E0] & 0x3F ^ 0x1B6;
  *((_BYTE *)&STACK[0x29C] + v21) = 111;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((1179 * (v21 > v19 - 2104145556)) ^ a3)) - 12))(2190821864, 147749105, v22, v23, 2104145611, v24, v25, 25934274, a9, a10, a11, a12, v27, a14, a15, a16, a17);
}

uint64_t sub_1D0DA7090(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;
  _BOOL4 v8;

  v8 = v5 != ((v6 - a1 - 206) ^ (a5 - 834)) - 1283;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((2 * v8) | (32 * v8) | v6)) - 8))();
}

uint64_t sub_1D0DA70C4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 | (4 * ((v0 ^ 0x46A ^ (v1 - 224)) < v1 - 1338))))
                            - 8))();
}

uint64_t sub_1D0DA70F8()
{
  unsigned int v0;
  int v1;
  char v2;
  int v3;
  uint64_t v4;

  *(unint64_t *)((char *)&STACK[0x29C] + v0 + 1) = 0xEFEFEFEFEFEFEFEFLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((224 * ((v2 & 0x38) - (unint64_t)(v3 - 961) == -377)) ^ v1))
                            - 12))();
}

uint64_t sub_1D0DA714C(double a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(double *)(v3 + v4) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((224 * (v1 == v4)) ^ v2)) - 12))();
}

uint64_t sub_1D0DA7174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8 + 8 * (((v5 ^ (a5 + 127) ^ (a5 - 1215)) * (v7 != v6)) ^ v5))
                                          - 8))(2190821864);
}

void sub_1D0DA71A8()
{
  JUMPOUT(0x1D0DA6148);
}

uint64_t sub_1D0DA71B8@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  _BOOL4 v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v11 = v5 < a1;
  v12 = ((v9 - 451275605) & 0x1AE5E93F ^ (a3 + 51)) + v4;
  *((_BYTE *)&STACK[0x29C] + (a4 + v7)) = *(_BYTE *)(v8 + v12) - ((2 * *(_BYTE *)(v8 + v12)) & 0xDF) - 17;
  v13 = a2 + v4 + 62;
  v14 = v11 ^ (v13 < a1);
  v15 = v13 < v5;
  if (!v14)
    v11 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((!v11 * v6) ^ v9)) - 8))();
}

uint64_t sub_1D0DA7248@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((a3 - 1388232695) < 0x38) * (47 * (v3 ^ (a2 + 4)) + 421)) ^ (a1 + v3 + 178))))();
}

uint64_t sub_1D0DA7288@<X0>(int a1@<W0>, int a2@<W4>, unsigned int a3@<W8>)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v5 = a3;
  v6 = a3 - 1388232695 + (v3 ^ 0x3F6u) - 841;
  if (v6 <= 0x38)
    v6 = 56;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v6 - v5 + 1388232695 < 8) * ((v3 - a1 - 9) ^ (a2 - 43))) ^ v3)))();
}

uint64_t sub_1D0DA72F0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(unint64_t *)((char *)&STACK[0x29C] + v2 - 1388232695) = 0xEFEFEFEFEFEFEFEFLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v0 - 627) ^ 0x19)) ^ v0))
                            - 8))();
}

uint64_t sub_1D0DA7340(double a1)
{
  int v1;
  double *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *v2 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * v3) ^ v1)) - 8))();
}

uint64_t sub_1D0DA7364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;

  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 ^ (a5 - 175) ^ (a5 + 174)) * (v5 == v6)) ^ v7)))();
}

void sub_1D0DA738C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5;
  unsigned int v6;
  unint64_t v7;
  char v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unint64_t v13;

  v5 = LOBYTE(STACK[0x2FC]) ^ 0x8A;
  if (v5 == 1)
  {
    v8 = a1 + a5 - 124;
    v11 = STACK[0x2E0];
    v12 = STACK[0x2DC];
    LOBYTE(STACK[0x2D4]) = ((8 * LOBYTE(STACK[0x2E0])) ^ 0xB8) - ((2 * ((8 * LOBYTE(STACK[0x2E0])) ^ 0xB8)) & 0xDF) - 17;
    v9 = -34;
    LOBYTE(STACK[0x2D5]) = ((v11 >> 5) ^ 0xD3) - ((((v11 >> 5) ^ 0xFFFFFFD3) << (v8 ^ 0x36)) & 0xDE) - 17;
    LOBYTE(STACK[0x2D6]) = ((v11 >> 13) ^ 0x9F) - ((2 * ((v11 >> 13) ^ 0x9F)) & 0xDF) - 17;
    LOBYTE(STACK[0x2D7]) = ((v11 >> 21) ^ 0x22) - ((2 * ((v11 >> 21) ^ 0x22)) & 0xDF) - 17;
    HIDWORD(v13) = v12 ^ 5;
    LODWORD(v13) = v11 ^ 0x80000000;
    LOBYTE(STACK[0x2D8]) = (v13 >> 29) - ((2 * (v13 >> 29)) & 0xDF) - 17;
    LOBYTE(STACK[0x2D9]) = ((v12 >> 5) ^ 0x52) - ((2 * ((v12 >> 5) ^ 0x52)) & 0xDF) - 17;
    LOBYTE(STACK[0x2DA]) = ((v12 >> 13) ^ 0xC6) - ((2 * ((v12 >> 13) ^ 0xC6)) & 0xDF) - 17;
    v10 = (v12 >> 21) ^ 0x23;
  }
  else
  {
    if (v5 != 2)
      goto LABEL_6;
    v6 = STACK[0x2DC];
    v10 = STACK[0x2E0];
    LOBYTE(STACK[0x2D4]) = ((LODWORD(STACK[0x2DC]) >> 21) ^ 0x23)
                         - ((2 * ((LODWORD(STACK[0x2DC]) >> 21) ^ 0x23)) & 0xDF)
                         - 17;
    LOBYTE(STACK[0x2D5]) = ((v6 >> 13) ^ 0xC6) - ((2 * ((v6 >> 13) ^ 0xC6)) & 0xDF) - 17;
    LOBYTE(STACK[0x2D6]) = ((v6 >> 5) ^ 0x52) - ((2 * ((v6 >> 5) ^ 0x52)) & 0xDF) - 17;
    HIDWORD(v7) = v6 ^ 5;
    LODWORD(v7) = v10 ^ 0x80000000;
    LOBYTE(STACK[0x2D7]) = (v7 >> 29) - ((2 * (v7 >> 29)) & 0xDF) - 17;
    LOBYTE(STACK[0x2D8]) = ((v10 >> 21) ^ 0x22) - ((2 * ((v10 >> 21) ^ 0x22)) & 0xDF) - 17;
    LOBYTE(STACK[0x2D9]) = ((v10 >> 13) ^ 0x9F) - ((2 * ((v10 >> 13) ^ 0x9F)) & 0xDF) - 17;
    LOBYTE(STACK[0x2DA]) = ((v10 >> 5) ^ 0xD3) - ((2 * ((v10 >> 5) ^ 0xD3)) & 0xDF) - 17;
    v8 = 55;
    v9 = -48;
    LOBYTE(v10) = (8 * v10) ^ 0xB8;
  }
  LOBYTE(STACK[0x2DB]) = v10 - (((_BYTE)v10 << ((v8 - 72) & (a5 + 16) ^ 0xCA)) & v9) - 17;
LABEL_6:
  JUMPOUT(0x1D0DA6148);
}

uint64_t sub_1D0DA783C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  _BOOL4 v15;
  _BOOL4 v16;

  v13 = *((_DWORD *)&STACK[0x29C] + ((v11 + v8) >> ((v9 - 98) & 0xDB ^ (a5 - 2))) + 18);
  *(_BYTE *)(a7 + (v11 + v8 + 1)) = (BYTE2(v13) ^ 0x8B) + (~(2 * (BYTE2(v13) ^ 0x8B)) | 0x21) - 16;
  *(_BYTE *)(a7 + (v11 + v8 + 2)) = (BYTE1(v13) ^ 0xB9) - ((2 * (BYTE1(v13) ^ 0xB9)) & 0xDF) - 17;
  *(_BYTE *)(a7 + (v11 + v8)) = (HIBYTE(v13) ^ 0x41) - ((2 * (HIBYTE(v13) ^ 0x41)) & 0xDF) - 17;
  *(_BYTE *)(a7 + (v11 + v8 + 3)) = v13 ^ 0x2D;
  v14 = LODWORD(STACK[0x2F8]) + 1769733041;
  v15 = v14 < v7;
  v16 = v11 + 1737947828 < v14;
  if (v11 + 1737947828 < v7 != v15)
    v16 = v15;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v16 * v10) ^ v9)))();
}

void sub_1D0DA79D8()
{
  JUMPOUT(0x1D0DA79A4);
}

uint64_t sub_1D0DA79E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,char a33)
{
  int v33;
  uint64_t v34;
  int v35;
  _BOOL4 v37;

  v35 = (v33 - 251) | 0x23;
  *(_DWORD *)(&a33 + a31) = 1145630530;
  v37 = *(_DWORD *)(&a33 + a31) != 1145630530 || (((v35 + 1479189333) | 0x254012C3) ^ 0x426DE40E) != 1057444550;
  return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t))(*(_QWORD *)(v34 + 8 * ((v37 * ((v35 - 1277358966) & 0x4C22F7E7 ^ 0x649)) ^ v35)) - 12))(&a33 + a31, 3017608330, 1479189333, 624956099, a5, 1277360103, 1114498062, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           &a33 + a31 + 392,
           a24);
}

uint64_t sub_1D0DA7AB8()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((118 * (((v2 == v1) ^ (v0 - 66)) & 1)) ^ v0))
                            + 2104145607
                            - ((v0 + 222952862) | 0x7020B408)))();
}

uint64_t sub_1D0DA7B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  int v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  _BOOL4 v36;

  v34 = (v31 ^ (a5 - 1032)) - 853;
  v35 = v32 + v31 + 172;
  v36 = a31 + 1681477564 < (a8 - 1023199087);
  if ((a31 + 1681477564) < 0x2EF9EBC9 != a8 - 1023199087 < (v34 + 788130582))
    v36 = a8 - 1023199087 < (v34 + 788130582);
  return ((uint64_t (*)(void))(*(_QWORD *)(v33 + 8 * ((55 * !v36) ^ v35)) - 8))();
}

uint64_t sub_1D0DA7D60()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((31 * (*(_DWORD *)(v5 + 48 * ((v2 ^ (v3 + 1656)) + v1) + 36) == v1)) ^ v0))
                            - 8))();
}

uint64_t sub_1D0DA7DA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;

  v17 = (v14 ^ (a5 - 83)) - a5 + 1398;
  v18 = 628203409 * ((((v16 - 160) | 0x17931FE0) - (v16 - 160) + ((v16 - 160) & 0xE86CE018)) ^ 0x951B13D3);
  v19 = (_QWORD *)(v16 - 160);
  v19[5] = v12;
  v19[6] = a10;
  *(_DWORD *)(v16 - 144) = v14 - v18 + 392;
  *(_DWORD *)(v16 - 140) = a8 - v18 - 469744530;
  v19[3] = a12;
  v19[1] = a9;
  *v19 = a11;
  v20 = ((uint64_t (*)(uint64_t))*(&off_1E8EC5D70 + v14 + 43))(v16 - 160);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((1445 * (*(_DWORD *)(v16 - 128) == v13)) ^ v14))
                                                                                                - (v17 ^ 0x57A)))(v20, 3017608330, 1479189333, 624956099, 2104145611, 1277360103, 1114498062);
}

uint64_t sub_1D0DA7ED8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * ((13
                                                        * (*(_DWORD *)(v1
                                                                     + 48
                                                                     * (v2 + v0 + v3 + ((v3 - 1079922051) & 0x405E48BF))) == 996801557)) ^ v3))
                                          - 8))(v4);
}

uint64_t sub_1D0DA7F38@<X0>(int a1@<W8>)
{
  int v3;

  if ((a1 + 1658058682) <= 0x18 && ((1 << (a1 - 70)) & 0x1094001) != 0)
    __asm { BR              X10 }
  return v3 ^ 0x2523E364u;
}

void sub_1D0DA839C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((2 * (a1 & 0x17733AAC) - a1 - 393427629) ^ 0xC2E4E8A8);
  __asm { BR              X10 }
}

uint64_t sub_1D0DA8490@<X0>(uint64_t a1@<X8>, uint64_t a2, unint64_t *a3, uint64_t a4, int a5, unsigned int a6, int a7)
{
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v10 = 1225351577
      * (((&a3 | 0x3AF363AD) - &a3 + (&a3 & 0xC50C9C50)) ^ 0x1969BBBB);
  a6 = -722945343 - v10;
  a7 = (v8 + 70) ^ v10;
  a5 = v10 ^ 0x3A5692AC;
  a3 = &STACK[0x49E3D721B33288E3];
  a4 = v7;
  v11 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v8 ^ 0x142)) - 4))(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((990
                                                        * (*(_DWORD *)(v7 - 0x4FDE8986601786BLL) != 5 * (v8 ^ 0x192) - 623069543)) ^ v8))
                                          - ((5 * (v8 ^ 0x192u)) ^ 0x225)))(v11);
}

void sub_1D0DA8580(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;

  v3 = *(_QWORD *)(v1 + 8)
     + v2
     - ((2 * (*(_QWORD *)(v1 + 8) + v2) + 0x7F6EB4ED68D375FALL) & 0x5D10AE3609091BFALL)
     + 0x6E3FB191B8EE48FALL;
  *v4 = (HIBYTE(v3) ^ 0xAE) - ((2 * (HIBYTE(v3) ^ 0xAE)) & 0xDF) - 17;
  v4[1] = (BYTE6(v3) ^ 0x88) - ((2 * (BYTE6(v3) ^ 0x88)) & 0xDF) - 17;
  v4[2] = (BYTE5(v3) ^ 0x57) - ((2 * (BYTE5(v3) ^ 0x57)) & 0xDF) - 17;
  v4[3] = (BYTE4(v3) ^ 0x1B) - ((2 * (BYTE4(v3) ^ 0x1B)) & 0xDF) - 17;
  v4[4] = (BYTE3(v3) ^ 4) - ((2 * (BYTE3(v3) ^ 4)) & 0xDF) - 17;
  v4[5] = (BYTE2(v3) ^ 0x84) + (~(2 * (BYTE2(v3) ^ 0x84)) | 0x21) - 16;
  v4[6] = (BYTE1(v3) ^ 0x8D) - ((2 * (BYTE1(v3) ^ 0x8D)) & 0xDF) - 17;
  v4[7] = v3 ^ 0x12;
  *(_DWORD *)v1 = *a1;
}

void sub_1D0DA86F0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  void (*v6)(_QWORD, void (*)());
  char v7;
  _BYTE v8[8];

  v2 = (unint64_t)&v8[qword_1EFC551E8 ^ qword_1EFC551F0];
  v3 = 1209664481 * v2 - 0x2DEB88543200F8ELL;
  v4 = 1209664481 * (v2 ^ 0x2DEB88543200F8ELL);
  v5 = byte_1D0E8EB90[(-31 * (v3 ^ 0x8E ^ v4))];
  v6 = (void (*)(_QWORD, void (*)()))*(&off_1E8EC5D70
                                                + ((-31 * ((v4 - v3) ^ 0x8E)) ^ byte_1D0E93620[byte_1D0E8E990[(-31 * ((v4 - v3) ^ 0x8E))] ^ 0x95])
                                                + 139);
  qword_1EFC551F0 = v3;
  v7 = byte_1D0E93820[v5 ^ 0xFC];
  qword_1EFC551E8 = v4;
  v6(*(&off_1E8EC5D70 + ((-31 * (v3 ^ 0x8E ^ v4)) ^ v7) + 102), sub_1D0DC48D8);
  __asm { BR              X11 }
}

uint64_t sub_1D0DA880C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((23 * (*(_QWORD *)(*(_QWORD *)(v2 + 344) - 4) == 0)) ^ v0))
                            - 8))();
}

uint64_t sub_1D0DA8844@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 - 167)))(v1);
}

void sub_1D0DA8860(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_1D0DA88A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unsigned int v3;

  return (*(uint64_t (**)(void))(v2 + 8 * ((732 * (**(_BYTE **)(a2 + 8) == 0)) ^ v3)))();
}

uint64_t sub_1D0DA88C8()
{
  uint64_t v0;
  int v1;
  unsigned int v2;

  v2 = v1 - ((2 * v1 + 672307598) & 0xA4690EF0) + 1715328063;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((495
                                          * (((2 * v2) & 0x39BFFCFE ^ 0x20290CF0) + (v2 ^ 0x4EEB7907) + 2147411456 != 484369535)) ^ 0xFCu))
                            - 12))();
}

uint64_t sub_1D0DA8968(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v5 + v4 + 2 * (a3 ^ 0x740) + 1663041920 - 1381 < 8) * (a3 ^ 0x5FF)) ^ a3))
                            - 12))();
}

uint64_t sub_1D0DA89C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL4 v10;

  v10 = v9 - a7 + (unint64_t)(a5 ^ 0x70F) - 1784 < 0x20;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(v7 + 8 * (((4 * v10) | (8 * v10)) ^ a5)))(a1, a2, v8, (a5 - 292) | 0x80);
}

uint64_t sub_1D0DA8A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  unsigned int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((((a6 - 302006907) & 0xEDEB4CB1) + 303363138) * (v7 > 0x1F)) ^ a6))
                            - 8))();
}

uint64_t sub_1D0DA8A50(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v14 = v11 + v12 + v13;
  v15 = v8 + v14;
  v16 = *(_OWORD *)(v15 - 31);
  v17 = v9 + v14;
  *(_OWORD *)(v17 - 15) = *(_OWORD *)(v15 - 15);
  *(_OWORD *)(v17 - 31) = v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8 * ((((v10 & 0xFFFFFFE0) != 32) * ((a7 ^ a3) - 1180)) ^ (a7 + 303363591)))
                            - 8))();
}

void sub_1D0DA8AAC()
{
  JUMPOUT(0x1D0DA8A74);
}

uint64_t sub_1D0DA8AB8(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;

  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 1424) = (((v3 - 1522530240) | 0x48AB0000) ^ 0x1B29EC5F) + v2;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 520) = *(_QWORD *)(a2 + 8) + 1;
  return 0;
}

void sub_1D0DA8CC0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) - 3804331 * (((a1 | 0x841A70C4) - (a1 & 0x841A70C4)) ^ 0x7E848392);
  __asm { BR              X9 }
}

uint64_t sub_1D0DA8D70@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((((a1 + 69) ^ (*(_QWORD *)(v1 + 8) == 0)) & 1) == 0) * (a1 - 580)) ^ a1))
                            - 8))();
}

uint64_t sub_1D0DA8DE0()
{
  unsigned int v0;
  int v1;
  unsigned int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((1183
                                          * (*(_BYTE *)((v2 | ((unint64_t)(v2 < v0) << 32)) + v4 - 1239260142) == 0)) ^ v1))
                            - 8))();
}

uint64_t sub_1D0DA8E34@<X0>(uint64_t (*a1)(uint64_t *)@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1225351577 * ((2 * (&a3 & 0x28C77998) - &a3 - 684161440) ^ 0xF4A25E76);
  a3 = v7;
  a4 = v8;
  a5 = (((2 * (v11 - 1239260141)) & 0x7EADE55E) + ((v10 + 1062662173) ^ (v11 - 1239260141)) - 83910667) ^ v12;
  a6 = -730531609 - v12;
  a7 = (v10 - 77) ^ v12;
  v13 = a1(&a3);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((1554 * (*(_DWORD *)(v8 - 0x4FDE8986601786BLL) == -623068998)) ^ v10))
                                          - 8))(v13);
}

uint64_t sub_1D0DA8F10()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8 * (((((v1 - 957664923) & 0x3914CF0E) + 307) * (v2 != 1239260141)) ^ v1))
                            - 8))();
}

uint64_t sub_1D0DA8F64@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  _BOOL4 v7;
  unsigned int v8;
  int v9;
  _BOOL4 v10;

  v7 = v2 < a1;
  *(_BYTE *)(a2 + (v3 - 1678855233)) = *(_BYTE *)(v5 + (v3 - 1678855233))
                                                   + (~(2 * *(_BYTE *)(v5 + (v3 - 1678855233))) | 0x21)
                                                   - 16;
  v8 = ((v6 + 116) ^ 0x56DAB39D) + v3;
  v9 = v7 ^ (v8 < a1);
  v10 = v8 < v2;
  if (!v9)
    v7 = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1081 * v7) ^ v6)) - 8))();
}

void sub_1D0DA8FE0()
{
  _DWORD *v0;

  *v0 = 623108963;
}

void sub_1D0DA90B8(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;

  v2 = *(_DWORD *)(a2 + 4) == *(_DWORD *)(a1 + 24);
  __asm { BR              X9 }
}

uint64_t sub_1D0DA9128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W8>)
{
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                          + 8
                                                                                          * ((42
                                                                                            * (((a5 - 1811329848) ^ 0x7EEFFDB7FE6973F1)
                                                                                             - 0x7EEFFDB7621F372ELL
                                                                                             + ((2
                                                                                               * (a5 - 1811329848)) & 0x1FCD2E7E2) == 2622110915)) ^ 0x45Au))
                                                                              - 4))(a1, a2, a3, a4, 1029560022);
}

uint64_t sub_1D0DA91CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v11 = *(unsigned __int8 *)(v8 + v9 - 0x12489EC50CB72268) - *(unsigned __int8 *)(v6 + v9 - 0x12489EC50CB72268);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * ((((v11 << (((v7 + 18) | 0xC2) ^ (a5 + 1))) & 0xCFF7BB26)
                                                        + (v11 ^ v5) != v5) | v7))
                                          - 8))(4294925278);
}

uint64_t sub_1D0DA9240()
{
  unint64_t v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  _BOOL4 v7;

  v5 = v3 - 0x12489EC4706CE5A4;
  v6 = (v2 < v0) ^ (v5 < v0);
  v7 = v5 < v2;
  if (v6)
    v7 = v2 < v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v1 - 424) ^ (42 * !v7))) - 4))();
}

uint64_t sub_1D0DA92B8@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v1 ^ (57 * (a1 == 1811329857))))
                                          - (((v1 + 286834753) | 0x2C451092u)
                                           - 1029559081)
                                          + 933))(4294925278);
}

uint64_t sub_1D0DA9310()
{
  int v0;
  unsigned __int8 *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1749
                                          * (((((v0 + 1899062273) & 0x8ECE9BFB) - 34017204) & (2 * (*v1 - 42)))
                                           + ((*v1 - 42) ^ 0x7EFC79FB) == 2130475515)) ^ v0))
                            - ((v0 - 929) | 0x151u)
                            + 345))();
}

uint64_t sub_1D0DA9398()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((7
                                          * (((v3 - 105) ^ ((((*(unsigned __int8 *)(v2 + 1) - 134) << (((v3 - 105) | 0x1C) ^ 0x5C)) & v0)
                                                                           + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v1) == v1)) & 1)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0DA93F4()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v0 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v1) == v1)
                                          * (((((v3 ^ 0x2EC) - 856) | 0x108) + 899) ^ 0x121)) ^ v3 ^ 0x2EC))
                            - 4))();
}

uint64_t sub_1D0DA9450()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((474
                                          * ((((*(unsigned __int8 *)(v2 + 3) - 134) << ((v3 + 127) & 0xFD ^ 0x5C)) & v0)
                                           + ((v3 - 1049724131) & 0x3E9183AF ^ (v1 + 91) ^ (*(unsigned __int8 *)(v2 + 3)
                                                                                          - 134)) == v1)) ^ v3))
                            - 12))();
}

uint64_t sub_1D0DA94D4()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1450
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                           + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v1) == v1)) ^ v3))
                            - ((v3 - 593) | 1)
                            + 345))();
}

uint64_t sub_1D0DA9520()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v0 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v1) == v1)
                                          * ((v3 ^ 0x2F0) + 1301)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0DA9568()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1855
                                          * ((((*(unsigned __int8 *)(v2 + 6) - 1) << (v3 + 84)) & (v0 + v3 - 592 - 349))
                                           + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v1) == v1)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0DA95BC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((359
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v1) == ((v3 - 592) ^ (v1 - 341)))) ^ (v3 + 307)))
                            - 12))();
}

uint64_t sub_1D0DA960C()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((726
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                           + (((v3 - 1163) | 0x108) ^ v4 ^ (*(unsigned __int8 *)(v2 + 8) - 4)) == v1)) ^ v3))
                            - 12))();
}

uint64_t sub_1D0DA965C(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 96) + 1428) = 1938431545;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)(((*(_DWORD *)(a2 + 4) == v2) * (((v3 + 634595671) & 0xDA2CD5EB) + 880)) ^ (v3 - 365)))
                            - (((v3 - 1248) | 0x15Du) ^ 0x151)))();
}

uint64_t sub_1D0DA96D4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) + ((v4 - 501099637) & 0x1DDE2BD7 ^ 0xFFFFFF16);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((2009 * ((v2 & (2 * v6)) + (v6 ^ v3) == v3)) ^ v4)) - 12))();
}

uint64_t sub_1D0DA972C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((1208
                                          * (((v0 + 48 * (v2 ^ 0x159) - 192) & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                           + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v1) == v1)) ^ v2))
                            - 12))();
}

uint64_t sub_1D0DA9778()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((993
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                           + ((*(unsigned __int8 *)(v3 + 2) - 72) ^ v1) == ((32 * v2) ^ 0x2B60 ^ (v1 - 192)))) ^ v2))
                            - 12))();
}

uint64_t sub_1D0DA97BC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v5 = *(unsigned __int8 *)(v3 + 3) + (v2 ^ 0xFFFFFE27);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1193 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)) - 12))();
}

uint64_t sub_1D0DA9800()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((49
                                          * ((((*(unsigned __int8 *)(v3 + 4) - 247) << (v2 - 92)) & v0)
                                           + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v1) == v1)) ^ v2))
                            - 12))();
}

uint64_t sub_1D0DA9844()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;

  v5 = ((v2 + 1459435125) & 0xA902C8ED ^ 0xFFFFFF33) + *(unsigned __int8 *)(v3 + 5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1943 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v2)) - 12))();
}

uint64_t sub_1D0DA9898()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v0 & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v1) == v1)
                                          * (((v2 - 917762915) & 0x36B3F2C5) + 1252)) ^ v2))
                            - 12))();
}

uint64_t sub_1D0DA98E4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((1824
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v1) == v1)) ^ v2))
                            - (v4 ^ 0xCC)))();
}

uint64_t sub_1D0DA9924()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned int v6;

  v6 = *(unsigned __int8 *)(v3 + 8) + (v4 ^ 0xFFFFFF3B);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((597 * ((v0 & (2 * v6)) + (v6 ^ v1) == v1)) ^ v2)) - 12))();
}

uint64_t sub_1D0DA9964(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 + 96) + 1428) = 1938431549;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((558 * (*(_DWORD *)(a2 + 4) != v2)) ^ v3))
                            - (((v3 + 832361290) & 0xCE632F7B)
                             - 867)
                            + 180))();
}

uint64_t sub_1D0DA99C4(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;

  v6 = **(unsigned __int8 **)(a2 + 8) + ((v4 + 691) ^ 0xFFFFFCA5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1634 * ((v2 & (2 * v6)) + (v6 ^ v3) == v3)) ^ v4)) - 4))();
}

uint64_t sub_1D0DA9A08()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((v0 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                           + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v1) == v1)
                                          * ((v3 - 1804764489) & 0x6B9287FB ^ 0x82)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0DA9A58()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((393
                                          * ((((*(unsigned __int8 *)(v2 + 2) - 72) << (v3 ^ 0xC1)) & v0)
                                           + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v1) == v1)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0DA9AA0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((788
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                           + ((v3 + 691) ^ (v1 + 141) ^ (*(unsigned __int8 *)(v2 + 3) - 134)) == v1)) | v3))
                            - 4))();
}

uint64_t sub_1D0DA9AE0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((825
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                           + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v1) == v1
                                                                                          + ((v3 - 647016641) & 0x2690B373)
                                                                                          - 883)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0DA9B34()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((620
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                           + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ v1) == v1)) ^ v3))
                            - (v3 ^ 0x3B3u)
                            + 879))();
}

uint64_t sub_1D0DA9B74()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((461
                                          * ((v0 & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v1) == v1)) ^ v4))
                            - v3
                            + 879))();
}

uint64_t sub_1D0DA9BAC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((472
                                          * (((v0 + v3 + 691 - 883) & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                           + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v1) == v1)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0DA9BF0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;

  v5 = (((v3 - 128) | 0x333) ^ 0xFFFFFC86) + *(unsigned __int8 *)(v2 + 8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((664 * ((v0 & (2 * v5)) + (v5 ^ v1) == v1)) ^ v3)) - 4))();
}

void sub_1D0DA9C38(int a1@<W8>)
{
  int v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  _BOOL4 v9;

  v5 = v1 + 176;
  *(_DWORD *)(*(_QWORD *)(v3 + 96) + 1428) = 1938431561;
  v6 = a1 + 3;
  v7 = v1 - 101;
  v8 = 460628867 * ((((v4 - 120) ^ 0x352460CE | 0xC105866F) - (((v4 - 120) ^ 0x352460CE) & 0xC105866F)) ^ 0xB8B764DC);
  *(_QWORD *)(v4 - 120) = v4 + 0x7299FD1B0C63AC9ALL;
  *(_DWORD *)(v4 - 108) = v1 + 176 - v8 - 1882358523;
  *(_DWORD *)(v4 - 104) = v8 + v6 + 1726752497 + ((v1 + 176) ^ 0x7E1);
  sub_1D0DB7FC0(v4 - 120);
  v9 = *(_DWORD *)v3
     - 258085811
     + (*(_DWORD *)(v4 - 152) & (v7 ^ 0x331) ^ 0xFE4DCF7F)
     + ((2 * *(_DWORD *)(v4 - 152)) & 0x10) > 0xFFFFFFBF;
  __asm { BR              X10 }
}

uint64_t sub_1D0DA9E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  _BOOL4 v18;

  v16 = v13 + ((523 * (v15 ^ 0x30D)) ^ 0x6364A810);
  v17 = ((a13 + 1989023412) < 0x87A25ADF) ^ (v16 < 0x87A25ADF);
  v18 = v16 < a13 + 1989023412;
  if (v17)
    v18 = (a13 + 1989023412) < 0x87A25ADF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (!v18 | v15)) - 8))();
}

uint64_t sub_1D0DA9EC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v15 = 535753261 * ((v14 - 120) ^ 0xAF40E2F);
  *(_DWORD *)(v14 - 112) = a13 - v15 + (((a4 + 487428063) | 0x205040D6) ^ 0x3842D6B9);
  *(_DWORD *)(v14 - 108) = (a4 - 1456) ^ v15;
  *(_QWORD *)(v14 - 120) = a10;
  sub_1D0D866A4(v14 - 120);
  v16 = *(_DWORD *)(v14 - 152) & 0x3F;
  *(_BYTE *)(v14 - 220 + (v16 ^ 0x37)) = 111;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13
                                                      + 8 * ((((v16 ^ 0x37) < 0x38) * (a4 - 1567)) | a4))
                                          - 12))(3048829300);
}

uint64_t sub_1D0DA9FA4@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((120 * (a2 + (v3 ^ (a1 - 795) ^ 0xBE16D082) < 0x38)) ^ (v4 + v3 + 504)))
                            - 4))();
}

uint64_t sub_1D0DA9FE4@<X0>(int a1@<W6>, unsigned int a2@<W8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2;
  v5 = a2 - 1105799697;
  if ((unint64_t)(v5 + 1) > 0x38)
    v6 = v5 + 1;
  else
    v6 = 56;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v2 - 1107305847) & 0x7F5DF6DF ^ (a1 - 153))
                                          * ((unint64_t)(v6 - v4 + 1105799697) < 8)) ^ v2))
                            + 1029560010
                            - ((v2 + 2113788521) & 0xBF5FF6FF)))();
}

uint64_t sub_1D0DAA074@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_QWORD *)(v6 - 220 + v3 - 1105799697) = 0xEFEFEFEFEFEFEFEFLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1621 * ((a2 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ (v5 + v2 + 205)))
                            - 2 * (v2 ^ (a1 + 73))
                            + 906))();
}

void sub_1D0DAA0D4()
{
  JUMPOUT(0x1D0DAA09CLL);
}

uint64_t sub_1D0DAA0DC@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BOOL4 v11;
  unsigned int v12;
  int v13;
  _BOOL4 v14;

  v11 = v5 < a2;
  *(_BYTE *)(v10 - 220 + (a4 + v6)) = *(_BYTE *)(v9 + (v4 + a1))
                                                  - ((*(unsigned __int8 *)(v9 + (v4 + a1)) << (v8 - 13)) & 0xDE)
                                                  - 17;
  v12 = a3 + v4 + 1570;
  v13 = v11 ^ (v12 < a2);
  v14 = v12 < v5;
  if (!v13)
    v11 = v14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (!v11 | v8)) - 8))();
}

uint64_t sub_1D0DAA154()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 - 282) ^ (58 * (v0 != 63))))
                            - (((v1 - 282) ^ 0x546u)
                             + 685)
                            + 746))();
}

uint64_t sub_1D0DAA188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)((((((a7 + v8 - 750) ^ ((v7 ^ 8u) < 8)) & 1) == 0)
                                     * (v10 + ((v8 + 2103432425) & 0xBFFDFEFE) - 385)) ^ v8)))();
}

uint64_t sub_1D0DAA1D8()
{
  char v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)((v2 + 340) + (unint64_t)v1 + v4 - 220 - 749) = 0xEFEFEFEFEFEFEFEFLL;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((122 * ((v0 & 0x38) == 8)) ^ (v2 + 665))) - 4))();
}

uint64_t sub_1D0DAA224(double a1)
{
  int v1;
  double *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;

  *v2 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * v3) ^ (v6 + v1 + 665))) - 4))();
}

uint64_t sub_1D0DAA254()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 685) ^ (v4 + 153)) + v2 - v4 - 340) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_1D0DAA284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t (*a18)(__n128, __n128, __n128, __n128, __n128), uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int32x4_t a23,int32x4_t a24,int32x4_t a25,int32x4_t a26)
{
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(__n128, __n128, __n128, __n128, __n128);
  const char *v35;
  __n128 v36;
  __n128 v37;
  __n128 v38;
  __n128 v39;
  __n128 v40;
  uint64_t v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  uint64_t v45;
  int v46;
  uint8x16_t v47;
  uint16x8_t v48;
  int8x16_t v49;
  uint16x8_t v50;
  int8x16_t v51;
  uint8x16_t v52;
  uint16x8_t v53;
  uint16x8_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int8x16_t v57;
  int8x16_t v58;
  uint8x16_t v59;
  int8x16_t v62;
  int8x16_t v67;
  int32x4_t v68;
  int32x4_t v69;
  int32x4_t v70;
  uint8x16_t v72;
  uint16x8_t v73;
  uint16x8_t v74;
  uint8x16_t v75;
  uint8x16_t v80;
  uint16x8_t v81;
  uint16x8_t v82;
  int32x4_t v83;
  int32x4_t v84;
  int32x4_t v85;
  int32x4_t v86;
  _DWORD *v87;
  int v88;
  int v89;
  int v90;
  unint64_t v91;
  int8x16x4_t v92;
  int8x16x4_t v93;

  v34 = *(uint64_t (**)(__n128, __n128, __n128, __n128, __n128))(v27 + 8 * v26);
  LODWORD(a16) = ((((v26 ^ 0x2F8) + 83984217) | 0x385C54C4) ^ 0x12FEA0A1) + HIDWORD(a12);
  v35 = (const char *)(v33 - 220);
  v36 = (__n128)vdupq_n_s32(0x5ADCB8BFu);
  v37.n128_u64[0] = 0xEFEFEFEFEFEFEFEFLL;
  v37.n128_u64[1] = 0xEFEFEFEFEFEFEFEFLL;
  v38 = (__n128)vdupq_n_s32(0xDADCB8BA);
  a21 = v30 - 16;
  LODWORD(a20) = v28 - 181;
  HIDWORD(a20) = (a7 + 614103065) & 0x1E07B1BF;
  v39 = (__n128)vdupq_n_s32(0xB5B97174);
  v40.n128_u64[0] = 0xDEDEDEDEDEDEDEDELL;
  v40.n128_u64[1] = 0xDEDEDEDEDEDEDEDELL;
  v41 = *(unsigned int *)(v33 - 148);
  v42 = *(_DWORD *)(v33 - 144);
  HIDWORD(a19) = *(_DWORD *)(v33 - 148);
  v43 = *(_DWORD *)(v33 - 140);
  v44 = *(_DWORD *)(v33 - 136);
  v45 = v44;
  v46 = *(_BYTE *)(v33 - 124) ^ 0x8A;
  HIDWORD(a15) = *(unsigned __int8 *)(v33 - 124) ^ 0xFFFFFF8A;
  if (v46 == 2)
  {
    HIDWORD(a16) = v42;
    a17 = __PAIR64__(v44, v43);
    a18 = v34;
    v93 = vld4q_s8(v35);
    v72 = (uint8x16_t)veorq_s8(v93.val[0], (int8x16_t)v37);
    v73 = vmovl_u8(*(uint8x8_t *)v72.i8);
    v74 = vmovl_high_u8(v72);
    v75 = (uint8x16_t)veorq_s8(v93.val[1], (int8x16_t)v37);
    _Q22 = vmovl_u8(*(uint8x8_t *)v75.i8);
    _Q21 = vmovl_high_u8(v75);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    v80 = (uint8x16_t)veorq_s8(v93.val[2], (int8x16_t)v37);
    v81 = vmovl_high_u8(v80);
    v82 = vmovl_u8(*(uint8x8_t *)v80.i8);
    v93.val[0] = veorq_s8(v93.val[3], (int8x16_t)v37);
    v93.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v93.val[0]);
    v93.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v93.val[1]);
    v93.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v93.val[1].i8);
    v93.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v93.val[0].i8);
    v93.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v93.val[0]);
    v93.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v93.val[0].i8);
    v83 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v82.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v73.i8), 0x18uLL)), v93.val[0]);
    v84 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v82, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v73), 0x18uLL)), v93.val[3]);
    v85 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v81.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v74.i8), 0x18uLL)), v93.val[1]);
    v86 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v81, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v74), 0x18uLL)), v93.val[2]);
    v93.val[0] = veorq_s8(vandq_s8((int8x16_t)v83, (int8x16_t)v36), (int8x16_t)(*(_OWORD *)v93.val & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v93.val[3] = veorq_s8(vandq_s8((int8x16_t)v84, (int8x16_t)v36), (int8x16_t)(*(_OWORD *)&v93.val[3] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v93.val[1] = veorq_s8(vandq_s8((int8x16_t)v85, (int8x16_t)v36), (int8x16_t)(*(_OWORD *)&v93.val[1] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    v93.val[2] = veorq_s8(vandq_s8((int8x16_t)v86, (int8x16_t)v36), (int8x16_t)(*(_OWORD *)&v93.val[2] & __PAIR128__(0xFFFFFF05FFFFFF05, 0xFFFFFF05FFFFFF05)));
    a25 = vaddq_s32(vsubq_s32(v85, vaddq_s32((int32x4_t)v93.val[1], (int32x4_t)v93.val[1])), (int32x4_t)v38);
    a26 = vaddq_s32(vsubq_s32(v86, vaddq_s32((int32x4_t)v93.val[2], (int32x4_t)v93.val[2])), (int32x4_t)v38);
    a23 = vaddq_s32(vsubq_s32(v83, vaddq_s32((int32x4_t)v93.val[0], (int32x4_t)v93.val[0])), (int32x4_t)v38);
    a24 = vaddq_s32(vsubq_s32(v84, vaddq_s32((int32x4_t)v93.val[3], (int32x4_t)v93.val[3])), (int32x4_t)v38);
    v87 = (_DWORD *)&a23 + v32 + 1400450085;
    v88 = *(v87 - 8) ^ *(v87 - 3);
    v89 = v88 + v31 - (a1 & (2 * v88));
    v90 = *(v87 - 16) ^ *((_DWORD *)&a23 + v32 + ((a7 + 614103065) & 0x1E07B1BF ^ 0x1C5u) + 1400449709);
    HIDWORD(v91) = v90 ^ v89 ^ 0x5ADCB8BA;
    LODWORD(v91) = v90 ^ ~v89;
    *v87 = v31 + (v91 >> 31) - (a1 & (2 * (v91 >> 31)));
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 + 8 * ((1044 * (v30 == 1400450022)) ^ HIDWORD(a20))) - 8))(a1, a21, a3, 45, v45, v41, HIDWORD(v91), 4168754406, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  }
  else if (v46 == 1)
  {
    HIDWORD(a16) = v42;
    a17 = __PAIR64__(v44, v43);
    a18 = v34;
    v92 = vld4q_s8(v35);
    v47 = (uint8x16_t)veorq_s8(v92.val[0], (int8x16_t)v37);
    v48 = vmovl_high_u8(v47);
    v49 = (int8x16_t)vmovl_high_u16(v48);
    v50 = vmovl_u8(*(uint8x8_t *)v47.i8);
    v51 = (int8x16_t)vmovl_high_u16(v50);
    v52 = (uint8x16_t)veorq_s8(v92.val[1], (int8x16_t)v37);
    v53 = vmovl_u8(*(uint8x8_t *)v52.i8);
    v54 = vmovl_high_u8(v52);
    v55 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v53.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v50.i8));
    v56 = vorrq_s8((int8x16_t)vshll_high_n_u16(v53, 8uLL), v51);
    v57 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v54.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v48.i8));
    v58 = vorrq_s8((int8x16_t)vshll_high_n_u16(v54, 8uLL), v49);
    v59 = (uint8x16_t)veorq_s8(v92.val[2], (int8x16_t)v37);
    _Q22 = (int8x16_t)vmovl_high_u8(v59);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v59.i8);
    v62 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v67 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v92.val[0] = veorq_s8(v92.val[3], (int8x16_t)v37);
    v92.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v92.val[0].i8);
    v92.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v92.val[0]);
    v68 = (int32x4_t)vorrq_s8(vorrq_s8(v55, v62), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v92.val[1].i8), 0x18uLL));
    v92.val[1] = vorrq_s8(vorrq_s8(v56, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v92.val[1]), 0x18uLL));
    v69 = (int32x4_t)vorrq_s8(vorrq_s8(v57, v67), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v92.val[0].i8), 0x18uLL));
    v70 = (int32x4_t)vorrq_s8(vorrq_s8(v58, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v92.val[0]), 0x18uLL));
    a25 = vaddq_s32(vsubq_s32(v69, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v69, v69), (int8x16_t)v39)), (int32x4_t)v38);
    a26 = vaddq_s32(vsubq_s32(v70, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v70, v70), (int8x16_t)v39)), (int32x4_t)v38);
    a23 = vaddq_s32(vsubq_s32(v68, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v68, v68), (int8x16_t)v39)), (int32x4_t)v38);
    a24 = vaddq_s32(vsubq_s32((int32x4_t)v92.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v92.val[1], (int32x4_t)v92.val[1]), (int8x16_t)v39)), (int32x4_t)v38);
    return (*(uint64_t (**)(uint64_t, __n128))(v27 + 8 * ((1801 * (a21 + 1 != v30)) ^ a7 ^ (a7 - 523))))(1029560022, v36);
  }
  else
  {
    *(_DWORD *)(v33 - 148) = (v41 ^ v28)
                           + (HIDWORD(a19) ^ v28)
                           + v28
                           - (v29 & (2 * ((v41 ^ v28) + (HIDWORD(a19) ^ v28))));
    *(_DWORD *)(v33 - 144) = 2 * (v42 ^ v28) + v28 - (v29 & (4 * (v42 ^ v28)));
    *(_DWORD *)(v33 - 140) = 2 * (v43 ^ v28) + v28 - (v29 & (4 * (v43 ^ v28)));
    *(_DWORD *)(v33 - 136) = 2 * (v44 ^ v28) + v28 - (v29 & (4 * (v44 ^ v28)));
    return v34(v36, v37, v38, v39, v40);
  }
}

uint64_t sub_1D0DAB178(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16)
{
  uint64_t v16;
  int v17;
  _BOOL4 v18;

  if (a16 < a3 != a14 + 477761076 < a3)
    v18 = a14 + 477761076 < a3;
  else
    v18 = a14 + 477761076 > a16;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((593 * !v18) | (v17 + a7 + 652)))
                                          - (((a7 ^ (a7 + 123)) + 921) ^ 0x524)))(3686945618);
}

uint64_t sub_1D0DAB208(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((((a7 + ((v8 - 982) | 0x400) - 1354) ^ (a7 - 26))
                                          * (v7 + a1 + 63 < (v7 + a1))) ^ v8))
                            - 8))();
}

uint64_t sub_1D0DAB250@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((794 * (((a1 ^ ((unint64_t)(a6 + v6 - v8) < 0x10)) & 1) == 0)) ^ v7))
                            - 8))();
}

uint64_t sub_1D0DAB28C@<X0>(int a1@<W0>, int a2@<W4>, char a3@<W6>, int a4@<W8>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>)
{
  int v6;
  int8x16_t *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *v7 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v10 + (v6 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v10 + (v6 + a1)), *(int8x16_t *)(v10 + (v6 + a1))), a6)), a5);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((a4 ^ (a3 + 20)) + 1) & 1) * a2) ^ (v9 + a4 - 256))))();
}

uint64_t sub_1D0DAB2F0@<X0>(int a1@<W0>, char a2@<W1>, int a3@<W3>, char a4@<W7>, int a5@<W8>)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;

  *(_BYTE *)(v7 + v6) = *(_BYTE *)(v10 + (v5 + a1))
                      - ((*(_BYTE *)(v10 + (v5 + a1)) << (((a5 + a4) & v11) - 59)) & a2)
                      - 17;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 != 63) * a3) ^ (v9 + a5 - 256))))();
}

uint64_t sub_1D0DAB344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;

  if (a16 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23
                                                                          + 8
                                                                          * ((95
                                                                            * ((((a7 + v24) ^ (*(_DWORD *)(v25 - 128) == 1894502684)) & 1) == 0)) ^ (a7 + v24)))
                                                              - 12))(a1, a2, a9);
  if (a16 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23
                                                                          + 8
                                                                          * ((1349
                                                                            * (*(_DWORD *)(v25 - 128) != ((a7 - 499568344) & 0xE068F99B ^ 0x70EBD086))) ^ (a7 + v24)))
                                                              - 12))(a1, a2, a9);
  v27 = (v24 + 1029559918) | 0x489u;
  v28 = ((unint64_t)&a23 ^ 0xFAEEE5BDE43BAC7BLL)
      + 0x7DD57EFF1FFD77FDLL
      + ((v27 ^ 0xF5DDCB7BC8775D40) & (2 * (_QWORD)&a23));
  *(_BYTE *)(v25 - 129) = ((a7 + ((v24 + 110) | 0x89) + v28 + 46 - 55) ^ 0xBA) * (v28 - 103);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v23 + 8 * (int)v27) - 8))(0);
}

void sub_1D0DAB884()
{
  JUMPOUT(0x1D0DAB848);
}

uint64_t sub_1D0DAB88C@<X0>(int a1@<W6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (((((a2 - 319) | 2) + 164) * (v2 == v3)) ^ a2))
                            + 1029560010
                            - (a2 ^ (a1 + 183))))();
}

uint64_t sub_1D0DAB8D4@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  *(_BYTE *)(v9 - 220 + (((v5 - a2 + 30) ^ 0xFFFFFFE1) & (a3 + v3))) = *(_BYTE *)(v4 + v8 - 608021678)
                                                                                     - ((2
                                                                                       * *(_BYTE *)(v4 + v8 - 608021678)) & 0xDF)
                                                                                     - 17;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((934 * ((a1 + a3 + 1) < 0x40)) ^ (v7 + v5 - 1)))
                            - 12))();
}

void sub_1D0DAB950()
{
  JUMPOUT(0x1D0DAA5B0);
}

uint64_t sub_1D0DAB97C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;

  v1 = 1734042137 * ((-2 - ((a1 | 0xC7BA4821) + (~(_DWORD)a1 | 0x3845B7DE))) ^ 0x648B7493);
  v2 = *(_DWORD *)(a1 + 24) + v1;
  v3 = *(_DWORD *)a1 + v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x5005140540A45D4ALL);
  v6 = v4 - 33836109;
  v5 = v4 - 33836109 < 0;
  v7 = 33836109 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E8EC5D70 + v2 - 45)
                              + ((49 * ((v3 - 1409224802) >= 4 * (unint64_t)v8)) ^ v2))
                            - 12))();
}

uint64_t sub_1D0DABA44(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (v3 | (1181 * (v1 != 1409224802))))
                                                   - ((v3 + 425226792) & 0xE6A78DF7)
                                                   + 278))(a1, 2049605998);
}

uint64_t sub_1D0DABA90()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1657 * (((3 * (v1 ^ 0x174)) ^ 0x122) == 32)) ^ v1 ^ 0x157)) - 12))();
}

uint64_t sub_1D0DABB10@<X0>(uint64_t a1@<X0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  uint64_t v5;
  int v6;
  int v7;
  char v8;

  *(_BYTE *)(*(_QWORD *)(a1 + 8) + (a4 + a5)) = ((a2 - 141) ^ (v7 + 115) ^ a3) >> v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (a2 | (32 * (a4 - 1 != v6)))) - 12))();
}

uint64_t sub_1D0DABB54()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1657 * (v1 + 8 == ((3 * (v2 ^ 0x23)) ^ 0x122))) ^ v2)) - 12))();
}

uint64_t sub_1D0DABB90()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v5 = v2 + 676509753 > ((v3 + 141) ^ 0x23AC89E2) || v2 + 676509753 < v1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1709 * v5) ^ v3)) - 12))();
}

uint64_t sub_1D0DABBE0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  int v4;
  int v5;

  return sub_1D0DABB10(a1, (v5 - 1552699230) & 0x5C8C4FEA, *(_DWORD *)(*v3 + 4 * (v4 - 2069483688)), v2, a2);
}

uint64_t sub_1D0DABC24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 4) = a2;
  return result;
}

void sub_1D0DABC2C()
{
  uint64_t v0;
  int v1;
  BOOL v2;
  int v3;

  v0 = MEMORY[0x1E0C80A78]();
  if (*(_QWORD *)(v0 + 8))
    v2 = *(_QWORD *)(v0 + 24) == 0x1A99DB821DFE8BA2;
  else
    v2 = 1;
  v3 = v2;
  v1 = *(_DWORD *)v0 + 3804331 * (((v0 | 0xC6A0E61B) - (v0 | 0x395F19E4) + 962533860) ^ 0x3C3E154D);
  __asm { BR              X9 }
}

uint64_t sub_1D0DABD54@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  int v7;

  v4 = a1 | 0x80;
  *(_BYTE *)(v3 - 184) = 94 - 51 * ((2 * ((v3 + 56) & 0xF8) - (v3 + 56) + 5) ^ 0xD2);
  *(_DWORD *)(v3 - 200) = (a1 | 0x80)
                        - 1224239923 * ((2 * ((v3 - 200) & 0x95EA2F8) - (v3 - 200) - 157197051) ^ 0x412A0D2)
                        + 521;
  STACK[0x258] = (unint64_t)&STACK[0x6310B6DD8E16F7FB];
  *(_QWORD *)(v3 - 176) = &STACK[0x6310B6DD8E16F7FB];
  STACK[0x260] = (unint64_t)&STACK[0x57BFF69C8C42E73B];
  *(_QWORD *)(v3 - 192) = &STACK[0x57BFF69C8C42E73B];
  v5 = *(uint64_t (**)(uint64_t))(v1 + 8 * ((a1 | 0x80) - 430));
  STACK[0x250] = (unint64_t)v5;
  v6 = v5(v3 - 200);
  v7 = *(_DWORD *)(v3 - 196);
  LODWORD(STACK[0x540]) = v7;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (((v7 == -623068998) * ((((v4 + 146) | 0x120) + 536) ^ 0x506)) ^ v4))
                                          - 8))(v6);
}

#error "1D0DAC5F8: call analysis failed (funcsize=342)"

uint64_t sub_1D0DAC5FC()
{
  unint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  unint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  STACK[0x280] = v0;
  STACK[0x458] = 0;
  v5 = 460628867 * ((v4 - 200) ^ 0x4C96827D);
  *(_QWORD *)(v4 - 200) = STACK[0x270];
  *(_DWORD *)(v4 - 168) = v5 ^ 0x8BC470C0;
  *(_DWORD *)(v4 - 192) = (v1 - 881) ^ v5;
  v6 = STACK[0x268];
  *(_QWORD *)(v4 - 184) = 0x17726CFE1D53D640;
  *(_QWORD *)(v4 - 176) = v6;
  v7 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (int)(v1 & 0xFC8CA099)) - 8);
  STACK[0x290] = (unint64_t)v7;
  v8 = v7(v4 - 200);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((*(_DWORD *)(v4 - 164) == -623068998) * (((v1 + 139) ^ 0xA8) - 986)) ^ v1)))(v8);
}

uint64_t sub_1D0DAC6B4()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x27C]) = v0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((4
                                           * ((((v1 - 1048) ^ ((LODWORD(STACK[0x4AC]) - 1811331897) < 0xFFFFF7FF)) & 1) == 0)) & 0xDF | (32 * (((v1 - 24) ^ ~((LODWORD(STACK[0x4AC]) - 1811331897) < 0xFFFFF7FF)) & 1))) ^ v1))
                            - (((v1 - 1226) | 0x472u) ^ 0x572)))();
}

uint64_t sub_1D0DAC714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;

  v6 = (v3 ^ 0xD897EB) + v4 - ((2 * v4 + 672307600) & 0xD99E8B92);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                          + 8
                                                                                          * ((1799
                                                                                            * (((2 * v6) & 0xBFFADFBE ^ 0x999A8B92)
                                                                                             + (v6 ^ 0xB3322A16)
                                                                                             + 789246838 != 252207957)) ^ (v3 - 960)))
                                                                              - 12))(a1, a2, a3, 623108963, 252207957);
}

uint64_t sub_1D0DAC888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 + 8 * ((493 * (v8 + v7 + (((((v9 ^ 0x196) - 1180) | 0x2A1) + 649) ^ 0x2002955Bu) > 7)) ^ v9 ^ 0x196)) - 8))(a1, a2, a3, a4, a5, 4042759338, a7, 1540);
}

uint64_t sub_1D0DAC8EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (1710 * ((unint64_t)(v1 - a1) > 0x1F)))) - 12))();
}

uint64_t sub_1D0DAC920()
{
  unsigned int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v0 < (v1 ^ 0x1C5u) - 1045) * (v2 ^ 0x698)) ^ v1)) - 4))();
}

uint64_t sub_1D0DAC954@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;

  v7 = v4 + 537038880 + v3;
  v8 = v1 + v7;
  v9 = *(_OWORD *)(v8 - 31);
  v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * (v5 ^ 0x2CE)) ^ (v5 - 934))))();
}

void sub_1D0DAC9AC()
{
  JUMPOUT(0x1D0DAC96CLL);
}

uint64_t sub_1D0DAC9B8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v0 != v1) * (((v2 ^ 0x4D) + 67) ^ 0x508)) ^ v2 ^ 0x4D)) - 8))();
}

uint64_t sub_1D0DAC9E8()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((518 * (v1 ^ 0x534)) ^ (143 * ((v0 & 0x18) == 0))))
                            - ((((518 * (v1 ^ 0x534)) ^ 0x227u) + 325) ^ 0x57ELL)))();
}

uint64_t sub_1D0DACA30@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v9 = v5 + 789246838 + v4 - v6 + (((v7 - 565) | 0xD9) ^ (a1 + 457));
  *(_QWORD *)(a2 - 7 + v9) = *(_QWORD *)(v2 - 7 + v9);
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((126 * (v6 - (v3 & 0xFFFFFFF8) == -8)) ^ v7)) - 12))();
}

void sub_1D0DACA9C()
{
  JUMPOUT(0x1D0DACA60);
}

uint64_t sub_1D0DACAA8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v1 ^ ((8 * (v0 != v2)) | (32 * (v0 != v2)))))
                            - ((v1 + 673) ^ 0x576)))();
}

uint64_t sub_1D0DACAD4@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a4 + (v5 + a2)) = *(_BYTE *)(v4 + (v5 + a2));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v5 - 1 != a1) * a3) ^ (v6 - 673))) - 12))();
}

uint64_t sub_1D0DACB04()
{
  int v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v2 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((245 * (STACK[0x458] != 0)) ^ (v0 - 522))) - 8);
  STACK[0x2C8] = (unint64_t)*(&off_1E8EC5D70 + (int)(v0 & 0xAC1D129E));
  return v2();
}

uint64_t sub_1D0DACB58()
{
  uint64_t (*v0)(void);
  int v1;
  int v2;
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v0();
  LODWORD(STACK[0x508]) = v2;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((199 * ((v3 ^ (v1 - 1)) & 1)) ^ (v1 - 566))))(v5);
}

uint64_t sub_1D0DACBB8()
{
  int v0;
  int v1;
  unsigned __int8 v2;
  uint64_t v3;

  LODWORD(STACK[0x508]) = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((199 * ((v2 ^ (v0 - 1)) & 1)) ^ (v0 - 566))))();
}

uint64_t sub_1D0DACBEC()
{
  int v0;
  char v1;
  uint64_t v2;

  LODWORD(STACK[0x454]) = 2;
  STACK[0x4F8] = 0;
  LODWORD(STACK[0x5E4]) = 0;
  LODWORD(STACK[0x5A0]) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((((v1 & 2) != (v0 ^ 0x498) - 308) * (v0 - 1450)) ^ v0)) - 12))();
}

uint64_t sub_1D0DACC3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  int v62;
  uint64_t v63;
  char *v64;
  unint64_t v65;
  uint64_t (*v66)(__n128);
  unint64_t v68;
  unsigned int v69;
  unint64_t v70;

  *(_DWORD *)(STACK[0x3C0] + 360) = 354595051;
  v59 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, _QWORD, uint64_t, unint64_t *, unint64_t *))(v56 + 8 * ((v50 - 50) ^ 0x533)))(v54, 2, &STACK[0x454], STACK[0x4A0], (v52 - 1811329848), v53, &STACK[0x4F8], &STACK[0x5E4]);
  v61 = ((2 * v59) & 0xAFB2EFE6) + (v59 ^ 0x57D977F3);
  if (v61 == 1742305270)
  {
    LODWORD(STACK[0x508]) = 623108994;
    v68 = STACK[0x430];
  }
  else
  {
    if (v61 == 1473869811)
    {
      v62 = (STACK[0x430] - 1402) | 0x134;
      STACK[0x3B0] = STACK[0x4F8];
      LODWORD(STACK[0x388]) = STACK[0x5E4];
      STACK[0x2A8] = v51 + 2304;
      v63 = (v62 - 1368757) & 0x14E3D6;
      LODWORD(STACK[0x514]) = 1378710658;
      v64 = (char *)&STACK[0x690] + STACK[0x428] - 0x44636EEC35E58902;
      v65 = (v63 ^ 0x1266) + STACK[0x428];
      STACK[0x288] = v65;
      STACK[0x5D0] = v65;
      *(_QWORD *)v64 = 0x6370646600;
      v64[8] = 1;
      STACK[0x200] = (unint64_t)v64;
      STACK[0x428] = STACK[0x588];
      STACK[0x3B8] = (unint64_t)&v64[((16 * ((_BYTE)v64 - 80) + 16) & 0x20) + 1728];
      LODWORD(STACK[0x3E8]) = 1733567112;
      STACK[0x3D0] = (unint64_t)(v64 + 9);
      v66 = (uint64_t (*)(__n128))(*(_QWORD *)(v57
                                                       + 8
                                                       * (int)((((((_DWORD)v63 - 1204899936) & 0x47D14F3D ^ 0x114) == 32)
                                                              * (((v63 - 270) | 0x432) - 1191)) ^ v63))
                                           - 8);
      STACK[0x3C8] = *(_QWORD *)(v56 + 8 * (int)(v63 ^ 0x26F));
      STACK[0x408] = *(_QWORD *)(v56 + 8 * (int)(v63 ^ 0x218));
      STACK[0x400] = *(_QWORD *)(v56 + 8 * (int)(v63 ^ 0x265));
      return v66((__n128)0);
    }
    v69 = 1224239923 * ((((2 * v55) | 0x81022F18) - v55 - 1082201996) ^ 0xB232EA5B);
    v70 = STACK[0x430];
    *(_DWORD *)(v58 - 184) = v69 + STACK[0x430] - 83;
    *(_QWORD *)(v58 - 192) = a50;
    *(_DWORD *)(v58 - 200) = v61 - v69 - ((2 * v61 + 1347227674) & 0xB5B97174) - 2096938809;
    v59 = sub_1D0DA37B0((_DWORD *)(v58 - 200));
    LODWORD(v68) = v70;
  }
  return ((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57
                                                                                          + 8
                                                                                          * ((499 * (STACK[0x4F8] != 0)) ^ ((int)v68 - 249)))
                                                                              - (((_DWORD)v68 + 329407019) & 0xEC5DA57B ^ 0x525)))(v59, STACK[0x4F8], v60, 623108963);
}

uint64_t sub_1D0DB0FB4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  v3 = (a2 - 129) | 0x121;
  v4 = ((uint64_t (*)(_QWORD, uint64_t, _QWORD))STACK[0x2D8])(*(unsigned int *)STACK[0x2D0], a1, LODWORD(STACK[0x5E4]));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2
                                                      + 8
                                                      * (((LODWORD(STACK[0x508]) == ((v3 + 89) ^ 0xDADCBDC0))
                                                        * ((v3 ^ 0x194) - 1182)) ^ v3))
                                          - 12))(v4);
}

uint64_t sub_1D0DB1028()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((LODWORD(STACK[0x508]) == ((v0 + 89) ^ 0xDADCBDC0)) * ((v0 ^ 0x194) - 1182)) ^ v0))
                            - 12))();
}

uint64_t sub_1D0DB1068()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  *(_DWORD *)(v1 + 52) += (v0 + 99) ^ 0x519;
  STACK[0x428] = v2 - 2432;
  STACK[0x5D0] = v2 - 2432;
  LODWORD(STACK[0x540]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((4 * (STACK[0x618] != 0)) | (8 * (STACK[0x618] != 0))) ^ v0))
                            - 4))();
}

uint64_t sub_1D0DB10B8()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 & 0xFFFFFFFE) == 43 * (v0 ^ 0x51A) + 354594964) * (v0 ^ 0x59C)) ^ v0))
                            - 12))();
}

uint64_t sub_1D0DB110C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  uint64_t v10;
  int v11;

  v6 = v0 - 1119;
  v7 = (v0 + 993047302) & 0xC4CF4CFD;
  v8 = 1734042137 * ((~(v2 | 0x3D7724DD) + (v2 & 0x3D7724DD)) ^ 0x9E46186F);
  *(_DWORD *)(v5 - 200) = v0 - 1119 - v8 + 523;
  *(_QWORD *)(v5 - 168) = STACK[0x238];
  *(_DWORD *)(v5 - 160) = v8 + LODWORD(STACK[0x22C]);
  *(_DWORD *)(v5 - 156) = v1 - v8 + 291404865;
  v9 = STACK[0x2B8];
  *(_QWORD *)(v5 - 192) = STACK[0x230];
  *(_QWORD *)(v5 - 184) = v9;
  v10 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * (v0 - 1164)) - 4))(v5 - 200);
  v11 = *(_DWORD *)(v5 - 176);
  LODWORD(STACK[0x540]) = v11;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4 + 8 * ((1332 * (v11 == -623068998)) ^ v6)) - (v7 ^ 0x4BD)))(v10);
}

uint64_t sub_1D0DB11F8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  LODWORD(STACK[0x2F4]) = STACK[0x568];
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v1 & 0xFFFFFFFE) == 43 * (((v2 - 177) | v0) ^ 0x51A) + 354594964)
                                          * (((v2 - 177) | v0) ^ 0x59C)) ^ ((v2 - 177) | v0)))
                            - 12))();
}

uint64_t sub_1D0DB1264@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  int v10;

  v8 = 3804331 * ((v5 - 2008142484 - 2 * (v5 & 0x884E2D6C)) ^ 0x72D0DE3A);
  *(_DWORD *)(v7 - 176) = v8 + LODWORD(STACK[0x568]) - 24994279;
  STACK[0x368] = v1;
  *(_QWORD *)(v7 - 192) = a1;
  *(_QWORD *)(v7 - 184) = v1;
  *(_QWORD *)(v7 - 168) = v2 + 0x5800F43E2BD23B60;
  *(_QWORD *)(v7 - 160) = v2 + 0xAEAB1E0EC553912;
  *(_DWORD *)(v7 - 200) = (v3 + 841864372) ^ v8;
  *(_DWORD *)(v7 - 196) = v4 - v8 + 368400091;
  v9 = sub_1D0DC541C(v7 - 200);
  v10 = *(_DWORD *)(v7 - 152);
  LODWORD(STACK[0x540]) = v10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * ((793 * (v10 == -623068998)) ^ v4))
                                          - (v4 ^ 0x52Cu)
                                          + 1398))(v9);
}

uint64_t sub_1D0DB134C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;

  v5 = STACK[0x3C0];
  v6 = *(_DWORD *)(STACK[0x3C0] + 52);
  v7 = LODWORD(STACK[0x2F4]) + 1477700456;
  v8 = 1224239923 * ((((2 * v1) | 0x6B130126) - v1 + 1249279853) ^ 0x473A7D44);
  *(_DWORD *)(v4 - 176) = LODWORD(STACK[0x29C]) - v8 + LODWORD(STACK[0x2A0]);
  *(_QWORD *)(v4 - 192) = STACK[0x368];
  *(_DWORD *)(v4 - 184) = v7 ^ v8;
  *(_DWORD *)(v4 - 180) = v8 - 880862012 + v6;
  *(_QWORD *)(v4 - 168) = &STACK[0x680];
  *(_QWORD *)(v4 - 160) = v5 + 0xAEAB1E0EC553932;
  *(_DWORD *)(v4 - 196) = v8 + v0 - 34;
  v9 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 - 37)) - 12))(v4 - 200);
  v10 = *(_DWORD *)(v4 - 200);
  LODWORD(STACK[0x540]) = v10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8 * ((1549 * (v10 == ((v0 - 76) ^ 0xAC) - 623069164)) ^ v0))
                                          - (((v0 - 76) | 0x570u) ^ 0x57ELL)))(v9);
}

uint64_t sub_1D0DB1464()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (114 * ((v0 - 354595051) < 0xFFFFFFFE))))
                            - (v1 + 1236)
                            + 1390))();
}

uint64_t sub_1D0DB1498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,int a48)
{
  int v48;
  int v49;
  int v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int v61;
  unint64_t v62;
  int v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v67;
  unint64_t v68;
  int v69;
  unint64_t v70;
  int v71;
  int v72;
  int v73;
  int v74;
  uint64_t v75;
  int v76;

  v57 = STACK[0x3C0];
  v58 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, unint64_t *, unint64_t, _QWORD, unint64_t *))(v54 + 8 * (v50 - 166)))(*(unsigned int *)STACK[0x3C0], (v48 + v49 + 2), LODWORD(STACK[0x228]), (((v50 - 126) | 0x552) ^ 0xABA2BE40) + *(_DWORD *)(STACK[0x3C0] + 52), &STACK[0x680], STACK[0x368], (LODWORD(STACK[0x2F4]) - 629839622), &STACK[0x670]);
  v60 = v57;
  v61 = (v58 ^ 0x7DB0E7D9) - 16827400 + ((2 * v58) & 0xFB61CFB2);
  if (v61 == -1934613548)
    return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v55
                                                                 + 8
                                                                 * (int)((1010
                                                                        * ((LODWORD(STACK[0x21C]) ^ (v52 - 123221511 + (STACK[0x430] ^ 0x52C) < 3)) & 1)) ^ (STACK[0x430] + 129)))
                                                     - 12))(v58, v59);
  if (v61 == 2091918289)
  {
    v67 = v54;
    v68 = STACK[0x430];
    v69 = 38 * (STACK[0x430] ^ 0x569);
    LODWORD(STACK[0x428]) = STACK[0x430] - 971;
    v70 = v60;
    ((void (*)(_QWORD, unint64_t, _QWORD))STACK[0x2D8])(*(unsigned int *)STACK[0x2D0], STACK[0x368], (LODWORD(STACK[0x2F4]) - 629841024 + v69 + 680));
    v71 = *(_DWORD *)(v70 + 52);
    v72 = LODWORD(STACK[0x4DC]) ^ 0x37ECD773;
    v73 = (2 * LODWORD(STACK[0x4DC])) & 0x6FD9AEE6;
    v74 = 535753261 * (((v56 - 200) & 0xC02AAE1F | ~((v56 - 200) | 0xC02AAE1F)) ^ 0x35215FCF);
    *(_QWORD *)(v56 - 160) = STACK[0x530];
    *(_DWORD *)(v56 - 172) = (v68 - 1323) ^ v74;
    *(_DWORD *)(v56 - 168) = v72 - v74 + v73 - 4718594;
    *(_DWORD *)(v56 - 152) = ((a48 & 0x7FFFFFFF ^ 0xE344178) + 2145124288 + (a47 & 0x78EFDED8 ^ 0x60875C08)) ^ v74;
    *(_DWORD *)(v56 - 176) = v74 - 403264922 + v71;
    *(_QWORD *)(v56 - 184) = &STACK[0x670];
    *(_QWORD *)(v56 - 200) = v51;
    v75 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v67 + 8 * (int)(v68 ^ 0x5F9)) - 8))(v56 - 200);
    v76 = *(_DWORD *)(v56 - 192);
    LODWORD(STACK[0x540]) = v76;
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55
                                                        + 8 * ((1416 * (v76 == -623068998)) ^ LODWORD(STACK[0x428])))
                                            - 4))(v75);
  }
  else
  {
    v62 = STACK[0x430];
    v63 = (STACK[0x430] - 1400) | 0x54;
    v64 = 1224239923 * ((v53 + 1014389000 - 2 * (v53 & 0x3C765908)) ^ 0xCEC5A4DF);
    LODWORD(STACK[0x2C4]) = v61;
    *(_DWORD *)(v56 - 200) = v61 - v64 - ((v63 ^ 0xB5B97122) & (2 * v61 + 111130718)) + 1579980009;
    *(_DWORD *)(v56 - 184) = v64 + v62 - 83;
    *(_QWORD *)(v56 - 192) = STACK[0x220];
    v65 = sub_1D0DA37B0((_DWORD *)(v56 - 200));
    return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55
                                                        + 8 * ((820 * (LODWORD(STACK[0x540]) == -623068998)) ^ v63))
                                            - (((v63 ^ 0x560u) + 68) ^ 0x57ELL)))(v65);
  }
}

uint64_t sub_1D0DB1684()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((LODWORD(STACK[0x214]) - 1563) & v0) == 354595050)
                                          * ((LODWORD(STACK[0x214]) ^ 9) - 1548)) ^ LODWORD(STACK[0x214])))
                            - 4))();
}

uint64_t sub_1D0DB16C0@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;

  v7 = STACK[0x618];
  v8 = LODWORD(STACK[0x568]) - (((a1 ^ 0xB4EAD7E4) + 2 * LODWORD(STACK[0x568])) & 0xAA430EB6);
  v9 = 1225351577 * ((323586429 - (v4 | 0x1349897D) + (v4 | 0xECB67682)) ^ 0xCF2CAE94);
  *(_DWORD *)(v6 - 164) = (a1 + 1695025900) ^ v9;
  *(_DWORD *)(v6 - 160) = (v1 - ((2 * v1 + 1438293550) & 0x52E2378C) - 1806800163) ^ v9;
  *(_DWORD *)(v6 - 192) = (v8 - 1349062571) ^ v9;
  *(_QWORD *)(v6 - 200) = STACK[0x368];
  v10 = a1 ^ 0x36A;
  *(_QWORD *)(v6 - 184) = v2;
  *(_QWORD *)(v6 - 176) = v3;
  *(_QWORD *)(v6 - 152) = v7;
  v11 = sub_1D0DC477C(v6 - 200);
  v12 = *(_DWORD *)(v6 - 168);
  LODWORD(STACK[0x540]) = v12;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * ((946 * (v12 == 260 * (v10 ^ 0x578) - 623069518)) ^ (v10 - 1316)))
                                          - 4))(v11);
}

void sub_1D0DB17F4()
{
  int v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 200) = (v0 + 2138962840) ^ (1374699841 * ((((2 * v1) | 0x887F67C8) - v1 + 1002458140) ^ 0xA9CBABED));
  sub_1D0DC511C((_DWORD *)(v2 - 200));
  *(_DWORD *)(v2 - 200) = v0 - 1224239923 * ((v1 - 860400577 - 2 * (v1 & 0xCCB7543F)) ^ 0x3E04A9E8) + 433;
  *(_BYTE *)(v2 - 184) = 95 - 51 * ((v1 + 63 - 2 * (v1 & 0x3F)) ^ 0xE8);
  *(_QWORD *)(v2 - 192) = STACK[0x260];
  *(_QWORD *)(v2 - 176) = STACK[0x258];
  ((void (*)(uint64_t))STACK[0x250])(v2 - 200);
  LODWORD(STACK[0x540]) = *(_DWORD *)(v2 - 196);
  LODWORD(STACK[0x2C4]) = -1934613548;
  JUMPOUT(0x1D0DB18F0);
}

uint64_t sub_1D0DB19C4(unint64_t a1)
{
  int v1;
  unint64_t v2;
  uint64_t v3;

  STACK[0x5D0] = STACK[0x388] - 176;
  STACK[0x570] = a1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 > a1) ^ v1 ^ 1) & 1 ^ v1)))();
}

uint64_t sub_1D0DB1A4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = (v11 + a5);
  *(_BYTE *)(a1 + v15) = (v10 + 49 + *(_BYTE *)(v13 + v15) - 88) ^ *(_BYTE *)(v7 + (v15 & 0xF)) ^ *(_BYTE *)(v9 + (v15 & 0xF)) ^ *(_BYTE *)((v15 & 0xF) + v8 + 2) ^ ((v15 & 0xF) * a6);
  return (*(uint64_t (**)(void))(v14 + 8 * (((v11 - 1 == v12) * a7) ^ v10)))();
}

uint64_t sub_1D0DB1AA8(uint64_t a1, char a2, int a3, int a4, uint64_t a5, char a6, uint64_t a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = (v12 ^ a4 ^ (a8 + 1041)) + v11;
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(v10 + (v15 & 0xF)) ^ *(_BYTE *)(v8 + (v15 & 0xF)) ^ *(_BYTE *)((v15 & 0xF) + v9 + 2) ^ ((v15 & 0xF) * a6) ^ ((*(_BYTE *)(v13 + v15) ^ a2) + ((2 * *(_BYTE *)(v13 + v15)) & 0x72) - 115);
  return (*(uint64_t (**)(void))(v14 + 8 * ((((v11 + a8) > 0x14F) * a3) ^ v12)))();
}

uint64_t sub_1D0DB1B1C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int8x16_t a32)
{
  int8x16_t *v32;
  uint64_t v33;
  int8x16_t *v34;

  v34 = (int8x16_t *)((char *)&STACK[0x690] + STACK[0x388] - 0x44636EEC35E59282);
  v34[-12] = veorq_s8(*v32, a32);
  STACK[0x620] += 32;
  STACK[0x630] = a1;
  STACK[0x628] = a1;
  return ((uint64_t (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 + 8 * (((((a7 - 637) | 0x244) ^ 0x227) * (&v34[-12] == (int8x16_t *)a1)) ^ a7))
                                                                                                - 8))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D0DB1BA4@<X0>(uint64_t a1@<X0>, char a2@<W6>, unint64_t a3@<X7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint64_t v56;
  char v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  char *v62;
  char v63;
  uint64_t v64;
  unsigned __int8 *v65;
  int v66;
  uint64_t v67;
  unsigned __int8 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unint64_t v85;
  unint64_t v86;
  unsigned __int8 *v87;
  unint64_t v88;
  uint64_t v89;
  int v90;
  int v91;
  unsigned __int8 v92;
  int v93;
  int v94;
  int v95;
  unint64_t v96;
  unint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  int v102;
  int v103;
  char v104;
  unsigned __int8 v105;
  int v106;
  unsigned int v107;
  int v108;
  int v109;
  int v110;
  int v111;
  int v112;
  BOOL v113;
  char v114;
  char v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  int v124;
  unint64_t v125;
  char *v126;
  int v127;
  int v128;
  int v129;
  unsigned int v130;
  char *v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned __int8 v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  unsigned int v174;
  unint64_t v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  unsigned int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  unsigned int v200;
  unsigned int v201;
  unsigned int v202;
  unsigned int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  unint64_t v207;
  int v208;
  int v209;
  unsigned int v210;
  int v211;
  int v212;
  unsigned int v213;
  unsigned int v214;
  int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned __int8 v225;
  int v226;
  int v227;
  int v228;
  int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  int v240;
  unsigned int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  int v250;
  int v251;
  unsigned int v252;
  int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  unsigned int v262;
  int v263;
  int v264;
  int v265;
  unsigned int v266;
  int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  int v272;
  int v273;
  unsigned int v274;
  int v275;
  int v276;
  unsigned int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unint64_t v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  int v288;
  uint64_t v289;
  int v290;
  char *v291;
  unsigned int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  char *v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  int v302;
  unsigned int v303;
  int v304;
  char *v305;
  unsigned __int8 v306;
  unsigned int v307;
  int v308;
  unsigned int v309;
  int v310;
  unsigned int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  unsigned int v318;
  char *v319;
  unsigned int v320;
  uint64_t v321;
  unsigned int v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  unsigned int v326;
  unsigned int v327;
  unsigned int v328;
  unsigned int v329;
  char *v330;
  int v331;
  unint64_t v332;
  unint64_t v333;
  int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  int v342;
  unint64_t v343;
  unsigned int v344;
  int v345;
  int v346;
  _BYTE *v348;
  unint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  uint64_t v359;
  uint64_t v360;
  int v361;
  int v362;

  v61 = a4 - 57;
  v62 = (char *)&STACK[0x1980] + v56;
  v63 = *(_BYTE *)a1;
  *(_QWORD *)(v62 + 17) = *(_QWORD *)(a1 + 1);
  *(_DWORD *)(v62 + 25) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v62 + 29) = *(_WORD *)(a1 + 13);
  v62[31] = *(_BYTE *)(a1 + 15);
  v64 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)v62 = *(_QWORD *)a1;
  *((_QWORD *)v62 + 1) = v64;
  v62[16] = v63;
  v65 = (unsigned __int8 *)&STACK[0x1980] + v56 + 16;
  v66 = v61 + 386;
  v67 = *(_QWORD *)(v59 + 8 * (v61 ^ 0x33F)) - 8;
  v68 = (*((_BYTE *)&STACK[0x1980] + v56 + 19) ^ 0xB8)
      + ((v61 - 126) ^ 0xAE)
      + *(_BYTE *)(v67 + (*((unsigned __int8 *)&STACK[0x1980] + v56 + 19) ^ 0x54));
  v69 = *(_QWORD *)(v59 + 8 * (v61 ^ 0x346)) - 4;
  v70 = *(_QWORD *)(v59 + 8 * (v61 - 953));
  LOBYTE(v64) = *(_BYTE *)(v70 + (*((unsigned __int8 *)&STACK[0x1980] + v56 + 30) ^ 0x86));
  v71 = *((unsigned __int8 *)&STACK[0x1980] + v56 + 24);
  v72 = v71 ^ 0x34;
  v73 = *(unsigned __int8 *)(v69 + (v71 ^ 0x65));
  LODWORD(v71) = (v64 ^ (16 * v64) ^ v57) << 8;
  LOBYTE(v64) = *(_BYTE *)(v70 + (v65[10] ^ 0xCBLL));
  v74 = *(_QWORD *)(v59 + 8 * (v61 & 0x3A19D052));
  v75 = *(unsigned __int8 *)(v74 + (v65[1] ^ 0x1ALL));
  v76 = (v75 >> 1) ^ (((((v75 ^ 0x53) + (v75 & 0xD5 ^ 0xAE) + 1) ^ v75 & 0xDF) & 0xF0) >> 4) ^ 0x4B;
  v77 = v68 | ((v75 ^ 0x96 ^ (v76 - ((2 * v76) & 0xC) + 6)) << 16);
  v78 = (((v73 + v72 - 89) ^ 0xF5) << 24) | (((v64 ^ (16 * v64)) ^ 0xC5) << 8) | ((v65[11] ^ 0x3E) + *(_BYTE *)(v67 + (v65[11] ^ 0xD2)) - 55);
  LOBYTE(v75) = *(_BYTE *)(v70 + (v65[6] ^ 0x2ELL));
  v79 = *(_BYTE *)(v74 + (v65[13] ^ 0x5BLL)) ^ 0x86;
  LODWORD(v64) = ((v65[7] ^ 0x90) + *(_BYTE *)(v67 + (v65[7] ^ 0x7CLL)) - 55) | ((((v65[4] ^ 0x13)
                                                                                                  + *(unsigned __int8 *)(v69 + (v65[4] ^ a3))
                                                                                                  - 89) ^ 0xE6) << 24) | ((v75 ^ (16 * v75) ^ v58) << 8);
  v80 = *(unsigned __int8 *)(v74 + (v65[13] ^ 0x5BLL)) ^ 0xFFFFFF86 ^ (v79 >> 4) ^ (v79 >> 1);
  LODWORD(v71) = v71 & 0xFF00FFFF | ((v80 - ((2 * v80) & 0x2E) + 23) << 16);
  v81 = v77 | (((*(unsigned __int8 *)(v69 + (*v65 ^ 0x81)) + (*v65 ^ 0xD0) - 89) ^ 0x3C) << 24);
  LOBYTE(v77) = *(_BYTE *)(v74 + (v65[5] ^ 0xEDLL));
  v82 = ((v77 ^ 0x86) >> 4) ^ ((v77 ^ 0x86) >> 1);
  v350 = v74;
  v352 = v69;
  v353 = v67;
  v83 = v78 & 0xFF00FFFF | ((*(_BYTE *)(v74 + (v65[9] ^ 0x38)) ^ ((*(_BYTE *)(v74 + (v65[9] ^ 0x38)) ^ 0x86) >> 4) ^ ((*(_BYTE *)(v74 + (v65[9] ^ 0x38)) ^ 0x86) >> 1) ^ a2) << 16);
  v351 = v70;
  v84 = v81 & 0xFFFF00FF | (((*(_BYTE *)(v70 + (v65[2] ^ 0x22)) ^ (16
                                                                                    * *(_BYTE *)(v70 + (v65[2] ^ 0x22)))) ^ 0xF7) << 8);
  LODWORD(STACK[0x3D8]) = (v71 & 0xFFFFFF00 | ((((v65[12] ^ 0x13) + *(unsigned __int8 *)(v69 + (v65[12] ^ a3)) - 89) ^ 0xE6) << 24) | (*(_BYTE *)(v67 + (v65[15] ^ 0x38)) + (v65[15] ^ 0xD4) - 55)) ^ 0xE114E08C;
  LODWORD(STACK[0x3B0]) = v84 ^ 0x76D4CE76;
  v85 = STACK[0x630];
  LODWORD(STACK[0x2A4]) = (v64 & 0xFF00FFFF | ((v77 ^ 0x6C ^ (v82
                                                                                              - ((2 * v82) & 0x8A)
                                                                                              - 59)) << 16)) ^ 0x659DB9D2;
  LODWORD(STACK[0x3B8]) = v83 ^ 0xB4367CBA;
  v348 = (_BYTE *)STACK[0x628];
  v349 = v85;
  LODWORD(STACK[0x408]) = v66;
  HIDWORD(v359) = v66 - 386;
  v86 = (v66 - 386) ^ 0x3EBu;
  STACK[0x3E0] = v86;
  v87 = (unsigned __int8 *)v85;
  LODWORD(v85) = *(unsigned __int8 *)(v70 + (*(unsigned __int8 *)(v85 + v86) ^ v58));
  v88 = (v66 - 1388) & 0xCAEC4C21 ^ 0xCAEC4C25;
  STACK[0x2E0] = v88;
  v89 = v87[v88];
  v90 = (((16 * v85) ^ 0xFFFFFFA0) - ((32 * v85) & 0xFFFFFFBF) - 38) ^ v85;
  LOBYTE(v85) = v89 ^ 0xB7;
  LOBYTE(v83) = *(_BYTE *)(v69 + (v89 ^ 0xE6));
  STACK[0x400] = 15;
  v91 = v87[15];
  v92 = (v83 + v85 - 89) ^ 0xE5;
  if ((v91 & 0x20) != 0)
    v93 = -32;
  else
    v93 = 32;
  v94 = *(unsigned __int8 *)(v67 + ((v93 + v91) ^ 0xDDLL)) + ((v93 + v91) ^ 0x31);
  STACK[0x3D0] = 6;
  v95 = *(unsigned __int8 *)(v70 + (v87[6] ^ 0x51));
  STACK[0x378] = 12;
  STACK[0x290] = 0;
  HIDWORD(v96) = v95 ^ (((16 * v95) ^ 0xFFFFFFA0) + (~(32 * v95) | 0x5F) - 37) ^ 0x3F;
  LODWORD(v96) = BYTE4(v96) & 0xF8;
  v97 = ((v96 >> 3) | ((unint64_t)v92 << 13)) ^ 0x58F620A6;
  v98 = (v97 >> 21) | ((_DWORD)v97 << 11);
  v361 = *(unsigned __int8 *)(v69 + (v87[12] ^ 0xF7) - 2 * ((v87[12] ^ 0xF7) & 0xAEu) + 174) - (v87[12] ^ 0xF7);
  v99 = *v87;
  STACK[0x380] = 3;
  v100 = v87[3];
  v101 = *(unsigned __int8 *)(v69 + (v99 ^ 0xD8)) + (v99 ^ 0x76) - 2 * (v99 ^ 0x76);
  v102 = *(unsigned __int8 *)(v67 + (v100 ^ 0x57));
  STACK[0x388] = 8;
  v103 = (v100 ^ 0xFFFFFFBB) + v102;
  LOBYTE(v99) = (v87[8] ^ 0xA7) + *(_BYTE *)(v69 + (v87[8] ^ 0xF6));
  v104 = v99 - ((2 * v99 + 78) & 0x4E);
  STACK[0x2E8] = 7;
  v105 = (v87[7] ^ 0xE9) + *(_BYTE *)(v67 + (v87[7] ^ 5)) - 55;
  STACK[0x288] = 13;
  v106 = *(unsigned __int8 *)(v74 + (v87[13] ^ 0x12));
  v107 = v106 ^ ((((v106 ^ 0x86) >> 3) & 4 ^ v106 & 0xA4 | ((v106 ^ 0x86) >> 3) & 0xFB ^ (v106 ^ 0xFFFFFF86) & 0x5A) >> 1);
  LOBYTE(v106) = *(_BYTE *)(v74 + (v87[5] ^ 0x9CLL));
  v108 = ((v106 ^ 0x86) >> 4) ^ ((v106 ^ 0x86) >> 1);
  v109 = v105 | ((v106 ^ 0xE6 ^ (v108 - ((2 * v108) & 0x8A) - 59)) << 16);
  STACK[0x248] = 9;
  v110 = *(unsigned __int8 *)(v74 + (v87[9] ^ 0x76));
  v111 = (v110 & 8 ^ 0x3D) + 2 * (v110 & 8);
  v112 = (v110 ^ 0x86) >> 3;
  v113 = ((v111 + 3) & v112) == 0;
  v114 = v111 - 37;
  v115 = 85 - v111;
  if (v113)
    v115 = v114;
  STACK[0x240] = 10;
  v116 = v110 ^ ((((v112 + v115 - 24) ^ (v110 ^ 0x86) & 0xF7) & 0xFE) >> 1);
  STACK[0x200] = 1;
  v117 = *(unsigned __int8 *)(v74 + (v87[1] ^ 0xCFLL));
  v118 = v117 & 0xFFFFFFBF ^ 0xFFFFFF85 ^ ((v117 | 0xFFFFFFBF) + 68);
  v119 = v117 & 0xBF ^ 0x85 ^ ((v117 | 0xBF) + 68);
  v120 = v118 ^ (v119 >> 4) ^ (v119 >> 1);
  LOBYTE(v118) = *(_BYTE *)(v70 + (v87[10] ^ 0xFBLL));
  v121 = *(_QWORD *)(v59 + 8 * (LODWORD(STACK[0x408]) - 1187)) - 4;
  LODWORD(v359) = v107;
  v122 = *(_DWORD *)(v121 + 4 * (v107 ^ 0xB1));
  v123 = *(_QWORD *)(v59 + 8 * (LODWORD(STACK[0x408]) - 1323)) - 8;
  HIDWORD(v357) = (v118 ^ (16 * v118)) ^ 0xC3;
  v124 = *(_DWORD *)(v123 + 4 * ((v118 ^ (16 * v118)) ^ 0x4Cu));
  HIDWORD(v125) = v124 ^ 0xE162;
  LODWORD(v125) = v124 ^ 0x25000000;
  LODWORD(v357) = v101 - 90;
  v126 = (char *)*(&off_1E8EC5D70 + (LODWORD(STACK[0x408]) ^ 0x543)) - 12;
  v127 = (v125 >> 16) ^ *(_DWORD *)&v126[4 * ((v101 - 90) ^ 0xF9)] ^ (16 * (v122 ^ 0xF2B45BB8)
                                                                                     - 1048391063
                                                                                     - ((32 * (v122 ^ 0xF2B45BB8)) & 0x8305A4C0));
  v128 = v122 ^ (v127 + 219700594 - ((2 * v127) & 0x1A30BAE4));
  LODWORD(v360) = v90;
  v129 = *(_DWORD *)(v123 + 4 * (v90 ^ 0x71u));
  HIDWORD(v125) = v129 ^ 0xE162;
  LODWORD(v125) = v129 ^ 0x25000000;
  HIDWORD(v356) = v109 ^ v98;
  v130 = v109 ^ v98 ^ 0xDD03A24B;
  v131 = (char *)*(&off_1E8EC5D70 + (LODWORD(STACK[0x408]) ^ 0x5BB)) - 4;
  v132 = *(_DWORD *)&v131[4 * (v130 ^ 0x33)] ^ v128;
  v358 = __PAIR64__(v116, v120);
  v133 = *(_DWORD *)(v121 + 4 * (v120 ^ 0xBFu)) ^ 0xF2B45BB8;
  v134 = (v125 >> 16) ^ (16 * v133 - 1048391063 - ((32 * v133) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * HIBYTE(v130)];
  HIDWORD(v355) = (*(_BYTE *)(v353 + (v87[11] ^ 0x12)) + (v87[11] ^ 0xFE) - 55);
  v135 = *(_DWORD *)&v131[4 * (HIDWORD(v355) ^ 0xB9)] ^ v133 ^ (v134 + 219700594 - ((2 * v134) & 0x1A30BAE4));
  v136 = *(_DWORD *)(v121 + 4 * BYTE2(v130)) ^ 0xF2B45BB8;
  v137 = *(unsigned __int8 *)(v70 + (v87[2] ^ 0x26)) ^ 0x62;
  v138 = v137 ^ (16 * v137);
  v139 = *(_DWORD *)(v123 + 4 * (v138 ^ 0xFBu));
  HIDWORD(v125) = v139 ^ 0xE162;
  LODWORD(v125) = v139 ^ 0x25000000;
  HIDWORD(v354) = (v104 - 50);
  LODWORD(v355) = v138;
  v140 = (v125 >> 16) ^ *(_DWORD *)&v126[4 * (HIDWORD(v354) ^ 0x40)] ^ (16 * v136
                                                                      - 1048391063
                                                                      - ((32 * v136) & 0x8305A4C0));
  LODWORD(v356) = v94 - 55;
  v141 = *(_DWORD *)&v131[4 * ((v94 - 55) ^ 0xEB)] ^ v136 ^ (v140
                                                                            + 219700594
                                                                            - ((2 * v140) & 0x1A30BAE4));
  v142 = *(_DWORD *)(v121 + 4 * (v116 ^ 0xFAu)) ^ 0xF2B45BB8;
  v143 = *(_DWORD *)(v123 + 4 * (BYTE1(v98) ^ 0x31u));
  HIDWORD(v125) = v143 ^ 0xE162;
  LODWORD(v125) = v143 ^ 0x25000000;
  LODWORD(v354) = v361 - 90;
  v144 = (v125 >> 16) ^ *(_DWORD *)&v126[4 * ((v361 - 90) ^ 0xF7)] ^ (16 * v142
                                                                                     - 1048391063
                                                                                     - ((32 * v142) & 0x8305A4C0));
  HIDWORD(a18) = v103 - 55;
  v145 = *(_DWORD *)&v131[4 * ((v103 - 55) ^ 0x33)] ^ v142 ^ (v144
                                                                             + 219700594
                                                                             - ((2 * v144) & 0x1A30BAE4));
  v146 = *(_DWORD *)(v121 + 4 * (BYTE2(v145) ^ 0xBBu)) ^ 0xF2B45BB8;
  v147 = *(_DWORD *)(v123 + 4 * (BYTE1(v141) ^ 0xF4u));
  HIDWORD(v125) = v147 ^ 0xE162;
  LODWORD(v125) = v147 ^ 0x25000000;
  v148 = BYTE1(v135) ^ 0xAD;
  v149 = v146 ^ *(_DWORD *)&v126[4 * (HIBYTE(v132) ^ 0xA5)] ^ *(_DWORD *)&v131[4 * (v135 ^ 0xDB)] ^ (16 * v146 - 1048391063 - ((32 * v146) & 0x8305A4C0)) ^ (v125 >> 16);
  v150 = *(_DWORD *)(v121 + 4 * (BYTE2(v132) ^ 0x58u));
  v151 = *(_DWORD *)(v123 + 4 * ((unsigned __int16)(v145 ^ 0x22E) >> 8));
  HIDWORD(v125) = v151 ^ 0xE162;
  LODWORD(v125) = v151 ^ 0x25000000;
  v152 = (16 * (v150 ^ 0xF2B45BB8) - 1048391063 - ((32 * (v150 ^ 0xF2B45BB8)) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * ((v135 ^ 0xF15ADDBu) >> 24)] ^ (v125 >> 16);
  v153 = *(_DWORD *)&v131[4 * (v141 ^ 0x80)] ^ v150 ^ (v152 + 219700594 - ((2 * v152) & 0x1A30BAE4));
  v154 = *(_DWORD *)(v121 + 4 * (BYTE2(v135) ^ 0xD6u)) ^ 0xF2B45BB8;
  v155 = (16 * v154 - 1048391063 - ((32 * v154) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * (HIBYTE(v141) ^ 0x19)];
  v156 = *(_DWORD *)(v123 + 4 * (BYTE1(v132) ^ 0xBDu));
  HIDWORD(v125) = v156 ^ 0xE162;
  LODWORD(v125) = v156 ^ 0x25000000;
  v157 = *(_DWORD *)&v131[4 * (v145 ^ 0x2E)] ^ v154 ^ (v125 >> 16) ^ (v155
                                                                                     + 219700594
                                                                                     - ((2 * v155) & 0x1A30BAE4));
  v158 = *(_DWORD *)(v123 + 4 * v148);
  HIDWORD(v125) = v158 ^ 0xE162;
  LODWORD(v125) = v158 ^ 0x25000000;
  v159 = *(_DWORD *)(v121 + 4 * (BYTE2(v141) ^ 0x32u));
  v160 = (v125 >> 16) ^ *(_DWORD *)&v126[4 * (HIBYTE(v145) ^ 0xBD)] ^ (16 * (v159 ^ 0xF2B45BB8)
                                                                     - 1048391063
                                                                     - ((32 * (v159 ^ 0xF2B45BB8)) & 0x8305A4C0));
  v161 = v159 ^ *(_DWORD *)&v131[4 * (v132 ^ 0x18)] ^ 0x837D8D7C ^ (v160
                                                                                   + 219700594
                                                                                   - ((2 * v160) & 0x1A30BAE4));
  v162 = v161
       - ((2 * v161) & 0x5F186BF6)
       + 797718011
       - ((2 * (v161 - ((2 * v161) & 0x5F186BF6) + 797718011)) & 0xD353878C)
       + 1772733382;
  v163 = *(_DWORD *)(v121 + 4 * (BYTE2(v162) ^ 0x6Au));
  BYTE2(v145) = BYTE2(v157) ^ 0xEB;
  v164 = *(_DWORD *)(v123 + 4 * ((unsigned __int16)(v157 ^ 0xDFF9) >> 8));
  v165 = (16 * (v163 ^ 0xF2B45BB8) - 1048391063 - ((32 * (v163 ^ 0xF2B45BB8)) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * (HIBYTE(v149) ^ 0x9B)] ^ (((v164 ^ 0x2500E162u) >> (v149 & 0x10 ^ 0x10) >> (v149 & 0x10)) + ((v164 << 16) ^ 0xE1620000));
  v166 = *(_DWORD *)&v131[4 * (v153 ^ 0x61)] ^ v163 ^ (v165 + 219700594 - ((2 * v165) & 0x1A30BAE4));
  v149 ^= 0x72428952u;
  v167 = *(_DWORD *)(v121 + 4 * BYTE2(v149)) ^ 0xF2B45BB8;
  v168 = *(_DWORD *)(v123 + 4 * (BYTE1(v162) ^ 0x50u));
  HIDWORD(v125) = v168 ^ 0xE162;
  LODWORD(v125) = v168 ^ 0x25000000;
  v169 = (16 * v167 - 1048391063 - ((32 * v167) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * (HIBYTE(v153) ^ 0xB9)] ^ (v125 >> 16);
  v170 = *(_DWORD *)&v131[4 * (v157 ^ 0xF9)] ^ v167 ^ (v169 + 219700594 - ((2 * v169) & 0x1A30BAE4));
  v171 = *(_DWORD *)&v126[4 * (HIBYTE(v157) ^ 5)];
  HIDWORD(v125) = v171 ^ 0x269;
  LODWORD(v125) = v171 ^ 0xC182D000;
  v172 = v125 >> 10;
  v173 = *(_DWORD *)(v123 + 4 * BYTE1(v149));
  HIDWORD(v125) = v173 ^ 0xE162;
  LODWORD(v125) = v173 ^ 0x25000000;
  v174 = *(_DWORD *)(v121 + 4 * (BYTE2(v153) ^ 0x81u)) ^ 0xF2B45BB8;
  v175 = (unint64_t)(v172 ^ 0x25EB099Cu) << 10;
  v176 = (v175 ^ (16 * v174) ^ HIDWORD(v175))
       + 219700594
       - 2 * ((v175 ^ (16 * v174) ^ HIDWORD(v175)) & 0xD185D7A ^ BYTE4(v175) & 8);
  v177 = *(_DWORD *)&v131[4 * (v162 ^ 0xF5)] ^ v174 ^ (v125 >> 16);
  v178 = *(_DWORD *)(v123 + 4 * (BYTE1(v153) ^ 0x96u));
  HIDWORD(v125) = v178 ^ 0xE162;
  LODWORD(v125) = v178 ^ 0x25000000;
  v179 = v177 ^ v176;
  v180 = *(_DWORD *)(v121 + 4 * BYTE2(v145)) ^ 0xF2B45BB8;
  v181 = (v125 >> 16) ^ (16 * v180 - 1048391063 - ((32 * v180) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4
                                                                                               * (HIBYTE(v162) ^ 0x80)];
  v182 = *(_DWORD *)&v131[4 * (v149 ^ 0x33)] ^ v180 ^ (v181 + 219700594 - ((2 * v181) & 0x1A30BAE4));
  v183 = *(_DWORD *)(v121 + 4 * (BYTE2(v182) ^ 0x62u)) ^ 0xF2B45BB8;
  v184 = v179 ^ 0xF1F7E4A6;
  v185 = *(_DWORD *)(v123 + 4 * ((unsigned __int16)(v179 ^ 0xE4A6) >> 8));
  HIDWORD(v125) = v185 ^ 0xE162;
  LODWORD(v125) = v185 ^ 0x25000000;
  v186 = (16 * v183 - 1048391063 - ((32 * v183) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * (HIBYTE(v166) ^ 0x2F)];
  v187 = *(_DWORD *)&v131[4 * (v170 ^ 0x68)] ^ v183 ^ (v125 >> 16) ^ (v186
                                                                                     + 219700594
                                                                                     - ((2 * v186) & 0x1A30BAE4));
  v188 = *(_DWORD *)(v121 + 4 * (BYTE2(v166) ^ 0xEFu)) ^ 0xF2B45BB8;
  v189 = *(_DWORD *)(v123 + 4 * ((unsigned __int16)(v182 ^ 0x2957) >> 8));
  HIDWORD(v125) = v189 ^ 0xE162;
  LODWORD(v125) = v189 ^ 0x25000000;
  v190 = (16 * v188 - 1048391063 - ((32 * v188) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * (HIBYTE(v170) ^ 0xCE)] ^ (v125 >> 16);
  v191 = *(_DWORD *)&v131[4 * (v179 ^ 0x15)] ^ v188 ^ (v190 + 219700594 - ((2 * v190) & 0x1A30BAE4));
  v192 = *(_DWORD *)(v121 + 4 * (BYTE2(v170) ^ 0x60u)) ^ 0xF2B45BB8;
  v193 = *(_DWORD *)(v123 + 4 * (BYTE1(v166) ^ 0xC0u));
  HIDWORD(v125) = v193 ^ 0xE162;
  LODWORD(v125) = v193 ^ 0x25000000;
  v194 = (16 * v192 - 1048391063 - ((32 * v192) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * HIBYTE(v184)] ^ (v125 >> 16);
  v195 = *(_DWORD *)&v131[4 * (v182 ^ 0x57)] ^ v192 ^ (v194 + 219700594 - ((2 * v194) & 0x1A30BAE4));
  v113 = (v170 & 0x1000) == 0;
  v196 = BYTE1(v170) ^ 0xC;
  if (v113)
    v197 = 16;
  else
    v197 = -16;
  v198 = v196 + v197;
  v199 = *(_DWORD *)&v126[4 * (HIBYTE(v182) ^ 0xA1)];
  v200 = *(_DWORD *)(v121 + 4 * BYTE2(v184)) ^ 0xF2B45BB8;
  v201 = *(_DWORD *)(v123 + 4 * (v198 ^ 0x83u));
  v202 = v199 ^ HIWORD(v201) ^ (16 * v200 - 1048391063 - ((32 * v200) & 0x8305A4C0));
  v203 = *(_DWORD *)&v131[4 * (v166 ^ 0xDB)] ^ v200 ^ ((v202 ^ (v201 << 16) ^ 0xE1622500)
                                                                      + 219700594
                                                                      - 2
                                                                      * ((v202 ^ (v201 << 16) ^ 0xE1622500) & 0xD185D77 ^ v202 & 5));
  v204 = v203 ^ 0xEFBC3B44;
  v205 = *(_DWORD *)(v121 + 4 * ((v203 ^ 0xEFBC3B44) >> 16)) ^ 0xF2B45BB8;
  v206 = *(_DWORD *)(v123 + 4 * ((unsigned __int16)(v195 ^ 0x8D48) >> 8));
  HIDWORD(v207) = v206 ^ 0xE162;
  LODWORD(v207) = v206 ^ 0x25000000;
  v208 = (v207 >> 16) ^ *(_DWORD *)&v126[4 * (HIBYTE(v187) ^ 0xCC)] ^ (16 * v205
                                                                     - 1048391063
                                                                     - ((32 * v205) & 0x8305A4C0));
  LOWORD(v206) = v187 ^ 0xD583;
  v209 = *(_DWORD *)&v131[4 * (v191 ^ 0xA9)] ^ v205 ^ (v208 + 219700594 - ((2 * v208) & 0x1A30BAE4));
  v210 = *(_DWORD *)(v121 + 4 * (((v187 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0xF2B45BB8;
  v211 = *(_DWORD *)(v123 + 4 * ((unsigned __int16)(v203 ^ 0x3B44) >> 8));
  HIDWORD(v207) = v211 ^ 0xE162;
  LODWORD(v207) = v211 ^ 0x25000000;
  v212 = (v207 >> 16) ^ *(_DWORD *)&v126[4 * HIBYTE(v191)] ^ (16 * v210 - 1048391063 - ((32 * v210) & 0x8305A4C0));
  v213 = *(_DWORD *)&v131[4 * (v195 ^ 0x48)] ^ v210 ^ (v212 + 219700594 - ((2 * v212) & 0x1A30BAE4));
  v214 = *(_DWORD *)(v121 + 4 * ((v191 ^ 0xE93411A9) >> 16)) ^ 0xF2B45BB8;
  v215 = *(_DWORD *)(v123 + 4 * BYTE1(v206));
  HIDWORD(v207) = v215 ^ 0xE162;
  LODWORD(v207) = v215 ^ 0x25000000;
  v216 = (16 * v214 - 1048391063 - ((32 * v214) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * ((v195 ^ 0x807D8D48) >> 24)] ^ (v207 >> 16);
  v217 = *(_DWORD *)&v131[4 * (v203 ^ 0x77)] ^ v214 ^ (v216 + 219700594 - ((2 * v216) & 0x1A30BAE4));
  v218 = *(_DWORD *)(v121 + 4 * (BYTE2(v195) ^ 0xBEu)) ^ 0xF2B45BB8;
  v219 = *(_DWORD *)(v123 + 4 * (BYTE1(v191) ^ 0x82u));
  HIDWORD(v207) = v219 ^ 0xE162;
  LODWORD(v207) = v219 ^ 0x25000000;
  v220 = (v207 >> 16) ^ *(_DWORD *)&v126[4 * HIBYTE(v204)] ^ (16 * v218 - 1048391063 - ((32 * v218) & 0x8305A4C0));
  v221 = *(_DWORD *)&v131[4 * v206] ^ v218 ^ (v220 + 219700594 - ((2 * v220) & 0x1A30BAE4));
  v222 = *(_DWORD *)(v121 + 4 * ((v221 ^ 0x950DA39D) >> 16)) ^ 0xF2B45BB8;
  v223 = *(_DWORD *)(v123 + 4 * (BYTE1(v217) ^ 0x89u));
  HIDWORD(v207) = v223 ^ 0xE162;
  LODWORD(v207) = v223 ^ 0x25000000;
  v224 = (16 * v222 - 1048391063 - ((32 * v222) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * ((v209 ^ 0x11521BCAu) >> 24)];
  v225 = BYTE1(v213) ^ 0xD1;
  v226 = *(_DWORD *)&v131[4 * (v213 ^ 0x88)] ^ v222 ^ (v207 >> 16) ^ 0x71C9D6C4 ^ (v224
                                                                                                  + 219700594
                                                                                                  - ((2 * v224) & 0x1A30BAE4));
  v227 = *(_DWORD *)(v121 + 4 * ((v209 ^ 0x11521BCAu) >> 16));
  v228 = *(_DWORD *)(v123 + 4 * (BYTE1(v221) ^ 0x30u));
  v229 = v226 - ((2 * v226) & 0xF8356514);
  HIDWORD(v207) = v228 ^ 0xE162;
  LODWORD(v207) = v228 ^ 0x25000000;
  v230 = (16 * (v227 ^ 0xF2B45BB8) - 1048391063 - ((32 * (v227 ^ 0xF2B45BB8)) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * (HIBYTE(v213) ^ 0xDF)] ^ (v207 >> 16);
  v217 ^= 0x7A851A70u;
  v231 = *(_DWORD *)&v131[4 * (v217 ^ 0x33)] ^ v227 ^ (v230 + 219700594 - ((2 * v230) & 0x1A30BAE4));
  v232 = *(_DWORD *)(v121 + 4 * (BYTE2(v213) ^ 0xA7u)) ^ 0xF2B45BB8;
  v233 = *(_DWORD *)(v123 + 4 * (BYTE1(v209) ^ 0x88u));
  HIDWORD(v207) = v233 ^ 0xE162;
  LODWORD(v207) = v233 ^ 0x25000000;
  v234 = (16 * v232 - 1048391063 - ((32 * v232) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4
                                                                                * (HIBYTE(v217) ^ -HIBYTE(v217) ^ ((HIBYTE(v217) ^ 0xFFFFFF16) + 234))
                                                                                + 932] ^ (v207 >> 16);
  v235 = *(_DWORD *)&v131[4 * (v221 ^ 0x9D)] ^ v232 ^ (v234 + 219700594 - ((2 * v234) & 0x1A30BAE4));
  v236 = *(_DWORD *)(v123 + 4 * v225);
  HIDWORD(v207) = v236 ^ 0xE162;
  LODWORD(v207) = v236 ^ 0x25000000;
  v237 = *(_DWORD *)(v121 + 4 * BYTE2(v217));
  v238 = (v207 >> 16) ^ *(_DWORD *)&v126[4 * (HIBYTE(v221) ^ 0x7C)] ^ (16 * (v237 ^ 0xF2B45BB8)
                                                                     - 1048391063
                                                                     - ((32 * (v237 ^ 0xF2B45BB8)) & 0x8305A4C0));
  v239 = *(_DWORD *)&v131[4 * (v209 ^ 0xF9)] ^ v237 ^ (v238 + 219700594 - ((2 * v238) & 0x1A30BAE4));
  v240 = *(_DWORD *)(v123 + 4 * ((unsigned __int16)(v235 ^ 0xDE69) >> 8));
  HIDWORD(v207) = v240 ^ 0xE162;
  LODWORD(v207) = v240 ^ 0x25000000;
  v241 = HIBYTE(v239) ^ 0xFFFFFFE7;
  LOWORD(v221) = v229 - 19830;
  v242 = *(_DWORD *)(v121 + 4 * (BYTE2(v239) ^ 0x33u));
  v243 = (v207 >> 16) ^ *(_DWORD *)&v126[4 * (((v229 - 65359222) >> 24) ^ 0x95)] ^ (16
                                                                                                * (v242 ^ 0xF2B45BB8)
                                                                                                - 1048391063
                                                                                                - ((32
                                                                                                  * (v242 ^ 0xF2B45BB8)) & 0x8305A4C0));
  v244 = *(_DWORD *)&v131[4 * (v231 ^ 0x6B)] ^ v242 ^ (v243 + 219700594 - ((2 * v243) & 0x1A30BAE4));
  v245 = *(_DWORD *)(v123 + 4 * (BYTE1(v239) ^ 0x64u));
  HIDWORD(v207) = v245 ^ 0xE162;
  LODWORD(v207) = v245 ^ 0x25000000;
  v246 = *(_DWORD *)(v121 + 4 * (((v229 - 65359222) >> 16) ^ 0x70u)) ^ 0xF2B45BB8;
  v247 = v246 ^ *(_DWORD *)&v126[4 * (HIBYTE(v231) ^ 0x2F)] ^ *(_DWORD *)&v131[4 * (v235 ^ 0x69)] ^ ((v207 >> 16) + 219700594 - ((2 * (v207 >> 16)) & 0x1A30BAE4)) ^ (16 * v246 - 1048391063 - ((32 * v246) & 0x8305A4C0));
  v248 = *(_DWORD *)(v121 + 4 * (BYTE2(v231) ^ 0x4Eu)) ^ 0xF2B45BB8;
  v249 = *(_DWORD *)(v123 + 4 * (BYTE1(v221) ^ 0xD9u));
  HIDWORD(v207) = v249 ^ 0xE162;
  LODWORD(v207) = v249 ^ 0x25000000;
  v250 = (16 * v248 - 1048391063 - ((32 * v248) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * ((v235 ^ 0x5FEEDE69u) >> 24)] ^ (v207 >> 16);
  v251 = *(_DWORD *)&v131[4 * (((v239 ^ 0xF7) + (v239 ^ 0xFFFFFF3B) + 1) ^ 0xFFFFFFFE)
                        + 4 * (v239 ^ 0xF7)] ^ v248 ^ (v250 + 219700594 - ((2 * v250) & 0x1A30BAE4));
  v252 = *(_DWORD *)(v121 + 4 * (BYTE2(v235) ^ 0x2Du)) ^ 0xF2B45BB8;
  v253 = *(_DWORD *)(v123 + 4 * (BYTE1(v231) ^ 0x84u));
  HIDWORD(v207) = v253 ^ 0xE162;
  LODWORD(v207) = v253 ^ 0x25000000;
  v254 = (v207 >> 16) ^ *(_DWORD *)&v126[4
                                       * (v241 & 0x90 ^ 0x86 ^ (~(2 * (v241 | 0x90)) + (v241 | 0x90)))] ^ (16 * v252 - 1048391063 - ((32 * v252) & 0x8305A4C0));
  v255 = *(_DWORD *)&v131[4 * (v221 ^ 0xD1)] ^ v252 ^ (v254 + 219700594 - ((2 * v254) & 0x1A30BAE4));
  v256 = *(_DWORD *)(v121 + 4 * ((v255 ^ 0x59A5F4B7) >> 16)) ^ 0xF2B45BB8;
  v257 = *(_DWORD *)(v123 + 4 * ((unsigned __int16)(v251 ^ 0x872B) >> 8));
  HIDWORD(v207) = v257 ^ 0xE162;
  LODWORD(v207) = v257 ^ 0x25000000;
  v258 = (16 * v256 - 1048391063 - ((32 * v256) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * (HIBYTE(v244) ^ 0x20)] ^ (v207 >> 16);
  v259 = *(_DWORD *)&v131[4 * (v247 ^ 0xEE)] ^ v256 ^ (v258 + 219700594 - ((2 * v258) & 0x1A30BAE4));
  v260 = *(_DWORD *)(v121 + 4 * (BYTE2(v244) ^ 0x91u)) ^ 0xF2B45BB8;
  v261 = *(_DWORD *)(v123 + 4 * (BYTE1(v255) ^ 0x67u));
  HIDWORD(v207) = v261 ^ 0xE162;
  LODWORD(v207) = v261 ^ 0x25000000;
  v362 = v260 ^ *(_DWORD *)&v126[4 * (HIBYTE(v247) ^ 0xD6)] ^ *(_DWORD *)&v131[4 * (v251 ^ 0x18)] ^ (16 * v260 - 1048391063 - ((32 * v260) & 0x8305A4C0)) ^ ((v207 >> 16) + 219700594 - ((2 * (v207 >> 16)) & 0x1A30BAE4));
  v262 = *(_DWORD *)(v121 + 4 * (BYTE2(v247) ^ 0x56u)) ^ 0xF2B45BB8;
  v263 = *(_DWORD *)(v123 + 4 * (BYTE1(v244) ^ 0xE0u));
  HIDWORD(v207) = v263 ^ 0xE162;
  LODWORD(v207) = v263 ^ 0x25000000;
  v264 = v207 >> 16;
  HIDWORD(v207) = *(_DWORD *)&v131[4 * (v255 ^ 0xB7)] ^ 0x1190F9C8;
  LODWORD(v207) = HIDWORD(v207);
  v265 = (v207 >> 21) ^ __ROR4__(*(_DWORD *)&v126[4 * ((v251 ^ 0x911B872B) >> 24)] ^ v262 ^ 0x6D41727E ^ (16 * v262- 1048391063- ((32 * v262) & 0x8305A4C0)) ^ v264, 21);
  v266 = *(_DWORD *)(v121 + 4 * (BYTE2(v251) ^ 0xD8u)) ^ 0xF2B45BB8;
  v267 = *(_DWORD *)(v123 + 4 * (BYTE1(v247) ^ 0xE4u));
  HIDWORD(v207) = v267 ^ 0xE162;
  LODWORD(v207) = v267 ^ 0x25000000;
  v268 = (v207 >> 16) ^ *(_DWORD *)&v126[4 * (HIBYTE(v255) ^ 0xB0)] ^ (16 * v266
                                                                     - 1048391063
                                                                     - ((32 * v266) & 0x8305A4C0));
  v269 = *(_DWORD *)&v131[4 * (v244 ^ 0x1E)] ^ v266 ^ (v268 + 219700594 - ((2 * v268) & 0x1A30BAE4));
  v270 = *(_DWORD *)(v121 + 4 * (BYTE2(v259) ^ 0x74u)) ^ 0xF2B45BB8;
  v271 = *(_DWORD *)(v123 + 4 * (BYTE1(v269) ^ 0x66u));
  HIDWORD(v207) = v271 ^ 0xE162;
  LODWORD(v207) = v271 ^ 0x25000000;
  v272 = v362 ^ 0x177CD9D9;
  v273 = *(_DWORD *)&v126[4 * ((v362 ^ 0x177CD9D9u) >> 24)] ^ 0x6D41727E ^ v270 ^ (v207 >> 16) ^ (16 * v270
                                                                                                - 1048391063
                                                                                                - ((32 * v270) & 0x8305A4C0));
  v274 = (v273 & 0x200 ^ 0xBBFD2F95) + 2 * (v273 & 0x200);
  HIDWORD(v207) = v265 ^ 0x549BF9D9;
  LODWORD(v207) = v265 ^ 0x549BF9D9;
  v275 = v207 >> 11;
  v276 = *(_DWORD *)&v131[4 * ((v207 >> 11) ^ 0xEF)];
  v113 = ((v274 + 1141035115) & (v276 ^ 0xD185D72)) == 0;
  v277 = v274 + 2107035884;
  v278 = -175034346 - v274;
  if (v113)
    v278 = v277;
  v279 = ((v276 ^ 0x1190F9C8) - 966000769 + v278) ^ v273 & 0xFFFFFDFF;
  v280 = *(_DWORD *)(v121 + 4 * BYTE2(v272)) ^ 0xF2B45BB8;
  v281 = v259 ^ 0xD4B73D47;
  v282 = *(_DWORD *)(v123 + 4 * (((unsigned __int16)(v259 ^ 0x3D47) >> 8) ^ 0x93u));
  HIDWORD(v283) = v282 ^ 0xE162;
  LODWORD(v283) = v282 ^ 0x25000000;
  v284 = (16 * v280 - 1048391063 - ((32 * v280) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * ((v275 ^ 0x1EA133EFu) >> 24)];
  v285 = *(_DWORD *)&v131[4 * (v269 ^ 0xD)] ^ v280 ^ (v283 >> 16) ^ (v284
                                                                                    + 219700594
                                                                                    - 2
                                                                                    * (v284 & 0xD185D76 ^ *(_DWORD *)&v126[4 * ((v275 ^ 0x1EA133EFu) >> 24)] & 4));
  v286 = *(_DWORD *)(v121 + 4 * (BYTE2(v275) ^ 0x62u)) ^ 0xF2B45BB8;
  v287 = *(_DWORD *)(v123 + 4 * BYTE1(v272));
  HIDWORD(v283) = v287 ^ 0xE162;
  LODWORD(v283) = v287 ^ 0x25000000;
  v288 = (16 * v286 - 1048391063 - ((32 * v286) & 0x8305A4C0)) ^ *(_DWORD *)&v126[4 * (HIBYTE(v269) ^ 0x32)] ^ (v283 >> 16);
  v289 = (uint64_t)*(&off_1E8EC5D70 + (LODWORD(STACK[0x408]) ^ 0x550));
  v290 = *(_DWORD *)&v131[4 * (v259 ^ 0x74)] ^ v286 ^ (v288 + 219700594 - ((2 * v288) & 0x1A30BAE4));
  v291 = (char *)*(&off_1E8EC5D70 + LODWORD(STACK[0x408]) - 1160) - 4;
  v292 = v279 ^ 0xF137909F;
  v293 = *(_DWORD *)&v291[4 * ((v279 ^ 0xF137909F) >> 16)] ^ 0xC5902CA;
  v294 = v293 ^ ((HIBYTE(v285) ^ 0x9FD52929) - 23910424 + *(_DWORD *)(v289 + 4 * (HIBYTE(v285) ^ 0xB4))) ^ (v293 >> 2) ^ (v293 >> 4);
  v295 = (v294 & 0x1000000 ^ 0xFBFFA1FB) + 2 * (v294 & 0x1000000);
  v296 = (char *)*(&off_1E8EC5D70 + LODWORD(STACK[0x408]) - 1290) - 8;
  v297 = *(_DWORD *)&v296[4 * (v290 ^ 0x9E)];
  v113 = ((v295 + 67132933) & (v297 ^ 0x7C000000)) == 0;
  v298 = *(_DWORD *)(v123 + 4 * (BYTE1(v275) ^ 0xA0u));
  v299 = *(_DWORD *)(v121 + 4 * (BYTE2(v269) ^ 0x72u)) ^ 0xF2B45BB8;
  HIDWORD(v283) = v298 ^ 0xE162;
  LODWORD(v283) = v298 ^ 0x25000000;
  v300 = (v283 >> 16) ^ *(_DWORD *)&v126[4 * HIBYTE(v281)] ^ (16 * v299 - 1048391063 - ((32 * v299) & 0x8305A4C0));
  v301 = *(_DWORD *)&v131[4 * (v362 ^ 0xEA)] ^ v299 ^ (v300 + 219700594 - ((2 * v300) & 0x1A30BAE4));
  v302 = v285 ^ 0xBC37B;
  v303 = *(_DWORD *)&v291[4 * (BYTE2(v301) ^ 0x99)] ^ 0xC5902CA;
  v304 = ((v285 ^ 0x7B)
        - 114125066
        + ((2 * (((v285 ^ 0xBC37B) + 112) & 0x8F ^ (v285 ^ 0xBC37B | a47))) ^ 0xF8820015)) ^ v303 ^ (*(_DWORD *)(v289 + 4 * (((v279 ^ 0xF137909F) >> 24) ^ 0xB4)) + (((v279 ^ 0xF137909F) >> 24) ^ 0x9FD52929) - 23910424) ^ (v303 >> 2) ^ *(_DWORD *)&v296[4 * (v285 ^ 0x79)] ^ (v303 >> 4);
  v305 = (char *)*(&off_1E8EC5D70 + (LODWORD(STACK[0x408]) ^ 0x5CC)) - 4;
  v306 = v290 ^ 0x9C;
  v307 = *(_DWORD *)&v305[4 * ((unsigned __int16)(v290 ^ 0x7C9C) >> 8)] ^ 0x95911A8A;
  v308 = v307 ^ (1515496080 * v307);
  v309 = v301 ^ 0x6792B6A6;
  v310 = *(_DWORD *)(v289 + 4 * (((v301 ^ 0x6792B6A6u) >> 24) ^ 0xB4));
  v311 = (v290 ^ 0x250E7C9Cu) >> 24;
  LODWORD(a41) = *(_DWORD *)(v289 + 4 * (v311 ^ 0xB4));
  v312 = *(_DWORD *)&v291[4 * (BYTE2(v290) ^ 5)];
  HIDWORD(v360) = *(_DWORD *)&v291[4 * BYTE2(v302)];
  LODWORD(v291) = *(_DWORD *)&v305[4 * BYTE1(v302)];
  v313 = v304 ^ v308;
  v314 = *(_DWORD *)&v305[4 * ((unsigned __int16)(v301 ^ 0xB6A6) >> 8)];
  v315 = *(_DWORD *)&v305[4 * (BYTE1(v279) ^ 0x5E)];
  v316 = *(_DWORD *)&v296[4 * (v279 ^ 0x9D)];
  v317 = *(_DWORD *)&v296[4 * (v301 ^ 0xA4)];
  v318 = (v313 + 1704835538 - ((2 * v313) & 0xCB3B73F4) + 40) ^ LODWORD(STACK[0x2A4]);
  v319 = (char *)*(&off_1E8EC5D70 + LODWORD(STACK[0x408]) - 1176) - 8;
  v348[5] = v319[((v318 ^ 0x5244C6B3) >> 16) ^ 0x5ELL] ^ ((v318 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v318 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v318 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0xC3) + 88) ^ 0xB9;
  v320 = v312 ^ 0xC5902CA ^ ((HIBYTE(v309) ^ 0x9FD52929) - 23910424 + v310) ^ ((v312 ^ 0xC5902CAu) >> 2) ^ ((v312 ^ 0xC5902CAu) >> 4) ^ v291 ^ 0x95911A8A ^ v316 ^ (1515496080 * (v291 ^ 0x95911A8A)) ^ (v292 - 114125066 + ((2 * v292 + 224) & 0x10A ^ 0x77DFFFF));
  v321 = (v320 + 1993657974 - ((2 * v320) & 0xEDA99D9A) + 87) ^ LODWORD(STACK[0x3B0]);
  v322 = v321 ^ 0x22A932A6;
  v323 = (BYTE1(v322) | 0x88) ^ (v322 >> 8) & 0x88;
  v324 = (uint64_t)*(&off_1E8EC5D70 + LODWORD(STACK[0x408]) - 1200);
  v348[2] = (((unsigned __int16)(v321 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v321 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((*(_BYTE *)(v324 + (v323 ^ 0x14)) ^ 0x43) - ((2 * *(_BYTE *)(v324 + (v323 ^ 0x14))) & 0x20) - 112);
  v325 = (char *)*(&off_1E8EC5D70 + LODWORD(STACK[0x408]) - 1240) - 8;
  LODWORD(v323) = v325[HIBYTE(v318) ^ 0xEFLL];
  HIDWORD(v283) = v323 ^ 0x12;
  LODWORD(v283) = (_DWORD)v323 << 24;
  v348[STACK[0x2E0]] = (v283 >> 29) ^ 0x83;
  v326 = v295 + 1744789496;
  v327 = 1610523630 - v295;
  if (v113)
    v327 = v326;
  v328 = v294 & 0xFEFFFFFF ^ (1515496080 * (v314 ^ 0x95911A8A)) ^ ((v297 ^ (~((2 * v306 - 102555424) & 0xF882010A)
                                                                          + v306
                                                                          - 114125066))
                                                                 - 1677656563
                                                                 + v327);
  v329 = v314 ^ 0x95911A8A ^ LODWORD(STACK[0x3B8]) ^ (v328 - 1271497542 - ((2 * v328) & 0x686CF9F8) + 66);
  v330 = (char *)*(&off_1E8EC5D70 + LODWORD(STACK[0x408]) - 1196) - 12;
  v348[11] = v330[v314 ^ 0x8Au ^ LOBYTE(STACK[0x3B8]) ^ (v328
                                                                                         - 70
                                                                                         - ((2 * v328) & 0xF8)
                                                                                         + 66) ^ 0x28] ^ 0x9F;
  v331 = v325[BYTE3(v321) ^ 0xF9];
  HIDWORD(v332) = v331 ^ 0x12;
  LODWORD(v332) = v331 << 24;
  v333 = STACK[0x290];
  v348[STACK[0x290]] = (v332 >> 29) ^ 0xFB;
  v348[STACK[0x200]] = BYTE2(v322) ^ 0x61 ^ ((BYTE2(v322) ^ 0x61) - ((2 * (BYTE2(v322) ^ 0x61) - 18) & 0xC2) + 88) ^ 0xB8 ^ v319[BYTE2(v322) ^ 0xB5];
  v334 = (v311 ^ 0x9FD52929) - 23910424 + a41;
  v335 = HIDWORD(v360) ^ 0xC5902CA ^ ((HIDWORD(v360) ^ 0xC5902CAu) >> 4) ^ ((HIDWORD(v360) ^ 0xC5902CAu) >> 2);
  v336 = (v335 & 0x80000 | ((((v335 & 0x80000) >> 19) & 1) << 20)) ^ 0xF6EDEFF;
  v113 = ((v336 - 258924287) & v334) == 0;
  v337 = v336 - 153276567;
  v338 = 364572007 - v336;
  if (v113)
    v338 = v337;
  v339 = v335 & 0xFFF7FFFF ^ (1515496080 * (v315 ^ 0x95911A8A)) ^ (v334 - 105647720 + v338);
  v340 = v317 ^ (v309 + 2096205936) ^ (v339 - ((2 * v339) & 0xF8820D0A) + 2084636293);
  v341 = v315 ^ LODWORD(STACK[0x3D8]) ^ (v340 - 518725492 - ((2 * v340) & 0xC229C178) + 48);
  v348[STACK[0x288]] = v319[(BYTE2(v341) ^ 0xA) - ((v341 >> 15) & 0x1A8) + 212] ^ BYTE2(v341) ^ ((BYTE2(v341) ^ 0xA)
                                                                                               - ((2
                                                                                                 * (BYTE2(v341) ^ 0xA)
                                                                                                 - 18) & 0xC3)
                                                                                               + 88) ^ 0x8C;
  v342 = v325[HIBYTE(v341) ^ 0x6FLL];
  HIDWORD(v343) = v342 ^ 0x12;
  LODWORD(v343) = v342 << 24;
  v348[STACK[0x378]] = (v343 >> 29) ^ 0x50;
  v348[STACK[0x248]] = ((v329 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v329 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                           - ((2 * (((v329 ^ 0xCFDDD967) >> 16) ^ 0x94) - 18) & 0xC3)
                                                           + 88) ^ v319[((v329 ^ 0xCFDDD967) >> 16) ^ 0x40] ^ 0xC;
  v344 = (((v341 ^ 0xCAA488A5) >> 4) & 0xF0 | ((unsigned __int16)(v341 ^ 0x88A5) >> 12)) ^ 0xE6;
  v348[STACK[0x3E0]] = *(_BYTE *)(v324 + (((v344 >> 4) & 0xFFFFFF0F | (16 * (v344 & 0xF))) ^ 0xAELL)) ^ (((v344 >> 4) & 0xF | (16 * (v344 & 0xF))) - ((2 * ((v344 >> 4) & 0xF | (16 * (v344 & 0xF)))) & 0x87) + 67) ^ 0x2B;
  v345 = STACK[0x408];
  v348[STACK[0x240]] = (((unsigned __int16)(v329 ^ 0xD967) >> 8) - (((v329 ^ 0xCFDDD967) >> 7) & 0x86) + 67) ^ 0xDB ^ *(_BYTE *)(v324 + (((unsigned __int16)(v329 ^ 0xD967) >> 8) ^ 0xA0));
  v348[STACK[0x3D0]] = (((unsigned __int16)(v318 ^ 0xC6B3) >> 8) - (((v318 ^ 0x5244C6B3) >> 7) & 0x86) + 67) ^ *(_BYTE *)(v324 + (((unsigned __int16)(v318 ^ 0xC6B3) >> 8) ^ 0x75)) ^ 0x80;
  v348[STACK[0x380]] = v330[v321 ^ 0x95] ^ 0x32;
  v348[STACK[0x2E8]] = v330[v318 ^ 0x7FLL] ^ 0xA3;
  v348[STACK[0x400]] = v330[v341 ^ 0xALL] ^ 0xC;
  v346 = v325[HIBYTE(v329) ^ 0x49];
  HIDWORD(v343) = v346 ^ 0x12;
  LODWORD(v343) = v346 << 24;
  v348[STACK[0x388]] = (v343 >> 29) ^ 0x2E;
  return ((uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _BYTE *, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * ((19 * ((((_DWORD)v333 - 890483679 - ((2 * (_DWORD)v333 + 32) & 0x95D89842) + 16) ^ 0xCAEC4C20) < 0x150)) ^ v345)) - 12))(219, v321, v330, 43, 10, 4169269269, 18, v325, a5, a6, a7, a8, a9, a10, a11, v348, v349, v350, v351,
           v352,
           v353,
           a18,
           v354,
           v355,
           v356,
           v357,
           v358,
           v359,
           v360,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

void sub_1D0DB3E54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned __int8 a23,int a24,int a25,unsigned __int8 a26,int a27,unsigned __int8 a28,int a29,int a30,int a31,unsigned __int8 a32,int a33,int a34,char a35,__int16 a36,char a37)
{
  char v37;

  LODWORD(STACK[0x3B0]) = (a23 | ((a30 ^ 0xC) << 24) | ((a26 ^ 0xEF) << 8) | ((a32 ^ 0x92) << 16)) ^ 0xEE541DAD;
  LODWORD(STACK[0x2A4]) = a29 ^ 0x621CCD79;
  LODWORD(STACK[0x3B8]) = (a27 | (a31 << 8) | ((a33 ^ 0x83) << 16) | (a25 << ((a35 - 126) ^ 0x7F))) ^ 0x9DE85643;
  LODWORD(STACK[0x3D8]) = ((((a34 ^ 0x1A) << 16) + ((a24 ^ 0x1A) << 24)) | a28 | ((a37 ^ v37) << 8)) ^ 0xF285492D;
  JUMPOUT(0x1D0DB1F20);
}

uint64_t sub_1D0DB3F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v17 = STACK[0x570];
  STACK[0x620] -= 32;
  *(_BYTE *)(v17 + 335) = *(_BYTE *)(a14 + 335) ^ 0xCD ^ *(_BYTE *)(*(_QWORD *)(v15 + 8 * (v14 - 1322)) + 15) ^ *(_BYTE *)(*(_QWORD *)(v15 + 8 * ((v14 - 1201) ^ 0xD1)) + 17) ^ *(_BYTE *)(*(_QWORD *)(v15 + 8 * ((v14 - 1201) ^ 0x9C)) + 10) ^ 0xEF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8 * ((772 * (((v14 - 1156) ^ 0x51938824) == 1368623638)) ^ (v14 - 1201)))
                            - 8))();
}

void sub_1D0DB3FFC()
{
  JUMPOUT(0x1D0DB3F74);
}

uint64_t sub_1D0DB4004()
{
  int v0;
  uint64_t v1;

  STACK[0x5D0] += ((v0 - 105) | 0x500u) ^ 0xFFFFFFFFFFFFFA8ALL;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 105) ^ 0x500 ^ v0 ^ 0x469)))();
}

uint64_t sub_1D0DB4040@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t v6;
  _BYTE *v7;
  int v8;

  v7 = (_BYTE *)STACK[0x4C8];
  v8 = ((a1 - 747) ^ 0x625F9CC) - 1;
  a6[12] = (HIBYTE(v8) ^ 6) - ((2 * (HIBYTE(v8) ^ 6)) & 0xDF) - 17;
  a6[13] = (BYTE2(v8) ^ 0x25) + (~(2 * (BYTE2(v8) ^ 0x25)) | 0x21) - 16;
  a6[14] = (BYTE1(v8) ^ 0xFB) - ((2 * (BYTE1(v8) ^ 0xFB)) & 0xDF) - 17;
  a6[15] = (((a1 + 21) ^ 0xCC) - 1) ^ 0xAC;
  v7[16] ^= *a6 ^ 0xEF;
  v7[17] ^= a6[1] ^ 0xEF;
  v7[18] ^= a6[2] ^ 0xEF;
  v7[19] ^= a6[3] ^ 0xEF;
  v7[20] ^= a6[4] ^ 0xEF;
  v7[21] ^= a6[5] ^ 0xEF;
  v7[22] ^= a6[6] ^ 0xEF;
  v7[23] ^= a6[7] ^ 0xEF;
  v7[24] ^= a6[8] ^ 0xEF;
  v7[25] ^= a6[9] ^ 0xEF;
  v7[26] ^= a6[10] ^ 0xEF;
  v7[27] ^= a6[11] ^ 0xEF;
  v7[28] ^= a6[12] ^ 0xEF;
  v7[29] ^= a6[13] ^ 0xEF;
  v7[30] ^= a6[14] ^ 0xEF;
  v7[31] ^= a6[15] ^ 0xEF;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v6 + 8 * (a1 - 527)) - 4))(2483637448);
}

void sub_1D0DB4260()
{
  JUMPOUT(0x1D0DB408CLL);
}

uint64_t sub_1D0DB4268(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((63
                                          * (LODWORD(STACK[0x464]) != ((((v4 + 946) | 0x10) + a3) & a4 ^ 0x6BF6B1B7))) ^ ((v4 + 946) | 0x10)))
                            - 8))();
}

uint64_t sub_1D0DB42C0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, int a6)
{
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * (((((v6 + a5) ^ (*(unsigned __int8 *)(v8
                                                                                               + (v7 - 1 + a1)) == ((v6 - 62) ^ 0xBE))) & 1)
                                          * a6) ^ v6))
                            - 8))();
}

uint64_t sub_1D0DB4308@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((63 * (v4 != ((v3 + a1) & a2 ^ a3))) ^ v3)) - 8))();
}

uint64_t sub_1D0DB4338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,char a36)
{
  int v36;
  uint64_t v37;
  unint64_t v38;
  _BOOL4 v39;

  LODWORD(STACK[0x464]) = 1811329848;
  v38 = STACK[0x4C8];
  STACK[0x440] = 335;
  *(_BYTE *)(v38 + 335) = (a36 ^ 0xBA) * (a36 + 17);
  v39 = STACK[0x440] == (((v36 - 1234) | 0x400u) ^ 0x4A8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v37 + 8 * (((4 * v39) | (16 * v39)) ^ (v36 - 659))) - 4))();
}

void sub_1D0DB48D8()
{
  JUMPOUT(0x1D0DB4890);
}

uint64_t sub_1D0DB48E0()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = ((uint64_t (*)(void))STACK[0x2C8])();
  LODWORD(STACK[0x640]) = v1;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v2 + 8 * (v0 ^ (126 * (v1 == -623068998))))
                                          - ((v0 + 210) ^ (2 * v0) ^ 0xC2Au ^ 8)))(v3);
}

uint64_t sub_1D0DB4928()
{
  int v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t (*v3)(void);
  unint64_t v4;

  v2 = STACK[0x3E8];
  v3 = (uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (v0 - 1359)) - 8);
  v4 = STACK[0x280];
  STACK[0x3E0] = STACK[0x280] + 2353;
  STACK[0x3D8] = v2 + 49;
  STACK[0x3D0] = v4 + 2333;
  STACK[0x3C8] = v2 + 29;
  STACK[0x3B8] = v4 + 2313;
  STACK[0x3B0] = v2 + 9;
  return v3();
}

void sub_1D0DB51E0()
{
  int v0;

  LODWORD(STACK[0x638]) = v0;
  JUMPOUT(0x1D0DB5164);
}

void sub_1D0DB5390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50)
{
  uint64_t v50;

  STACK[0x478] = *(_QWORD *)(v50 + 8 * (int)(STACK[0x430] - 1367)) + (a50 & 0xBB8C97BF) - 705;
  JUMPOUT(0x1D0DB5A4CLL);
}

void sub_1D0DB53C4()
{
  uint64_t v0;

  STACK[0x478] = *(_QWORD *)(v0 + 8 * (int)(STACK[0x430] - 1363))
               + ((STACK[0x430] - 890) | 0xB5)
               - 697;
  JUMPOUT(0x1D0DB5A4CLL);
}

uint64_t sub_1D0DB53F4@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unint64_t v3;

  v2 = STACK[0x430] ^ 0x7CF;
  v3 = STACK[0x598];
  STACK[0x478] = (STACK[0x430] ^ 0xFFFFFFFFFFFFFA8ELL)
               + *(_QWORD *)(v1 + 8 * (int)(STACK[0x430] - 1364));
  STACK[0x648] = v3;
  LODWORD(STACK[0x654]) = 1756409290;
  STACK[0x550] = a1;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1737
                                * ((~(2 * *(_DWORD *)(v3 - 0x7299FD1B0C63AD32)) & 0x48)
                                 + (*(_DWORD *)(v3 - 0x7299FD1B0C63AD32) & 0x3F ^ (((7 * (v2 ^ 0x223)) ^ 0x596u)
                                                                                   - 536896569))
                                 + 536896106 < 0xFFFFFFC0)) ^ v2)))();
}

uint64_t sub_1D0DB5414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = STACK[0x430] - 1391;
  v5 = STACK[0x598];
  STACK[0x4B0] = v4 + *(_QWORD *)(v3 + 8 * (int)(STACK[0x430] - 1351)) - 15;
  STACK[0x500] = v5;
  STACK[0x5F8] = STACK[0x428];
  v6 = *(_DWORD *)(v5 - 0x7299FD1B0C63AD32) & 0x3F;
  *(_BYTE *)(v5 - 0x7299FD1B0C63AD76 + (v6 ^ 0x37)) = 111;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3
                                                                                 + 8
                                                                                 * (int)((928
                                                                                        * ((v6 ^ 0x37) > 0x37)) | v4))
                                                                     - ((2 * (_DWORD)v4) ^ 0x24Au)
                                                                     + 600))(-1066855060, a2, a3, 623108963);
}

uint64_t sub_1D0DB5434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48)
{
  int v48;
  int v49;
  uint64_t v50;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, unint64_t))(*(_QWORD *)(v50 + 8 * (((v48 != v48 + a48 - 13 - 20) * (3 * a48 - 35)) | (v49 + 204)))
                                                                                                - 4))(a1, 9, 1387, STACK[0x3C0], STACK[0x428]);
}

uint64_t sub_1D0DB5484@<X0>(char a1@<W1>, int a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, int a5@<W6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;

  v12 = v8 + 1351;
  v13 = (v9 + a5);
  *(_BYTE *)(a3 + v13 + 4) = *(_BYTE *)(a4 + v13) ^ *(_BYTE *)(v6 + (v13 & 0xF)) ^ *(_BYTE *)((v13 & 0xF) + a6 + 1) ^ ((v12 ^ a1) * (v13 & 0xF)) ^ *(_BYTE *)(v7 + (v13 & 0xF)) ^ 0xEF;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * (((v9 - 1 != v10 + (v12 ^ a2) - 13 - 20) * (3 * (v12 ^ a2) - 35)) | (v12 + 204)))
                            - 4))();
}

void sub_1D0DB5504()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v3 = 460628867 * (((((v2 - 200) | 0x53AD454E) ^ 0xFFFFFFFE) - (~(v2 - 200) | 0xAC52BAB1)) ^ 0xE0C438CC);
  *(_QWORD *)(v2 - 200) = STACK[0x598];
  *(_DWORD *)(v2 - 188) = -1882357493 - v3 + v0 + 25;
  *(_DWORD *)(v2 - 184) = v3 - 432370878;
  sub_1D0DB7FC0(v2 - 200);
  STACK[0x478] = ((v0 + 544) | 0x91u) + *(_QWORD *)(v1 + 8 * v0) - 697;
  JUMPOUT(0x1D0DB55A0);
}

void sub_1D0DB55AC()
{
  uint64_t v0;

  STACK[0x478] = (STACK[0x430] ^ 0x7CF) + *(_QWORD *)(v0 + 8 * (int)(STACK[0x430] - 1379)) - 701;
  JUMPOUT(0x1D0DB5A4CLL);
}

void sub_1D0DB55D8()
{
  uint64_t v0;

  STACK[0x478] = STACK[0x430] - 709 + *(_QWORD *)(v0 + 8 * (int)(STACK[0x430] - 1381)) - 701;
  JUMPOUT(0x1D0DB5A4CLL);
}

void sub_1D0DB5600()
{
  JUMPOUT(0x1D0DB5618);
}

void sub_1D0DB5634()
{
  JUMPOUT(0x1D0DB5648);
}

uint64_t sub_1D0DB5710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(~(unint64_t)((v4 ^ 0xDCu) - 629)
                                                                              + *(_QWORD *)(v6
                                                                                          + 8
                                                                                          * (v4 ^ (58 * (v5 == 63))))))(a1, a2, a3, a4, 2939450413);
}

uint64_t sub_1D0DB574C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((28 * ((v0 ^ 8u) >= ((2 * v1) ^ 0x1F0u) - 1256)) ^ v1)) - 12))();
}

uint64_t sub_1D0DB577C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(a1 + a2 + v4 - 1) = v6;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((45
                                * (((((((v3 ^ 0x6C) - 44) | 1) - 159) | 0x44u) ^ 0x26ELL) != (((((v3 ^ 0x6C) - 44) | 1) ^ 0xFFFFFFF9) & v2))) ^ (((v3 ^ 0x6C) - 44) | 1))))();
}

uint64_t sub_1D0DB57E4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v2 ^ (230 * (v1 != v0)))) - ((v2 ^ 0x26Du) + 1253) + 1252))();
}

uint64_t sub_1D0DB5824@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  char v4;
  int v5;
  uint64_t v6;
  unint64_t v7;

  v7 = a2 + a1;
  *(_BYTE *)(v7 + v2 - 1) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v7 < 0x40) * v5) ^ (v3 - 650))) - (((v3 - 1256) | 3u) ^ 7)))();
}

uint64_t sub_1D0DB5860(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(v3 + a1 + v4 - 1) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((unint64_t)(v3 + a1) < 0x40) * v6) ^ v2)) - (v1 ^ 7)))();
}

uint64_t sub_1D0DB5890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v63;
  unint64_t v64;
  int v65;
  int v66;
  int v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  unint64_t v77;
  int v78;
  _BOOL4 v80;
  int v82;
  int v83;
  int v84;
  int v85;

  STACK[0x528] = *(_QWORD *)(v69 + 8 * v63) + 701 * (v63 ^ 9u) - 1406;
  STACK[0x658] = v68;
  STACK[0x660] = v64;
  v70 = STACK[0x5D0];
  v71 = (char *)&a9 + STACK[0x5D0] - 0x44636EEC35E58BF2;
  STACK[0x668] = (unint64_t)v71;
  STACK[0x5D0] = v70 + 320;
  v72 = *(_DWORD *)(v68 - 0x7299FD1B0C63AD2ELL);
  LODWORD(STACK[0x5C4]) = v72;
  v73 = *(_DWORD *)(v68 - 0x7299FD1B0C63AD2ALL);
  LODWORD(STACK[0x5A4]) = v73;
  v74 = *(_DWORD *)(v68 - 0x7299FD1B0C63AD26);
  LODWORD(STACK[0x614]) = v74;
  v75 = *(_DWORD *)(v68 - 0x7299FD1B0C63AD22);
  LODWORD(STACK[0x56C]) = v75;
  v76 = *(unsigned __int8 *)(v68 - 0x7299FD1B0C63AD16) ^ 0x8A;
  if (v76 == 2)
  {
    LODWORD(STACK[0x4D0]) = *(_DWORD *)(v68 - 0x7299FD1B0C63AD1ELL);
    JUMPOUT(0x1D0DB67F0);
  }
  if (v76 == 1)
  {
    STACK[0x408] = v70 + 320;
    v77 = STACK[0x430];
    v78 = STACK[0x430] - 556;
    LODWORD(STACK[0x544]) = v67;
    v80 = v64 >= a63 + v70 || (unint64_t)v71 >= v64 + 64;
    return ((uint64_t (*)(void))(*(_QWORD *)(v69 + 8 * (int)(((v77 ^ 0x395) * v80) ^ v78)) - 8))();
  }
  else
  {
    v82 = (*(_DWORD *)(v68 - 0x7299FD1B0C63AD2ELL) ^ v65) + (v72 ^ v65);
    *(_DWORD *)(v68 - 0x7299FD1B0C63AD2ELL) = v82 + v65 - (v66 & (2 * v82));
    v83 = (*(_DWORD *)(v68 - 0x7299FD1B0C63AD2ALL) ^ v65) + (v73 ^ v65);
    *(_DWORD *)(v68 - 0x7299FD1B0C63AD2ALL) = v83 + v65 - (v66 & (2 * v83));
    v84 = (*(_DWORD *)(v68 - 0x7299FD1B0C63AD26) ^ v65) + (v74 ^ v65);
    *(_DWORD *)(v68 - 0x7299FD1B0C63AD26) = v84 + v65 - (v66 & (2 * v84));
    v85 = (*(_DWORD *)(v68 - 0x7299FD1B0C63AD22) ^ v65) + (v75 ^ v65);
    *(_DWORD *)(v68 - 0x7299FD1B0C63AD22) = v85 + v65 - (v66 & (2 * v85));
    STACK[0x5D0] = v70;
    return ((uint64_t (*)(void))STACK[0x528])();
  }
}

uint64_t sub_1D0DB58B0()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, unint64_t))(v1
                                                                                         + 8
                                                                                         * ((105
                                                                                           * (((v0 - 60460987) ^ 0xD42A1CA4)
                                                                                            + ((v0 - 60460987) & 0x39A8A54) == 676292927)) | (v0 - 746))))(1009298938, 4294965893, STACK[0x3C0], STACK[0x428]);
}

void sub_1D0DB5930(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W8>)
{
  int v3;

  *(_BYTE *)(a1 + (a3 + v3) + 20) = *(_BYTE *)(a2 + (a3 + v3));
  JUMPOUT(0x1D0DB58F4);
}

uint64_t sub_1D0DB5954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  v3 = STACK[0x598];
  v4 = 460628867 * ((v2 + 865504456 - 2 * ((v2 - 200) & 0x33968D90)) ^ 0x7F000FED);
  *(_QWORD *)(v2 - 200) = STACK[0x598];
  *(_DWORD *)(v2 - 188) = -1882357493 - v4 + v0 + 9;
  *(_DWORD *)(v2 - 184) = v4 - 432370878;
  v5 = sub_1D0DB7FC0(v2 - 200);
  STACK[0x478] = (v0 ^ 0x2A1) + *(_QWORD *)(v1 + 8 * v0) - 697;
  v6 = STACK[0x400];
  STACK[0x648] = v3;
  LODWORD(STACK[0x654]) = 1756409293;
  STACK[0x550] = v6;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((1737
                                                   * ((~(2 * *(_DWORD *)(v3 - 0x7299FD1B0C63AD32)) & 0x48)
                                                    + (*(_DWORD *)(v3 - 0x7299FD1B0C63AD32) & 0x3F ^ (((7 * (v0 ^ 0x82)) ^ 0x596) - 536896569))
                                                    + 536896109 < 0xFFFFFFC0)) ^ v0 ^ 0x2A1)))(v5);
}

void sub_1D0DB59F8()
{
  uint64_t v0;

  STACK[0x478] = *(_QWORD *)(v0 + 8 * (int)(STACK[0x430] - 1375));
  JUMPOUT(0x1D0DB5A4CLL);
}

void sub_1D0DB5A24()
{
  uint64_t v0;

  STACK[0x478] = *(_QWORD *)(v0 + 8 * (int)(STACK[0x430] - 1358));
  JUMPOUT(0x1D0DB5A44);
}

uint64_t sub_1D0DB5AE0(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;

  v8 = v4 + 536896156;
  if ((v8 + 1) > 0x40)
    v9 = v8 + 1;
  else
    v9 = 64;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((998 * ((((a3 - v5 - v6 + v9) < 0xF) ^ (v3 - 73)) & 1)) ^ v3)))();
}

uint64_t sub_1D0DB5BA0(int a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  _BOOL4 v7;

  v5 = v3 + v2 + 536896156;
  if ((v5 + 1) > 0x40)
    v6 = v5 + 1;
  else
    v6 = 64;
  v7 = !__CFADD__(v5, a1 + v6);
  return (*(uint64_t (**)(void))(v4 + 8 * (((v1 ^ 0x1A1) * v7) ^ v1)))();
}

uint64_t sub_1D0DB5BF8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 - a1 - 0x7299FD1B0C63AD76 + v2 >= ((v1 + 481) ^ 0x37DuLL))
                                * (((v1 - 702753177) & 0x29E32B4F) + 455)) ^ v1)))();
}

uint64_t sub_1D0DB5C60@<X0>(int a1@<W2>, _OWORD *a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  *(_OWORD *)(v4 + (v2 + a1)) = *a2;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v7
                                                               + 8
                                                               * ((54 * (((v5 + 1) & 0x1FFFFFFF0) - v3 != -380)) ^ (v6 - 18)))
                                                   - 8))(v3 - 380, v3 - 380);
}

uint64_t sub_1D0DB5CC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W5>, uint64_t a4@<X8>)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)(v6 + (v5 + a2)) = *(_OWORD *)(a4 + a2);
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (((v7 != a2) * a3) ^ v4)) - 8))(a1, a2 + a1);
}

uint64_t sub_1D0DB5CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * (((167 * (v5 ^ 0x189)
                                                                                            + (v5 ^ 0x318))
                                                                                           * (v6 == v7)) ^ v5)))(a1, a2, 4135613344, a4, a5, 1816);
}

uint64_t sub_1D0DB5D40@<X0>(int a1@<W2>, int a2@<W5>, unsigned int a3@<W6>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(v6 + (v7 + a1)) = *(_BYTE *)(v8 + a5 + a4);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 + v7 + (v5 ^ a3) + 1400 > 0x3F) * a2) ^ v5)))();
}

void sub_1D0DB5D84()
{
  int v0;
  int v1;
  uint64_t v2;

  LODWORD(STACK[0x510]) = v1;
  STACK[0x528] = *(_QWORD *)(v2 + 8 * v0);
  JUMPOUT(0x1D0DB613CLL);
}

uint64_t sub_1D0DB5DA0()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  _BOOL4 v4;

  v3 = ((v1 + 106) | 0x111) + v0 - 1624587545;
  v4 = v3 > 0x7DB7638;
  if (v3 < 0x7DB7638)
    v4 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((92 * !v4) ^ v1)) - ((v1 - 2119031839) & 0x7E4DDD7E) + 1394))();
}

uint64_t sub_1D0DB602C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  v4 = 535753261 * ((((2 * (v3 - 200)) | 0x32FD6458) - (v3 - 200) - 427733548) ^ 0x138ABC03);
  *(_DWORD *)(v3 - 192) = v0 - v4 - 1383950626;
  *(_DWORD *)(v3 - 188) = (v1 - 1289) ^ v4;
  *(_QWORD *)(v3 - 200) = v2;
  v5 = sub_1D0D866A4(v3 - 200);
  return ((uint64_t (*)(uint64_t))STACK[0x478])(v5);
}

uint64_t sub_1D0DB60A4@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, int a6@<W8>)
{
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL4 v12;
  unsigned int v13;
  int v14;
  _BOOL4 v15;

  v12 = v7 < a1;
  *(_BYTE *)(v10 - 0x7299FD1B0C63AD76 + (v8 ^ a4 ^ a5) + v9 + v6) = *(_BYTE *)(STACK[0x550]
                                                                               + (a2 + a6 + 698));
  v13 = a6 + 1 + a3;
  v14 = v12 ^ (v13 < a1);
  v15 = v13 < v7;
  if (!v14)
    v12 = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((v12 * a4) ^ v8 ^ a4)) - 8))();
}

void sub_1D0DB611C()
{
  JUMPOUT(0x1D0DB60C0);
}

void sub_1D0DB6124()
{
  JUMPOUT(0x1D0DB5EC4);
}

uint64_t sub_1D0DB6258@<X0>(int32x4_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int8x16_t a46,uint64_t a47,int a48,int a49,int32x4_t a50)
{
  int v50;
  const char *v51;
  uint64_t v52;
  int8x16_t v53;
  uint8x16_t v54;
  uint16x8_t v55;
  int8x16_t v56;
  uint16x8_t v57;
  int8x16_t v58;
  uint8x16_t v59;
  uint16x8_t v60;
  uint16x8_t v61;
  int8x16_t v62;
  int8x16_t v63;
  int8x16_t v64;
  int8x16_t v65;
  uint8x16_t v66;
  int8x16_t v69;
  int8x16_t v74;
  int8x16x4_t v76;

  v76 = vld4q_s8(v51);
  v53.i64[0] = 0xEFEFEFEFEFEFEFEFLL;
  v53.i64[1] = 0xEFEFEFEFEFEFEFEFLL;
  v54 = (uint8x16_t)veorq_s8(v76.val[0], v53);
  v55 = vmovl_high_u8(v54);
  v56 = (int8x16_t)vmovl_high_u16(v55);
  v57 = vmovl_u8(*(uint8x8_t *)v54.i8);
  v58 = (int8x16_t)vmovl_high_u16(v57);
  v59 = (uint8x16_t)veorq_s8(v76.val[1], v53);
  v60 = vmovl_u8(*(uint8x8_t *)v59.i8);
  v61 = vmovl_high_u8(v59);
  v62 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v60.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8));
  v63 = vorrq_s8((int8x16_t)vshll_high_n_u16(v60, 8uLL), v58);
  v64 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v61.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v55.i8));
  v65 = vorrq_s8((int8x16_t)vshll_high_n_u16(v61, 8uLL), v56);
  v66 = (uint8x16_t)veorq_s8(v76.val[2], v53);
  _Q17 = (int8x16_t)vmovl_high_u8(v66);
  _Q16 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
  v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL);
  __asm { SHLL2           V16.4S, V16.8H, #0x10 }
  v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL);
  __asm { SHLL2           V17.4S, V17.8H, #0x10 }
  v76.val[0] = veorq_s8(v76.val[3], v53);
  v76.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v76.val[0].i8);
  v76.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v76.val[0]);
  v76.val[2] = vorrq_s8(vorrq_s8(v62, v69), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v76.val[1].i8), 0x18uLL));
  v76.val[1] = vorrq_s8(vorrq_s8(v63, _Q16), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v76.val[1]), 0x18uLL));
  v76.val[3] = vorrq_s8(vorrq_s8(v64, v74), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v76.val[0].i8), 0x18uLL));
  v76.val[0] = vorrq_s8(vorrq_s8(v65, _Q17), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v76.val[0]), 0x18uLL));
  a1[2] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v76.val[3], (int32x4_t)v76.val[3]), a46)), a50);
  a1[3] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v76.val[0], (int32x4_t)v76.val[0]), a46)), a50);
  *a1 = vaddq_s32(vsubq_s32((int32x4_t)v76.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v76.val[2], (int32x4_t)v76.val[2]), a46)), a50);
  a1[1] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v76.val[1], (int32x4_t)v76.val[1]), a46)), a50);
  return ((uint64_t (*)(void))(*(_QWORD *)(v52 + 8 * ((553 * ((v50 + 1355516884) > 0xF)) ^ (a49 - 243)))
                            - 4))();
}

uint64_t sub_1D0DB6504(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((890 * ((a6 + 1 + v6) < 0x20)) ^ a1)) - 4))();
}

uint64_t sub_1D0DB65D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  uint64_t v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((((a7 + 1 + v7) < 0x30) * v9) ^ v8)) - 4))();
}

uint64_t sub_1D0DB66B0(int a1, uint64_t a2, int a3)
{
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((26 * ((a3 + 1 + v3) < 0x40)) ^ a1)) - 4))();
}

uint64_t sub_1D0DB6778()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;

  LODWORD(STACK[0x5C4]) = v0;
  LODWORD(STACK[0x614]) = v1;
  LODWORD(STACK[0x5A4]) = v3;
  LODWORD(STACK[0x56C]) = v2;
  LODWORD(STACK[0x544]) = v6 + 64;
  v8 = STACK[0x408];
  v9 = (*(_DWORD *)(v7 - 0x7299FD1B0C63AD2ELL) ^ v4) + (v0 ^ v4);
  *(_DWORD *)(v7 - 0x7299FD1B0C63AD2ELL) = v9 + v4 - (v5 & (2 * v9));
  v10 = (*(_DWORD *)(v7 - 0x7299FD1B0C63AD2ALL) ^ v4) + (v3 ^ v4);
  *(_DWORD *)(v7 - 0x7299FD1B0C63AD2ALL) = v10 + v4 - (v5 & (2 * v10));
  v11 = (*(_DWORD *)(v7 - 0x7299FD1B0C63AD26) ^ v4) + (v1 ^ v4);
  *(_DWORD *)(v7 - 0x7299FD1B0C63AD26) = v11 + v4 - (v5 & (2 * v11));
  v12 = (*(_DWORD *)(v7 - 0x7299FD1B0C63AD22) ^ v4) + (v2 ^ v4);
  *(_DWORD *)(v7 - 0x7299FD1B0C63AD22) = v12 + v4 - (v5 & (2 * v12));
  STACK[0x5D0] = v8 - 320;
  return ((uint64_t (*)(uint64_t))STACK[0x528])(-1066855060);
}

uint64_t sub_1D0DB682C@<X0>(int a1@<W0>, int a2@<W4>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unint64_t v14;

  v11 = *(_DWORD *)(a3 + 4 * (a2 + v5 - 8)) ^ *(_DWORD *)(a3 + 4 * (a2 + v5 - 3));
  v12 = v11 + v10 - (v8 & (2 * v11));
  v13 = *(_DWORD *)(a3 + 4 * ((a1 ^ (2 * v3) ^ (a2 - 826)) + v5)) ^ *(_DWORD *)(a3
                                                                                              + 4
                                                                                              * (a2 + v5 - 14));
  HIDWORD(v14) = v13 ^ v12 ^ v6;
  LODWORD(v14) = v13 ^ ~v12;
  *(_DWORD *)(a3 + 4 * (v4 + a2)) = (v14 >> 31) + v10 - (v8 & (2 * (v14 >> 31)));
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v4 + 1 + a2) > 0x4F) * v7) ^ v3)))();
}

uint64_t sub_1D0DB68B8()
{
  int v0;
  uint64_t v1;

  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

void sub_1D0DB69B0()
{
  JUMPOUT(0x1D0DB68F4);
}

uint64_t sub_1D0DB69C8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v1 - 1355516862) < 0x28) * v2) ^ v0 ^ v2)) - 8))();
}

void sub_1D0DB6A9C()
{
  JUMPOUT(0x1D0DB69D0);
}

uint64_t sub_1D0DB6AB4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v9 + 8 * ((((a2 + 1 + v7) < 0x3C) * a6) ^ v6))
                                         - 8))((v8 + 60));
}

uint64_t sub_1D0DB6B70(int a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((((a1 + 1 + v2) > 0x4F) * v3) ^ v1)) - 8))();
}

void sub_1D0DB6C1C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unint64_t v12;
  int v13;

  LODWORD(STACK[0x5C4]) = v5;
  LODWORD(STACK[0x5A4]) = v9;
  LODWORD(STACK[0x614]) = v6;
  LODWORD(STACK[0x56C]) = v8;
  LODWORD(STACK[0x544]) = v10 + 80;
  v12 = STACK[0x658];
  v13 = *(_DWORD *)(STACK[0x658] - 0x7299FD1B0C63AD1ELL);
  LODWORD(STACK[0x4D0]) = v7;
  *(_DWORD *)(v12 - 0x7299FD1B0C63AD1ELL) = (v13 ^ v11)
                                          + (v7 ^ v11)
                                          + v11
                                          - ((a5 + (a2 ^ 0x76E) - 1402) & (2 * ((v13 ^ v11) + (v7 ^ v11))));
  JUMPOUT(0x1D0DB6CB8);
}

uint64_t sub_1D0DB6D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,unsigned int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  uint64_t v60;
  unint64_t v61;
  int v62;
  int v64;

  v61 = STACK[0x500];
  v62 = *(unsigned __int8 *)(STACK[0x500] - 0x7299FD1B0C63AD16) ^ 0x8A;
  if (v62 == 2)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * (int)(((*(_DWORD *)(v61 - 0x7299FD1B0C63AD1ALL) != 1894502684) * (LODWORD(STACK[0x218]) - 464)) ^ (STACK[0x430] - 37))) - 12))(a1, a2, 2832520733, a4, 1864834578, 1462447486, 2746811595, 3981430787);
  if (v62 == 1)
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * (int)((729 * (((*(_DWORD *)(v61 - 0x7299FD1B0C63AD1ALL) == 1894502684) ^ (STACK[0x430] + 1)) & 1)) ^ (STACK[0x430] - 919)))
                                                                                                 - 8))(353649618, 2809380125, 33, a4, a52, a6, 2746811595);
  v64 = (STACK[0x430] - 954) | 0x400;
  STACK[0x600] = 91;
  *(_BYTE *)(v61 - 0x7299FD1B0C63AD1BLL) = ((a60 + ((v64 + 120) | 0x42)) ^ 0xBA) * (a60 - 117);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 + 8 * ((770 * (STACK[0x600] == 0)) ^ v64))
                                                                                                - 4))(353649618, 2809380125, 33, a4, 2939450413, 1403, 2746811595);
}

void sub_1D0DB76B4()
{
  JUMPOUT(0x1D0DB7670);
}

uint64_t sub_1D0DB76BC()
{
  return ((uint64_t (*)(void))STACK[0x4B0])();
}

uint64_t sub_1D0DB76EC()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  int v5;

  v4 = ((v1 - 1261) ^ (v3 - 131) ^ LODWORD(STACK[0x63C])) + (v0 ^ v3);
  *(_DWORD *)(STACK[0x3C0] + 52) = ((v4 % 0x2710) ^ 0xFEDF4CEE) + 1434318808 + ((2 * (v4 % 0x2710)) & 0x19DC);
  v5 = STACK[0x644];
  LODWORD(STACK[0x508]) = STACK[0x644];
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1288 * (v5 == v3)) ^ (v1 - 1261))) - 8))();
}

void sub_1D0DB777C()
{
  _DWORD *v0;

  *v0 = STACK[0x5A0];
  v0[85] = STACK[0x514];
  v0[86] = STACK[0x484];
  v0[87] = STACK[0x474];
  v0[88] = STACK[0x4D8];
  JUMPOUT(0x1D0DB77D8);
}

void sub_1D0DB77C0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  STACK[0x5D0] -= 1616;
  LODWORD(STACK[0x508]) = a4 + 42;
  JUMPOUT(0x1D0DB77D4);
}

void sub_1D0DB77E4()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 + 32) = v0 | 4;
}

uint64_t sub_1D0DB77EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unint64_t v4;
  int v5;
  uint64_t v6;

  STACK[0x368] = v4;
  LODWORD(STACK[0x540]) = a4 - 14;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)(((STACK[0x368] != 0) * (((v5 + 707564666) & 0xD5D367BB) + 626)) ^ (v5 - 970)))
                            - 8))();
}

uint64_t sub_1D0DB797C()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (38 * ((v0 & 0xFFFFFFFE) == 354595050))))
                            - (v1 + 452)
                            - ((701 * (v1 ^ 0x2D0u)) ^ 0xFFFFFFFFFFFFFE08)))();
}

uint64_t sub_1D0DB79C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  int v52;

  v48 = STACK[0x530];
  v49 = (LODWORD(STACK[0x4DC]) ^ 0x3B9BBFEB) - 17960065 + ((2 * LODWORD(STACK[0x4DC])) & 0x77377FD6);
  v50 = 1755732067 * ((-2 - ((~(v47 - 200) | 0x111A9AD9) + ((v47 - 200) | 0xEEE56526))) ^ 0xCFDC2702);
  *(_QWORD *)(v47 - 168) = a41;
  *(_QWORD *)(v47 - 160) = a42;
  *(_DWORD *)(v47 - 152) = v50 + 1344963385 + v42;
  *(_QWORD *)(v47 - 144) = v44;
  *(_DWORD *)(v47 - 184) = v49 ^ v50;
  *(_DWORD *)(v47 - 180) = v50 + v45 - 595;
  *(_BYTE *)(v47 - 176) = 99 * ((-2 - ((~(v47 + 56) | 0xD9) + ((v47 + 56) | 0x26))) ^ 2) + 122;
  *(_QWORD *)(v47 - 200) = v48;
  *(_QWORD *)(v47 - 192) = v43;
  v51 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8EC5D70 + (v45 ^ 0x418)) - 12))(v47 - 200);
  v52 = *(_DWORD *)(v47 - 148);
  LODWORD(STACK[0x540]) = v52;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v46 + 8 * ((637 * (v52 == (v45 ^ 0x53B) - 623069427)) ^ v45))
                                          - 8))(v51);
}

uint64_t sub_1D0DB7AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(void))(*(_QWORD *)(v39
                                        + 8
                                        * (v38 ^ (2
                                                * ((LODWORD(STACK[0x50C]) ^ 0xDADCBDC0 ^ (v38 + 772654158) & 0xD1F23F7E) == a38 - 1882424053))))
                            - 4))();
}

uint64_t sub_1D0DB7B3C()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);

  LODWORD(STACK[0x540]) = v1 - 127;
  v5 = LODWORD(STACK[0x540]);
  v6 = 1224239923 * (((v2 | 0x318F640A10694AAFLL) - (v2 & 0x318F640A10694AAFLL)) ^ 0x19D5D163E2DAB778);
  *(_QWORD *)(v4 - 160) = 623108960 - v6;
  *(_QWORD *)(v4 - 184) = v5 ^ v6;
  *(_DWORD *)(v4 - 172) = v0 - 339837321 + v6;
  *(_DWORD *)(v4 - 168) = v0 - 339837321 - v6 - 6;
  *(_DWORD *)(v4 - 176) = v6 + v0 - 1501687246;
  *(_DWORD *)(v4 - 200) = v6 ^ (v0 - 339837321) ^ 0x4C;
  *(_DWORD *)(v4 - 196) = -1224239923 * (((v2 | 0x10694AAF) - (v2 & 0x10694AAF)) ^ 0xE2DAB778);
  v7 = ((uint64_t (*)(uint64_t))STACK[0x370])(v4 - 200);
  STACK[0x368] = 0;
  v8 = (uint64_t (*)(uint64_t))(*(_QWORD *)(v3 + 8 * *(int *)(v4 - 192)) - 4);
  LODWORD(STACK[0x2F4]) = 629839622;
  return v8(v7);
}

void sub_1D0DB7B4C()
{
  JUMPOUT(0x1D0DB7B5CLL);
}

void sub_1D0DB7BA4(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  int v3;

  v3 = a2 + 970;
  ((void (*)(_QWORD, uint64_t, _QWORD))STACK[0x2D8])(*(unsigned int *)STACK[0x2D0], a1, (LODWORD(STACK[0x2F4]) - 629841024 + a2 + 970));
  *(_DWORD *)(v2 - 200) = (v3 + 2138961958) ^ (1374699841
                                             * ((((v2 - 200) | 0xA6087EC5) - ((v2 - 200) & 0xA6087EC5)) ^ 0xCBFC66CC));
  sub_1D0DC511C((_DWORD *)(v2 - 200));
  JUMPOUT(0x1D0DB7C24);
}

uint64_t sub_1D0DB7C68(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  unint64_t v4;
  BOOL v5;

  LODWORD(STACK[0x540]) = v2 - 14;
  v4 = STACK[0x530];
  v5 = LODWORD(STACK[0x4DC]) == 0;
  STACK[0x4C0] = LODWORD(STACK[0x4DC]);
  return ((uint64_t (*)(uint64_t, unint64_t))(*(_QWORD *)(v3
                                                                        + 8
                                                                        * ((v5 ^ (v1 + 117)) & 1 | (v1 - 964)))
                                                            - ((v1 - 378) | 0x19Du)
                                                            + 1425))(a1, v4);
}

uint64_t sub_1D0DB7CD0@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v4 = ((unint64_t)&STACK[0x4C0] ^ 0xDEBFDDFF7FEDFFF7)
     + 0x3BDC7FEFDAFB1F09
     + ((2 * (_QWORD)&STACK[0x4C0]) & 0xBD7FBBFEFFDBFFE0);
  v5 = v2 - 1;
  STACK[0x4C0] = v5;
  *(_BYTE *)(a1 + v5) = (v4 + ((3 * (a2 ^ 0xF)) ^ 0xEC) - 73) * (v4 ^ 0xBA);
  return (*(uint64_t (**)(void))(v3 + 8 * ((990 * (STACK[0x4C0] == 0)) ^ a2)))();
}

void sub_1D0DB7D68()
{
  JUMPOUT(0x1D0DB7D28);
}

void sub_1D0DB7D70(uint64_t a1, uint64_t a2)
{
  ((void (*)(_QWORD, uint64_t, _QWORD))STACK[0x2D8])(*(unsigned int *)STACK[0x2D0], a2, 0);
  JUMPOUT(0x1D0DB7DA4);
}

uint64_t sub_1D0DB7E70()
{
  uint64_t v0;
  int v1;
  uint64_t (*v2)(void);

  STACK[0x368] = 0;
  v1 = *(_DWORD *)(STACK[0x3C0] + 56);
  *(_DWORD *)(STACK[0x3C0] + 56) = v1 + 1;
  v2 = (uint64_t (*)(void))(*(_QWORD *)(v0
                                     + 8
                                     * (int)((1777
                                            * (v1 - 522992133 < ((STACK[0x430] - 1316) ^ 0xFFFFFFAC))) ^ (STACK[0x430] - 1316)))
                         - 4);
  LODWORD(STACK[0x2F4]) = 629839622;
  return v2();
}

void sub_1D0DB7ECC()
{
  int v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 200) = (v0 + 2138963274) ^ (1374699841
                                             * (((v1 - 200) & 0x38489C1B | ~((v1 - 200) | 0x38489C1B)) ^ 0xAA437BED));
  sub_1D0DC511C((_DWORD *)(v1 - 200));
  *(_QWORD *)(v1 - 192) = STACK[0x260];
  *(_QWORD *)(v1 - 176) = STACK[0x258];
  *(_DWORD *)(v1 - 200) = v0 - 1224239923 * ((v1 - 200 - 2 * ((v1 - 200) & 0x240E3B28) + 604912424) ^ 0xD6BDC6FF) + 867;
  *(_BYTE *)(v1 - 184) = 95 - 51 * ~(v1 + 56 - 2 * ((v1 + 56) & 0x28) + 40);
  ((void (*)(uint64_t))STACK[0x250])(v1 - 200);
  STACK[0x368] = 0;
  LODWORD(STACK[0x2F4]) = 629839622;
  JUMPOUT(0x1D0DB7B60);
}

uint64_t sub_1D0DB7FC0(uint64_t result)
{
  uint64_t v1;
  __int16 v2;
  int v3;
  int v4;

  v1 = *(_QWORD *)result;
  v2 = *(_DWORD *)(result + 16) - -23677 * ((result & 0x4A61 | ~(result | 0x4A61)) ^ 0x37E3);
  *(_DWORD *)(v1 - 0x7299FD1B0C63AD16) = ((v2 & 0x1FF ^ 0x55) - ((2 * (v2 & 0x1FF ^ 0x55)) & 0x22E) + 1770580759) ^ 0x706F0A88;
  *(_QWORD *)(v1 - 0x7299FD1B0C63AD36) = 0x8453FA77C478CA45;
  *(_DWORD *)(v1 - 0x7299FD1B0C63AD1ALL) = 1894502684;
  v3 = v2 ^ 0x40;
  if (v3 == 1)
  {
    v4 = 1894502700;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x7299FD1B0C63AD1ELL) = -2108073934;
    v4 = 1894502704;
LABEL_5:
    *(_QWORD *)(v1 - 0x7299FD1B0C63AD2ELL) = 0xAE46124B26CE9AC3;
    *(_QWORD *)(v1 - 0x7299FD1B0C63AD26) = 0x51B9EDB4D931653CLL;
    *(_DWORD *)(v1 - 0x7299FD1B0C63AD1ALL) = v4;
  }
  *(_DWORD *)(result + 8) = 999040456;
  return result;
}

void sub_1D0DB8120(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 32) + 460628867 * ((2 * (a1 & 0x1FF5D3B4) - a1 - 536204213) ^ 0xAC9CAE36);
  v3 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 24);
  v4 = *(unint64_t **)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(v3 - 0x32EE9BBD2B2B4D7BLL);
  v8 = &STACK[0x5005140540A45D7E];
  v9 = v5;
  v12 = (1755732067 * ((&v8 & 0x4304C8D9 | ~(&v8 | 0x4304C8D9)) ^ 0x623D8AFD)) ^ (v1 + 1013);
  v13 = v6;
  v10 = v3;
  v11 = v2;
  ((void (*)(unint64_t **))((char *)*(&off_1E8EC5D70 + v1 - 516) - 4))(&v8);
  v7 = *(_QWORD *)(v3 - 0x32EE9BBD2B2B4D83);
  LODWORD(v10) = v1
               + 1374699841 * ((&v8 & 0x3D063B47 | ~(&v8 | 0x3D063B47)) ^ 0xAF0DDCB1)
               - 264;
  v8 = &STACK[0x5005140540A45D6E];
  v9 = v7;
  sub_1D0DBA800((uint64_t)&v8);
  HIDWORD(v9) = (1755732067 * ((&v8 - 159091948 - 2 * (&v8 & 0xF6847314)) ^ 0x2842CECF)) ^ (v1 + 263);
  v8 = v4;
  sub_1D0DBAF28((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_1D0DB8348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  *(_DWORD *)(v18 - 112) = (v17 + 1213) ^ (1755732067
                                         * ((((v18 - 144) | 0x4C54933A) - (v18 - 144) + ((v18 - 144) & 0xB3AB6CC0)) ^ 0x92922EE1));
  *(_QWORD *)(v18 - 104) = v13;
  *(_QWORD *)(v18 - 144) = v13;
  *(_QWORD *)(v18 - 136) = v15;
  *(_QWORD *)(v18 - 128) = v16;
  *(_QWORD *)(v18 - 120) = a12;
  v19 = a11(v18 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8
                                                      * ((61 * (v14 - 1 >= 17 * (v17 ^ 0x190u) + 2147483256)) ^ v17 ^ 0x3C8))
                                          - 12))(v19);
}

uint64_t sub_1D0DB83F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_DWORD *)(v7 - 136) = v6 - 1374699841 * ((~((v7 - 144) | 0x2708FB5) + ((v7 - 144) & 0x2708FB5)) ^ 0x907B6843) + 1171;
  *(_QWORD *)(v7 - 120) = v3;
  *(_QWORD *)(v7 - 112) = v4;
  *(_QWORD *)(v7 - 144) = v2;
  *(_QWORD *)(v7 - 128) = v2;
  ((void (*)(uint64_t))((char *)*(&off_1E8EC5D70 + v6 - 275) - 4))(v7 - 144);
  v8 = 460628867 * ((v7 - 798053516 - 2 * ((v7 - 144) & 0xD06EAC04)) ^ 0x9CF82E79);
  *(_QWORD *)(v7 - 136) = v0;
  *(_DWORD *)(v7 - 144) = v8 + v5 - 908467203;
  *(_DWORD *)(v7 - 128) = v8 + v6 - 117;
  v9 = sub_1D0DC2304(v7 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((86
                                                        * (((-59 * (v6 ^ 0x84)) ^ (*(_DWORD *)(v7 - 140) == 1839851021)) & 1)) ^ v6))
                                          - 12))(v9);
}

uint64_t sub_1D0DB8508()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((61 * (v2 - 1 >= 17 * (v1 ^ 0x258u) + 2147483256)) ^ v1)) - 12))();
}

uint64_t sub_1D0DB8544()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t *v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *v8;
  v6 = 1755732067 * ((v4 - 144) ^ 0xDEC6BDDB);
  *(_DWORD *)(v4 - 144) = v1 - v6 - 372;
  *(_DWORD *)(v4 - 128) = v6 ^ 0x3EA97B8E;
  *(_QWORD *)(v4 - 136) = v10;
  sub_1D0DB8DB4((_DWORD *)(v4 - 144));
  *(_DWORD *)(v4 - 112) = (v1 + 1013) ^ v6;
  *(_QWORD *)(v4 - 104) = v0;
  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v10;
  *(_QWORD *)(v4 - 144) = v0;
  *(_QWORD *)(v4 - 136) = v2;
  v9(v4 - 144);
  *(_DWORD *)(v4 - 128) = v1
                        + 1374699841 * ((2 * ((v4 - 144) & 0x575707B0) - (v4 - 144) + 682162248) ^ 0x455CE041)
                        - 264;
  *(_QWORD *)(v4 - 144) = v5;
  *(_QWORD *)(v4 - 136) = v0;
  return sub_1D0DBA800(v4 - 144);
}

uint64_t sub_1D0DB8640(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))qword_1E8EC2370[((*(_DWORD *)(a2 + 4) == 1811329861) | (8
                                                                                                 * (*(_DWORD *)(a2 + 4) == 1811329861))) ^ 0x105u])(4294925278);
}

uint64_t sub_1D0DB867C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 468) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return (*(uint64_t (**)(_QWORD))(v2 + 9968))(0);
}

uint64_t sub_1D0DB86D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;

  *(_BYTE *)(a1 + (v7 + v5)) = *(_BYTE *)(v4 + (v7 + v5));
  return (*(uint64_t (**)(_QWORD))(v1 + 8 * (((((v7 - 1 == v2) ^ v3) & 1) * v6) ^ v3)))(0);
}

void sub_1D0DB8710(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;

  v1 = 1225351577 * ((a1 & 0xE03BD8A7 | ~(a1 | 0xE03BD8A7)) ^ 0x3C5EFF4E);
  v2 = *(_DWORD *)(a1 + 56) + v1;
  if (*(_QWORD *)(a1 + 48) | *(_QWORD *)(a1 + 64))
    v3 = *(_DWORD *)(a1 + 72) + v1 == 1340507626;
  else
    v3 = 1;
  v4 = !v3;
  __asm { BR              X9 }
}

uint64_t sub_1D0DB885C@<X0>(int a1@<W8>)
{
  _QWORD *v1;
  uint64_t v2;
  BOOL v4;

  v4 = v1[2] == 0x1363B1D6ED5C3F03 || (v1[1] | v1[4]) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((1902 * (((a1 - 102) ^ v4) & 1)) ^ a1)) - 12))();
}

uint64_t sub_1D0DB88B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29)
{
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *v31;
  *(_DWORD *)(v30 - 0x1363B1D6ED5C3F03) = 0;
  return ((uint64_t (*)(char *, char *, char *, char *))(*(_QWORD *)(v32
                                                                             + 8
                                                                             * (((v33 == 0x5005140540A45D4ELL)
                                                                               * (((v29 - 739) | 0x49) ^ 0xE1)) ^ v29))
                                                                 - 12))(&a20, &a27, &a22, &a29);
}

uint64_t sub_1D0DB8948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31)
{
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;

  v36 = 1755732067 * (((v35 - 144) & 0xD61CC7D5 | ~((v35 - 144) | 0xD61CC7D5)) ^ 0xF72585F1);
  *(_DWORD *)(v35 - 144) = v31 - v36 - 290;
  *(_QWORD *)(v35 - 136) = &a31 + v32;
  *(_DWORD *)(v35 - 128) = v36 ^ 0x3EAA7B8E;
  sub_1D0DB8DB4((_DWORD *)(v35 - 144));
  return ((uint64_t (*)(char *, char *, char *, char *))(*(_QWORD *)(v34
                                                                             + 8
                                                                             * ((19
                                                                               * (((v33 == 0) ^ (7 * (v31 ^ 0x98))) & 1)) ^ (v31 + 688)))
                                                                 - ((v31 - 2139582978) & 0x7F8772C7)
                                                                 + 703))(&a20, &a27, &a22, &a29);
}

uint64_t sub_1D0DB8A84@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  _BOOL4 v24;
  uint64_t v25;

  v21 = (a1 - 547) | 0x208;
  v22 = ((((2 * (v20 - 144)) | 0x1F1B3018) - (v20 - 144) + 1886545908) ^ 0xC31B1A71) * v11;
  *(_QWORD *)(v20 - 128) = v14;
  *(_DWORD *)(v20 - 120) = v15 + v22 - 1140557939 + v21;
  *(_QWORD *)(v20 - 144) = v17;
  *(_DWORD *)(v20 - 136) = v22 + a1 + 21;
  v23 = v12;
  v24 = v13 == 0;
  ((void (*)(uint64_t))(*(_QWORD *)(v12 + 8 * (a1 ^ 0x271)) - 4))(v20 - 144);
  *(_DWORD *)(v20 - 128) = v21 - ((v20 - 144) ^ 0xFA9EF356) * v18 - 417;
  *(_QWORD *)(v20 - 144) = a9;
  *(_QWORD *)(v20 - 136) = v16;
  (*(void (**)(uint64_t))(v23 + 8 * (v21 - 649)))(v20 - 144);
  *(_DWORD *)(v20 - 112) = v21
                         - 460628867
                         * ((-1760783398 - ((v20 - 144) | 0x970C93DA) + ((v20 - 144) | 0x68F36C25)) ^ 0x2465EE58)
                         - 89;
  *(_QWORD *)(v20 - 104) = a10;
  *(_QWORD *)(v20 - 136) = v16;
  *(_QWORD *)(v20 - 128) = a9;
  *(_QWORD *)(v20 - 144) = a11;
  *(_QWORD *)(v20 - 120) = a8;
  v25 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * (v21 ^ 0x22A)) - 8))(v20 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * (v21 | (7 * v24)))
                                          - (((v21 - 546) - 4) ^ (v21 - 546))))(v25);
}

uint64_t sub_1D0DB8C70()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t result;
  uint64_t v8;
  int v9;
  _DWORD *v10;

  v6 = 1734042137 * ((v5 + 1558876508 - 2 * ((v5 - 144) & 0x5CEA91EC)) ^ 0x2452A1);
  *(_DWORD *)(v5 - 120) = v4 - v6 + 124;
  *(_DWORD *)(v5 - 144) = v1 - v6 + (v4 ^ 0x4188AFE);
  *(_QWORD *)(v5 - 136) = v8;
  *(_QWORD *)(v5 - 128) = v2;
  result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v4 - 13)))(v5 - 144);
  *v10 = v9;
  *(_DWORD *)(v0 + 40) = -623068998;
  return result;
}

uint64_t sub_1D0DB8DB4(_DWORD *a1)
{
  unsigned int v1;
  unsigned int v2;
  int v3;
  BOOL v4;
  unsigned int v5;
  uint64_t v6;

  v1 = 1755732067 * ((a1 & 0x1C74C11D | ~(a1 | 0x1C74C11D)) ^ 0x3D4D8339);
  v2 = *a1 + v1;
  v3 = a1[4] ^ v1;
  v5 = v3 - 1051294605;
  v4 = v3 - 1051294605 < 0;
  LODWORD(v6) = 1051294605 - v3;
  if (v4)
    v6 = v6;
  else
    v6 = v5;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E8EC5D70 + (int)(v2 - 6))
                              + (int)(v2 ^ (4 * (v6 != ((2 * (_DWORD)v6) & 0x2B8E84E6)))))
                            - 12))();
}

void sub_1D0DB8E58(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  **(_DWORD **)(v1 - 0x5005140540A45D46) = (v2 + 365380211) ^ 0x53E31EF8;
  *(_DWORD *)(v1 - 0x5005140540A45D4ALL) = a1 + 1;
}

void sub_1D0DB8EB0()
{
  uint64_t v0;
  int v1;

  v0 = MEMORY[0x1E0C80A78]();
  v1 = *(_DWORD *)(v0 + 32) + 1225351577 * ((2 * (v0 & 0x55336398) - v0 - 1429431193) ^ 0x89564471);
  __asm { BR              X13 }
}

uint64_t sub_1D0DB9018()
{
  int v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(v3 + v1) = v0;
  *(_QWORD *)(v5 - 144) = v3;
  *(_QWORD *)(v5 - 136) = v4;
  *(_DWORD *)(v5 - 128) = (v2 ^ 0x651)
                        + 1374699841
                        * ((((v5 - 144) ^ 0x1F1AE990) - 470279805 - 2 * (((v5 - 144) ^ 0x1F1AE990) & 0xE3F81983)) ^ 0x9116E81A)
                        - 743;
  return sub_1D0DBA800(v5 - 144);
}

void sub_1D0DBA2E8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BR              X9 }
}

void sub_1D0DBA36C()
{
  _DWORD *v0;

  *v0 = -2005189270;
}

uint64_t sub_1D0DBA62C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))(qword_1E8EC2370[(485 * (*(_DWORD *)(a2 + 4) == 1811329861)) ^ 0x2B8u] - 12))(4294925278);
}

uint64_t sub_1D0DBA670@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 448) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 5504) - 12))(0);
}

void sub_1D0DBA6D8()
{
  JUMPOUT(0x1D0DBA6A8);
}

void sub_1D0DBA6E4(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  v2 = *((_QWORD *)*(&off_1E8EC5D70 + v1 - 137)
       + ((214
         * (((uint64_t (*)(uint64_t, uint64_t))*(&off_1E8EC5D70 + v1 - 293))(32, 0x101004023FF3BD5) != 0)) ^ v1))
     - 8;
  __asm { BR              X8 }
}

uint64_t sub_1D0DBA780(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)result = 0;
  *(_QWORD *)(result + 8) = 0x398D2557398D2557;
  *(_QWORD *)(result + 16) = 0x5FBF6A2F12D8DE48;
  *(_DWORD *)(result + 24) = -623068998;
  *(_QWORD *)(v2 - 0x5E9AF8031DC7FF2FLL) = result + 0x4FDE89866017883;
  *((_DWORD *)v1 + 2) = -623068998;
  return result;
}

uint64_t sub_1D0DBA800(uint64_t a1)
{
  unsigned int v1;
  _BOOL4 v2;

  v1 = *(_DWORD *)(a1 + 16) - 1374699841 * ((-2 - ((a1 | 0x5548FCDC) + (~(_DWORD)a1 | 0xAAB70323))) ^ 0xC7431B2A);
  v2 = *(_QWORD *)(a1 + 8) == *(_QWORD *)a1;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E8EC5D70 + (int)(v1 - 114)) + (int)(((4 * v2) | (16 * v2)) ^ v1))
                            - (v1 ^ 0x143)))();
}

uint64_t sub_1D0DBA884@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  v4 = *(_DWORD *)(v2 - 0x5005140540A45D4ALL);
  v5 = v4 - 33836109;
  if (v4 - 33836109 < 0)
    v5 = 33836109 - v4;
  *(_DWORD *)(v1 - 0x5005140540A45D4ALL) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((((v5 ^ 0x20DF77FB) - 147680 + ((2 * v5) & 0x41BEEFF6) != 551368475)
                                               * ((71 * (v3 ^ 0x147) + 1357567979) & 0xAF1523CF ^ 0x186)) ^ v3))
                            - 4))();
}

uint64_t sub_1D0DBA930@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_DWORD *)(*(_QWORD *)(v3 - 0x5005140540A45D46) + 4 * (v2 + v5 - 551369896)) = *(_DWORD *)(*(_QWORD *)(v4 - 0x5005140540A45D46)
                                                                                                + 4
                                                                                                * (v2 + v5 - 551369896));
  return (*(uint64_t (**)(void))(a1 + 8 * ((93 * (v5 - 1 == v1)) ^ v2)))();
}

uint64_t sub_1D0DBA98C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  int v5;
  int v6;
  int v7;

  *(_DWORD *)(*v3 + 4 * (v2 + v6 + v5)) = *(_DWORD *)(*v4 + 4 * (v2 + v6 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v6 - 1 == v1) * v7) ^ v2)))();
}

uint64_t sub_1D0DBA9C8(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x5005140540A45D4ALL) - 2092142412;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x5005140540A45D4ALL) - 2092142412;
  v4 = (v2 < 89177345) ^ (v3 < 89177345);
  v5 = v2 > v3;
  if (v4)
    v6 = v2 < 89177345;
  else
    v6 = v5;
  v1 = *(_DWORD *)a1 - 235795823 * ((a1 + 1658036232 - 2 * (a1 & 0x62D3A008)) ^ 0xF67EE951);
  return (*((uint64_t (**)(void))*(&off_1E8EC5D70 + v1 - 417) + ((!v6 * ((v1 + 718) ^ 0x548)) ^ v1)))();
}

uint64_t sub_1D0DBAA94()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v4 = v2 + 283103003;
  v5 = v4 < -1830544536;
  v6 = v3 + 283103003 < v4;
  if (v3 + 283103003 < -1830544536 != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (((((v1 ^ v6) & 1) == 0) * (((v1 - 1084) | 0x4B6) ^ 0x58D)) ^ v1))
                            - 4))();
}

uint64_t sub_1D0DBAB0C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  int v4;

  v3 = (v1 + 1427184824) & 0xAAEEDFFF;
  v4 = 67672218 - v2;
  if ((int)((v3 ^ 0x7DFBB1C5) + v2) < 0)
    v4 = v2;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((1778 * (v4 - 33836110 >= 0)) ^ v3)))();
}

uint64_t sub_1D0DBABA0()
{
  uint64_t v0;
  unsigned int v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;
  unsigned int v5;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((*(_DWORD *)(*v3 + 4 * v5) ^ v1) <= (*(_DWORD *)(*v2 + 4 * v5) ^ v1)) * (v4 - 349)) ^ v4)))();
}

uint64_t sub_1D0DBABDC(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  int v3;
  unsigned int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)((((v3 + 1006112897) & 0xC407EF7E ^ 0x15E) * (v4 < a2)) ^ (v3 + 840)))
                            - 12))();
}

uint64_t sub_1D0DBAC1C()
{
  uint64_t v0;
  int v1;
  int v2;

  return (*(uint64_t (**)(void))(v0 + 8 * ((1778 * (v2 - 33836110 >= 0)) ^ (v1 - 840))))();
}

uint64_t sub_1D0DBAC50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 4) = 251685838 - v1;
  return result;
}

void sub_1D0DBAC64(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1D0DBACA0(uint64_t a1)
{
  uint64_t v1;
  int v3;
  unsigned int v4;
  uint64_t v5;

  v3 = (*(uint64_t (**)(void))(v1 + 1352))();
  if (v3 == 16)
    v4 = -42029;
  else
    v4 = -42030;
  if (v3)
    v5 = v4;
  else
    v5 = 0;
  (*(void (**)(uint64_t))(v1 + 208))(a1);
  return v5;
}

void sub_1D0DBACFC(uint64_t a1)
{
  int v1;

  v1 = 1755732067 * (((a1 | 0x8AD08517) - (a1 & 0x8AD08517)) ^ 0x541638CC);
  __asm { BR              X15 }
}

uint64_t sub_1D0DBADC8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v8;
  int v9;
  int v10;

  v6 = ((&v8 & 0xF83D2A42 | ~(&v8 | 0xF83D2A42)) ^ 0xD9046866) * v3;
  v8 = v2;
  v9 = v6 + v5 - 1219 + 1065;
  v10 = 225075690 - (v6 + v1) - ((((v5 - 1077889000) & 0x403F47E7) - 1142165347) & (1592315216 - v4));
  return ((uint64_t (*)(uint64_t *))(*(_QWORD *)(a1 + 8 * (v5 - 1407)) - 12))(&v8);
}

void sub_1D0DBAF28(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x5005140540A45D4ALL);
  v4 = v2 - 33836109;
  v3 = v2 - 33836109 < 0;
  v5 = 33836109 - v2;
  if (!v3)
    v5 = v4;
  v1 = ((*(_DWORD *)(a1 + 12) ^ (1755732067 * (((a1 | 0x74CAABD) - a1 + (a1 & 0xF8B35542)) ^ 0xD98A1766))) - 806) | 0x342;
  __asm { BR              X6 }
}

uint64_t sub_1D0DBB058(uint64_t a1, uint64_t a2, int a3, int a4, int a5, unsigned int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8
                                        * (((*(_DWORD *)(*v9 + 4 * a6) != (((a3 ^ (2 * (v8 - 28))) + 446) | a4) + v6)
                                          * a5) ^ (v8 - 28)))
                            - 4))();
}

void sub_1D0DBB090()
{
  JUMPOUT(0x1D0DBB028);
}

uint64_t sub_1D0DBB098(uint64_t result)
{
  *(_DWORD *)(result + 8) = 908467202;
  return result;
}

void sub_1D0DBB15C(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 3804331 * ((-2 - ((a1 | 0x79974BD0) + (~(_DWORD)a1 | 0x8668B42F))) ^ 0x7CF64779) + 95;
  __asm { BR              X17 }
}

uint64_t sub_1D0DBB2D0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v0 & ~(v2 ^ 0x36F ^ (v1 == 31))) * ((v2 + 907576982) & 0xC9E779EE ^ 0x80)) ^ v2)))();
}

uint64_t sub_1D0DBB31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  *(_DWORD *)(a10 - 0x32EE9BBD2B2B4D73) = ((((v18 + 504) | 0x41) - 1045) ^ 0x6B3ED526) - v14;
  v20 = 1755732067 * (((((v19 - 136) | 0x5ECD320C) ^ 0xFFFFFFFE) - (~(v19 - 136) | 0xA132CDF3)) ^ 0x7FF47028);
  *(_DWORD *)(v19 - 120) = v20 ^ 0x3EA97B8E;
  *(_QWORD *)(v19 - 128) = a11;
  *(_DWORD *)(v19 - 136) = v18 - v20 - 691;
  sub_1D0DB8DB4((_DWORD *)(v19 - 136));
  v21 = 628203409 * (((~(v19 - 136) & 0xFB9A7DE) - (~(v19 - 136) | 0xFB9A7DF)) ^ 0x8D31ABEC);
  *(_QWORD *)(v19 - 128) = a11;
  *(_DWORD *)(v19 - 136) = ((v15 << 6) & 0xF9BAFEC0) - v21 + ((32 * v15) ^ 0x7CDD7F75) - 277352740;
  *(_DWORD *)(v19 - 120) = v21 + v18 + 173;
  sub_1D0D870A4(v19 - 136);
  *(_DWORD *)(v19 - 120) = v18 + 1374699841 * ((v19 - 136) ^ 0x6DF41809) - 583;
  *(_QWORD *)(v19 - 136) = &STACK[0x5005140540A45D7E];
  *(_QWORD *)(v19 - 128) = a14;
  sub_1D0DBA800(v19 - 136);
  *(_DWORD *)(v19 - 136) = v18
                         + 235795823
                         * ((693255638 - ((v19 - 136) | 0x29523DD6) + ((v19 - 136) | 0xD6ADC229)) ^ 0x42008B70)
                         - 280;
  *(_QWORD *)(v19 - 128) = a11;
  *(_QWORD *)(v19 - 120) = a14;
  v22 = ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * (v18 ^ 0x317)) - 8))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((71 * ((*(_DWORD *)(v19 - 132) - 125842919) < 0xFF97E291)) ^ v18)))(v22);
}

uint64_t sub_1D0DBB550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v17 - 136) = a14;
  *(_QWORD *)(v17 - 128) = v16;
  *(_DWORD *)(v17 - 120) = v15 + 1374699841 * ((v17 - 136) ^ 0x6DF41809) - 107;
  v18 = sub_1D0DBA800(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((82 * (a10 < (v15 ^ 0x1B3))) ^ v15)))(v18);
}

uint64_t sub_1D0DBB5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_DWORD *)(v19 - 120) = (v18 ^ 0xB5)
                         + 1374699841
                         * ((-1262793388 - ((v19 - 136) | 0xB4BB4D54) + ((v19 - 136) | 0x4B44B2AB)) ^ 0x26B0AAA2)
                         + 64;
  *(_QWORD *)(v19 - 136) = v14;
  *(_QWORD *)(v19 - 128) = a14;
  sub_1D0DBA800(v19 - 136);
  v20 = 628203409 * ((2 * ((v19 - 136) & 0x7BB7C280) - (v19 - 136) + 71843196) ^ 0x86C0314F);
  *(_QWORD *)(v19 - 128) = v15;
  *(_DWORD *)(v19 - 120) = v20 + (v18 ^ 0xB5) + 820;
  *(_DWORD *)(v19 - 136) = 1817538130 - v20;
  sub_1D0D870A4(v19 - 136);
  *(_DWORD *)(v19 - 136) = (v18 ^ 0xB5)
                         + 235795823 * ((((v19 - 136) | 0xC7262570) - ((v19 - 136) & 0xC7262570)) ^ 0x538B6C29)
                         + 367;
  *(_QWORD *)(v19 - 128) = v15;
  *(_QWORD *)(v19 - 120) = a14;
  v21 = v16(v19 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8
                                                      * ((989 * (*(_DWORD *)(v19 - 132) <= 0x78035E6u)) ^ ((v18 ^ 0xB5) + 1250)))
                                          - (((v18 ^ 0xB5) + 1066) ^ 0x5C7u)
                                          + 238))(v21);
}

uint64_t sub_1D0DBB780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  uint64_t v11;
  int v12;

  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((13
                                * (((v12 - 1581869490) & 0x5E496587 ^ 0x3BBB75FF)
                                 + (a11 ^ 0xFD6FAF39)
                                 + ((a11 << (((v12 - 53) & 0xFB) + 9)) & 0xFADF5E72)
                                 - 959128627 > 0x7FFFFFFD)) ^ v12)))();
}

uint64_t sub_1D0DBC3A0()
{
  int v0;
  char v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v2 + 8 * (v0 - 145)) + 8 * ((1868 * ((v1 & 2) == v0 - 358)) ^ v0)))();
}

uint64_t sub_1D0DBC3E0()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v1 & ~((v0 - 133) ^ 0x36F ^ (v2 == 31))) * ((v0 + 907576849) & 0xC9E779EE ^ 0x80)) ^ (v0 - 133))))();
}

uint64_t sub_1D0DBC45C(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))(qword_1E8EC2370[(1966 * (*(_DWORD *)(a2 + 4) == 1811329849)) ^ 0x1D8u] - 12))();
}

uint64_t sub_1D0DBC498(uint64_t a1, uint64_t a2)
{
  char v2;

  if (**(_BYTE **)(a2 + 8))
    v2 = 93;
  else
    v2 = 92;
  *(_BYTE *)(a1 + 88) = v2;
  return 0;
}

uint64_t sub_1D0DBC4BC()
{
  return 4294925278;
}

void sub_1D0DBC4C4(uint64_t a1)
{
  int v1;

  v1 = 3804331 * (((a1 ^ 0x9A32C815 | 0x394EC663) - ((a1 ^ 0x9A32C815) & 0x394EC663)) ^ 0x59E2FD20);
  __asm { BR              X9 }
}

uint64_t sub_1D0DBC57C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((341 * (v2 != ((((v1 - 95) | 0x12A) + 445) ^ 0x19C49668))) ^ v1))
                            - 4))();
}

uint64_t sub_1D0DBC5D8@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((a1 + 542) ^ 0x17)) - 4))();
}

uint64_t sub_1D0DBC6E0@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((v3 == ((v4 + 30) | 0x200) + ((v4 - 203) ^ v2)) * a1) ^ v4)) - 8))();
}

uint64_t sub_1D0DBC710@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1068 * ((((v2 + 136) ^ (v1 == 0)) & 1) == 0)) ^ v2)) - 4))();
}

uint64_t sub_1D0DBC744@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  v6 = 12 * (v5 ^ 0x5E);
  v7 = (v6 ^ (v2 - 600)) + v3;
  v8 = v3 + 1;
  *(_DWORD *)(*(_QWORD *)(v4 - 0x5005140540A45D46) + 4 * v7) = a1;
  *(_DWORD *)(v4 - 0x5005140540A45D4ALL) = v8;
  v9 = v8 + v2;
  if (v8 + v2 < 0)
    v9 = -v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((1868
                                          * ((int)((v9 ^ 0xD3377CFF)
                                                 + ((v9 << (v6 ^ 0xE9)) & 0xA66EF9FE)
                                                 + 785174350
                                                 + ((v2 + (((v6 ^ 0x13D) - 367238238) & 0x15E39AAF) - 1152) ^ v6)) >= 0)) ^ v6 ^ 0x13D))
                            - 8))();
}

uint64_t sub_1D0DBC844@<X0>(unsigned int a1@<W1>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  _QWORD *v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * (((*(_DWORD *)(*v4 + 4 * a1) != v2) * v3) ^ v5))
                            - ((v5 - 1005465361) & 0x3BEE2FFD)
                            + 973))();
}

uint64_t sub_1D0DBC884@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * ((1868
                                          * (v3 - 1 + ((v2 + ((a1 - 367238238) & 0x15E39AAF) - 1152) ^ a1 ^ 0x13D) >= 0)) ^ a1))
                            - 8))();
}

uint64_t sub_1D0DBC8DC(uint64_t result)
{
  int v1;
  int v2;
  int v3;
  int *v4;
  int v5;
  int v6;

  if ((v1 + v2 - 1) >= 0x7FFFFFFF)
    v6 = -v3;
  else
    v6 = v5;
  *v4 = v6;
  *(_DWORD *)(result + 16) = 1162155859;
  return result;
}

void sub_1D0DBC920(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_1D0DBC9A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a67;
  uint64_t v67;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, unint64_t *))(*(_QWORD *)(v67 + 1824) - 12))(a1, a2, a3, a4, a5, 3451136253, 2147483381, a8, a9, &a67, a11, &STACK[0x48A3A0C0C3CF9B9D]);
}

uint64_t sub_1D0DBCAD8()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (22 * (v1 == v3))))
                            - ((v0 + 1392005042) & 0xAD07AFEB ^ 0x623)))();
}

uint64_t sub_1D0DBCB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  uint64_t v18;
  int v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v18
                                        + 8
                                        * ((94
                                          * (((v19 - 1811329848 + (v17 ^ 0x2EC) - 1220) & 0xFFFFFFFC) - a17 != -1811329848)) ^ v17))
                            - 8))();
}

uint64_t sub_1D0DBCB74@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  int v12;
  uint64_t v13;
  int v14;
  _BOOL4 v16;

  v16 = a12 - v14 == 1590290645 && a1 != (v12 ^ 0x1AA25BBA) + (v12 ^ 0x5E4);
  return (*(uint64_t (**)(void))(v13 + 8 * (((4 * v16) | (8 * v16)) ^ v12)))();
}

uint64_t sub_1D0DBCBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  int v26;
  _BOOL4 v27;

  v22 = v19 - 454;
  v23 = v22 - 691691800;
  v24 = v22 - 691691766;
  v25 = ((v22 - 691692172) ^ 0x2F38DFF) + a19;
  v26 = (v25 < a6) ^ (v21 + 1639806405 < a6);
  v27 = v25 < v21 + 1639806405;
  if (v26)
    v27 = v21 + 1639806405 < a6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((v27 * (v23 ^ 0x33E)) ^ v24)) - 12))();
}

uint64_t sub_1D0DBCD78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17)
{
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  v22 = 628203409
      * ((2 * (((v21 - 160) ^ 0xA4F52AB7) & 0x567DB170) - ((v21 - 160) ^ 0xA4F52AB7) - 1451078001) ^ 0x8FFF680B);
  v23 = v19 ^ (v17 - 263);
  STACK[0x2B8] = a17;
  STACK[0x2A8] = a15;
  STACK[0x298] = a12;
  STACK[0x290] = a14;
  STACK[0x2C0] = a13;
  *(_DWORD *)(v21 - 144) = v19 - v22 + 300;
  *(_DWORD *)(v21 - 140) = v20 - v22 - 469744530;
  v24 = (*(uint64_t (**)(uint64_t))(a4 + 8 * (v19 ^ 0x1D1)))(v21 - 160);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((1439 * (*(_DWORD *)(v21 - 128) == v23 - 1314761441)) ^ v19))
                                          - ((v19 - 1594093840) & 0x5F03F1B1)
                                          + 421))(v24);
}

uint64_t sub_1D0DBCEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * ((121
                                                                         * (*(_DWORD *)(v6
                                                                                      + 48
                                                                                      * (int)(v5
                                                                                            - 1418612566
                                                                                            + ((v4 + 2122193358) & 0x8181E58F))) == 1795766373)) ^ v4)))(a1, a2, a3, v3);
}

uint64_t sub_1D0DBCF0C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;

  if ((v1 + 1658058682) <= 0x18 && ((1 << (v1 - 70)) & 0x1094001) != 0)
    __asm { BR              X10 }
  return v2 ^ 0x2523E364u;
}

void sub_1D0DBD5F8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D0DBD654()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((54 * (v1 == (v0 | 0x6BF6B228))) ^ 0x357u)))();
}

uint64_t sub_1D0DBD680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v8;
  int v9;
  unsigned int v10;
  int v11;
  uint64_t v12;

  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 800) = 1964514043;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 804) = 33836109;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 808) = *(_QWORD *)(a1 + 96) + 816;
  v5 = *(_QWORD *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  v6 = 3804331
     * (((&v8 | 0x36502483) - &v8 + (&v8 & 0xC9AFDB78)) ^ 0xCCCED7D5);
  v8 = *(_QWORD *)(a1 + 96) + 0x5005140540A4606ELL;
  v12 = v5;
  v9 = (v3 + 279) ^ v6;
  v10 = ((v3 ^ 0xADCDE058) + v4) ^ v6;
  (*(void (**)(uint64_t *))(a3 + 8 * (v3 - 114)))(&v8);
  return (v11 - 1162155859);
}

void sub_1D0DBD7B4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 235795823 * ((a1 - 1923327579 - 2 * (a1 & 0x8D5C59A5)) ^ 0x19F110FC);
  __asm { BR              X10 }
}

uint64_t sub_1D0DBD868(_QWORD *a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((((27 * (v3 ^ 0x49E) + 445336849) & 0xE574B5BF) - 1227)
                                               * (*(_DWORD *)(*a1 + v4) != v1)) ^ v3))
                            - 12))();
}

uint64_t sub_1D0DBD8B8()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (int)(v3 | ((((((v3 ^ 0x5F1) + 414) ^ 0xFDFBB1DE) + v2) * (v0 - 33836109)) >> 31)))
                            - ((3 * (v3 ^ 0x5F1u)) ^ 0x269)))();
}

uint64_t sub_1D0DBD8FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v6 = v3 - 1755732067 * ((&v5 - 464283566 - 2 * ((unint64_t)&v5 & 0xE4539852)) ^ 0x3A952589) + 578;
  v5 = a1;
  v7 = v2;
  v8 = v2;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (int)(v3 & 0xCC08D819)))(&v5);
}

void sub_1D0DBDA44(uint64_t a1)
{
  int v1;

  v1 = 460628867 * ((((2 * a1) | 0x80334E9A) - a1 + 1072060595) ^ 0x8C8F2530);
  __asm { BR              X9 }
}

uint64_t sub_1D0DBDAE0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((490 * (((v1 + 101) ^ (v2 == v1 + 199949765)) & 1)) ^ v1))
                            - 12))();
}

uint64_t sub_1D0DBDB3C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;

  v6 = *(unsigned __int8 *)(*a1 + (v3 + v5 + 256)) ^ 0xEF | v2 ^ 0x46245C8B;
  return ((uint64_t (*)(_QWORD *, uint64_t, _QWORD, uint64_t))(*(_QWORD *)(a2
                                                                                 + 8
                                                                                 * ((724 * (((v4 + 467) ^ 0x66D) == 613)) | (v4 + 467)))
                                                                     - 8))(a1, 239, v6 + v2 - ((2 * v6) & 0x8C48B916), 2353576214);
}

uint64_t sub_1D0DBDC38@<X0>(int a1@<W5>, int a2@<W6>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  int v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * (((v5 == (v6 ^ v4) + v3 + ((v6 - 13) | a1)) * a2) ^ v6)) - 4))();
}

uint64_t sub_1D0DBDC68@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1158 * (v1 != ((v2 + 78) | 0x17) - 703)) ^ v2)) - 12))();
}

uint64_t sub_1D0DBDC98@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  BOOL v10;

  *(_DWORD *)(*(_QWORD *)(v2 - 0x5005140540A45D46) + 4 * (v4 + v3)) = a1;
  v6 = v4 + (v5 ^ 0xE5) - 702;
  v7 = v5 ^ 0x2D6;
  *(_DWORD *)(v2 - 0x5005140540A45D4ALL) = v6;
  v8 = v3 + v6;
  v9 = 140 - (v8 + (v5 ^ 0x2D6));
  if (v8 + (v5 ^ 0x2D6) - 140 >= 0)
    v9 = v8 + (v5 ^ 0x2D6) - 140;
  v10 = (int)((v9 ^ 0x46376FEF) + ((2 * v9) & 0x8C6EDFDE) - 1178038256) > ((v7 - 8) | 0x10) - 149;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2
                                        + 8
                                        * (((8 * (((v7 + 1) ^ v10) & 1)) & 0xEF | (16
                                                                                                  * (((v7 + 1) ^ v10) & 1))) ^ v7))
                            - 8))();
}

uint64_t sub_1D0DBDD8C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  _QWORD *v2;
  unsigned int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((555
                                          * (*(_DWORD *)(*v2 + 4 * v3) == v1 + ((70 * (v4 ^ 0x96) + 452) | 0x88) - 728)) | v4))
                            - 8))();
}

uint64_t sub_1D0DBDDD8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  BOOL v3;

  v3 = v1 - 1 > ((v2 - 8) | 0x10) - 149;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((8 * (((v2 + 1) ^ v3) & 1)) & 0xEF | (16
                                                                                                 * (((v2 + 1) ^ v3) & 1))) ^ v2))
                            - 8))();
}

uint64_t sub_1D0DBDE1C(uint64_t result)
{
  int v1;
  int v2;
  int *v3;
  int v4;
  int v5;

  if ((v2 - 1) >= 0x7FFFFFFF)
    v5 = -v1;
  else
    v5 = v4;
  *v3 = v5;
  *(_DWORD *)(result + 28) = -903242194;
  return result;
}

void sub_1D0DBDE54(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 16) - 1225351577 * ((-2 - ((a1 | 0xFF7726BA) + (~(_DWORD)a1 | 0x88D945))) ^ 0x23120153);
  v2 = *(_QWORD *)(a1 + 8);
  v5 = v1 - 1755732067 * ((((2 * &v3) | 0xE2B1507C) - &v3 - 1901635646) ^ 0xAF9E15E5) + 61;
  v4 = v2;
  sub_1D0D86514((uint64_t)&v3);
  __asm { BR              X9 }
}

uint64_t sub_1D0DBDF8C@<X0>(uint64_t a1@<X8>)
{
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  _BOOL4 v6;

  v5 = (((v4 + v3) >> 4) & 0x8BECFDA ^ 0x8BC0890) + (((v4 + v3) >> 5) ^ 0x78A17BB7);
  v6 = v5 + 1386122855 < v1 - 822217132;
  if (v1 > 0x310209AB != v5 < ((30 * ((((v2 ^ 0x4E7) - 1065) | 0x8C) ^ 0xA4)) ^ 0x7C5F66E3u))
    v6 = v1 > 0x310209AB;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((763 * v6) ^ v2 ^ 0x4E7)) - 4))();
}

uint64_t sub_1D0DBE044@<X0>(uint64_t a1@<X8>)
{
  char v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (32 * ((v1 & 0x1F) != 0x1E)))) - 4))();
}

uint64_t sub_1D0DBE068@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (int)((95
                                               * (v3 + v1 + 264 < (((((v2 + 1840690793) & 0x924949B9) - 265) | 0x85) ^ 0x7FFFFF52))) ^ (v2 + 1840690793) & 0x924949B9))
                            - 12))();
}

uint64_t sub_1D0DBE0D4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  char v3;
  unsigned int v4;
  int v5;
  int v6;
  uint64_t v7;
  _QWORD *v8;
  _BOOL4 v9;
  unsigned int v10;

  v8 = (_QWORD *)(v7 - 0x5005140540A45D46);
  v9 = v2 + 1407538771 < 1468395111;
  v10 = ((2 * (*(_DWORD *)(*v8 + 4 * (v1 - 2086627308)) ^ v4)) << (v3 ^ 0x1F)) | ((*(_DWORD *)(*v8
                                                                                               + 4 * (v1 - 2086627309)) ^ v4) >> v3);
  *(_DWORD *)*v8 = v10 + v4 - (((v6 + 925) ^ (v5 + 1094)) & (2 * v10));
  if (v2 + 1407538771 < 1468395111)
    v9 = v2 + 1407538771 > -679088536;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((1082 * v9) ^ (v6 + 132))) - 12))();
}

void sub_1D0DBE1B4()
{
  JUMPOUT(0x1D0DBE124);
}

void sub_1D0DBE1BC()
{
  _DWORD *v0;

  *v0 = 33836109;
}

void sub_1D0DBE3A4(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void (*v6)(_QWORD, void (*)());
  char v7;
  char v8;

  v2 = (qword_1EFC551E8 + qword_1EFC55198) ^ (unint64_t)&v8;
  v3 = 1209664481 * v2 + 0x2DEB88543200F8ELL;
  v4 = 1209664481 * (v2 ^ 0x2DEB88543200F8ELL);
  v5 = byte_1D0E8EA90[byte_1D0E9B3B0[(-31 * (v3 ^ 0x8E ^ v4))] ^ 0xDD];
  qword_1EFC55198 = v3;
  v6 = (void (*)(_QWORD, void (*)()))*(&off_1E8EC5D70
                                                + ((-31 * (v3 ^ 0x8E ^ v4)) ^ v5)
                                                + 10);
  v7 = byte_1D0E8EA90[byte_1D0E9B3B0[(-31 * ((v4 + v3) ^ 0x8E))] ^ 0xC5];
  qword_1EFC551E8 = v4;
  v6(*(&off_1E8EC5D70 + ((-31 * ((v4 + v3) ^ 0x8E)) ^ v7) - 27), sub_1D0DC48D8);
  __asm { BR              X11 }
}

uint64_t sub_1D0DBE4AC()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 344) - 4) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (v3 | (16 * v3) | v0)))();
}

uint64_t sub_1D0DBE4DC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x26u)))(v1);
}

void sub_1D0DBE4FC(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v1 = 460628867 * ((((2 * a1) | 0xC002B2F8) - a1 - 1610701180) ^ 0x2C97DB01);
  v2 = *(_DWORD *)(a1 + 8) ^ v1;
  v3 = *(_DWORD *)(a1 + 32) ^ v1;
  v5 = (v3 & 0x30000000) == 0x20000000 || (v3 & 0x3F000000) == 184549376;
  __asm { BR              X11 }
}

uint64_t sub_1D0DBE5CC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, unint64_t *a5, uint64_t a6, int a7, char a8, unsigned int a9, unint64_t *a10, int a11)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v15 = *(_QWORD *)(v12 + 16);
  v16 = 628203409 * ((2 * (&a4 & 0x701BC640) - &a4 + 266615228) ^ 0x8D6C358F);
  a8 = 41 - -111 * ((2 * (&a4 & 0x40) - &a4 - 68) ^ 0x8F);
  a9 = ((2 * v11) & 0xEFF7C73C ^ 0x580C10C) + (v11 ^ 0x7D3F9358) + v16 + ((10 * (v14 ^ 0x167)) ^ 0x3ED51E9C);
  a5 = &STACK[0x76A57DB1D4346B7];
  a6 = v15;
  a4 = &STACK[0x287B5FB39018A0F5];
  a10 = &STACK[0x21915B7508B81850];
  a11 = (v14 + 1172345053) ^ v16;
  v17 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v14 - 200)) - 8))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v13 + 8 * ((233 * (a7 == -623068998)) ^ v14)) - 8))(v17);
}

uint64_t sub_1D0DBE710()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v2 ^ (1194 * (v1 == 184549376))))
                            - ((v2 + 1255) ^ 0x5E5)))();
}

uint64_t sub_1D0DBE748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  int v10;
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8 * (((a10 + 4 >= a10) * (((v10 - 1541735143) & 0x5BE4FDFF) - 221)) ^ v10))
                            - 4))();
}

uint64_t sub_1D0DBE7C4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (274 * (v1 != 0x46218FB)))) - ((v0 + 39) | 0xCAu) + 487))();
}

uint64_t sub_1D0DBE818@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v4 > 0x8F00882A;
  *(_BYTE *)(a1 + (v7 - 911095922)) = *(_BYTE *)(v1 + (v7 - 911095922));
  if (v9 == v7 + 984694628 < (v2 + 241 + v3))
    v9 = v7 + 984694628 < v5;
  return ((uint64_t (*)(BOOL))(*(_QWORD *)(v8 + 8 * ((v9 * v6) ^ v2)) - 4))(v7 + 984694628 < v5);
}

uint64_t sub_1D0DBE884()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1520
                                          * ((((2 * (v0 ^ 0x21D)) ^ 0x6ADFAA2A) & (2 * v1) ^ 0x8C421E4)
                                           + (((v0 ^ 0x111) + 822988062) ^ v1)
                                           - 4853794 != 891668432)) ^ v0))
                            - 4))();
}

uint64_t sub_1D0DBE8F8()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)((((191 * ((v0 + 2064251376) & 0x84F604EF ^ 0x4AC)) ^ 0x145)
                                               * ((v2 + v1 - 896522226) < 0xC)) ^ v0))
                            - 12))();
}

uint64_t sub_1D0DBE964(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (int)(((((v4 - 816) ^ 0xFFFFFC50) + v4 - 378)
                                               * (((a3 - (v3 & 3)) & 0xFFFFFFFC) <= a3 + 3)) ^ v4))
                            - 12))();
}

uint64_t sub_1D0DBE9AC@<X0>(int a1@<W0>, unsigned int a2@<W1>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (a1 + 1298541623) & 0xB299D3BF;
  a4.i32[0] = *(_DWORD *)(a3 + (v8 ^ 0x32A) + a2);
  *(_DWORD *)(a3 - 3 + (v5 + v4)) = vmovn_s16((int16x8_t)vmovl_u8(a4)).u32[0];
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (int)((31 * ((((_DWORD)v8 - 568) ^ 0xF7) != v6)) ^ v8)) - 4))();
}

uint64_t sub_1D0DBEA24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v2 + v3 + ((v5 + 1845338237) & 0x92025EF7) - 243;
  *(_DWORD *)(a1 - 3 + v7) = *(_DWORD *)(v1 - 3 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * ((586 * (v4 == 4)) ^ (v5 - 29))) - 4))();
}

uint64_t sub_1D0DBEA8C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((v2 - 174125940) & 0xA60F3FE ^ 0x177) * (v0 == v1)) ^ v2))
                            - ((v2 - 174125940) ^ 0xF59F0D7BLL)))();
}

uint64_t sub_1D0DBEAD8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a2 + (v5 + v4)) = *(_BYTE *)(v2 + (v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((1723 * (((a1 + 498899073) & 0xE24367EB ^ 0xFFFFFE14) + v5 != v3)) ^ (a1 - 132)))
                            - 4))();
}

uint64_t sub_1D0DBEB2C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1033
                                          * ((((v0 - 109) ^ (*(_QWORD *)(v1 + 24) == 0x4677F5251DE9534FLL)) & 1) == 0)) ^ v0))
                            - 4))();
}

uint64_t sub_1D0DBEB70@<X0>(int a1@<W8>, int a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  *(_DWORD *)(v2 - 0x4677F5251DE9534FLL) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1952 * (*v3 != 0x7CD37ED9EC2B0D1)) ^ a1)) - 8))();
}

void sub_1D0DBEBC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 - 0x7CD37ED9EC2B0D1) = v2;
  *(_DWORD *)(v1 + 36) = -623068998;
}

void mm0Euuzhc()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x1E0C80C00];
  v0[1] = -504207030 - 1734042137 * (((v0 | 0x8FC1DD99) + (~v0 | 0x703E2266)) ^ 0xD30F1ED5);
  sub_1D0DC4FA8(v0);
  __asm { BR              X8 }
}

uint64_t sub_1D0DBED14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, int a15)
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  a13 = &STACK[0x5E9AF8031DC7FF47];
  a15 = 350 - 460628867 * ((&a13 + 105572375 - 2 * ((unint64_t)&a13 & 0x64AE817)) ^ 0x4ADC6A6A);
  sub_1D0DBA6E4((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * ((21 * (a14 != v15)) ^ 0x2A6u))
                                                                                       - 4))(v17, v18, v19, v20, v21, v22);
}

uint64_t sub_1D0DBEDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, unsigned int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  a14 = v16;
  a15 = a12;
  a16 = 3804331 * ((884811571 - (&a13 | 0x34BD2733) + (&a13 | 0xCB42D8CC)) ^ 0x31DC2B9A)
      + 774;
  v20 = ((uint64_t (*)(int *))(*(_QWORD *)(v18 + 1232) - 4))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((1616 * (a13 == ((v17 + 335) ^ 0x2B3))) ^ 0x275u))
                                          - 4))(v20);
}

uint64_t sub_1D0DBEE68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14, int a15, uint64_t a16, int a17, unint64_t *a18)
{
  int v18;
  unsigned int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1374699841 * (&a13 ^ 0x6DF41809);
  a16 = a12;
  a15 = v21 ^ 0x515D506B;
  a13 = v21 + 459559847;
  a18 = &STACK[0x1A99DB821DFE8BAA];
  a17 = (v19 - 2024873712) ^ v21;
  v22 = sub_1D0DC5684((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((214 * (a14 == v18)) ^ v19)) - (v19 + 62) + 687))(v22);
}

uint64_t sub_1D0DBEF10()
{
  void (*v0)(unint64_t **);
  unsigned int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  unint64_t *v10;
  int v11;
  unint64_t *v12;
  unint64_t *v13;
  unint64_t *v14;
  unint64_t *v15;

  v7 = (v4 - 451) | 0x201;
  LODWORD(v13) = (v4 - 112) ^ (((&v13 & 0x766D8D20 | ~(&v13 | 0x766D8D20)) ^ 0xE4666AD6) * v6);
  v14 = &STACK[0x28677D891274AFD6];
  v15 = v10;
  ((void (*)(unint64_t **))(*(_QWORD *)(v5 + 8 * (v4 & 0x14B)) - 12))(&v13);
  v13 = v10;
  HIDWORD(v14) = v4
               - ((-642854908 - (&v13 | 0xD9AED004) + (&v13 | 0x26512FFB)) ^ 0x7A9FECB6)
               * v2
               - 159;
  sub_1D0D9B274((uint64_t)&v13);
  if ((_DWORD)v14 == v1 + v7 - 691)
    v8 = v11;
  else
    v8 = (int)v14;
  v14 = v10;
  HIDWORD(v13) = v4
               + (((&v13 | 0xCF7F3D22) - &v13 + (&v13 & 0x3080C2D8)) ^ 0xC58B330D)
               * v3
               + 413;
  v0(&v13);
  HIDWORD(v13) = v7
               + ((-770831984 - (&v13 | 0xD20E0990) + (&v13 | 0x2DF1F66F)) ^ 0x2705F840)
               * v3
               + 351;
  v14 = v12;
  v0(&v13);
  return v8 ^ v1;
}

void sub_1D0DBF0D4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) + 1734042137 * ((2 * (a1 & 0xD46ACE1E) - a1 + 731197921) ^ 0x775BF2AC);
  __asm { BR              X12 }
}

uint64_t sub_1D0DBF1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  _BOOL4 v12;

  v9 = a6 + 954;
  v10 = ((a6 + 954) ^ 0x99BD6CA6) + v8;
  v12 = v6 - 1749476118 > 431843638 || v6 - 1749476118 < v10;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v7 + 8 * (v9 ^ (2 * v12))) - 8))(0x57245A337BFAED5ELL);
}

void sub_1D0DBF2BC(int a1, unsigned int a2, int a3, int a4, int a5, uint64_t a6, uint64_t a7, _QWORD *a8)
{
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  _BOOL4 v19;

  v16 = (v11 ^ 0x46245C8B)
      + a1
      + ((v13 - 1587538942) & 0x5E9FEFB7 ^ (v9 + 1169))
      + v12 * (*(_DWORD *)(*a8 + 4 * a3) ^ v11);
  *(_DWORD *)(v14 + 4 * v15) = v16 + v11 - (v10 & (2 * v16));
  v17 = a3 + 1 + a4;
  v18 = (a2 > 0xE0D813) ^ (v17 < -14735380);
  v19 = v17 < a5;
  if (v18)
    v19 = a2 > 0xE0D813;
  __asm { BR              X24 }
}

void sub_1D0DBF614(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v1 = 1224239923 * ((~(_DWORD)a1 & 0xC46B4FA3 | a1 & 0x3B94B05C) ^ 0x36D8B274);
  v2 = *(_DWORD *)a1 + v1;
  v3 = (*(_BYTE *)(a1 + 16) + v1);
  ((void (*)(char *, void (*)()))*(&off_1E8EC5D70 + v2 - 729))((char *)*(&off_1E8EC5D70 + (v2 ^ 0x314)) - 8, sub_1D0DC4AA8);
  v5 = *(_QWORD *)*(&off_1E8EC5D70 + (v2 ^ 0x33E));
  v4 = (3804331
      * (((&v4 | 0x2C75F771) - &v4 + (&v4 & 0xD38A0888)) ^ 0xD6EB0427)) ^ (v2 + 74);
  sub_1D0D9B494((uint64_t)&v4);
  __asm { BR              X8 }
}

uint64_t sub_1D0DBF76C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((**(_DWORD **)(v2 + 8 * (v0 - 930)) == ((v0 + 53) ^ 0x448))
                                          * ((v0 - 90) ^ 0x2FE)) ^ v0))
                            - 12))();
}

uint64_t sub_1D0DBF81C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  _DWORD *v2;
  _DWORD *v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t (*v13)(uint64_t, _BYTE *, _DWORD *);
  int v14;
  int v15;
  uint64_t v16;
  _BYTE *v17;
  int v18;
  int v19;
  uint64_t result;
  uint64_t v21;
  _BYTE v22[30];
  _BYTE v23[140];

  v8 = *(unsigned int **)(v6 + 8 * (a1 - 936));
  v9 = *(_QWORD *)(v6 + 8 * (a1 ^ 0x3B3));
  v10 = *v8;
  v11 = *(_BYTE **)(v9 - 4);
  v22[0] = *v11 - 69;
  v22[1] = v11[1] - 69;
  v22[2] = v11[2] - 69;
  v22[3] = v11[3] - 69;
  v22[4] = v11[4] - 69;
  v22[5] = v11[5] - 69;
  v22[6] = v11[6] - 69;
  v22[7] = v11[7] - 69;
  v22[8] = v11[8] - 69;
  v22[9] = v11[9] - 69;
  v22[10] = v11[10] - 69;
  v22[11] = v11[11] - 69;
  v22[12] = v11[12] - 69;
  v22[13] = v11[13] - 69;
  v22[14] = v11[14] - 69;
  v22[15] = v11[15] - 69;
  v22[16] = v11[16] - 69;
  v22[17] = v11[17] - 69;
  v22[18] = v11[18] - 69;
  v22[19] = v11[19] - 69;
  v22[20] = v11[20] - 69;
  v22[21] = v11[21] - 69;
  v12 = *(_BYTE **)(v9 - 4);
  v22[22] = v12[22] - 69;
  v22[23] = v12[23] - 69;
  v22[24] = v12[24] - 69;
  v22[25] = v12[25] - 69;
  v22[26] = v12[26] - 69;
  v22[27] = v12[27] - 69;
  v22[28] = v12[28] - 69;
  v22[29] = v12[29] - 69;
  v13 = *(uint64_t (**)(uint64_t, _BYTE *, _DWORD *))(v6 + 8 * (a1 - 749));
  v14 = v13(v10, v22, v2);
  v15 = ((2 * v14) & 0x5477ABFA) + (v14 ^ 0x2A3BD5FD);
  if (v15 != 708564477)
  {
    if (v15 == 708565579)
    {
      v16 = *v8;
      v17 = **(_BYTE ***)(v6 + 8 * (v4 - 835));
      v23[0] = *v17 - 79;
      v23[1] = v17[1] - 79;
      v23[2] = v17[2] - 79;
      v23[3] = v17[3] - 79;
      v23[4] = v17[4] - 79;
      v23[5] = v17[5] - 79;
      v23[6] = v17[6] - 79;
      v23[7] = v17[7] - 79;
      v23[8] = v17[8] - 79;
      v23[9] = v17[9] - 79;
      v23[10] = v17[10] - 79;
      v23[11] = v17[11] - 79;
      v23[12] = v17[12] - 79;
      v23[13] = v17[13] - 79;
      v23[14] = v17[14] - 79;
      v23[15] = v17[15] - 79;
      v23[16] = v17[16] - 79;
      v23[17] = v17[17] - 79;
      v23[18] = v17[18] - 79;
      v23[19] = v17[19] - 79;
      v18 = v13(v16, v23, v2);
      v19 = (v18 ^ 0x3B28AF76) - 285223426 + ((2 * v18) & 0x76515EEC);
    }
    else
    {
      v19 = v15 - 1265801;
    }
    __asm { BR              X8 }
  }
  *(_DWORD *)(v7 + 352) |= v4 ^ 0x3B3;
  *(_DWORD *)(v7 + 52) = 522992128;
  result = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _DWORD *))(v6 + 8 * (v4 - 846)))(*v2, v7 + 340, v7 + 344, v7 + 348, v3);
  v21 = *(_QWORD *)(v1 + 24);
  *(_DWORD *)(*(_QWORD *)(v1 + 8) - 0x57BFF69C8C42E147) = *v2;
  *(_DWORD *)(v21 - 0x6310B6DD8E16F3AFLL) = *v3;
  *(_DWORD *)(v1 + 4) = -623068998;
  return result;
}

void sub_1D0DBFC34(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v1 = 1755732067 * (((a1 | 0x92FAE161) - a1 + (a1 & 0x6D051E9E)) ^ 0x4C3C5CBA);
  v2 = *(_DWORD *)(a1 + 20) - v1;
  v3 = *(_DWORD *)(a1 + 48) - v1;
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = (*(_DWORD *)(a1 + 16) ^ v1) - ((2 * (*(_DWORD *)(a1 + 16) ^ v1) - 1964205780) & 0xAA430EB6) - 1701325839;
  v15 = *(_QWORD *)a1;
  v8 = v15;
  v7 = 1225351577 * ((&v8 & 0xE90EA516 | ~(&v8 | 0xE90EA516)) ^ 0x356B82FF);
  v13 = v7 ^ (v2 + 1695026873);
  v14 = (v3 - ((2 * v3 + 895850428) & 0x52E2378C) + 1143203748) ^ v7;
  v9 = v6 ^ v7;
  v10 = v5;
  v11 = v4;
  sub_1D0DC477C((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_1D0DBFDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, int a14, uint64_t a15, int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  char v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = 1759421093 * ((2 * (&a11 & 0x407A5998) - &a11 + 1065723495) ^ 0x8CF81633);
  v24 = *(_BYTE *)(v16 + 24) - v20 - 62;
  a14 = v22 + v23 - 16551443;
  a16 = v19 - v23 + 269;
  a15 = v21;
  a13 = v24 ^ v23;
  a12 = &STACK[0x591956795CC936EC];
  sub_1D0D9AF00((uint64_t)&a11);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18
                                                                                         + 8
                                                                                         * ((1202
                                                                                           * (a11 == ((v19 + 1191926858) & 0xB8F4A5FF ^ (v17 + 893)))) ^ v19)))(v25, v26, v27, v28, v29, v30);
}

uint64_t sub_1D0DBFEA0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v0 ^ (((v1 - 1699558436) < 0xFFFFFFFE) | (2
                                                                                                 * ((v1 - 1699558436) < 0xFFFFFFFE)))))
                            - (((v0 - 1164896686) & 0x456EE763u)
                             + 31)
                            + 598))();
}

uint64_t sub_1D0DBFEEC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  a6 = a1;
  a7 = a3;
  a4 = (v9 - 93) ^ (1374699841
                  * ((((&a4 | 0x43707DD0) ^ 0xFFFFFFFE) - (~&a4 | 0xBC8F822F)) ^ 0xD17B9A26));
  v10 = ((uint64_t (*)(unsigned int *))((char *)*(&off_1E8EC5D70 + (int)(v9 - 545)) - 12))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v8
                                                      + 8
                                                      * ((228
                                                        * (((v9 - 31) ^ (a5 == v7
                                                                                              + ((v9 + 898075897) & 0xCA7872E7)
                                                                                              - 579)) & 1)) ^ v9))
                                          - 8))(v10);
}

uint64_t sub_1D0DBFFAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t result;
  _DWORD v6[2];
  uint64_t v7;

  v6[1] = v2
        + 535753261
        * (((v6 | 0x64DB4A1A) - v6 + (v6 & 0x9B24B5E0)) ^ 0x6E2F4435)
        + 463;
  v7 = a1;
  result = ((uint64_t (*)(_DWORD *))(*(_QWORD *)(v3 + 8 * (v2 - 523)) - 12))(v6);
  *(_DWORD *)(v1 + 52) = v4;
  return result;
}

void sub_1D0DC0088(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  BOOL v5;

  v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x90DA3F356C0C1A8) - 2078850709;
  v3 = *(_DWORD *)(a1 + 20) + v1 - 18815535;
  v4 = v2 < 0x4ED7DD77;
  v5 = v2 > v3;
  if (v3 < 0x4ED7DD77 != v4)
    v5 = v4;
  __asm { BR              X10 }
}

uint64_t sub_1D0DC0174(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + (v2 + 893346803));
  v5 = ((v4 - ((v4 << (((v3 - 6) & 0x3B) - 58)) & 0x94) - 1658058678) & ((v3 - 1567073350) & 0x5D67A37B ^ 0x224)) == 21;
  return (*(uint64_t (**)(void))(v1 + 8 * (((2 * v5) | (16 * v5)) ^ v3)))();
}

uint64_t sub_1D0DC020C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v5 = v3 - 321535720 > (v1 + 1738499453);
  if ((v1 + 1738499453) < 0xB7965D23 != (v3 - 321535720) < 0xB7965D23)
    v5 = (v3 - 321535720) < 0xB7965D23;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * (v4 ^ (1125 * !v5)))
                                                   - ((v4 - 439) | 0x200u)
                                                   + 632))(a1, 623108964);
}

uint64_t sub_1D0DC0280()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1272
                                * (*(char *)(v0 + (v2 + v3 + 550)) <= (char)(((v4 - 99) | 0x1A) - 60))) ^ v4)))();
}

uint64_t sub_1D0DC0300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  int v8;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v7
                                                     + 8
                                                     * ((1678
                                                       * (((((a7 - 154880220) & 0x93B47FF ^ 0x239) + v8) & ((a7 - 70064088) & 0x42D17E5 ^ 0x35A) ^ 0x7EDF3EE6)
                                                        + ((2 * (((a7 - 154880220) & 0x93B47FF ^ 0x239) + v8)) & 0xCCu)
                                                        - 2128559847 < 4)) ^ a7)))(a1, 623108964);
}

uint64_t sub_1D0DC0394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  unsigned int v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v10 = v8 + a6 + ((v9 - 805) | 0x284) - 815132856;
  v11 = v10 < 0x1909ECBD;
  v12 = v10 > v6 - 921504489;
  if ((v6 - 921504489) < 0x1909ECBD != v11)
    v12 = v11;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v7
                                                               + 8 * ((!v12 * (((v9 - 770) | 0x218) ^ 0x57D)) ^ v9))
                                                   - 4))(a1, 623108964);
}

uint64_t sub_1D0DC0420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (a7 | (25 * (a6 != 2128559847)))))();
}

uint64_t sub_1D0DC0490(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v8;
  int v9;
  int v10;

  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((46 * (v9 + v10 + a4 != 0)) ^ a8 ^ 0x2E)) - 4))();
}

void sub_1D0DC0524()
{
  JUMPOUT(0x1D0DC04E8);
}

uint64_t sub_1D0DC0530(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = v7 + v4 + v5 + v6 + 355077604 + 1797899328;
  v9 = v2 - 437032793;
  v10 = (v9 < 0x35EA604D) ^ (v8 < 0x35EA604D);
  v11 = v8 > v9;
  if (v10)
    v11 = v8 < 0x35EA604D;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v3 + 8 * (v11 | (4 * v11) | (a2 + 229))) - 4))(a1, 623108964);
}

uint64_t *sub_1D0DC05AC@<X0>(uint64_t *result@<X0>, int a2@<W4>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = result[6];
  v9 = *result;
  v8 = result[1];
  *a3 = v4;
  *(_DWORD *)(v9 - 0x21738119BF0B617CLL) = v5;
  *(_DWORD *)(v7 - 0x70F770302E9240E7) = v6;
  *(_QWORD *)(v8 - 0x48A3A0C0C3CF9B45) = v3 + (a2 - 1590290645);
  *((_DWORD *)result + 8) = -623068998;
  return result;
}

void sub_1D0DC061C(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 8)
     + 1755732067 * (((a1 ^ 0xB0C02B5A) + 1315759944 - 2 * ((a1 ^ 0xB0C02B5A) & 0x4E6CE748)) ^ 0x206A71C9);
  if (*(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x5005140540A45D4ALL) - 33836109 >= 0)
    v2 = *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x5005140540A45D4ALL) - 33836109;
  else
    v2 = 33836109 - *(_DWORD *)(*(_QWORD *)(a1 + 24) - 0x5005140540A45D4ALL);
  if (*(_DWORD *)(*(_QWORD *)a1 - 0x5005140540A45D4ALL) - 33836109 >= 0)
    v3 = *(_DWORD *)(*(_QWORD *)a1 - 0x5005140540A45D4ALL) - 33836109;
  else
    v3 = 33836109 - *(_DWORD *)(*(_QWORD *)a1 - 0x5005140540A45D4ALL);
  v6 = *(_QWORD *)(a1 + 24);
  v5 = (535753261 * ((((2 * &v5) | 0xD29455A8) - &v5 + 381015340) ^ 0xE3BE24FB)) ^ (v1 - 248);
  sub_1D0D9B100((uint64_t)&v5);
  if (v2 >= v3)
    v4 = v3;
  else
    v4 = v2;
  __asm { BR              X14 }
}

uint64_t sub_1D0DC07C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  _BOOL4 v14;

  v10 = v3 - 602883720;
  v11 = 4 * (v5 + v4);
  v12 = (*(_DWORD *)(*(_QWORD *)(v9 - 0x5005140540A45D46) + v11) ^ v6)
      - (*(_DWORD *)(*(_QWORD *)(v8 - 0x5005140540A45D46) + v11) ^ (v6 + v2 + 240 - 613));
  *(_DWORD *)(*(_QWORD *)(a1 - 0x5005140540A45D46) + v11) = v12 + v6 - (v7 & (2 * v12));
  v14 = v5 - 1347596813 < 1544599928 && v5 - 1347596813 >= v10;
  return (*(uint64_t (**)(void))(v1 + 8 * ((1498 * v14) ^ v2)))();
}

uint64_t sub_1D0DC08CC(int a1)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 500649351 < (int)((a1 ^ 0x4A3ABB68) + v3);
  if (v3 > 0x35C546F2 != v2 + 500649351 < -902121203)
    v4 = v3 > 0x35C546F2;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 * (5 * (a1 ^ 0x25E) + 1482)) ^ a1)))();
}

uint64_t sub_1D0DC0944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  unsigned int v12;
  uint64_t v13;
  _QWORD *v14;
  _BOOL4 v15;
  uint64_t v16;
  int v17;
  int v18;
  _BOOL4 v19;

  v14 = (_QWORD *)(v13 - 0x5005140540A45D46);
  v15 = v12 > v7;
  v16 = 4 * (v9 + v8);
  v17 = v2 - 1615192459 + (*(_DWORD *)(*v14 + v16) ^ v10);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x5005140540A45D46) + v16) = v17 + v10 - ((v17 << ((v5 + 76) ^ 0x72)) & v11);
  v18 = v9 + 1 + v4;
  LODWORD(v16) = v15 ^ (v18 < v3);
  v19 = v18 < v6;
  if (!(_DWORD)v16)
    v15 = v19;
  return (*(uint64_t (**)(unint64_t))(v1 + 8 * ((834 * !v15) ^ v5)))(0xB86F2B9D9FBA1E75);
}

uint64_t sub_1D0DC0A30()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 - 50425838 < (int)(v3 + 694287256);
  if (v2 - 50425838 < -1453196392 != v3 > (v1 ^ 0xEB) + 1453195354 + 59 * (v1 ^ 0x7Cu))
    v4 = v3 > (v1 ^ 0xEB) + 1453195354 + 59 * (v1 ^ 0x7Cu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((1144 * v4) ^ v1)) - 4))();
}

uint64_t sub_1D0DC0AB0@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  _BOOL4 v17;
  uint64_t v18;
  unsigned int v19;
  int v20;
  _BOOL4 v21;

  v15 = 23 * (a1 ^ 0x9D);
  v16 = (_QWORD *)(v14 - 0x5005140540A45D46);
  v17 = v13 > v8;
  v18 = 4 * (v10 + v9);
  v19 = v3 - 1615192458 + (*(_DWORD *)(*v16 + v18) ^ 0xB9DBA374);
  *(_DWORD *)(*(_QWORD *)(a2 - 0x5005140540A45D46) + v18) = v19 + v11 - ((v12 + 3 * (v15 ^ 0x154) - 885) & (2 * v19));
  LODWORD(v18) = v10 + 1 + v4;
  v20 = v17 ^ ((int)v18 < v5);
  v21 = (int)v18 < v7;
  if (!v20)
    v17 = v21;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v17 * v6) ^ v15)) - 4))();
}

uint64_t sub_1D0DC0BB0(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * ((243 * (v2 == ((a1 - 789) | 0x14u) + 1083 + 0x4790D4636045DCDBLL)) ^ a1))
                            - 4))();
}

uint64_t sub_1D0DC0BF8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((245 * ((((v1 ^ 0x151) + 906) ^ (v2 - 932)) + v3 < 0x7FFFFFFF)) ^ v1))
                            - 4))();
}

uint64_t sub_1D0DC0C34@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  _BOOL4 v8;
  unsigned int v9;

  v6 = (a1 - 2059316552);
  v7 = a1 - 1083;
  v8 = v3 - 901748648 < 1990448094;
  v9 = (**(_DWORD **)(a2 - 0x5005140540A45D46) ^ 0xB9DBA374) + 1;
  **(_DWORD **)(a2 - 0x5005140540A45D46) = v9 + v4 - (v5 & (2 * v9));
  if (v3 - 901748648 < 1990448094)
    v8 = v3 - 901748648 > -157035553;
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((786 * v8) ^ v7)) - 4))(v6, 2059315645);
}

void sub_1D0DC0D04()
{
  JUMPOUT(0x1D0DC0C9CLL);
}

uint64_t sub_1D0DC0D14()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * ((1312 * (v2 + v3 - 1 < ((v1 - 815) | 0x41u) + 2147483198)) ^ (v1 - 752))))();
}

uint64_t sub_1D0DC0D78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((564
                                * (*(_DWORD *)(*(_QWORD *)(a1 - 0x5005140540A45D46) + 4
                                                                                      * (v3 + v4 - 1)) == ((v2 + 1213535550) & 0xB7AAEDAF ^ (v5 - 1127)))) ^ (v2 - 2))))();
}

uint64_t sub_1D0DC0DDC()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(v0 + 8 * (v1 ^ (126 * ((v3 + v2 - 2) < 0x7FFFFFFF)))))();
}

uint64_t sub_1D0DC0E14()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;

  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((564
                                * (*(_DWORD *)(v2 + 4 * (v4 + v5 - 1)) == ((v1 + 1213535552) & 0xB7AAEDAF ^ v3))) ^ v1)))();
}

void sub_1D0DC0E5C(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  *(_DWORD *)(a1 - 0x5005140540A45D4ALL) = (((v3 + v2) * (v1 - 549541838)) ^ 0xBFA4EFFF)
                                         + 1113545806
                                         + ((2 * (v3 + v2) * (v1 - 549541838)) & 0x7F49DFFE);
}

void sub_1D0DC0EE8(uint64_t a1)
{
  int v1;

  v1 = 3804331 * (((a1 | 0xE97B4C4E) - a1 + (a1 & 0x1684B3B1)) ^ 0x13E5BF18);
  __asm { BR              X11 }
}

uint64_t sub_1D0DC0FA8()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((1476 * (*v1 != ((25 * (v0 & 0xD6B796F7 ^ 0x6B)) ^ 0x145))) ^ v0 & 0xD6B796F7)))();
}

uint64_t sub_1D0DC0FFC()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  int v5;
  uint64_t v6;

  v5 = v0 ^ 0x123;
  v6 = v3(*v4);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((1437 * (*v1 != 0)) ^ v5)))(v6);
}

uint64_t sub_1D0DC102C()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 344) = 0;
  *(_QWORD *)(v0 + 352) = 0;
  *(_DWORD *)(v0 + 360) = 354595049;
  *(_DWORD *)(v0 + 56) = 522992128;
  return result;
}

uint64_t sub_1D0DC106C()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((1437 * (*v1 != 0)) ^ v0)))();
}

void sub_1D0DC108C(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 16) != 0x4FDE89866017883
    && *(_QWORD *)(a1 + 32) != 0x7906C8B5DC256D3CLL
    && *(_QWORD *)(a1 + 8) != 0x61CB92A9D1FA1DEFLL;
  v1 = *(_DWORD *)a1 + 1734042137 * (((a1 | 0x244186C0) - (a1 | 0xDBBE793F) - 608274113) ^ 0x788F458D);
  __asm { BR              X9 }
}

uint64_t sub_1D0DC1194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  int v19;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (int)(((*(_DWORD *)(a18 - 0x4FDE8986601786BLL) == -623068998) * ((v19 + 1684933778) & 0x9B91F57F ^ 0x488)) ^ v19))
                                                                                       - 4))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1D0DC11F8(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v22;
  uint64_t v23;
  __n128 v24;
  __n128 v25;
  unsigned int v26;
  _BOOL4 v27;
  unsigned int v28;
  int v29;
  _BOOL4 v30;

  v24.n128_u64[0] = 0xDEDEDEDEDEDEDEDELL;
  v24.n128_u64[1] = 0xDEDEDEDEDEDEDEDELL;
  v25.n128_u64[0] = 0xEFEFEFEFEFEFEFEFLL;
  v25.n128_u64[1] = 0xEFEFEFEFEFEFEFEFLL;
  v26 = *(_DWORD *)(a22 - 0x4FDE89866017873) - 975730800;
  v27 = v26 < 0xD8B065D8;
  v28 = ((v22 + 206) ^ 0x99AE55EB) + 1057101102;
  v29 = v27 ^ (v28 < ((v22 + 1838183026) & 0x926F8B7B ^ 0xD8B067B9));
  v30 = v28 < v26;
  if (!v29)
    v27 = v30;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v23
                                                                                             + 8
                                                                                             * ((v27 | (32 * v27)) ^ (v22 + 206)))
                                                                                 - 8))(a1, a2, a3, a4, v24, v25);
}

uint64_t sub_1D0DC1408@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v20 + 8 * ((v19 ^ 0x720) - 602)) - 8))((((((((v19 ^ 0x720) - 80) | 0x144) - 697) | 0x440)
                                                                                                  + 166020547) & 0xF61AB7EE ^ (a1 + 649)) & a19);
}

uint64_t sub_1D0DC210C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  int v18;
  uint64_t v19;
  _QWORD *v20;
  int v21;
  _BOOL4 v22;

  *(_BYTE *)(*v20 + (v17 + v21)) = 111;
  v22 = v17 + 2102729851 < (a17 - 1172756390);
  if ((a17 - 1172756390) < 0xDFA3BF60 != v17 + 2102729851 < (((v18 - 1208) | 0x221) ^ 0xDFA3BD01))
    v22 = (a17 - 1172756390) < 0xDFA3BF60;
  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((v22 | (2 * v22)) ^ v18)) - 12))();
}

uint64_t sub_1D0DC2190()
{
  int v0;
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  _BOOL4 v9;
  int v10;

  v9 = v4 < v5;
  v10 = v1 + 1;
  *(_BYTE *)(*v7 + (v10 + v8)) = -17;
  if (v9 == v10 + v2 < (v3 ^ 0x699u) + v0)
    v9 = v10 + v2 < v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v9 | (2 * v9) | v3)) - 12))();
}

void sub_1D0DC21EC(int a1@<W8>)
{
  _QWORD *v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v3 - 0x7906C8B5DC256D3CLL) = *v1;
  *(_DWORD *)(v4 - 0x61CB92A9D1FA1DEFLL) = a1;
  *v1 = 0;
  *(_QWORD *)(v7 - 0x4FDE8986601787BLL) = 0x398D2557398D2557;
  *v2 = 316202568;
  *(_DWORD *)(v7 - 0x4FDE8986601786FLL) = ((*(_DWORD *)(v7 - 0x4FDE8986601786FLL) & 0xFFFFFFFE ^ 0x56AF396C)
                                         + (*(_DWORD *)(v7 - 0x4FDE8986601786FLL) & 0x93DDAE04 ^ 0x81508601)
                                         - ((*(_DWORD *)(v7 - 0x4FDE8986601786FLL) & 0xFFFFFFFE ^ 0x56AF396C) & 0x93DDAE04)) ^ 0xC5729769;
  *(_DWORD *)(v6 + 24) = *v5;
}

uint64_t sub_1D0DC2304(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 460628867 * ((a1 & 0x873FB66C | ~(a1 | 0x873FB66C)) ^ 0x3456CBEE);
  v2 = *(_DWORD *)(a1 + 16) - v1;
  v3 = *(_DWORD *)a1 - v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x5005140540A45D4ALL);
  v6 = v4 - 33836109;
  v5 = v4 - 33836109 < 0;
  v7 = 33836109 - v4;
  if (!v5)
    v7 = v6;
  return ((uint64_t (*)(void))(*((_QWORD *)*(&off_1E8EC5D70 + v2 - 61)
                              + ((81 * ((v2 ^ 0x51 ^ (v3 >> 5 < v7)) & 1)) ^ v2))
                            - 8))();
}

uint64_t sub_1D0DC23C0(uint64_t result)
{
  *(_DWORD *)(result + 4) = 1839851021;
  return result;
}

uint64_t sub_1D0DC23D0@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  v5 = (((v4 - 1777354117) & 0x69F04553 ^ 0x46245D99u ^ *(_DWORD *)(*(_QWORD *)(v2 - 0x5005140540A45D46) + 4 * v3)) >> a2) ^ 0x6B6A7EB8;
  v6 = ((2 * (v5 & 0xB700EB4D)) | 0xF78BC25C) - (v5 & 0xB700EB4D) - 2076565806;
  *(_DWORD *)(result + 4) = (((2 * (v5 & 0xB700EB4C ^ 0x58C58B26 ^ v6)) | 0x5999F250)
                           - (v5 & 0xB700EB4C ^ 0x58C58B26 ^ v6)
                           - 751630632) ^ 0x6265752D;
  return result;
}

void sub_1D0DC2490(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 + 127962867 - 2 * (a1 & 0x7A08EF3)) ^ 0xD9663328));
  __asm { BR              X10 }
}

uint64_t sub_1D0DC2518@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1924
                                          * (*(_DWORD *)(v2 - 0x4FDE8986601786BLL) == ((v1 + 173953477) & 0xF5A1AF2F)
                                                                                    - 623069766)) ^ v1))
                            - 4))();
}

uint64_t sub_1D0DC2578@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  BOOL v6;

  v3 = *(_DWORD *)(v1 - 0x4FDE89866017873) - 1589078391;
  v4 = *(_DWORD *)(v1 - 0x4FDE89866017877) + 2056540018;
  v5 = v3 < 0xB42174C9;
  v6 = v3 > v4;
  if (v5 != v4 < 0xB42174C9)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v2 + 1) ^ v6) & 1 | (8
                                                                                 * (((v2 + 1) ^ v6) & 1)) | v2))
                            - 12))();
}

uint64_t sub_1D0DC2608@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  v5 = *(_QWORD *)(v3 - 0x4FDE89866017883);
  v6 = *(unsigned __int8 *)(v5 + (v2 - 316202565)) ^ 0xEF;
  v7 = (((((v4 - 457) ^ 0x3C) - 28) ^ *(unsigned __int8 *)(v5 + (v2 - 316202568))) << 24) | ((*(unsigned __int8 *)(v5 + (v2 - 316202567)) ^ 0xEF) << 16) | ((*(unsigned __int8 *)(v5 + (v2 - 316202566)) ^ (((v4 + 73) | 0x90) + 22)) << 8) | v6;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((122 * (((v1 + v7 - 2 * (v7 & 0x5ADCB8BF ^ v6 & 5) + 0x1000000) & 0xFFFFFF) != 2597346)) ^ (v4 - 457))))();
}

void sub_1D0DC26D4()
{
  _DWORD *v0;

  *v0 = 623109007;
}

void sub_1D0DC2948(_DWORD *a1, uint64_t a2)
{
  _BOOL4 v2;

  v2 = (*a1 + *(_DWORD *)(a2 + 4) + 2124578695) > 0xC8;
  __asm { BR              X10 }
}

uint64_t sub_1D0DC298C()
{
  return 4294925278;
}

void sub_1D0DC2ABC(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (1374699841 * ((((2 * (_DWORD)a1) | 0x97E9331C) - (_DWORD)a1 + 873162354) ^ 0xA6008187));
  __asm { BR              X10 }
}

uint64_t sub_1D0DC2B8C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;

  v12 = 1755732067 * ((&a4 & 0x1ED7EE20 | ~(&a4 | 0x1ED7EE20)) ^ 0x3FEEAC04);
  a6 = (v10 + 6) ^ v12;
  a8 = v12 ^ 0x57B971D5;
  a7 = &STACK[0x3A51940F6F7F0D28];
  a4 = &STACK[0xB8B022BDBBAD1DE];
  a5 = v11;
  v13 = (*(uint64_t (**)(unint64_t **))(a1 + 8 * (v10 - 300)))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v9
                                                      + 8
                                                      * ((1776
                                                        * (*(_DWORD *)(v11 - 0x4FDE8986601786BLL) == v8 + (v10 ^ 0x6AF) - 1194)) ^ v10))
                                          - 4))(v13);
}

uint64_t sub_1D0DC2C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return (*(uint64_t (**)(void))(v12 + 8 * (((a11 == v11 + 4) * ((v13 - 677) ^ 0x219)) ^ v13)))();
}

void sub_1D0DC2C9C(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned __int8 *v5;

  v3 = v5[3] ^ 0xEF;
  v4 = ((*v5 ^ 0xFFFFFFEF) << 24) | ((v5[1] ^ 0xEF) << 16) | ((v5[2] ^ 0xEF) << 8) | v3;
  *(_DWORD *)(*(_QWORD *)(v1 + 8) - 0x28677D891274B072) = v4 + v2 - 2 * (v4 & 0x5ADCB8BF ^ v3 & 5);
  *(_DWORD *)(v1 + 4) = *a1;
}

void sub_1D0DC2D5C(uint64_t a1)
{
  int v1;
  int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((a1 + 503769263 - 2 * (a1 & 0x1E06E8AF)) ^ 0xC0C05574);
  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x5005140540A45D4ALL);
  v4 = *(_QWORD *)a1;
  v3 = (535753261 * ((((&v3 | 0xFE862F58) ^ 0xFFFFFFFE) - (~&v3 | 0x179D0A7)) ^ 0xB8DDE88)) ^ (v1 - 406);
  sub_1D0D9B100((uint64_t)&v3);
  __asm { BR              X9 }
}

uint64_t sub_1D0DC2E8C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return (*(uint64_t (**)(void))(a1 + 8 * ((((v1 - 1475) ^ 0x8C) * (((v3 + v2) & 0x1F) == 2)) ^ v1)))();
}

uint64_t sub_1D0DC2EF0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((1650
                                          * (((v2 + 704) ^ 0x9BFB6D75)
                                           + ((v2 + 437117191) & 0xE5F21EFE)
                                           + (v4 ^ 0xEC46D3BD)
                                           + 2008923255
                                           + ((v3 - 661806670) & v1) < 0x7FFFFFFF)) ^ v2))
                            - 4))();
}

uint64_t sub_1D0DC2F7C@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  int v7;

  v7 = (4 * v5) ^ 0x300;
  *(_DWORD *)(*(_QWORD *)(v6 - 0x5005140540A45D46) + 4 * (((4 * v5) ^ 0x2A7F8BCC) + v1 + v2)) = *(_DWORD *)(*(_QWORD *)(v6 - 0x5005140540A45D46) + 4 * (((2 * v7) ^ 0x248 ^ v4) + v2));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((2 * (v4 + v2 + 855 < v3)) | (4 * (v4 + v2 + 855 < v3))) ^ v7))
                            - 4))();
}

void sub_1D0DC2FF0()
{
  JUMPOUT(0x1D0DC2FB0);
}

uint64_t sub_1D0DC2FF8@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((7
                                          * ((int)((v3 ^ 0xFCCFBF86) + 2000440830 + (v1 & 0xF99F7F0C) - 1946946949) <= (int)((3 * (v2 ^ 0x7C1)) ^ 0xFFFFF9E4))) ^ v2))
                            - 12))();
}

uint64_t sub_1D0DC3098@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;

  *(_DWORD *)(*(_QWORD *)(v5 - 0x5005140540A45D46) + 4 * (v2 + v4 + 1558)) = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(a2 + 8 * ((84 * (((v3 - 866) ^ (v2 + 2185)) + v4 >= 0)) ^ v3)) - 8))();
}

uint64_t sub_1D0DC30EC@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  _QWORD *v3;
  int v4;
  int v5;
  int v6;
  int v7;

  v7 = v1 + v5;
  *(_DWORD *)(*v3 + 4 * (v7 + 1557)) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v7 + 1556 >= 0) * v6) ^ v4)) - 8))();
}

void sub_1D0DC3128()
{
  int v0;
  int v1;
  int v2;
  int v3;
  _QWORD *v4;
  int v5;
  _DWORD *v6;
  _BOOL4 v7;

  v7 = *(_DWORD *)(*v4 + 4 * ((v5 ^ (v2 + 2897) ^ 0x7F9) + v0)) == v3;
  *v6 = (v2 + v0 - v7 + 1559) * v1 - 549541838 * (v0 - v7) + 1817896165;
}

void sub_1D0DC3370(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 1374699841 * ((a1 + 25318649 - 2 * (a1 & 0x18254F9)) ^ 0x6C764CF0);
  __asm { BR              X14 }
}

uint64_t sub_1D0DC34B0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  uint64_t v15;

  v14 = v11 > 0x7A6D4362;
  v15 = 4 * (((v10 - 1603720170) & 0x5F96D331 ^ (a1 + 720)) + v9);
  *(_DWORD *)(a9 + v15) = *(_DWORD *)(*(_QWORD *)(v12 - 0x5005140540A45D46) + v15);
  if (v14 == v9 - 56383085 < -2053981027)
    v14 = v9 - 56383085 < (int)(v11 + 93502621);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 + 8 * ((71 * !v14) ^ (v10 - 57))) - 4))(1603719985, 4238584211, 2240986269);
}

uint64_t sub_1D0DC3570()
{
  int v0;
  unsigned int v1;
  unsigned int v2;
  uint64_t v3;
  _BOOL4 v4;

  if (v2 > 0x103BC7B6 != v0 + 1725244734 < -272353207)
    v4 = v2 > 0x103BC7B6;
  else
    v4 = v0 + 1725244734 < (int)(v2 + 1875129125 + (v1 ^ 0x614));
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((119 * v4) ^ v1)) - 12))();
}

uint64_t sub_1D0DC35FC@<X0>(int a1@<W0>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  int v20;
  _BOOL4 v21;

  *(_DWORD *)(a11 + 4 * (v11 + a3)) = a2;
  v19 = v14 + v11 + 1;
  v20 = (v17 > v16) ^ (v19 < v13);
  v21 = v19 < v15;
  if (v20)
    v21 = v17 > v16;
  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((v21 * a1) ^ v12)) - 12))();
}

uint64_t sub_1D0DC3660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7
                                                                                          + 8
                                                                                          * (v6 ^ (107 * (v5 != 0))))
                                                                              - 8))(a1, a2, a3, a4, a5);
}

uint64_t sub_1D0DC36A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, _DWORD *a17)
{
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;

  v21 = 3 * (v17 ^ 0x705);
  v22 = ((v18 - 302752491) ^ v21) + a12;
  v23 = 2 * (v21 ^ 0x4F1);
  v24 = (*(_DWORD *)(*(_QWORD *)(a13 + 8) - 0x32EE9BBD2B2B4D73) - 1404406359) * (*a17 ^ 0x46245C8B);
  v25 = 1734042137
      * ((-524960656 - ((v20 - 128) ^ 0x4265622A | 0xE0B5BC70) + ((v20 - 128) ^ 0x4265622A | 0x1F4A438F)) ^ 0x1E1E2E8);
  *(_DWORD *)(v20 - 112) = v25 ^ 0x2044C4D;
  *(_QWORD *)(v20 - 104) = a14;
  *(_QWORD *)(v20 - 128) = a15;
  *(_DWORD *)(v20 - 120) = v23 - v25 + 101;
  *(_DWORD *)(v20 - 116) = v25 + (v24 ^ 0xED6D3F5F) + ((v24 << ((v23 - 103) & 0x7B ^ 0x38)) & 0xDADA7EBE) + 1069538024;
  v26 = ((uint64_t (*)(uint64_t))*(&off_1E8EC5D70 + v23 - 1144))(v20 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((839 * (v22 > -302753746)) ^ v23)) - 8))(v26);
}

void sub_1D0DC384C()
{
  JUMPOUT(0x1D0DC371CLL);
}

uint64_t sub_1D0DC3854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;

  v17 = 1755732067 * ((839139926 - ((v16 - 128) | 0x32044256) + ((v16 - 128) | 0xCDFBBDA9)) ^ 0x133D0072);
  *(_DWORD *)(v16 - 128) = ((a12 << 6) & 0xFFECDD40) - v17 + ((32 * a12) ^ 0x7FF66EBF) + ((v14 + 445) ^ 0xAF7DF51F);
  *(_DWORD *)(v16 - 112) = (v14 + 1198) ^ v17;
  *(_QWORD *)(v16 - 120) = a14;
  sub_1D0DBACFC(v16 - 128);
  return ((uint64_t (*)(void))(*(_QWORD *)(v15
                                        + 8 * ((((*a10 - 33836110) < 0x7FFFFFFF) * (v14 + 642)) ^ v14))
                            - 12))();
}

uint64_t sub_1D0DC3928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;

  v18 = v14 - 37;
  *(_DWORD *)(v17 - 112) = v18 + 1374699841 * ((v17 - 1665098550 - 2 * ((v17 - 128) & 0x9CC09D4A)) ^ 0xF1348543) + 51;
  *(_QWORD *)(v17 - 128) = &STACK[0x5005140540A45D8E];
  *(_QWORD *)(v17 - 120) = a14;
  sub_1D0DBA800(v17 - 128);
  *(_DWORD *)(v17 - 128) = v18 + 235795823 * ((v17 - 128) ^ 0x94AD4959) + 354;
  *(_QWORD *)(v17 - 120) = v16;
  *(_QWORD *)(v17 - 112) = a14;
  v19 = ((uint64_t (*)(uint64_t))((char *)*(&off_1E8EC5D70 + v18 - 123) - 8))(v17 - 128);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15
                                                      + 8
                                                      * (((((v18 - 117) ^ (*(_DWORD *)(v17 - 124) > 0x78035E6u)) & 1)
                                                        * (v18 - 231)) ^ v18))
                                          - 12))(v19);
}

uint64_t sub_1D0DC3A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  uint64_t v17;
  int v18;
  int v19;

  v18 = (v16 - 38) | 0xB;
  v19 = (v18 ^ 0xFDFBB168) + a16;
  if (v19 < 0)
    v19 = -v19;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8
                                                      * ((1673
                                                        * ((int)((v19 ^ 0xCE276D6F)
                                                               + 870112990
                                                               + ((2 * v19) & 0x9C4EDADE)
                                                               - 33836110) >= 0)) ^ v18))
                                          - (v18 + 269)
                                          + 996))(1176788107);
}

uint64_t sub_1D0DC3AA8(int a1)
{
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((45 * (*(_DWORD *)(v2 + 4 * v3) == a1)) ^ v1)) - 4))();
}

uint64_t sub_1D0DC3AD0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((1673 * (v1 + v2 - 1001 + v3 >= 0)) ^ v0))
                            - (v0 + 269)
                            + 996))();
}

uint64_t sub_1D0DC3B04()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v3 = *(_QWORD *)(v5 + 32);
  *(_DWORD *)(v2 - 112) = v0 + 1374699841 * (((v2 - 128) & 0xA7CD2DE6 | ~((v2 - 128) | 0xA7CD2DE6)) ^ 0x35C6CA10) - 673;
  *(_QWORD *)(v2 - 128) = v3;
  *(_QWORD *)(v2 - 120) = v1;
  return sub_1D0DBA800(v2 - 128);
}

void sub_1D0DC3E84(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  _BOOL4 v5;

  v1 = 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x4FDE89866017877) + 751207453;
  v3 = (*(_DWORD *)(a1 + 16) ^ v1) + 432332804;
  v4 = (v3 < 0x6653A974) ^ (v2 < 0x6653A974);
  v5 = v2 < v3;
  if (v4)
    v5 = v3 < 0x6653A974;
  __asm { BR              X11 }
}

uint64_t sub_1D0DC3F9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  v3 = (*(_BYTE *)(v1 - 0x4FDE8986601786FLL) & 1) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v3) | (v3 << 7)) ^ v0))
                            - (((v0 - 540) | 0x300u)
                             - 747)
                            + 96))();
}

void sub_1D0DC3FE0()
{
  uint64_t v0;

  *(_DWORD *)(v0 - 0x4FDE8986601786BLL) = 623108974;
}

uint64_t sub_1D0DC46B8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1D0DC46D0(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;
  int v12;

  v1 = 1225351577 * ((~result & 0x770DEC85B9447D1 | result & 0xF88F2137A46BB82ELL) ^ 0xEAE67690780E9FC7);
  v2 = *(_QWORD *)(result + 16) - v1;
  v3 = *(_QWORD *)(result + 40) ^ v1;
  v4 = *(_DWORD *)result + v1;
  v5 = *(_DWORD *)(result + 8) - v1;
  v6 = *(_DWORD *)(result + 28) ^ v1;
  v7 = *(_DWORD *)(result + 24) ^ v1;
  v8 = v3 > v2;
  v9 = v3 == v2;
  v10 = v8;
  if ((v7 & 1) != 0)
    v11 = v10;
  else
    v11 = v9;
  if (v11)
    v12 = v5;
  else
    v12 = v4;
  *(_DWORD *)(result + 4) = v6 ^ v12;
  return result;
}

uint64_t sub_1D0DC4764(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1D0DC477C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v2 = 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 48);
  v7 = 1224239923 * ((&v10 + 1074847235 - 2 * ((unint64_t)&v10 & 0x4010DE03)) ^ 0xB2A323D4);
  v8 = (*(_DWORD *)(a1 + 36) ^ v2) - 1695027407;
  v11 = (*(_DWORD *)(a1 + 8) ^ v2 ^ 0xE9F58A4)
      - v7
      + 2130148330
      + ((2 * (*(_DWORD *)(a1 + 8) ^ v2)) & 0xB77DBFFE ^ 0xA2410EB6);
  v10 = v6;
  v13 = v3;
  v14 = v5;
  v16 = v8 + v7 + 937;
  v12 = v4;
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_1E8EC5D70 + v8) - 8))(&v10);
  *(_DWORD *)(a1 + 32) = v15;
  return result;
}

void sub_1D0DC48D8()
{
  unint64_t v0;
  uint64_t v1;
  char *v2;
  unsigned int v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v0 = (qword_1EFC551E8 - qword_1EFC55230) ^ (unint64_t)&v1;
  qword_1EFC55230 = 1209664481 * (v0 - 0x2DEB88543200F8ELL);
  qword_1EFC551E8 = 1209664481 * (v0 ^ 0x2DEB88543200F8ELL);
  LOBYTE(v0) = -31 * ((qword_1EFC551E8 - -31 * (v0 + 114)) ^ 0x8E);
  v2 = (char *)*(&off_1E8EC5D70
               + (v0 ^ byte_1D0E96EB0[byte_1D0E93720[v0] ^ 0x1E])
               - 173)
     - 4;
  v3 = 1279 - 3804331 * ((((2 * &v2) | 0x9FFF9BFA) - &v2 - 1342164477) ^ 0xB5613EAB);
  sub_1D0D93E90((uint64_t)&v2);
}

void sub_1D0DC49FC(uint64_t a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = (3804331
      * ((-1102021746 - (&v1 ^ 0x8C99FC00 | 0xBE507B8E) + (&v1 ^ 0x8C99FC00 | 0x41AF8471)) ^ 0x37A88B27)) ^ 0x403;
  v2 = a1;
  sub_1D0D9B494((uint64_t)&v1);
}

void sub_1D0DC4AA8()
{
  uint64_t v0;
  unsigned int v1;
  uint64_t v2;
  char *v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v0 = qword_1EFC551E8 - qword_1EFC551F8 - (_QWORD)&v2;
  qword_1EFC551F8 = 1209664481 * (v0 - 0x2DEB88543200F8ELL);
  qword_1EFC551E8 = 1209664481 * (v0 ^ 0x2DEB88543200F8ELL);
  LOBYTE(v0) = -31 * ((-31 * (v0 + 114)) ^ 0x8E ^ qword_1EFC551E8);
  v3 = (char *)*(&off_1E8EC5D70
               + (v0 ^ byte_1D0E93820[byte_1D0E8EB90[v0] ^ 0xD])
               + 42);
  v4 = 1279 - 3804331 * (&v3 ^ 0xFA9EF356);
  sub_1D0D93E90((uint64_t)&v3);
  v3 = (char *)*(&off_1E8EC5D70
               + ((-31 * ((qword_1EFC551E8 + qword_1EFC551F8) ^ 0x8E)) ^ byte_1D0E96EB0[byte_1D0E93720[(-31 * ((qword_1EFC551E8 + qword_1EFC551F8) ^ 0x8E))] ^ 0x9C])
               - 150)
     - 4;
  v4 = 1279
     - 3804331
     * (((&v3 | 0x9C15EF6E) - &v3 + (&v3 & 0x63EA1090)) ^ 0x668B1C38);
  sub_1D0D93E90((uint64_t)&v3);
  v1 = 3804331
     * (((&v3 | 0x535E46B9) - &v3 + (&v3 & 0xACA1B940)) ^ 0xA9C0B5EF);
  HIDWORD(v3) = v1 + 325;
  LOBYTE(v3) = v1 ^ 0x70;
  sub_1D0DC0EE8((uint64_t)&v3);
}

uint64_t sub_1D0DC4CA4(unsigned int a1)
{
  return byte_1D0E96EB0[byte_1D0E93720[a1] ^ 0x1E] ^ a1;
}

uint64_t sub_1D0DC4CCC(unsigned int a1)
{
  return byte_1D0E93820[byte_1D0E8EB90[a1] ^ 0xAB] ^ a1;
}

uint64_t sub_1D0DC4CF8(unsigned int a1)
{
  return byte_1D0E93820[byte_1D0E8EB90[a1] ^ 0xFC] ^ a1;
}

uint64_t sub_1D0DC4D20(unsigned int a1)
{
  return byte_1D0E93820[byte_1D0E8EB90[a1] ^ 0xD] ^ a1;
}

uint64_t sub_1D0DC4D4C(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  int v4;
  BOOL v5;
  _BOOL4 v6;
  int v7;

  v1 = 1224239923 * ((2 * (result & 0x41C6001674A78D56) - result + 0x3E39FFE98B5872A9) ^ 0x16634A8079EB8F7ELL);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_QWORD *)(result + 40) + v1;
  v4 = *(_DWORD *)(result + 28) - 1224239923 * ((2 * (result & 0x74A78D56) - result - 1957137751) ^ 0x79EB8F7E);
  v5 = v2 == v3;
  v6 = v2 > v3;
  v7 = v5;
  if (((*(_DWORD *)(result + 4) + 1224239923 * ((2 * (result & 0x74A78D56) - (_DWORD)result - 1957137751) ^ 0x79EB8F7E)) & 1) == 0)
    v6 = v7;
  if (!v6)
    v4 = *(_DWORD *)result ^ (1224239923 * ((2 * (result & 0x74A78D56) - result - 1957137751) ^ 0x79EB8F7E));
  *(_DWORD *)(result + 8) = v4 ^ (*(_DWORD *)(result + 32)
                                + 1224239923 * ((2 * (result & 0x74A78D56) - result - 1957137751) ^ 0x79EB8F7E));
  return result;
}

uint64_t sub_1D0DC4DEC(uint64_t result)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  BOOL v4;
  _BOOL4 v5;
  int v6;
  _DWORD *v7;

  v1 = 1759421093 * (((result | 0x263174143DF22E67) - result + (result & 0xD9CE8BEBC20DD198)) ^ 0x88FB5448E8F9E33);
  v2 = *(_QWORD *)(result + 16) ^ v1;
  v3 = *(_QWORD *)(result + 32) + v1;
  v4 = v2 == v3;
  v5 = v2 >= v3;
  v6 = !v4;
  if (((*(_DWORD *)(result + 4) - (_DWORD)v1) & 1) == 0)
    v5 = v6;
  if (v5)
    v7 = (_DWORD *)(result + 40);
  else
    v7 = (_DWORD *)result;
  *(_DWORD *)(result + 28) = (*v7 - v1) ^ (*(_DWORD *)(result + 24) + v1);
  return result;
}

uint64_t sub_1D0DC4E90(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 88) = 92;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1D0DC4EB0(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v1 = *(_DWORD *)a1 + 1178560073 * ((((2 * a1) | 0xF60BB838) - a1 - 2063981596) ^ 0x516DF1E7);
  v2 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v4 = v2;
  v5 = v1 + 235795823 * ((2 * (&v4 & 0x7C6E3488) - &v4 + 59886455) ^ 0x973C822E) - 426521995;
  return ((uint64_t (*)(uint64_t *))((char *)*(&off_1E8EC5D70 + (v1 ^ 0x196C39EA)) - 4))(&v4);
}

uint64_t sub_1D0DC4FA8(int *a1)
{
  unsigned int v2;
  uint64_t result;
  int v4;

  v2 = a1[1]
     + 1734042137 * ((-1929048420 - (a1 | 0x8D050E9C) + (a1 | 0x72FAF163)) ^ 0x2E34322E);
  result = ((uint64_t (*)(_QWORD, char *))*(&off_1E8EC5D70 + (int)(v2 + 504207254)))(*(&off_1E8EC5D70 + (int)(v2 ^ 0xE1F269C0)), (char *)*(&off_1E8EC5D70 + (int)(v2 ^ 0xE1F26954)) - 12);
  v4 = *(_DWORD *)*(&off_1E8EC5D70 + (int)(v2 ^ 0xE1F269E2));
  if ((_DWORD)result)
    v4 = 623108612;
  *a1 = v4;
  return result;
}

uint64_t sub_1D0DC5070(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 24);
  return 0;
}

void sub_1D0DC5088(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v2 = 3804331 * ((2 * (&v1 & 0x1E7E56F0) - &v1 + 1635887375) ^ 0x9B1F5A59) + 1164;
  v1 = a1;
  sub_1D0D93FF8((uint64_t)&v1);
}

void sub_1D0DC511C(_DWORD *a1)
{
  unsigned int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v1 = *a1 ^ (1374699841 * (((_DWORD)a1 - 1542394297 - 2 * (a1 & 0xA410EE47)) ^ 0xC9E4F64E));
  v2 = *(_QWORD *)*(&off_1E8EC5D70 + (int)(v1 ^ 0x7F7DFD27));
  v4 = v1
     + 3804331 * (((&v3 | 0xBBF09D3) - &v3 + (&v3 & 0xF440F628)) ^ 0xF121FA85)
     - 2138962196;
  v3 = v2;
  sub_1D0D93FF8((uint64_t)&v3);
}

uint64_t sub_1D0DC5210(char a1, unsigned int a2)
{
  return byte_1D0E93520[(byte_1D0E8E890[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D0DC523C(unsigned int a1)
{
  return byte_1D0E93520[byte_1D0E8E890[a1] ^ 0x18] ^ a1;
}

uint64_t sub_1D0DC5264(char a1, unsigned int a2)
{
  return byte_1D0E93620[(byte_1D0E8E990[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D0DC5290(unsigned int a1)
{
  return byte_1D0E93620[byte_1D0E8E990[a1] ^ 0x95] ^ a1;
}

uint64_t sub_1D0DC52BC(char a1, unsigned int a2)
{
  return byte_1D0E8EA90[(byte_1D0E9B3B0[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D0DC52E8(unsigned int a1)
{
  return byte_1D0E8EA90[byte_1D0E9B3B0[a1] ^ 0xDD] ^ a1;
}

uint64_t sub_1D0DC5314(char a1, unsigned int a2)
{
  return byte_1D0E9B4B0[(byte_1D0E96DB0[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D0DC5340(unsigned int a1)
{
  return byte_1D0E9B4B0[byte_1D0E96DB0[a1] ^ 0x46] ^ a1;
}

uint64_t sub_1D0DC536C(char a1, unsigned int a2)
{
  return byte_1D0E96EB0[(byte_1D0E93720[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D0DC5398(char a1, unsigned int a2)
{
  return byte_1D0E93820[(byte_1D0E8EB90[a2] ^ a1)] ^ a2;
}

uint64_t sub_1D0DC53C4(unsigned int a1)
{
  return byte_1D0E96EB0[byte_1D0E93720[a1] ^ 0x9C] ^ a1;
}

uint64_t sub_1D0DC53F0(unsigned int a1)
{
  return byte_1D0E8EA90[byte_1D0E9B3B0[a1] ^ 0xC5] ^ a1;
}

uint64_t sub_1D0DC541C(uint64_t a1)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  uint64_t result;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v2 = 3804331 * ((a1 + 2012056994 - 2 * (a1 & 0x77ED8DA2)) ^ 0x8D737EF4);
  v4 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_DWORD *)(a1 + 24);
  v8 = *(_DWORD *)(a1 + 4) - 368400020 + v2;
  v9 = 235795823 * ((2 * (&v11 & 0x1605F2A8) - &v11 - 369488553) ^ 0x7D57440E);
  v16 = v9 ^ (v8 + 1588);
  v17 = v4;
  v11 = v6;
  v12 = v7 - v2 + v9 + 630082386;
  v13 = v5;
  v14 = v3;
  result = ((uint64_t (*)(uint64_t *))((char *)*(&off_1E8EC5D70 + v8) - 8))(&v11);
  *(_DWORD *)(a1 + 48) = v15;
  return result;
}

uint64_t sub_1D0DC554C(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  BOOL v8;
  _BOOL4 v9;
  int v10;
  int v11;

  v1 = 1734042137 * (((result | 0x3273140D7D0F4296) - (result & 0x3273140D7D0F4296)) ^ 0x280CB09621C181DBLL);
  v2 = *(_DWORD *)(result + 8) - v1;
  v3 = *(_DWORD *)result ^ v1;
  v4 = *(_QWORD *)(result + 24) ^ v1;
  v5 = *(_DWORD *)(result + 4) - v1;
  v6 = *(_DWORD *)(result + 12) - v1;
  v7 = *(_QWORD *)(result + 40) - v1;
  v8 = v7 < v4;
  v9 = v7 < (unint64_t)v4;
  v10 = v8;
  if ((v2 & 1) != 0)
    v9 = v10;
  if (v9)
    v11 = v5;
  else
    v11 = v3;
  *(_DWORD *)(result + 32) = v11 ^ v6;
  return result;
}

uint64_t sub_1D0DC55D8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 8);
  return 0;
}

uint64_t sub_1D0DC55F0(uint64_t a1)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v2 = a1;
  v3 = 1279 - 3804331 * ((&v2 & 0xA4832A88 | ~(&v2 | 0xA4832A88)) ^ 0xA1E22621);
  sub_1D0D93E90((uint64_t)&v2);
  return v4;
}

uint64_t sub_1D0DC5684(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t result;
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v2 = 1374699841 * ((-2 - ((a1 | 0x52E86AE9) + (~(_DWORD)a1 | 0xAD179516))) ^ 0xC0E38D1F);
  v3 = *(_DWORD *)(a1 + 24) ^ v2;
  v4 = *(_DWORD *)a1 - v2;
  v5 = *(_DWORD *)(a1 + 8) ^ v2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = 3804331
     * (((&v10 | 0xB301206E) - &v10 + (&v10 & 0x4CFEDF90)) ^ 0x499FD338);
  v10 = v3 - v8 + 2024874485;
  v11 = v6;
  v12 = v5 + v8 + 517354123;
  v13 = 269034737 * v4 + v8 - 2 * ((269034737 * v4 + 1029381920) & 0x3243AE1F ^ (269034737 * v4) & 0xB) - 274805452;
  v14 = v7;
  result = ((uint64_t (*)(int *))((char *)*(&off_1E8EC5D70 + (int)(v3 ^ 0x874EE3A0)) - 4))(&v10);
  *(_DWORD *)(a1 + 4) = v15;
  return result;
}

_BYTE *sub_1D0DC580C(_BYTE *result, char a2, unint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v3 = -(int)result & 7;
  if (v3 > a3)
    LODWORD(v3) = a3;
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  v4 = a3 - v3;
  v6 = v4;
  v5 = v4 & 7;
  switch(v6)
  {
    case 0uLL:
      return result;
    case 1uLL:
      goto LABEL_20;
    case 2uLL:
      goto LABEL_19;
    case 3uLL:
      goto LABEL_18;
    case 4uLL:
      goto LABEL_17;
    case 5uLL:
      goto LABEL_16;
    case 6uLL:
      goto LABEL_15;
    case 7uLL:
      *result++ = a2;
LABEL_15:
      *result++ = a2;
LABEL_16:
      *result++ = a2;
LABEL_17:
      *result++ = a2;
LABEL_18:
      *result++ = a2;
LABEL_19:
      *result++ = a2;
LABEL_20:
      *result = a2;
      break;
    default:
      result = (_BYTE *)((uint64_t (*)(void))((char *)&loc_1D0DC589C + 4 * byte_1D0E96FB7[(v5 >> 3) & 7]))();
      break;
  }
  return result;
}

uint64_t sub_1D0DC5900(unsigned int a1)
{
  return byte_1D0E8EA90[byte_1D0E9B3B0[a1] ^ 0x8C] ^ a1;
}

void SBSystemAppMain_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_5(&dword_1D0540000, a2, a3, "failed to create tempPath for lastRestoreIdentifier : '%@'", a5, a6, a7, a8, 2u);
  OUTLINED_FUNCTION_2_0();
}

void SBSystemAppMain_cold_2()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, v0, (uint64_t)v0, "failed to move '%@' to lastRestoreIdentifierPath : error=%@", v1);
  OUTLINED_FUNCTION_2_0();
}

void SBSystemAppMain_cold_3()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, v0, (uint64_t)v0, "failed to write lastRestoreIdentifier to '%@' : error=%@", v1);
  OUTLINED_FUNCTION_2_0();
}

void SBSystemAppMain_cold_4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0(&dword_1D0540000, v0, v1, "finished purging defunct image caches", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_4();
}

void SBSystemAppMain_cold_5()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0(&dword_1D0540000, v0, v1, "not checking for defunct image caches because the last build is too recent", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_4();
}

void SBSystemAppMain_cold_6()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0(&dword_1D0540000, v0, v1, "no lastRestoreIdentifier to read", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_4();
}

void SBSystemAppMain_cold_7(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_5(&dword_1D0540000, a2, a3, "could not read lastRestoreIdentifier : error=%{public}@", a5, a6, a7, a8, 2u);
  OUTLINED_FUNCTION_2_0();
}

void SBSystemAppMain_cold_8(NSObject *a1)
{
  int v2;
  int *v3;
  char *v4;
  _DWORD v5[2];
  __int16 v6;
  char *v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v2 = *__error();
  v3 = __error();
  v4 = strerror(*v3);
  v5[0] = 67109378;
  v5[1] = v2;
  v6 = 2080;
  v7 = v4;
  _os_log_error_impl(&dword_1D0540000, a1, OS_LOG_TYPE_ERROR, "Error setting low space io policy: %d (%s)", (uint8_t *)v5, 0x12u);
}

void ___languageMayHaveChanged_block_invoke_cold_1()
{
  os_log_t v0;
  uint8_t v1[16];

  OUTLINED_FUNCTION_6();
  _os_log_error_impl(&dword_1D0540000, v0, OS_LOG_TYPE_ERROR, "Unknown language: [NSLocale preferredLanguages] is nil.", v1, 2u);
  OUTLINED_FUNCTION_4();
}

void ___languageMayHaveChanged_block_invoke_cold_2(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138543618;
  v4 = SBBootLanguages;
  v5 = 2114;
  v6 = a1;
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, a2, a3, "Got a language change notification but we're not doing anything! Boot languages: %{public}@, new preferred languages: %{public}@", (uint8_t *)&v3);
  OUTLINED_FUNCTION_2_0();
}

void __getWFSpringBoardWebClipMetadataClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFSpringBoardWebClipMetadataClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SBUIController.m"), 217, CFSTR("Unable to find class %s"), "WFSpringBoardWebClipMetadata");

  __break(1u);
}

void VoiceShortcutClientLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *VoiceShortcutClientLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBUIController.m"), 215, CFSTR("%s"), *a1);

  __break(1u);
}

void __getWFSpringBoardWorkflowRunnerClientClass_block_invoke_cold_1()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFSpringBoardWorkflowRunnerClientClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SBUIController.m"), 216, CFSTR("Unable to find class %s"), "WFSpringBoardWorkflowRunnerClient");

  __break(1u);
}

void SBWorkspaceApplicationForURLWithError_cold_1()
{
  NSObject *v0;
  uint8_t v1[24];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, v0, (uint64_t)v0, "Unable to launch url %{public}@ due to restrictions on %{public}@", v1);
  OUTLINED_FUNCTION_2_0();
}

void _SBWorkspaceCanLaunchApplication_cold_1(uint64_t a1, NSObject *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138543618;
  v4 = 0;
  v5 = 2112;
  v6 = a1;
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, a2, a3, "Cannot launch nil SBApplication (workspace app:%{public}@ url:%@)", (uint8_t *)&v3);
  OUTLINED_FUNCTION_2_0();
}

void _SBWorkspaceCanLaunchApplication_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "Cannot launch application scene %{public}@ while restart manager is pending exit", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBWorkspaceCanLaunchApplication_cold_3()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "Cannot launch application scene %{public}@ while a termination assertion is held on to it's application", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBWorkspaceCanLaunchApplication_cold_4()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "Cannot launch application scene %{public}@ because it's application is being uninstalled", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBWorkspaceCanLaunchApplication_cold_5()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "Attempted to launch restricted application scene %{public}@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBWorkspaceCanLaunchApplication_cold_6()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "Attempted to activate application scene %{public}@ while device locked", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBWorkspaceCanLaunchApplication_cold_7()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "Cannot launch application scene %{public}@ while it's application is being updated", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBWorkspaceCanLaunchApplication_cold_8()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "Cannot open URL in application scene %{public}@ while running setup.", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void SBWorkspaceLauncherIsActive_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_0_3(&dword_1D0540000, v0, v1, "don't call SBWorkspaceLauncherIsActive() without a window scene!", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_4();
}

void SBWorkspaceDestroyApplicationSceneHandlesWithIntent_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "%{public}@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBEmergencyCallBackModeChangeHandler_cold_1(uint64_t a1, uint64_t a2, os_log_t log)
{
  int v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 138412546;
  v4 = a1;
  v5 = 2112;
  v6 = a2;
  _os_log_error_impl(&dword_1D0540000, log, OS_LOG_TYPE_ERROR, "[SBTelephonyManager] _SBEmergencyCallBackModeChangeHandler: could not understand payload for %@ -> %@", (uint8_t *)&v3, 0x16u);
  OUTLINED_FUNCTION_2_0();
}

void __getRTTSettingsClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *RTTUtilitiesLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBTelephonyManager.m"), 97, CFSTR("%s"), *a1);

  __break(1u);
}

void __getRTTSettingsClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getRTTSettingsClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SBTelephonyManager.m"), 98, CFSTR("Unable to find class %s"), "RTTSettings");

  __break(1u);
}

void ___updateLocale_block_invoke_2_cold_1(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  _DWORD v5[2];
  __int16 v6;
  int v7;
  __int16 v8;
  const char *v9;
  uint64_t v10;

  v10 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v4 = *(_DWORD *)(v3 + 32);
  LODWORD(v3) = *(_DWORD *)(v3 + 36);
  v5[0] = 67109634;
  v5[1] = v4;
  v6 = 1024;
  v7 = v3;
  v8 = 2080;
  v9 = "void _updateLocale(SBTelephonyManager *__strong, CTError (^__strong)(CTServerConnectionRef, CFStringRef *), void "
       "(^__strong)(CFStringRef), void (^__strong)(void))_block_invoke_2";
  OUTLINED_FUNCTION_1_2(&dword_1D0540000, a2, a3, "background CTServerConnection returned error: (%i, %i) in %s", (uint8_t *)v5);
  OUTLINED_FUNCTION_2_0();
}

void SPDNotificationCallback_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_5(&dword_1D0540000, a2, a3, "spd wakeup for nonexistent app: %d", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_4();
}

void SPDNotificationErrorCallback_cold_1(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_5(&dword_1D0540000, a2, a3, "spd error: %d", a5, a6, a7, a8, 0);
  OUTLINED_FUNCTION_4();
}

void SBCADifferenceMaskCalculate_cold_1(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;
  __int16 v5;
  const __CFString *v6;
  __int16 v7;
  int v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "SBCADisplayDifferenceMask SBCADifferenceMaskCalculate(CADisplay *__strong _Nonnull, CADisplayMode *__strong _Nonnull, NSString *__strong _Nonnull, CGSize, NSUInteger)");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 138544130;
  v4 = v2;
  v5 = 2114;
  v6 = CFSTR("SBDisplayControlling.m");
  v7 = 1024;
  v8 = 68;
  v9 = 2114;
  v10 = a1;
  _os_log_error_impl(&dword_1D0540000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "failure in %{public}@ (%{public}@:%i) : %{public}@", (uint8_t *)&v3, 0x26u);

}

void _SBXXDisplayIdentifierForPID_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXDisplayIdentifiersForPID_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void serializePropertyListObject_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "SBMIG: Unable to serialize property list object: %{public}@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXAppSwitcherServiceRegister_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXApplicationDisplayIdentifiers_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXFrontmostApplicationDisplayIdentifier_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXBundlePathForDisplayIdentifier_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXLocalizedApplicationNameForDisplayIdentifier_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSuspendFrontmostApp_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXInterruptKeybagRefetch_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetWantsVolumeButtonEvents_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_5(&dword_1D0540000, a1, a3, "Only Apple applications may use %s", a5, a6, a7, a8, 2u);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXSetWantsLockButtonEvents_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[14];
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_7_2();
  v3 = "kern_return_t _SBXXSetWantsLockButtonEvents(mach_port_t, int32_t, audit_token_t)";
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, v0, v1, "Entitlement %{public}@ required to use %s", v2);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXPresentPowerDownUI_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXReboot_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXShutDown_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetApplicationBadgeNumber_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetApplicationBadgeString_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetApplicationShowsProgress_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetAllApplicationsShowProgress_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetAllApplicationsShowSyncIndicator_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetShowsOverridesForRecording_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXEnableLockScreenBundle_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXLockDeviceAndFeatures_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXDimScreen_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "%{public}@ requested screen dim, which is not supported", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXDimScreen_cold_2(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetBatteryAwakeTime_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetRecentSleepsWakes_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetScheduledPowerEvents_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetBatteryUsageTimesInSeconds_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXAddWebClipToHomeScreen_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "Error: clip identifier '%@' is not a valid UUID", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXAddWebClipToHomeScreen_cold_2(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXRemoveWebClipFromHomeScreen_cold_2(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetNowPlayingAppBundleIdentifier_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetTopButtonFrames_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetDisplayIdentifiers_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetDisplayIdentifiersForExternalAccessoryProtocols_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetVoiceControlEnabled_cold_1(void *a1)
{
  void *v1;
  void *v2;
  void *v3;
  os_log_t v4;
  os_log_type_t v5;
  const char *v6;
  uint8_t *v7;

  objc_msgSend(a1, "pid");
  BSProcessDescriptionForPID();
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  BSPrettyFunctionName();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_8();
  _os_log_error_impl(v3, v4, v5, v6, v7, 0x20u);

}

void _SBXXGetMediaVolume_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetMediaVolume_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetIconState_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetPendingIconState_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetFlattenedIconState_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetIconState_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetIconPNGData_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetVoiceRecognitionAudioInputPaths_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint8_t v6;

  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_5(&dword_1D0540000, v0, v1, "%@", v2, v3, v4, v5, v6);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXSetVoiceRecognitionAudioInputPaths_cold_2(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetAssistantRecognitionStrings_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  int v2;
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 136315394;
  v3 = "_SBXXSetAssistantRecognitionStrings";
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, v0, v1, "%s %@", (uint8_t *)&v2);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXSetAssistantRecognitionStrings_cold_2(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetAlertSuppressionContexts_cold_1()
{
  void *v0;
  os_log_t v1;
  os_log_type_t v2;
  const char *v3;
  uint8_t *v4;

  BSPIDForAuditToken();
  OUTLINED_FUNCTION_8();
  _os_log_error_impl(v0, v1, v2, v3, v4, 0x12u);
  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetAlertSuppressionContextsBySectionIdentifier_cold_1()
{
  void *v0;
  os_log_t v1;
  os_log_type_t v2;
  const char *v3;
  uint8_t *v4;

  BSPIDForAuditToken();
  OUTLINED_FUNCTION_8();
  _os_log_error_impl(v0, v1, v2, v3, v4, 8u);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXSetAppIsConnectedToEA_cold_1()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[14];
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_7_2();
  v3 = "kern_return_t _SBXXSetAppIsConnectedToEA(mach_port_t, pid_t, uint8_t, audit_token_t)";
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, v0, v1, "Entitlement %{public}@ required to use %s", v2);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXGetWallpaperPreviewSurface_cold_1(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 136315394;
  *(_QWORD *)(a2 + 4) = "_SBXXGetWallpaperPreviewSurface";
  *(_WORD *)(a2 + 12) = 2114;
  *(_QWORD *)(a2 + 14) = a1;
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, a3, (uint64_t)a3, "%s %{public}@", (uint8_t *)a2);

}

void _SBXXGetWallpaperPreview_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetWallpaperOptionsForLocations_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXActivateAssistantWithContext_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_5(&dword_1D0540000, a1, a3, "%s is deprecated and this particular reason is no longer functional. Please move to using the SiriActivation.framework directly instead.", a5, a6, a7, a8, 2u);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXActivateAssistantWithContext_cold_2()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[14];
  const char *v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_7_2();
  v3 = "kern_return_t _SBXXActivateAssistantWithContext(mach_port_t, audit_token_t, uint32_t, sbs_property_list_data_t, m"
       "ach_msg_type_number_t)";
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, v0, v1, "Entitlement %{public}@ required to use %s", v2);
  OUTLINED_FUNCTION_2_0();
}

void _SBXXSetProceduralWallpaper_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetWallpaperImageForLocations_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetWallpaperImageSurfaceForLocations_cold_1(void *a1, uint64_t a2, NSObject *a3)
{
  *(_DWORD *)a2 = 136315394;
  *(_QWORD *)(a2 + 4) = "_SBXXSetWallpaperImageSurfaceForLocations";
  *(_WORD *)(a2 + 12) = 2112;
  *(_QWORD *)(a2 + 14) = a1;
  OUTLINED_FUNCTION_1_0(&dword_1D0540000, a3, (uint64_t)a3, "%s %@", (uint8_t *)a2);

}

void _SBXXClearWallpaperAsset_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetWallpaperOptions_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetWallpaperVariant_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXGetWallpaperLegibilitySettings_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_4_2();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXAddWallpaperAnimationSuspensionAssertion_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXAddAlertItemsSuppressionAssertion_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXAddBiometricAssertion_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetReachabilityEnabled_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXOverrideDisplayedDate_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void _SBXXSetIdleText_cold_1(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  objc_msgSend(a1, "localizedDescription");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_1_1();
  OUTLINED_FUNCTION_15(&dword_1D0540000, v2, v3, "%s %{public}@", v4, v5, v6, v7, 2u);

  OUTLINED_FUNCTION_2_2();
}

void __getAAUIProfilePictureStoreClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AppleAccountUILibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBDashBoardSetupViewController.m"), 59, CFSTR("%s"), *a1);

  __break(1u);
}

void __getAAUIProfilePictureStoreClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getAAUIProfilePictureStoreClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SBDashBoardSetupViewController.m"), 60, CFSTR("Unable to find class %s"), "AAUIProfilePictureStore");

  __break(1u);
}

void protobufDisplayItemTypeFromType_cold_1(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_3(&dword_1D0540000, a1, a3, "We should not be serializing a capture extension display item", a5, a6, a7, a8, 0);
}

void protobufDisplayItemTypeFromType_cold_2(NSObject *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  OUTLINED_FUNCTION_0_3(&dword_1D0540000, a1, a3, "We should not be serializing a plus display item", a5, a6, a7, a8, 0);
}

void _SBUnhideProtectedAppAlertControllerFor_cold_1(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "bundleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_4(&dword_1D0540000, a2, v4, "Could not find bundle record to fetch localized name for: %@", v5);

  OUTLINED_FUNCTION_2_2();
}

void __getDMFApplicationPolicyMonitorClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *DeviceManagementLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBActivityManager.m"), 44, CFSTR("%s"), *a1);

  __break(1u);
}

void __getDMFApplicationPolicyMonitorClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getDMFApplicationPolicyMonitorClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SBActivityManager.m"), 45, CFSTR("Unable to find class %s"), "DMFApplicationPolicyMonitor");

  __break(1u);
}

#error "1D0DD3810: call analysis failed (funcsize=17)"

#error "1D0DD3880: call analysis failed (funcsize=17)"

void _UIPhysicalButtonStateFromSBPhysicalButtonResult_cold_1(uint64_t a1)
{
  void *v2;
  int v3;
  void *v4;
  __int16 v5;
  const __CFString *v6;
  __int16 v7;
  int v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "_UIPhysicalButtonState _UIPhysicalButtonStateFromSBPhysicalButtonResult(SBPhysicalButtonResult)");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = 138544130;
  v4 = v2;
  v5 = 2114;
  v6 = CFSTR("SBPhysicalButtonCompletionHandling.m");
  v7 = 1024;
  v8 = 24;
  v9 = 2114;
  v10 = a1;
  _os_log_error_impl(&dword_1D0540000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "failure in %{public}@ (%{public}@:%i) : %{public}@", (uint8_t *)&v3, 0x26u);

}

void indexingAscendingLUT_cold_1()
{
  __assert_rtn("indexingAscendingLUT", "SBCornerFingerGestureClassifier.m", 19, "size >= 1");
}

void indexingAscendingLUT_cold_2()
{
  __assert_rtn("indexingAscendingLUT", "SBCornerFingerGestureClassifier.m", 31, "delta > BSCGFloatEpsilon()");
}

void SBCreateResourceImageWithoutCaching_cold_1(uint64_t a1, NSObject *a2)
{
  int v2;
  const char *v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v2 = 136315394;
  v3 = "UIImage *SBCreateResourceImageWithoutCaching(NSString *__strong)";
  v4 = 2114;
  v5 = a1;
  _os_log_error_impl(&dword_1D0540000, a2, OS_LOG_TYPE_ERROR, "%s ERROR: Could not open image \"%{public}@\" in the SpringBoard bundle.", (uint8_t *)&v2, 0x16u);
}

void SBChainableModifierMethodCacheQueryTrampolineForMethod_cold_1(const char *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "IMP  _Nonnull SBChainableModifierMethodCacheQueryTrampolineForMethod(struct objc_method_description, NSUInteger)");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromSelector(a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("SBChainableModifierMethodCache.m"), 373, CFSTR("unsupported method signature! Please add an entry for %s to SUPPORTED_METHOD_SIGNATURES for %@"), a2, v6);

  __break(1u);
}

void SBChainableModifierMethodCacheContextTrampolineForMethod_cold_1(const char *a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "IMP  _Nonnull SBChainableModifierMethodCacheContextTrampolineForMethod(struct objc_method_description, NSUInteger)");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromSelector(a1);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "handleFailureInFunction:file:lineNumber:description:", v5, CFSTR("SBChainableModifierMethodCache.m"), 386, CFSTR("unsupported method signature! Please add an entry for %s to SUPPORTED_METHOD_SIGNATURES for %@"), a2, v6);

  __break(1u);
}

void SBTraitsSceneParticipantDelegateOrientationChangeInspector_cold_1()
{
  __assert_rtn("SBTraitsSceneParticipantDelegateOrientationChangeInspector", "SBTraitsSceneParticipantDelegate.m", 50, "outUpdateReasons");
}

void __getPRIconUserInterfaceSizeLargeSymbolLoc_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PosterKitLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBWallpaperIconStyleCoordinator.m"), 28, CFSTR("%s"), *a1);

  __break(1u);
}

void __getPUIMutableStylePickerHomeScreenConfigurationClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PosterUIFoundationLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBWallpaperIconStyleCoordinator.m"), 25, CFSTR("%s"), *a1);

  __break(1u);
}

void __getPUIMutableStylePickerHomeScreenConfigurationClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPUIMutableStylePickerHomeScreenConfigurationClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SBWallpaperIconStyleCoordinator.m"), 26, CFSTR("Unable to find class %s"), "PUIMutableStylePickerHomeScreenConfiguration");

  __break(1u);
}

void SBCommonInitialize_cold_1(uint64_t a1, NSObject *a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *MEMORY[0x1E0C80C00];
  v2 = 138412290;
  v3 = a1;
  _os_log_error_impl(&dword_1D0540000, a2, OS_LOG_TYPE_ERROR, "SpringBoard failed to Clear the Board™: %@", (uint8_t *)&v2, 0xCu);
}

void SBFloatingConfigurationForMovingFloatingApplication_cold_1()
{
  __assert_rtn("SBFloatingConfigurationForMovingFloatingApplication", "SBMoveFloatingApplicationUtilities.m", 125, "effectiveMinCenterX < effectiveMaxCenterX");
}

void SBFloatingConfigurationForMovingFloatingApplication_cold_2()
{
  __assert_rtn("SBFloatingConfigurationForMovingFloatingApplication", "SBMoveFloatingApplicationUtilities.m", 126, "positiveVelocity > 0.0f");
}

void SBFloatingConfigurationForMovingFloatingApplication_cold_3()
{
  __assert_rtn("SBFloatingConfigurationForMovingFloatingApplication", "SBMoveFloatingApplicationUtilities.m", 127, "negativeVelocity < 0.0f");
}

void HangTracerLibrary_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *HangTracerLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBHungApplicationInteractionObserver.m"), 27, CFSTR("%s"), *a1);

  __break(1u);
}

void _SBIndirectGestureLog_cold_1(void *a1, uint64_t a2, NSObject *a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  __int16 v9;
  uint8_t v10[14];
  uint64_t v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "name");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(a1, "sb_stringForState");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_2_19();
  v11 = v8;
  v12 = v9;
  v13 = a2;
  _os_log_debug_impl(&dword_1D0540000, a3, OS_LOG_TYPE_DEBUG, "SBIndirectPanGestureRecognizer (%@, %@) – %@", v10, 0x20u);

  OUTLINED_FUNCTION_7();
}

void __getLNAppConnectionListenerClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *AppIntentsLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBMainDisplaySceneManager.m"), 119, CFSTR("%s"), *a1);

  __break(1u);
}

void __getLNAppConnectionListenerClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getLNAppConnectionListenerClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SBMainDisplaySceneManager.m"), 120, CFSTR("Unable to find class %s"), "LNAppConnectionListener");

  __break(1u);
}

void SBStaticInitializer_cold_1()
{
  __assert_rtn("SBStaticInitializer", "StaticInitializer.m", 39, "platformBinary");
}

void __getPBServerConnectionClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *PasteboardLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("SBProductivityGestureController.m"), 32, CFSTR("%s"), *a1);

  __break(1u);
}

void __getPBServerConnectionClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getPBServerConnectionClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("SBProductivityGestureController.m"), 33, CFSTR("Unable to find class %s"), "PBServerConnection");

  __break(1u);
}

uint64_t ADClientAddValueForScalarKey()
{
  return MEMORY[0x1E0CF63A0]();
}

uint64_t ADClientPushValueForDistributionKey()
{
  return MEMORY[0x1E0CF63C0]();
}

uint64_t ADClientSetValueForScalarKey()
{
  return MEMORY[0x1E0CF63D8]();
}

uint64_t ADMonotonicTimeGetCurrent()
{
  return MEMORY[0x1E0CF63E0]();
}

uint64_t ADPushTimeIntervalForDistributionKeySinceStartTime()
{
  return MEMORY[0x1E0CF63E8]();
}

uint64_t AFDeviceSupportsSystemAssistantExperience()
{
  return MEMORY[0x1E0CFE468]();
}

uint64_t AFHasGMSCapability()
{
  return MEMORY[0x1E0CFE4A8]();
}

uint64_t AFSiriAnnouncementPlatformGetName()
{
  return MEMORY[0x1E0CFE680]();
}

uint64_t AFSiriDeactivationReasonGetIsValidAndSpecified()
{
  return MEMORY[0x1E0CFE690]();
}

uint64_t AFSiriDeactivationReasonGetName()
{
  return MEMORY[0x1E0CFE698]();
}

uint64_t AFSiriUserNotificationAnnouncementSpeakingStateGetName()
{
  return MEMORY[0x1E0CFE6C8]();
}

uint64_t AMStringForAmbientMountState()
{
  return MEMORY[0x1E0CF7890]();
}

uint64_t AMStringForAmbientPresentationState()
{
  return MEMORY[0x1E0CF7898]();
}

uint64_t AMStringForAmbientTriggerState()
{
  return MEMORY[0x1E0CF78A0]();
}

uint64_t AMUIAmbientDisplayStyleIsRedMode()
{
  return MEMORY[0x1E0CF7900]();
}

uint64_t AMUIAmbientDisplayStyleString()
{
  return MEMORY[0x1E0CF7908]();
}

uint64_t APCoreFunctionalityEnabled()
{
  return MEMORY[0x1E0CF9648]();
}

uint64_t APGetDescriptionFor()
{
  return MEMORY[0x1E0CF96B8]();
}

uint64_t AVCaptureCancelPrewarm()
{
  return MEMORY[0x1E0C89F30]();
}

uint64_t AVCapturePrewarmWithOptions()
{
  return MEMORY[0x1E0C8A0D8]();
}

uint64_t AnalyticsSendEvent()
{
  return MEMORY[0x1E0D15420]();
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1E0D15428]();
}

OSStatus AudioServicesAddSystemSoundCompletion(SystemSoundID inSystemSoundID, CFRunLoopRef inRunLoop, CFStringRef inRunLoopMode, AudioServicesSystemSoundCompletionProc inCompletionRoutine, void *inClientData)
{
  return MEMORY[0x1E0C92120](*(_QWORD *)&inSystemSoundID, inRunLoop, inRunLoopMode, inCompletionRoutine, inClientData);
}

uint64_t AudioServicesCreateSystemSoundIDWithPath()
{
  return MEMORY[0x1E0C92138]();
}

void AudioServicesPlaySystemSoundWithCompletion(SystemSoundID inSystemSoundID, void *inCompletionBlock)
{
  MEMORY[0x1E0C92158](*(_QWORD *)&inSystemSoundID, inCompletionBlock);
}

uint64_t AudioServicesPlaySystemSoundWithVibration()
{
  return MEMORY[0x1E0C92168]();
}

void AudioServicesRemoveSystemSoundCompletion(SystemSoundID inSystemSoundID)
{
  MEMORY[0x1E0C92170](*(_QWORD *)&inSystemSoundID);
}

uint64_t AudioServicesStopSystemSound()
{
  return MEMORY[0x1E0C92188]();
}

uint64_t BBServerRun()
{
  return MEMORY[0x1E0D03680]();
}

uint64_t BBServerSetAllowsPublication()
{
  return MEMORY[0x1E0D03688]();
}

uint64_t BBServerSetDefaultExpirationComponents()
{
  return MEMORY[0x1E0D03690]();
}

uint64_t BKHIDServicesGetCurrentDeviceOrientation()
{
  return MEMORY[0x1E0D00890]();
}

uint64_t BKHIDServicesGetNonFlatDeviceOrientation()
{
  return MEMORY[0x1E0D00898]();
}

uint64_t BKLogDisplay()
{
  return MEMORY[0x1E0D008B0]();
}

uint64_t BKLogOrientationClient()
{
  return MEMORY[0x1E0D008D0]();
}

uint64_t BKLogOrientationDevice()
{
  return MEMORY[0x1E0D008D8]();
}

uint64_t BKLogOrientationGlobal()
{
  return MEMORY[0x1E0D008E0]();
}

uint64_t BKSDisplayBrightnessGetCurrent()
{
  return MEMORY[0x1E0D00960]();
}

uint64_t BKSDisplayBrightnessRestoreSystemBrightness()
{
  return MEMORY[0x1E0D00968]();
}

uint64_t BKSDisplayBrightnessSet()
{
  return MEMORY[0x1E0D00970]();
}

uint64_t BKSDisplayBrightnessSetWithImplicitTransaction()
{
  return MEMORY[0x1E0D00978]();
}

uint64_t BKSDisplayBrightnessTransactionCreate()
{
  return MEMORY[0x1E0D00980]();
}

uint64_t BKSDisplayServicesArchiveWithOptionsAndCompletion()
{
  return MEMORY[0x1E0D00988]();
}

uint64_t BKSDisplayServicesDisplayIsTethered()
{
  return MEMORY[0x1E0D00990]();
}

uint64_t BKSDisplayServicesSetArrangement()
{
  return MEMORY[0x1E0D009A8]();
}

uint64_t BKSDisplayServicesSetBlankingRemovesPower()
{
  return MEMORY[0x1E0D009B0]();
}

uint64_t BKSDisplayServicesSetDisplayBlanked()
{
  return MEMORY[0x1E0D009B8]();
}

uint64_t BKSDisplayServicesSetMainDisplayCloneMirroringModeForDestinationDisplay()
{
  return MEMORY[0x1E0D009C0]();
}

uint64_t BKSDisplayServicesSetSystemIdentifiers()
{
  return MEMORY[0x1E0D009C8]();
}

uint64_t BKSDisplayServicesTetherPrefsNeedImmediateUpdate()
{
  return MEMORY[0x1E0D009D8]();
}

uint64_t BKSDisplayServicesUpdateMirroredDisplayOrientationWithInterfaceOrientation()
{
  return MEMORY[0x1E0D009E0]();
}

uint64_t BKSDisplayServicesUpdateTetheredDisplayOrientationIfNecessaryWithInterfaceOrientation()
{
  return MEMORY[0x1E0D009E8]();
}

uint64_t BKSHIDEventGetBaseAttributes()
{
  return MEMORY[0x1E0D00A20]();
}

uint64_t BKSHIDEventGetConciseDescription()
{
  return MEMORY[0x1E0D00A28]();
}

uint64_t BKSHIDEventGetDigitizerAttributes()
{
  return MEMORY[0x1E0D00A30]();
}

uint64_t BKSHIDEventGetPointerAttributes()
{
  return MEMORY[0x1E0D00A40]();
}

uint64_t BKSHIDEventGetProximityAttributes()
{
  return MEMORY[0x1E0D00A48]();
}

uint64_t BKSHIDEventGetSmartCoverAttributes()
{
  return MEMORY[0x1E0D00A50]();
}

uint64_t BKSHIDEventGetSmartCoverStateFromEvent()
{
  return MEMORY[0x1E0D00A58]();
}

uint64_t BKSHIDEventSendToProcess()
{
  return MEMORY[0x1E0D00A70]();
}

uint64_t BKSHIDEventSendToProcessAndFollowDeferringRules()
{
  return MEMORY[0x1E0D00A78]();
}

uint64_t BKSHIDKeyboardGetDeviceProperties()
{
  return MEMORY[0x1E0D00AB8]();
}

uint64_t BKSHIDServicesAmbientLightSensorDisableAutoBrightness()
{
  return MEMORY[0x1E0D00AE0]();
}

uint64_t BKSHIDServicesAmbientLightSensorEnableAutoBrightness()
{
  return MEMORY[0x1E0D00AE8]();
}

uint64_t BKSHIDServicesCancelTouchesOnDisplay()
{
  return MEMORY[0x1E0D00AF0]();
}

uint64_t BKSHIDServicesCancelTouchesOnMainDisplay()
{
  return MEMORY[0x1E0D00AF8]();
}

uint64_t BKSHIDServicesGetRingerState()
{
  return MEMORY[0x1E0D00B30]();
}

uint64_t BKSHIDServicesIsOrientationLockedWithOrientation()
{
  return MEMORY[0x1E0D00B40]();
}

uint64_t BKSHIDServicesIsSmartCoverClosed()
{
  return MEMORY[0x1E0D00B48]();
}

uint64_t BKSHIDServicesLastUserEventTime()
{
  return MEMORY[0x1E0D00B50]();
}

uint64_t BKSHIDServicesLockOrientation()
{
  return MEMORY[0x1E0D00B58]();
}

uint64_t BKSHIDServicesProximityDetectionActive()
{
  return MEMORY[0x1E0D00B68]();
}

uint64_t BKSHIDServicesProximityDetectionModePriority()
{
  return MEMORY[0x1E0D00B70]();
}

uint64_t BKSHIDServicesResetProximityCalibration()
{
  return MEMORY[0x1E0D00B90]();
}

uint64_t BKSHIDServicesSetDeviceInterfaceOrientation()
{
  return MEMORY[0x1E0D00BB0]();
}

uint64_t BKSHIDServicesSetHitTestRegionsForDisplay()
{
  return MEMORY[0x1E0D00BB8]();
}

uint64_t BKSHIDServicesSetMinimumBrightnessLevelWithFadeDuration()
{
  return MEMORY[0x1E0D00BC0]();
}

uint64_t BKSHIDServicesSetObjectInProximityIgnoresTouches()
{
  return MEMORY[0x1E0D00BC8]();
}

uint64_t BKSHIDServicesSetOrientationClient()
{
  return MEMORY[0x1E0D00BD0]();
}

uint64_t BKSHIDServicesUnlockOrientation()
{
  return MEMORY[0x1E0D00BD8]();
}

uint64_t BKSHIDTouchSensitiveButtonRequestScanMode()
{
  return MEMORY[0x1E0D00BE0]();
}

uint64_t BLSBacklightStateIsActive()
{
  return MEMORY[0x1E0D00EF0]();
}

uint64_t BNEffectivePresentableDescription()
{
  return MEMORY[0x1E0D01040]();
}

uint64_t BNIsPresentableIdentifiedByIdentification()
{
  return MEMORY[0x1E0D01048]();
}

uint64_t BNPresentableDescription()
{
  return MEMORY[0x1E0D01050]();
}

uint64_t BSAbsoluteMachTimeNow()
{
  return MEMORY[0x1E0D010C0]();
}

uint64_t BSAbsoluteTimeFromMachTime()
{
  return MEMORY[0x1E0D010C8]();
}

uint64_t BSAuditTokenTaskHasEntitlement()
{
  return MEMORY[0x1E0D010F8]();
}

uint64_t BSBundleIDForAuditToken()
{
  return MEMORY[0x1E0D01100]();
}

uint64_t BSCGFloatEpsilon()
{
  return MEMORY[0x1E0D01120]();
}

uint64_t BSCompareFloats()
{
  return MEMORY[0x1E0D01130]();
}

uint64_t BSContinuousMachTimeNow()
{
  return MEMORY[0x1E0D01140]();
}

uint64_t BSCreateDeserializedArrayFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01148]();
}

uint64_t BSCurrentUserDirectory()
{
  return MEMORY[0x1E0D01178]();
}

uint64_t BSDegreesToRadians()
{
  return MEMORY[0x1E0D01190]();
}

uint64_t BSDeserializeArrayOfBSXPCEncodableObjectsFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01198]();
}

uint64_t BSDeserializeBSXPCEncodableObjectFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011A0]();
}

uint64_t BSDeserializeCFValueFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011A8]();
}

uint64_t BSDeserializeCGRectFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011C0]();
}

uint64_t BSDeserializeCGSizeFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011C8]();
}

uint64_t BSDeserializeDataFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011D0]();
}

uint64_t BSDeserializeNSSecureEncodableObjectOfClassFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011E0]();
}

uint64_t BSDeserializeStringFromXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D011F0]();
}

uint64_t BSDeviceOrientationDescription()
{
  return MEMORY[0x1E0D011F8]();
}

uint64_t BSDispatchBlockCreateWithQualityOfService()
{
  return MEMORY[0x1E0D01200]();
}

uint64_t BSDispatchMain()
{
  return MEMORY[0x1E0D01208]();
}

uint64_t BSDispatchQueueAssert()
{
  return MEMORY[0x1E0D01210]();
}

uint64_t BSDispatchQueueAssertMain()
{
  return MEMORY[0x1E0D01220]();
}

uint64_t BSDispatchQueueAssertNotMain()
{
  return MEMORY[0x1E0D01230]();
}

uint64_t BSDispatchQueueCreate()
{
  return MEMORY[0x1E0D01238]();
}

uint64_t BSDispatchQueueCreateSerial()
{
  return MEMORY[0x1E0D01240]();
}

uint64_t BSDispatchQueueCreateSerialWithQoS()
{
  return MEMORY[0x1E0D01248]();
}

uint64_t BSDispatchQueueCreateWithQualityOfService()
{
  return MEMORY[0x1E0D01250]();
}

uint64_t BSDispatchTimeWithInterval()
{
  return MEMORY[0x1E0D01258]();
}

uint64_t BSEqualArrays()
{
  return MEMORY[0x1E0D01260]();
}

uint64_t BSEqualBools()
{
  return MEMORY[0x1E0D01268]();
}

uint64_t BSEqualDictionaries()
{
  return MEMORY[0x1E0D01270]();
}

uint64_t BSEqualObjects()
{
  return MEMORY[0x1E0D01280]();
}

uint64_t BSEqualSets()
{
  return MEMORY[0x1E0D01288]();
}

uint64_t BSEqualStrings()
{
  return MEMORY[0x1E0D01290]();
}

uint64_t BSExecutablePathForPID()
{
  return MEMORY[0x1E0D012B0]();
}

uint64_t BSFloatApproximatelyEqualToFloat()
{
  return MEMORY[0x1E0D012B8]();
}

uint64_t BSFloatByLinearlyInterpolatingFloats()
{
  return MEMORY[0x1E0D012C0]();
}

uint64_t BSFloatEqualToFloat()
{
  return MEMORY[0x1E0D012D0]();
}

uint64_t BSFloatGreaterThanFloat()
{
  return MEMORY[0x1E0D012E0]();
}

uint64_t BSFloatGreaterThanOrEqualToFloat()
{
  return MEMORY[0x1E0D012E8]();
}

uint64_t BSFloatIsOne()
{
  return MEMORY[0x1E0D012F0]();
}

uint64_t BSFloatIsZero()
{
  return MEMORY[0x1E0D012F8]();
}

uint64_t BSFloatLessThanFloat()
{
  return MEMORY[0x1E0D01300]();
}

uint64_t BSFloatLessThanOrEqualToFloat()
{
  return MEMORY[0x1E0D01308]();
}

uint64_t BSFloatRoundForScale()
{
  return MEMORY[0x1E0D01310]();
}

uint64_t BSFormattedTimeFromSeconds()
{
  return MEMORY[0x1E0D01318]();
}

uint64_t BSHashPurifyNS()
{
  return MEMORY[0x1E0D01330]();
}

uint64_t BSInterfaceOrientationDescription()
{
  return MEMORY[0x1E0D01340]();
}

uint64_t BSInterfaceOrientationIsLandscape()
{
  return MEMORY[0x1E0D01348]();
}

uint64_t BSInterfaceOrientationIsPortrait()
{
  return MEMORY[0x1E0D01350]();
}

uint64_t BSInterfaceOrientationIsValid()
{
  return MEMORY[0x1E0D01358]();
}

uint64_t BSInterfaceOrientationMaskContainsInterfaceOrientation()
{
  return MEMORY[0x1E0D01360]();
}

uint64_t BSInterfaceOrientationMaskDescription()
{
  return MEMORY[0x1E0D01368]();
}

uint64_t BSIntervalMap()
{
  return MEMORY[0x1E0D01388]();
}

uint64_t BSIntervalSubIntervalValueForValue()
{
  return MEMORY[0x1E0D013A8]();
}

uint64_t BSIsBeingDebugged()
{
  return MEMORY[0x1E0D013C8]();
}

uint64_t BSLogAddStateCaptureBlockForUserRequestsOnlyWithTitle()
{
  return MEMORY[0x1E0D013D0]();
}

uint64_t BSLogAddStateCaptureBlockWithTitle()
{
  return MEMORY[0x1E0D013D8]();
}

uint64_t BSLogGetAllRegisteredStateCaptureBlocks()
{
  return MEMORY[0x1E0D013E8]();
}

uint64_t BSLogStateCaptureCheckPlistSizeIsPermitted()
{
  return MEMORY[0x1E0D013F0]();
}

uint64_t BSMachSendRightRelease()
{
  return MEMORY[0x1E0D01410]();
}

uint64_t BSMonotonicReferencedTimeFromMachTime()
{
  return MEMORY[0x1E0D01420]();
}

uint64_t BSNSStringFromCGRect()
{
  return MEMORY[0x1E0D01438]();
}

uint64_t BSPIDExists()
{
  return MEMORY[0x1E0D01450]();
}

uint64_t BSPIDForAuditToken()
{
  return MEMORY[0x1E0D01458]();
}

uint64_t BSPathExistsOnSystemPartition()
{
  return MEMORY[0x1E0D01470]();
}

uint64_t BSPointEqualToPoint()
{
  return MEMORY[0x1E0D01480]();
}

uint64_t BSPointRoundForScale()
{
  return MEMORY[0x1E0D01490]();
}

uint64_t BSPrettyFunctionName()
{
  return MEMORY[0x1E0D01498]();
}

uint64_t BSProcessDescriptionForPID()
{
  return MEMORY[0x1E0D014A8]();
}

uint64_t BSProcessNameForPID()
{
  return MEMORY[0x1E0D014B0]();
}

uint64_t BSPthreadCurrentEffectiveQualityOfService()
{
  return MEMORY[0x1E0D014B8]();
}

uint64_t BSRadiansToDegrees()
{
  return MEMORY[0x1E0D014C8]();
}

uint64_t BSRectByLinearlyInterpolatingRects()
{
  return MEMORY[0x1E0D014D0]();
}

uint64_t BSRectEqualToRect()
{
  return MEMORY[0x1E0D014E0]();
}

uint64_t BSRectGetCenter()
{
  return MEMORY[0x1E0D014E8]();
}

uint64_t BSRectRoundForScale()
{
  return MEMORY[0x1E0D014F0]();
}

uint64_t BSRectWithSize()
{
  return MEMORY[0x1E0D014F8]();
}

uint64_t BSRunLoopPerformRelativeToCACommit()
{
  return MEMORY[0x1E0D01508]();
}

uint64_t BSSerializeArrayOfBSXPCEncodableObjectsToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01518]();
}

uint64_t BSSerializeArrayToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01520]();
}

uint64_t BSSerializeBSXPCEncodableObjectToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01528]();
}

uint64_t BSSerializeCFValueToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01530]();
}

uint64_t BSSerializeCGRectToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01548]();
}

uint64_t BSSerializeDataToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01558]();
}

uint64_t BSSerializeStringToXPCDictionaryWithKey()
{
  return MEMORY[0x1E0D01578]();
}

uint64_t BSSetMainThreadPriorityFixedForUI()
{
  return MEMORY[0x1E0D01580]();
}

uint64_t BSSettingFlagDescription()
{
  return MEMORY[0x1E0D01588]();
}

uint64_t BSSettingFlagForBool()
{
  return MEMORY[0x1E0D01590]();
}

uint64_t BSSettingFlagIfYes()
{
  return MEMORY[0x1E0D01598]();
}

uint64_t BSSettingFlagIsExplicitNo()
{
  return MEMORY[0x1E0D015A0]();
}

uint64_t BSSettingFlagIsYes()
{
  return MEMORY[0x1E0D015A8]();
}

uint64_t BSSizeCeilForScale()
{
  return MEMORY[0x1E0D015B8]();
}

uint64_t BSSizeEqualToSize()
{
  return MEMORY[0x1E0D015C0]();
}

uint64_t BSSizeGreaterThanOrEqualToSize()
{
  return MEMORY[0x1E0D015C8]();
}

uint64_t BSSizeLessThanSize()
{
  return MEMORY[0x1E0D015D0]();
}

uint64_t BSSizeRoundForScale()
{
  return MEMORY[0x1E0D015D8]();
}

uint64_t BSSizeSwap()
{
  return MEMORY[0x1E0D015E0]();
}

uint64_t BSStringFromBOOL()
{
  return MEMORY[0x1E0D015F8]();
}

uint64_t BSSystemHasCapability()
{
  return MEMORY[0x1E0D01618]();
}

uint64_t BSTemporaryFileAtPath()
{
  return MEMORY[0x1E0D01638]();
}

uint64_t BSTimeDifferenceFromMachTimeToMachTime()
{
  return MEMORY[0x1E0D01640]();
}

uint64_t BSTimeUntilNextClockMinute()
{
  return MEMORY[0x1E0D01648]();
}

uint64_t BSUIConstrainValueToIntervalWithRubberBand()
{
  return MEMORY[0x1E0D018E0]();
}

uint64_t BSUIConstrainValueWithRubberBand()
{
  return MEMORY[0x1E0D018E8]();
}

uint64_t BSUISurfaceWithColorSpaceAndDrawBlock()
{
  return MEMORY[0x1E0D018F8]();
}

uint64_t BSVersionedPIDForAuditToken()
{
  return MEMORY[0x1E0D01670]();
}

uint64_t BYSetupAssistantCreateAuthContext()
{
  return MEMORY[0x1E0D8D6C0]();
}

uint64_t BYSetupAssistantEnsureShortLivedTokenUpgrade()
{
  return MEMORY[0x1E0D8D6C8]();
}

uint64_t BYSetupAssistantHasCompletedInitialRun()
{
  return MEMORY[0x1E0D8D6E0]();
}

uint64_t BYSetupAssistantNeedsToRun()
{
  return MEMORY[0x1E0D8D6F8]();
}

uint64_t BYSetupAssistantPrepareLaunchSentinel()
{
  return MEMORY[0x1E0D8D708]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1E0D01E18]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x1E0CD2388]();
  return result;
}

CAFrameRateRange CAFrameRateRangeMake(float minimum, float maximum, float preferred)
{
  float v3;
  float v4;
  float v5;
  CAFrameRateRange result;

  MEMORY[0x1E0CD23D0](minimum, maximum, preferred);
  result.preferred = v5;
  result.maximum = v4;
  result.minimum = v3;
  return result;
}

uint64_t CALayerGetContext()
{
  return MEMORY[0x1E0CD24E8]();
}

uint64_t CALayerGetRenderId()
{
  return MEMORY[0x1E0CD24F8]();
}

uint64_t CAMIsCameraButtonEnabled()
{
  return MEMORY[0x1E0D0D108]();
}

uint64_t CAMIsCameraOverlayAvailable()
{
  return MEMORY[0x1E0D0D110]();
}

uint64_t CAMIsCameraOverlayEnabled()
{
  return MEMORY[0x1E0D0D118]();
}

uint64_t CAMIsRemoteCameraOverlayEnabled()
{
  return MEMORY[0x1E0D0D120]();
}

uint64_t CAPointApplyTransform()
{
  return MEMORY[0x1E0CD2540]();
}

uint64_t CARenderRelease()
{
  return MEMORY[0x1E0CD2550]();
}

uint64_t CARenderRetain()
{
  return MEMORY[0x1E0CD2558]();
}

uint64_t CARenderServerCaptureLayerWithTransform()
{
  return MEMORY[0x1E0CD2560]();
}

uint64_t CARenderServerFlushIRDC()
{
  return MEMORY[0x1E0CD2568]();
}

uint64_t CARenderServerSetCacheAsynchronousSurfaces()
{
  return MEMORY[0x1E0CD25C0]();
}

uint64_t CARenderServerSnapshot()
{
  return MEMORY[0x1E0CD25E0]();
}

CATransform3D *__cdecl CATransform3DConcat(CATransform3D *__return_ptr retstr, CATransform3D *a, CATransform3D *b)
{
  return (CATransform3D *)MEMORY[0x1E0CD25F0](retstr, a, b);
}

BOOL CATransform3DEqualToTransform(CATransform3D *a, CATransform3D *b)
{
  return MEMORY[0x1E0CD25F8](a, b);
}

CGAffineTransform *__cdecl CATransform3DGetAffineTransform(CGAffineTransform *__return_ptr retstr, CATransform3D *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0CD2600](retstr, t);
}

BOOL CATransform3DIsAffine(CATransform3D *t)
{
  return MEMORY[0x1E0CD2620](t);
}

CATransform3D *__cdecl CATransform3DMakeAffineTransform(CATransform3D *__return_ptr retstr, CGAffineTransform *m)
{
  return (CATransform3D *)MEMORY[0x1E0CD2630](retstr, m);
}

CATransform3D *__cdecl CATransform3DMakeRotation(CATransform3D *__return_ptr retstr, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x1E0CD2638](retstr, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2640](retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DMakeTranslation(CATransform3D *__return_ptr retstr, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2648](retstr, tx, ty, tz);
}

CATransform3D *__cdecl CATransform3DRotate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x1E0CD2658](retstr, t, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2668](retstr, t, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DTranslate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat tx, CGFloat ty, CGFloat tz)
{
  return (CATransform3D *)MEMORY[0x1E0CD2678](retstr, t, tx, ty, tz);
}

uint64_t CATransform3DTranslateRight()
{
  return MEMORY[0x1E0CD2680]();
}

uint64_t CA_CGRectApplyTransform()
{
  return MEMORY[0x1E0CD26F0]();
}

uint64_t CCUIDefaultExpandedContentModuleWidth()
{
  return MEMORY[0x1E0D14628]();
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  CFAbsoluteTime result;

  MEMORY[0x1E0C97C58]();
  return result;
}

void CFArrayApplyFunction(CFArrayRef theArray, CFRange range, CFArrayApplierFunction applier, void *context)
{
  MEMORY[0x1E0C97D00](theArray, range.location, range.length, applier, context);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return MEMORY[0x1E0C97D60](theArray);
}

CFTypeID CFArrayGetTypeID(void)
{
  return MEMORY[0x1E0C97D90]();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return (const void *)MEMORY[0x1E0C97D98](theArray, idx);
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x1E0C97E90](arg);
}

CFTypeID CFBooleanGetTypeID(void)
{
  return MEMORY[0x1E0C97FC8]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1E0C97FE0](BOOLean);
}

CFStringRef CFBundleGetIdentifier(CFBundleRef bundle)
{
  return (CFStringRef)MEMORY[0x1E0C98120](bundle);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return (CFDataRef)MEMORY[0x1E0C983A0](allocator, bytes, length);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return (const UInt8 *)MEMORY[0x1E0C983E0](theData);
}

void CFDataGetBytes(CFDataRef theData, CFRange range, UInt8 *buffer)
{
  MEMORY[0x1E0C983F0](theData, range.location, range.length, buffer);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return MEMORY[0x1E0C983F8](theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return MEMORY[0x1E0C98418]();
}

void CFDictionaryApplyFunction(CFDictionaryRef theDict, CFDictionaryApplierFunction applier, void *context)
{
  MEMORY[0x1E0C98508](theDict, applier, context);
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return (CFDictionaryRef)MEMORY[0x1E0C98530](allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return MEMORY[0x1E0C98570](theDict);
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return MEMORY[0x1E0C985A8]();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return (const void *)MEMORY[0x1E0C985B8](theDict, key);
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return MEMORY[0x1E0C98620](cf1, cf2);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988D0]();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
  MEMORY[0x1E0C988E0](center, name, object, userInfo, deliverImmediately);
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
  MEMORY[0x1E0C988F0](center, observer);
}

void CFNotificationCenterRemoveObserver(CFNotificationCenterRef center, const void *observer, CFNotificationName name, const void *object)
{
  MEMORY[0x1E0C98900](center, observer, name, object);
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return MEMORY[0x1E0C989C0](number, theType, valuePtr);
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return MEMORY[0x1E0C98A30](applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A40](key, applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98A60](key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x1E0C98A70](key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  MEMORY[0x1E0C98A90](key, value, applicationID, userName, hostName);
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return MEMORY[0x1E0C98A98](applicationID, userName, hostName);
}

CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error)
{
  return (CFDataRef)MEMORY[0x1E0C98AA0](allocator, propertyList, format, options, error);
}

CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return (CFPropertyListRef)MEMORY[0x1E0C98AD0](allocator, data, options, format, error);
}

void CFRelease(CFTypeRef cf)
{
  MEMORY[0x1E0C98BC0](cf);
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x1E0C98BD0](cf);
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BE8](rl, observer, mode);
}

void CFRunLoopAddTimer(CFRunLoopRef rl, CFRunLoopTimerRef timer, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98C00](rl, timer, mode);
}

CFRunLoopMode CFRunLoopCopyCurrentMode(CFRunLoopRef rl)
{
  return (CFRunLoopMode)MEMORY[0x1E0C98C28](rl);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C30]();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C40]();
}

CFRunLoopObserverRef CFRunLoopObserverCreateWithHandler(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, void *block)
{
  return (CFRunLoopObserverRef)MEMORY[0x1E0C98C68](allocator, activities, repeats, order, block);
}

void CFRunLoopObserverInvalidate(CFRunLoopObserverRef observer)
{
  MEMORY[0x1E0C98C78](observer);
}

void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void *block)
{
  MEMORY[0x1E0C98C80](rl, mode, block);
}

CFRunLoopRunResult CFRunLoopRunInMode(CFRunLoopMode mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled)
{
  return MEMORY[0x1E0C98CB0](mode, returnAfterSourceHandled, seconds);
}

CFRunLoopTimerRef CFRunLoopTimerCreate(CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context)
{
  return (CFRunLoopTimerRef)MEMORY[0x1E0C98D08](allocator, flags, order, callout, context, fireDate, interval);
}

void CFRunLoopTimerInvalidate(CFRunLoopTimerRef timer)
{
  MEMORY[0x1E0C98D48](timer);
}

void CFRunLoopWakeUp(CFRunLoopRef rl)
{
  MEMORY[0x1E0C98D68](rl);
}

Boolean CFSetContainsValue(CFSetRef theSet, const void *value)
{
  return MEMORY[0x1E0C98D80](theSet, value);
}

void CFStringAppendFormatAndArguments(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, va_list arguments)
{
  MEMORY[0x1E0C98EF8](theString, formatOptions, format, arguments);
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C98F10](theString1, theString2, compareOptions);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return (CFStringRef)MEMORY[0x1E0C98FD0](alloc, cStr, *(_QWORD *)&encoding);
}

CFTypeID CFStringGetTypeID(void)
{
  return MEMORY[0x1E0C99170]();
}

CFTimeZoneRef CFTimeZoneCopySystem(void)
{
  return (CFTimeZoneRef)MEMORY[0x1E0C99280]();
}

CFTimeZoneRef CFTimeZoneCreateWithName(CFAllocatorRef allocator, CFStringRef name, Boolean tryAbbrev)
{
  return (CFTimeZoneRef)MEMORY[0x1E0C99288](allocator, name, tryAbbrev);
}

CFStringRef CFTimeZoneGetName(CFTimeZoneRef tz)
{
  return (CFStringRef)MEMORY[0x1E0C99298](tz);
}

CFUUIDRef CFUUIDCreate(CFAllocatorRef alloc)
{
  return (CFUUIDRef)MEMORY[0x1E0C99518](alloc);
}

CFStringRef CFUUIDCreateString(CFAllocatorRef alloc, CFUUIDRef uuid)
{
  return (CFStringRef)MEMORY[0x1E0C99538](alloc, uuid);
}

CGAffineTransform *__cdecl CGAffineTransformConcat(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t1, CGAffineTransform *t2)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BA90](retstr, t1, t2);
}

BOOL CGAffineTransformEqualToTransform(CGAffineTransform *t1, CGAffineTransform *t2)
{
  return MEMORY[0x1E0C9BAA0](t1, t2);
}

CGAffineTransform *__cdecl CGAffineTransformInvert(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAB0](retstr, t);
}

BOOL CGAffineTransformIsIdentity(CGAffineTransform *t)
{
  return MEMORY[0x1E0C9BAB8](t);
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD0](retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAD8](retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAE0](retstr, tx, ty);
}

CGAffineTransform *__cdecl CGAffineTransformRotate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat angle)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAF0](retstr, t, angle);
}

CGAffineTransform *__cdecl CGAffineTransformScale(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BAF8](retstr, t, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformTranslate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat tx, CGFloat ty)
{
  return (CGAffineTransform *)MEMORY[0x1E0C9BB00](retstr, t, tx, ty);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1E0C9BC78](space, components);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x1E0C9BD08](color);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x1E0C9BD20](color);
}

void CGColorRelease(CGColorRef color)
{
  MEMORY[0x1E0C9BD60](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
  MEMORY[0x1E0C9BF30](space);
}

uint64_t CGColorTransformConvertColor()
{
  return MEMORY[0x1E0C9BF78]();
}

uint64_t CGColorTransformCreate()
{
  return MEMORY[0x1E0C9BF90]();
}

uint64_t CGColorTransformRelease()
{
  return MEMORY[0x1E0C9BFA0]();
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
  MEMORY[0x1E0C9C220](c, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

void CGContextRotateCTM(CGContextRef c, CGFloat angle)
{
  MEMORY[0x1E0C9C380](c, angle);
}

void CGContextTranslateCTM(CGContextRef c, CGFloat tx, CGFloat ty)
{
  MEMORY[0x1E0C9C588](c, tx, ty);
}

uint64_t CGFloatIsValid()
{
  return MEMORY[0x1E0C9C6B8]();
}

uint64_t CGImageBlockSetRelease()
{
  return MEMORY[0x1E0C9CB68]();
}

uint64_t CGImageCreateFromIOSurface()
{
  return MEMORY[0x1E0CBC2D8]();
}

CGImageAlphaInfo CGImageGetAlphaInfo(CGImageRef image)
{
  return MEMORY[0x1E0C9CBE8](image);
}

CGDataProviderRef CGImageGetDataProvider(CGImageRef image)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9CC38](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1E0C9CC60](image);
}

CFTypeID CGImageGetTypeID(void)
{
  return MEMORY[0x1E0C9CCC0]();
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

void CGImageRelease(CGImageRef image)
{
  MEMORY[0x1E0C9CDA0](image);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1E0CBC588](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithDataProvider(CGDataProviderRef provider, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC5A0](provider, options);
}

void CGPathAddArc(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, BOOL clockwise)
{
  MEMORY[0x1E0C9D280](path, m, clockwise, x, y, radius, startAngle, endAngle);
}

void CGPathAddArcToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x1, CGFloat y1, CGFloat x2, CGFloat y2, CGFloat radius)
{
  MEMORY[0x1E0C9D288](path, m, x1, y1, x2, y2, radius);
}

void CGPathAddLineToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D2A8](path, m, x, y);
}

void CGPathCloseSubpath(CGMutablePathRef path)
{
  MEMORY[0x1E0C9D310](path);
}

CGPathRef CGPathCreateCopyByTransformingPath(CGPathRef path, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x1E0C9D358](path, transform);
}

CGMutablePathRef CGPathCreateMutable(void)
{
  return (CGMutablePathRef)MEMORY[0x1E0C9D388]();
}

BOOL CGPathEqualToPath(CGPathRef path1, CGPathRef path2)
{
  return MEMORY[0x1E0C9D3E8](path1, path2);
}

CGRect CGPathGetPathBoundingBox(CGPathRef path)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D410](path);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

void CGPathMoveToPoint(CGMutablePathRef path, const CGAffineTransform *m, CGFloat x, CGFloat y)
{
  MEMORY[0x1E0C9D490](path, m, x, y);
}

void CGPathRelease(CGPathRef path)
{
  MEMORY[0x1E0C9D498](path);
}

CFDictionaryRef CGPointCreateDictionaryRepresentation(CGPoint point)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9D528]((__n128)point, *(__n128 *)&point.y);
}

BOOL CGPointMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGPoint *point)
{
  return MEMORY[0x1E0C9D530](dict, point);
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D548](t, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return MEMORY[0x1E0C9D550]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, (__n128)point, *(__n128 *)&point.y);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D558]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CFDictionaryRef CGRectCreateDictionaryRepresentation(CGRect a1)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9D560]((__n128)a1.origin, *(__n128 *)&a1.origin.y, (__n128)a1.size, *(__n128 *)&a1.size.height);
}

void CGRectDivide(CGRect rect, CGRect *slice, CGRect *remainder, CGFloat amount, CGRectEdge edge)
{
  MEMORY[0x1E0C9D568](slice, remainder, *(_QWORD *)&edge, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, amount);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D570]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D588]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5B0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5C8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D5E8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGRect result;

  MEMORY[0x1E0C9D5F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.height = v4;
  result.size.width = v3;
  result.origin.y = v2;
  result.origin.x = v1;
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D5F8]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1E0C9D600]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return MEMORY[0x1E0C9D608]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsInfinite(CGRect rect)
{
  return MEMORY[0x1E0C9D610]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x1E0C9D618]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

BOOL CGRectMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGRect *rect)
{
  return MEMORY[0x1E0C9D620](dict, rect);
}

CGRect CGRectOffset(CGRect rect, CGFloat dx, CGFloat dy)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x1E0C9D630]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x1E0C9D640]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

uint64_t CGRegionContainsPoint()
{
  return MEMORY[0x1E0C9D650]();
}

uint64_t CGRegionCreateDifferenceWithRegion()
{
  return MEMORY[0x1E0C9D660]();
}

uint64_t CGRegionCreateIntersectionWithRegion()
{
  return MEMORY[0x1E0C9D670]();
}

uint64_t CGRegionCreateUnionWithRegion()
{
  return MEMORY[0x1E0C9D680]();
}

uint64_t CGRegionCreateWithRect()
{
  return MEMORY[0x1E0C9D688]();
}

uint64_t CGRegionGetBoundingBox()
{
  return MEMORY[0x1E0C9D690]();
}

uint64_t CGRegionIntersectsRegion()
{
  return MEMORY[0x1E0C9D698]();
}

uint64_t CGRegionIsEmpty()
{
  return MEMORY[0x1E0C9D6A0]();
}

CFDictionaryRef CGSizeCreateDictionaryRepresentation(CGSize size)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9D808]((__n128)size, *(__n128 *)&size.height);
}

CGSize CGSizeFromString(NSString *string)
{
  double v1;
  double v2;
  CGSize result;

  MEMORY[0x1E0CEA048](string);
  result.height = v2;
  result.width = v1;
  return result;
}

BOOL CGSizeMakeWithDictionaryRepresentation(CFDictionaryRef dict, CGSize *size)
{
  return MEMORY[0x1E0C9D818](dict, size);
}

uint64_t CHSIsWidgetExtensionPoint()
{
  return MEMORY[0x1E0D0FED8]();
}

uint64_t CHSWidgetFamilyDescription()
{
  return MEMORY[0x1E0D0FF20]();
}

uint64_t CHSWidgetFamilyForSBHIconGridSizeClass()
{
  return MEMORY[0x1E0DAA390]();
}

uint64_t CHSWidgetFamilyFromString()
{
  return MEMORY[0x1E0D0FF28]();
}

uint64_t CHSWidgetFamilyMaskContainsFamily()
{
  return MEMORY[0x1E0D0FF40]();
}

uint64_t CPDateFormatStringForFormatType()
{
  return MEMORY[0x1E0CFA260]();
}

uint64_t CPPhoneNumberCopyActiveCountryCode()
{
  return MEMORY[0x1E0CFA330]();
}

uint64_t CPPhoneNumberCopyActiveCountryCodeNoDefault()
{
  return MEMORY[0x1E0CFA338]();
}

uint64_t CPPhoneNumberSetActiveCountryCode()
{
  return MEMORY[0x1E0CFA388]();
}

uint64_t CPPhoneNumberSetHomeCountryCode()
{
  return MEMORY[0x1E0CFA390]();
}

uint64_t CPPhoneNumberSetNetworkCountryCode()
{
  return MEMORY[0x1E0CFA398]();
}

uint64_t CPSharedResourcesDirectory()
{
  return MEMORY[0x1E0CFA6C0]();
}

uint64_t CPSqliteSetDefaultPageCacheSize()
{
  return MEMORY[0x1E0CFA8A8]();
}

uint64_t CPSqliteSetDefaultSharedCacheModeEnabledState()
{
  return MEMORY[0x1E0CFA8B0]();
}

uint64_t CSAutobahnEnabledForPlatform()
{
  return MEMORY[0x1E0D1BB00]();
}

uint64_t CSComponentTransitionInputsMake()
{
  return MEMORY[0x1E0D1BB10]();
}

uint64_t CSEventShouldBeLogged()
{
  return MEMORY[0x1E0D1BB18]();
}

uint64_t CSMagSafeAccessoryTypeForSBSAccessoryType()
{
  return MEMORY[0x1E0D1BB20]();
}

uint64_t CTFontGetLanguageAwareOutsets()
{
  return MEMORY[0x1E0CA7C10]();
}

uint64_t CTStartOTASP()
{
  return MEMORY[0x1E0CA6CB8]();
}

uint64_t CTTelephonyCenterAddObserver()
{
  return MEMORY[0x1E0CA6CC0]();
}

uint64_t CTTelephonyCenterGetDefault()
{
  return MEMORY[0x1E0CA6CC8]();
}

uint64_t CTTelephonyCenterSetDefaultRunloop()
{
  return MEMORY[0x1E0CA6CE0]();
}

CVReturn CVPixelBufferCreateWithIOSurface(CFAllocatorRef allocator, IOSurfaceRef surface, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CA8AC0](allocator, surface, pixelBufferAttributes, pixelBufferOut);
}

IOSurfaceRef CVPixelBufferGetIOSurface(CVPixelBufferRef pixelBuffer)
{
  return (IOSurfaceRef)MEMORY[0x1E0CA8B30](pixelBuffer);
}

void CVPixelBufferRelease(CVPixelBufferRef texture)
{
  MEMORY[0x1E0CA8BF0](texture);
}

uint64_t DMPerformMigration()
{
  return MEMORY[0x1E0D1CFA8]();
}

uint64_t DNDModeSemanticTypeToString()
{
  return MEMORY[0x1E0D1D420]();
}

uint64_t DOCCreateDefaultHomeScreenWidgetIntent()
{
  return MEMORY[0x1E0D1D8A0]();
}

uint64_t FBSApplicationTerminationReasonDescription()
{
  return MEMORY[0x1E0D22C08]();
}

uint64_t FBSApplicationTerminationReasonIsGraceful()
{
  return MEMORY[0x1E0D22C10]();
}

uint64_t FBSDisplayHDRModeToCADisplayHDRMode()
{
  return MEMORY[0x1E0D22C68]();
}

uint64_t FBSDisplayOverscanCompensationDescription()
{
  return MEMORY[0x1E0D22C90]();
}

uint64_t FBSDisplayOverscanCompensationForDisplayValue()
{
  return MEMORY[0x1E0DAACD8]();
}

uint64_t FBSDisplayOverscanCompensationToCADisplayOverscanAdjustment()
{
  return MEMORY[0x1E0D22C98]();
}

uint64_t FBSInstallTypeIsCloudDemoted()
{
  return MEMORY[0x1E0D22CB0]();
}

uint64_t FBSOpenApplicationErrorCreate()
{
  return MEMORY[0x1E0D22CC8]();
}

uint64_t FBSProcessPrettyDescription()
{
  return MEMORY[0x1E0D22E00]();
}

uint64_t FBSProcessResourceAllowanceScale()
{
  return MEMORY[0x1E0D22E20]();
}

uint64_t FBSSceneSnapshotActionResponseForErrorCode()
{
  return MEMORY[0x1E0D22E48]();
}

uint64_t FBSystemAppBundleID()
{
  return MEMORY[0x1E0D22860]();
}

uint64_t FBSystemShellInitialize()
{
  return MEMORY[0x1E0D22868]();
}

uint64_t FPExtendBookmarkForDocumentURL()
{
  return MEMORY[0x1E0CAA948]();
}

uint64_t FigCreateCGImageFromJPEG()
{
  return MEMORY[0x1E0D0D548]();
}

uint64_t FigCreateIOSurfaceBackedCVPixelBufferWithAttributes()
{
  return MEMORY[0x1E0CEC8D0]();
}

uint64_t GSEventDeviceOrientation()
{
  return MEMORY[0x1E0D27AF8]();
}

uint64_t GSEventIsHardwareKeyboardAttached()
{
  return MEMORY[0x1E0D27B50]();
}

uint64_t GSMainScreenOrientation()
{
  return MEMORY[0x1E0D27C40]();
}

uint64_t GSMainScreenPixelSize()
{
  return MEMORY[0x1E0D27C48]();
}

uint64_t GSSendAppPreferencesChanged()
{
  return MEMORY[0x1E0D27C60]();
}

uint64_t GetThermalState()
{
  return MEMORY[0x1E0D1BCE0]();
}

uint64_t IOAccessoryManagerConfigurePower()
{
  return MEMORY[0x1E0DE01E0]();
}

uint64_t IOHIDEventCreateKeyboardEvent()
{
  return MEMORY[0x1E0CBB078]();
}

uint64_t IOHIDEventCreateProximtyEvent()
{
  return MEMORY[0x1E0CBB088]();
}

uint64_t IOHIDEventGetChildren()
{
  return MEMORY[0x1E0CBB0F8]();
}

uint64_t IOHIDEventGetDataValue()
{
  return MEMORY[0x1E0CBB100]();
}

uint64_t IOHIDEventGetFloatValue()
{
  return MEMORY[0x1E0CBB128]();
}

uint64_t IOHIDEventGetIntegerValue()
{
  return MEMORY[0x1E0CBB130]();
}

uint64_t IOHIDEventGetPhase()
{
  return MEMORY[0x1E0CBB148]();
}

uint64_t IOHIDEventGetSenderID()
{
  return MEMORY[0x1E0CBB150]();
}

uint64_t IOHIDEventGetTimeStamp()
{
  return MEMORY[0x1E0CBB158]();
}

uint64_t IOHIDEventGetTimeStampOfType()
{
  return MEMORY[0x1E0CBB160]();
}

uint64_t IOHIDEventGetType()
{
  return MEMORY[0x1E0CBB168]();
}

uint64_t IOHIDEventSetIntegerValue()
{
  return MEMORY[0x1E0CBB1B0]();
}

io_object_t IOIteratorNext(io_iterator_t iterator)
{
  return MEMORY[0x1E0CBB668](*(_QWORD *)&iterator);
}

IONotificationPortRef IONotificationPortCreate(mach_port_t mainPort)
{
  return (IONotificationPortRef)MEMORY[0x1E0CBB698](*(_QWORD *)&mainPort);
}

void IONotificationPortDestroy(IONotificationPortRef notify)
{
  MEMORY[0x1E0CBB6A0](notify);
}

void IONotificationPortSetDispatchQueue(IONotificationPortRef notify, dispatch_queue_t queue)
{
  MEMORY[0x1E0CBB6B8](notify, queue);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return MEMORY[0x1E0CBB6F0](*(_QWORD *)&object);
}

IOReturn IOPMAssertionCreateWithProperties(CFDictionaryRef AssertionProperties, IOPMAssertionID *AssertionID)
{
  return MEMORY[0x1E0CBB718](AssertionProperties, AssertionID);
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return MEMORY[0x1E0CBB738](*(_QWORD *)&AssertionID);
}

IOReturn IOPMAssertionSetProperty(IOPMAssertionID theAssertion, CFStringRef theProperty, CFTypeRef theValue)
{
  return MEMORY[0x1E0CBB748](*(_QWORD *)&theAssertion, theProperty, theValue);
}

IOReturn IOPMCopyAssertionsByProcess(CFDictionaryRef *AssertionsByPID)
{
  return MEMORY[0x1E0CBB778](AssertionsByPID);
}

CFArrayRef IOPMCopyScheduledPowerEvents(void)
{
  return (CFArrayRef)MEMORY[0x1E0CBB7A8]();
}

uint64_t IOPMUpdateDominoState()
{
  return MEMORY[0x1E0CBB848]();
}

uint64_t IOPMUpdateOnenessState()
{
  return MEMORY[0x1E0CBB850]();
}

CFDictionaryRef IOPSCopyExternalPowerAdapterDetails(void)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBB860]();
}

uint64_t IOPSCopyPowerSourcesByType()
{
  return MEMORY[0x1E0CBB868]();
}

CFArrayRef IOPSCopyPowerSourcesList(CFTypeRef blob)
{
  return (CFArrayRef)MEMORY[0x1E0CBB880](blob);
}

CFDictionaryRef IOPSGetPowerSourceDescription(CFTypeRef blob, CFTypeRef ps)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBB8A8](blob, ps);
}

CFTypeRef IORegistryEntryCreateCFProperty(io_registry_entry_t entry, CFStringRef key, CFAllocatorRef allocator, IOOptionBits options)
{
  return (CFTypeRef)MEMORY[0x1E0CBB900](*(_QWORD *)&entry, key, allocator, *(_QWORD *)&options);
}

kern_return_t IORegistryEntryGetRegistryEntryID(io_registry_entry_t entry, uint64_t *entryID)
{
  return MEMORY[0x1E0CBB988](*(_QWORD *)&entry, entryID);
}

uint64_t IOReportChannelGetChannelName()
{
  return MEMORY[0x1E0DE0290]();
}

uint64_t IOReportCopyChannelsInCategories()
{
  return MEMORY[0x1E0DE02D0]();
}

uint64_t IOReportCreateSamples()
{
  return MEMORY[0x1E0DE02F8]();
}

uint64_t IOReportCreateSubscription()
{
  return MEMORY[0x1E0DE0310]();
}

uint64_t IOReportIterate()
{
  return MEMORY[0x1E0DE0338]();
}

uint64_t IOReportStateGetCount()
{
  return MEMORY[0x1E0DE0368]();
}

uint64_t IOReportStateGetInTransitions()
{
  return MEMORY[0x1E0DE0378]();
}

uint64_t IOReportStateGetNameForIndex()
{
  return MEMORY[0x1E0DE0380]();
}

uint64_t IOReportStateGetResidency()
{
  return MEMORY[0x1E0DE0388]();
}

kern_return_t IOServiceAddInterestNotification(IONotificationPortRef notifyPort, io_service_t service, const io_name_t interestType, IOServiceInterestCallback callback, void *refCon, io_object_t *notification)
{
  return MEMORY[0x1E0CBB9C0](notifyPort, *(_QWORD *)&service, interestType, callback, refCon, notification);
}

kern_return_t IOServiceAddMatchingNotification(IONotificationPortRef notifyPort, const io_name_t notificationType, CFDictionaryRef matching, IOServiceMatchingCallback callback, void *refCon, io_iterator_t *notification)
{
  return MEMORY[0x1E0CBB9C8](notifyPort, notificationType, matching, callback, refCon, notification);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return MEMORY[0x1E0CBB9E0](*(_QWORD *)&mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return (CFMutableDictionaryRef)MEMORY[0x1E0CBBA00](name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return MEMORY[0x1E0CBBA10](*(_QWORD *)&service, *(_QWORD *)&owningTask, *(_QWORD *)&type, connect);
}

mach_port_t IOSurfaceCreateMachPort(IOSurfaceRef buffer)
{
  return MEMORY[0x1E0CBBB00](buffer);
}

OSType IOSurfaceGetPixelFormat(IOSurfaceRef buffer)
{
  return MEMORY[0x1E0CBBC68](buffer);
}

CFTypeID IOSurfaceGetTypeID(void)
{
  return MEMORY[0x1E0CBBCC8]();
}

uint64_t IsBlankedForBLSBacklightDisplayMode()
{
  return MEMORY[0x1E0D00FD8]();
}

uint64_t LCSFeatureEnabled()
{
  return MEMORY[0x1E0D44640]();
}

uint64_t MAEGetActivationStateWithError()
{
  return MEMORY[0x1E0D4DEA8]();
}

uint64_t MGCancelNotifications()
{
  return MEMORY[0x1E0DE2B18]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t MGCopyAnswerWithError()
{
  return MEMORY[0x1E0DE2B38]();
}

uint64_t MGCopyMultipleAnswers()
{
  return MEMORY[0x1E0DE2B40]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1E0DE2B50]();
}

uint64_t MGGetSInt32Answer()
{
  return MEMORY[0x1E0DE2B70]();
}

uint64_t MGIsQuestionValid()
{
  return MEMORY[0x1E0DE2BA0]();
}

uint64_t MGRegisterForUpdates()
{
  return MEMORY[0x1E0DE2BA8]();
}

uint64_t MRApplicationActivityGetStatus()
{
  return MEMORY[0x1E0D4B6D8]();
}

uint64_t MRContentItemCopyNowPlayingInfo()
{
  return MEMORY[0x1E0D4B720]();
}

uint64_t MRMediaRemoteGetLocalOrigin()
{
  return MEMORY[0x1E0D4BEF8]();
}

uint64_t MRMediaRemoteGetNowPlayingClientForOrigin()
{
  return MEMORY[0x1E0D4BF30]();
}

uint64_t MRMediaRemoteRegisterForNowPlayingNotifications()
{
  return MEMORY[0x1E0D4C070]();
}

uint64_t MRMediaRemoteRequestNowPlayingPlaybackQueueSync()
{
  return MEMORY[0x1E0D4C0A8]();
}

uint64_t MRMediaRemoteSendCommand()
{
  return MEMORY[0x1E0D4C0B0]();
}

uint64_t MRMediaRemoteUnregisterForNowPlayingNotifications()
{
  return MEMORY[0x1E0D4C1B8]();
}

uint64_t MRNowPlayingClientGetProcessIdentifier()
{
  return MEMORY[0x1E0D4C1E8]();
}

uint64_t MRPlaybackQueueGetContentItemAtOffset()
{
  return MEMORY[0x1E0D4C260]();
}

uint64_t MRPlaybackQueueRequestCreateDefault()
{
  return MEMORY[0x1E0D4C280]();
}

uint64_t MobileWiFiContainsRadio()
{
  return MEMORY[0x1E0D4FAE8]();
}

uint64_t NCRegisterUserNotificationsUILogging()
{
  return MEMORY[0x1E0DC5F68]();
}

uint64_t NCStringFromStageChangeTrigger()
{
  return MEMORY[0x1E0DC6120]();
}

NSArray *__cdecl NSAllMapTableKeys(NSMapTable *table)
{
  return (NSArray *)MEMORY[0x1E0CB2850](table);
}

NSArray *__cdecl NSAllMapTableValues(NSMapTable *table)
{
  return (NSArray *)MEMORY[0x1E0CB2858](table);
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

NSString *NSHomeDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB2C00]();
}

NSRange NSIntersectionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2;
  NSUInteger v3;
  NSRange result;

  v2 = MEMORY[0x1E0CB2C58](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

void NSLog(NSString *format, ...)
{
  MEMORY[0x1E0CB2D88](format);
}

void *__cdecl NSMapGet(NSMapTable *table, const void *key)
{
  return (void *)MEMORY[0x1E0CB2DA0](table, key);
}

void NSMapInsert(NSMapTable *table, const void *key, const void *value)
{
  MEMORY[0x1E0CB2DA8](table, key, value);
}

BOOL NSMapMember(NSMapTable *table, const void *key, void **originalKey, void **value)
{
  return MEMORY[0x1E0CB2DC0](table, key, originalKey, value);
}

uint64_t NSRequestConcreteImplementation()
{
  return MEMORY[0x1E0CB3158]();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x1E0CB3178](directory, domainMask, expandTilde);
}

SEL NSSelectorFromString(NSString *aSelectorName)
{
  return (SEL)MEMORY[0x1E0CB3190](aSelectorName);
}

uint64_t NSStringFromAnalyticsEventType()
{
  return MEMORY[0x1E0DAACE0]();
}

uint64_t NSStringFromBKSDisplayServicesCloneMirroringMode()
{
  return MEMORY[0x1E0D00C00]();
}

uint64_t NSStringFromBKSHIDEventSource()
{
  return MEMORY[0x1E0D00C10]();
}

uint64_t NSStringFromBKSHIDServicesProximityDetectionMode()
{
  return MEMORY[0x1E0D00C18]();
}

uint64_t NSStringFromBKSHIDUISensorChangeSource()
{
  return MEMORY[0x1E0D00C20]();
}

uint64_t NSStringFromBKSHIDUISensorDisplayState()
{
  return MEMORY[0x1E0D00C28]();
}

uint64_t NSStringFromBKSKeyModifierFlags()
{
  return MEMORY[0x1E0D00C30]();
}

uint64_t NSStringFromBKSSceneHostTouchBehavior()
{
  return MEMORY[0x1E0D00C38]();
}

uint64_t NSStringFromBLSAlwaysOnSuppressionReason()
{
  return MEMORY[0x1E0D00F00]();
}

uint64_t NSStringFromBLSAlwaysOnSuppressionType()
{
  return MEMORY[0x1E0D00F08]();
}

uint64_t NSStringFromBLSBacklightDisplayMode()
{
  return MEMORY[0x1E0D00FE0]();
}

uint64_t NSStringFromBLSBacklightState()
{
  return MEMORY[0x1E0D00F10]();
}

uint64_t NSStringFromBOOL()
{
  return MEMORY[0x1E0CB31F8]();
}

uint64_t NSStringFromBSVersionedPID()
{
  return MEMORY[0x1E0D01680]();
}

NSString *__cdecl NSStringFromCGAffineTransform(CGAffineTransform *transform)
{
  return (NSString *)MEMORY[0x1E0CEA100](transform);
}

NSString *__cdecl NSStringFromCGPoint(CGPoint point)
{
  return (NSString *)MEMORY[0x1E0CEA108]((__n128)point, *(__n128 *)&point.y);
}

NSString *__cdecl NSStringFromCGRect(CGRect rect)
{
  return (NSString *)MEMORY[0x1E0CEA110]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

NSString *__cdecl NSStringFromCGSize(CGSize size)
{
  return (NSString *)MEMORY[0x1E0CEA118]((__n128)size, *(__n128 *)&size.height);
}

uint64_t NSStringFromCSHostableEntityContentMode()
{
  return MEMORY[0x1E0D1BB38]();
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x1E0CB3200](aClass);
}

uint64_t NSStringFromCoverSheetEventType()
{
  return MEMORY[0x1E0D1BB40]();
}

NSString *__cdecl NSStringFromDirectionalEdgeInsets(NSDirectionalEdgeInsets insets)
{
  return (NSString *)MEMORY[0x1E0CEA120](*(__n128 *)&insets.top, *(__n128 *)&insets.leading, *(__n128 *)&insets.bottom, *(__n128 *)&insets.trailing);
}

uint64_t NSStringFromFBProcessTaskState()
{
  return MEMORY[0x1E0D22888]();
}

uint64_t NSStringFromFBProcessVisibility()
{
  return MEMORY[0x1E0D22890]();
}

uint64_t NSStringFromFBSSceneActivityMode()
{
  return MEMORY[0x1E0D22F38]();
}

uint64_t NSStringFromFBSceneContentState()
{
  return MEMORY[0x1E0D22898]();
}

uint64_t NSStringFromIdleTimerDuration()
{
  return MEMORY[0x1E0DA9D28]();
}

uint64_t NSStringFromIdleWarnMode()
{
  return MEMORY[0x1E0DA9D30]();
}

uint64_t NSStringFromLockSource()
{
  return MEMORY[0x1E0DAC1E8]();
}

uint64_t NSStringFromMTLumaDodgePillBackgroundLuminance()
{
  return MEMORY[0x1E0D47478]();
}

uint64_t NSStringFromMTLumaDodgePillStyle()
{
  return MEMORY[0x1E0D47480]();
}

NSString *__cdecl NSStringFromPoint(NSPoint aPoint)
{
  return (NSString *)MEMORY[0x1E0CB3210]((__n128)aPoint, *(__n128 *)&aPoint.y);
}

NSString *__cdecl NSStringFromProtocol(Protocol *proto)
{
  return (NSString *)MEMORY[0x1E0CB3218](proto);
}

NSString *__cdecl NSStringFromRange(NSRange range)
{
  return (NSString *)MEMORY[0x1E0CB3220](range.location, range.length);
}

NSString *__cdecl NSStringFromRect(NSRect aRect)
{
  return (NSString *)MEMORY[0x1E0CB3228]((__n128)aRect.origin, *(__n128 *)&aRect.origin.y, (__n128)aRect.size, *(__n128 *)&aRect.size.height);
}

uint64_t NSStringFromSBFIdleTimerMode()
{
  return MEMORY[0x1E0DA9D38]();
}

uint64_t NSStringFromSBINCameraCaptureDevice()
{
  return MEMORY[0x1E0DAAC80]();
}

uint64_t NSStringFromSBINCameraCaptureMode()
{
  return MEMORY[0x1E0DAAC88]();
}

uint64_t NSStringFromSBIdleTimerConfigSettingPrecedence()
{
  return MEMORY[0x1E0DAACF8]();
}

uint64_t NSStringFromSBSAccessoryType()
{
  return MEMORY[0x1E0DAAD00]();
}

uint64_t NSStringFromSBSAccidentalActivationMitigationSessionState()
{
  return MEMORY[0x1E0DAAD08]();
}

uint64_t NSStringFromSBSAnalyticsActionButtonInteractionType()
{
  return MEMORY[0x1E0DAAD10]();
}

uint64_t NSStringFromSBSHardwareButtonKind()
{
  return MEMORY[0x1E0DAAD18]();
}

uint64_t NSStringFromSBSHardwareButtonSystemGlowStyle()
{
  return MEMORY[0x1E0DAAD20]();
}

uint64_t NSStringFromSBSLibraryPodPresentationErrorCode()
{
  return MEMORY[0x1E0DAAD28]();
}

uint64_t NSStringFromSBSceneViewDisplayMode()
{
  return MEMORY[0x1E0DAC1F0]();
}

uint64_t NSStringFromSBUIBiometricEvent()
{
  return MEMORY[0x1E0DAC440]();
}

uint64_t NSStringFromSBUIBiometricMatchMode()
{
  return MEMORY[0x1E0DAC448]();
}

uint64_t NSStringFromSBUIContinuityButtonEventType()
{
  return MEMORY[0x1E0DAC450]();
}

uint64_t NSStringFromSBUIContinuitySessionStep()
{
  return MEMORY[0x1E0DAC458]();
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return (NSString *)MEMORY[0x1E0CB3230](aSelector);
}

NSString *__cdecl NSStringFromSize(NSSize aSize)
{
  return (NSString *)MEMORY[0x1E0CB3240]((__n128)aSize, *(__n128 *)&aSize.height);
}

NSString *__cdecl NSStringFromUIEdgeInsets(UIEdgeInsets insets)
{
  return (NSString *)MEMORY[0x1E0CEA128](*(__n128 *)&insets.top, *(__n128 *)&insets.left, *(__n128 *)&insets.bottom, *(__n128 *)&insets.right);
}

uint64_t NSStringFromUnlockIntent()
{
  return MEMORY[0x1E0DAC1F8]();
}

uint64_t NSStringFromUnlockSource()
{
  return MEMORY[0x1E0DAC200]();
}

NSString *NSTemporaryDirectory(void)
{
  return (NSString *)MEMORY[0x1E0CB3250]();
}

uint64_t OSAWriteLogForSubmission()
{
  return MEMORY[0x1E0D1BD28]();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x1E0D82C10]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1E0D82C38]();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return MEMORY[0x1E0D82C58]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x1E0D82C68]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1E0D82C98]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1E0D82CB0]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1E0D82CE0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1E0D82D00]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1E0D82D10]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1E0D82D28]();
}

uint64_t PBUIHomeVariantStyleStateFromPRPosterHomeScreenConfiguration()
{
  return MEMORY[0x1E0D65308]();
}

uint64_t PBUIMaterialsIsLowQualityDevice()
{
  return MEMORY[0x1E0D65338]();
}

uint64_t PBUIPostExternalWallpaperChangeNotificationAsSystemShell()
{
  return MEMORY[0x1E0D65340]();
}

uint64_t PBUIStringForWallpaperVariant()
{
  return MEMORY[0x1E0D65368]();
}

uint64_t PBUIWallpaperEnumerateVariantsForLocations()
{
  return MEMORY[0x1E0D65370]();
}

uint64_t PBUIWallpaperLocationForVariant()
{
  return MEMORY[0x1E0D65378]();
}

uint64_t PBUIWallpaperStyleDescription()
{
  return MEMORY[0x1E0D65380]();
}

uint64_t PBUIWallpaperStyleTransitionStateMake()
{
  return MEMORY[0x1E0D65388]();
}

uint64_t PKLegacyStockholmLog()
{
  return MEMORY[0x1E0D6A458]();
}

uint64_t PLCleanupForStoreDemoMode()
{
  return MEMORY[0x1E0D714F8]();
}

uint64_t PLLogRegisteredEvent()
{
  return MEMORY[0x1E0D7FE28]();
}

uint64_t PLLogTimeSensitiveRegisteredEvent()
{
  return MEMORY[0x1E0D7FE30]();
}

uint64_t PLShouldLogRegisteredEvent()
{
  return MEMORY[0x1E0D7FE40]();
}

uint64_t PPSCreateTelemetryIdentifier()
{
  return MEMORY[0x1E0D7FE50]();
}

uint64_t PPSSendTelemetry()
{
  return MEMORY[0x1E0D7FE68]();
}

uint64_t PSCityForSpecifier()
{
  return MEMORY[0x1E0D80788]();
}

uint64_t PSMigrateSoundsDefaults_10_0()
{
  return MEMORY[0x1E0D808D8]();
}

uint64_t PTUIClientInterface()
{
  return MEMORY[0x1E0D83128]();
}

uint64_t PTUIServerInterface()
{
  return MEMORY[0x1E0D83138]();
}

uint64_t RPTAmplitudeFromPagesOfView()
{
  return MEMORY[0x1E0D83C88]();
}

uint64_t SAEffectiveElementDescription()
{
  return MEMORY[0x1E0DB07E8]();
}

uint64_t SAElementDescription()
{
  return MEMORY[0x1E0DB07F0]();
}

uint64_t SAElementIdentityDescription()
{
  return MEMORY[0x1E0DB07F8]();
}

uint64_t SAElementIdentityEqualToIdentity()
{
  return MEMORY[0x1E0DB0800]();
}

uint64_t SAHasActivityBehavior()
{
  return MEMORY[0x1E0DB0808]();
}

uint64_t SAHasAlertBehavior()
{
  return MEMORY[0x1E0DB0810]();
}

uint64_t SATargetElementFromBehaviorOverrider()
{
  return MEMORY[0x1E0DB0818]();
}

uint64_t SAUILayoutSpecifyingOverriderForElement()
{
  return MEMORY[0x1E0DB0838]();
}

uint64_t SAUILayoutSpecifyingOverriderForElementViewController()
{
  return MEMORY[0x1E0DB0840]();
}

uint64_t SAUIStringFromElementViewInteractionResult()
{
  return MEMORY[0x1E0DB0848]();
}

uint64_t SAUIStringFromElementViewLayoutMode()
{
  return MEMORY[0x1E0DB0850]();
}

uint64_t SBAlertItemIsUserDeactivate()
{
  return MEMORY[0x1E0DAC2D0]();
}

uint64_t SBBackgroundActivityAssertionServerInterface()
{
  return MEMORY[0x1E0DAB0F8]();
}

uint64_t SBBitmaskUnionIf()
{
  return MEMORY[0x1E0DA9FD8]();
}

uint64_t SBCardItemsControllerClientInterface()
{
  return MEMORY[0x1E0DAB100]();
}

uint64_t SBCardItemsControllerServerInterface()
{
  return MEMORY[0x1E0DAB108]();
}

uint64_t SBExternalDisplayEducationReasonMaskDescription()
{
  return MEMORY[0x1E0DA9FF0]();
}

uint64_t SBExternalDisplayLayoutServiceInstanceIdentifierForDisplay()
{
  return MEMORY[0x1E0DAB268]();
}

uint64_t SBFAngleForRotationFromInterfaceOrientationToInterfaceOrientation()
{
  return MEMORY[0x1E0DA9FF8]();
}

uint64_t SBFAudioCategoriesDisablingVolumeHUDIncludesCategory()
{
  return MEMORY[0x1E0DAA010]();
}

uint64_t SBFAudioCategoriesDisablingVolumeHUDUnion()
{
  return MEMORY[0x1E0DAA018]();
}

uint64_t SBFBSInterfaceOrientationMaskForBSInterfaceOrientation()
{
  return MEMORY[0x1E0DAA020]();
}

uint64_t SBFBoolEquals()
{
  return MEMORY[0x1E0DAA028]();
}

uint64_t SBFCachesPathForSandboxPath()
{
  return MEMORY[0x1E0DAA030]();
}

uint64_t SBFCreateIOSurfaceForImage()
{
  return MEMORY[0x1E0DAA040]();
}

uint64_t SBFDescriptionForSensorType()
{
  return MEMORY[0x1E0DAA048]();
}

uint64_t SBFEdgeInsetsRotateToInterfaceOrientation()
{
  return MEMORY[0x1E0DAA060]();
}

uint64_t SBFEffectiveArtworkSubtype()
{
  return MEMORY[0x1E0DAA068]();
}

uint64_t SBFEffectiveDeviceClass()
{
  return MEMORY[0x1E0DAA070]();
}

uint64_t SBFEffectiveHomeButtonType()
{
  return MEMORY[0x1E0DAA080]();
}

uint64_t SBFEnsureDirectoryExistsAtPath()
{
  return MEMORY[0x1E0DAA088]();
}

uint64_t SBFFirstInterfaceOrientationInInterfaceOrientationMask()
{
  return MEMORY[0x1E0DAA098]();
}

uint64_t SBFInterfaceOrientationDescription()
{
  return MEMORY[0x1E0DAA0D0]();
}

uint64_t SBFInterfaceOrientationMaskContainsInterfaceOrientation()
{
  return MEMORY[0x1E0DAA0D8]();
}

uint64_t SBFInterfaceOrientationMaskForInterfaceOrientation()
{
  return MEMORY[0x1E0DAA0E0]();
}

uint64_t SBFIsChamoisExternalDisplayControllerAvailable()
{
  return MEMORY[0x1E0DAA0E8]();
}

uint64_t SBFIsChamoisFullScreenToStripGroupOpacityAvailable()
{
  return MEMORY[0x1E0DAA0F0]();
}

uint64_t SBFIsChamoisOverflowGestureAvailable()
{
  return MEMORY[0x1E0DAA0F8]();
}

uint64_t SBFIsChamoisStripDisabledWhenHiddenAvailable()
{
  return MEMORY[0x1E0DAA100]();
}

uint64_t SBFIsChamoisWindowingUIAvailable()
{
  return MEMORY[0x1E0DAA108]();
}

uint64_t SBFIsIRDCResetAvailable()
{
  return MEMORY[0x1E0DAA110]();
}

uint64_t SBFIsMoreForegroundAppsAvailable()
{
  return MEMORY[0x1E0DAA118]();
}

uint64_t SBFIsOnenessAvailable()
{
  return MEMORY[0x1E0DAA120]();
}

uint64_t SBFIsOnenessHomeScreenEditingAvailable()
{
  return MEMORY[0x1E0DAA128]();
}

uint64_t SBFIsOnenessHomeScreenOnEmbeddedAvailable()
{
  return MEMORY[0x1E0DAA130]();
}

uint64_t SBFIsSAEHungryHomeAffordanceAvailable()
{
  return MEMORY[0x1E0DAA138]();
}

uint64_t SBFIsSAEIncreasedInsetAvailable()
{
  return MEMORY[0x1E0DAA140]();
}

uint64_t SBFIsSAEPersistentSiriAvailable()
{
  return MEMORY[0x1E0DAA148]();
}

uint64_t SBFIsSAETappyHomeAffordanceAvailable()
{
  return MEMORY[0x1E0DAA150]();
}

uint64_t SBFIsScreenLongevityAvailable()
{
  return MEMORY[0x1E0DAA158]();
}

uint64_t SBFIsShellSceneKitAvailable()
{
  return MEMORY[0x1E0DAA160]();
}

uint64_t SBFIsSymbolicLinkAtPath()
{
  return MEMORY[0x1E0DAA168]();
}

uint64_t SBFModificationDateForPath()
{
  return MEMORY[0x1E0DAA180]();
}

uint64_t SBFModifiedImageNameForName()
{
  return MEMORY[0x1E0DAA188]();
}

uint64_t SBFRectApproximatelyEqualToRect()
{
  return MEMORY[0x1E0DAA1A0]();
}

uint64_t SBFSafeProtocolCast()
{
  return MEMORY[0x1E0DAA1C0]();
}

uint64_t SBFStringForAppearState()
{
  return MEMORY[0x1E0DAA1C8]();
}

uint64_t SBFStringForBSDeviceOrientation()
{
  return MEMORY[0x1E0DAA1D0]();
}

uint64_t SBFStringForBSInterfaceOrientation()
{
  return MEMORY[0x1E0DAA1D8]();
}

uint64_t SBFStringForUIInterfaceOrientation()
{
  return MEMORY[0x1E0DAA1E0]();
}

uint64_t SBFStringForUIInterfaceOrientationMask()
{
  return MEMORY[0x1E0DAA1E8]();
}

uint64_t SBFStringForUIUserInterfaceStyle()
{
  return MEMORY[0x1E0DAA1F0]();
}

uint64_t SBFTransformFromOrientationToOrientation()
{
  return MEMORY[0x1E0DAA218]();
}

uint64_t SBFWindowForViewControllerTransition()
{
  return MEMORY[0x1E0DAA258]();
}

uint64_t SBFloatEqualsFloat()
{
  return MEMORY[0x1E0DAC718]();
}

uint64_t SBFloatFloorForScale()
{
  return MEMORY[0x1E0DAC720]();
}

uint64_t SBFloatGreaterThanFloat()
{
  return MEMORY[0x1E0DAC728]();
}

uint64_t SBFloatRoundForMainScreenScale()
{
  return MEMORY[0x1E0DAC730]();
}

uint64_t SBFloatRoundForScale()
{
  return MEMORY[0x1E0DAC738]();
}

uint64_t SBHBundle()
{
  return MEMORY[0x1E0DAA6E0]();
}

uint64_t SBHCacheIconImagesForApplications()
{
  return MEMORY[0x1E0DAA6E8]();
}

uint64_t SBHConfigurationIdentifierFromDataSource()
{
  return MEMORY[0x1E0DAA6F0]();
}

uint64_t SBHDefaultIconImageContinuousCornerRadiusForIconSize()
{
  return MEMORY[0x1E0DAA6F8]();
}

uint64_t SBHDisplayCornerRadiusForScreenType()
{
  return MEMORY[0x1E0DAA700]();
}

uint64_t SBHEmitEvent()
{
  return MEMORY[0x1E0DAA708]();
}

uint64_t SBHEnumerateScreenTypes()
{
  return MEMORY[0x1E0DAA710]();
}

uint64_t SBHGetApplicationIconImage()
{
  return MEMORY[0x1E0DAA718]();
}

uint64_t SBHGetApplicationIconImageWithTraitCollection()
{
  return MEMORY[0x1E0DAA720]();
}

uint64_t SBHGetApplicationIconLayerWithTraitCollection()
{
  return MEMORY[0x1E0DAA728]();
}

uint64_t SBHGetScreenSpecification()
{
  return MEMORY[0x1E0DAA730]();
}

uint64_t SBHHasCachedIconImagesForApplications()
{
  return MEMORY[0x1E0DAA738]();
}

uint64_t SBHHomeScreenSearchAffordanceEnabled()
{
  return MEMORY[0x1E0DAA740]();
}

uint64_t SBHIconGridSizeClassForString()
{
  return MEMORY[0x1E0DAA760]();
}

uint64_t SBHIconGridSizeClassToStackLayoutSize()
{
  return MEMORY[0x1E0DAA7A8]();
}

uint64_t SBHIconServicesOptionsForImageOptions()
{
  return MEMORY[0x1E0DAA800]();
}

uint64_t SBHLibraryPresentationErrorForCode()
{
  return MEMORY[0x1E0DAA840]();
}

uint64_t SBHPinViewWithinView()
{
  return MEMORY[0x1E0DAA868]();
}

uint64_t SBHScreenTypeForCurrentDevice()
{
  return MEMORY[0x1E0DAA870]();
}

uint64_t SBHScreenTypeForShortString()
{
  return MEMORY[0x1E0DAA878]();
}

uint64_t SBHScreenTypeHasHomeButton()
{
  return MEMORY[0x1E0DAA880]();
}

uint64_t SBHScreenTypeIsMoreSpace()
{
  return MEMORY[0x1E0DAA888]();
}

uint64_t SBHScreenTypeIsPad()
{
  return MEMORY[0x1E0DAA890]();
}

uint64_t SBHScreenTypeIsPhone()
{
  return MEMORY[0x1E0DAA898]();
}

uint64_t SBHScreenTypeIsZoomed()
{
  return MEMORY[0x1E0DAA8A0]();
}

uint64_t SBHSearchAffordancePresentationAnimationEnabled()
{
  return MEMORY[0x1E0DAA8B0]();
}

uint64_t SBHShortStringForScreenType()
{
  return MEMORY[0x1E0DAA8B8]();
}

uint64_t SBHStringForIconGridSizeClass()
{
  return MEMORY[0x1E0DAA8E8]();
}

uint64_t SBHStringForScreenType()
{
  return MEMORY[0x1E0DAA8F0]();
}

uint64_t SBHStringFromContentVisibility()
{
  return MEMORY[0x1E0DAA8F8]();
}

uint64_t SBHZPositionForScale()
{
  return MEMORY[0x1E0DAA928]();
}

uint64_t SBIconImageInfoMake()
{
  return MEMORY[0x1E0DAA948]();
}

uint64_t SBIconLocationGroupAddLocation()
{
  return MEMORY[0x1E0DAA9A8]();
}

uint64_t SBIconLocationGroupContainsLocation()
{
  return MEMORY[0x1E0DAA9B8]();
}

uint64_t SBIconViewQueryingBestIconViewForIcon()
{
  return MEMORY[0x1E0DAAA40]();
}

uint64_t SBIconViewQueryingDisplayingIconView()
{
  return MEMORY[0x1E0DAAA48]();
}

uint64_t SBLayoutDefaultSideLayoutElementWidth()
{
  return MEMORY[0x1E0DAC760]();
}

uint64_t SBLayoutSupportsSideLayoutRole()
{
  return MEMORY[0x1E0DAC768]();
}

uint64_t SBLogAccessibilityWindowHosting()
{
  return MEMORY[0x1E0DAB2A8]();
}

uint64_t SBLogActiveDisplay()
{
  return MEMORY[0x1E0DAB2B0]();
}

uint64_t SBLogAnalytics()
{
  return MEMORY[0x1E0DAB2B8]();
}

uint64_t SBLogAppQuitMonitor()
{
  return MEMORY[0x1E0DAB2C0]();
}

uint64_t SBLogAppShortcuts()
{
  return MEMORY[0x1E0DAB2C8]();
}

uint64_t SBLogApplicationRestrictionMonitoring()
{
  return MEMORY[0x1E0DAB2D0]();
}

uint64_t SBLogAutoLaunching()
{
  return MEMORY[0x1E0DAB300]();
}

uint64_t SBLogBanners()
{
  return MEMORY[0x1E0DAB308]();
}

uint64_t SBLogBiometricResource()
{
  return MEMORY[0x1E0DAB310]();
}

uint64_t SBLogCFUserNotifications()
{
  return MEMORY[0x1E0DAB318]();
}

uint64_t SBLogCameraCaptureAccidentalActivationMitigationSession()
{
  return MEMORY[0x1E0DAB320]();
}

uint64_t SBLogCameraCaptureAppConfiguration()
{
  return MEMORY[0x1E0DAB328]();
}

uint64_t SBLogCommon()
{
  return MEMORY[0x1E0DAAA70]();
}

uint64_t SBLogContinuitySessionService()
{
  return MEMORY[0x1E0DAC770]();
}

uint64_t SBLogCoverSheet()
{
  return MEMORY[0x1E0DAB338]();
}

uint64_t SBLogDashBoard()
{
  return MEMORY[0x1E0DAB350]();
}

uint64_t SBLogDashBoardHostedAppViewController()
{
  return MEMORY[0x1E0DAB360]();
}

uint64_t SBLogDisplayAssertions()
{
  return MEMORY[0x1E0DAB378]();
}

uint64_t SBLogDisplayControlling()
{
  return MEMORY[0x1E0DAB380]();
}

uint64_t SBLogDisplayEducation()
{
  return MEMORY[0x1E0DAB388]();
}

uint64_t SBLogDisplayScaleMapping()
{
  return MEMORY[0x1E0DAB390]();
}

uint64_t SBLogDisplayTransforming()
{
  return MEMORY[0x1E0DAB398]();
}

uint64_t SBLogDoNotDisturbWhileDriving()
{
  return MEMORY[0x1E0DAB3A8]();
}

uint64_t SBLogDockRecents()
{
  return MEMORY[0x1E0DAB3B0]();
}

uint64_t SBLogFBDisplayManagerCallbacks()
{
  return MEMORY[0x1E0DAB3B8]();
}

uint64_t SBLogFocusModes()
{
  return MEMORY[0x1E0DAB3C0]();
}

uint64_t SBLogHangTracer()
{
  return MEMORY[0x1E0DAB3C8]();
}

uint64_t SBLogHearingTestMode()
{
  return MEMORY[0x1E0DAB3D8]();
}

uint64_t SBLogHomeScreenConfiguration()
{
  return MEMORY[0x1E0DAB3E0]();
}

uint64_t SBLogIconDragging()
{
  return MEMORY[0x1E0DAB3E8]();
}

uint64_t SBLogIdleTimer()
{
  return MEMORY[0x1E0DAB3F0]();
}

uint64_t SBLogInCallPresentation()
{
  return MEMORY[0x1E0DAB3F8]();
}

uint64_t SBLogInputUI()
{
  return MEMORY[0x1E0DAB400]();
}

uint64_t SBLogKeyboardDismissal()
{
  return MEMORY[0x1E0DAB408]();
}

uint64_t SBLogKeyboardFocus()
{
  return MEMORY[0x1E0DAB410]();
}

uint64_t SBLogLiquidDetection()
{
  return MEMORY[0x1E0DAB418]();
}

uint64_t SBLogLockScreenBiometricCoordinator()
{
  return MEMORY[0x1E0DAB420]();
}

uint64_t SBLogLockScreenMesaUnlockBehaviors()
{
  return MEMORY[0x1E0DAB440]();
}

uint64_t SBLogLockScreenMesaWalletPreArm()
{
  return MEMORY[0x1E0DAB448]();
}

uint64_t SBLogLockScreenNowPlaying()
{
  return MEMORY[0x1E0DAB450]();
}

uint64_t SBLogMedusaDropDestination()
{
  return MEMORY[0x1E0DAB458]();
}

uint64_t SBLogMedusaKeyboard()
{
  return MEMORY[0x1E0DAB460]();
}

uint64_t SBLogPIP()
{
  return MEMORY[0x1E0DAB478]();
}

uint64_t SBLogProductivityGestures()
{
  return MEMORY[0x1E0DAB488]();
}

uint64_t SBLogRootController()
{
  return MEMORY[0x1E0DAB490]();
}

uint64_t SBLogSceneSnapshots()
{
  return MEMORY[0x1E0DAB498]();
}

uint64_t SBLogScreenWake()
{
  return MEMORY[0x1E0DAB4A0]();
}

uint64_t SBLogSpotlight()
{
  return MEMORY[0x1E0DAB4A8]();
}

uint64_t SBLogStatusBarish()
{
  return MEMORY[0x1E0DAB4B0]();
}

uint64_t SBLogSystemApertureHosting()
{
  return MEMORY[0x1E0DAB4B8]();
}

uint64_t SBLogSystemNotes()
{
  return MEMORY[0x1E0DAB4C0]();
}

uint64_t SBLogSystemUIScene()
{
  return MEMORY[0x1E0DAB4C8]();
}

uint64_t SBLogTraitsArbiter()
{
  return MEMORY[0x1E0DAB4D0]();
}

uint64_t SBLogTransientOverlay()
{
  return MEMORY[0x1E0DAB4D8]();
}

uint64_t SBLogWallet()
{
  return MEMORY[0x1E0DAB4E0]();
}

uint64_t SBLogWallpaper()
{
  return MEMORY[0x1E0DAA298]();
}

uint64_t SBLogWidgets()
{
  return MEMORY[0x1E0DAAA78]();
}

uint64_t SBLogZStack()
{
  return MEMORY[0x1E0DAB4F0]();
}

uint64_t SBPhoneOnPadFallbackLaunchSize()
{
  return MEMORY[0x1E0DAC778]();
}

uint64_t SBRectContainsPoint()
{
  return MEMORY[0x1E0DAC780]();
}

uint64_t SBRectCornerRadiiForRadius()
{
  return MEMORY[0x1E0DAC788]();
}

uint64_t SBRectEqualsRect()
{
  return MEMORY[0x1E0DAC790]();
}

uint64_t SBRectWithSize()
{
  return MEMORY[0x1E0DAC798]();
}

uint64_t SBRootFolderPageStateIsOnIconPage()
{
  return MEMORY[0x1E0DAAA80]();
}

uint64_t SBRootFolderPageStateIsOnLeadingCustomPage()
{
  return MEMORY[0x1E0DAAA88]();
}

uint64_t SBRootFolderPageStateIsSearch()
{
  return MEMORY[0x1E0DAAA90]();
}

uint64_t SBSBackgroundActivityAssertionClientInterface()
{
  return MEMORY[0x1E0DAB580]();
}

uint64_t SBSConvertOpenApplicationSBSKeysToFBSKeysIfNecessary()
{
  return MEMORY[0x1E0DAB5D0]();
}

uint64_t SBSConvertPointFromDisplayToNeighboringDisplay()
{
  return MEMORY[0x1E0DAB5D8]();
}

uint64_t SBSConvertRectFromDisplayToNeighboringDisplay()
{
  return MEMORY[0x1E0DAB5E0]();
}

uint64_t SBSCreateOpenApplicationService()
{
  return MEMORY[0x1E0DAB620]();
}

uint64_t SBSCreateOpenApplicationServiceEndpoint()
{
  return MEMORY[0x1E0DAB628]();
}

uint64_t SBSDiffSystemNotesPresentationConfigurations()
{
  return MEMORY[0x1E0DAB630]();
}

uint64_t SBSDisplayEdgeAdjacentToNeighboringDisplay()
{
  return MEMORY[0x1E0DAB638]();
}

uint64_t SBSDisplayLayoutBacklightTransitionReasonForBacklightChangeSource()
{
  return MEMORY[0x1E0DAB640]();
}

uint64_t SBSDisplayLayoutTransitionReasonForSourceApplication()
{
  return MEMORY[0x1E0DAB6C0]();
}

uint64_t SBSDisplayScaleMaskFromScale()
{
  return MEMORY[0x1E0DAB6D0]();
}

uint64_t SBSHearingTestModeDescription()
{
  return MEMORY[0x1E0DAB750]();
}

uint64_t SBSIdentifierForSecureAppType()
{
  return MEMORY[0x1E0DAB760]();
}

uint64_t SBSInCallPresentationModeDescription()
{
  return MEMORY[0x1E0DAB770]();
}

uint64_t SBSLibraryPodPresentationErrorCodeForErrorCode()
{
  return MEMORY[0x1E0DAAA98]();
}

uint64_t SBSRemoteAlertHandleInvalidationErrorCodeForInvalidationReason()
{
  return MEMORY[0x1E0DAB928]();
}

uint64_t SBSRemoteAlertHandleInvalidationErrorDescription()
{
  return MEMORY[0x1E0DAB930]();
}

uint64_t SBSSecureAppTypeForIdentifier()
{
  return MEMORY[0x1E0DAB968]();
}

uint64_t SBSSetRequiredContextIdsForMedusaDragAndDropForSpotlightOnly()
{
  return MEMORY[0x1E0DAB980]();
}

uint64_t SBSSetStatusBarShowsOverridesForRecording()
{
  return MEMORY[0x1E0DAB990]();
}

uint64_t SBSStringFromWebClipServiceLaunchOrigin()
{
  return MEMORY[0x1E0DAB9B0]();
}

uint64_t SBSSystemNotesPresentationModeDescription()
{
  return MEMORY[0x1E0DAB9C0]();
}

uint64_t SBSUIHardwareButtonEventTypeDescription()
{
  return MEMORY[0x1E0DAC7A8]();
}

uint64_t SBSUIHardwareButtonEventTypeIsValid()
{
  return MEMORY[0x1E0DAC7B0]();
}

uint64_t SBSUIInCallWindowSceneSessionDestructionReasonDescription()
{
  return MEMORY[0x1E0DAC838]();
}

uint64_t SBSizeEqualsSize()
{
  return MEMORY[0x1E0DAC848]();
}

uint64_t SBStringFromAlertItemDeactivateReason()
{
  return MEMORY[0x1E0DAC388]();
}

uint64_t SBStringFromAnimationUpdateMode()
{
  return MEMORY[0x1E0DAA2A0]();
}

uint64_t SBStringFromCornerMask()
{
  return MEMORY[0x1E0DAC850]();
}

uint64_t SBStringFromRectCornerRadii()
{
  return MEMORY[0x1E0DAC858]();
}

uint64_t SBTransformFromOrientationToOrientation()
{
  return MEMORY[0x1E0DAC860]();
}

uint64_t SBTransformedRectWithScale()
{
  return MEMORY[0x1E0DAC868]();
}

uint64_t SBTransformedSizeWithScale()
{
  return MEMORY[0x1E0DAC870]();
}

uint64_t SBUICommonInitialize()
{
  return MEMORY[0x1E0DAC880]();
}

uint64_t SBUIContinuitySessionErrorCreate()
{
  return MEMORY[0x1E0DAC888]();
}

uint64_t SBUIConvertLockSourceToBacklightChangeSource()
{
  return MEMORY[0x1E0DAC3A8]();
}

uint64_t SBUIConvertUnlockSourceToBacklightChangeSource()
{
  return MEMORY[0x1E0DAC3B0]();
}

uint64_t SBUICurrentPasscodeStyleForUser()
{
  return MEMORY[0x1E0DAC8A8]();
}

uint64_t SBUIGraphicsQuality()
{
  return MEMORY[0x1E0DAC8B8]();
}

uint64_t SBUIHasHIDRingerButton()
{
  return MEMORY[0x1E0DAC3B8]();
}

uint64_t SBUIHasHIDRingerSwitch()
{
  return MEMORY[0x1E0DAC3C0]();
}

uint64_t SBUIIsSystemApertureEnabled()
{
  return MEMORY[0x1E0DAC8C0]();
}

uint64_t SBUILegibilitySettingsAreEqual()
{
  return MEMORY[0x1E0DAC8D8]();
}

uint64_t SBUIPrewarmKeyboard()
{
  return MEMORY[0x1E0DAC3E8]();
}

uint64_t SBUISystemApertureControlEdgeSpacing()
{
  return MEMORY[0x1E0DAC920]();
}

uint64_t SBUISystemApertureDefaultContentSizeCategory()
{
  return MEMORY[0x1E0DAC928]();
}

uint64_t SBUISystemApertureHorizontalItemSpacing()
{
  return MEMORY[0x1E0DAC9B0]();
}

uint64_t SBUISystemApertureInterItemSpacing()
{
  return MEMORY[0x1E0DAC9B8]();
}

uint64_t SBUISystemApertureVerticalItemSpacing()
{
  return MEMORY[0x1E0DAC9C8]();
}

uint64_t SBUISystemShellHostingSpaceIdentifierForDisplayConfiguration()
{
  return MEMORY[0x1E0DAC9D0]();
}

uint64_t SBUnintegralizedRectCenteredAboutPoint()
{
  return MEMORY[0x1E0DAC9F8]();
}

uint64_t SBWakeLoggerSourceFromBacklightChangeSource()
{
  return MEMORY[0x1E0DAA2A8]();
}

uint64_t SB_NSStringFromUIPressType()
{
  return MEMORY[0x1E0DAA2B0]();
}

CFPropertyListRef SCDynamicStoreCopyValue(SCDynamicStoreRef store, CFStringRef key)
{
  return (CFPropertyListRef)MEMORY[0x1E0CE8768](store, key);
}

SCDynamicStoreRef SCDynamicStoreCreate(CFAllocatorRef allocator, CFStringRef name, SCDynamicStoreCallBack callout, SCDynamicStoreContext *context)
{
  return (SCDynamicStoreRef)MEMORY[0x1E0CE8770](allocator, name, callout, context);
}

CFStringRef SCDynamicStoreKeyCreateNetworkInterfaceEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return (CFStringRef)MEMORY[0x1E0CE87A8](allocator, domain, ifname, entity);
}

Boolean SCDynamicStoreSetDispatchQueue(SCDynamicStoreRef store, dispatch_queue_t queue)
{
  return MEMORY[0x1E0CE87C8](store, queue);
}

Boolean SCDynamicStoreSetNotificationKeys(SCDynamicStoreRef store, CFArrayRef keys, CFArrayRef patterns)
{
  return MEMORY[0x1E0CE87D8](store, keys, patterns);
}

uint64_t SFLocalizedStringFromTableInBundleForLanguage()
{
  return MEMORY[0x1E0D8D680]();
}

uint64_t SFRegulatoryImage()
{
  return MEMORY[0x1E0D8D6A8]();
}

uint64_t SS_SendStatusBarTapToScreenSharingServer()
{
  return MEMORY[0x1E0DDBC30]();
}

uint64_t STActivityAttributionUnsafeAuditTokenForPID()
{
  return MEMORY[0x1E0DB0AA8]();
}

uint64_t STBackgroundActivityIdentifierDescription()
{
  return MEMORY[0x1E0DB0B20]();
}

uint64_t STBackgroundActivityIdentifiersDescription()
{
  return MEMORY[0x1E0DB0C20]();
}

uint64_t STStatusItemIdentifierDescription()
{
  return MEMORY[0x1E0DB0E70]();
}

uint64_t STSystemStatusDescriptionForDomain()
{
  return MEMORY[0x1E0DB0EA8]();
}

uint64_t STUIBackgroundActivityIdentiferRepresentsStyleOverride()
{
  return MEMORY[0x1E0DB0F30]();
}

uint64_t STUIBackgroundActivityIdentifierForStyleOverride()
{
  return MEMORY[0x1E0DB0F38]();
}

uint64_t STUIBackgroundActivityIdentifiersForStyleOverrides()
{
  return MEMORY[0x1E0DB0F40]();
}

uint64_t STUIStyleOverrideForBackgroundActivityIdentifier()
{
  return MEMORY[0x1E0DB0F48]();
}

uint64_t STUIStyleOverridesForBackgroundActivityIdentifiers()
{
  return MEMORY[0x1E0DB0F50]();
}

uint64_t SUSUICreateInstallationKeybagWithSecret()
{
  return MEMORY[0x1E0DA8BE0]();
}

uint64_t SUSUIRequiresAlertPresentationAfterUpdate()
{
  return MEMORY[0x1E0DA8BE8]();
}

SecTaskRef SecTaskCreateFromSelf(CFAllocatorRef allocator)
{
  return (SecTaskRef)MEMORY[0x1E0CD6610](allocator);
}

uint32_t SecTaskGetCodeSignStatus(SecTaskRef task)
{
  return MEMORY[0x1E0CD6638](task);
}

uint64_t TCCAccessCopyInformation()
{
  return MEMORY[0x1E0DB0FB0]();
}

uint64_t TMIsAutomaticTimeZoneEnabled()
{
  return MEMORY[0x1E0D1A640]();
}

uint64_t TUISOCountryCodeForMCC()
{
  return MEMORY[0x1E0DBD650]();
}

uint64_t TUInCallRemoteAlertViewControllerClassName()
{
  return MEMORY[0x1E0DBD658]();
}

uint64_t TUIsCallHandoffActivityType()
{
  return MEMORY[0x1E0DBD668]();
}

uint64_t TUShouldShowCallHandoff()
{
  return MEMORY[0x1E0DBD6C8]();
}

BOOL UIAccessibilityIsReduceMotionEnabled(void)
{
  return MEMORY[0x1E0CEB028]();
}

BOOL UIAccessibilityIsReduceTransparencyEnabled(void)
{
  return MEMORY[0x1E0CEB030]();
}

BOOL UIAccessibilityIsSwitchControlRunning(void)
{
  return MEMORY[0x1E0CEB038]();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return MEMORY[0x1E0CEB048]();
}

BOOL UIAccessibilityShouldDifferentiateWithoutColor(void)
{
  return MEMORY[0x1E0CEB0B0]();
}

uint64_t UIAnimationDragCoefficient()
{
  return MEMORY[0x1E0CEB250]();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return MEMORY[0x1E0CEB2C8](*(_QWORD *)&argc, argv, principalClassName, delegateClassName);
}

uint64_t UIApplicationSceneDeactivationReasonDescription()
{
  return MEMORY[0x1E0CEB2E0]();
}

uint64_t UIApplicationSceneDeactivationReasonMaskContainsReason()
{
  return MEMORY[0x1E0CEB2E8]();
}

uint64_t UIApplicationSceneDeactivationReasonMaskDescriptionComponents()
{
  return MEMORY[0x1E0CEB2F0]();
}

uint64_t UICeilToScale()
{
  return MEMORY[0x1E0CEB3A0]();
}

uint64_t UIContentSizeCategoryClip()
{
  return MEMORY[0x1E0DACA00]();
}

NSComparisonResult UIContentSizeCategoryCompareToCategory(UIContentSizeCategory lhs, UIContentSizeCategory rhs)
{
  return MEMORY[0x1E0CEB3E8](lhs, rhs);
}

uint64_t UIDistanceBetweenPoints()
{
  return MEMORY[0x1E0CEB468]();
}

uint64_t UIEdgeInsetsAdd()
{
  return MEMORY[0x1E0CEB480]();
}

uint64_t UIEdgeInsetsFromApplicationSupportDisplayEdgeInsetsWrapper()
{
  return MEMORY[0x1E0CEB488]();
}

uint64_t UIEdgeInsetsMakeWithEdges()
{
  return MEMORY[0x1E0CEB490]();
}

uint64_t UIEdgeInsetsMax()
{
  return MEMORY[0x1E0CEB498]();
}

uint64_t UIEdgeInsetsMin()
{
  return MEMORY[0x1E0CEB4A0]();
}

uint64_t UIFloorToScale()
{
  return MEMORY[0x1E0CEB4B8]();
}

uint64_t UIFormattedPhoneNumberFromString()
{
  return MEMORY[0x1E0CEB620]();
}

void UIGraphicsBeginImageContextWithOptions(CGSize size, BOOL opaque, CGFloat scale)
{
  MEMORY[0x1E0CEB630](opaque, (__n128)size, *(__n128 *)&size.height, scale);
}

void UIGraphicsEndImageContext(void)
{
  MEMORY[0x1E0CEB638]();
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1E0CEB640]();
}

UIImage *UIGraphicsGetImageFromCurrentImageContext(void)
{
  return (UIImage *)MEMORY[0x1E0CEB648]();
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return (NSData *)MEMORY[0x1E0CEB680](image, compressionQuality);
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x1E0CEB688](image);
}

uint64_t UIIntegralTransform()
{
  return MEMORY[0x1E0CEB718]();
}

uint64_t UIKeyboardAutomaticIsOnScreen()
{
  return MEMORY[0x1E0CEB800]();
}

uint64_t UIKeyboardForceOrderOutAutomaticAnimated()
{
  return MEMORY[0x1E0CEB878]();
}

uint64_t UIKeyboardOrderOutAutomaticSkippingAnimation()
{
  return MEMORY[0x1E0CEB8F0]();
}

uint64_t UIPointRoundToScale()
{
  return MEMORY[0x1E0CEBA20]();
}

uint64_t UIRectCenteredAboutPoint()
{
  return MEMORY[0x1E0CEBA70]();
}

uint64_t UIRectCenteredAboutPointScale()
{
  return MEMORY[0x1E0CEBA78]();
}

uint64_t UIRectCenteredIntegralRect()
{
  return MEMORY[0x1E0CEBA80]();
}

uint64_t UIRectCenteredIntegralRectScale()
{
  return MEMORY[0x1E0CEBA88]();
}

uint64_t UIRectCenteredRect()
{
  return MEMORY[0x1E0CEBA90]();
}

uint64_t UIRectCenteredXInRect()
{
  return MEMORY[0x1E0CEBA98]();
}

uint64_t UIRectCenteredXInRectScale()
{
  return MEMORY[0x1E0CEBAA0]();
}

uint64_t UIRectCenteredYInRect()
{
  return MEMORY[0x1E0CEBAA8]();
}

uint64_t UIRectCenteredYInRectScale()
{
  return MEMORY[0x1E0CEBAB0]();
}

uint64_t UIRectGetCenter()
{
  return MEMORY[0x1E0CEBAE0]();
}

uint64_t UIRectInset()
{
  return MEMORY[0x1E0CEBAE8]();
}

uint64_t UIRectInsetEdges()
{
  return MEMORY[0x1E0CEBAF0]();
}

uint64_t UIRectIntegralWithScale()
{
  return MEMORY[0x1E0CEBAF8]();
}

uint64_t UIRectIsDiscrete()
{
  return MEMORY[0x1E0CEBB00]();
}

uint64_t UIRectRoundToScale()
{
  return MEMORY[0x1E0CEBB08]();
}

uint64_t UIRoundToScale()
{
  return MEMORY[0x1E0CEBB20]();
}

uint64_t UIRoundToViewScale()
{
  return MEMORY[0x1E0CEBB30]();
}

uint64_t UISizeRoundToScale()
{
  return MEMORY[0x1E0CEBBC0]();
}

uint64_t UISizeRoundToViewScale()
{
  return MEMORY[0x1E0CEBBC8]();
}

uint64_t UIStatusBarLocalizedNotChargingString()
{
  return MEMORY[0x1E0CEBBE8]();
}

uint64_t UISystemRootDirectory()
{
  return MEMORY[0x1E0CEBC08]();
}

uint64_t UIViewControllerFromPresentable()
{
  return MEMORY[0x1E0D010B0]();
}

uint64_t UNSBuildForegroundAction()
{
  return MEMORY[0x1E0DC6040]();
}

uint64_t UNSDidCompleteDeliveryOfForegroundAction()
{
  return MEMORY[0x1E0DC6048]();
}

uint64_t UNSUserNotificationServerRun()
{
  return MEMORY[0x1E0DC6050]();
}

uint64_t VSPreferencesCopyAvailableLanguageIdentifiers()
{
  return MEMORY[0x1E0DC7418]();
}

uint64_t VSPreferencesCopySpokenLanguageIdentifier()
{
  return MEMORY[0x1E0DC7428]();
}

uint64_t VSRecognitionModelCopyResourceURL()
{
  return MEMORY[0x1E0DC7440]();
}

OSStatus VTPixelTransferSessionCreate(CFAllocatorRef allocator, VTPixelTransferSessionRef *pixelTransferSessionOut)
{
  return MEMORY[0x1E0CECD18](allocator, pixelTransferSessionOut);
}

void VTPixelTransferSessionInvalidate(VTPixelTransferSessionRef session)
{
  MEMORY[0x1E0CECD28](session);
}

OSStatus VTPixelTransferSessionTransferImage(VTPixelTransferSessionRef session, CVPixelBufferRef sourceBuffer, CVPixelBufferRef destinationBuffer)
{
  return MEMORY[0x1E0CECD38](session, sourceBuffer, destinationBuffer);
}

OSStatus VTSessionSetProperty(VTSessionRef session, CFStringRef propertyKey, CFTypeRef propertyValue)
{
  return MEMORY[0x1E0CECD80](session, propertyKey, propertyValue);
}

uint64_t WFCreateShortcutsSmallWidgetConfigurationIntent()
{
  return MEMORY[0x1E0DDA118]();
}

uint64_t WFCreateShortcutsWidgetConfigurationIntent()
{
  return MEMORY[0x1E0DDA120]();
}

uint64_t WiFiDeviceClientCopyCurrentNetwork()
{
  return MEMORY[0x1E0D4FAF8]();
}

uint64_t WiFiDeviceClientCopyProperty()
{
  return MEMORY[0x1E0D4FB18]();
}

uint64_t WiFiDeviceClientGetInterfaceName()
{
  return MEMORY[0x1E0D4FB20]();
}

uint64_t WiFiDeviceClientGetPower()
{
  return MEMORY[0x1E0D4FB30]();
}

uint64_t WiFiDeviceClientGetTypeID()
{
  return MEMORY[0x1E0D4FB38]();
}

uint64_t WiFiDeviceClientRegisterExtendedLinkCallback()
{
  return MEMORY[0x1E0D4FB68]();
}

uint64_t WiFiDeviceClientRegisterLQMCallback()
{
  return MEMORY[0x1E0D4FB78]();
}

uint64_t WiFiDeviceClientRegisterPowerCallback()
{
  return MEMORY[0x1E0D4FB80]();
}

uint64_t WiFiDeviceClientScanAsync()
{
  return MEMORY[0x1E0D4FBA0]();
}

uint64_t WiFiDeviceClientScanCancel()
{
  return MEMORY[0x1E0D4FBA8]();
}

uint64_t WiFiManagerClientCopyDevices()
{
  return MEMORY[0x1E0D4FBE0]();
}

uint64_t WiFiManagerClientCopyProperty()
{
  return MEMORY[0x1E0D4FC00]();
}

uint64_t WiFiManagerClientCreate()
{
  return MEMORY[0x1E0D4FC08]();
}

uint64_t WiFiManagerClientRegisterDeviceAttachmentCallback()
{
  return MEMORY[0x1E0D4FC58]();
}

uint64_t WiFiManagerClientRegisterServerRestartCallback()
{
  return MEMORY[0x1E0D4FC68]();
}

uint64_t WiFiManagerClientScheduleWithRunLoop()
{
  return MEMORY[0x1E0D4FC88]();
}

uint64_t WiFiManagerClientSetPower()
{
  return MEMORY[0x1E0D4FC98]();
}

uint64_t WiFiManagerClientSetProperty()
{
  return MEMORY[0x1E0D4FCA0]();
}

uint64_t WiFiManagerClientUnscheduleFromRunLoop()
{
  return MEMORY[0x1E0D4FCC0]();
}

uint64_t WiFiNetworkGet11dCountryCodeFromIe()
{
  return MEMORY[0x1E0D4FCF0]();
}

uint64_t WiFiNetworkGetSSID()
{
  return MEMORY[0x1E0D4FD30]();
}

uint64_t WiFiNetworkIsApplePersonalHotspot()
{
  return MEMORY[0x1E0D4FD58]();
}

uint64_t XBApplicationSnapshotContentTypeMaskForContentType()
{
  return MEMORY[0x1E0DA8F78]();
}

uint64_t XBCachesPathForApplicationInfo()
{
  return MEMORY[0x1E0DA8F80]();
}

uint64_t XBInterfaceOrientationForString()
{
  return MEMORY[0x1E0DA8F88]();
}

uint64_t XBInterfaceOrientationMaskForInterfaceOrientation()
{
  return MEMORY[0x1E0DA8F90]();
}

uint64_t XBInterfaceOrientationMaskForInterfaceOrientationPair()
{
  return MEMORY[0x1E0DA8F98]();
}

uint64_t XBInterfaceOrientationsAreOrthogonal()
{
  return MEMORY[0x1E0DA8FC8]();
}

uint64_t XBLogCapture()
{
  return MEMORY[0x1E0DA8FF0]();
}

uint64_t XBLogFileManifest()
{
  return MEMORY[0x1E0DA8FF8]();
}

uint64_t XBNextClockwiseInterfaceOrientation()
{
  return MEMORY[0x1E0DA9000]();
}

uint64_t XBOppositeInterfaceOrientation()
{
  return MEMORY[0x1E0DA9008]();
}

uint64_t XBRotationDegreesForInterfaceOrientationRotation()
{
  return MEMORY[0x1E0DA9010]();
}

uint64_t XBStatusBarStateMaskMatchesSettings()
{
  return MEMORY[0x1E0DA9018]();
}

uint64_t XBStringForInterfaceOrientation()
{
  return MEMORY[0x1E0DA9020]();
}

uint64_t _AXSAssistiveTouchEnabled()
{
  return MEMORY[0x1E0DDD568]();
}

uint64_t _AXSAttentionAwarenessFeaturesEnabled()
{
  return MEMORY[0x1E0DDD5C8]();
}

uint64_t _AXSClassicInvertColorsEnabled()
{
  return MEMORY[0x1E0DDD688]();
}

uint64_t _AXSHandleHomeButtonPressSwallowedForGuidedAccess()
{
  return MEMORY[0x1E0DDD7B8]();
}

uint64_t _AXSHandleTripleClickHomeButtonPress()
{
  return MEMORY[0x1E0DDD7C0]();
}

uint64_t _AXSHomeButtonAssistant()
{
  return MEMORY[0x1E0DDD818]();
}

uint64_t _AXSHomeButtonRestingUnlock()
{
  return MEMORY[0x1E0DDD828]();
}

uint64_t _AXSHomeClickSpeed()
{
  return MEMORY[0x1E0DDD830]();
}

uint64_t _AXSInvertColorsEnabled()
{
  return MEMORY[0x1E0DDD9A8]();
}

uint64_t _AXSLockClickDownPressDurationScaleFactor()
{
  return MEMORY[0x1E0DDDA38]();
}

uint64_t _AXSLockClickVarianceScaleFactor()
{
  return MEMORY[0x1E0DDDA40]();
}

uint64_t _AXSPearlAuthenticationHapticsEnabled()
{
  return MEMORY[0x1E0DDDA90]();
}

uint64_t _AXSSideButtonClickSpeed()
{
  return MEMORY[0x1E0DDDCD8]();
}

uint64_t _AXSTripleClickCopyOptions()
{
  return MEMORY[0x1E0DDDD48]();
}

uint64_t _AXSZoomTouchEnabled()
{
  return MEMORY[0x1E0DDDED0]();
}

uint64_t _BSHasInternalSettings()
{
  return MEMORY[0x1E0D018C8]();
}

uint64_t _BSIsInternalInstall()
{
  return MEMORY[0x1E0D018D0]();
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

uint64_t _CFCopyServerVersionDictionary()
{
  return MEMORY[0x1E0C9A0C0]();
}

uint64_t _CFCopySystemVersionDictionary()
{
  return MEMORY[0x1E0C9A0D0]();
}

uint64_t _CFCopySystemVersionDictionaryValue()
{
  return MEMORY[0x1E0C9A0D8]();
}

uint64_t _CFPreferencesAppFullCloudSynchronize()
{
  return MEMORY[0x1E0C9A2F8]();
}

uint64_t _CFPreferencesAppSynchronizeWithContainer()
{
  return MEMORY[0x1E0C9A300]();
}

uint64_t _CFPreferencesFlushCachesForIdentifier()
{
  return MEMORY[0x1E0C9A328]();
}

uint64_t _CFPreferencesGetAppBooleanValueWithContainer()
{
  return MEMORY[0x1E0C9A330]();
}

uint64_t _CTServerConnectionCopyMobileCountryCode()
{
  return MEMORY[0x1E0CA6EC0]();
}

uint64_t _CTServerConnectionCopyMobileSubscriberHomeCountryList()
{
  return MEMORY[0x1E0CA6ED0]();
}

uint64_t _CTServerConnectionCopyOperatorName()
{
  return MEMORY[0x1E0CA6ED8]();
}

uint64_t _CTServerConnectionCreateWithIdentifier()
{
  return MEMORY[0x1E0CA6F40]();
}

uint64_t _CTServerConnectionDisableRegistration()
{
  return MEMORY[0x1E0CA6F48]();
}

uint64_t _CTServerConnectionDormancySuspendAssertionCreate()
{
  return MEMORY[0x1E0CA6F50]();
}

uint64_t _CTServerConnectionDumpBasebandState()
{
  return MEMORY[0x1E0CA6F60]();
}

uint64_t _CTServerConnectionEnableRegistration()
{
  return MEMORY[0x1E0CA6F68]();
}

uint64_t _CTServerConnectionGetEmergencyCallBackMode()
{
  return MEMORY[0x1E0CA6FA0]();
}

uint64_t _CTServerConnectionSetTargetQueue()
{
  return MEMORY[0x1E0CA7078]();
}

uint64_t _LSCopyAdvertisementStringForTeamIdentifierAndActivityType()
{
  return MEMORY[0x1E0CA59B8]();
}

uint64_t _MTCoreMaterialRecipeNameForMaterialRecipeAndUserInterfaceStyle()
{
  return MEMORY[0x1E0D474C0]();
}

uint64_t _NETRBClientCreate()
{
  return MEMORY[0x1E0D51A28]();
}

uint64_t _NETRBClientDestroy()
{
  return MEMORY[0x1E0D51A40]();
}

uint64_t _NETRBClientGetDynamicStoreKey()
{
  return MEMORY[0x1E0D51A48]();
}

uint64_t _NSFullMethodName()
{
  return MEMORY[0x1E0CB3BF8]();
}

uint64_t _NSStringFromUIPhysicalButton()
{
  return MEMORY[0x1E0CEBE68]();
}

uint64_t _NSStringFromUIPhysicalButtonState()
{
  return MEMORY[0x1E0CEBE70]();
}

uint64_t _SBApplicationStateGetMonitor()
{
  return MEMORY[0x1E0DABCB8]();
}

uint64_t _SBFLoggingMethodProem()
{
  return MEMORY[0x1E0DAA2B8]();
}

uint64_t _SBF_Private_IsD16()
{
  return MEMORY[0x1E0DAA2C8]();
}

uint64_t _SBF_Private_IsD17()
{
  return MEMORY[0x1E0DAA2D0]();
}

uint64_t _SBF_Private_IsD33OrSimilarDevice()
{
  return MEMORY[0x1E0DAA2D8]();
}

uint64_t _SBF_Private_IsD52OrSimilarDevice()
{
  return MEMORY[0x1E0DAA2E0]();
}

uint64_t _SBF_Private_IsD52ZoomedOrSimilarDevice()
{
  return MEMORY[0x1E0DAA2E8]();
}

uint64_t _SBF_Private_IsD53()
{
  return MEMORY[0x1E0DAA2F0]();
}

uint64_t _SBF_Private_IsD54()
{
  return MEMORY[0x1E0DAA2F8]();
}

uint64_t _SBF_Private_IsD63()
{
  return MEMORY[0x1E0DAA300]();
}

uint64_t _SBF_Private_IsD63Like()
{
  return MEMORY[0x1E0DAA308]();
}

uint64_t _SBF_Private_IsD64()
{
  return MEMORY[0x1E0DAA310]();
}

uint64_t _SBF_Private_IsD64Like()
{
  return MEMORY[0x1E0DAA318]();
}

uint64_t _SBF_Private_IsD93Like()
{
  return MEMORY[0x1E0DAA320]();
}

uint64_t _SBF_Private_IsD94Like()
{
  return MEMORY[0x1E0DAA328]();
}

uint64_t _SBF_Private_IsN84OrSimilarDevice()
{
  return MEMORY[0x1E0DAA330]();
}

uint64_t _SBF_Private_IsN84ZoomedOrSimilarDevice()
{
  return MEMORY[0x1E0DAA338]();
}

uint64_t _SBSAutolockTimerPostExternalChangeNotification()
{
  return MEMORY[0x1E0DABCC8]();
}

uint64_t _UICreateCGImageFromIOSurfaceWithOptions()
{
  return MEMORY[0x1E0CEBF48]();
}

uint64_t _UICreateScreenUIImageWithRotation()
{
  return MEMORY[0x1E0CEBF50]();
}

uint64_t _UIDragInteractionDefaultLiftDelay()
{
  return MEMORY[0x1E0CEBF58]();
}

uint64_t _UIHomeAffordanceSingleTapGatingEnabled()
{
  return MEMORY[0x1E0CEBFF0]();
}

uint64_t _UIInitializeDraggingSystem()
{
  return MEMORY[0x1E0CEC098]();
}

uint64_t _UIMachTimeForMediaTime()
{
  return MEMORY[0x1E0CEC0E8]();
}

uint64_t _UIPhysicalButtonSetForPhysicalButton()
{
  return MEMORY[0x1E0CEC120]();
}

uint64_t _UIRenderDisplay()
{
  return MEMORY[0x1E0CEC128]();
}

uint64_t _UIRenderingBufferCreate()
{
  return MEMORY[0x1E0CEC130]();
}

uint64_t _UISheetFormSize()
{
  return MEMORY[0x1E0CEC1A0]();
}

uint64_t _UISheetMinimumTopInset()
{
  return MEMORY[0x1E0CEC1B0]();
}

uint64_t _UISheetPageSize()
{
  return MEMORY[0x1E0CEC1B8]();
}

uint64_t _UISheetTransform()
{
  return MEMORY[0x1E0CEC1C0]();
}

uint64_t _UIStatusBarResolvedStyleFromStyle()
{
  return MEMORY[0x1E0CEC218]();
}

uint64_t _UIStatusBarStyleFromLegibilityStyle()
{
  return MEMORY[0x1E0CEC220]();
}

uint64_t _UIStringFromWhitePointAdaptivityStyle()
{
  return MEMORY[0x1E0CEC270]();
}

uint64_t _UISystemGestureLocationForScrollEventInView()
{
  return MEMORY[0x1E0CEC290]();
}

uint64_t _UISystemGestureLocationForTouchInView()
{
  return MEMORY[0x1E0CEC298]();
}

uint64_t _UISystemGestureLocationInView()
{
  return MEMORY[0x1E0CEC2A0]();
}

uint64_t _UISystemGesturePreviousLocationForTouchInView()
{
  return MEMORY[0x1E0CEC2A8]();
}

uint64_t _UISystemGestureTranslationInView()
{
  return MEMORY[0x1E0CEC2B0]();
}

uint64_t _UISystemGestureVelocityInView()
{
  return MEMORY[0x1E0CEC2B8]();
}

uint64_t _UIUserInterfaceSizeClassForHeight()
{
  return MEMORY[0x1E0CEC300]();
}

uint64_t _UIUserInterfaceSizeClassForWidth()
{
  return MEMORY[0x1E0CEC308]();
}

uint64_t _UIVisibilityEnvironmentForSceneIdentityToken()
{
  return MEMORY[0x1E0CEC318]();
}

uint64_t _UIWhitePointAdaptivityStyleFromString()
{
  return MEMORY[0x1E0CEC328]();
}

uint64_t _UIWindowConvertPointFromOrientationToOrientation()
{
  return MEMORY[0x1E0CEC338]();
}

uint64_t _UIWindowConvertRectFromOrientationToOrientation()
{
  return MEMORY[0x1E0CEC340]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

uint64_t _WallpaperBackdropParametersForStyleAndAverageColor()
{
  return MEMORY[0x1E0D65390]();
}

uint64_t _WallpaperStyleByRemovingTintFromStyle()
{
  return MEMORY[0x1E0D65398]();
}

uint64_t _WallpaperStyleForBackgroundStyle()
{
  return MEMORY[0x1E0D653A0]();
}

void operator delete(void *__p)
{
  off_1E8E9C5C8(__p);
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_1E8E9C5D0(__sz);
}

uint64_t __SBSEventObserverGetDarwinNotificationFromEvent()
{
  return MEMORY[0x1E0DABCD8]();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

uint64_t __sb__mainScreenReferenceBounds()
{
  return MEMORY[0x1E0DABCE0]();
}

uint64_t __sb__runningInSpringBoard()
{
  return MEMORY[0x1E0DABCF0]();
}

__double2 __sincos_stret(double a1)
{
  double v1;
  double v2;
  __double2 result;

  MEMORY[0x1E0C80BC8](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

__float2 __sincosf_stret(float a1)
{
  float v1;
  float v2;
  __float2 result;

  MEMORY[0x1E0C80BD0](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

uint64_t __strlcpy_chk()
{
  return MEMORY[0x1E0C80C48]();
}

uint64_t _bs_set_crash_log_message()
{
  return MEMORY[0x1E0D018D8]();
}

uint64_t _checkApplicationRestorationState()
{
  return MEMORY[0x1E0CEC3A0]();
}

uint64_t _deleteStateRestorationArchiveForApplication()
{
  return MEMORY[0x1E0CEC3A8]();
}

uint64_t _interfaceOrientedRegionGivenScreenRegion()
{
  return MEMORY[0x1E0CEC3B0]();
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return (os_activity_t)MEMORY[0x1E0C80FC0](dso, description, activity, *(_QWORD *)&flags);
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x1E0C81010]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81020](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81040](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _screenRegionGivenInterfaceOrientedRegion()
{
  return MEMORY[0x1E0CEC3B8]();
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

void abort(void)
{
  MEMORY[0x1E0C813A8]();
}

uint64_t alm_app_will_activate_with_details()
{
  return MEMORY[0x1E0DE3BB0]();
}

uint64_t alm_app_will_activate_with_signpost_id()
{
  return MEMORY[0x1E0DE3BB8]();
}

uint64_t alm_app_will_launch_with_details_and_metrics_payload()
{
  return MEMORY[0x1E0DE3BC0]();
}

uint32_t arc4random(void)
{
  return MEMORY[0x1E0C81570]();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1E0C81588](*(_QWORD *)&__upper_bound);
}

long double atan2(long double __y, long double __x)
{
  long double result;

  MEMORY[0x1E0C81620](__y, __x);
  return result;
}

float atan2f(float a1, float a2)
{
  float result;

  MEMORY[0x1E0C81628](a1, a2);
  return result;
}

uint64_t bootstrap_check_in2()
{
  return MEMORY[0x1E0C81700]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

BOOL class_addMethod(Class cls, SEL name, IMP imp, const char *types)
{
  return MEMORY[0x1E0DE7A50](cls, name, imp, types);
}

Method *__cdecl class_copyMethodList(Class cls, unsigned int *outCount)
{
  return (Method *)MEMORY[0x1E0DE7A78](cls, outCount);
}

Method class_getInstanceMethod(Class cls, SEL name)
{
  return (Method)MEMORY[0x1E0DE7AA8](cls, name);
}

IMP class_getMethodImplementation(Class cls, SEL name)
{
  return (IMP)MEMORY[0x1E0DE7AC0](cls, name);
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return MEMORY[0x1E0C82670](*(_QWORD *)&__clock_id);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

uint64_t convertDampingMassAndStiffnessToDampingRatioAndResponse()
{
  return MEMORY[0x1E0DAA340]();
}

uint64_t convertDampingRatioAndResponseToTensionAndFriction()
{
  return MEMORY[0x1E0DAA348]();
}

int copyfile(const char *from, const char *to, copyfile_state_t state, copyfile_flags_t flags)
{
  return MEMORY[0x1E0C82B18](from, to, state, *(_QWORD *)&flags);
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x1E0C82BC0](object);
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82BC8](when, queue, block);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
  MEMORY[0x1E0C82BE8](queue);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C00](queue, block);
}

void dispatch_async_and_wait(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C08](queue, block);
}

void dispatch_barrier_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82C28](queue, block);
}

void dispatch_block_cancel(dispatch_block_t block)
{
  MEMORY[0x1E0C82C58](block);
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C60](flags, block);
}

dispatch_block_t dispatch_block_create_with_qos_class(dispatch_block_flags_t flags, dispatch_qos_class_t qos_class, int relative_priority, dispatch_block_t block)
{
  return (dispatch_block_t)MEMORY[0x1E0C82C68](flags, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x1E0C82D20]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x1E0C82D28](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x1E0C82D30](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82D38](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82D48](group, timeout);
}

uint64_t dispatch_mach_connect()
{
  return MEMORY[0x1E0C82DC0]();
}

uint64_t dispatch_mach_create()
{
  return MEMORY[0x1E0C82DC8]();
}

uint64_t dispatch_mach_msg_get_msg()
{
  return MEMORY[0x1E0C82DE8]();
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E28](attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x1E0C82E38](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E48](label, attr);
}

dispatch_queue_t dispatch_queue_create_with_target_V2(const char *label, dispatch_queue_attr_t attr, dispatch_queue_t target)
{
  return (dispatch_queue_t)MEMORY[0x1E0C82E50](label, attr, target);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x1E0C82EA0](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1E0C82EB8](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x1E0C82EC8](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x1E0C82ED8](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

uintptr_t dispatch_source_get_data(dispatch_source_t source)
{
  return MEMORY[0x1E0C82F28](source);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F48](source, handler);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_suspend(dispatch_object_t object)
{
  MEMORY[0x1E0C82F88](object);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

dispatch_time_t dispatch_walltime(const timespec *when, int64_t delta)
{
  return MEMORY[0x1E0C82FC8](when, delta);
}

dispatch_workloop_t dispatch_workloop_create_inactive(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x1E0C82FE0](label);
}

void dispatch_workloop_set_autorelease_frequency(dispatch_workloop_t workloop, dispatch_autorelease_frequency_t frequency)
{
  MEMORY[0x1E0C82FF0](workloop, frequency);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x1E0C83040](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

uint64_t dyld_program_sdk_at_least()
{
  return MEMORY[0x1E0C83158]();
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x1E0C83280](__x);
  return result;
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

void freeaddrinfo(addrinfo *a1)
{
  MEMORY[0x1E0C834C0](a1);
}

int getaddrinfo(const char *a1, const char *a2, const addrinfo *a3, addrinfo **a4)
{
  return MEMORY[0x1E0C835F8](a1, a2, a3, a4);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

long double hypot(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C838E8](__x, __y);
  return result;
}

IMP imp_implementationWithBlock(id block)
{
  return (IMP)MEMORY[0x1E0DE7B10](block);
}

uint64_t kdebug_trace()
{
  return MEMORY[0x1E0C83A20]();
}

int kill(pid_t a1, int a2)
{
  return MEMORY[0x1E0C83A48](*(_QWORD *)&a1, *(_QWORD *)&a2);
}

long double log(long double __x)
{
  long double result;

  MEMORY[0x1E0C83BB8](__x);
  return result;
}

uint64_t logEventForAppleCare()
{
  return MEMORY[0x1E0D1BD60]();
}

uint64_t mach_absolute_time(void)
{
  return MEMORY[0x1E0C83C50]();
}

uint64_t mach_continuous_time(void)
{
  return MEMORY[0x1E0C83C70]();
}

char *__cdecl mach_error_string(mach_error_t error_value)
{
  return (char *)MEMORY[0x1E0C83C80](*(_QWORD *)&error_value);
}

mach_msg_return_t mach_msg(mach_msg_header_t *msg, mach_msg_option_t option, mach_msg_size_t send_size, mach_msg_size_t rcv_size, mach_port_name_t rcv_name, mach_msg_timeout_t timeout, mach_port_name_t notify)
{
  return MEMORY[0x1E0C83CB0](msg, *(_QWORD *)&option, *(_QWORD *)&send_size, *(_QWORD *)&rcv_size, *(_QWORD *)&rcv_name, *(_QWORD *)&timeout, *(_QWORD *)&notify);
}

void mach_msg_destroy(mach_msg_header_t *a1)
{
  MEMORY[0x1E0C83CC0](a1);
}

kern_return_t mach_port_mod_refs(ipc_space_t task, mach_port_name_t name, mach_port_right_t right, mach_port_delta_t delta)
{
  return MEMORY[0x1E0C83D58](*(_QWORD *)&task, *(_QWORD *)&name, *(_QWORD *)&right, *(_QWORD *)&delta);
}

kern_return_t mach_timebase_info(mach_timebase_info_t info)
{
  return MEMORY[0x1E0C83DB8](info);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83EF8](count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F00](size, type_id);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F10](ptr, size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

void method_exchangeImplementations(Method m1, Method m2)
{
  MEMORY[0x1E0DE7B50](m1, m2);
}

objc_method_description *__cdecl method_getDescription(Method m)
{
  return (objc_method_description *)MEMORY[0x1E0DE7B60](m);
}

void mig_dealloc_reply_port(mach_port_t reply_port)
{
  MEMORY[0x1E0C840E8](*(_QWORD *)&reply_port);
}

mach_port_t mig_get_reply_port(void)
{
  return MEMORY[0x1E0C84100]();
}

void mig_put_reply_port(mach_port_t reply_port)
{
  MEMORY[0x1E0C84110](*(_QWORD *)&reply_port);
}

char *__cdecl mkdtemp(char *a1)
{
  return (char *)MEMORY[0x1E0C84170](a1);
}

uint64_t msl_turn_on_stack_logging()
{
  return MEMORY[0x1E0D46E80]();
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_check(int token, int *check)
{
  return MEMORY[0x1E0C843E0](*(_QWORD *)&token, check);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return MEMORY[0x1E0C843E8](*(_QWORD *)&token, state64);
}

uint32_t notify_post(const char *name)
{
  return MEMORY[0x1E0C843F8](name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return MEMORY[0x1E0C84400](name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return MEMORY[0x1E0C84428](*(_QWORD *)&token, state64);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

Class objc_allocateClassPair(Class superclass, const char *name, size_t extraBytes)
{
  return (Class)MEMORY[0x1E0DE7BC0](superclass, name, extraBytes);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
  MEMORY[0x1E0DE7C30](dest, src, size, atomic, hasStrong);
}

void objc_copyWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7C38](to, from);
}

void objc_destroyWeak(id *location)
{
  MEMORY[0x1E0DE7C60](location);
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerateClasses(const void *image, const char *namePrefix, Protocol *conformingTo, Class subclassing, void *block)
{
  MEMORY[0x1E0DE7C88](image, namePrefix, conformingTo, subclassing, block);
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

void objc_exception_throw(id exception)
{
  MEMORY[0x1E0DE7CA0](exception);
}

id objc_getAssociatedObject(id object, const void *key)
{
  return (id)MEMORY[0x1E0DE7CA8](object, key);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x1E0DE7CE0](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x1E0DE7D08](location);
}

void objc_moveWeak(id *to, id *from)
{
  MEMORY[0x1E0DE7D18](to, from);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x1E0DE7D48]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_registerClassPair(Class cls)
{
  MEMORY[0x1E0DE7D68](cls);
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x1E0DE7E70](a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
  MEMORY[0x1E0DE7F40](object, key, value, policy);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F88](self, _cmd, newValue, offset);
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7F90](self, _cmd, newValue, offset);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x1E0DE7FB8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x1E0DE7FC8](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x1E0DE7FD0](obj);
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7FE0](a1);
}

Class object_getClass(id a1)
{
  return (Class)MEMORY[0x1E0DE7FF8](a1);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84510](activity, state);
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
  MEMORY[0x1E0C84518](state);
}

uint64_t os_eligibility_get_domain_answer()
{
  return MEMORY[0x1E0C84678]();
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x1E0C84920](log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return MEMORY[0x1E0C84930](log, ptr);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

void os_unfair_lock_assert_not_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84988](lock);
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1E0C849F0]();
}

uint64_t os_variant_has_internal_diagnostics()
{
  return MEMORY[0x1E0C849F8]();
}

uint64_t pid_hibernate()
{
  return MEMORY[0x1E0C84B00]();
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C84BB8](__x, __y);
  return result;
}

float powf(float a1, float a2)
{
  float result;

  MEMORY[0x1E0C84BC0](a1, a2);
  return result;
}

objc_method_description *__cdecl protocol_copyMethodDescriptionList(Protocol *p, BOOL isRequiredMethod, BOOL isInstanceMethod, unsigned int *outCount)
{
  return (objc_method_description *)MEMORY[0x1E0DE8088](p, isRequiredMethod, isInstanceMethod, outCount);
}

Protocol **__cdecl protocol_copyProtocolList(Protocol *proto, unsigned int *outCount)
{
  return (Protocol **)MEMORY[0x1E0DE80A0](proto, outCount);
}

objc_method_description protocol_getMethodDescription(Protocol *p, SEL aSel, BOOL isRequiredMethod, BOOL isInstanceMethod)
{
  const char *v4;
  char *v5;
  objc_method_description result;

  v4 = (const char *)MEMORY[0x1E0DE80A8](p, aSel, isRequiredMethod, isInstanceMethod);
  result.types = v5;
  result.name = v4;
  return result;
}

BOOL protocol_isEqual(Protocol *proto, Protocol *other)
{
  return MEMORY[0x1E0DE80C0](proto, other);
}

void *__cdecl pthread_getspecific(pthread_key_t a1)
{
  return (void *)MEMORY[0x1E0C84DC0](a1);
}

int pthread_key_create(pthread_key_t *a1, void (__cdecl *a2)(void *))
{
  return MEMORY[0x1E0C84DE0](a1, a2);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E28](a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return MEMORY[0x1E0C84E38](a1);
}

int pthread_setspecific(pthread_key_t a1, const void *a2)
{
  return MEMORY[0x1E0C84F18](a1, a2);
}

uint64_t secureAppTypeName()
{
  return MEMORY[0x1E0DAC1E0]();
}

BOOL sel_isEqual(SEL lhs, SEL rhs)
{
  return MEMORY[0x1E0DE80D8](lhs, rhs);
}

int setiopolicy_np(int a1, int a2, int a3)
{
  return MEMORY[0x1E0C85340](*(_QWORD *)&a1, *(_QWORD *)&a2, *(_QWORD *)&a3);
}

long double sin(long double __x)
{
  long double result;

  MEMORY[0x1E0C85418](__x);
  return result;
}

uint64_t spd_client_session_create()
{
  return MEMORY[0x1E0DE84C8]();
}

uint64_t spd_client_session_set_callbacks()
{
  return MEMORY[0x1E0DE84D0]();
}

uint64_t spd_client_session_set_dispatch_queue()
{
  return MEMORY[0x1E0DE84D8]();
}

int sqlite3_config(int a1, ...)
{
  return MEMORY[0x1E0DE86E8](*(_QWORD *)&a1);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1E0C85520](__s1, __s2);
}

char *__cdecl strerror(int __errnum)
{
  return (char *)MEMORY[0x1E0C85548](*(_QWORD *)&__errnum);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x1E0C85578](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x1E0C855A8](__s1, __s2, __n);
}

char *__cdecl strncpy(char *__dst, const char *__src, size_t __n)
{
  return (char *)MEMORY[0x1E0C855B0](__dst, __src, __n);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return (char *)MEMORY[0x1E0C85610](__s1, __s2);
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return MEMORY[0x1E0C85798](a1, *(_QWORD *)&a2, a3, a4, a5, a6);
}

int sysctlbyname(const char *a1, void *a2, size_t *a3, void *a4, size_t a5)
{
  return MEMORY[0x1E0C857A0](a1, a2, a3, a4, a5);
}

long double tanh(long double __x)
{
  long double result;

  MEMORY[0x1E0C857F8](__x);
  return result;
}

uint64_t tcc_authorization_record_get_authorization_right()
{
  return MEMORY[0x1E0DB1208]();
}

uint64_t tcc_credential_create_for_process_with_audit_token()
{
  return MEMORY[0x1E0DB1240]();
}

uint64_t tcc_message_options_create()
{
  return MEMORY[0x1E0DB12C8]();
}

uint64_t tcc_message_options_set_reply_handler_policy()
{
  return MEMORY[0x1E0DB12F0]();
}

uint64_t tcc_message_options_set_request_prompt_policy()
{
  return MEMORY[0x1E0DB1300]();
}

uint64_t tcc_server_create()
{
  return MEMORY[0x1E0DB1320]();
}

uint64_t tcc_server_message_request_authorization()
{
  return MEMORY[0x1E0DB1348]();
}

uint64_t tcc_service_singleton_for_CF_name()
{
  return MEMORY[0x1E0DB1390]();
}

uint64_t tcp_connection_fallback_watcher_create()
{
  return MEMORY[0x1E0CD0548]();
}

uint64_t tcp_connection_fallback_watcher_destroy()
{
  return MEMORY[0x1E0CD0550]();
}

uint64_t tcp_fallback_watcher_fallback_inuse()
{
  return MEMORY[0x1E0CD06E8]();
}

uint64_t tzlink()
{
  return MEMORY[0x1E0DE8BD8]();
}

int usleep(useconds_t a1)
{
  return MEMORY[0x1E0C859E0](*(_QWORD *)&a1);
}

BOOLean_t voucher_mach_msg_set(mach_msg_header_t *msg)
{
  return MEMORY[0x1E0C85B60](msg);
}

void warnc(int a1, const char *a2, ...)
{
  MEMORY[0x1E0C85BD8](*(_QWORD *)&a1, a2);
}

xpc_activity_state_t xpc_activity_get_state(xpc_activity_t activity)
{
  return MEMORY[0x1E0C85D90](activity);
}

void xpc_activity_register(const char *identifier, xpc_object_t criteria, xpc_activity_handler_t handler)
{
  MEMORY[0x1E0C85D98](identifier, criteria, handler);
}

void xpc_activity_set_criteria(xpc_activity_t activity, xpc_object_t criteria)
{
  MEMORY[0x1E0C85DB0](activity, criteria);
}

void xpc_activity_unregister(const char *identifier)
{
  MEMORY[0x1E0C85DD0](identifier);
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C85E00](objects, count);
}

xpc_object_t xpc_data_create(const void *bytes, size_t length)
{
  return (xpc_object_t)MEMORY[0x1E0C86178](bytes, length);
}

xpc_object_t xpc_data_create_with_dispatch_data(dispatch_data_t ddata)
{
  return (xpc_object_t)MEMORY[0x1E0C86188](ddata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x1E0C861A8](xdata);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C86260](xdict, key);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862A0](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1E0C862D0](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x1E0C86310](xdict, key, value);
}

void xpc_dictionary_set_double(xpc_object_t xdict, const char *key, double value)
{
  MEMORY[0x1E0C86348](xdict, key, value);
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
  MEMORY[0x1E0C86360](xdict, key, value);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
  MEMORY[0x1E0C86398](xdict, key, value);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

xpc_object_t xpc_null_create(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86628]();
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x1E0C86720](string);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x1E0C86758](xstring);
}

uint64_t xpc_transactions_enable()
{
  return MEMORY[0x1E0C86790]();
}

