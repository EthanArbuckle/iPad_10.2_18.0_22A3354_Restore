@implementation SBFluidSwitcherViewController

void __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_24(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  BOOL v6;

  objc_msgSend(*(id *)(a1 + 32), "itemForLayoutRole:", a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    if (*(_BYTE *)(v5 + 24))
    {
      v6 = SBLayoutRoleMaskContainsRole(*(_QWORD *)(a1 + 48), a2);
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    }
    else
    {
      v6 = 0;
    }
    *(_BYTE *)(v5 + 24) = v6;
  }
}

void __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke_3(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  BOOL v6;

  objc_msgSend(*(id *)(a1 + 32), "itemForLayoutRole:", a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v4)
  {
    v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    if (*(_BYTE *)(v5 + 24))
    {
      v6 = SBLayoutRoleMaskContainsRole(*(_QWORD *)(a1 + 48), a2);
      v5 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8);
    }
    else
    {
      v6 = 0;
    }
    *(_BYTE *)(v5 + 24) = v6;
  }
}

void __92__SBFluidSwitcherViewController__orderedViewsForLayoutElement_excludeSwitcherHostedShelves___block_invoke(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  objc_msgSend(*(id *)(a1 + 32), "leafAppLayoutForItem:");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v8 = v4;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1824), "objectForKey:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (v5)
    {
      v6 = *(void **)(a1 + 48);
      objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", a2);
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "setObject:forKey:", v5, v7);

    }
    v4 = v8;
  }

}

- (void)SBC2GroupCompletionAnimationDidBegin:(id)a3
{
  if (a3)
    -[NSPointerArray addPointer:](self->_outstandingAnimations, "addPointer:");
}

uint64_t __62__SBFluidSwitcherViewController_appLayoutContainingAppLayout___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isOrContainsAppLayout:", *(_QWORD *)(a1 + 32));
}

- (void)SBC2GroupCompletionAnimationDidComplete:(id)a3 finished:(BOOL)a4 retargeted:(BOOL)a5
{
  uint64_t v6;
  id v7;

  v7 = a3;
  if (v7 && -[NSPointerArray count](self->_outstandingAnimations, "count"))
  {
    v6 = 0;
    while (-[NSPointerArray pointerAtIndex:](self->_outstandingAnimations, "pointerAtIndex:", v6) != v7)
    {
      if (++v6 >= -[NSPointerArray count](self->_outstandingAnimations, "count"))
        goto LABEL_9;
    }
    if (v6 != 0x7FFFFFFFFFFFFFFFLL)
      -[NSPointerArray removePointerAtIndex:](self->_outstandingAnimations, "removePointerAtIndex:", v6);
  }
LABEL_9:

}

- (CGPoint)scrollViewContentOffset
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGPoint result;

  -[SBFluidSwitcherViewController scrollView](self, "scrollView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "contentOffset");
  v4 = v3;
  v6 = v5;

  v7 = v4;
  v8 = v6;
  result.y = v8;
  result.x = v7;
  return result;
}

- (SBAppSwitcherScrollView)scrollView
{
  return self->_scrollView;
}

- (void)_applyRootContentViewClippingWithCompletion:(id)a3
{
  void (**v4)(id, uint64_t, _QWORD);
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL4 IsNull;
  UIView *rootDestOutClippingView;
  UIView *v24;
  _QWORD v25[9];
  _QWORD v26[9];
  CGRect v27;
  CGRect v28;
  CGRect v29;

  v4 = (void (**)(id, uint64_t, _QWORD))a3;
  -[SBSwitcherModifier rootContentViewMaskRect](self->_rootModifier, "rootContentViewMaskRect");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  -[SBSwitcherModifier animationAttributesForLayoutElement:](self->_rootModifier, "animationAttributesForLayoutElement:", self->_contentView);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController switcherSettings](self, "switcherSettings");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "animationSettings");
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v13, "clippingSettings");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v16;
  if (v16)
  {
    v18 = v16;
  }
  else
  {
    objc_msgSend(v15, "layoutSettings");
    v18 = (id)objc_claimAutoreleasedReturnValue();
  }
  v19 = v18;

  v20 = objc_msgSend(v13, "clippingUpdateMode");
  if (v20 <= 1)
    v21 = 1;
  else
    v21 = v20;
  v27.origin.x = v6;
  v27.origin.y = v8;
  v27.size.width = v10;
  v27.size.height = v12;
  IsNull = CGRectIsNull(v27);
  rootDestOutClippingView = self->_rootDestOutClippingView;
  if (IsNull)
  {
    -[UIView removeFromSuperview](rootDestOutClippingView, "removeFromSuperview");
    v24 = self->_rootDestOutClippingView;
    self->_rootDestOutClippingView = 0;

  }
  else
  {
    if (!rootDestOutClippingView)
    {
      v26[0] = MEMORY[0x1E0C809B0];
      v26[1] = 3221225472;
      v26[2] = __77__SBFluidSwitcherViewController__applyRootContentViewClippingWithCompletion___block_invoke;
      v26[3] = &unk_1E8EA25E0;
      v26[4] = self;
      *(CGFloat *)&v26[5] = v6;
      *(CGFloat *)&v26[6] = v8;
      *(CGFloat *)&v26[7] = v10;
      *(CGFloat *)&v26[8] = v12;
      objc_msgSend(MEMORY[0x1E0CEABB0], "performWithoutAnimation:", v26);
      rootDestOutClippingView = self->_rootDestOutClippingView;
    }
    -[UIView frame](rootDestOutClippingView, "frame");
    v29.origin.x = v6;
    v29.origin.y = v8;
    v29.size.width = v10;
    v29.size.height = v12;
    if (!CGRectEqualToRect(v28, v29))
    {
      v25[0] = MEMORY[0x1E0C809B0];
      v25[1] = 3221225472;
      v25[2] = __77__SBFluidSwitcherViewController__applyRootContentViewClippingWithCompletion___block_invoke_2;
      v25[3] = &unk_1E8EA25E0;
      v25[4] = self;
      *(CGFloat *)&v25[5] = v6;
      *(CGFloat *)&v25[6] = v8;
      *(CGFloat *)&v25[7] = v10;
      *(CGFloat *)&v25[8] = v12;
      objc_msgSend(MEMORY[0x1E0CEABB0], "sb_animateWithSettings:mode:animations:completion:", v19, v21, v25, v4);
      goto LABEL_15;
    }
  }
  if (v4)
    v4[2](v4, 1, 0);
LABEL_15:

}

- (id)switcherSettings
{
  return self->_settings;
}

- (BOOL)hasHomeButton
{
  return SBFEffectiveHomeButtonType() != 2;
}

void __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  uint64_t i;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  void *v42;
  void (*v43)(_QWORD *, const __CFString *);
  id v44;
  void *v45;
  uint64_t v46;
  void *v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  id v55;
  id v56;
  uint64_t v57;
  id v58;
  void *v59;
  void *v60;
  id v61;
  id v62;
  void *v63;
  void *v64;
  double v65;
  double v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  double v73;
  void *v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  char v79;
  char v80;
  char v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  id v85;
  _QWORD *v86;
  id obj;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[4];
  id v98;
  id v99;
  uint64_t v100;
  double v101;
  _QWORD v102[4];
  id v103;
  id v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  _QWORD v113[4];
  id v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  char v120;
  _QWORD v121[6];
  id v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char v136;
  char v137;
  char v138;
  char v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  _BYTE v144[128];
  uint64_t v145;

  v145 = *MEMORY[0x1E0C80C00];
  v86 = a2;
  v96 = a1;
  objc_msgSend(*(id *)(a1 + 32), "appLayouts");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "indexOfObject:", *(_QWORD *)(v96 + 40));

  if (v4 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shadowOffsetForIndex:", v4);
    v82 = v5;
    objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "wallpaperOverlayAlphaForIndex:", v4);
    v7 = v6;
    objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "lighteningAlphaForIndex:", v4);
    v9 = v8;
    v81 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shouldUseBrightMaterialForIndex:", v4);
    v95 = v4;
    v80 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shouldUseBackgroundWallpaperTreatmentForIndex:", v4);
    v79 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "isItemContainerPointerInteractionEnabled");
    objc_msgSend(*(id *)(v96 + 32), "chamoisLayoutAttributes");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "stageInterItemSpacing");
    v12 = v11;

    if (objc_msgSend(MEMORY[0x1E0CEA6C8], "isInHardwareKeyboardMode"))
    {
      v13 = v96;
      v75 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "isFocusEnabledForAppLayout:", *(_QWORD *)(v96 + 40));
      v14 = v4;
    }
    else
    {
      v75 = 0;
      v14 = v4;
      v13 = v96;
    }
    v77 = objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "clipsToUnobscuredMarginAtIndex:", v14);
    objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "visibleMarginForItemContainerAtIndex:", v14);
    v16 = v15;
    v76 = objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "shouldScaleOverlayToFillBoundsAtIndex:", v14);
    objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "titleAndIconOpacityForIndex:", v14);
    v73 = v17;
    v71 = objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "isResizeGrabberVisibleForAppLayout:", *(_QWORD *)(v13 + 40));
    v72 = objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "headerStyleForIndex:", v14);
    v67 = objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "wantsSpaceAccessoryViewPointerInteractionsForAppLayout:", *(_QWORD *)(v13 + 40));
    objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "spaceAccessoryViewIconHitTestOutsetForAppLayout:", *(_QWORD *)(v13 + 40));
    v66 = v18;
    v83 = objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "shouldAccessoryDrawShadowForAppLayout:", *(_QWORD *)(v13 + 40));
    objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "backgroundOpacityForIndex:", v14);
    v70 = v19;
    objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "titleOpacityForIndex:", v14);
    v69 = v20;
    v78 = objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "isIndexRubberbandableForSwipeToKill:", v14);
    objc_msgSend(*(id *)(*(_QWORD *)(v13 + 32) + 1936), "animationAttributesForLayoutElement:", *(_QWORD *)(v13 + 40));
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    v84 = objc_msgSend(v74, "opacityUpdateMode");
    if (!v84)
      v84 = objc_msgSend(v74, "updateMode");
    v21 = objc_msgSend(v74, "titleAndIconOpacityUpdateMode");
    if (!v21)
      v21 = objc_msgSend(v74, "updateMode");
    v68 = v21;
    objc_msgSend(v74, "opacitySettings");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = v22;
    if (v22)
    {
      v85 = v22;
    }
    else
    {
      objc_msgSend(v74, "layoutSettings");
      v85 = (id)objc_claimAutoreleasedReturnValue();
    }

    v142 = 0u;
    v143 = 0u;
    v140 = 0u;
    v141 = 0u;
    objc_msgSend(*(id *)(v96 + 40), "leafAppLayouts");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v94 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v140, v144, 16);
    if (v94)
    {
      v93 = *(_QWORD *)v141;
      do
      {
        for (i = 0; i != v94; ++i)
        {
          if (*(_QWORD *)v141 != v93)
            objc_enumerationMutation(obj);
          v25 = *(void **)(*((_QWORD *)&v140 + 1) + 8 * i);
          v26 = *(void **)(v96 + 40);
          objc_msgSend(v25, "allItems");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "firstObject");
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          v29 = objc_msgSend(v26, "layoutRoleForItem:", v28);

          if (SBLayoutRoleMaskContainsRole(*(_QWORD *)(v96 + 48), v29))
          {
            objc_msgSend(*(id *)(v96 + 32), "_itemContainerForAppLayoutIfExists:", v25);
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            v92 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "tintStyleForLayoutRole:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            v91 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shadowStyleForLayoutRole:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "opacityForLayoutRole:inAppLayout:atIndex:", v29, *(_QWORD *)(v96 + 40), v95);
            v32 = v31;
            v33 = 0;
            if ((v83 & 1) == 0)
            {
              objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shadowOpacityForLayoutRole:atIndex:", v29, v95);
              v33 = v34;
            }
            objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "dimmingAlphaForLayoutRole:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            v36 = v35;
            v90 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "isLayoutRoleSelectable:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            v88 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shouldSuppressHighlightEffectForLayoutRole:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            v37 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shouldAllowContentViewTouchesForLayoutRole:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            if (objc_msgSend(*(id *)(v96 + 32), "_supportsKillingForAppLayout:", *(_QWORD *)(v96 + 40)))
              v89 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "isLayoutRoleKillable:inAppLayout:atIndex:", v29, *(_QWORD *)(v96 + 40), v95);
            else
              v89 = 0;
            v38 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "isLayoutRoleEligibleForContentDragSpringLoading:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            v39 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "activeCornersForTouchResizeForLayoutRole:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            if (objc_msgSend(*(id *)(v96 + 32), "_isSwitcherForegroundActive"))
              v40 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "isItemResizingAllowedForLayoutRole:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            else
              v40 = 0;
            v41 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "touchBehaviorForLayoutRole:inAppLayout:", v29, *(_QWORD *)(v96 + 40));
            v42 = (void *)MEMORY[0x1E0CEABB0];
            v121[0] = MEMORY[0x1E0C809B0];
            v121[1] = 3221225472;
            v121[2] = __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke_2;
            v121[3] = &unk_1E8EA4DB0;
            v121[4] = *(_QWORD *)(v96 + 32);
            v121[5] = v25;
            v122 = v30;
            v123 = v95;
            v135 = v37;
            v136 = v81;
            v124 = v32;
            v125 = v33;
            v126 = v82;
            v127 = v36;
            v128 = v92;
            v137 = v80;
            v129 = v9;
            v130 = v7;
            v138 = v79;
            v131 = v12;
            v132 = v91;
            v133 = v39;
            v139 = v40;
            v134 = v41;
            v43 = (void (*)(_QWORD *, const __CFString *))v86[2];
            v44 = v30;
            v43(v86, CFSTR("style"));
            v45 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v42, "sb_animateWithSettings:mode:animations:completion:", v85, v84, v121, v45);

            objc_msgSend(v44, "setKillAxis:", 0);
            objc_msgSend(v44, "setKillable:", v89);
            objc_msgSend(v44, "setRubberbandable:", v78);
            objc_msgSend(v44, "setSelectable:", v90);
            objc_msgSend(v44, "setSuppressesHighlightEffect:", v88);
            objc_msgSend(v44, "setClipsToUnobscuredMargin:", v77);
            objc_msgSend(v44, "setUnobscuredMargin:", v16);
            objc_msgSend(v44, "setShouldScaleOverlayToFillBounds:", v76);
            objc_msgSend(v44, "setEligibleForContentDragSpringLoading:", v38);
            if (v29 == 1)
              v46 = v75;
            else
              v46 = 0;
            objc_msgSend(v44, "setFocusable:", v46);

          }
        }
        v94 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v140, v144, 16);
      }
      while (v94);
    }

    v117 = 0;
    v118 = &v117;
    v119 = 0x2020000000;
    v120 = 1;
    v113[0] = MEMORY[0x1E0C809B0];
    v113[1] = 3221225472;
    v113[2] = __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke_3;
    v113[3] = &unk_1E8EA4A98;
    v114 = *(id *)(v96 + 40);
    v115 = &v117;
    v116 = *(_QWORD *)(v96 + 48);
    SBLayoutRoleEnumerateValidRoles(v113);
    if (!*(_QWORD *)(v96 + 48) || *((_BYTE *)v118 + 24))
    {
      objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1832), "objectForKey:", *(_QWORD *)(v96 + 40));
      v47 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1840), "objectForKey:", *(_QWORD *)(v96 + 40));
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      v49 = 0;
      if (v83)
      {
        objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shadowOpacityForLayoutRole:atIndex:", 1, v95);
        v49 = v50;
      }
      v51 = objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "shadowStyleForLayoutRole:inAppLayout:", 1, *(_QWORD *)(v96 + 40));
      objc_msgSend(*(id *)(*(_QWORD *)(v96 + 32) + 1936), "opacityForLayoutRole:inAppLayout:atIndex:", 1, *(_QWORD *)(v96 + 40), v95);
      v53 = v52;
      v54 = (void *)MEMORY[0x1E0CEABB0];
      v102[0] = MEMORY[0x1E0C809B0];
      v102[1] = 3221225472;
      v102[2] = __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke_4;
      v102[3] = &unk_1E8EA4DD8;
      v55 = v47;
      v103 = v55;
      v107 = v53;
      v56 = *(id *)(v96 + 40);
      v57 = *(_QWORD *)(v96 + 32);
      v104 = v56;
      v105 = v57;
      v58 = v48;
      v106 = v58;
      v108 = v70;
      v109 = v82;
      v110 = v49;
      v111 = v51;
      v112 = v71;
      ((void (*)(_QWORD *, const __CFString *))v86[2])(v86, CFSTR("accessory style"));
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v54, "sb_animateWithSettings:mode:animations:completion:", v85, v84, v102, v59);

      v60 = (void *)MEMORY[0x1E0CEABB0];
      v97[0] = MEMORY[0x1E0C809B0];
      v97[1] = 3221225472;
      v97[2] = __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke_5;
      v97[3] = &unk_1E8EA1360;
      v61 = v55;
      v98 = v61;
      v100 = v69;
      v62 = v58;
      v99 = v62;
      v101 = v73;
      ((void (*)(_QWORD *, const __CFString *))v86[2])(v86, CFSTR("accessory title opacity"));
      v63 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v60, "sb_animateWithSettings:mode:animations:completion:", v85, v68, v97, v63);

      objc_msgSend(v61, "setDrawsFooter:", v72 == 1);
      objc_msgSend(v61, "setWantsPointerInteractions:", v67);
      objc_msgSend(v61, "setIconHitTestOutset:", v66);
      ((void (*)(_QWORD *, const __CFString *))v86[2])(v86, CFSTR("header opacity"));
      v64 = (void *)objc_claimAutoreleasedReturnValue();
      v65 = 0.0;
      if (!v72)
        v65 = v73;
      objc_msgSend(v62, "setHeaderOpacity:updateMode:settings:completion:", v84, v85, v64, v65);

      if (v83)
        objc_msgSend(*(id *)(v96 + 32), "_updateShadowPathForIndex:", v95);

    }
    _Block_object_dispose(&v117, 8);

  }
}

- (void)_applyStyleToLiveContentOverlay:(id)a3 forItemContainer:(id)a4 atIndex:(unint64_t)a5
{
  SBSwitcherModifier *rootModifier;
  id v7;

  rootModifier = self->_rootModifier;
  v7 = a3;
  objc_msgSend(v7, "setUsesBrightSceneViewBackgroundMaterial:", -[SBSwitcherModifier shouldUseBrightMaterialForIndex:](rootModifier, "shouldUseBrightMaterialForIndex:", a5));

}

- (id)medusaSettings
{
  return +[SBMedusaDomain rootSettings](SBMedusaDomain, "rootSettings");
}

- (BOOL)_supportsKillingForAppLayout:(id)a3
{
  id v4;
  id WeakRetained;
  void *v6;
  char v7;

  v4 = a3;
  WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  v6 = WeakRetained;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 2) & 8) != 0)
    v7 = objc_msgSend(WeakRetained, "switcherContentController:supportsKillingOfAppLayout:", self, v4);
  else
    v7 = 1;

  return v7;
}

- (CGRect)containerViewBounds
{
  void *v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGRect result;

  -[SBFluidSwitcherViewController view](self, "view");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bounds");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;

  v11 = v4;
  v12 = v6;
  v13 = v8;
  v14 = v10;
  result.size.height = v14;
  result.size.width = v13;
  result.origin.y = v12;
  result.origin.x = v11;
  return result;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_4(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a2, "keyPath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEqualToString:", CFSTR("transform"));

  return v3;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_15(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a2, "keyPath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEqualToString:", CFSTR("meshTransform"));

  return v3;
}

- (id)appLayoutsContainedWithinAppLayout:(id)a3
{
  id v4;
  void *v5;
  int v6;
  void *v7;
  void *v8;
  _QWORD v10[4];
  id v11;
  _QWORD v12[2];

  v12[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "containsObject:", v4);

  if (v6)
  {
    v12[0] = v4;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v12, 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __68__SBFluidSwitcherViewController_appLayoutsContainedWithinAppLayout___block_invoke;
    v10[3] = &unk_1E8E9DF78;
    v11 = v4;
    objc_msgSend(v8, "bs_filter:", v10);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  return v7;
}

- (void)_performModifierIconOverlayVisibilityUpdateResponse:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _BYTE v28[128];
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(v5, "appLayout");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v5, "isVisible"))
  {
    if (!v7)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v19, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 9669, CFSTR("Trying to add an icon overlay but the item container for this app layout doesn't exist: %@"), 0);

    }
    objc_msgSend(v6, "anyLeafAppLayout");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController iconViewForAppLayout:](self, "iconViewForAppLayout:", v8);
    v9 = objc_claimAutoreleasedReturnValue();

    -[SBFluidSwitcherViewController dataSource](self, "dataSource");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = v5;
    v21 = v10;
    v22 = (void *)v9;
    if ((*(_BYTE *)&self->_dataSourceRespondsTo & 0x40) != 0)
    {
      objc_msgSend(v10, "matchingIconViewForIconView:", v9);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
    }
    else
    {
      v20 = 0;
    }
    v11 = (void *)objc_opt_new();
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    objc_msgSend(v6, "leafAppLayouts");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v25;
      do
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v25 != v15)
            objc_enumerationMutation(v12);
          -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v24 + 1) + 8 * i));
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "_pageView");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "addObject:", v18);

        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v24, v28, 16);
      }
      while (v14);
    }

    objc_msgSend(v7, "configureOverlayForIconZoomWithView:crossfadeViews:", v20, v11);
    v5 = v23;
  }
  else
  {
    objc_msgSend(v7, "removeIconOverlay");
  }

}

- (void)overlayAccessoryView:(id)a3 didUpdateShowingIconOverlay:(BOOL)a4
{
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  _BOOL4 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v17 = a4;
  v23 = *MEMORY[0x1E0C80C00];
  -[NSMutableDictionary allKeysForObject:](self->_visibleOverlayAccessoryViews, "allKeysForObject:", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v20 = 0u;
  v21 = 0u;
  v18 = 0u;
  v19 = 0u;
  v16 = v6;
  objc_msgSend(v6, "leafAppLayouts");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v19;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v19 != v10)
          objc_enumerationMutation(v7);
        -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v18 + 1) + 8 * v11));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "contentView");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = objc_opt_respondsToSelector();

        if ((v14 & 1) != 0)
        {
          objc_msgSend(v12, "contentView");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "setShowingIconOverlayView:", v17);

        }
        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    }
    while (v9);
  }

}

- (int64_t)homeScreenInterfaceOrientation
{
  void *v3;
  void *v4;
  int64_t v5;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 1) & 2) != 0)
    v5 = objc_msgSend(v3, "homeScreenInterfaceOrientationForContentController:", self);
  else
    v5 = 0;

  return v5;
}

- (id)_applicationForDisplayItem:(id)a3
{
  id v3;
  void *v4;
  void *v5;

  v3 = a3;
  +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "applicationForDisplayItem:", v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (BOOL)_shouldLogSwitcherModifierEvent:(id)a3
{
  id v3;
  BOOL v4;
  BOOL v5;
  char IsZero;

  v3 = a3;
  if (!objc_msgSend(v3, "isGestureEvent"))
  {
    if (objc_msgSend(v3, "isTransitionEvent"))
    {
      IsZero = objc_msgSend(v3, "isAnimated");
    }
    else
    {
      if (objc_msgSend(v3, "type") != 12)
      {
        if (objc_msgSend(v3, "type") == 19 || objc_msgSend(v3, "type") == 32)
        {
          v5 = 0;
          goto LABEL_16;
        }
        v4 = objc_msgSend(v3, "type") == 28;
        goto LABEL_3;
      }
      objc_msgSend(v3, "progress");
      if ((BSFloatGreaterThanOrEqualToFloat() & 1) != 0)
      {
        v5 = 1;
        goto LABEL_16;
      }
      IsZero = BSFloatIsZero();
    }
    v5 = IsZero;
    goto LABEL_16;
  }
  v4 = objc_msgSend(v3, "phase") == 2;
LABEL_3:
  v5 = !v4;
LABEL_16:

  return v5;
}

- (double)displayCornerRadius
{
  void *v2;
  double v3;
  void *v4;
  double v5;

  -[SBFluidSwitcherViewController _screen](self, "_screen");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v2, "_isEmbeddedScreen"))
  {
    v3 = SBScreenDisplayCornerRadius();
  }
  else
  {
    objc_msgSend(v2, "traitCollection");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "displayCornerRadius");
    v3 = v5;

  }
  return v3;
}

- (id)chamoisLayoutAttributes
{
  void *v3;
  void *v4;
  void *v5;
  int64_t v6;
  void *v7;

  -[SBFluidSwitcherViewController switcherSettings](self, "switcherSettings");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "chamoisSettings");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation");
  -[SBFluidSwitcherViewController floatingDockHeight](self, "floatingDockHeight");
  objc_msgSend(v4, "layoutAttributesForWindowScene:interfaceOrientation:requiresFullScreen:floatingDockHeight:", v5, v6, 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

- (double)floatingDockHeight
{
  void *v2;
  double v3;
  double v4;

  -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "floatingDockHeight");
  v4 = v3;

  return v4;
}

- (id)_floatingDockController
{
  void *v2;
  void *v3;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "floatingDockController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (double)screenScale
{
  void *v2;
  void *v3;
  double v4;
  double v5;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "screen");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    objc_msgSend(v3, "scale");
    v5 = v4;
  }
  else
  {
    v5 = 1.0;
  }

  return v5;
}

- (id)_sbWindowScene
{
  void *v3;
  void *v4;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "windowSceneForSwitcherContentController:", self);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (int64_t)contentOrientation
{
  return self->_contentOrientation;
}

- (NSArray)appLayouts
{
  return self->_cachedAdjustedAppLayouts;
}

- (BOOL)isChamoisWindowingUIEnabled
{
  return -[SBFluidSwitcherViewController _windowManagementStyle](self, "_windowManagementStyle") == 2;
}

- (BOOL)isRTLEnabled
{
  return objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection") == 1;
}

- (BOOL)prefersStripHidden
{
  return self->_chamoisDefaultsObserver_prefersStripsHidden;
}

- (BOOL)prefersDockHidden
{
  return self->_chamoisDefaultsObserver_prefersDockHidden;
}

- (id)displayItemLayoutAttributesCalculator
{
  return self->_displayItemLayoutAttributesCalculator;
}

- (BOOL)shouldAutomaticallyForwardAppearanceMethods
{
  return 0;
}

uint64_t __72__SBFluidSwitcherViewController__appLayoutWantsToBeKeptInViewHierarchy___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "isOrContainsAppLayout:", a2);
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_17(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setMeshTransform:", *(_QWORD *)(a1 + 40));
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_31(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "keyboardHeight");
  return objc_msgSend(v1, "setKeyboardHeight:");
}

- (double)keyboardHeight
{
  return CGRectGetHeight(self->_currentKeyboardFrame);
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_14(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setShouldUseWallpaperGradientTreatment:", *(unsigned __int8 *)(a1 + 56));
  return objc_msgSend(*(id *)(a1 + 32), "setWallpaperGradientAttributes:", *(double *)(a1 + 40), *(double *)(a1 + 48));
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_12(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setContentCornerRadii:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

- (int64_t)displayOrdinal
{
  void *v2;
  int64_t v3;

  -[SBFluidSwitcherLayoutContext layoutState](self->_layoutContext, "layoutState");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "displayOrdinal");

  return v3;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_13(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(result + 16))(result, a2, 0);
  return result;
}

void __61__SBFluidSwitcherViewController__updateLayoutWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  void (**v3)(id, const __CFString *);
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  uint64_t v20;
  id *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  _QWORD v50[5];
  CGRect v51;

  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "view");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "bounds");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "animationAttributesForLayoutElement:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1416));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "layoutSettings");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v13, "layoutUpdateMode");
  if (!v15)
    v15 = objc_msgSend(v13, "updateMode");
  v16 = *(void **)(*(_QWORD *)(a1 + 32) + 1808);
  UIRectGetCenter();
  objc_msgSend(v16, "setCenter:");
  v17 = *(void **)(*(_QWORD *)(a1 + 32) + 1808);
  SBRectWithSize();
  objc_msgSend(v17, "setBounds:");
  v18 = *(void **)(a1 + 32);
  v3[2](v3, CFSTR("root-content-view"));
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "_applyRootContentViewClippingAndBlurWithCompletion:", v19);

  v20 = *(_QWORD *)(a1 + 32);
  v21 = (id *)MEMORY[0x1E0CEB258];
  if (*(_QWORD *)(v20 + 1920))
  {
    if (objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection") == 1)
    {
      v51.origin.x = v6;
      v51.origin.y = v8;
      v51.size.width = v10;
      v51.size.height = v12;
      CGRectGetMaxX(v51);
    }
    v22 = *(void **)(*(_QWORD *)(a1 + 32) + 1920);
    UIRectGetCenter();
    objc_msgSend(v22, "setCenter:");
    v23 = *(void **)(*(_QWORD *)(a1 + 32) + 1920);
    SBRectWithSize();
    objc_msgSend(v23, "setBounds:");
    v20 = *(_QWORD *)(a1 + 32);
  }
  if (*(_QWORD *)(v20 + 1928))
  {
    objc_msgSend(*(id *)(v20 + 1920), "frame");
    v25 = v24;
    v27 = v26;
    v29 = v28;
    v31 = v30;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1928), "sizeThatFits:", v10, v12);
    v32 = objc_msgSend(*v21, "userInterfaceLayoutDirection");
    v33 = v25;
    v34 = v27;
    v35 = v29;
    v36 = v31;
    if (v32 == 1)
      CGRectGetMinX(*(CGRect *)&v33);
    else
      CGRectGetMaxX(*(CGRect *)&v33);
    v37 = *(void **)(*(_QWORD *)(a1 + 32) + 1928);
    UIRectGetCenter();
    objc_msgSend(v37, "setCenter:");
    v38 = *(void **)(*(_QWORD *)(a1 + 32) + 1928);
    SBRectWithSize();
    objc_msgSend(v38, "setBounds:");
    v20 = *(_QWORD *)(a1 + 32);
  }
  v39 = *(void **)(v20 + 1704);
  if (v39)
  {
    objc_msgSend(v39, "setBounds:", v6, v8, v10, v12);
    v40 = *(void **)(*(_QWORD *)(a1 + 32) + 1704);
    UIRectGetCenter();
    objc_msgSend(v40, "setCenter:");
    v20 = *(_QWORD *)(a1 + 32);
  }
  v3[2](v3, CFSTR("shelves"));
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend((id)v20, "_layoutVisibleShelvesWithCompletion:", v41);

  v42 = (void *)MEMORY[0x1E0CEABB0];
  v50[0] = MEMORY[0x1E0C809B0];
  v50[1] = 3221225472;
  v50[2] = __61__SBFluidSwitcherViewController__updateLayoutWithCompletion___block_invoke_2;
  v50[3] = &unk_1E8E9DED8;
  v50[4] = *(_QWORD *)(a1 + 32);
  v3[2](v3, CFSTR("content view transform"));
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "sb_animateWithSettings:mode:animations:completion:", v14, v15, v50, v43);

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1184), "setFrame:", v6, v8, v10, v12);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1800), "setFrame:", v6, v8, v10, v12);
  objc_msgSend(*(id *)(a1 + 32), "_updateScrollViewSizeAndSpacing");
  v44 = *(void **)(a1 + 32);
  v3[2](v3, CFSTR("layout visible items"));
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v44, "_layoutVisibleItemsWithCompletion:", v45);

  v46 = *(void **)(a1 + 32);
  v3[2](v3, CFSTR("layout slideover tongues"));
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "_layoutSlideoverTonguesWithCompletion:", v47);

  v48 = *(void **)(a1 + 32);
  v3[2](v3, CFSTR("layout continuous expose strip tongue"));
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v48, "_layoutContinuousExposeStripTongueAnimated:completion:", 1, v49);

}

- (void)_updateScrollViewSizeAndSpacing
{
  void *v3;
  void *v4;
  SBAppSwitcherScrollView *scrollView;
  uint64_t v6;
  SBAppSwitcherScrollView *v7;
  SBAppSwitcherScrollView *v8;
  double v9;
  double v10;
  char v11;
  void *v12;

  -[SBFluidSwitcherViewController _updateScrollViewScrollEnabled](self, "_updateScrollViewScrollEnabled");
  -[SBSwitcherModifier scrollViewAttributes](self->_rootModifier, "scrollViewAttributes");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    scrollView = self->_scrollView;
    v12 = v3;
    objc_msgSend(v3, "contentSize");
    -[SBAppSwitcherScrollView setContentSize:](scrollView, "setContentSize:");
    v6 = objc_msgSend(v12, "scrollViewPagingEnabled");
    -[SBAppSwitcherScrollView setPagingEnabled:](self->_scrollView, "setPagingEnabled:", v6);
    if ((_DWORD)v6)
    {
      v7 = self->_scrollView;
      objc_msgSend(v12, "interpageSpacingForPaging");
      -[SBAppSwitcherScrollView _setInterpageSpacing:](v7, "_setInterpageSpacing:");
      v8 = self->_scrollView;
      objc_msgSend(v12, "pagingOrigin");
      -[SBAppSwitcherScrollView _setPagingOrigin:](v8, "_setPagingOrigin:");
    }
    objc_msgSend(v12, "decelerationRate");
    v10 = v9;
    -[SBAppSwitcherScrollView setAlwaysBounceHorizontal:](self->_scrollView, "setAlwaysBounceHorizontal:", 1);
    -[SBAppSwitcherScrollView setAlwaysBounceVertical:](self->_scrollView, "setAlwaysBounceVertical:", 0);
    -[SBAppSwitcherScrollView horizontalScrollDecelerationFactor](self->_scrollView, "horizontalScrollDecelerationFactor");
    v11 = BSFloatEqualToFloat();
    v4 = v12;
    if ((v11 & 1) == 0)
    {
      -[SBAppSwitcherScrollView setHorizontalScrollDecelerationFactor:](self->_scrollView, "setHorizontalScrollDecelerationFactor:", v10);
      v4 = v12;
    }
  }

}

- (void)_updateHomeScreenBackdropType
{
  int64_t v3;
  id v4;

  if (-[SBFluidSwitcherViewController _controlsHomeScreenContents](self, "_controlsHomeScreenContents"))
  {
    v3 = -[SBSwitcherModifier homeScreenBackdropBlurType](self->_rootModifier, "homeScreenBackdropBlurType");
    if (v3 == 3)
    {
      if (-[SBAppSwitcherSettings shouldSimplifyForOptions:](self->_settings, "shouldSimplifyForOptions:", 16))
        v3 = 2;
      else
        v3 = 3;
    }
    if (self->_currentHomeScreenBackdropBlurType != v3)
    {
      -[SBFluidSwitcherViewController delegate](self, "delegate");
      v4 = (id)objc_claimAutoreleasedReturnValue();
      if ((*((_BYTE *)&self->_delegateRespondsTo + 1) & 1) != 0)
        objc_msgSend(v4, "switcherContentController:setHomeScreenBackdropBlurType:", self, v3);
      self->_currentHomeScreenBackdropBlurType = v3;
      -[SBFluidSwitcherViewController _updateTitleItemsLabelColor](self, "_updateTitleItemsLabelColor");

    }
  }
}

void __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  _QWORD *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  double v26;
  double v27;
  void *v28;
  void *v29;
  void *v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t i;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  double v41;
  double v42;
  double v43;
  double v44;
  void *v45;
  void *v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  void *v66;
  int v67;
  _QWORD *v68;
  SBShelfBackgroundView *v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  void *v74;
  void *v75;
  _QWORD *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  id v81;
  void *v82;
  uint64_t v83;
  void *v84;
  id v85;
  void *v86;
  void *v87;
  _DWORD *v88;
  int v89;
  uint64_t v90;
  int v91;
  double v92;
  double v93;
  void *v94;
  double v95;
  double v96;
  void *v97;
  double v98;
  double v99;
  void *v100;
  double v101;
  double v102;
  void *v103;
  void *v104;
  uint64_t v105;
  void *v106;
  void *v107;
  uint64_t v108;
  id obj;
  void (**v110)(id, const __CFString *);
  uint64_t v111;
  _QWORD v112[4];
  id v113;
  id v114;
  _QWORD v115[6];
  _QWORD v116[9];
  __int128 location;
  __int128 v118;
  __int128 v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  _QWORD v125[6];
  _BYTE v126[128];
  uint64_t v127;

  v127 = *MEMORY[0x1E0C80C00];
  v110 = a2;
  v111 = a1;
  v3 = *(_QWORD **)(a1 + 32);
  a1 += 32;
  v4 = (void *)v3[242];
  objc_msgSend(v3, "genericSwitcherAccessoryLayoutElement");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "animationAttributesForLayoutElement:", v5);
  v107 = (void *)objc_claimAutoreleasedReturnValue();

  v108 = objc_msgSend(v107, "updateMode");
  objc_msgSend(*(id *)a1, "_updateWallpaperStyle");
  objc_msgSend(*(id *)a1, "_updateHomeScreenContentRequirement");
  objc_msgSend(*(id *)a1, "_updateHomeScreenBackdropType");
  objc_msgSend(*(id *)a1, "_updateSwitcherBackdropType");
  v6 = *(id *)a1;
  v110[2](v110, CFSTR("apply style to visible item containers"));
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "_applyStyleToVisibleItemContainersWithCompletion:", v7);

  v8 = *(id *)a1;
  v110[2](v110, CFSTR("plusButtonAlpha"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "_updatePlusButtonStyleWithMode:completion:", v108, v9);

  v10 = *(id *)a1;
  v110[2](v110, CFSTR("repenClosedWindowsButtonAlpha"));
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "_updateReopenClosedWindowsButtonWithMode:completion:", v108, v11);

  objc_msgSend(*(id *)a1, "_updateContentViewPassesTouchesThrough");
  objc_msgSend(*(id *)a1, "_updateSystemApertureShadowAssertion");
  v12 = *(id **)a1;
  if (*(_QWORD *)(*(_QWORD *)a1 + 1400))
  {
    objc_msgSend(v12[242], "switcherDimmingAlpha");
    v14 = v13;
    objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1400), "bs_setHitTestingDisabled:", BSFloatIsZero());
    v15 = *(_QWORD **)(v111 + 32);
    v16 = (void *)v15[242];
    objc_msgSend(v15, "switcherDimmingViewLayoutElement");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "animationAttributesForLayoutElement:", v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();

    v19 = objc_msgSend(v18, "updateMode");
    objc_msgSend(v18, "opacitySettings");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21 = v20;
    if (v20)
    {
      v22 = v20;
    }
    else
    {
      objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1064), "animationSettings");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "opacitySettings");
      v22 = (id)objc_claimAutoreleasedReturnValue();

    }
    v24 = (void *)MEMORY[0x1E0CEABB0];
    v125[0] = MEMORY[0x1E0C809B0];
    v125[1] = 3221225472;
    v125[2] = __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke_2;
    v125[3] = &unk_1E8E9DE88;
    v125[4] = *(_QWORD *)(v111 + 32);
    v125[5] = v14;
    v110[2](v110, CFSTR("switcherDimmingAlpha"));
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "sb_animateWithSettings:mode:animations:completion:", v22, v19, v125, v25);

    v12 = *(id **)(v111 + 32);
  }
  if (v12[173])
  {
    objc_msgSend(v12[242], "switcherBackdropBlurProgress");
    v27 = v26;
    objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1384), "bs_setHitTestingDisabled:", BSFloatIsZero());
    v28 = *(void **)(*(_QWORD *)(v111 + 32) + 1936);
    objc_msgSend(*(id *)(v111 + 32), "switcherBackdropLayoutElement");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "animationAttributesForLayoutElement:", v29);
    v30 = (void *)objc_claimAutoreleasedReturnValue();

    v31 = objc_msgSend(v30, "updateMode");
    v32 = *(void **)(*(_QWORD *)(v111 + 32) + 1384);
    v110[2](v110, CFSTR("switcherBackdropBlurProgress"));
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "setBlurProgress:behaviorMode:completion:", v31, v33, v27);

    v12 = *(id **)(v111 + 32);
  }
  v123 = 0u;
  v124 = 0u;
  v121 = 0u;
  v122 = 0u;
  objc_msgSend(v12[236], "allKeys");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v34 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v121, v126, 16);
  if (v34)
  {
    v35 = *(_QWORD *)v122;
    do
    {
      for (i = 0; i != v34; ++i)
      {
        if (*(_QWORD *)v122 != v35)
          objc_enumerationMutation(obj);
        v37 = *(_QWORD *)(*((_QWORD *)&v121 + 1) + 8 * i);
        objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1888), "objectForKey:", v37);
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        v120 = 0;
        v118 = 0u;
        v119 = 0u;
        location = 0u;
        v39 = *(_QWORD *)(v111 + 32);
        v40 = *(void **)(v39 + 1936);
        if (v40)
        {
          objc_msgSend(v40, "presentationAttributesForShelf:", v37);
          v41 = *((double *)&location + 1);
          v43 = *((double *)&v118 + 1);
          v44 = *(double *)&v118;
          v42 = *(double *)&v119;
          v39 = *(_QWORD *)(v111 + 32);
        }
        else
        {
          v42 = 0.0;
          v43 = 0.0;
          v44 = 0.0;
          v41 = 0.0;
        }
        v45 = *(void **)(v39 + 1808);
        objc_msgSend(v38, "view");
        v46 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v45, "convertRect:toView:", v46, v41, v44, v43, v42);
        v48 = v47;
        v50 = v49;
        v52 = v51;
        v54 = v53;

        v110[2](v110, CFSTR("shelf presentation"));
        v55 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v38, "setPresented:withTargetFrame:style:completion:", (_BYTE)location != 0, *((_QWORD *)&v119 + 1), v55, v48, v50, v52, v54);

      }
      v34 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v121, v126, 16);
    }
    while (v34);
  }

  objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1936), "shelfBackgroundBlurOpacity");
  v57 = v56;
  objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1936), "shelfBackgroundBlurFrame");
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1936), "animationAttributesForLayoutElement:", *(_QWORD *)(*(_QWORD *)(v111 + 32) + 1416));
  v66 = (void *)objc_claimAutoreleasedReturnValue();
  v67 = BSFloatGreaterThanFloat();
  v68 = *(_QWORD **)(v111 + 32);
  if (v67 && !v68[183])
  {
    v69 = -[SBShelfBackgroundView initWithFrame:]([SBShelfBackgroundView alloc], "initWithFrame:", v59, v61, v63, v65);
    v70 = *(_QWORD *)(v111 + 32);
    v71 = *(void **)(v70 + 1464);
    *(_QWORD *)(v70 + 1464) = v69;

    objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1464), "setWeighting:", 0.0);
    objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1808), "addSubview:", *(_QWORD *)(*(_QWORD *)(v111 + 32) + 1464));
    v68 = *(_QWORD **)(v111 + 32);
  }
  if (v68[183])
  {
    objc_initWeak((id *)&location, v68);
    v72 = objc_msgSend(v66, "layoutUpdateMode");
    if (!v72)
      v72 = objc_msgSend(v66, "updateMode");
    v73 = (void *)MEMORY[0x1E0CEABB0];
    objc_msgSend(v66, "layoutSettings");
    v74 = (void *)objc_claimAutoreleasedReturnValue();
    v116[0] = MEMORY[0x1E0C809B0];
    v116[1] = 3221225472;
    v116[2] = __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke_3;
    v116[3] = &unk_1E8EA25E0;
    *(double *)&v116[5] = v59;
    *(double *)&v116[6] = v61;
    *(double *)&v116[7] = v63;
    *(double *)&v116[8] = v65;
    v116[4] = *(_QWORD *)(v111 + 32);
    v110[2](v110, CFSTR("shelfBackgroundFrame"));
    v75 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v73, "sb_animateWithSettings:mode:animations:completion:", v74, v72, v116, v75);

    v76 = *(_QWORD **)(v111 + 32);
    v77 = (void *)v76[183];
    objc_msgSend(v76, "containerViewBounds");
    objc_msgSend(v77, "convertRect:fromView:", *(_QWORD *)(*(_QWORD *)(v111 + 32) + 1808));
    objc_msgSend(*(id *)(*(_QWORD *)(v111 + 32) + 1464), "setExtendedBlurRect:");
    v110[2](v110, CFSTR("shelfBackgroundOpacity"));
    v78 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v66, "opacitySettings");
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    v80 = v79;
    if (v79)
    {
      v81 = v79;
    }
    else
    {
      objc_msgSend(v66, "layoutSettings");
      v81 = (id)objc_claimAutoreleasedReturnValue();
    }
    v82 = v81;

    v83 = objc_msgSend(v66, "opacityUpdateMode");
    if (!v83)
      v83 = objc_msgSend(v66, "updateMode");
    v84 = (void *)MEMORY[0x1E0CEABB0];
    v115[0] = MEMORY[0x1E0C809B0];
    v115[1] = 3221225472;
    v115[2] = __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke_4;
    v115[3] = &unk_1E8E9DE88;
    v115[4] = *(_QWORD *)(v111 + 32);
    v115[5] = v57;
    v112[0] = MEMORY[0x1E0C809B0];
    v112[1] = 3221225472;
    v112[2] = __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke_5;
    v112[3] = &unk_1E8EA4D88;
    objc_copyWeak(&v114, (id *)&location);
    v85 = v78;
    v113 = v85;
    objc_msgSend(v84, "sb_animateWithSettings:mode:animations:completion:", v82, v83, v115, v112);

    objc_destroyWeak(&v114);
    objc_destroyWeak((id *)&location);
    v68 = *(_QWORD **)(v111 + 32);
  }
  objc_msgSend(v68, "delegate");
  v86 = (void *)objc_claimAutoreleasedReturnValue();
  v87 = v86;
  v88 = *(_DWORD **)(v111 + 32);
  v89 = v88[242];
  if ((v89 & 8) != 0)
  {
    objc_msgSend(v86, "updateWindowVisibilityForSwitcherContentController:");
    v88 = *(_DWORD **)(v111 + 32);
    v89 = v88[242];
  }
  if ((v89 & 4) != 0)
  {
    objc_msgSend(v87, "updateUserInteractionEnabledForSwitcherContentController:");
    v88 = *(_DWORD **)(v111 + 32);
  }
  if (objc_msgSend(v88, "_controlsHomeScreenContents"))
  {
    v90 = *(_QWORD *)(v111 + 32);
    v91 = *(_DWORD *)(v90 + 968);
    if ((v91 & 0x800) != 0)
    {
      objc_msgSend(*(id *)(v90 + 1936), "wallpaperScale");
      objc_msgSend(v87, "switcherContentController:setWallpaperScale:withAnimationMode:completion:", v90, v108, 0);
      v90 = *(_QWORD *)(v111 + 32);
      v91 = *(_DWORD *)(v90 + 968);
    }
    if ((v91 & 0x10) != 0)
    {
      objc_msgSend(*(id *)(v90 + 1936), "homeScreenScale");
      v93 = v92;
      v110[2](v110, CFSTR("homeScreenScale"));
      v94 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v87, "switcherContentController:setHomeScreenScale:withAnimationMode:completion:", v90, v108, v94, v93);

      v90 = *(_QWORD *)(v111 + 32);
      v91 = *(_DWORD *)(v90 + 968);
    }
    if ((v91 & 0x20) != 0)
    {
      objc_msgSend(*(id *)(v90 + 1936), "homeScreenAlpha");
      v96 = v95;
      v110[2](v110, CFSTR("homeScreenAlpha"));
      v97 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v87, "switcherContentController:setHomeScreenAlpha:withAnimationMode:completion:", v90, v108, v97, v96);

      v90 = *(_QWORD *)(v111 + 32);
      v91 = *(_DWORD *)(v90 + 968);
    }
    if ((v91 & 0x40) != 0)
    {
      objc_msgSend(*(id *)(v90 + 1936), "homeScreenDimmingAlpha");
      v99 = v98;
      v110[2](v110, CFSTR("homeScreenDimmingAlpha"));
      v100 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v87, "switcherContentController:setHomeScreenDimmingAlpha:withAnimationMode:completion:", v90, v108, v100, v99);

      v90 = *(_QWORD *)(v111 + 32);
      v91 = *(_DWORD *)(v90 + 968);
    }
    if ((v91 & 0x80) != 0)
    {
      objc_msgSend(*(id *)(v90 + 1936), "homeScreenBackdropBlurProgress");
      v102 = v101;
      v110[2](v110, CFSTR("homeScreenBackdropBlurProgress"));
      v103 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v87, "switcherContentController:setHomeScreenBackdropBlurProgress:withAnimationMode:completion:", v90, v108, v103, v102);

      v90 = *(_QWORD *)(v111 + 32);
      v91 = *(_DWORD *)(v90 + 968);
    }
    if ((v91 & 0x200) != 0)
    {
      if ((objc_msgSend((id)v90, "isChamoisWindowingUIEnabled") & 1) != 0)
        SBContinuousExposeHomeScreenBackdropMaterialRecipeName();
      else
        SBHomeScreenBackdropMaterialRecipeName();
      v104 = (void *)objc_claimAutoreleasedReturnValue();
      v105 = *(_QWORD *)(v111 + 32);
      v110[2](v110, CFSTR("homeScreenBackdropBlurMaterialRecipeName"));
      v106 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v87, "switcherContentController:setHomeScreenBackdropBlurMaterialRecipeName:withAnimationMode:completion:", v105, v104, v108, v106);

    }
  }

}

- (void)_updateHomeScreenPointerInteractions
{
  id v3;

  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  if (-[SBFluidSwitcherViewController _controlsHomeScreenContents](self, "_controlsHomeScreenContents")
    && (*((_BYTE *)&self->_delegateRespondsTo + 2) & 2) != 0)
  {
    objc_msgSend(v3, "switcherContentController:setPointerInteractionsEnabled:", self, -[SBSwitcherModifier wantsHomeScreenPointerInteractions](self->_rootModifier, "wantsHomeScreenPointerInteractions"));
  }

}

- (BOOL)_controlsHomeScreenContents
{
  id WeakRetained;
  void *v4;
  char v5;

  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v4 = WeakRetained;
  if ((*((_BYTE *)&self->_delegateRespondsTo + 2) & 8) != 0)
    v5 = objc_msgSend(WeakRetained, "switcherContentControllerControlsHomeScreenContents:", self);
  else
    v5 = 1;

  return v5;
}

- (BOOL)isWindowVisible
{
  return -[SBSwitcherModifier isSwitcherWindowVisible](self->_rootModifier, "isSwitcherWindowVisible");
}

- (BOOL)isUserInteractionEnabled
{
  return -[SBSwitcherModifier isSwitcherWindowUserInteractionEnabled](self->_rootModifier, "isSwitcherWindowUserInteractionEnabled");
}

- (id)genericSwitcherAccessoryLayoutElement
{
  return self->_genericAccessoryLayoutElement;
}

- (void)_updateWallpaperStyle
{
  int v3;
  _BOOL4 v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  int64_t v9;
  void *v10;
  id v11;

  if (-[SBFluidSwitcherViewController _controlsWallpaper](self, "_controlsWallpaper"))
  {
    v3 = -[SBSwitcherModifier isWallpaperRequiredForSwitcher](self->_rootModifier, "isWallpaperRequiredForSwitcher");
    if (self->_currentWallpaperRequiredForSwitcher != v3)
    {
      v4 = v3;
      -[SBFluidSwitcherViewController wallpaperRequireAssertion](self, "wallpaperRequireAssertion");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "invalidate");

      if (v4)
      {
        +[SBWallpaperController sharedInstance](SBWallpaperController, "sharedInstance");
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "requireWallpaperWithReason:", self->_fluidSwitcherAssertionReason);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBFluidSwitcherViewController setWallpaperRequireAssertion:](self, "setWallpaperRequireAssertion:", v7);

      }
      else
      {
        -[SBFluidSwitcherViewController setWallpaperRequireAssertion:](self, "setWallpaperRequireAssertion:", 0);
      }
      self->_currentWallpaperRequiredForSwitcher = v4;
    }
    v8 = -[SBSwitcherModifier wallpaperStyle](self->_rootModifier, "wallpaperStyle");
    if (self->_currentWallpaperStyle != v8)
    {
      v9 = v8;
      -[SBFluidSwitcherViewController delegate](self, "delegate");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      if ((*((_BYTE *)&self->_delegateRespondsTo + 1) & 0x10) != 0)
      {
        v11 = v10;
        objc_msgSend(v10, "switcherContentController:setWallpaperStyle:", self, v9);
        v10 = v11;
      }
      self->_currentWallpaperStyle = v9;

    }
  }
}

- (void)_updateSystemApertureShadowAssertion
{
  int v3;
  SAInvalidatable *systemApertureShadowAssertion;
  SAInvalidatable *v5;
  SAInvalidatable *v6;
  SAInvalidatable *v7;
  void *v8;

  v3 = -[SBSwitcherModifier systemApertureRequiresHeavyShadowForTransition](self->_rootModifier, "systemApertureRequiresHeavyShadowForTransition");
  systemApertureShadowAssertion = self->_systemApertureShadowAssertion;
  if (v3)
  {
    if (!systemApertureShadowAssertion)
    {
      objc_msgSend((id)SBApp, "systemApertureControllerForMainDisplay");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "requireHeavyShadowAssertionForTransition");
      v5 = (SAInvalidatable *)objc_claimAutoreleasedReturnValue();
      v6 = self->_systemApertureShadowAssertion;
      self->_systemApertureShadowAssertion = v5;

    }
  }
  else if (systemApertureShadowAssertion)
  {
    -[SAInvalidatable invalidateWithReason:](systemApertureShadowAssertion, "invalidateWithReason:", CFSTR("No Modifier Requires Shadow"));
    v7 = self->_systemApertureShadowAssertion;
    self->_systemApertureShadowAssertion = 0;

  }
}

- (void)_updateSwitcherBackdropType
{
  int64_t v3;
  NSString *fluidSwitcherAssertionReason;

  v3 = -[SBSwitcherModifier switcherBackdropBlurType](self->_rootModifier, "switcherBackdropBlurType");
  if (v3 == 3)
  {
    if (-[SBAppSwitcherSettings shouldSimplifyForOptions:](self->_settings, "shouldSimplifyForOptions:", 16))
      v3 = 2;
    else
      v3 = 3;
  }
  if (self->_currentSwitcherBackdropBlurType != v3)
  {
    self->_currentSwitcherBackdropBlurType = v3;
    fluidSwitcherAssertionReason = self->_fluidSwitcherAssertionReason;
    if (v3 == 1)
      -[SBHomeScreenBackdropViewBase endRequiringLiveBackdropViewForReason:](self->_backdropView, "endRequiringLiveBackdropViewForReason:", fluidSwitcherAssertionReason);
    else
      -[SBHomeScreenBackdropViewBase beginRequiringLiveBackdropViewForReason:](self->_backdropView, "beginRequiringLiveBackdropViewForReason:", fluidSwitcherAssertionReason);
  }
}

- (void)_updateScrollViewScrollEnabled
{
  uint64_t v3;

  v3 = -[SBSwitcherModifier isScrollEnabled](self->_rootModifier, "isScrollEnabled");
  -[SBAppSwitcherScrollView setScrollEnabled:](self->_scrollView, "setScrollEnabled:", v3);
  -[SBFluidSwitcherViewController _updateContentViewPassesTouchesThrough](self, "_updateContentViewPassesTouchesThrough");
  if ((v3 & 1) == 0)
    -[SBAppSwitcherScrollView _stopScrollingAndZoomingAnimations](self->_scrollView, "_stopScrollingAndZoomingAnimations");
}

- (void)_updateContentViewPassesTouchesThrough
{
  int v3;
  int v4;
  uint64_t v5;
  id v6;

  if (-[SBSwitcherModifier isScrollEnabled](self->_rootModifier, "isScrollEnabled"))
    v3 = -[SBSwitcherModifier shouldScrollViewBlockTouches](self->_rootModifier, "shouldScrollViewBlockTouches");
  else
    v3 = 0;
  v4 = -[SBSwitcherModifier wantsSwitcherDimmingView](self->_rootModifier, "wantsSwitcherDimmingView");
  if (v4)
    v4 = -[SBSwitcherModifier switcherDimmingViewBlocksTouches](self->_rootModifier, "switcherDimmingViewBlocksTouches");
  if (((v3 | v4) & 1) != 0)
    v5 = 0;
  else
    v5 = -[SBSwitcherModifier switcherHitTestsAsOpaque](self->_rootModifier, "switcherHitTestsAsOpaque") ^ 1;
  -[SBFluidSwitcherContentView setPassesTouchesThrough:](self->_contentView, "setPassesTouchesThrough:", v5);
  -[SBFluidSwitcherContentView layer](self->_contentView, "layer");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setHitTestsAsOpaque:", v5 ^ 1);

}

- (void)_updateReopenClosedWindowsButtonWithMode:(int64_t)a3 completion:(id)a4
{
  id v6;
  void *v7;
  _QWORD v8[6];

  v6 = a4;
  v7 = v6;
  if (self->_reopenClosedWindowsButton)
  {
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __85__SBFluidSwitcherViewController__updateReopenClosedWindowsButtonWithMode_completion___block_invoke;
    v8[3] = &unk_1E8EA5060;
    v8[4] = self;
    v8[5] = a3;
    objc_msgSend(MEMORY[0x1E0DA9D48], "perform:finalCompletion:options:delegate:", v8, v6, 0, self);
    -[SBFluidSwitcherViewController _updateAppExposeAccessoryButtonsExtendedTouchRegions](self, "_updateAppExposeAccessoryButtonsExtendedTouchRegions");
  }
  else if (v6)
  {
    (*((void (**)(id, uint64_t, _QWORD))v6 + 2))(v6, 1, 0);
  }

}

- (void)_updatePlusButtonStyleWithMode:(int64_t)a3 completion:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  void *v9;
  _QWORD v10[5];

  v6 = a4;
  v7 = v6;
  if (self->_plusButton)
  {
    -[SBSwitcherModifier animationAttributesForLayoutElement:](self->_rootModifier, "animationAttributesForLayoutElement:", self->_genericAccessoryLayoutElement);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "opacitySettings");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10[0] = MEMORY[0x1E0C809B0];
    v10[1] = 3221225472;
    v10[2] = __75__SBFluidSwitcherViewController__updatePlusButtonStyleWithMode_completion___block_invoke;
    v10[3] = &unk_1E8E9DED8;
    v10[4] = self;
    objc_msgSend(MEMORY[0x1E0CEABB0], "sb_animateWithSettings:mode:animations:completion:", v9, a3, v10, v7);
    -[SBFluidSwitcherViewController _updateAppExposeAccessoryButtonsExtendedTouchRegions](self, "_updateAppExposeAccessoryButtonsExtendedTouchRegions");

  }
  else if (v6)
  {
    (*((void (**)(id, uint64_t, _QWORD))v6 + 2))(v6, 1, 0);
  }

}

- (void)_updateHomeScreenContentRequirement
{
  int v3;
  _BOOL4 v4;
  void *v5;
  void *v6;
  NSString *fluidSwitcherAssertionReason;

  if (-[SBFluidSwitcherViewController _controlsHomeScreenContents](self, "_controlsHomeScreenContents"))
  {
    v3 = -[SBSwitcherModifier isHomeScreenContentRequired](self->_rootModifier, "isHomeScreenContentRequired");
    if (self->_currentHomeScreenContentRequired != v3)
    {
      v4 = v3;
      -[SBFluidSwitcherViewController _homeScreenAppearanceController](self, "_homeScreenAppearanceController");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5;
      fluidSwitcherAssertionReason = self->_fluidSwitcherAssertionReason;
      if (v4)
        objc_msgSend(v5, "beginRequiringContentForReason:options:", fluidSwitcherAssertionReason, 2);
      else
        objc_msgSend(v5, "endRequiringContentForReason:", fluidSwitcherAssertionReason);

      self->_currentHomeScreenContentRequired = v4;
    }
  }
}

- (void)_layoutVisibleShelvesWithCompletion:(id)a3
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  void *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  void (**v22)(id, uint64_t, _QWORD);
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v23 = 0u;
  v24 = 0u;
  v25 = 0u;
  v26 = 0u;
  v22 = (void (**)(id, uint64_t, _QWORD))a3;
  -[NSMutableDictionary allKeys](self->_visibleShelves, "allKeys");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v24;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v24 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * i);
        -[SBSwitcherModifier visibleShelves](self->_rootModifier, "visibleShelves");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v10, "containsObject:", v9))
        {
          -[NSMutableDictionary objectForKey:](self->_visibleShelves, "objectForKey:", v9);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          -[SBSwitcherModifier frameForShelf:](self->_rootModifier, "frameForShelf:", v9);
          v13 = v12;
          v15 = v14;
          v17 = v16;
          v19 = v18;
          objc_msgSend(v11, "view");
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v20, "sb_setBoundsAndPositionFromFrame:", v13, v15, v17, v19);

          objc_msgSend(v11, "view");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "layoutIfNeeded");

        }
      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v23, v27, 16);
    }
    while (v6);
  }

  if (v22)
    v22[2](v22, 1, 0);

}

- (void)_layoutVisibleItemsWithCompletion:(id)a3
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __67__SBFluidSwitcherViewController__layoutVisibleItemsWithCompletion___block_invoke;
  v3[3] = &unk_1E8EA4840;
  v3[4] = self;
  objc_msgSend(MEMORY[0x1E0DA9D48], "perform:finalCompletion:options:delegate:", v3, a3, 0);
}

- (void)_layoutSlideoverTonguesWithCompletion:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  void *v21;
  void *v22;
  id v23;
  _QWORD v24[4];
  id v25;
  SBFluidSwitcherViewController *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v4 = a3;
  v5 = v4;
  if (self->_slideOverTongue)
  {
    v6 = -[SBSwitcherModifier slideOverTongueState](self->_rootModifier, "slideOverTongueState");
    v7 = -[SBSwitcherModifier slideOverTongueDirection](self->_rootModifier, "slideOverTongueDirection");
    -[SBSwitcherModifier appLayoutToAttachSlideOverTongue](self->_rootModifier, "appLayoutToAttachSlideOverTongue");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBSwitcherModifier animationAttributesForLayoutElement:](self->_rootModifier, "animationAttributesForLayoutElement:", self->_slideOverTongueLayoutElement);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController containerViewBounds](self, "containerViewBounds");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    v18 = objc_msgSend(v9, "updateMode");
    v19 = -[SBSlideOverTongueView direction](self->_slideOverTongue, "direction");
    if (v8)
      v20 = 1;
    else
      v20 = v7 == v19;
    if (!v20)
      v18 = 2;
    v21 = (void *)MEMORY[0x1E0CEABB0];
    objc_msgSend(v9, "layoutSettings");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v24[0] = MEMORY[0x1E0C809B0];
    v24[1] = 3221225472;
    v24[2] = __71__SBFluidSwitcherViewController__layoutSlideoverTonguesWithCompletion___block_invoke;
    v24[3] = &unk_1E8EA4868;
    v25 = v8;
    v26 = self;
    v27 = v7;
    v28 = v11;
    v29 = v13;
    v30 = v15;
    v31 = v17;
    v23 = v8;
    objc_msgSend(v21, "sb_animateWithSettings:mode:animations:completion:", v22, v18, v24, v5);

    -[SBSlideOverTongueView setDirection:state:animated:](self->_slideOverTongue, "setDirection:state:animated:", v7, v6, 1);
  }
  else if (v4)
  {
    (*((void (**)(id, uint64_t, _QWORD))v4 + 2))(v4, 1, 0);
  }

}

- (void)_layoutContinuousExposeStripTongueAnimated:(BOOL)a3 completion:(id)a4
{
  _BOOL8 v4;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  SBContinuousExposeStripTongueView *continuousExposeStripTongue;
  _UIBackdropView *continuousExposeStripTongueCaptureOnlyBackdropView;
  id v20;

  v4 = a3;
  v6 = a4;
  v20 = v6;
  if (self->_continuousExposeStripTongue)
  {
    v7 = -[SBSwitcherModifier continuousExposeStripTongueAttributes](self->_rootModifier, "continuousExposeStripTongueAttributes");
    v9 = v8;
    -[SBFluidSwitcherViewController containerViewBounds](self, "containerViewBounds");
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;
    -[SBContinuousExposeStripTongueView setBounds:](self->_continuousExposeStripTongue, "setBounds:");
    continuousExposeStripTongue = self->_continuousExposeStripTongue;
    UIRectGetCenter();
    -[SBContinuousExposeStripTongueView setCenter:](continuousExposeStripTongue, "setCenter:");
    -[_UIBackdropView setBounds:](self->_continuousExposeStripTongueCaptureOnlyBackdropView, "setBounds:", v11, v13, v15, v17);
    continuousExposeStripTongueCaptureOnlyBackdropView = self->_continuousExposeStripTongueCaptureOnlyBackdropView;
    UIRectGetCenter();
    -[_UIBackdropView setCenter:](continuousExposeStripTongueCaptureOnlyBackdropView, "setCenter:");
    -[SBContinuousExposeStripTongueView setAttributes:animated:](self->_continuousExposeStripTongue, "setAttributes:animated:", v7, v9, v4);
    v6 = v20;
  }
  if (v6)
  {
    (*((void (**)(id, uint64_t, _QWORD))v6 + 2))(v20, 1, 0);
    v6 = v20;
  }

}

- (void)_applyStyleToVisibleItemContainersWithCompletion:(id)a3
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __82__SBFluidSwitcherViewController__applyStyleToVisibleItemContainersWithCompletion___block_invoke;
  v3[3] = &unk_1E8EA4840;
  v3[4] = self;
  objc_msgSend(MEMORY[0x1E0DA9D48], "perform:finalCompletion:options:delegate:", v3, a3, 0);
}

- (void)_applyRootContentViewClippingAndBlurWithCompletion:(id)a3
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __84__SBFluidSwitcherViewController__applyRootContentViewClippingAndBlurWithCompletion___block_invoke;
  v3[3] = &unk_1E8EA4840;
  v3[4] = self;
  objc_msgSend(MEMORY[0x1E0DA9D48], "perform:finalCompletion:options:delegate:", v3, a3, 0);
}

- (void)_applyRootContentViewBlurRadiusWithCompletion:(id)a3
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  unint64_t v14;
  uint64_t v15;
  int IsZero;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD v33[6];
  _QWORD v34[5];
  id v35;
  _QWORD v36[6];
  _QWORD v37[3];

  v37[1] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBSwitcherModifier rootContentViewBlurRadius](self->_rootModifier, "rootContentViewBlurRadius");
  v6 = v5;
  -[SBSwitcherModifier animationAttributesForLayoutElement:](self->_rootModifier, "animationAttributesForLayoutElement:", self->_contentView);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController switcherSettings](self, "switcherSettings");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "animationSettings");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "layoutSettings");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if (v10)
  {
    v12 = v10;
  }
  else
  {
    objc_msgSend(v9, "layoutSettings");
    v12 = (id)objc_claimAutoreleasedReturnValue();
  }
  v13 = v12;

  v14 = objc_msgSend(v7, "layoutUpdateMode");
  if (v14 <= 1)
    v15 = 1;
  else
    v15 = v14;
  IsZero = BSFloatIsZero();
  -[SBFluidSwitcherContentView layer](self->_contentView, "layer");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "filters");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = v18;
  if (!IsZero)
  {
    objc_msgSend(v18, "firstObject");
    v21 = (void *)objc_claimAutoreleasedReturnValue();

    v31 = v9;
    if (v21)
    {
      objc_msgSend(v21, "type");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = (void *)*MEMORY[0x1E0CD2C88];

      if (v22 == v23)
      {
        v27 = v21;
        objc_msgSend(v27, "setName:", CFSTR("gaussianBlur"));
        v24 = v27;
        goto LABEL_18;
      }

    }
    else
    {
      v23 = (void *)*MEMORY[0x1E0CD2C88];
    }
    objc_msgSend(MEMORY[0x1E0CD2780], "filterWithType:", v23, v9);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v24, "setName:", CFSTR("gaussianBlur"));
    objc_msgSend(v24, "setValue:forKey:", &unk_1E91CF668, CFSTR("inputRadius"));
    -[SBFluidSwitcherContentView layer](self->_contentView, "layer");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    v37[0] = v24;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v37, 1);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v25, "setFilters:", v26);

    v27 = 0;
LABEL_18:
    -[SBFluidSwitcherContentView layer](self->_contentView, "layer", v31);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController traitCollection](self, "traitCollection");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "displayScale");
    objc_msgSend(v28, "setRasterizationScale:");

    -[SBFluidSwitcherContentView layer](self->_contentView, "layer");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "setShouldRasterize:", 1);

    v33[0] = MEMORY[0x1E0C809B0];
    v33[1] = 3221225472;
    v33[2] = __79__SBFluidSwitcherViewController__applyRootContentViewBlurRadiusWithCompletion___block_invoke_3;
    v33[3] = &unk_1E8E9DE88;
    v33[4] = self;
    v33[5] = v6;
    objc_msgSend(MEMORY[0x1E0CEABB0], "sb_animateWithSettings:mode:animations:completion:", v13, v15, v33, v4);

    v9 = v32;
    goto LABEL_19;
  }

  if (v19)
  {
    v20 = (void *)MEMORY[0x1E0CEABB0];
    v36[0] = MEMORY[0x1E0C809B0];
    v36[1] = 3221225472;
    v36[2] = __79__SBFluidSwitcherViewController__applyRootContentViewBlurRadiusWithCompletion___block_invoke;
    v36[3] = &unk_1E8E9DE88;
    v36[4] = self;
    v36[5] = v6;
    v34[0] = MEMORY[0x1E0C809B0];
    v34[1] = 3221225472;
    v34[2] = __79__SBFluidSwitcherViewController__applyRootContentViewBlurRadiusWithCompletion___block_invoke_2;
    v34[3] = &unk_1E8EA4890;
    v34[4] = self;
    v35 = v4;
    objc_msgSend(v20, "sb_animateWithSettings:mode:animations:completion:", v13, v15, v36, v34);

  }
  else if (v4)
  {
    (*((void (**)(id, uint64_t, _QWORD))v4 + 2))(v4, 1, 0);
  }
LABEL_19:

}

- (BSInvalidatable)wallpaperRequireAssertion
{
  return self->_wallpaperRequireAssertion;
}

- (void)setWallpaperRequireAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_wallpaperRequireAssertion, a3);
}

- (double)currentStatusBarHeightOfContainer:(id)a3
{
  void *v4;
  void *v5;
  double v6;
  double v7;

  objc_msgSend(a3, "appLayout");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v4);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "currentStatusBarHeight");
    v7 = v6;

  }
  else
  {
    v7 = *MEMORY[0x1E0CEBBE0];
  }

  return v7;
}

- (CGRect)overlayAccessoryViewFrameForIconOverlayView:(id)a3 fullPresented:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  NSDictionary *leafAppLayoutsToAdjustedAppLayouts;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  NSObject *v23;
  void *v24;
  void *v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  int v34;
  void *v35;
  __int16 v36;
  void *v37;
  uint64_t v38;
  CGRect result;

  v4 = a4;
  v38 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = v6;
  if (v4)
  {
    -[NSMutableDictionary allKeysForObject:](self->_visibleOverlayAccessoryViews, "allKeysForObject:", v6);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "firstObject");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    leafAppLayoutsToAdjustedAppLayouts = self->_leafAppLayoutsToAdjustedAppLayouts;
    objc_msgSend(v9, "anyLeafAppLayout");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSDictionary objectForKey:](leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    -[SBFluidSwitcherViewController containerViewBounds](self, "containerViewBounds");
    if (v12)
    {
      -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "indexOfObject:", v12);

      -[SBSwitcherModifier frameForIndex:](self->_rootModifier, "frameForIndex:", v14);
      -[SBSwitcherModifier fullyPresentedFrameForIndex:frame:](self->_rootModifier, "fullyPresentedFrameForIndex:frame:", v14);
    }
    else
    {
      SBLogAppSwitcher();
      v23 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
      {
        objc_msgSend(v7, "debugDescription");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "debugDescription");
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v34 = 138412546;
        v35 = v24;
        v36 = 2112;
        v37 = v25;
        _os_log_impl(&dword_1D0540000, v23, OS_LOG_TYPE_DEFAULT, "adjustedAppLayout is null for overlay accessory view:%@ for appLayout:%@", (uint8_t *)&v34, 0x16u);

      }
    }
    SBRectWithSize();
    v16 = v26;
    v18 = v27;
    v20 = v28;
    v22 = v29;

  }
  else
  {
    objc_msgSend(v6, "bounds");
    v16 = v15;
    v18 = v17;
    v20 = v19;
    v22 = v21;
  }

  v30 = v16;
  v31 = v18;
  v32 = v20;
  v33 = v22;
  result.size.height = v33;
  result.size.width = v32;
  result.origin.y = v31;
  result.origin.x = v30;
  return result;
}

- (CGRect)_iconImageFrameForIconView:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  void *v14;
  void *v15;
  __int128 v16;
  void *v17;
  void *v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGFloat v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  CGAffineTransform v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  CGRect result;

  if (a3)
  {
    v4 = a3;
    -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "homeScreenController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      v8 = v6;
    }
    else
    {
      +[SBUIController sharedInstance](SBUIController, "sharedInstance");
      v8 = (id)objc_claimAutoreleasedReturnValue();
    }
    v13 = v8;

    objc_msgSend(v13, "homeScreenScalingView");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = v14;
    v36 = 0u;
    v37 = 0u;
    v35 = 0u;
    if (v14)
      objc_msgSend(v14, "transform");
    v16 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
    v32 = *MEMORY[0x1E0C9BAA8];
    v33 = v16;
    v34 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
    objc_msgSend(v15, "setTransform:", &v32);
    -[SBFluidSwitcherViewController view](self, "view");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "iconImageFrame");
    objc_msgSend(v17, "convertRect:fromView:", v4);

    objc_msgSend(v4, "iconImageFrame");
    -[SBFluidSwitcherViewController view](self, "view");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    SBRectWithSize();
    objc_msgSend(v18, "convertRect:fromView:", v4);
    v20 = v19;
    v22 = v21;

    objc_msgSend(v4, "iconContentScale");
    v24 = v23;

    CGAffineTransformMakeScale(&v31, v24, v24);
    v11 = v22 * v31.c + v31.a * v20;
    v12 = v22 * v31.d + v31.b * v20;
    UIRectGetCenter();
    v9 = v25 - v12 * 0.5;
    v10 = v26 - v11 * 0.5;
    v32 = v35;
    v33 = v36;
    v34 = v37;
    objc_msgSend(v15, "setTransform:", &v32);

  }
  else
  {
    v10 = *MEMORY[0x1E0C9D628];
    v9 = *(double *)(MEMORY[0x1E0C9D628] + 8);
    v11 = *(double *)(MEMORY[0x1E0C9D628] + 16);
    v12 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  }
  v27 = v10;
  v28 = v9;
  v29 = v11;
  v30 = v12;
  result.size.height = v30;
  result.size.width = v29;
  result.origin.y = v28;
  result.origin.x = v27;
  return result;
}

uint64_t __61__SBFluidSwitcherViewController__updateLayoutWithCompletion___block_invoke_2(uint64_t a1)
{
  void *v2;
  CGFloat v3;
  CGAffineTransform v5;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "contentViewScale");
  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 1808);
  CGAffineTransformMakeScale(&v5, v3, v3);
  return objc_msgSend(v2, "setTransform:", &v5);
}

- (BOOL)isAppLayoutVisibleInSwitcherBounds:(id)a3
{
  NSMutableDictionary *visibleItemContainers;
  void *v5;
  void *v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  BOOL v19;
  CGRect v21;
  CGRect v22;

  visibleItemContainers = self->_visibleItemContainers;
  objc_msgSend(a3, "anyLeafAppLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](visibleItemContainers, "objectForKey:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    -[SBFluidSwitcherViewController switcherViewBounds](self, "switcherViewBounds");
    v8 = v7;
    v10 = v9;
    v12 = v11;
    v14 = v13;
    objc_msgSend(v6, "frame");
    v22.origin.x = v15;
    v22.origin.y = v16;
    v22.size.width = v17;
    v22.size.height = v18;
    v21.origin.x = v8;
    v21.origin.y = v10;
    v21.size.width = v12;
    v21.size.height = v14;
    v19 = CGRectIntersectsRect(v21, v22);
  }
  else
  {
    v19 = 0;
  }

  return v19;
}

- (CGRect)frameForPageViewOfContainer:(id)a3 fullyPresented:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  int v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  SBSwitcherModifier *rootModifier;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  CGRect result;

  v4 = a4;
  v6 = a3;
  -[NSMutableDictionary allValues](self->_visibleItemContainers, "allValues");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "containsObject:", v6);

  if (v4 && v8)
  {
    objc_msgSend(v6, "appLayout");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if (v10)
    {
      -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "indexOfObject:", v10);

      -[SBSwitcherModifier frameForIndex:](self->_rootModifier, "frameForIndex:", v12);
      -[SBSwitcherModifier fullyPresentedFrameForIndex:frame:](self->_rootModifier, "fullyPresentedFrameForIndex:frame:", v12);
      objc_msgSend(v9, "allItems");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "firstObject");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_msgSend(v10, "layoutRoleForItem:", v14);

      rootModifier = self->_rootModifier;
      SBRectWithSize();
      -[SBSwitcherModifier frameForLayoutRole:inAppLayout:withBounds:](rootModifier, "frameForLayoutRole:inAppLayout:withBounds:", v15, v10);
    }
    else
    {
      objc_msgSend(v6, "bounds");
    }

  }
  else
  {
    objc_msgSend(v6, "bounds");
  }
  SBRectWithSize();
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  v25 = v18;
  v26 = v20;
  v27 = v22;
  v28 = v24;
  result.size.height = v28;
  result.size.width = v27;
  result.origin.y = v26;
  result.origin.x = v25;
  return result;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_26(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  objc_msgSend(*(id *)(a1 + 32), "layer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setAnchorPoint:", *(double *)(a1 + 48), *(double *)(a1 + 56));

  v3 = *(void **)(a1 + 32);
  UIRectGetCenter();
  objc_msgSend(v3, "setCenter:");
  objc_msgSend(*(id *)(a1 + 40), "layer");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setAnchorPoint:", *(double *)(a1 + 48), *(double *)(a1 + 56));

  v5 = *(void **)(a1 + 40);
  UIRectGetCenter();
  return objc_msgSend(v5, "setCenter:");
}

void __84__SBFluidSwitcherViewController__applyRootContentViewClippingAndBlurWithCompletion___block_invoke(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void (*v5)(void);
  _QWORD *v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)(a1 + 32);
  v5 = (void (*)(void))a2[2];
  v6 = a2;
  v5();
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "_applyRootContentViewClippingWithCompletion:", v7);

  v8 = *(void **)(a1 + 32);
  ((void (*)(id, const __CFString *))a2[2])(v6, CFSTR("content-view-blur-radius"));
  v9 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "_applyRootContentViewBlurRadiusWithCompletion:", v9);
}

- (void)_dispatchEventAndHandleAction:(id)a3
{
  id v5;
  _BOOL4 hasAnyUnadjustedAppLayoutsInDuality;
  uint64_t v7;
  _BOOL4 v8;
  NSObject *v9;
  NSString *debugName;
  void *v11;
  _BOOL4 v12;
  NSObject *v13;
  NSString *v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  void (**v20)(_QWORD, _QWORD, _QWORD);
  NSObject *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  void *v27;
  void *v28;
  _QWORD v29[5];
  char v30;
  _BYTE buf[24];
  char v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  kdebug_trace();
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 9201, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("event"));

  }
  hasAnyUnadjustedAppLayoutsInDuality = self->_hasAnyUnadjustedAppLayoutsInDuality;
  v7 = qword_1EFC55240;
  if (self->_hasAnyUnadjustedAppLayoutsInDuality)
    qword_1EFC55240 = (uint64_t)"note: dispatching switcher event with duality app layouts";
  v8 = -[SBFluidSwitcherViewController _shouldLogSwitcherModifierEvent:](self, "_shouldLogSwitcherModifierEvent:", v5);
  if (v8)
  {
    SBLogAppSwitcher();
    v9 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      debugName = self->_debugName;
      *(_DWORD *)buf = 138543618;
      *(_QWORD *)&buf[4] = debugName;
      *(_WORD *)&buf[12] = 2114;
      *(_QWORD *)&buf[14] = v5;
      _os_log_impl(&dword_1D0540000, v9, OS_LOG_TYPE_DEFAULT, "[%{public}@] dispatch event:\n%{public}@", buf, 0x16u);
    }

  }
  -[SBChainableModifier handleEvent:](self->_rootModifier, "handleEvent:", v5);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
    v12 = v8;
  else
    v12 = 0;
  if (v12)
  {
    SBLogAppSwitcher();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      v14 = self->_debugName;
      *(_DWORD *)buf = 138543618;
      *(_QWORD *)&buf[4] = v14;
      *(_WORD *)&buf[12] = 2114;
      *(_QWORD *)&buf[14] = v11;
      _os_log_impl(&dword_1D0540000, v13, OS_LOG_TYPE_DEFAULT, "[%{public}@] handle response:\n%{public}@", buf, 0x16u);
    }

  }
  v15 = objc_opt_class();
  v16 = v5;
  if (v15)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v17 = v16;
    else
      v17 = 0;
  }
  else
  {
    v17 = 0;
  }
  v18 = v17;

  objc_msgSend(v18, "zoomFromHardwareButtonPreludeTokenWrapper");
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  LODWORD(v18) = objc_msgSend(v19, "isTokenAvailable");
  if ((_DWORD)v18)
  {
    *(_QWORD *)buf = 0;
    *(_QWORD *)&buf[8] = buf;
    *(_QWORD *)&buf[16] = 0x2020000000;
    v32 = 0;
    v30 = 0;
    if (!v11)
      goto LABEL_26;
    v29[0] = MEMORY[0x1E0C809B0];
    v29[1] = 3221225472;
    v29[2] = __63__SBFluidSwitcherViewController__dispatchEventAndHandleAction___block_invoke;
    v29[3] = &unk_1E8EA5100;
    v29[4] = buf;
    v20 = (void (**)(_QWORD, _QWORD, _QWORD))MEMORY[0x1D17E5550](v29);
    ((void (**)(_QWORD, void *, char *))v20)[2](v20, v11, &v30);
    if (!v30)
      objc_msgSend(v11, "enumerateResponseTreeUsingBlock:", v20);

    if (!*(_BYTE *)(*(_QWORD *)&buf[8] + 24))
    {
LABEL_26:
      SBLogCameraCaptureLaunchAnimation();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
        -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:].cold.1(v21);

      v22 = objc_opt_class();
      v23 = v16;
      if (v22)
      {
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v24 = v23;
        else
          v24 = 0;
      }
      else
      {
        v24 = 0;
      }
      v25 = v24;

      objc_msgSend(v25, "zoomFromHardwareButtonPreludeTokenWrapper");
      v26 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v26, "consumeToken");
      v27 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v27, "cancel");
    }
    _Block_object_dispose(buf, 8);
  }
  -[SBFluidSwitcherViewController _updateAnimatableProperties](self, "_updateAnimatableProperties");
  if (v11)
    -[SBFluidSwitcherViewController _handleEventResponse:](self, "_handleEventResponse:", v11);
  -[SBFluidSwitcherViewController _updateImplicitModifierStackInvalidatables](self, "_updateImplicitModifierStackInvalidatables");
  if (hasAnyUnadjustedAppLayoutsInDuality)
    qword_1EFC55240 = v7;
  kdebug_trace();

}

- (void)_handleEventResponse:(id)a3
{
  id v5;
  NSObject *v6;
  NSString *debugName;
  void *v8;
  double v9;
  dispatch_time_t v10;
  void *v11;
  _QWORD block[4];
  id v13;
  SBFluidSwitcherViewController *v14;
  uint8_t buf[4];
  NSString *v16;
  __int16 v17;
  void *v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 9326, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("response"));

  }
  if (objc_msgSend(v5, "isValid"))
  {
    objc_msgSend(v5, "delay");
    if ((BSFloatIsZero() & 1) != 0)
    {
      -[SBFluidSwitcherViewController _performEventResponse:](self, "_performEventResponse:", v5);
    }
    else
    {
      objc_msgSend(v5, "delay");
      v10 = dispatch_time(0, (uint64_t)(v9 * 1000000000.0));
      block[0] = MEMORY[0x1E0C809B0];
      block[1] = 3221225472;
      block[2] = __54__SBFluidSwitcherViewController__handleEventResponse___block_invoke;
      block[3] = &unk_1E8E9E820;
      v13 = v5;
      v14 = self;
      dispatch_after(v10, MEMORY[0x1E0C80D38], block);

    }
  }
  else
  {
    SBLogAppSwitcher();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      debugName = self->_debugName;
      objc_msgSend(v5, "description");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      *(_DWORD *)buf = 138412546;
      v16 = debugName;
      v17 = 2112;
      v18 = v8;
      _os_log_impl(&dword_1D0540000, v6, OS_LOG_TYPE_INFO, "[Fluid Switcher - %@] Skipping the following action because it's no longer valid: %@", buf, 0x16u);

    }
  }

}

- (void)_performEventResponse:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  _QWORD v9[5];

  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 9348, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("response"));

  }
  switch(objc_msgSend(v5, "type"))
  {
    case 1:
      -[SBFluidSwitcherViewController _performModifierPerformTransitionResponse:](self, "_performModifierPerformTransitionResponse:", v5);
      break;
    case 2:
      -[SBFluidSwitcherViewController _performModifierCompletionResponse:](self, "_performModifierCompletionResponse:", v5);
      break;
    case 3:
      -[SBFluidSwitcherViewController _performModifierHapticResponse:](self, "_performModifierHapticResponse:", v5);
      break;
    case 4:
      -[SBFluidSwitcherViewController _performModifierReachabilityResponse:](self, "_performModifierReachabilityResponse:", v5);
      break;
    case 5:
      -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "presentFloatingDockIfDismissedAnimated:completionHandler:", 1, 0);
      goto LABEL_28;
    case 6:
      +[SBUIController sharedInstance](SBUIController, "sharedInstance");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "handleHomeButtonSinglePressUpForWindowScene:", v7);

      goto LABEL_28;
    case 7:
      -[SBFluidSwitcherViewController _performModifierInjectVelocityResponse:](self, "_performModifierInjectVelocityResponse:", v5);
      break;
    case 8:
      -[SBFluidSwitcherViewController _performModifierEmitStudyLogResponse:](self, "_performModifierEmitStudyLogResponse:", v5);
      break;
    case 9:
      -[SBFluidSwitcherViewController _performModifierEmitSBEventResponse:](self, "_performModifierEmitSBEventResponse:", v5);
      break;
    case 10:
      -[SBFluidSwitcherViewController _performModifierUpdateLayoutResponse:](self, "_performModifierUpdateLayoutResponse:", v5);
      break;
    case 11:
      -[SBFluidSwitcherViewController _performModifierScrollToAppLayoutResponse:](self, "_performModifierScrollToAppLayoutResponse:", v5);
      break;
    case 12:
      -[SBFluidSwitcherViewController _performModifierIconOverlayVisibilityUpdateResponse:](self, "_performModifierIconOverlayVisibilityUpdateResponse:", v5);
      break;
    case 13:
      -[SBFluidSwitcherViewController _performModifierIconViewVisibilityUpdateResponse:](self, "_performModifierIconViewVisibilityUpdateResponse:", v5);
      break;
    case 14:
      -[SBFluidSwitcherViewController _performModifierNotifyIconWillZoomDownResponse:](self, "_performModifierNotifyIconWillZoomDownResponse:", v5);
      break;
    case 15:
      -[SBFluidSwitcherViewController _performModifierMatchMoveToIconViewResponse:](self, "_performModifierMatchMoveToIconViewResponse:", v5);
      break;
    case 17:
      -[SBFluidSwitcherViewController _performModifierTimerEventResponse:](self, "_performModifierTimerEventResponse:", v5);
      break;
    case 18:
      -[SBFluidSwitcherViewController _performModifierInvalidateAdjustedAppLayoutsResponse:](self, "_performModifierInvalidateAdjustedAppLayoutsResponse:", v5);
      break;
    case 19:
      -[SBFluidSwitcherViewController _performModifierDosidoScaleAnimationResponse:](self, "_performModifierDosidoScaleAnimationResponse:", v5);
      break;
    case 20:
      -[SBFluidSwitcherViewController _performBlurItemContainerResponse:](self, "_performBlurItemContainerResponse:", v5);
      break;
    case 21:
      -[SBFluidSwitcherViewController _performNewWindowSwitcherResponse:](self, "_performNewWindowSwitcherResponse:", v5);
      break;
    case 22:
      -[SBFluidSwitcherViewController _performModifierInvalidateReopenButtonTextResponse:](self, "_performModifierInvalidateReopenButtonTextResponse:", v5);
      break;
    case 23:
      -[SBFluidSwitcherViewController _performModifierDismissSiriResponse:](self, "_performModifierDismissSiriResponse:", v5);
      break;
    case 24:
      -[SBFluidSwitcherViewController _cancelInProcessAnimationsWithOptions:](self, "_cancelInProcessAnimationsWithOptions:", objc_msgSend(v5, "options"));
      break;
    case 25:
      -[SBFluidSwitcherLayoutContext activeTransitionContext](self->_layoutContext, "activeTransitionContext");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBFluidSwitcherViewController _setupPIPMorphingIfNeededForTransitionContext:response:](self, "_setupPIPMorphingIfNeededForTransitionContext:response:", v6, v5);
LABEL_28:

      break;
    case 26:
      -[SBFluidSwitcherViewController _performFolderSnapshotRequestResponse:](self, "_performFolderSnapshotRequestResponse:", v5);
      break;
    case 29:
      -[SBFluidSwitcherViewController _performInvalidateSnapshotCacheResponse:](self, "_performInvalidateSnapshotCacheResponse:", v5);
      break;
    case 30:
      -[SBFluidSwitcherViewController _performInvalidateItemContainerBackdropResponse:](self, "_performInvalidateItemContainerBackdropResponse:", v5);
      break;
    case 32:
      -[SBFluidSwitcherViewController _performUpdateDragPlatterBlurResponse:](self, "_performUpdateDragPlatterBlurResponse:", v5);
      break;
    case 33:
      -[SBFluidSwitcherViewController _performUpdateContinuousExposeStripsPresentationResponse:](self, "_performUpdateContinuousExposeStripsPresentationResponse:", v5);
      break;
    case 34:
      -[SBFluidSwitcherViewController _performInvalidateContinuousExposeIdentifiersResponse:](self, "_performInvalidateContinuousExposeIdentifiersResponse:", v5);
      break;
    case 35:
      -[SBFluidSwitcherViewController _performRequestSystemApertureElementSuppressionResponse:](self, "_performRequestSystemApertureElementSuppressionResponse:", v5);
      break;
    case 36:
      -[SBFluidSwitcherViewController _performRelinquishSystemApertureElementSuppressionResponse:](self, "_performRelinquishSystemApertureElementSuppressionResponse:", v5);
      break;
    case 37:
      -[SBFluidSwitcherViewController _performSystemApertureBounceResponse:](self, "_performSystemApertureBounceResponse:", v5);
      break;
    case 38:
      -[SBFluidSwitcherViewController _performSystemApertureStretchResponse:](self, "_performSystemApertureStretchResponse:", v5);
      break;
    case 39:
      -[SBFluidSwitcherViewController _performSetInterfaceOrientationFromUserResizingResponse:](self, "_performSetInterfaceOrientationFromUserResizingResponse:", v5);
      break;
    case 40:
      -[SBFluidSwitcherViewController _performPresentContinuousExposeStripEdgeProtectGrabberResponse:](self, "_performPresentContinuousExposeStripEdgeProtectGrabberResponse:", v5);
      break;
    case 41:
      -[SBFluidSwitcherViewController _performInvalidateRootContentViewClippingAndBlurResponse:](self, "_performInvalidateRootContentViewClippingAndBlurResponse:", v5);
      break;
    case 42:
      -[SBFluidSwitcherViewController _performActionForPreludeAnimationTokenActionResponse:](self, "_performActionForPreludeAnimationTokenActionResponse:", v5);
      break;
    case 44:
      -[SBFluidSwitcherViewController _performModifierMatchMoveToDropletResponse:](self, "_performModifierMatchMoveToDropletResponse:", v5);
      break;
    case 45:
      -[SBFluidSwitcherViewController _performCancelSystemGesturesResponse:](self, "_performCancelSystemGesturesResponse:", v5);
      break;
    case 46:
      -[SBFluidSwitcherViewController _performCancelWindowMorphingResponse:](self, "_performCancelWindowMorphingResponse:", v5);
      break;
    default:
      break;
  }
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __55__SBFluidSwitcherViewController__performEventResponse___block_invoke;
  v9[3] = &unk_1E8EA5128;
  v9[4] = self;
  objc_msgSend(v5, "enumerateChildResponsesUsingBlock:", v9);

}

uint64_t __55__SBFluidSwitcherViewController__performEventResponse___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "_handleEventResponse:", a2);
}

- (void)_updateImplicitModifierStackInvalidatables
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id obj;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController viewIfLoaded](self, "viewIfLoaded");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    -[SBFluidSwitcherViewController _updateAppStatusBarAndHomeGrabberVisibilityAnimated:](self, "_updateAppStatusBarAndHomeGrabberVisibilityAnimated:", 1);
    -[SBFluidSwitcherViewController _updateSpringBoardStatusBarVisibility](self, "_updateSpringBoardStatusBarVisibility");
    -[SBFluidSwitcherViewController _updateAsynchronousSurfaceRetentionAssertion](self, "_updateAsynchronousSurfaceRetentionAssertion");
    -[SBFluidSwitcherViewController _updateAsyncRenderingAndResizesHostedContext](self, "_updateAsyncRenderingAndResizesHostedContext");
    -[SBFluidSwitcherViewController _updateResignActiveAssertions](self, "_updateResignActiveAssertions");
    -[SBFluidSwitcherViewController _updateKeyboardSuppressionAssertion](self, "_updateKeyboardSuppressionAssertion");
    -[SBFluidSwitcherViewController _updateFloatingDockBehaviorAssertion](self, "_updateFloatingDockBehaviorAssertion");
    -[SBFluidSwitcherViewController _updateFloatingDockWindowLevelAssertion](self, "_updateFloatingDockWindowLevelAssertion");
    -[SBFluidSwitcherViewController _ensureSubviewOrdering](self, "_ensureSubviewOrdering");
    -[SBFluidSwitcherViewController _updatePlusButtonPresence](self, "_updatePlusButtonPresence");
    -[SBFluidSwitcherViewController _updateReopenClosedWindowsButtonPresence](self, "_updateReopenClosedWindowsButtonPresence");
    -[SBFluidSwitcherViewController _updateSwitcherDimmingViewPresence](self, "_updateSwitcherDimmingViewPresence");
    -[SBFluidSwitcherViewController _updateSwitcherBackdropViewPresence](self, "_updateSwitcherBackdropViewPresence");
    -[SBFluidSwitcherViewController _updateSlideOverTonguePresence](self, "_updateSlideOverTonguePresence");
    -[SBFluidSwitcherViewController _updateBezelEffectsPortal](self, "_updateBezelEffectsPortal");
    -[SBFluidSwitcherViewController _updateSnapshotCache](self, "_updateSnapshotCache");
    -[SBFluidSwitcherViewController _updateHomeScreenPointerInteractions](self, "_updateHomeScreenPointerInteractions");
    -[SBFluidSwitcherViewController _updateHiddenAppLayoutsInShelves](self, "_updateHiddenAppLayoutsInShelves");
    -[SBFluidSwitcherViewController _updateBounceIcon](self, "_updateBounceIcon");
    -[SBFluidSwitcherViewController _configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:](self, "_configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:", 0);
    -[SBFluidSwitcherViewController _updateForegroundAppLayoutsList](self, "_updateForegroundAppLayoutsList");
    -[SBFluidSwitcherViewController _updateContinuousExposeStripsCaptureOnlyBackdropLayer](self, "_updateContinuousExposeStripsCaptureOnlyBackdropLayer");
    -[SBFluidSwitcherViewController _updateWantsEnhancedWindowingEnabledState](self, "_updateWantsEnhancedWindowingEnabledState");
    -[SBFluidSwitcherViewController _updateContinuousExposeStripTonguePresence](self, "_updateContinuousExposeStripTonguePresence");
    -[SBFluidSwitcherViewController _updateCornerRadiiiAndMaximizedState](self, "_updateCornerRadiiiAndMaximizedState");
    -[SBFluidSwitcherViewController _updateHitTestBlockingView](self, "_updateHitTestBlockingView");
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    -[NSMutableDictionary allKeys](self->_liveContentOverlays, "allKeys");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v16;
      do
      {
        for (i = 0; i != v5; ++i)
        {
          if (*(_QWORD *)v16 != v6)
            objc_enumerationMutation(obj);
          v8 = *(void **)(*((_QWORD *)&v15 + 1) + 8 * i);
          -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v8);
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v8);
          v10 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v8, "allItems");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v11, "firstObject");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = objc_msgSend(v10, "layoutRoleForItem:", v12);

          objc_msgSend(v9, "setMatchMovedToScene:", -[SBSwitcherModifier isLayoutRoleMatchMovedToScene:inAppLayout:](self->_rootModifier, "isLayoutRoleMatchMovedToScene:inAppLayout:", v13, v10));
        }
        v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      }
      while (v5);
    }

  }
}

- (void)_updateWantsEnhancedWindowingEnabledState
{
  _BOOL8 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = -[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled");
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  -[NSMutableDictionary allValues](self->_liveContentOverlays, "allValues", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v10;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v10 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * v8++), "setWantsEnhancedWindowingEnabled:", v3);
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v6);
  }

}

- (void)_updateAsyncRenderingAndResizesHostedContext
{
  void *v7;

  objc_msgSend(a2, "succinctDescription");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  *(_DWORD *)a1 = 138412290;
  *a3 = v7;
  _os_log_error_impl(&dword_1D0540000, a4, OS_LOG_TYPE_ERROR, "Shouldn't want both asyncRendering and resizesHostedContext for %@", a1, 0xCu);

}

- (void)_ensureSubviewOrdering
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t j;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t k;
  NSMutableDictionary *visibleItemContainerBackdropViews;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t m;
  void *v26;
  SBFluidSwitcherContentView *contentView;
  void *v28;
  SBFluidSwitcherContentView *v29;
  void *v30;
  void *v31;
  id obj;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _QWORD v37[5];
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _BYTE v50[128];
  _BYTE v51[128];
  _BYTE v52[128];
  _BYTE v53[128];
  uint64_t v54;

  v54 = *MEMORY[0x1E0C80C00];
  v3 = (void *)objc_opt_new();
  -[SBSwitcherModifier topMostLayoutElements](self->_rootModifier, "topMostLayoutElements");
  v46 = 0u;
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "reverseObjectEnumerator");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v46, v53, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v47;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v47 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v46 + 1) + 8 * i);
        v42 = 0u;
        v43 = 0u;
        v44 = 0u;
        v45 = 0u;
        -[SBFluidSwitcherViewController _orderedViewsForLayoutElement:excludeSwitcherHostedShelves:](self, "_orderedViewsForLayoutElement:excludeSwitcherHostedShelves:", v9, 0);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "reverseObjectEnumerator");
        v11 = (void *)objc_claimAutoreleasedReturnValue();

        v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v42, v52, 16);
        if (v12)
        {
          v13 = v12;
          v14 = *(_QWORD *)v43;
          do
          {
            for (j = 0; j != v13; ++j)
            {
              if (*(_QWORD *)v43 != v14)
                objc_enumerationMutation(v11);
              objc_msgSend(v3, "addObject:", *(_QWORD *)(*((_QWORD *)&v42 + 1) + 8 * j));
            }
            v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v42, v52, 16);
          }
          while (v13);
        }

      }
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v46, v53, 16);
    }
    while (v6);
  }

  if ((BSEqualArrays() & 1) == 0)
  {
    v40 = 0u;
    v41 = 0u;
    v38 = 0u;
    v39 = 0u;
    v16 = v3;
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v38, v51, 16);
    if (v17)
    {
      v18 = v17;
      v19 = *(_QWORD *)v39;
      do
      {
        for (k = 0; k != v18; ++k)
        {
          if (*(_QWORD *)v39 != v19)
            objc_enumerationMutation(v16);
          -[SBFluidSwitcherContentView bringSubviewToFront:](self->_contentView, "bringSubviewToFront:", *(_QWORD *)(*((_QWORD *)&v38 + 1) + 8 * k));
        }
        v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v38, v51, 16);
      }
      while (v18);
    }

    objc_storeStrong((id *)&self->_cachedOrderedAllLayoutElementViews, v3);
  }
  visibleItemContainerBackdropViews = self->_visibleItemContainerBackdropViews;
  v37[0] = MEMORY[0x1E0C809B0];
  v37[1] = 3221225472;
  v37[2] = __55__SBFluidSwitcherViewController__ensureSubviewOrdering__block_invoke;
  v37[3] = &unk_1E8EA4BF8;
  v37[4] = self;
  -[NSMutableDictionary bs_each:](visibleItemContainerBackdropViews, "bs_each:", v37);
  v35 = 0u;
  v36 = 0u;
  v33 = 0u;
  v34 = 0u;
  -[NSMutableDictionary allValues](self->_centerWindowActivationAnimationContexts, "allValues");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v22 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v50, 16);
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)v34;
    do
    {
      for (m = 0; m != v23; ++m)
      {
        if (*(_QWORD *)v34 != v24)
          objc_enumerationMutation(obj);
        v26 = *(void **)(*((_QWORD *)&v33 + 1) + 8 * m);
        contentView = self->_contentView;
        objc_msgSend(v26, "contentPortalContainer");
        v28 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBFluidSwitcherContentView sendSubviewToBack:](contentView, "sendSubviewToBack:", v28);

        v29 = self->_contentView;
        objc_msgSend(v26, "deparentingPortal");
        v30 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBFluidSwitcherContentView bringSubviewToFront:](v29, "bringSubviewToFront:", v30);

      }
      v23 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v33, v50, 16);
    }
    while (v23);
  }

  if (self->_plusButton)
    -[SBFluidSwitcherContentView bringSubviewToFront:](self->_contentView, "bringSubviewToFront:");
  if (self->_reopenClosedWindowsButton)
    -[SBFluidSwitcherContentView bringSubviewToFront:](self->_contentView, "bringSubviewToFront:");
  if (self->_shelfBackgroundView)
    -[SBFluidSwitcherContentView sendSubviewToBack:](self->_contentView, "sendSubviewToBack:");
  if (self->_bounceIconView)
    -[SBFluidSwitcherContentView bringSubviewToFront:](self->_contentView, "bringSubviewToFront:");
  if (self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView)
    -[SBFluidSwitcherContentView sendSubviewToBack:](self->_contentView, "sendSubviewToBack:");
  if (self->_continuousExposeStripTongue)
    -[SBFluidSwitcherContentView bringSubviewToFront:](self->_contentView, "bringSubviewToFront:");
  if (self->_rootDestOutClippingView)
    -[SBFluidSwitcherContentView bringSubviewToFront:](self->_contentView, "bringSubviewToFront:");

}

- (void)_updateAsynchronousSurfaceRetentionAssertion
{
  uint64_t v3;
  void *v4;
  id v5;

  v3 = -[SBSwitcherModifier wantsAsynchronousSurfaceRetentionAssertion](self->_rootModifier, "wantsAsynchronousSurfaceRetentionAssertion");
  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((*((_BYTE *)&self->_delegateRespondsTo + 2) & 0x10) != 0)
  {
    v5 = v4;
    objc_msgSend(v4, "switcherContentController:setCacheAsynchronousRenderingSurfaces:", self, v3);
    v4 = v5;
  }

}

- (SBSwitcherContentViewControllerDelegate)delegate
{
  return (SBSwitcherContentViewControllerDelegate *)objc_loadWeakRetained((id *)&self->_delegate);
}

- (void)_updateHiddenAppLayoutsInShelves
{
  SBFluidSwitcherViewController *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  NSMutableDictionary *hiddenAppLayoutAssertionsForShelves;
  uint64_t v8;
  NSMutableDictionary *v9;
  void *v10;
  SBFluidSwitcherViewController *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t j;
  uint64_t v25;
  void *v26;
  void *v27;
  id obj;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  id v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _QWORD v39[4];
  id v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _QWORD v45[4];
  id v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[128];
  _BYTE v52[128];
  _BYTE v53[128];
  uint64_t v54;

  v2 = self;
  v54 = *MEMORY[0x1E0C80C00];
  v47 = 0u;
  v48 = 0u;
  v49 = 0u;
  v50 = 0u;
  -[NSMutableDictionary allKeys](self->_visibleShelves, "allKeys");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v30 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v53, 16);
  if (v30)
  {
    v29 = *(_QWORD *)v48;
    v3 = MEMORY[0x1E0C809B0];
    do
    {
      v4 = 0;
      do
      {
        if (*(_QWORD *)v48 != v29)
          objc_enumerationMutation(obj);
        v5 = *(_QWORD *)(*((_QWORD *)&v47 + 1) + 8 * v4);
        -[NSMutableDictionary objectForKey:](v2->_hiddenAppLayoutAssertionsForShelves, "objectForKey:", v5);
        v6 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v6)
        {
          v6 = (void *)objc_opt_new();
          hiddenAppLayoutAssertionsForShelves = v2->_hiddenAppLayoutAssertionsForShelves;
          if (!hiddenAppLayoutAssertionsForShelves)
          {
            v8 = objc_opt_new();
            v9 = v2->_hiddenAppLayoutAssertionsForShelves;
            v2->_hiddenAppLayoutAssertionsForShelves = (NSMutableDictionary *)v8;

            hiddenAppLayoutAssertionsForShelves = v2->_hiddenAppLayoutAssertionsForShelves;
          }
          -[NSMutableDictionary setObject:forKey:](hiddenAppLayoutAssertionsForShelves, "setObject:forKey:", v6, v5);
        }
        v32 = v4;
        objc_msgSend(v6, "allKeys");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = v2;
        -[SBSwitcherModifier hiddenAppLayoutsInShelf:](v2->_rootModifier, "hiddenAppLayoutsInShelf:", v5);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v45[0] = v3;
        v45[1] = 3221225472;
        v45[2] = __65__SBFluidSwitcherViewController__updateHiddenAppLayoutsInShelves__block_invoke;
        v45[3] = &unk_1E8E9DF78;
        v33 = v12;
        v46 = v33;
        objc_msgSend(v10, "bs_filter:", v45);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v41 = 0u;
        v42 = 0u;
        v43 = 0u;
        v44 = 0u;
        v34 = v13;
        v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v41, v52, 16);
        if (v14)
        {
          v15 = v14;
          v16 = *(_QWORD *)v42;
          do
          {
            for (i = 0; i != v15; ++i)
            {
              if (*(_QWORD *)v42 != v16)
                objc_enumerationMutation(v34);
              v18 = *(_QWORD *)(*((_QWORD *)&v41 + 1) + 8 * i);
              objc_msgSend(v6, "objectForKey:", v18);
              v19 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v6, "removeObjectForKey:", v18);
              objc_msgSend(v19, "invalidate");

            }
            v15 = objc_msgSend(v34, "countByEnumeratingWithState:objects:count:", &v41, v52, 16);
          }
          while (v15);
        }
        v39[0] = v3;
        v39[1] = 3221225472;
        v39[2] = __65__SBFluidSwitcherViewController__updateHiddenAppLayoutsInShelves__block_invoke_2;
        v39[3] = &unk_1E8E9DF78;
        v31 = v10;
        v40 = v31;
        objc_msgSend(v33, "bs_filter:", v39);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v35 = 0u;
        v36 = 0u;
        v37 = 0u;
        v38 = 0u;
        v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v35, v51, 16);
        if (v21)
        {
          v22 = v21;
          v23 = *(_QWORD *)v36;
          do
          {
            for (j = 0; j != v22; ++j)
            {
              if (*(_QWORD *)v36 != v23)
                objc_enumerationMutation(v20);
              v25 = *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * j);
              -[NSMutableDictionary objectForKey:](v11->_visibleShelves, "objectForKey:", v5);
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v26, "beginHidingAppLayout:forReason:", v25, CFSTR("switcher"));
              v27 = (void *)objc_claimAutoreleasedReturnValue();

              if (v27)
                objc_msgSend(v6, "setObject:forKey:", v27, v25);

            }
            v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v35, v51, 16);
          }
          while (v22);
        }
        v2 = v11;
        if (!-[NSMutableDictionary count](v11->_hiddenAppLayoutAssertionsForShelves, "count"))
          -[NSMutableDictionary removeObjectForKey:](v11->_hiddenAppLayoutAssertionsForShelves, "removeObjectForKey:", v5);

        v4 = v32 + 1;
        v3 = MEMORY[0x1E0C809B0];
      }
      while (v32 + 1 != v30);
      v30 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v47, v53, 16);
    }
    while (v30);
  }

}

- (void)_updateResignActiveAssertions
{
  void *v3;
  void *v4;
  NSSet *v5;
  NSSet *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSSet *resignActiveAssertions;
  NSSet *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _QWORD v17[5];
  NSSet *v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  -[SBSwitcherModifier appLayoutsToResignActive](self->_rootModifier, "appLayoutsToResignActive");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((BSEqualDictionaries() & 1) == 0)
  {
    objc_storeStrong((id *)&self->_lastAppLayoutsToResignActive, v3);
    v4 = (void *)objc_opt_new();
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 3221225472;
    v17[2] = __62__SBFluidSwitcherViewController__updateResignActiveAssertions__block_invoke;
    v17[3] = &unk_1E8EA50D8;
    v17[4] = self;
    v5 = v4;
    v18 = v5;
    objc_msgSend(v3, "enumerateKeysAndObjectsWithOptions:usingBlock:", 0, v17);
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    v6 = self->_resignActiveAssertions;
    v7 = -[NSSet countByEnumeratingWithState:objects:count:](v6, "countByEnumeratingWithState:objects:count:", &v13, v19, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v14;
      do
      {
        v10 = 0;
        do
        {
          if (*(_QWORD *)v14 != v9)
            objc_enumerationMutation(v6);
          objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v10++), "relinquish", (_QWORD)v13);
        }
        while (v8 != v10);
        v8 = -[NSSet countByEnumeratingWithState:objects:count:](v6, "countByEnumeratingWithState:objects:count:", &v13, v19, 16);
      }
      while (v8);
    }

    resignActiveAssertions = self->_resignActiveAssertions;
    self->_resignActiveAssertions = v5;
    v12 = v5;

  }
}

- (void)_updateSnapshotCache
{
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t j;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t k;
  uint64_t v29;
  void *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  _BYTE v43[128];
  _BYTE v44[128];
  _BYTE v45[128];
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  -[SBSwitcherModifier appLayoutsToCacheSnapshots](self->_rootModifier, "appLayoutsToCacheSnapshots");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = (void *)objc_opt_new();
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v5 = v3;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v39, v45, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v40;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v40 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v39 + 1) + 8 * i), "leafAppLayouts");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v4, "addObjectsFromArray:", v10);

      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v39, v45, 16);
    }
    while (v7);
  }

  v11 = v4;
  -[SBAppSwitcherSnapshotImageCache setCachableAppLayouts:](self->_snapshotCache, "setCachableAppLayouts:", v11);
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "userInterfaceIdiom");

  if ((v13 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    -[SBSwitcherModifier appLayoutsToCacheFullsizeSnapshots](self->_rootModifier, "appLayoutsToCacheFullsizeSnapshots");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = (void *)objc_opt_new();
    v35 = 0u;
    v36 = 0u;
    v37 = 0u;
    v38 = 0u;
    v16 = v14;
    v17 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v35, v44, 16);
    if (v17)
    {
      v18 = v17;
      v19 = *(_QWORD *)v36;
      do
      {
        for (j = 0; j != v18; ++j)
        {
          if (*(_QWORD *)v36 != v19)
            objc_enumerationMutation(v16);
          objc_msgSend(*(id *)(*((_QWORD *)&v35 + 1) + 8 * j), "leafAppLayouts");
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v15, "addObjectsFromArray:", v21);

        }
        v18 = objc_msgSend(v16, "countByEnumeratingWithState:objects:count:", &v35, v44, 16);
      }
      while (v18);
    }

    v22 = v15;
    v23 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithArray:", v22);
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    -[NSMutableDictionary allKeys](self->_liveContentOverlays, "allKeys");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v31, v43, 16);
    if (v25)
    {
      v26 = v25;
      v27 = *(_QWORD *)v32;
      do
      {
        for (k = 0; k != v26; ++k)
        {
          if (*(_QWORD *)v32 != v27)
            objc_enumerationMutation(v24);
          v29 = *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * k);
          -[SBFluidSwitcherViewController _itemContainerForAppLayoutIfExists:](self, "_itemContainerForAppLayoutIfExists:", v29);
          v30 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v30, "contentAlpha");
          if (BSFloatIsZero())
            objc_msgSend(v23, "removeObject:", v29);

        }
        v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v31, v43, 16);
      }
      while (v26);
    }

  }
  else
  {
    v23 = (void *)MEMORY[0x1E0C9AA60];
  }
  -[SBAppSwitcherSnapshotImageCache setFullSizeCachableAppLayouts:](self->_snapshotCache, "setFullSizeCachableAppLayouts:", v23);

}

- (void)_updateAppStatusBarAndHomeGrabberVisibilityAnimated:(BOOL)a3
{
  _BOOL8 v3;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v3 = a3;
  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v11;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(v5);
        -[SBFluidSwitcherViewController _updateStatusBarAndHomeGrabberVisibilityForAppLayout:animated:](self, "_updateStatusBarAndHomeGrabberVisibilityForAppLayout:animated:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * v9++), v3);
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v7);
  }

}

- (void)_updateSwitcherBackdropViewPresence
{
  objc_class *v3;
  int v4;
  char v5;
  _BOOL4 IsReduceTransparencyEnabled;
  id *p_backdropView;
  SBHomeScreenBackdropView *v8;
  uint64_t v9;
  char v10;
  id v11;
  id v12;
  id v13;
  SBSwitcherAccessoryLayoutElement *v14;
  SBSwitcherAccessoryLayoutElement *backdropLayoutElement;
  id v16;
  SBSwitcherAccessoryLayoutElement *v17;

  v3 = (objc_class *)objc_opt_class();
  v4 = -[SBSwitcherModifier wantsSwitcherBackdropBlur](self->_rootModifier, "wantsSwitcherBackdropBlur");
  v5 = v4;
  if (v4)
  {
    IsReduceTransparencyEnabled = UIAccessibilityIsReduceTransparencyEnabled();
    p_backdropView = (id *)&self->_backdropView;
    if (!self->_backdropView)
    {
      if (!IsReduceTransparencyEnabled)
      {
LABEL_4:
        v8 = [SBHomeScreenBackdropView alloc];
        -[SBFluidSwitcherContentView bounds](self->_contentView, "bounds");
        v9 = -[SBHomeScreenBackdropView initWithFrame:materialRecipe:scaleAdjustment:](v8, "initWithFrame:materialRecipe:scaleAdjustment:", 8, &__block_literal_global_654);
LABEL_11:
        v13 = *p_backdropView;
        *p_backdropView = (id)v9;

        objc_msgSend(*p_backdropView, "setAutoresizingMask:", 18);
        -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", *p_backdropView);
        v14 = -[SBSwitcherAccessoryLayoutElement initWithType:]([SBSwitcherAccessoryLayoutElement alloc], "initWithType:", 3);
        backdropLayoutElement = self->_backdropLayoutElement;
        self->_backdropLayoutElement = v14;

        -[SBFluidSwitcherViewController _ensureSubviewOrdering](self, "_ensureSubviewOrdering");
        return;
      }
LABEL_10:
      v12 = [v3 alloc];
      -[SBFluidSwitcherContentView bounds](self->_contentView, "bounds");
      v9 = objc_msgSend(v12, "initWithFrame:");
      goto LABEL_11;
    }
  }
  else
  {
    p_backdropView = (id *)&self->_backdropView;
    if (!self->_backdropView)
      return;
    IsReduceTransparencyEnabled = 0;
  }
  v10 = objc_msgSend((id)objc_opt_class(), "isEqual:", v3);
  if (IsReduceTransparencyEnabled && (v10 & 1) == 0)
  {
    objc_msgSend(*p_backdropView, "removeFromSuperview");
    v11 = *p_backdropView;
    *p_backdropView = 0;

    if (!IsReduceTransparencyEnabled)
      goto LABEL_4;
    goto LABEL_10;
  }
  if ((v5 & 1) == 0)
  {
    objc_msgSend(*p_backdropView, "removeFromSuperview");
    v16 = *p_backdropView;
    *p_backdropView = 0;

    v17 = self->_backdropLayoutElement;
    self->_backdropLayoutElement = 0;

  }
}

- (void)_updateFloatingDockBehaviorAssertion
{
  void *v3;
  uint64_t v4;
  void *v5;
  double v6;
  double v7;
  SBFloatingDockBehaviorAssertion *v8;
  void *v9;
  objc_class *v10;
  void *v11;
  SBFloatingDockBehaviorAssertion *v12;
  double v13;
  double v14;
  id v15;

  if (+[SBFloatingDockController isFloatingDockSupported](SBFloatingDockController, "isFloatingDockSupported"))
  {
    if (-[SBSwitcherModifier wantsDockBehaviorAssertion](self->_rootModifier, "wantsDockBehaviorAssertion")&& !-[SBFluidSwitcherViewController _shouldInterruptPresentationAndDismiss](self, "_shouldInterruptPresentationAndDismiss"))
    {
      v4 = -[SBSwitcherModifier dockUpdateMode](self->_rootModifier, "dockUpdateMode");
      -[SBFluidSwitcherViewController switcherFloatingDockBehaviorAssertion](self, "switcherFloatingDockBehaviorAssertion");
      v5 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v5)
      {
        -[SBSwitcherModifier dockProgress](self->_rootModifier, "dockProgress");
        v7 = v6;
        v8 = [SBFloatingDockBehaviorAssertion alloc];
        -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        v10 = (objc_class *)objc_opt_class();
        NSStringFromClass(v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = -[SBFloatingDockBehaviorAssertion initWithFloatingDockController:visibleProgress:animated:gesturePossible:atLevel:reason:withCompletion:](v8, "initWithFloatingDockController:visibleProgress:animated:gesturePossible:atLevel:reason:withCompletion:", v9, v4 > 2, 0, 9, v11, 0, v7);
        -[SBFluidSwitcherViewController setSwitcherFloatingDockBehaviorAssertion:](self, "setSwitcherFloatingDockBehaviorAssertion:", v12);

      }
      -[SBSwitcherModifier dockProgress](self->_rootModifier, "dockProgress");
      v14 = v13;
      -[SBFluidSwitcherViewController switcherFloatingDockBehaviorAssertion](self, "switcherFloatingDockBehaviorAssertion");
      v15 = (id)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "modifyProgress:interactive:completion:", v4 == 5, 0, v14);

    }
    else
    {
      -[SBFluidSwitcherViewController switcherFloatingDockBehaviorAssertion](self, "switcherFloatingDockBehaviorAssertion");
      v3 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v3, "invalidate");

      -[SBFluidSwitcherViewController setSwitcherFloatingDockBehaviorAssertion:](self, "setSwitcherFloatingDockBehaviorAssertion:", 0);
    }
  }
}

- (void)_configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:(id)a3
{
  id v4;
  void *v5;
  int v6;
  void *v7;
  BOOL v8;
  char v9;
  void *v10;
  SBFloatingDockBehaviorAssertion *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  SBFloatingDockWindowLevelAssertion *v18;
  uint64_t v19;
  void *v20;
  SBFloatingDockBehaviorAssertion *v21;
  SBFloatingDockWindowLevelAssertion *transientOverlayFloatingDockWindowLevelAssertion;
  SBFloatingDockBehaviorAssertion *v23;
  SBFloatingDockBehaviorAssertion *transientOverlayFloatingDockBehaviorAssertion;
  SBFloatingDockBehaviorAssertion *v25;
  _QWORD v26[5];
  id v27;
  id v28;
  _QWORD v29[5];
  SBFloatingDockWindowLevelAssertion *v30;

  v4 = a3;
  if (+[SBFloatingDockController isFloatingDockSupported](SBFloatingDockController, "isFloatingDockSupported"))
  {
    -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = -[SBSwitcherModifier shouldConfigureInAppDockHiddenAssertion](self->_rootModifier, "shouldConfigureInAppDockHiddenAssertion");
    -[SBFluidSwitcherViewController inAppFloatingDockBehaviorAssertion](self, "inAppFloatingDockBehaviorAssertion");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v6)
      v8 = v7 == 0;
    else
      v8 = 0;
    if (v8)
    {
      v11 = -[SBFloatingDockBehaviorAssertion initWithFloatingDockController:visibleProgress:animated:gesturePossible:atLevel:reason:withCompletion:]([SBFloatingDockBehaviorAssertion alloc], "initWithFloatingDockController:visibleProgress:animated:gesturePossible:atLevel:reason:withCompletion:", v5, 1, 1, 9, CFSTR("in app"), 0, 0.0);
      -[SBFluidSwitcherViewController setInAppFloatingDockBehaviorAssertion:](self, "setInAppFloatingDockBehaviorAssertion:", v11);

    }
    else
    {
      if (v7)
        v9 = v6;
      else
        v9 = 1;
      if ((v9 & 1) == 0)
      {
        -[SBFluidSwitcherViewController inAppFloatingDockBehaviorAssertion](self, "inAppFloatingDockBehaviorAssertion");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "invalidate");

        -[SBFluidSwitcherViewController setInAppFloatingDockBehaviorAssertion:](self, "setInAppFloatingDockBehaviorAssertion:", 0);
      }
    }
    objc_msgSend(v4, "request");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "transientOverlayContext");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v13, "transientOverlay");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _appLayoutForWorkspaceTransientOverlay:](self, "_appLayoutForWorkspaceTransientOverlay:", v14);
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    if (v15 && !objc_msgSend(v13, "transitionType")
      || (-[SBFluidSwitcherViewController _activeTransientOverlayPresentedAppLayout](self, "_activeTransientOverlayPresentedAppLayout"), v16 = (void *)objc_claimAutoreleasedReturnValue(), v16, v16))
    {
      v17 = MEMORY[0x1E0C809B0];
      v29[0] = MEMORY[0x1E0C809B0];
      v29[1] = 3221225472;
      v29[2] = __106__SBFluidSwitcherViewController__configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext___block_invoke;
      v29[3] = &unk_1E8E9E820;
      v29[4] = self;
      v18 = v5;
      v30 = v18;
      v19 = MEMORY[0x1D17E5550](v29);
      v20 = (void *)v19;
      if (self->_transientOverlayFloatingDockBehaviorAssertion)
      {
        (*(void (**)(uint64_t))(v19 + 16))(v19);
      }
      else
      {
        v25 = [SBFloatingDockBehaviorAssertion alloc];
        v26[0] = v17;
        v26[1] = 3221225472;
        v26[2] = __106__SBFluidSwitcherViewController__configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext___block_invoke_2;
        v26[3] = &unk_1E8EA47F0;
        v26[4] = self;
        v27 = v4;
        v28 = v20;
        v23 = -[SBFloatingDockBehaviorAssertion initWithFloatingDockController:visibleProgress:animated:gesturePossible:atLevel:reason:withCompletion:](v25, "initWithFloatingDockController:visibleProgress:animated:gesturePossible:atLevel:reason:withCompletion:", v18, 1, 1, 6, CFSTR("transient overlay"), v26, 0.0);
        transientOverlayFloatingDockBehaviorAssertion = self->_transientOverlayFloatingDockBehaviorAssertion;
        self->_transientOverlayFloatingDockBehaviorAssertion = v23;

      }
      transientOverlayFloatingDockWindowLevelAssertion = v30;
    }
    else
    {
      -[SBFloatingDockBehaviorAssertion invalidate](self->_transientOverlayFloatingDockBehaviorAssertion, "invalidate");
      v21 = self->_transientOverlayFloatingDockBehaviorAssertion;
      self->_transientOverlayFloatingDockBehaviorAssertion = 0;

      -[SBFloatingDockWindowLevelAssertion invalidate](self->_transientOverlayFloatingDockWindowLevelAssertion, "invalidate");
      transientOverlayFloatingDockWindowLevelAssertion = self->_transientOverlayFloatingDockWindowLevelAssertion;
      self->_transientOverlayFloatingDockWindowLevelAssertion = 0;
    }

  }
}

- (void)_updateSwitcherDimmingViewPresence
{
  int v3;
  UIView *dimmingView;
  id v5;
  void *v6;
  UIView *v7;
  UIView *v8;
  UIView *v9;
  void *v10;
  SBSwitcherAccessoryLayoutElement *v11;
  SBSwitcherAccessoryLayoutElement *dimmingViewLayoutElement;
  UIView *v13;
  SBSwitcherAccessoryLayoutElement *v14;

  v3 = -[SBSwitcherModifier wantsSwitcherDimmingView](self->_rootModifier, "wantsSwitcherDimmingView");
  dimmingView = self->_dimmingView;
  if (v3)
  {
    if (!dimmingView)
    {
      v5 = objc_alloc(MEMORY[0x1E0CEABB0]);
      -[SBFluidSwitcherViewController view](self, "view");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "bounds");
      v7 = (UIView *)objc_msgSend(v5, "initWithFrame:");
      v8 = self->_dimmingView;
      self->_dimmingView = v7;

      v9 = self->_dimmingView;
      objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      -[UIView setBackgroundColor:](v9, "setBackgroundColor:", v10);

      -[UIView setAlpha:](self->_dimmingView, "setAlpha:", 0.0);
      -[UIView setAutoresizingMask:](self->_dimmingView, "setAutoresizingMask:", 18);
      -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", self->_dimmingView);
      v11 = -[SBSwitcherAccessoryLayoutElement initWithType:]([SBSwitcherAccessoryLayoutElement alloc], "initWithType:", 2);
      dimmingViewLayoutElement = self->_dimmingViewLayoutElement;
      self->_dimmingViewLayoutElement = v11;

    }
  }
  else if (dimmingView)
  {
    -[UIView removeFromSuperview](dimmingView, "removeFromSuperview");
    v13 = self->_dimmingView;
    self->_dimmingView = 0;

    v14 = self->_dimmingViewLayoutElement;
    self->_dimmingViewLayoutElement = 0;

  }
}

- (void)_updateSpringBoardStatusBarVisibility
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if ((*((_BYTE *)&self->_delegateRespondsTo + 2) & 1) != 0)
  {
    v6 = v3;
    v4 = -[SBSwitcherModifier isContainerStatusBarVisible](self->_rootModifier, "isContainerStatusBarVisible") ^ 1;
    v5 = -[SBSwitcherModifier hiddenContainerStatusBarParts](self->_rootModifier, "hiddenContainerStatusBarParts");
    -[SBSwitcherModifier containerStatusBarAnimationDuration](self->_rootModifier, "containerStatusBarAnimationDuration");
    objc_msgSend(v6, "switcherContentController:setContainerStatusBarHidden:partsHidden:animationDuration:", self, v4, v5);
    v3 = v6;
  }

}

- (void)_updateReopenClosedWindowsButtonPresence
{
  void *v3;
  SBFluidSwitcherTitledButton *reopenClosedWindowsButton;
  SBFluidSwitcherTitledButton *v5;
  SBFluidSwitcherTitledButton *v6;
  SBFluidSwitcherTitledButton *v7;
  void *v8;

  -[SBSwitcherModifier appExposeAccessoryButtonsBundleIdentifier](self->_rootModifier, "appExposeAccessoryButtonsBundleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  reopenClosedWindowsButton = self->_reopenClosedWindowsButton;
  if (v3)
  {
    if (!reopenClosedWindowsButton)
    {
      v5 = objc_alloc_init(SBFluidSwitcherTitledButton);
      v6 = self->_reopenClosedWindowsButton;
      self->_reopenClosedWindowsButton = v5;

      -[SBFluidSwitcherTitledButton setAlpha:](self->_reopenClosedWindowsButton, "setAlpha:", 0.0);
      -[SBFluidSwitcherButton setBackdropGroupName:](self->_reopenClosedWindowsButton, "setBackdropGroupName:", CFSTR("AppExposeAccessoryButtonsMaterialGroupName"));
      -[SBFluidSwitcherTitledButton addTarget:action:forControlEvents:](self->_reopenClosedWindowsButton, "addTarget:action:forControlEvents:", self, sel_handleReopenClosedWindowsButtonTapped_, 64);
      -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", self->_reopenClosedWindowsButton);
      -[SBFluidSwitcherViewController _updateReopenClosedWindowsButtonText](self, "_updateReopenClosedWindowsButtonText");
      -[SBFluidSwitcherViewController view](self, "view");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "setNeedsLayout");

    }
  }
  else if (reopenClosedWindowsButton)
  {
    -[SBFluidSwitcherTitledButton removeFromSuperview](reopenClosedWindowsButton, "removeFromSuperview");
    v7 = self->_reopenClosedWindowsButton;
    self->_reopenClosedWindowsButton = 0;

  }
}

- (void)_updateKeyboardSuppressionAssertion
{
  id v3;
  void *v4;
  id obj;

  -[SBSwitcherModifier keyboardSuppressionMode](self->_rootModifier, "keyboardSuppressionMode");
  obj = (id)objc_claimAutoreleasedReturnValue();
  if (!-[SBSwitcherKeyboardSuppressionMode isEqual:](self->_lastKeyboardSuppressionMode, "isEqual:"))
  {
    objc_storeStrong((id *)&self->_lastKeyboardSuppressionMode, obj);
    +[SBSwitcherKeyboardSuppressionMode suppressionModeNone](SBSwitcherKeyboardSuppressionMode, "suppressionModeNone");
    v3 = (id)objc_claimAutoreleasedReturnValue();

    if (obj == v3)
    {
      +[SBKeyboardSuppressionManager sharedInstance](SBKeyboardSuppressionManager, "sharedInstance");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "stopSuppressingKeyboardWithReason:", self->_fluidSwitcherAssertionReason);

    }
    else
    {
      -[SBFluidSwitcherViewController _acquireKeyboardSuppressionAssertionForMode:](self, "_acquireKeyboardSuppressionAssertionForMode:", obj);
    }
  }

}

- (void)_updateForegroundAppLayoutsList
{
  NSSet *v3;
  NSSet *foregroundingAppLayouts;

  if (SBFIsMoreForegroundAppsAvailable())
  {
    -[SBSwitcherModifier foregroundAppLayouts](self->_rootModifier, "foregroundAppLayouts");
    v3 = (NSSet *)objc_claimAutoreleasedReturnValue();
    foregroundingAppLayouts = self->_foregroundingAppLayouts;
    self->_foregroundingAppLayouts = v3;

  }
}

- (void)_updateFloatingDockWindowLevelAssertion
{
  uint64_t v3;
  double v4;
  double v5;
  SBFloatingDockWindowLevelAssertion *v6;
  double v7;
  void *v8;
  SBFloatingDockWindowLevelAssertion *v9;
  objc_class *v10;
  void *v11;
  SBFloatingDockWindowLevelAssertion *v12;
  SBFloatingDockWindowLevelAssertion *switcherFloatingDockWindowLevelAssertion;
  SBFloatingDockWindowLevelAssertion *v14;

  if (-[SBSwitcherModifier wantsDockWindowLevelAssertion](self->_rootModifier, "wantsDockWindowLevelAssertion"))
  {
    v3 = -[SBSwitcherModifier dockWindowLevelPriority](self->_rootModifier, "dockWindowLevelPriority");
    -[SBSwitcherModifier dockWindowLevel](self->_rootModifier, "dockWindowLevel");
    v5 = v4;
    v14 = self->_switcherFloatingDockWindowLevelAssertion;
    if (!v14
      || -[SBFloatingDockWindowLevelAssertion priority](v14, "priority") != v3
      || (-[SBFloatingDockWindowLevelAssertion level](v14, "level"), v6 = v14, v7 != v5))
    {
      -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      v9 = [SBFloatingDockWindowLevelAssertion alloc];
      v10 = (objc_class *)objc_opt_class();
      NSStringFromClass(v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = -[SBFloatingDockWindowLevelAssertion initWithFloatingDockController:priority:level:reason:](v9, "initWithFloatingDockController:priority:level:reason:", v8, v3, v11, v5);
      switcherFloatingDockWindowLevelAssertion = self->_switcherFloatingDockWindowLevelAssertion;
      self->_switcherFloatingDockWindowLevelAssertion = v12;

      -[SBFloatingDockWindowLevelAssertion invalidate](v14, "invalidate");
      v6 = v14;
    }
  }
  else
  {
    -[SBFloatingDockWindowLevelAssertion invalidate](self->_switcherFloatingDockWindowLevelAssertion, "invalidate");
    v6 = self->_switcherFloatingDockWindowLevelAssertion;
    self->_switcherFloatingDockWindowLevelAssertion = 0;
  }

}

- (void)_updateContinuousExposeStripsCaptureOnlyBackdropLayer
{
  int v3;
  _UIBackdropView *continuousExposeStripCaptureAndBlurHomeScreenBackdropView;
  _UIBackdropView *v5;
  _UIBackdropView *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  _UIBackdropView *v12;
  void *v13;

  v3 = -[SBSwitcherModifier shouldUseWallpaperGradientTreatment](self->_rootModifier, "shouldUseWallpaperGradientTreatment");
  continuousExposeStripCaptureAndBlurHomeScreenBackdropView = self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView;
  if (v3)
  {
    if (!continuousExposeStripCaptureAndBlurHomeScreenBackdropView)
    {
      v5 = (_UIBackdropView *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEAC68]), "initWithPrivateStyle:", -2);
      v6 = self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView;
      self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView = v5;

      -[_UIBackdropView inputSettings](self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView, "inputSettings");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "setScale:", 0.1);
      objc_msgSend(v13, "setBlurRadius:", 50.0);
      objc_msgSend(v13, "setBackdropVisible:", 1);
      -[_UIBackdropView setGroupName:](self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView, "setGroupName:", CFSTR("AppSwitcherWallpaperGradient"));
      v7 = objc_opt_class();
      -[_UIBackdropView effectView](self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView, "effectView");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "layer");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      SBSafeCast(v7, v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v10, "setCaptureOnly:", 1);
      -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView);
      -[SBFluidSwitcherViewController _ensureSubviewOrdering](self, "_ensureSubviewOrdering");
      -[SBFluidSwitcherViewController view](self, "view");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "setNeedsLayout");

    }
  }
  else if (continuousExposeStripCaptureAndBlurHomeScreenBackdropView)
  {
    -[_UIBackdropView removeFromSuperview](continuousExposeStripCaptureAndBlurHomeScreenBackdropView, "removeFromSuperview");
    v12 = self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView;
    self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView = 0;

  }
}

- (void)_updateContinuousExposeStripTonguePresence
{
  uint64_t v3;
  uint64_t v4;
  SBContinuousExposeStripTongueView *continuousExposeStripTongue;
  uint64_t v6;
  SBContinuousExposeStripTongueView *v7;
  SBContinuousExposeStripTongueView *v8;
  _UIBackdropView *v9;
  _UIBackdropView *continuousExposeStripTongueCaptureOnlyBackdropView;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  SBSwitcherAccessoryLayoutElement *v17;
  SBSwitcherAccessoryLayoutElement *continuousExposeStripTongueBackdropCaptureLayoutElement;
  SBContinuousExposeStripTongueView *v19;
  uint64_t v20;
  uint64_t v21;
  SBSwitcherAccessoryLayoutElement *v22;
  SBContinuousExposeStripTongueView *v23;
  _UIBackdropView *v24;
  SBSwitcherAccessoryLayoutElement *v25;

  v4 = -[SBSwitcherModifier continuousExposeStripTongueAttributes](self->_rootModifier, "continuousExposeStripTongueAttributes");
  continuousExposeStripTongue = self->_continuousExposeStripTongue;
  if (v4 == 2)
  {
    if (!continuousExposeStripTongue)
    {
      v6 = v3;
      v7 = objc_alloc_init(SBContinuousExposeStripTongueView);
      v8 = self->_continuousExposeStripTongue;
      self->_continuousExposeStripTongue = v7;

      -[SBContinuousExposeStripTongueView setDelegate:](self->_continuousExposeStripTongue, "setDelegate:", self);
      -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", self->_continuousExposeStripTongue);
      v9 = (_UIBackdropView *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEAC68]), "initWithPrivateStyle:", -2);
      continuousExposeStripTongueCaptureOnlyBackdropView = self->_continuousExposeStripTongueCaptureOnlyBackdropView;
      self->_continuousExposeStripTongueCaptureOnlyBackdropView = v9;

      -[_UIBackdropView inputSettings](self->_continuousExposeStripTongueCaptureOnlyBackdropView, "inputSettings");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "setBlurRadius:", 0.0);

      -[_UIBackdropView inputSettings](self->_continuousExposeStripTongueCaptureOnlyBackdropView, "inputSettings");
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setScale:", 1.0);

      -[_UIBackdropView inputSettings](self->_continuousExposeStripTongueCaptureOnlyBackdropView, "inputSettings");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "setBackdropVisible:", 1);

      -[_UIBackdropView setGroupName:](self->_continuousExposeStripTongueCaptureOnlyBackdropView, "setGroupName:", CFSTR("SBContinuousExposeStripTongueBackdropName"));
      v14 = objc_opt_class();
      -[_UIBackdropView effectView](self->_continuousExposeStripTongueCaptureOnlyBackdropView, "effectView");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "layer");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      SBSafeCast(v14, v16);
      v25 = (SBSwitcherAccessoryLayoutElement *)objc_claimAutoreleasedReturnValue();

      -[SBSwitcherAccessoryLayoutElement setCaptureOnly:](v25, "setCaptureOnly:", 0);
      -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", self->_continuousExposeStripTongueCaptureOnlyBackdropView);
      v17 = -[SBSwitcherAccessoryLayoutElement initWithType:]([SBSwitcherAccessoryLayoutElement alloc], "initWithType:", 6);
      continuousExposeStripTongueBackdropCaptureLayoutElement = self->_continuousExposeStripTongueBackdropCaptureLayoutElement;
      self->_continuousExposeStripTongueBackdropCaptureLayoutElement = v17;

      -[SBFluidSwitcherViewController _ensureSubviewOrdering](self, "_ensureSubviewOrdering");
      -[SBFluidSwitcherViewController _layoutContinuousExposeStripTongueAnimated:completion:](self, "_layoutContinuousExposeStripTongueAnimated:completion:", 0, 0);
      v19 = self->_continuousExposeStripTongue;
      v20 = SBSwitcherContinuousExposeStripTongueAttributesMake(1, v6);
      -[SBContinuousExposeStripTongueView setAttributes:animated:](v19, "setAttributes:animated:", v20, v21, 0);
      -[SBContinuousExposeStripTongueView setAttributes:animated:](self->_continuousExposeStripTongue, "setAttributes:animated:", 2, v6, 1);
      v22 = v25;
LABEL_8:

    }
  }
  else if (continuousExposeStripTongue
         && !-[SBContinuousExposeStripTongueView isAnimating](continuousExposeStripTongue, "isAnimating"))
  {
    -[SBContinuousExposeStripTongueView removeFromSuperview](self->_continuousExposeStripTongue, "removeFromSuperview");
    v23 = self->_continuousExposeStripTongue;
    self->_continuousExposeStripTongue = 0;

    -[_UIBackdropView removeFromSuperview](self->_continuousExposeStripTongueCaptureOnlyBackdropView, "removeFromSuperview");
    v24 = self->_continuousExposeStripTongueCaptureOnlyBackdropView;
    self->_continuousExposeStripTongueCaptureOnlyBackdropView = 0;

    v22 = self->_continuousExposeStripTongueBackdropCaptureLayoutElement;
    self->_continuousExposeStripTongueBackdropCaptureLayoutElement = 0;
    goto LABEL_8;
  }
}

- (void)_performModifierIconViewVisibilityUpdateResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  id v23;
  uint64_t v24;
  void *v25;
  void *v26;
  _QWORD v27[4];
  id v28;
  id v29;
  SBFluidSwitcherViewController *v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _QWORD v35[4];
  id v36;
  SBFluidSwitcherViewController *v37;
  id v38;
  _BYTE v39[128];
  uint64_t v40;

  v40 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "appLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "animationSettings");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
    v7 = 3;
  else
    v7 = 2;
  -[NSMutableDictionary objectForKey:](self->_hiddenIconViews, "objectForKey:", v5);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "isVisible"))
  {
    -[NSMutableDictionary objectForKey:](self->_hiddenIconViewContainers, "objectForKey:", v5);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = (void *)MEMORY[0x1E0CEABB0];
    v35[0] = MEMORY[0x1E0C809B0];
    v35[1] = 3221225472;
    v35[2] = __82__SBFluidSwitcherViewController__performModifierIconViewVisibilityUpdateResponse___block_invoke;
    v35[3] = &unk_1E8E9E270;
    v36 = v8;
    v37 = self;
    v38 = v9;
    v11 = v9;
    objc_msgSend(v10, "sb_animateWithSettings:mode:animations:completion:", v6, v7, v35, 0);
    -[NSMutableDictionary removeObjectForKey:](self->_hiddenIconViews, "removeObjectForKey:", v5);
    -[NSMutableDictionary removeObjectForKey:](self->_hiddenIconViewContainers, "removeObjectForKey:", v5);

    v12 = v36;
    goto LABEL_24;
  }
  if (!v8)
  {
    v24 = v7;
    v25 = v6;
    v26 = v5;
    -[SBFluidSwitcherViewController iconViewForAppLayout:](self, "iconViewForAppLayout:", v5);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
    v11 = (id)objc_claimAutoreleasedReturnValue();
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    objc_msgSend(v4, "excludedIconLocations");
    v12 = (id)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v32;
      while (2)
      {
        for (i = 0; i != v15; ++i)
        {
          if (*(_QWORD *)v32 != v16)
            objc_enumerationMutation(v12);
          v18 = *(_QWORD *)(*((_QWORD *)&v31 + 1) + 8 * i);
          objc_msgSend(v13, "icon");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          LOBYTE(v18) = objc_msgSend(v11, "isDisplayingIcon:inLocation:", v19, v18);

          if ((v18 & 1) != 0)
          {
            v6 = v25;
            v5 = v26;
            goto LABEL_23;
          }
        }
        v15 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v31, v39, 16);
        if (v15)
          continue;
        break;
      }
    }

    if (!v13)
    {
      v6 = v25;
      v5 = v26;
      v8 = 0;
LABEL_25:

      goto LABEL_26;
    }
    v5 = v26;
    -[NSMutableDictionary setObject:forKey:](self->_hiddenIconViews, "setObject:forKey:", v13, v26);
    objc_msgSend(v13, "location");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = v25;
    if (objc_msgSend(v20, "isEqualToString:", *MEMORY[0x1E0CF9608]))
    {
      objc_msgSend(v11, "appPredictionsIconViewDisplayingIconView:options:", v13, 1);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      if (v21)
        -[NSMutableDictionary setObject:forKey:](self->_hiddenIconViewContainers, "setObject:forKey:", v21, v26);
    }
    else
    {
      v21 = 0;
    }
    v22 = (void *)MEMORY[0x1E0CEABB0];
    v27[0] = MEMORY[0x1E0C809B0];
    v27[1] = 3221225472;
    v27[2] = __82__SBFluidSwitcherViewController__performModifierIconViewVisibilityUpdateResponse___block_invoke_2;
    v27[3] = &unk_1E8E9E270;
    v28 = v13;
    v29 = v21;
    v30 = self;
    v23 = v21;
    v12 = v13;
    objc_msgSend(v22, "sb_animateWithSettings:mode:animations:completion:", v25, v24, v27, 0);

    v13 = v20;
LABEL_23:

    v8 = 0;
LABEL_24:

    goto LABEL_25;
  }
LABEL_26:

}

- (void)_updatePlusButtonPresence
{
  void *v3;
  void *v4;
  char v5;
  SBFluidSwitcherButton *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  SBFluidSwitcherButton *v12;
  SBFluidSwitcherButton *v13;
  SBFluidSwitcherButton *plusButton;
  void *v15;
  void *v16;

  -[SBSwitcherModifier appExposeAccessoryButtonsBundleIdentifier](self->_rootModifier, "appExposeAccessoryButtonsBundleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  v16 = v3;
  if (v3 && (v5 = objc_msgSend(v3, "isEqualToString:", CFSTR("com.apple.InCallService")), v4 = v16, (v5 & 1) == 0))
  {
    if (!self->_plusButton)
    {
      objc_msgSend(MEMORY[0x1E0CEA638], "systemImageNamed:", CFSTR("plus"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CEA650], "configurationWithPointSize:weight:", 6, 14.1);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "imageWithConfiguration:", v9);
      v10 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "imageWithTintColor:renderingMode:", v11, 1);
      v7 = (void *)objc_claimAutoreleasedReturnValue();

      v12 = [SBFluidSwitcherButton alloc];
      v13 = -[SBFluidSwitcherButton initWithFrame:](v12, "initWithFrame:", *MEMORY[0x1E0C9D648], *(double *)(MEMORY[0x1E0C9D648] + 8), *(double *)(MEMORY[0x1E0C9D648] + 16), *(double *)(MEMORY[0x1E0C9D648] + 24));
      plusButton = self->_plusButton;
      self->_plusButton = v13;

      -[SBFluidSwitcherButton setAlpha:](self->_plusButton, "setAlpha:", 0.0);
      -[SBFluidSwitcherButton setBackdropGroupName:](self->_plusButton, "setBackdropGroupName:", CFSTR("AppExposeAccessoryButtonsMaterialGroupName"));
      -[SBFluidSwitcherButton setImage:](self->_plusButton, "setImage:", v7);
      -[SBFluidSwitcherButton setAccessibilityIdentifier:](self->_plusButton, "setAccessibilityIdentifier:", CFSTR("switcher-plus-button"));
      -[SBFluidSwitcherButton addTarget:action:forControlEvents:](self->_plusButton, "addTarget:action:forControlEvents:", self, sel__handlePlusButtonTapped_, 64);
      -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", self->_plusButton);
      -[SBFluidSwitcherViewController view](self, "view");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "setNeedsLayout");

      goto LABEL_7;
    }
  }
  else
  {
    v6 = self->_plusButton;
    if (v6)
    {
      -[SBFluidSwitcherButton removeFromSuperview](v6, "removeFromSuperview");
      v7 = self->_plusButton;
      self->_plusButton = 0;
LABEL_7:

      v4 = v16;
    }
  }

}

void __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  CGFloat v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  uint64_t v39;
  void *v40;
  double v41;
  CGFloat v42;
  double v43;
  CGFloat v44;
  double v45;
  CGFloat v46;
  double v47;
  CGFloat v48;
  double v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  double v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  uint64_t v68;
  void *v69;
  void *v70;
  uint64_t v71;
  void *v72;
  void *v73;
  uint64_t v74;
  void *v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  void *v81;
  void *v82;
  uint64_t v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  void *v91;
  uint64_t v92;
  double v93;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  int v99;
  double v100;
  double v101;
  int v102;
  int v103;
  double v104;
  double v105;
  void *v106;
  double v107;
  double v108;
  BOOL v109;
  void *v110;
  void *v111;
  int v112;
  uint64_t v113;
  void *v114;
  void *v115;
  int v116;
  void *v117;
  void *v118;
  uint64_t v119;
  int v120;
  int v121;
  int v122;
  void *v123;
  void *v124;
  char v125;
  double v126;
  double v127;
  double v128;
  double v129;
  double v130;
  double v131;
  double v132;
  double v133;
  double v134;
  double v135;
  double v136;
  double v137;
  void *v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t i;
  void *v143;
  void *v144;
  int v145;
  void *v146;
  double v147;
  double v148;
  void *v149;
  int v150;
  double v151;
  double v152;
  void *v153;
  int v154;
  double v155;
  double v156;
  void *v157;
  int v158;
  void *v159;
  double v160;
  double v161;
  double v162;
  double v163;
  void *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t j;
  void *v168;
  void *v169;
  void *v170;
  void *v171;
  char v172;
  uint64_t v173;
  int v174;
  double v175;
  void *v176;
  double v177;
  id v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unsigned int v184;
  uint64_t v185;
  uint64_t v186;
  double v187;
  double v188;
  double v189;
  double v190;
  uint64_t v191;
  uint64_t v192;
  double v193;
  unsigned int v194;
  uint64_t v195;
  double v196;
  double v197;
  double v198;
  void *v199;
  void *v200;
  void *v201;
  double v202;
  double v203;
  double v204;
  double v205;
  double v206;
  double v207;
  void *v208;
  void *v209;
  void *v210;
  void *v211;
  uint64_t v212;
  uint64_t v213;
  void *v214;
  void *v215;
  void *v216;
  uint64_t v217;
  id v218;
  void *v219;
  void *v220;
  uint64_t v221;
  id v222;
  void *v223;
  double v224;
  double v225;
  double MinX;
  double Width;
  double v228;
  uint64_t v229;
  void *v230;
  void *v231;
  void *v232;
  id v233;
  void *v234;
  void *v235;
  void *v236;
  BOOL v237;
  int v238;
  void *v239;
  void *v240;
  int v241;
  void *v242;
  int v243;
  void *v244;
  void *v245;
  void *v246;
  id v247;
  void *v248;
  void *v249;
  void (**v250)(id, const __CFString *);
  id v251;
  uint64_t v252;
  void *v253;
  int v254;
  _BOOL4 v255;
  void *v256;
  void *v257;
  uint64_t v258;
  id v259;
  void *v260;
  id v261;
  void *v262;
  void *v263;
  void *v264;
  void *v265;
  uint64_t v266;
  uint64_t v267;
  void *v268;
  void *v269;
  id v270;
  void *v271;
  void *v272;
  void *v273;
  void *v274;
  void *v275;
  id v276;
  id v277;
  void *v278;
  void *v279;
  void *v280;
  void *v281;
  id v282;
  void *v283;
  void *v284;
  id *v285;
  void *v286;
  double v287;
  double v288;
  void *v289;
  double v290;
  double v291;
  double v292;
  void *v293;
  void *v294;
  void *v295;
  void *v296;
  void *v297;
  double v298;
  double v299;
  void *v300;
  double v301;
  double v302;
  double v303;
  void *v304;
  void *v305;
  void *v306;
  void *v307;
  double v308;
  BOOL v309;
  double v310;
  char v311;
  void *v312;
  void *v313;
  int v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  double v329;
  void *v330;
  id v331;
  id v332;
  void *v333;
  void *v334;
  id v335;
  id v336;
  void *v337;
  void *v338;
  id v339;
  id v340;
  id v341;
  void *v342;
  void *v343;
  id v344;
  id v345;
  void *v346;
  void *v347;
  id v348;
  uint64_t v349;
  id v350;
  void *v351;
  uint64_t v352;
  void *v353;
  void *v354;
  void *v355;
  uint64_t v356;
  id v357;
  uint64_t v358;
  void *v359;
  double v360;
  uint64_t v361;
  void *v362;
  uint64_t v363;
  void *v364;
  void *v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  CGFloat Height;
  CGFloat MinY;
  double MaxX;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  double v377;
  double v378;
  unsigned int v379;
  uint64_t v380;
  id v381;
  uint64_t v382;
  double v383;
  uint64_t v384;
  uint64_t v385;
  char v386;
  unsigned int v387;
  uint64_t v388;
  uint64_t v389;
  double v390;
  double v391;
  double v392;
  uint64_t v393;
  id v394;
  id v395;
  double v396;
  double v397;
  double v398;
  double v399;
  void *v400;
  id obj;
  id v402;
  unsigned int v403;
  double v404;
  unsigned int v405;
  id v406;
  uint64_t v407;
  void *v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  unsigned int v412;
  uint64_t v413;
  double v414;
  CGFloat v415;
  CGFloat v416;
  CGFloat v417;
  CGFloat v418;
  uint64_t v419;
  double v420;
  double v421;
  uint64_t v422;
  double v423;
  double v424;
  uint64_t v425;
  double v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  double v430;
  uint64_t v431;
  double v432;
  double v433;
  uint64_t v434;
  void *v435;
  double v436;
  void *v437;
  double v438;
  void *v439;
  uint64_t v440;
  double v441;
  double v442;
  uint64_t v443;
  double v444;
  unsigned int v445;
  double v446;
  double v447;
  double v448;
  id v449;
  void *v450;
  void *v451;
  void *v452;
  double v453;
  double v454;
  int v455;
  void *v456;
  id v457;
  int v458;
  id v459;
  void (**v460)(id, const __CFString *);
  double rect;
  id recta;
  void *v463;
  id v464;
  uint64_t v465;
  id v466;
  double v467;
  uint64_t v468;
  _QWORD v469[4];
  id v470;
  uint64_t v471;
  _QWORD v472[4];
  id v473;
  uint64_t v474;
  id v475;
  double v476;
  double v477;
  uint64_t v478;
  CATransform3D v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  double v484;
  _QWORD v485[4];
  id v486;
  id v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  double v492;
  double v493;
  double v494;
  double v495;
  _QWORD v496[4];
  id v497;
  id v498;
  id v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  double v507;
  CGFloat v508;
  double v509;
  CGFloat v510;
  _QWORD v511[4];
  id v512;
  id v513;
  double v514;
  double v515;
  double v516;
  double v517;
  _QWORD v518[4];
  id v519;
  id v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  _QWORD v527[4];
  id v528;
  __int128 *v529;
  uint64_t v530;
  _QWORD v531[4];
  id v532;
  id v533;
  double v534;
  double v535;
  double v536;
  uint64_t v537;
  double v538;
  double v539;
  double v540;
  _QWORD v541[5];
  id v542;
  uint64_t v543;
  _QWORD v544[4];
  id v545;
  CGFloat v546;
  CGFloat v547;
  CGFloat v548;
  CGFloat v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  _QWORD v554[4];
  id v555;
  id v556;
  id v557;
  void (**v558)(id, const __CFString *);
  uint64_t v559;
  double v560;
  double v561;
  double v562;
  double v563;
  double v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  double v568;
  double v569;
  double v570;
  double v571;
  uint64_t v572;
  _QWORD v573[4];
  id v574;
  id v575;
  _QWORD v576[4];
  id v577;
  id v578;
  _QWORD v579[4];
  id v580;
  double v581;
  double v582;
  char v583;
  _QWORD v584[4];
  id v585;
  _QWORD v586[4];
  id v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  _QWORD v592[4];
  id v593;
  id v594;
  _QWORD v595[4];
  id v596;
  id v597;
  double v598;
  double v599;
  double v600;
  double v601;
  double v602;
  double v603;
  char v604;
  char v605;
  _QWORD v606[5];
  _QWORD v607[5];
  _QWORD v608[4];
  id v609;
  uint64_t v610;
  double v611;
  double v612;
  double v613;
  double v614;
  double v615;
  __int128 v616;
  __int128 v617;
  __int128 v618;
  __int128 v619;
  __int128 v620;
  __int128 v621;
  __int128 v622;
  __int128 v623;
  __int128 v624;
  __int128 v625;
  __int128 v626;
  __int128 v627;
  __int128 v628;
  __int128 v629;
  __int128 v630;
  __int128 v631;
  __int128 v632;
  __int128 v633;
  __int128 v634;
  __int128 v635;
  CATransform3D v636;
  _BYTE v637[128];
  __int128 v638;
  __int128 v639;
  __int128 v640;
  __int128 v641;
  __int128 v642;
  __int128 v643;
  __int128 v644;
  __int128 v645;
  _BYTE v646[128];
  _BYTE v647[128];
  uint64_t v648;
  CGRect v649;
  CGRect v650;
  CGRect v651;
  CGRect v652;
  CGRect v653;
  CGRect v654;
  CGRect v655;
  CGRect v656;
  CGRect v657;
  CGRect v658;

  v648 = *MEMORY[0x1E0C80C00];
  v460 = a2;
  v468 = a1;
  objc_msgSend(*(id *)(a1 + 32), "appLayouts");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "indexOfObject:", *(_QWORD *)(v468 + 40));

  if (v4 != 0x7FFFFFFFFFFFFFFFLL)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "anchorPointForIndex:", v4);
    v424 = v5;
    v423 = v6;
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "frameForIndex:", v4);
    v420 = v8;
    v421 = v7;
    v10 = v9;
    v12 = v11;
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "scaleForIndex:", v4);
    v14 = v13;
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "rotationAngleForIndex:", v4);
    v391 = v15;
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "cornerRadiiForIndex:", v4);
    v398 = v17;
    v399 = v16;
    v396 = v19;
    v397 = v18;
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "minimumTranslationToKillIndex:", v4);
    v385 = v20;
    v426 = v14;
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "contentPageViewScaleForAppLayout:withScale:", *(_QWORD *)(v468 + 40), v14);
    v392 = v21;
    v387 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldScaleOverlayToFillBoundsAtIndex:", v4);
    v379 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldScaleContentToFillBoundsAtIndex:", v4);
    v22 = *(void **)(*(_QWORD *)(v468 + 32) + 1936);
    v454 = v10;
    v453 = v12;
    SBRectWithSize();
    objc_msgSend(v22, "clippingFrameForIndex:withBounds:", v4);
    v375 = v24;
    v376 = v23;
    v373 = v26;
    v374 = v25;
    v405 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "clipsToBoundsAtIndex:", v4);
    v393 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "maskedCornersForIndex:", v4);
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "perspectiveAngleForAppLayout:", *(_QWORD *)(v468 + 40));
    v384 = v27;
    v440 = v4;
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "meshTransformForIndex:", v4);
    v406 = (id)objc_claimAutoreleasedReturnValue();
    v28 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
    *(_OWORD *)&v636.m11 = *MEMORY[0x1E0CD2610];
    *(_OWORD *)&v636.m13 = v28;
    v29 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
    *(_OWORD *)&v636.m21 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    *(_OWORD *)&v636.m23 = v29;
    v30 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
    *(_OWORD *)&v636.m41 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
    *(_OWORD *)&v636.m43 = v30;
    v31 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
    *(_OWORD *)&v636.m31 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    *(_OWORD *)&v636.m33 = v31;
    v32 = objc_msgSend(*(id *)(v468 + 32), "_bestSupportedHomeAffordanceOrientationForOrientation:inAppLayout:", *(_QWORD *)(*(_QWORD *)(v468 + 32) + 1792), *(_QWORD *)(v468 + 40));
    v33 = *(_QWORD *)(v468 + 32);
    if (v32 != *(_QWORD *)(v33 + 1792))
    {
      SBFAngleForRotationFromInterfaceOrientationToInterfaceOrientation();
      CATransform3DMakeRotation(&v636, v34, 0.0, 0.0, 1.0);
      v33 = *(_QWORD *)(v468 + 32);
    }
    objc_msgSend(*(id *)(v33 + 1936), "resizeGrabberLayoutAttributesForAppLayout:", *(_QWORD *)(v468 + 40));
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "leafAppLayout");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1296), "objectForKey:", v36);
    v37 = (void *)objc_claimAutoreleasedReturnValue();
    if (v37)
    {
      objc_msgSend(v36, "itemForLayoutRole:", 1);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = objc_msgSend(v37, "layoutRoleForItem:", v38);

      v40 = *(void **)(*(_QWORD *)(v468 + 32) + 1936);
      SBRectWithSize();
      objc_msgSend(v40, "frameForLayoutRole:inAppLayout:withBounds:", v39, v37);
      v42 = v41;
      v44 = v43;
      v46 = v45;
      v48 = v47;
      objc_msgSend(*(id *)(v468 + 32), "separatorViewWidth");
      v377 = v49;
      if (objc_msgSend(v35, "edge") == 2)
      {
        v649.origin.x = v42;
        v649.origin.y = v44;
        v649.size.width = v46;
        v649.size.height = v48;
        MaxX = CGRectGetMinX(v649) - v377;
      }
      else
      {
        v650.origin.x = v42;
        v650.origin.y = v44;
        v650.size.width = v46;
        v650.size.height = v48;
        MaxX = CGRectGetMaxX(v650);
      }
      v651.origin.x = v42;
      v651.origin.y = v44;
      v651.size.width = v46;
      v651.size.height = v48;
      MinY = CGRectGetMinY(v651);
      v652.origin.x = v42;
      v652.origin.y = v44;
      v652.size.width = v46;
      v652.size.height = v48;
      Height = CGRectGetHeight(v652);
    }
    else
    {
      MinY = *(double *)(MEMORY[0x1E0C9D648] + 8);
      MaxX = *MEMORY[0x1E0C9D648];
      v377 = *(double *)(MEMORY[0x1E0C9D648] + 16);
      Height = *(double *)(MEMORY[0x1E0C9D648] + 24);
    }

    v366 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "footerViewIconAlignmentForAppLayout:", *(_QWORD *)(v468 + 40));
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "contentViewOffsetForAccessoriesOfAppLayout:", *(_QWORD *)(v468 + 40));
    v368 = v51;
    v369 = v50;
    v367 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "multipleWindowsIndicatorLayoutRoleMaskForAppLayout:", *(_QWORD *)(v468 + 40));
    v386 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldUseWallpaperGradientTreatment");
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "wallpaperGradientAttributesForIndex:", v440);
    v390 = v52;
    v404 = v53;
    v445 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldPerformRotationAnimationForOrientationChange");
    objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "animationAttributesForLayoutElement:", *(_QWORD *)(v468 + 40));
    v435 = (void *)objc_claimAutoreleasedReturnValue();
    v54 = objc_msgSend(v435, "updateMode");
    v55 = objc_msgSend(v435, "layoutUpdateMode");
    if (v55)
      v56 = v55;
    else
      v56 = v54;
    v388 = v56;
    v57 = objc_msgSend(v435, "positionUpdateMode");
    if (v57)
      v58 = v57;
    else
      v58 = v54;
    v422 = v58;
    v59 = objc_msgSend(v435, "scaleUpdateMode");
    if (v59)
      v60 = v59;
    else
      v60 = v54;
    v407 = v60;
    v61 = objc_msgSend(v435, "cornerRadiusUpdateMode");
    if (v61)
      v62 = v61;
    else
      v62 = v54;
    v389 = v62;
    v63 = objc_msgSend(v435, "clippingUpdateMode");
    if (v63)
      v64 = v63;
    else
      v64 = v54;
    v380 = v64;
    v382 = objc_msgSend(v435, "meshUpdateMode");
    if (!v382)
      v382 = objc_msgSend(v435, "updateMode");
    objc_msgSend(v435, "layoutSettings");
    v400 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v435, "positionSettings");
    v65 = objc_claimAutoreleasedReturnValue();
    v66 = (void *)v65;
    v67 = v400;
    if (v65)
      v67 = (void *)v65;
    v402 = v67;

    objc_msgSend(v435, "scaleSettings");
    v68 = objc_claimAutoreleasedReturnValue();
    v69 = (void *)v68;
    v70 = v400;
    if (v68)
      v70 = (void *)v68;
    v394 = v70;

    objc_msgSend(v435, "cornerRadiusSettings");
    v71 = objc_claimAutoreleasedReturnValue();
    v72 = (void *)v71;
    v73 = v400;
    if (v71)
      v73 = (void *)v71;
    v395 = v73;

    objc_msgSend(v435, "clippingSettings");
    v74 = objc_claimAutoreleasedReturnValue();
    v75 = (void *)v74;
    v76 = v400;
    if (v74)
      v76 = (void *)v74;
    v381 = v76;

    if (kKeyboardHeightIncludingAccessory_block_invoke_onceToken != -1)
      dispatch_once(&kKeyboardHeightIncludingAccessory_block_invoke_onceToken, &__block_literal_global_457);
    v634 = 0u;
    v635 = 0u;
    v632 = 0u;
    v633 = 0u;
    objc_msgSend(*(id *)(v468 + 40), "leafAppLayouts");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v425 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v632, v647, 16);
    if (v425)
    {
      v419 = *(_QWORD *)v633;
      v383 = v421 + (0.5 - v424) * v454;
      v378 = v390 - v404;
      do
      {
        v77 = 0;
        do
        {
          if (*(_QWORD *)v633 != v419)
          {
            v78 = v77;
            objc_enumerationMutation(obj);
            v77 = v78;
          }
          v443 = v77;
          v79 = *(void **)(v468 + 40);
          v452 = *(void **)(*((_QWORD *)&v632 + 1) + 8 * v77);
          objc_msgSend(v452, "allItems");
          v80 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v80, "firstObject");
          v81 = (void *)objc_claimAutoreleasedReturnValue();
          v465 = objc_msgSend(v79, "layoutRoleForItem:", v81);

          if (SBLayoutRoleMaskContainsRole(*(_QWORD *)(v468 + 48), v465))
          {
            objc_msgSend(*(id *)(v468 + 32), "_itemContainerForAppLayoutIfExists:", v452);
            v463 = (void *)objc_claimAutoreleasedReturnValue();
            v455 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldPinLayoutRolesToSpace:", v440);
            if (v455)
              v458 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldUseAnchorPointToPinLayoutRolesToSpace:", v440);
            else
              v458 = 0;
            v82 = *(void **)(*(_QWORD *)(v468 + 32) + 1936);
            v83 = *(_QWORD *)(v468 + 40);
            SBRectWithSize();
            objc_msgSend(v82, "frameForLayoutRole:inAppLayout:withBounds:", v465, v83);
            v446 = v84;
            v444 = v85;
            rect = v86;
            v88 = v87;
            objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "scaleForLayoutRole:inAppLayout:", v465, *(_QWORD *)(v468 + 40));
            v90 = v89;
            v91 = *(void **)(*(_QWORD *)(v468 + 32) + 1936);
            v92 = *(_QWORD *)(v468 + 40);
            SBRectWithSize();
            objc_msgSend(v91, "clippingFrameForLayoutRole:inAppLayout:atIndex:withBounds:", v465, v92, v440);
            v417 = v94;
            v418 = v93;
            v415 = v96;
            v416 = v95;
            v97 = 0.5 - v423;
            v98 = 0.5 - v424;
            v447 = v423;
            v448 = v424;
            if (v458)
            {
              v448 = -(v446 - v454 * v424) / v88;
              v98 = 0.5 - v448;
              v447 = -(v444 - v453 * v423) / rect;
              v97 = 0.5 - v447;
            }
            v99 = objc_msgSend(*(id *)(v468 + 32), "isChamoisWindowingUIEnabled");
            v100 = v420 + (0.5 - v423) * v453 + v444 - v97 * rect;
            if (v99)
            {
              v441 = v383 + v446 - v98 * v88 + (1.0 - v90) * (v88 * v98) * v426;
              v100 = v100 + (1.0 - v90) * (rect * v97) * v426;
            }
            else
            {
              v441 = v383 + v446 - v98 * v88;
            }
            v442 = v100;
            v432 = v426 * v90;
            v101 = 0.0;
            v433 = 0.0;
            v102 = v455 & (v458 ^ 1);
            if (v102)
            {
              v103 = objc_msgSend(*(id *)(v468 + 32), "isChamoisWindowingUIEnabled");
              v104 = v426;
              if (!v103)
                v104 = v426 * v90;
              v105 = 1.0 - v104;
              v433 = v88 * (-(v446 - v454 * v424) / v88 - v448) * v105;
              v101 = rect * (-(v444 - v453 * v423) / rect - v447) * v105;
            }
            v414 = v101;
            objc_msgSend(v463, "layer");
            v106 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v106, "anchorPoint");
            v109 = v108 == v447 && v107 == v448;

            v434 = v422;
            if (!v109 && v422 == 4)
            {
              objc_msgSend(v463, "layer");
              v110 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v110, "presentationModifiers");
              v111 = (void *)objc_claimAutoreleasedReturnValue();

              v112 = objc_msgSend(v111, "bs_containsObjectPassingTest:", &__block_literal_global_459);
              v113 = 4;
              if (v112)
                v113 = 5;
              v434 = v113;

            }
            objc_msgSend(v463, "layer");
            v114 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v114, "presentationModifiers");
            v115 = (void *)objc_claimAutoreleasedReturnValue();

            v116 = objc_msgSend(v115, "bs_containsObjectPassingTest:", &__block_literal_global_462);
            v630 = 0u;
            v631 = 0u;
            v628 = 0u;
            v629 = 0u;
            v626 = 0u;
            v627 = 0u;
            v624 = 0u;
            v625 = 0u;
            objc_msgSend(v463, "layer");
            v117 = (void *)objc_claimAutoreleasedReturnValue();
            v118 = v117;
            if (v117)
            {
              objc_msgSend(v117, "transform");
            }
            else
            {
              v630 = 0u;
              v631 = 0u;
              v628 = 0u;
              v629 = 0u;
              v626 = 0u;
              v627 = 0u;
              v624 = 0u;
              v625 = 0u;
            }

            v119 = v407;
            if (((v102 ^ 1 | v116) & 1) == 0)
            {
              v120 = BSFloatEqualToFloat();
              v119 = v407;
              if (v120)
              {
                v121 = BSFloatEqualToFloat();
                v119 = v407;
                if (v121)
                {
                  v122 = BSFloatEqualToFloat();
                  v119 = v434;
                  if (v122)
                    v119 = v407;
                }
              }
            }
            v413 = v119;

            if ((v458 | v445) == 1)
            {
              objc_msgSend(v463, "layer");
              v123 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v123, "anchorPoint");
              if ((BSFloatEqualToFloat() & 1) != 0)
              {
                objc_msgSend(v463, "layer");
                v124 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v124, "anchorPoint");
                v125 = BSFloatEqualToFloat();

                if ((v125 & 1) != 0)
                  goto LABEL_121;
              }
              else
              {

              }
              objc_msgSend(v463, "layer");
              v450 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v450, "position");
              v127 = v126;
              v129 = v128;
              objc_msgSend(v450, "bounds");
              v131 = v130;
              v133 = v132;
              objc_msgSend(v450, "anchorPoint");
              v135 = v134;
              v137 = v136;
              v630 = 0u;
              v631 = 0u;
              v628 = 0u;
              v629 = 0u;
              v626 = 0u;
              v627 = 0u;
              v624 = 0u;
              v625 = 0u;
              v138 = v450;
              if (v450)
              {
                objc_msgSend(v450, "transform");
                v138 = v450;
              }
              v622 = 0u;
              v623 = 0u;
              v620 = 0u;
              v621 = 0u;
              objc_msgSend(v138, "presentationModifiers");
              v139 = (void *)objc_claimAutoreleasedReturnValue();
              v140 = objc_msgSend(v139, "countByEnumeratingWithState:objects:count:", &v620, v646, 16);
              if (v140)
              {
                v141 = *(_QWORD *)v621;
                do
                {
                  for (i = 0; i != v140; ++i)
                  {
                    if (*(_QWORD *)v621 != v141)
                      objc_enumerationMutation(v139);
                    v143 = *(void **)(*((_QWORD *)&v620 + 1) + 8 * i);
                    objc_msgSend(v143, "keyPath");
                    v144 = (void *)objc_claimAutoreleasedReturnValue();
                    v145 = objc_msgSend(v144, "isEqual:", CFSTR("position"));

                    if (v145)
                    {
                      objc_msgSend(v143, "value");
                      v146 = (void *)objc_claimAutoreleasedReturnValue();
                      objc_msgSend(v146, "CGPointValue");
                      v127 = v147;
                      v129 = v148;
                    }
                    else
                    {
                      objc_msgSend(v143, "keyPath");
                      v149 = (void *)objc_claimAutoreleasedReturnValue();
                      v150 = objc_msgSend(v149, "isEqual:", CFSTR("bounds"));

                      if (v150)
                      {
                        objc_msgSend(v143, "value");
                        v146 = (void *)objc_claimAutoreleasedReturnValue();
                        objc_msgSend(v146, "CGRectValue");
                        v131 = v151;
                        v133 = v152;
                      }
                      else
                      {
                        objc_msgSend(v143, "keyPath");
                        v153 = (void *)objc_claimAutoreleasedReturnValue();
                        v154 = objc_msgSend(v153, "isEqual:", CFSTR("anchorPoint"));

                        if (v154)
                        {
                          objc_msgSend(v143, "value");
                          v146 = (void *)objc_claimAutoreleasedReturnValue();
                          objc_msgSend(v146, "CGPointValue");
                          v135 = v155;
                          v137 = v156;
                        }
                        else
                        {
                          objc_msgSend(v143, "keyPath");
                          v157 = (void *)objc_claimAutoreleasedReturnValue();
                          v158 = objc_msgSend(v157, "isEqual:", CFSTR("transform"));

                          if (!v158)
                            continue;
                          objc_msgSend(v143, "value");
                          v159 = (void *)objc_claimAutoreleasedReturnValue();
                          v146 = v159;
                          if (v159)
                          {
                            objc_msgSend(v159, "CATransform3DValue");
                          }
                          else
                          {
                            v644 = 0u;
                            v645 = 0u;
                            v642 = 0u;
                            v643 = 0u;
                            v640 = 0u;
                            v641 = 0u;
                            v638 = 0u;
                            v639 = 0u;
                          }
                          v628 = v642;
                          v629 = v643;
                          v630 = v644;
                          v631 = v645;
                          v624 = v638;
                          v625 = v639;
                          v626 = v640;
                          v627 = v641;
                        }
                      }
                    }

                  }
                  v140 = objc_msgSend(v139, "countByEnumeratingWithState:objects:count:", &v620, v646, 16);
                }
                while (v140);
              }

              v160 = *(double *)&v630;
              v161 = *(double *)&v624;
              v162 = *((double *)&v626 + 1);
              v163 = 0.0;
              if (!v458)
                v163 = *(double *)&v630;
              v438 = v163;
              if ((unint64_t)(v434 - 3) > 0xFFFFFFFFFFFFFFFDLL)
              {
                v173 = 2;
              }
              else
              {
                v430 = *(double *)&v624;
                v436 = *((double *)&v626 + 1);
                v618 = 0u;
                v619 = 0u;
                v616 = 0u;
                v617 = 0u;
                objc_msgSend(v450, "presentationModifiers");
                v164 = (void *)objc_claimAutoreleasedReturnValue();
                v165 = objc_msgSend(v164, "countByEnumeratingWithState:objects:count:", &v616, v637, 16);
                if (v165)
                {
                  v166 = *(_QWORD *)v617;
                  while (2)
                  {
                    for (j = 0; j != v165; ++j)
                    {
                      if (*(_QWORD *)v617 != v166)
                        objc_enumerationMutation(v164);
                      v168 = *(void **)(*((_QWORD *)&v616 + 1) + 8 * j);
                      objc_msgSend(v168, "keyPath");
                      v169 = (void *)objc_claimAutoreleasedReturnValue();
                      if ((objc_msgSend(v169, "isEqualToString:", CFSTR("position")) & 1) != 0)
                        goto LABEL_113;
                      objc_msgSend(v168, "keyPath");
                      v170 = (void *)objc_claimAutoreleasedReturnValue();
                      if (objc_msgSend(v170, "isEqualToString:", CFSTR("bounds")))
                      {

LABEL_113:
LABEL_114:
                        v173 = v434;
                        goto LABEL_115;
                      }
                      objc_msgSend(v168, "keyPath");
                      v171 = (void *)objc_claimAutoreleasedReturnValue();
                      v172 = objc_msgSend(v171, "isEqualToString:", CFSTR("transform"));

                      if ((v172 & 1) != 0)
                        goto LABEL_114;
                    }
                    v165 = objc_msgSend(v164, "countByEnumeratingWithState:objects:count:", &v616, v637, 16);
                    v173 = 2;
                    if (v165)
                      continue;
                    break;
                  }
                }
                else
                {
                  v173 = 2;
                }
LABEL_115:

                v174 = v455;
                if (v173 == v434)
                  v174 = 1;
                if (!v174)
                  v173 = v434;
                v162 = v436;
                v161 = v430;
              }
              v175 = v160 + v127 - v131 * v161 * v135 + v448 * (v131 * v161);
              v176 = (void *)MEMORY[0x1E0CEABB0];
              v608[0] = MEMORY[0x1E0C809B0];
              v608[1] = 3221225472;
              v177 = v129 - v133 * v162 * v137 + v447 * (v133 * v162);
              v608[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_5;
              v608[3] = &unk_1E8EA4868;
              v178 = v463;
              v611 = v448;
              v612 = v447;
              v613 = v175;
              v614 = v177;
              v615 = v438;
              v179 = *(_QWORD *)(v468 + 32);
              v609 = v178;
              v610 = v179;
              objc_msgSend(v176, "sb_animateWithSettings:mode:animations:completion:", v402, v173, v608, 0);

            }
LABEL_121:
            objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "cornerRadiiForLayoutRole:inAppLayout:withCornerRadii:", v465, *(_QWORD *)(v468 + 40), v399, v398, v397, v396);
            v431 = v180;
            v429 = v181;
            v428 = v182;
            v427 = v183;
            v411 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "maskedCornersForLayoutRole:inAppLayout:withMaskedCorners:", v465, *(_QWORD *)(v468 + 40), v393);
            v184 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "isLayoutRoleBlurred:inAppLayout:", v465, *(_QWORD *)(v468 + 40));
            v185 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "blurTargetPreferenceForLayoutRole:inAppLayout:", v465, *(_QWORD *)(v468 + 40));
            v412 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "canLayoutRoleParticipateInSwitcherDragAndDrop:appLayout:", v465, *(_QWORD *)(v468 + 40));
            v186 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "isLayoutRoleDraggable:inAppLayout:", v465, *(_QWORD *)(v468 + 40));
            v403 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldUseNonuniformSnapshotScalingForLayoutRole:inAppLayout:", v465, *(_QWORD *)(v468 + 40));
            objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "blurDelayForLayoutRole:inAppLayout:", v465, *(_QWORD *)(v468 + 40));
            v188 = v187;
            objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "blurViewIconScaleForIndex:", v440);
            v190 = v189;
            objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "contentViewOffsetForLayoutRole:inAppLayout:", v465, *(_QWORD *)(v468 + 40));
            v409 = v192;
            v410 = v191;
            v193 = 0.5;
            if (objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldTetherItemsAndAccessoriesInAppLayout:", *(_QWORD *)(v468 + 40)))v193 = (v454 * 0.5 - v446) / v88;
            v607[0] = MEMORY[0x1E0C809B0];
            v607[1] = 3221225472;
            v607[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_8;
            v607[3] = &unk_1E8E9DED8;
            v607[4] = *(_QWORD *)(v468 + 32);
            v439 = (void *)MEMORY[0x1D17E5550](v607);
            v606[0] = MEMORY[0x1E0C809B0];
            v606[1] = 3221225472;
            v606[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_9;
            v606[3] = &unk_1E8E9DED8;
            v606[4] = *(_QWORD *)(v468 + 32);
            v437 = (void *)MEMORY[0x1D17E5550](v606);
            objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1872), "objectForKey:", v452);
            v456 = (void *)objc_claimAutoreleasedReturnValue();
            if (v456)
              v194 = v184;
            else
              v194 = 0;
            if (v185 == 1)
              v195 = 0;
            else
              v195 = v194;
            objc_msgSend(v463, "bounds");
            if (v88 == v198 && (v196 = rect, rect == v197))
            {
              v408 = 0;
            }
            else
            {
              objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "resizeProgressNotificationsForLayoutRole:inAppLayout:", v465, *(_QWORD *)(v468 + 40), v196);
              v199 = (void *)objc_claimAutoreleasedReturnValue();
              if (objc_msgSend(v199, "count"))
              {
                v200 = *(void **)(v468 + 32);
                objc_opt_self();
                v201 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v200, "_animatablePropertyWithNotifications:progressEventType:", v199, v201);
                v408 = (void *)objc_claimAutoreleasedReturnValue();

              }
              else
              {
                v408 = 0;
              }

            }
            objc_msgSend(v463, "center", v196);
            v203 = v202;
            v205 = v204;
            UIRectGetCenter();
            if (v203 == v207 && v205 == v206)
            {
              v208 = 0;
            }
            else
            {
              objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "repositionProgressNotificationsForLayoutRole:inAppLayout:", v465, *(_QWORD *)(v468 + 40));
              v209 = (void *)objc_claimAutoreleasedReturnValue();
              if (objc_msgSend(v209, "count"))
              {
                v210 = *(void **)(v468 + 32);
                objc_opt_self();
                v211 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v210, "_animatablePropertyWithNotifications:progressEventType:", v209, v211);
                v208 = (void *)objc_claimAutoreleasedReturnValue();

              }
              else
              {
                v208 = 0;
              }

            }
            if (v445)
              v212 = objc_msgSend(*(id *)(v468 + 32), "_appLayoutRequiresLegacyRotationSupport:", *(_QWORD *)(v468 + 40));
            else
              v212 = 0;
            objc_msgSend(v463, "setShouldScaleOverlayToFillBounds:", v387);
            objc_msgSend(v463, "setPositionAnimationsBeginFromModelState:", v445);
            objc_msgSend(v463, "setTransformAnimationsAreLegacyCounterRotations:", v212);
            objc_msgSend(v463, "contentView");
            v451 = (void *)objc_claimAutoreleasedReturnValue();
            if ((objc_opt_respondsToSelector() & 1) != 0)
              objc_msgSend(v451, "setShouldStretchToBounds:", v379);
            if ((objc_opt_respondsToSelector() & 1) != 0)
              objc_msgSend(v451, "setUsesNonuniformScaling:", v403);
            objc_msgSend(v463, "setDraggable:", v186);
            objc_msgSend(v463, "setSupportsSwitcherDragAndDrop:", v412);
            if (v456)
            {
              objc_msgSend(v456, "setLiveContentBlurEnabled:duration:blurDelay:iconViewScale:began:completion:", v195, v439, v437, 0.25, v188, v190);
              objc_msgSend(*(id *)(v468 + 32), "_applyOcclusionStateToLiveContentOverlay:forLayoutRole:inAppLayout:", v456, v465, *(_QWORD *)(v468 + 40));
            }
            objc_msgSend(v463, "setBlurred:duration:blurDelay:iconViewScale:began:completion:", v184 & (v195 ^ 1), v439, v437, 0.25, v188, v190);
            v213 = objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "shouldAllowGroupOpacityForAppLayout:", *(_QWORD *)(v468 + 40));
            objc_msgSend(v463, "layer");
            v214 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v214, "setAllowsGroupOpacity:", v213);

            v460[2](v460, CFSTR("center"));
            v215 = (void *)objc_claimAutoreleasedReturnValue();
            v216 = (void *)MEMORY[0x1E0CEABB0];
            v217 = MEMORY[0x1E0C809B0];
            v595[0] = MEMORY[0x1E0C809B0];
            v595[1] = 3221225472;
            v595[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_10;
            v595[3] = &unk_1E8EA4960;
            v604 = v458;
            v605 = v445;
            v218 = v463;
            v596 = v218;
            v598 = v448;
            v599 = v447;
            v600 = v441;
            v601 = v442;
            v602 = v88;
            v603 = rect;
            v597 = v208;
            v592[0] = v217;
            v592[1] = 3221225472;
            v592[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_11;
            v592[3] = &unk_1E8EA4890;
            v449 = v597;
            v593 = v449;
            v459 = v215;
            v594 = v459;
            objc_msgSend(v216, "sb_animateWithSettings:mode:animations:completion:", v402, v434, v595, v592);
            objc_msgSend(v218, "setMaskedCorners:", v411);
            v460[2](v460, CFSTR("corner radius"));
            v219 = (void *)objc_claimAutoreleasedReturnValue();
            v220 = (void *)MEMORY[0x1E0CEABB0];
            v221 = MEMORY[0x1E0C809B0];
            v586[0] = MEMORY[0x1E0C809B0];
            v586[1] = 3221225472;
            v586[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_12;
            v586[3] = &unk_1E8EA25E0;
            v222 = v218;
            v587 = v222;
            v588 = v431;
            v589 = v429;
            v590 = v428;
            v591 = v427;
            v584[0] = v221;
            v584[1] = 3221225472;
            v584[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_13;
            v584[3] = &unk_1E8EA4988;
            v464 = v219;
            v585 = v464;
            objc_msgSend(v220, "sb_animateWithSettings:mode:animations:completion:", v395, v389, v586, v584);
            objc_msgSend(*(id *)(v468 + 40), "leafAppLayouts");
            v223 = (void *)objc_claimAutoreleasedReturnValue();
            LODWORD(v220) = (unint64_t)objc_msgSend(v223, "count") > 1;

            v224 = v390;
            v225 = v404;
            if ((_DWORD)v220)
            {
              v653.origin.x = v446;
              v653.origin.y = v444;
              v653.size.width = v88;
              v653.size.height = rect;
              MinX = CGRectGetMinX(v653);
              v654.origin.y = v420;
              v654.origin.x = v421;
              v654.size.width = v454;
              v654.size.height = v453;
              Width = CGRectGetWidth(v654);
              v655.origin.x = v446;
              v655.origin.y = v444;
              v655.size.width = v88;
              v655.size.height = rect;
              v228 = CGRectGetMaxX(v655);
              v656.origin.y = v420;
              v656.origin.x = v421;
              v656.size.width = v454;
              v656.size.height = v453;
              v225 = v404 + v378 * MinX / Width;
              v224 = v404 + v378 * v228 / CGRectGetWidth(v656);
            }
            v229 = objc_msgSend(v435, "opacityUpdateMode");
            if (!v229)
              v229 = objc_msgSend(v435, "updateMode");
            objc_msgSend(v435, "opacitySettings");
            v230 = (void *)objc_claimAutoreleasedReturnValue();
            v231 = v230;
            if (v230)
            {
              v466 = v230;
            }
            else
            {
              objc_msgSend(v435, "layoutSettings");
              v466 = (id)objc_claimAutoreleasedReturnValue();

            }
            v232 = (void *)MEMORY[0x1E0CEABB0];
            v579[0] = MEMORY[0x1E0C809B0];
            v579[1] = 3221225472;
            v579[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_14;
            v579[3] = &unk_1E8EA49B0;
            v233 = v222;
            v580 = v233;
            v583 = v386;
            v581 = v224;
            v582 = v225;
            v460[2](v460, CFSTR("wallpaperGradientAttributes"));
            v234 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v232, "sb_animateWithSettings:mode:animations:completion:", v466, v229, v579, v234);

            if (!objc_msgSend(*(id *)(v468 + 32), "isJindoEnabled"))
              goto LABEL_179;
            objc_msgSend(v233, "layer");
            v235 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v235, "valueForKey:", CFSTR("meshTransform"));
            v236 = (void *)objc_claimAutoreleasedReturnValue();
            if (v236)
              v237 = 1;
            else
              v237 = v406 == 0;
            v238 = !v237;

            objc_msgSend(v233, "layer");
            v239 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v239, "presentationModifiers");
            v240 = (void *)objc_claimAutoreleasedReturnValue();
            v241 = objc_msgSend(v240, "bs_containsObjectPassingTest:", &__block_literal_global_486);

            if ((v238 | v241) == 1)
            {
              objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "identityMeshTransformForIndex:", v440);
              v242 = (void *)objc_claimAutoreleasedReturnValue();
              if (!v238)
              {
LABEL_168:
                if (v406)
                  v243 = 0;
                else
                  v243 = v241;
                if (v243 == 1)
                  v406 = v242;
LABEL_175:
                objc_msgSend(v435, "meshSettings");
                v245 = (void *)objc_claimAutoreleasedReturnValue();
                v246 = v245;
                if (v245)
                {
                  v247 = v245;
                }
                else
                {
                  objc_msgSend(v435, "layoutSettings");
                  v247 = (id)objc_claimAutoreleasedReturnValue();

                }
                v248 = (void *)MEMORY[0x1E0CEABB0];
                v573[0] = MEMORY[0x1E0C809B0];
                v573[1] = 3221225472;
                v573[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_17;
                v573[3] = &unk_1E8E9E820;
                v574 = v233;
                v406 = v406;
                v575 = v406;
                v460[2](v460, CFSTR("mesh transform"));
                v249 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v248, "sb_animateWithSettings:mode:animations:completion:", v247, v382, v573, v249);

LABEL_179:
                v554[0] = MEMORY[0x1E0C809B0];
                v554[1] = 3221225472;
                v554[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_18;
                v554[3] = &unk_1E8EA4A20;
                v250 = v460;
                v558 = v250;
                v555 = v400;
                v559 = v388;
                v251 = v233;
                v556 = v251;
                v560 = v441;
                v561 = v442;
                v562 = v88;
                v563 = rect;
                v564 = v193;
                v565 = 0x3FE0000000000000;
                v566 = v410;
                v567 = v409;
                v568 = v421;
                v569 = v420;
                v570 = v454;
                v571 = v453;
                v572 = v385;
                recta = v408;
                v557 = recta;
                v252 = MEMORY[0x1D17E5550](v554);
                v253 = (void *)v252;
                if ((_DWORD)v212)
                  objc_msgSend(MEMORY[0x1E0CEABB0], "performWithoutAnimation:", v252);
                else
                  (*(void (**)(uint64_t))(v252 + 16))(v252);
                v254 = objc_msgSend(v251, "isContentClippingEnabled");
                if (v254)
                {
                  objc_msgSend(v251, "contentClippingFrame");
                  v658.origin.y = v417;
                  v658.origin.x = v418;
                  v658.size.height = v415;
                  v658.size.width = v416;
                  v255 = !CGRectEqualToRect(v657, v658);
                }
                else
                {
                  v255 = 0;
                }
                if ((v405 ^ v254 | v255) == 1)
                {
                  objc_msgSend(v251, "setContentClippingEnabled:", v405);
                  v460[2](v250, CFSTR("clipping"));
                  v256 = (void *)objc_claimAutoreleasedReturnValue();
                  v257 = (void *)MEMORY[0x1E0CEABB0];
                  v258 = MEMORY[0x1E0C809B0];
                  v544[0] = MEMORY[0x1E0C809B0];
                  v544[1] = 3221225472;
                  v544[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_21;
                  v544[3] = &unk_1E8EA4A48;
                  v545 = v251;
                  v546 = v418;
                  v547 = v417;
                  v548 = v416;
                  v549 = v415;
                  v550 = v431;
                  v551 = v429;
                  v552 = v428;
                  v553 = v427;
                  v541[0] = v258;
                  v541[1] = 3221225472;
                  v541[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_22;
                  v541[3] = &unk_1E8E9E7F8;
                  v541[4] = *(_QWORD *)(v468 + 32);
                  v543 = v380;
                  v259 = v256;
                  v542 = v259;
                  objc_msgSend(v257, "sb_animateWithSettings:mode:animations:completion:", v381, v380, v544, v541);

                }
                v260 = (void *)MEMORY[0x1E0CEABB0];
                v531[0] = MEMORY[0x1E0C809B0];
                v531[1] = 3221225472;
                v531[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_23;
                v531[3] = &unk_1E8EA4A70;
                v261 = v251;
                v532 = v261;
                v534 = v432;
                v535 = v433;
                v536 = v414;
                v537 = v384;
                v538 = v391;
                v539 = v392;
                v540 = v190;
                v457 = v456;
                v533 = v457;
                v460[2](v250, CFSTR("transform and content page view scale"));
                v262 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v260, "sb_animateWithSettings:mode:animations:completion:", v394, v413, v531, v262);

                if (objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1064), "shouldRedactWindowContents"))
                {
                  objc_msgSend(*(id *)(v468 + 32), "appLayoutContainingAppLayout:", v452);
                  v263 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v452, "allItems");
                  v264 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v264, "firstObject");
                  v265 = (void *)objc_claimAutoreleasedReturnValue();
                  v266 = objc_msgSend(v263, "layoutRoleForItem:", v265);

                  if (v266 == 1)
                  {
                    objc_msgSend(MEMORY[0x1E0CEA478], "systemBlueColor");
                    v267 = objc_claimAutoreleasedReturnValue();
                  }
                  else if (v266 == 2)
                  {
                    objc_msgSend(MEMORY[0x1E0CEA478], "systemGreenColor");
                    v267 = objc_claimAutoreleasedReturnValue();
                  }
                  else if (v266 == 5)
                  {
                    objc_msgSend(MEMORY[0x1E0CEA478], "systemRedColor");
                    v267 = objc_claimAutoreleasedReturnValue();
                  }
                  else
                  {
                    if (v266 == 6)
                      objc_msgSend(MEMORY[0x1E0CEA478], "systemPurpleColor");
                    else
                      objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
                    v267 = objc_claimAutoreleasedReturnValue();
                  }
                  v279 = (void *)v267;
                  objc_msgSend(v261, "contentView");
                  v280 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v280, "layer");
                  v281 = (void *)objc_claimAutoreleasedReturnValue();
                  v282 = objc_retainAutorelease(v279);
                  objc_msgSend(v281, "setBorderColor:", objc_msgSend(v282, "CGColor"));

                  objc_msgSend(v261, "contentView");
                  v283 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v283, "layer");
                  v284 = (void *)objc_claimAutoreleasedReturnValue();
                  v285 = (id *)(v468 + 32);
                  objc_msgSend(*(id *)(v468 + 32), "view");
                  v286 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v286, "bounds");
                  v288 = v287;

                  objc_msgSend(*(id *)(v468 + 32), "view");
                  v289 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v289, "bounds");
                  v291 = v290;

                  if (v288 >= v291)
                    v292 = v288;
                  else
                    v292 = v291;
                  objc_msgSend(v284, "setBorderWidth:", v292);

                  objc_msgSend(v261, "contentOverlay");
                  v293 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v293, "bs_setHitTestingDisabled:", 1);

                  objc_msgSend(v261, "contentOverlay");
                  v294 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v294, "layer");
                  v295 = (void *)objc_claimAutoreleasedReturnValue();
                  v277 = objc_retainAutorelease(v282);
                  objc_msgSend(v295, "setBorderColor:", objc_msgSend(v277, "CGColor"));

                  objc_msgSend(v261, "contentOverlay");
                  v278 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v278, "layer");
                  v296 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(*v285, "view");
                  v297 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v297, "bounds");
                  v299 = v298;

                  objc_msgSend(*v285, "view");
                  v300 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v300, "bounds");
                  v302 = v301;

                  if (v299 >= v302)
                    v303 = v299;
                  else
                    v303 = v302;
                  objc_msgSend(v296, "setBorderWidth:", v303);

                }
                else
                {
                  objc_msgSend(v261, "contentView");
                  v268 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v268, "layer");
                  v269 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
                  v270 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
                  objc_msgSend(v269, "setBorderColor:", objc_msgSend(v270, "CGColor"));

                  objc_msgSend(v261, "contentView");
                  v271 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v271, "layer");
                  v272 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v272, "setBorderWidth:", 0.0);

                  objc_msgSend(v261, "contentOverlay");
                  v273 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v273, "bs_setHitTestingDisabled:", 0);

                  objc_msgSend(v261, "contentOverlay");
                  v274 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v274, "layer");
                  v275 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
                  v276 = objc_retainAutorelease((id)objc_claimAutoreleasedReturnValue());
                  objc_msgSend(v275, "setBorderColor:", objc_msgSend(v276, "CGColor"));

                  objc_msgSend(v261, "contentOverlay");
                  v277 = (id)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v277, "layer");
                  v278 = (void *)objc_claimAutoreleasedReturnValue();
                  objc_msgSend(v278, "setBorderWidth:", 0.0);
                }

                goto LABEL_207;
              }
            }
            else
            {
              v242 = 0;
              if (!v238)
                goto LABEL_168;
            }
            v244 = (void *)MEMORY[0x1E0CEABB0];
            v576[0] = MEMORY[0x1E0C809B0];
            v576[1] = 3221225472;
            v576[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_16;
            v576[3] = &unk_1E8E9E820;
            v577 = v233;
            v578 = v242;
            objc_msgSend(v244, "performWithoutAnimation:", v576);

            goto LABEL_175;
          }
LABEL_207:
          v77 = v443 + 1;
        }
        while (v443 + 1 != v425);
        v425 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v632, v647, 16);
      }
      while (v425);
    }

    *(_QWORD *)&v624 = 0;
    *((_QWORD *)&v624 + 1) = &v624;
    *(_QWORD *)&v625 = 0x2020000000;
    BYTE8(v625) = 1;
    v527[0] = MEMORY[0x1E0C809B0];
    v527[1] = 3221225472;
    v527[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_24;
    v527[3] = &unk_1E8EA4A98;
    v528 = *(id *)(v468 + 40);
    v529 = &v624;
    v530 = *(_QWORD *)(v468 + 48);
    SBLayoutRoleEnumerateValidRoles(v527);
    if (!*(_QWORD *)(v468 + 48) || *(_BYTE *)(*((_QWORD *)&v624 + 1) + 24))
    {
      objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1832), "objectForKey:", *(_QWORD *)(v468 + 40));
      v304 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1840), "objectForKey:", *(_QWORD *)(v468 + 40));
      v305 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1000), "objectForKey:", *(_QWORD *)(v468 + 40));
      v306 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v304, "layer");
      v307 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v307, "anchorPoint");
      v309 = v308 == v424;
      if (v310 != v423)
        v309 = 0;
      v311 = v422 != 4 || v309;

      if ((v311 & 1) == 0)
      {
        objc_msgSend(v304, "layer");
        v312 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v312, "presentationModifiers");
        v313 = (void *)objc_claimAutoreleasedReturnValue();

        v314 = objc_msgSend(v313, "bs_containsObjectPassingTest:", &__block_literal_global_502);
        v315 = 4;
        if (v314)
          v315 = 5;
        v422 = v315;

      }
      v316 = v468;
      objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "adjustedSpaceAccessoryViewFrame:forAppLayout:", *(_QWORD *)(v468 + 40), v421, v420, v454, v453);
      v318 = v317;
      v320 = v319;
      v322 = v321;
      v324 = v323;
      objc_msgSend(*(id *)(*(_QWORD *)(v316 + 32) + 1936), "adjustedSpaceAccessoryViewAnchorPoint:forAppLayout:", *(_QWORD *)(v316 + 40), v424, v423);
      v326 = v325;
      v328 = v327;
      objc_msgSend(*(id *)(*(_QWORD *)(v316 + 32) + 1936), "adjustedSpaceAccessoryViewScale:forAppLayout:", *(_QWORD *)(v316 + 40), v426);
      v467 = v329;
      if ((BSFloatIsZero() & 1) == 0)
        v392 = v392 * (v467 / v426);
      v330 = (void *)MEMORY[0x1E0CEABB0];
      v518[0] = MEMORY[0x1E0C809B0];
      v518[1] = 3221225472;
      v518[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_26;
      v518[3] = &unk_1E8EA4AE0;
      v331 = v304;
      v519 = v331;
      v521 = v326;
      v522 = v328;
      v523 = v318;
      v524 = v320;
      v525 = v322;
      v526 = v324;
      v332 = v305;
      v520 = v332;
      v460[2](v460, CFSTR("accessory center"));
      v333 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v330, "sb_animateWithSettings:mode:animations:completion:", v402, v422, v518, v333);

      objc_msgSend(v332, "setMaskedCorners:", v393);
      objc_msgSend(v331, "setMaskedCorners:", v393);
      v334 = (void *)MEMORY[0x1E0CEABB0];
      v511[0] = MEMORY[0x1E0C809B0];
      v511[1] = 3221225472;
      v511[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_27;
      v511[3] = &unk_1E8EA0820;
      v514 = v399;
      v515 = v398;
      v516 = v397;
      v517 = v396;
      v335 = v332;
      v512 = v335;
      v336 = v331;
      v513 = v336;
      v460[2](v460, CFSTR("accessory corner radius"));
      v337 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v334, "sb_animateWithSettings:mode:animations:completion:", v395, v389, v511, v337);

      v338 = (void *)MEMORY[0x1E0CEABB0];
      v496[0] = MEMORY[0x1E0C809B0];
      v496[1] = 3221225472;
      v496[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_28;
      v496[3] = &unk_1E8EA4B08;
      v339 = v306;
      v497 = v339;
      v500 = v367;
      v340 = v336;
      v498 = v340;
      v501 = v318;
      v502 = v320;
      v503 = v322;
      v504 = v324;
      v505 = v369;
      v506 = v368;
      v341 = v335;
      v499 = v341;
      v507 = MaxX;
      v508 = MinY;
      v509 = v377;
      v510 = Height;
      v460[2](v460, CFSTR("accessory bounds"));
      v342 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v338, "sb_animateWithSettings:mode:animations:completion:", v400, v388, v496, v342);

      objc_msgSend(v340, "setContentClippingEnabled:", v405);
      objc_msgSend(v341, "setContentClippingEnabled:", v405);
      v343 = (void *)MEMORY[0x1E0CEABB0];
      v485[0] = MEMORY[0x1E0C809B0];
      v485[1] = 3221225472;
      v485[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_29;
      v485[3] = &unk_1E8EA4B30;
      v344 = v340;
      v486 = v344;
      v488 = v376;
      v489 = v375;
      v490 = v374;
      v491 = v373;
      v492 = v399;
      v493 = v398;
      v494 = v397;
      v495 = v396;
      v345 = v341;
      v487 = v345;
      v460[2](v460, CFSTR("accessory clipping"));
      v346 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v343, "sb_animateWithSettings:mode:animations:completion:", v381, v380, v485, v346);

      v347 = (void *)MEMORY[0x1E0CEABB0];
      v472[0] = MEMORY[0x1E0C809B0];
      v472[1] = 3221225472;
      v472[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_30;
      v472[3] = &unk_1E8EA4B58;
      v348 = v344;
      v476 = v467;
      v477 = v391;
      v478 = v366;
      v349 = *(_QWORD *)(v468 + 32);
      v473 = v348;
      v474 = v349;
      v479 = v636;
      v480 = v318;
      v481 = v320;
      v482 = v322;
      v483 = v324;
      v484 = v392;
      v350 = v345;
      v475 = v350;
      v460[2](v460, CFSTR("accessory transform and content page view scale"));
      v351 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v347, "sb_animateWithSettings:mode:animations:completion:", v394, v407, v472, v351);

      v352 = v468;
      if (!*(_QWORD *)(v468 + 48) || *(_BYTE *)(*((_QWORD *)&v624 + 1) + 24))
      {
        objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1848), "objectForKey:", *(_QWORD *)(v468 + 40));
        v353 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v353, "animatingDropletContext");
        v354 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v354, "setDisableDropletEffectFilters:", objc_msgSend(*(id *)(*(_QWORD *)(v468 + 32) + 1936), "isDropletEffectRequiredBehindAppLayout:", *(_QWORD *)(v468 + 40)) ^ 1);

        v352 = v468;
      }
      v355 = (void *)MEMORY[0x1E0CEABB0];
      v356 = kKeyboardHeightIncludingAccessory_block_invoke_keyboardHeightSettings;
      v469[0] = MEMORY[0x1E0C809B0];
      v469[1] = 3221225472;
      v469[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_31;
      v469[3] = &unk_1E8E9E820;
      v357 = v350;
      v358 = *(_QWORD *)(v352 + 32);
      v470 = v357;
      v471 = v358;
      v460[2](v460, CFSTR("accessory keyboard height"));
      v359 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v355, "sb_animateWithSettings:mode:animations:completion:", v356, 3, v469, v359);

      v360 = v399;
      *(double *)&v638 = v399;
      *((double *)&v638 + 1) = v396;
      v361 = 8;
      *(double *)&v639 = v398;
      *((double *)&v639 + 1) = v397;
      do
      {
        if (v360 < *(double *)((char *)&v638 + v361))
          v360 = *(double *)((char *)&v638 + v361);
        v361 += 8;
      }
      while (v361 != 32);
      objc_msgSend(*(id *)(v468 + 32), "appLayouts");
      v362 = (void *)objc_claimAutoreleasedReturnValue();
      v363 = objc_msgSend(v362, "indexOfObject:", *(_QWORD *)(v468 + 40));

      if (v363 != 0x7FFFFFFFFFFFFFFFLL)
      {
        v364 = *(void **)(v468 + 32);
        v460[2](v460, CFSTR("item container backdrop"));
        v365 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v364, "_updateItemContainerBackdropPresenceForIndex:scale:rotation:cornerRadius:animationAttributes:completion:", v440, v435, v365, v467, v391, v360);

      }
    }

    _Block_object_dispose(&v624, 8);
  }

}

- (void)_updateStatusBarAndHomeGrabberVisibilityForAppLayout:(id)a3 animated:(BOOL)a4
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  unsigned int v16;
  void *v17;
  void *v18;
  uint64_t v19;
  char v20;
  int v21;
  uint64_t v22;
  void *v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v30;
  id obj;
  id v32;
  _QWORD v33[4];
  id v34;
  BOOL v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  _BYTE v40[128];
  uint64_t v41;

  v41 = *MEMORY[0x1E0C80C00];
  v36 = 0u;
  v37 = 0u;
  v38 = 0u;
  v39 = 0u;
  v32 = a3;
  objc_msgSend(v32, "leafAppLayouts");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v37;
    v8 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
    v28 = *(_QWORD *)v37;
    do
    {
      v9 = 0;
      v30 = v6;
      do
      {
        if (*(_QWORD *)v37 != v7)
          objc_enumerationMutation(obj);
        v10 = *(void **)(*((_QWORD *)&v36 + 1) + 8 * v9);
        objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v8[793]), "objectForKey:", v10);
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
        {
          -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = objc_msgSend(v12, "indexOfObject:", v32);

          if (v13 != 0x7FFFFFFFFFFFFFFFLL)
          {
            -[SBFluidSwitcherViewController dataSource](self, "dataSource");
            v14 = (void *)objc_claimAutoreleasedReturnValue();
            v15 = v14;
            if ((*((_BYTE *)&self->_dataSourceRespondsTo + 1) & 0x20) != 0)
              v16 = objc_msgSend(v14, "isInAppStatusBarRequestedHiddenForSwitcherContentController:", self);
            else
              v16 = 0;
            objc_msgSend(v10, "allItems");
            v17 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v17, "firstObject");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            v19 = objc_msgSend(v32, "layoutRoleForItem:", v18);

            LODWORD(v13) = -[SBSwitcherModifier isContentStatusBarVisibleForIndex:](self->_rootModifier, "isContentStatusBarVisibleForIndex:", v13) ^ 1;
            v20 = -[SBSwitcherModifier hiddenContentStatusBarPartsForLayoutRole:inAppLayout:](self->_rootModifier, "hiddenContentStatusBarPartsForLayoutRole:inAppLayout:", v19, v32);
            if ((v20 & 0xA) != 0)
              v21 = 1;
            else
              v21 = v13;
            if ((v20 & 4) != 0)
            {
              v21 = v13;
              v13 = 1;
            }
            else
            {
              v13 = v13;
            }
            v22 = v21 | v16;
            -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            v24 = v23;
            if ((v22 & 1) != 0)
              objc_msgSend(v23, "statusBarFadeOutSettings");
            else
              objc_msgSend(v23, "statusBarFadeInSettings");
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            v7 = v28;

            v33[0] = MEMORY[0x1E0C809B0];
            v33[1] = 3221225472;
            v33[2] = __95__SBFluidSwitcherViewController__updateStatusBarAndHomeGrabberVisibilityForAppLayout_animated___block_invoke;
            v33[3] = &unk_1E8EA4F30;
            v35 = a4;
            v34 = v25;
            v26 = v25;
            v27 = (void *)MEMORY[0x1D17E5550](v33);
            objc_msgSend(v11, "setStatusBarHidden:nubViewHidden:animator:", v22, v13, v27);

            v8 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
            v6 = v30;
          }
        }

        ++v9;
      }
      while (v6 != v9);
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v36, v40, 16);
    }
    while (v6);
  }

}

- (id)appLayoutContainingAppLayout:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  _QWORD v11[4];
  id v12;

  v4 = a3;
  -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __62__SBFluidSwitcherViewController_appLayoutContainingAppLayout___block_invoke;
  v11[3] = &unk_1E8E9DF78;
  v12 = v4;
  v6 = v4;
  objc_msgSend(v5, "bs_firstObjectPassingTest:", v11);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (!v7)
    v7 = v6;
  v9 = v7;

  return v9;
}

- (id)_unadjustedAppLayouts
{
  void *v3;
  void *v4;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "appLayoutsForSwitcherContentController:", self);
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (SBSwitcherContentViewControllerDataSource)dataSource
{
  return (SBSwitcherContentViewControllerDataSource *)objc_loadWeakRetained((id *)&self->_dataSource);
}

- (double)separatorViewWidth
{
  return 10.0;
}

void __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_18(uint64_t a1)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  id v10;
  _QWORD v11[4];
  id v12;
  id v13;
  _QWORD v14[4];
  id v15;
  id v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  (*(void (**)(void))(*(_QWORD *)(a1 + 56) + 16))();
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)MEMORY[0x1E0CEABB0];
  v4 = *(_QWORD *)(a1 + 64);
  v5 = MEMORY[0x1E0C809B0];
  v14[0] = MEMORY[0x1E0C809B0];
  v14[1] = 3221225472;
  v14[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_19;
  v14[3] = &unk_1E8EA49F8;
  v6 = *(_QWORD *)(a1 + 32);
  v15 = *(id *)(a1 + 40);
  v7 = *(_OWORD *)(a1 + 88);
  v17 = *(_OWORD *)(a1 + 72);
  v18 = v7;
  v8 = *(_OWORD *)(a1 + 120);
  v19 = *(_OWORD *)(a1 + 104);
  v20 = v8;
  v9 = *(_OWORD *)(a1 + 152);
  v21 = *(_OWORD *)(a1 + 136);
  v22 = v9;
  v23 = *(_QWORD *)(a1 + 168);
  v16 = *(id *)(a1 + 48);
  v11[0] = v5;
  v11[1] = 3221225472;
  v11[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_20;
  v11[3] = &unk_1E8EA4890;
  v12 = *(id *)(a1 + 48);
  v13 = v2;
  v10 = v2;
  objc_msgSend(v3, "sb_animateWithSettings:mode:animations:completion:", v6, v4, v14, v11);

}

- (BOOL)isJindoEnabled
{
  BOOL v2;
  uint64_t v3;

  v2 = 1;
  v3 = SBFEffectiveArtworkSubtype();
  if (v3 > 2795)
  {
    if (v3 != 2796 && v3 != 2868)
      return 0;
  }
  else if (v3 != 2556 && v3 != 2622)
  {
    return 0;
  }
  return v2;
}

uint64_t __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke_5(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setTitleOpacity:", *(double *)(a1 + 48));
  objc_msgSend(*(id *)(a1 + 40), "setTitleOpacity:", *(double *)(a1 + 48));
  return objc_msgSend(*(id *)(a1 + 32), "setTitleAndIconOpacity:", *(double *)(a1 + 56));
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_19(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 32);
  SBRectWithSize();
  objc_msgSend(v2, "setBounds:");
  objc_msgSend(*(id *)(a1 + 32), "setPageViewAnchorPoint:", *(double *)(a1 + 80), *(double *)(a1 + 88));
  objc_msgSend(*(id *)(a1 + 32), "setPageViewOffset:", *(double *)(a1 + 96), *(double *)(a1 + 104));
  objc_msgSend(*(id *)(a1 + 32), "setSizeForContainingSpace:", *(double *)(a1 + 128), *(double *)(a1 + 136));
  objc_msgSend(*(id *)(a1 + 32), "setMinimumTranslationForKillingContainer:", *(double *)(a1 + 144));
  objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  return objc_msgSend(*(id *)(a1 + 40), "setValue:", 1.0);
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_29(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setContentClippingFrame:cornerRadii:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
  objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  objc_msgSend(*(id *)(a1 + 40), "setContentClippingFrame:cornerRadii:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96), *(double *)(a1 + 104));
  return objc_msgSend(*(id *)(a1 + 40), "layoutIfNeeded");
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_28(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  objc_msgSend(*(id *)(a1 + 32), "setMultiWindowIndicatorRoleMask:", *(_QWORD *)(a1 + 56));
  v2 = *(void **)(a1 + 40);
  SBRectWithSize();
  objc_msgSend(v2, "setBounds:");
  objc_msgSend(*(id *)(a1 + 40), "setContentViewOffset:", *(double *)(a1 + 96), *(double *)(a1 + 104));
  objc_msgSend(*(id *)(a1 + 40), "layoutIfNeeded");
  v3 = *(void **)(a1 + 48);
  SBRectWithSize();
  objc_msgSend(v3, "setBounds:");
  objc_msgSend(*(id *)(a1 + 48), "setContentViewOffset:", *(double *)(a1 + 96), *(double *)(a1 + 104));
  v4 = *(void **)(a1 + 48);
  SBRectWithSize();
  objc_msgSend(v4, "setResizeGrabberBounds:");
  v5 = *(void **)(a1 + 48);
  UIRectGetCenter();
  objc_msgSend(v5, "setResizeGrabberCenter:");
  return objc_msgSend(*(id *)(a1 + 48), "layoutIfNeeded");
}

BOOL __66__SBFluidSwitcherViewController__spacesWithVisibleHomeAffordances__block_invoke(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  _BOOL8 v4;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1832), "objectForKey:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "homeGrabberView");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3 != 0;

  return v4;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_30(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  CATransform3D v23;
  CATransform3D v24;
  CATransform3D v25;
  CATransform3D v26;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if ((v3 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "layer");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 56));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setValue:forKeyPath:", v5, CFSTR("transform.scale"));

    objc_msgSend(*(id *)(a1 + 32), "layer");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 64));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setValue:forKeyPath:", v7, CFSTR("transform.rotation.z"));

  }
  else
  {
    memset(&v26, 0, sizeof(v26));
    CATransform3DMakeScale(&v25, *(CGFloat *)(a1 + 56), *(CGFloat *)(a1 + 56), 1.0);
    CATransform3DRotate(&v26, &v25, *(CGFloat *)(a1 + 64), 0.0, 0.0, 1.0);
    v8 = *(void **)(a1 + 32);
    v24 = v26;
    objc_msgSend(v8, "setTransform3D:", &v24);
  }
  objc_msgSend(*(id *)(a1 + 32), "setIconAlignment:", *(_QWORD *)(a1 + 72));
  objc_msgSend(*(id *)(a1 + 32), "setUniqueIconsOnly:", 1);
  objc_msgSend(*(id *)(a1 + 32), "setFooterStyle:", objc_msgSend(*(id *)(a1 + 40), "_itemContainerFooterStyle"));
  objc_msgSend(*(id *)(a1 + 32), "homeGrabberView");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = *(_OWORD *)(a1 + 160);
  *(_OWORD *)&v26.m31 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)&v26.m33 = v10;
  v11 = *(_OWORD *)(a1 + 192);
  *(_OWORD *)&v26.m41 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)&v26.m43 = v11;
  v12 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)&v26.m11 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)&v26.m13 = v12;
  v13 = *(_OWORD *)(a1 + 128);
  *(_OWORD *)&v26.m21 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)&v26.m23 = v13;
  objc_msgSend(v9, "setTransform3D:", &v26);

  objc_msgSend(*(id *)(a1 + 32), "homeGrabberView");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  SBRectWithSize();
  objc_msgSend(v14, "setFrame:");

  objc_msgSend(*(id *)(a1 + 32), "setContentScale:", *(double *)(a1 + 240));
  objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "userInterfaceIdiom");

  if ((v16 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    objc_msgSend(*(id *)(a1 + 48), "layer");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 56));
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setValue:forKeyPath:", v18, CFSTR("transform.scale"));

    objc_msgSend(*(id *)(a1 + 48), "layer");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 64));
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "setValue:forKeyPath:", v20, CFSTR("transform.rotation.z"));

  }
  else
  {
    memset(&v26, 0, sizeof(v26));
    CATransform3DMakeScale(&v23, *(CGFloat *)(a1 + 56), *(CGFloat *)(a1 + 56), 1.0);
    CATransform3DRotate(&v26, &v23, *(CGFloat *)(a1 + 64), 0.0, 0.0, 1.0);
    v21 = *(void **)(a1 + 48);
    v24 = v26;
    objc_msgSend(v21, "setTransform3D:", &v24);
  }
  objc_msgSend(*(id *)(a1 + 48), "setContentScale:", *(double *)(a1 + 240));
  return objc_msgSend(*(id *)(a1 + 48), "layoutIfNeeded");
}

- (unint64_t)_itemContainerFooterStyle
{
  if (!-[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled"))
    return 0;
  -[SBFluidSwitcherViewController containerViewBounds](self, "containerViewBounds");
  if (BSFloatGreaterThanFloat())
    return 2;
  else
    return 1;
}

- (BOOL)isDevicePad
{
  void *v2;
  uint64_t v3;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  return (v3 & 0xFFFFFFFFFFFFFFFBLL) == 1;
}

- (void)_updateVisibleItems
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t i;
  void *v15;
  void *v16;
  void *v17;
  BOOL v18;
  NSMutableDictionary *visibleItemContainers;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t j;
  void *v25;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t k;
  uint64_t v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  void (**v38)(_QWORD);
  id v39;
  id v40;
  id obj;
  _QWORD v42[4];
  id v43;
  SBFluidSwitcherViewController *v44;
  id v45;
  id v46;
  _QWORD v47[5];
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _QWORD v56[4];
  id v57;
  SBFluidSwitcherViewController *v58;
  id v59;
  BOOL v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  _QWORD v65[5];
  id v66;
  _BYTE v67[128];
  _BYTE v68[128];
  _BYTE v69[128];
  uint64_t v70;

  v70 = *MEMORY[0x1E0C80C00];
  kdebug_trace();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (void *)MEMORY[0x1E0C99E20];
  -[SBSwitcherModifier visibleAppLayouts](self->_rootModifier, "visibleAppLayouts");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setWithSet:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v65[0] = MEMORY[0x1E0C809B0];
  v65[1] = 3221225472;
  v65[2] = __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke;
  v65[3] = &unk_1E8EA4710;
  v65[4] = self;
  v9 = v7;
  v66 = v9;
  objc_msgSend(v8, "enumerateObjectsUsingBlock:", v65);

  v63 = 0u;
  v64 = 0u;
  v61 = 0u;
  v62 = 0u;
  v10 = v9;
  v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v61, v69, 16);
  if (v11)
  {
    v12 = v11;
    v13 = *(_QWORD *)v62;
    do
    {
      for (i = 0; i != v12; ++i)
      {
        if (*(_QWORD *)v62 != v13)
          objc_enumerationMutation(v10);
        v15 = *(void **)(*((_QWORD *)&v61 + 1) + 8 * i);
        if ((-[NSCountedSet containsObject:](self->_requestedHiddenAppLayouts, "containsObject:", v15) & 1) == 0)
        {
          objc_msgSend(v15, "leafAppLayouts");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v3, "addObjectsFromArray:", v16);

        }
      }
      v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v61, v69, 16);
    }
    while (v12);
  }

  -[SBFluidSwitcherLayoutContext activeTransitionContext](self->_layoutContext, "activeTransitionContext");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v17 != 0;

  visibleItemContainers = self->_visibleItemContainers;
  v56[0] = MEMORY[0x1E0C809B0];
  v56[1] = 3221225472;
  v56[2] = __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_2;
  v56[3] = &unk_1E8EA4C20;
  v20 = v3;
  v57 = v20;
  v58 = self;
  v60 = v18;
  v39 = v4;
  v59 = v39;
  -[NSMutableDictionary enumerateKeysAndObjectsUsingBlock:](visibleItemContainers, "enumerateKeysAndObjectsUsingBlock:", v56);
  -[NSMutableDictionary allKeys](self->_visibleItemContainers, "allKeys");
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v55 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v52, v68, 16);
  if (v21)
  {
    v22 = v21;
    v23 = *(_QWORD *)v53;
    do
    {
      for (j = 0; j != v22; ++j)
      {
        if (*(_QWORD *)v53 != v23)
          objc_enumerationMutation(obj);
        v25 = *(void **)(*((_QWORD *)&v52 + 1) + 8 * j);
        -[SBFluidSwitcherLayoutContext activeGesture](self->_layoutContext, "activeGesture");
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v26, "selectedAppLayout");
        v27 = (void *)objc_claimAutoreleasedReturnValue();

        if (!-[NSArray containsObject:](self->_cachedAdjustedLeafAppLayouts, "containsObject:", v25)
          && (objc_msgSend(v20, "containsObject:", v25) & 1) == 0
          && v27 != v25)
        {
          objc_msgSend(v39, "addObject:", v25);
        }
      }
      v22 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v52, v68, 16);
    }
    while (v22);
  }
  v50 = 0u;
  v51 = 0u;
  v48 = 0u;
  v49 = 0u;
  v40 = v39;
  v28 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v48, v67, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v49;
    do
    {
      for (k = 0; k != v29; ++k)
      {
        if (*(_QWORD *)v49 != v30)
          objc_enumerationMutation(v40);
        v32 = *(_QWORD *)(*((_QWORD *)&v48 + 1) + 8 * k);
        v47[0] = MEMORY[0x1E0C809B0];
        v47[1] = 3221225472;
        v47[2] = __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_5;
        v47[3] = &unk_1E8E9DF78;
        v47[4] = v32;
        objc_msgSend(v20, "bs_firstObjectPassingTest:", v47);
        v33 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v33
          || (-[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", v33),
              v34 = (void *)objc_claimAutoreleasedReturnValue(),
              v34,
              v34))
        {
          -[SBFluidSwitcherViewController _removeVisibleItemContainerForAppLayout:](self, "_removeVisibleItemContainerForAppLayout:", v32);
        }

      }
      v29 = objc_msgSend(v40, "countByEnumeratingWithState:objects:count:", &v48, v67, 16);
    }
    while (v29);
  }

  v42[0] = MEMORY[0x1E0C809B0];
  v42[1] = 3221225472;
  v42[2] = __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_6;
  v42[3] = &unk_1E8E9F108;
  v35 = v20;
  v43 = v35;
  v44 = self;
  v36 = v40;
  v45 = v36;
  v37 = obj;
  v46 = v37;
  v38 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v42);
  if (objc_msgSend(MEMORY[0x1E0CEABB0], "_isInRetargetableAnimationBlock"))
  {
    objc_msgSend(MEMORY[0x1E0CEABB0], "_performWithoutRetargetingAnimations:", v38);
  }
  else if (objc_msgSend(MEMORY[0x1E0CEABB0], "_isInAnimationBlock"))
  {
    objc_msgSend(MEMORY[0x1E0CEABB0], "performWithoutAnimation:", v38);
  }
  else
  {
    v38[2](v38);
  }
  kdebug_trace();

}

- (void)_updateSlideOverTonguePresence
{
  int v3;
  void *v4;
  SBSlideOverTongueView *v5;
  SBSlideOverTongueView *slideOverTongue;
  SBSwitcherAccessoryLayoutElement *v7;
  SBSwitcherAccessoryLayoutElement *slideOverTongueLayoutElement;
  SBSlideOverTongueView *v9;
  BOOL v10;
  SBSlideOverTongueView *v11;
  SBSwitcherAccessoryLayoutElement *v12;
  _QWORD v13[5];

  v3 = -[SBSwitcherModifier wantsSlideOverTongue](self->_rootModifier, "wantsSlideOverTongue");
  -[SBFluidSwitcherLayoutContext activeTransitionContext](self->_layoutContext, "activeTransitionContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
  {
    if (!self->_slideOverTongue)
    {
      v5 = objc_alloc_init(SBSlideOverTongueView);
      slideOverTongue = self->_slideOverTongue;
      self->_slideOverTongue = v5;

      -[SBSlideOverTongueView setDelegate:](self->_slideOverTongue, "setDelegate:", self);
      -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", self->_slideOverTongue);
      v13[0] = MEMORY[0x1E0C809B0];
      v13[1] = 3221225472;
      v13[2] = __63__SBFluidSwitcherViewController__updateSlideOverTonguePresence__block_invoke;
      v13[3] = &unk_1E8E9DED8;
      v13[4] = self;
      -[SBFluidSwitcherViewController _performWithFixedUpdateMode:usingBlock:](self, "_performWithFixedUpdateMode:usingBlock:", 2, v13);
      v7 = -[SBSwitcherAccessoryLayoutElement initWithType:]([SBSwitcherAccessoryLayoutElement alloc], "initWithType:", 4);
      slideOverTongueLayoutElement = self->_slideOverTongueLayoutElement;
      self->_slideOverTongueLayoutElement = v7;

    }
  }
  else
  {
    v9 = self->_slideOverTongue;
    if (v9)
      v10 = v4 == 0;
    else
      v10 = 0;
    if (v10)
    {
      -[SBSlideOverTongueView removeFromSuperview](v9, "removeFromSuperview");
      v11 = self->_slideOverTongue;
      self->_slideOverTongue = 0;

      v12 = self->_slideOverTongueLayoutElement;
      self->_slideOverTongueLayoutElement = 0;

    }
  }
}

uint64_t __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_6(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  void *v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _QWORD v25[5];
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  _BYTE v31[128];
  uint64_t v32;

  v32 = *MEMORY[0x1E0C80C00];
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
  if (v3)
  {
    v4 = v3;
    v5 = 0;
    v6 = *(_QWORD *)v27;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v27 != v6)
          objc_enumerationMutation(v2);
        v8 = *(_QWORD *)(*((_QWORD *)&v26 + 1) + 8 * i);
        objc_msgSend(a1[5], "_itemContainerForAppLayoutIfExists:", v8);
        v9 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v9)
        {
          v10 = a1[6];
          v25[0] = MEMORY[0x1E0C809B0];
          v25[1] = 3221225472;
          v25[2] = __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_7;
          v25[3] = &unk_1E8E9DF78;
          v25[4] = v8;
          objc_msgSend(v10, "bs_firstObjectPassingTest:", v25);
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          if (v11)
          {
            objc_msgSend(*((id *)a1[5] + 228), "objectForKey:", v11);
            v12 = (void *)objc_claimAutoreleasedReturnValue();
          }
          else
          {
            v12 = 0;
          }
          objc_msgSend(a1[5], "_addVisibleItemContainerForAppLayout:reusingItemContainerIfExists:", v8, v12);

          v5 = 1;
        }
      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v26, v31, 16);
    }
    while (v4);

    if ((v5 & 1) != 0)
      objc_msgSend(a1[5], "_ensureSubviewOrdering");
  }
  else
  {

  }
  if (objc_msgSend(a1[6], "count") || objc_msgSend(a1[4], "count"))
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v13 = a1[7];
    v14 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
    if (v14)
    {
      v15 = v14;
      v16 = *(_QWORD *)v22;
      do
      {
        for (j = 0; j != v15; ++j)
        {
          if (*(_QWORD *)v22 != v16)
            objc_enumerationMutation(v13);
          v18 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * j);
          objc_msgSend(a1[5], "_itemContainerForAppLayoutIfExists:", v18, (_QWORD)v21);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "setVisible:", objc_msgSend(a1[5], "isAppLayoutVisibleInSwitcherBounds:", v18));

        }
        v15 = objc_msgSend(v13, "countByEnumeratingWithState:objects:count:", &v21, v30, 16);
      }
      while (v15);
    }

  }
  objc_msgSend(a1[5], "_updateVisibleAdjustedAppLayouts", (_QWORD)v21);
  return objc_msgSend(a1[5], "_updateVisibleOverlayAndUnderlayViews");
}

- (id)_itemContainerForAppLayoutIfExists:(id)a3
{
  return (id)-[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", a3);
}

- (void)_updateVisibleAdjustedAppLayouts
{
  NSSet *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  NSSet *visibleAdjustedAppLayouts;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = (NSSet *)objc_opt_new();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[NSMutableDictionary allKeys](self->_visibleItemContainers, "allKeys", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v11 + 1) + 8 * v8));
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        if (v9)
          -[NSSet addObject:](v3, "addObject:", v9);

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

  visibleAdjustedAppLayouts = self->_visibleAdjustedAppLayouts;
  self->_visibleAdjustedAppLayouts = v3;

}

- (void)_updateVisibleOverlayAndUnderlayViews
{
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  SBSwitcherModifier *rootModifier;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t j;
  uint64_t v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t k;
  uint64_t v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t n;
  void *v40;
  void *v41;
  char v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t ii;
  uint64_t v47;
  void *v48;
  void *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t jj;
  id v54;
  void *v55;
  void *v56;
  id obj;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  void *v61;
  uint64_t m;
  id v63;
  id v64;
  void (**v65)(_QWORD, _QWORD, _QWORD);
  _QWORD v66[4];
  id v67;
  SBFluidSwitcherViewController *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  _QWORD v85[5];
  _QWORD v86[4];
  id v87;
  _QWORD v88[5];
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD v93[5];
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  _QWORD v98[5];
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  _QWORD v103[7];
  uint64_t v104;
  uint64_t *v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t (*v111)(uint64_t, uint64_t);
  void (*v112)(uint64_t);
  id v113;
  _BYTE v114[128];
  _BYTE v115[128];
  _BYTE v116[128];
  _BYTE v117[128];
  _BYTE v118[128];
  _BYTE v119[128];
  uint64_t v120;
  _BYTE v121[128];
  uint64_t v122;

  v122 = *MEMORY[0x1E0C80C00];
  v108 = 0;
  v109 = &v108;
  v110 = 0x3032000000;
  v111 = __Block_byref_object_copy__13;
  v112 = __Block_byref_object_dispose__13;
  -[NSMutableDictionary allKeys](self->_visibleOverlayAccessoryViews, "allKeys");
  v113 = (id)objc_claimAutoreleasedReturnValue();
  -[NSSet allObjects](self->_visibleAdjustedAppLayouts, "allObjects");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v104 = 0;
  v105 = &v104;
  v106 = 0x2020000000;
  v107 = 0;
  v103[0] = MEMORY[0x1E0C809B0];
  v103[1] = 3221225472;
  v103[2] = __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke;
  v103[3] = &unk_1E8EA4C70;
  v103[4] = self;
  v103[5] = &v108;
  v103[6] = &v104;
  v65 = (void (**)(_QWORD, _QWORD, _QWORD))MEMORY[0x1D17E5550](v103);
  v101 = 0u;
  v102 = 0u;
  v99 = 0u;
  v100 = 0u;
  v4 = (id)v109[5];
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v99, v121, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v100;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v100 != v6)
          objc_enumerationMutation(v4);
        v8 = *(_QWORD *)(*((_QWORD *)&v99 + 1) + 8 * i);
        if ((objc_msgSend(v3, "containsObject:", v8) & 1) == 0)
        {
          v98[0] = MEMORY[0x1E0C809B0];
          v98[1] = 3221225472;
          v98[2] = __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_2;
          v98[3] = &unk_1E8E9DF78;
          v98[4] = v8;
          objc_msgSend(v3, "bs_firstObjectPassingTest:", v98);
          v9 = objc_claimAutoreleasedReturnValue();
          v10 = (void *)v9;
          if (v9)
          {
            rootModifier = self->_rootModifier;
            v120 = v9;
            objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v120, 1);
            v12 = (void *)objc_claimAutoreleasedReturnValue();
            -[SBSwitcherModifier preferredAppLayoutToReuseAccessoryForAppLayout:fromAppLayouts:](rootModifier, "preferredAppLayoutToReuseAccessoryForAppLayout:fromAppLayouts:", v8, v12);
            v13 = (void *)objc_claimAutoreleasedReturnValue();

            if (v13)
              ((void (**)(_QWORD, uint64_t, void *))v65)[2](v65, v8, v13);

          }
        }
      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v99, v121, 16);
    }
    while (v5);
  }

  v96 = 0u;
  v97 = 0u;
  v94 = 0u;
  v95 = 0u;
  v14 = v3;
  v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v94, v119, 16);
  if (v15)
  {
    v16 = *(_QWORD *)v95;
    do
    {
      for (j = 0; j != v15; ++j)
      {
        if (*(_QWORD *)v95 != v16)
          objc_enumerationMutation(v14);
        v18 = *(_QWORD *)(*((_QWORD *)&v94 + 1) + 8 * j);
        if ((objc_msgSend((id)v109[5], "containsObject:", v18) & 1) == 0)
        {
          v19 = (void *)v109[5];
          v93[0] = MEMORY[0x1E0C809B0];
          v93[1] = 3221225472;
          v93[2] = __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_3;
          v93[3] = &unk_1E8E9DF78;
          v93[4] = v18;
          objc_msgSend(v19, "bs_filter:", v93);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          -[SBSwitcherModifier preferredAppLayoutToReuseAccessoryForAppLayout:fromAppLayouts:](self->_rootModifier, "preferredAppLayoutToReuseAccessoryForAppLayout:fromAppLayouts:", v18, v20);
          v21 = (void *)objc_claimAutoreleasedReturnValue();
          if (v21)
            ((void (**)(_QWORD, void *, uint64_t))v65)[2](v65, v21, v18);

        }
      }
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v94, v119, 16);
    }
    while (v15);
  }

  v91 = 0u;
  v92 = 0u;
  v89 = 0u;
  v90 = 0u;
  v22 = (id)v109[5];
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v89, v118, 16);
  if (v23)
  {
    v24 = *(_QWORD *)v90;
    do
    {
      for (k = 0; k != v23; ++k)
      {
        if (*(_QWORD *)v90 != v24)
          objc_enumerationMutation(v22);
        v26 = *(_QWORD *)(*((_QWORD *)&v89 + 1) + 8 * k);
        if ((objc_msgSend(v14, "containsObject:", v26) & 1) == 0)
        {
          v88[0] = MEMORY[0x1E0C809B0];
          v88[1] = 3221225472;
          v88[2] = __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_4;
          v88[3] = &unk_1E8E9DF78;
          v88[4] = v26;
          objc_msgSend(v14, "bs_filter:", v88);
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          -[SBSwitcherModifier preferredAppLayoutToReuseAccessoryForAppLayout:fromAppLayouts:](self->_rootModifier, "preferredAppLayoutToReuseAccessoryForAppLayout:fromAppLayouts:", v26, v27);
          v28 = (void *)objc_claimAutoreleasedReturnValue();
          if (v28)
            ((void (**)(_QWORD, uint64_t, void *))v65)[2](v65, v26, v28);

        }
      }
      v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v89, v118, 16);
    }
    while (v23);
  }

  v29 = (void *)v109[5];
  v30 = MEMORY[0x1E0C809B0];
  v86[0] = MEMORY[0x1E0C809B0];
  v86[1] = 3221225472;
  v86[2] = __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_5;
  v86[3] = &unk_1E8E9DF78;
  v31 = v14;
  v87 = v31;
  objc_msgSend(v29, "bs_filter:", v86);
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  v85[0] = v30;
  v85[1] = 3221225472;
  v85[2] = __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_6;
  v85[3] = &unk_1E8EA4C98;
  v85[4] = &v108;
  v55 = v31;
  objc_msgSend(v31, "bs_filter:", v85);
  v56 = (void *)objc_claimAutoreleasedReturnValue();
  v83 = 0u;
  v84 = 0u;
  v81 = 0u;
  v82 = 0u;
  obj = v32;
  v59 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v81, v117, 16);
  if (v59)
  {
    v58 = *(_QWORD *)v82;
    do
    {
      for (m = 0; m != v59; ++m)
      {
        if (*(_QWORD *)v82 != v58)
          objc_enumerationMutation(obj);
        v33 = *(void **)(*((_QWORD *)&v81 + 1) + 8 * m);
        -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v33);
        v34 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "_removeAllRetargetableAnimations:", 1);
        objc_msgSend(v34, "setHidden:", 1);
        -[SBFluidSwitcherViewController _enqueueOverlayAccessoryViewInReusePool:](self, "_enqueueOverlayAccessoryViewInReusePool:", v34);
        -[NSMutableDictionary removeObjectForKey:](self->_visibleOverlayAccessoryViews, "removeObjectForKey:", v33);
        v61 = v34;
        -[NSMutableDictionary objectForKey:](self->_visibleUnderlayAccessoryViews, "objectForKey:", v33);
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v35, "_removeAllRetargetableAnimations:", 1);
        objc_msgSend(v35, "setHidden:", 1);
        -[SBFluidSwitcherViewController _enqueueUnderlayAccessoryViewInReusePool:](self, "_enqueueUnderlayAccessoryViewInReusePool:", v35);
        -[NSMutableDictionary removeObjectForKey:](self->_visibleUnderlayAccessoryViews, "removeObjectForKey:", v33);
        v60 = v35;
        -[NSMutableDictionary objectForKey:](self->_appLayoutToTitleItemController, "objectForKey:", v33);
        v63 = (id)objc_claimAutoreleasedReturnValue();
        if (v63)
        {
          objc_msgSend(v63, "invalidate");
          -[NSMutableDictionary removeObjectForKey:](self->_appLayoutToTitleItemController, "removeObjectForKey:", v33);
        }
        v79 = 0u;
        v80 = 0u;
        v77 = 0u;
        v78 = 0u;
        objc_msgSend(v33, "leafAppLayouts");
        v36 = (void *)objc_claimAutoreleasedReturnValue();
        v37 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v77, v116, 16);
        if (v37)
        {
          v38 = *(_QWORD *)v78;
          do
          {
            for (n = 0; n != v37; ++n)
            {
              if (*(_QWORD *)v78 != v38)
                objc_enumerationMutation(v36);
              -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v77 + 1) + 8 * n));
              v40 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v40, "contentView");
              v41 = (void *)objc_claimAutoreleasedReturnValue();
              v42 = objc_opt_respondsToSelector();

              if ((v42 & 1) != 0)
              {
                objc_msgSend(v40, "contentView");
                v43 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v43, "setShowingIconOverlayView:", 0);

              }
            }
            v37 = objc_msgSend(v36, "countByEnumeratingWithState:objects:count:", &v77, v116, 16);
          }
          while (v37);
        }

      }
      v59 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v81, v117, 16);
    }
    while (v59);
  }

  v75 = 0u;
  v76 = 0u;
  v73 = 0u;
  v74 = 0u;
  v64 = v56;
  v44 = objc_msgSend(v64, "countByEnumeratingWithState:objects:count:", &v73, v115, 16);
  if (v44)
  {
    v45 = *(_QWORD *)v74;
    do
    {
      for (ii = 0; ii != v44; ++ii)
      {
        if (*(_QWORD *)v74 != v45)
          objc_enumerationMutation(v64);
        v47 = *(_QWORD *)(*((_QWORD *)&v73 + 1) + 8 * ii);
        -[SBFluidSwitcherViewController _dequeueOverlayAccessoryViewFromReusePool](self, "_dequeueOverlayAccessoryViewFromReusePool");
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", v48);
        -[SBFluidSwitcherContentView bringSubviewToFront:](self->_contentView, "bringSubviewToFront:", v48);
        objc_msgSend(v48, "setHidden:", 0);
        -[NSMutableDictionary setObject:forKey:](self->_visibleOverlayAccessoryViews, "setObject:forKey:", v48, v47);
        -[SBFluidSwitcherViewController _dequeueUnderlayAccessoryViewFromReusePool](self, "_dequeueUnderlayAccessoryViewFromReusePool");
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", v49);
        -[SBFluidSwitcherContentView sendSubviewToBack:](self->_contentView, "sendSubviewToBack:", v49);
        objc_msgSend(v49, "setHidden:", 0);
        -[NSMutableDictionary setObject:forKey:](self->_visibleUnderlayAccessoryViews, "setObject:forKey:", v49, v47);

      }
      v44 = objc_msgSend(v64, "countByEnumeratingWithState:objects:count:", &v73, v115, 16);
    }
    while (v44);
  }

  if (objc_msgSend(obj, "count") || objc_msgSend(v64, "count") || *((_BYTE *)v105 + 24))
    -[SBFluidSwitcherViewController _ensureSubviewOrdering](self, "_ensureSubviewOrdering");
  v71 = 0u;
  v72 = 0u;
  v69 = 0u;
  v70 = 0u;
  v50 = v55;
  v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v69, v114, 16);
  if (v51)
  {
    v52 = *(_QWORD *)v70;
    do
    {
      for (jj = 0; jj != v51; ++jj)
      {
        if (*(_QWORD *)v70 != v52)
          objc_enumerationMutation(v50);
        -[SBFluidSwitcherViewController _updateTitlePresenceForAdjustedAppLayout:](self, "_updateTitlePresenceForAdjustedAppLayout:", *(_QWORD *)(*((_QWORD *)&v69 + 1) + 8 * jj));
      }
      v51 = objc_msgSend(v50, "countByEnumeratingWithState:objects:count:", &v69, v114, 16);
    }
    while (v51);
  }

  v66[0] = MEMORY[0x1E0C809B0];
  v66[1] = 3221225472;
  v66[2] = __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_7;
  v66[3] = &unk_1E8E9E820;
  v54 = v64;
  v67 = v54;
  v68 = self;
  -[SBFluidSwitcherViewController _performWithFixedUpdateMode:usingBlock:](self, "_performWithFixedUpdateMode:usingBlock:", 1, v66);

  _Block_object_dispose(&v104, 8);
  _Block_object_dispose(&v108, 8);

}

- (void)_performWithFixedUpdateMode:(int64_t)a3 usingBlock:(id)a4
{
  id v6;
  SBSwitcherModifier *rootModifier;
  id v8;
  SBFixedLayoutModeSwitcherModifier *v9;
  _QWORD v10[4];
  id v11;

  v6 = a4;
  v9 = -[SBFixedLayoutModeSwitcherModifier initWithUpdateMode:]([SBFixedLayoutModeSwitcherModifier alloc], "initWithUpdateMode:", a3);
  rootModifier = self->_rootModifier;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __72__SBFluidSwitcherViewController__performWithFixedUpdateMode_usingBlock___block_invoke;
  v10[3] = &unk_1E8E9E8D0;
  v11 = v6;
  v8 = v6;
  -[SBChainableModifier performTransactionWithTemporaryChildModifier:usingBlock:](rootModifier, "performTransactionWithTemporaryChildModifier:usingBlock:", v9, v10);

}

- (void)_updateVisibleHomeAffordanceViews
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t j;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  void *v33;
  SBHomeGrabberRotationView *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  double v44;
  double v45;
  double v46;
  uint64_t k;
  void *v48;
  id v49;
  uint64_t v50;
  void *v51;
  void *v52;
  NSObject *v53;
  NSString *debugName;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  SBHomeGrabberRotationView *v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t m;
  void *v65;
  id WeakRetained;
  void *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  uint64_t v73;
  id v74;
  id obj;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  _QWORD v92[5];
  uint8_t v93[128];
  uint8_t buf[4];
  NSString *v95;
  __int16 v96;
  id v97;
  __int16 v98;
  uint64_t v99;
  _BYTE v100[128];
  _BYTE v101[128];
  _BYTE v102[128];
  uint64_t v103;

  v103 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController _spacesWithVisibleHomeAffordances](self, "_spacesWithVisibleHomeAffordances");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBSwitcherModifier visibleHomeAffordanceLayoutElements](self->_rootModifier, "visibleHomeAffordanceLayoutElements");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v92[0] = MEMORY[0x1E0C809B0];
  v92[1] = 3221225472;
  v92[2] = __66__SBFluidSwitcherViewController__updateVisibleHomeAffordanceViews__block_invoke;
  v92[3] = &unk_1E8EA4D10;
  v92[4] = self;
  objc_msgSend(v4, "bs_filter:", v92);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = (void *)objc_msgSend(v3, "mutableCopy");
  objc_msgSend(v6, "minusSet:", v5);
  v68 = v5;
  v72 = (void *)objc_msgSend(v5, "mutableCopy");
  objc_msgSend(v72, "minusSet:", v3);
  v69 = v3;
  v70 = (void *)objc_msgSend(v3, "mutableCopy");
  objc_msgSend(v70, "minusSet:", v6);
  v90 = 0u;
  v91 = 0u;
  v88 = 0u;
  v89 = 0u;
  obj = v6;
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v88, v102, 16);
  v8 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
  if (v7)
  {
    v9 = v7;
    v10 = *(_QWORD *)v89;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v89 != v10)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v88 + 1) + 8 * i);
        if (!objc_msgSend(v12, "switcherLayoutElementType"))
        {
          v13 = v12;
          objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v8[769]), "objectForKey:", v13);
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          if (v14)
          {
            -[SBFluidSwitcherLayoutContext activeTransitionContext](self->_layoutContext, "activeTransitionContext");
            v15 = (void *)objc_claimAutoreleasedReturnValue();

            if (v15)
            {
              objc_msgSend(v14, "homeGrabberView");
              v16 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v16, "grabberView");
              v17 = (void *)objc_claimAutoreleasedReturnValue();

              if ((objc_msgSend(v17, "isHidden") & 1) == 0)
              {
                -[SBFHomeGrabberSettings hideForHomeGestureOwnershipAnimationSettings](self->_homeGrabberSettings, "hideForHomeGestureOwnershipAnimationSettings");
                v18 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v18, "BSAnimationSettings");
                v19 = (void *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(v17, "setHidden:forReason:withAnimationSettings:", 1, CFSTR("FluidSwitcherHomeGrabberHideReason"), v19);
              }

              v8 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
            }
            else
            {
              objc_msgSend(v14, "setHomeGrabberView:", 0);
            }
          }

        }
      }
      v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v88, v102, 16);
    }
    while (v9);
  }

  v86 = 0u;
  v87 = 0u;
  v84 = 0u;
  v85 = 0u;
  v20 = v72;
  v21 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v84, v101, 16);
  v71 = v20;
  if (v21)
  {
    v22 = v21;
    v23 = *(_QWORD *)v85;
    v24 = *MEMORY[0x1E0C9D648];
    v25 = *(double *)(MEMORY[0x1E0C9D648] + 8);
    v26 = *(double *)(MEMORY[0x1E0C9D648] + 16);
    v27 = *(double *)(MEMORY[0x1E0C9D648] + 24);
    v73 = *(_QWORD *)v85;
    do
    {
      for (j = 0; j != v22; ++j)
      {
        if (*(_QWORD *)v85 != v23)
          objc_enumerationMutation(v20);
        v29 = *(void **)(*((_QWORD *)&v84 + 1) + 8 * j);
        if (!objc_msgSend(v29, "switcherLayoutElementType"))
        {
          v30 = v29;
          objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v8[769]), "objectForKey:", v30);
          v31 = (void *)objc_claimAutoreleasedReturnValue();
          if (v31)
          {
            if (objc_msgSend(v30, "environment") == 2)
            {
              -[SBAppSwitcherSettings floatingSwitcherSettings](self->_settings, "floatingSwitcherSettings");
              v32 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v32, "homeAffordanceSettings");
              v33 = (void *)objc_claimAutoreleasedReturnValue();

            }
            else
            {
              v33 = 0;
            }
            v34 = -[SBHomeGrabberRotationView initWithFrame:settings:useRotationWrapperViews:]([SBHomeGrabberRotationView alloc], "initWithFrame:settings:useRotationWrapperViews:", v33, 0, v24, v25, v26, v27);
            -[SBHomeGrabberRotationView setOrientation:](v34, "setOrientation:", -[SBFluidSwitcherViewController _bestSupportedHomeAffordanceOrientationForOrientation:inAppLayout:](self, "_bestSupportedHomeAffordanceOrientationForOrientation:inAppLayout:", self->_contentOrientation, v30));
            -[SBHomeGrabberRotationView setUserInteractionEnabled:](v34, "setUserInteractionEnabled:", 0);
            objc_msgSend(v31, "setHomeGrabberView:", v34);
            -[SBHomeGrabberRotationView grabberView](v34, "grabberView");
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v35, "setHidden:forReason:withAnimationSettings:", 1, CFSTR("FluidSwitcherHomeGrabberHideReason"), 0);

            -[SBFHomeGrabberSettings unhideAnimationSettings](self->_homeGrabberSettings, "unhideAnimationSettings");
            v36 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v36, "BSAnimationSettings");
            v37 = (void *)objc_claimAutoreleasedReturnValue();

            -[SBHomeGrabberRotationView grabberView](v34, "grabberView");
            v38 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v38, "setHidden:forReason:withAnimationSettings:", 0, CFSTR("FluidSwitcherHomeGrabberHideReason"), v37);

            v8 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
            v20 = v71;
            v23 = v73;
          }

        }
      }
      v22 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v84, v101, 16);
    }
    while (v22);
  }

  v82 = 0u;
  v83 = 0u;
  v80 = 0u;
  v81 = 0u;
  v39 = v70;
  v40 = objc_msgSend(v39, "countByEnumeratingWithState:objects:count:", &v80, v100, 16);
  if (v40)
  {
    v41 = v40;
    v42 = *(_QWORD *)v81;
    v43 = *MEMORY[0x1E0C9D648];
    v44 = *(double *)(MEMORY[0x1E0C9D648] + 8);
    v45 = *(double *)(MEMORY[0x1E0C9D648] + 16);
    v46 = *(double *)(MEMORY[0x1E0C9D648] + 24);
    v74 = v39;
    do
    {
      for (k = 0; k != v41; ++k)
      {
        if (*(_QWORD *)v81 != v42)
          objc_enumerationMutation(v39);
        v48 = *(void **)(*((_QWORD *)&v80 + 1) + 8 * k);
        if (!objc_msgSend(v48, "switcherLayoutElementType"))
        {
          v49 = v48;
          v50 = v8[769];
          objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v50), "objectForKey:", v49);
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          if (v51)
          {
            if (objc_msgSend(v49, "environment") == 2)
            {
              -[SBAppSwitcherSettings floatingSwitcherSettings](self->_settings, "floatingSwitcherSettings");
              v52 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v52, "homeAffordanceSettings");
              v53 = objc_claimAutoreleasedReturnValue();

            }
            else
            {
              v53 = 0;
            }
            objc_msgSend(v51, "homeGrabberView");
            v56 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v56, "grabberView");
            v57 = (void *)objc_claimAutoreleasedReturnValue();

            if (v57)
            {
              if (objc_msgSend(v57, "isHidden"))
              {
                -[SBFHomeGrabberSettings unhideAnimationSettings](self->_homeGrabberSettings, "unhideAnimationSettings");
                v58 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v58, "BSAnimationSettings");
                v59 = (SBHomeGrabberRotationView *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(v57, "setHidden:forReason:withAnimationSettings:", 0, CFSTR("FluidSwitcherHomeGrabberHideReason"), v59);
                goto LABEL_46;
              }
            }
            else
            {
              v59 = -[SBHomeGrabberRotationView initWithFrame:settings:useRotationWrapperViews:]([SBHomeGrabberRotationView alloc], "initWithFrame:settings:useRotationWrapperViews:", v53, 0, v43, v44, v45, v46);
              -[SBHomeGrabberRotationView setUserInteractionEnabled:](v59, "setUserInteractionEnabled:", 0);
              objc_msgSend(v51, "setHomeGrabberView:", v59);
LABEL_46:

              v8 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
            }

            v39 = v74;
          }
          else
          {
            SBLogAppSwitcher();
            v53 = objc_claimAutoreleasedReturnValue();
            if (os_log_type_enabled(v53, OS_LOG_TYPE_ERROR))
            {
              debugName = self->_debugName;
              v55 = objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v50), "count");
              *(_DWORD *)buf = 138543874;
              v95 = debugName;
              v39 = v74;
              v96 = 2114;
              v97 = v49;
              v98 = 2048;
              v99 = v55;
              _os_log_error_impl(&dword_1D0540000, v53, OS_LOG_TYPE_ERROR, "[%{public}@] Didn't find overlayAccessoryView for home affordance to leave (layoutElement: %{public}@) in _visibleOverlayAccessoryViews (count=%lu)", buf, 0x20u);
            }
          }

          continue;
        }
      }
      v41 = objc_msgSend(v39, "countByEnumeratingWithState:objects:count:", &v80, v100, 16);
    }
    while (v41);
  }

  v78 = 0u;
  v79 = 0u;
  v76 = 0u;
  v77 = 0u;
  v60 = v68;
  v61 = objc_msgSend(v60, "countByEnumeratingWithState:objects:count:", &v76, v93, 16);
  if (v61)
  {
    v62 = v61;
    v63 = *(_QWORD *)v77;
    do
    {
      for (m = 0; m != v62; ++m)
      {
        if (*(_QWORD *)v77 != v63)
          objc_enumerationMutation(v60);
        v65 = *(void **)(*((_QWORD *)&v76 + 1) + 8 * m);
        if (!objc_msgSend(v65, "switcherLayoutElementType"))
          -[SBFluidSwitcherViewController _updateEdgeProtectAndAutoHideForHomeAffordancesInAppLayout:withResetDelay:unhideDelay:](self, "_updateEdgeProtectAndAutoHideForHomeAffordancesInAppLayout:withResetDelay:unhideDelay:", v65, 0.0, 0.0);
      }
      v62 = objc_msgSend(v60, "countByEnumeratingWithState:objects:count:", &v76, v93, 16);
    }
    while (v62);
  }

  -[SBFluidSwitcherViewController _updateSuppressingHomeAffordanceBounce](self, "_updateSuppressingHomeAffordanceBounce");
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v67 = WeakRetained;
  if ((*((_BYTE *)&self->_delegateRespondsTo + 3) & 0x10) != 0)
    objc_msgSend(WeakRetained, "switcherContentControllerDidUpdateVisibleHomeAffordances:", self);

}

- (id)_orderedViewsForLayoutElement:(id)a3 excludeSwitcherHostedShelves:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  void *v13;
  UIView **p_dimmingView;
  void *v15;
  void *v16;
  id v17;
  NSMutableSet *visibleShelvesHostedInContentView;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t i;
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t j;
  void *v37;
  void *v38;
  SBFluidSwitcherViewController *v40;
  id v41;
  id v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _QWORD v51[5];
  _QWORD v52[4];
  id v53;
  SBFluidSwitcherViewController *v54;
  id v55;
  _UIPortalView *bezelEffectsPortalView;
  void *v57;
  _UIBackdropView *continuousExposeStripTongueCaptureOnlyBackdropView;
  SBSlideOverTongueView *slideOverTongue;
  SBHomeScreenBackdropViewBase *backdropView;
  UIView *dimmingView;
  _BYTE v62[128];
  _BYTE v63[128];
  uint64_t v64;

  v4 = a4;
  v64 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = 0;
  switch(objc_msgSend(v6, "switcherLayoutElementType"))
  {
    case 0:
      v8 = v6;
      v7 = (void *)objc_opt_new();
      objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = MEMORY[0x1E0C809B0];
      v52[0] = MEMORY[0x1E0C809B0];
      v52[1] = 3221225472;
      v52[2] = __92__SBFluidSwitcherViewController__orderedViewsForLayoutElement_excludeSwitcherHostedShelves___block_invoke;
      v52[3] = &unk_1E8EA4E00;
      v53 = v8;
      v54 = self;
      v11 = v9;
      v55 = v11;
      v42 = v53;
      objc_msgSend(v53, "enumerate:", v52);
      v41 = v6;
      if (v4)
      {
        v12 = (void *)objc_opt_new();
      }
      else
      {
        v17 = objc_alloc(MEMORY[0x1E0C99DE8]);
        visibleShelvesHostedInContentView = self->_visibleShelvesHostedInContentView;
        v51[0] = v10;
        v51[1] = 3221225472;
        v51[2] = __92__SBFluidSwitcherViewController__orderedViewsForLayoutElement_excludeSwitcherHostedShelves___block_invoke_2;
        v51[3] = &unk_1E8EA4E28;
        v51[4] = self;
        -[NSMutableSet bs_map:](visibleShelvesHostedInContentView, "bs_map:", v51);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v19, "allObjects");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = (void *)objc_msgSend(v17, "initWithArray:", v20);

      }
      v40 = self;
      -[SBSwitcherModifier topMostLayoutRolesForAppLayout:](self->_rootModifier, "topMostLayoutRolesForAppLayout:", v42);
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      v47 = 0u;
      v48 = 0u;
      v49 = 0u;
      v50 = 0u;
      v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v47, v63, 16);
      if (v22)
      {
        v23 = v22;
        v24 = *(_QWORD *)v48;
        do
        {
          for (i = 0; i != v23; ++i)
          {
            if (*(_QWORD *)v48 != v24)
              objc_enumerationMutation(v21);
            v26 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * i);
            objc_msgSend(v11, "objectForKey:", v26);
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            if (v27)
            {
              objc_msgSend(v7, "addObject:", v27);
              objc_msgSend(v11, "removeObjectForKey:", v26);
              v28 = objc_msgSend(v26, "integerValue");
              v29 = objc_msgSend(v42, "environment");
              v30 = v28 == 4 || v29 == 3;
              if (v30 && objc_msgSend(v12, "count"))
              {
                objc_msgSend(v7, "addObjectsFromArray:", v12);
                objc_msgSend(v12, "removeAllObjects");
              }
            }

          }
          v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v47, v63, 16);
        }
        while (v23);
      }
      if (objc_msgSend(v11, "count"))
      {
        objc_msgSend(v11, "allValues");
        v31 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v7, "addObjectsFromArray:", v31);

      }
      v45 = 0u;
      v46 = 0u;
      v43 = 0u;
      v44 = 0u;
      v32 = v12;
      v33 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v43, v62, 16);
      if (v33)
      {
        v34 = v33;
        v35 = *(_QWORD *)v44;
        do
        {
          for (j = 0; j != v34; ++j)
          {
            if (*(_QWORD *)v44 != v35)
              objc_enumerationMutation(v32);
            objc_msgSend(v7, "insertObject:atIndex:", *(_QWORD *)(*((_QWORD *)&v43 + 1) + 8 * j), 0);
          }
          v34 = objc_msgSend(v32, "countByEnumeratingWithState:objects:count:", &v43, v62, 16);
        }
        while (v34);
      }

      -[NSMutableDictionary objectForKey:](v40->_visibleOverlayAccessoryViews, "objectForKey:", v42);
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      if (v37)
        objc_msgSend(v7, "insertObject:atIndex:", v37, 0);
      -[NSMutableDictionary objectForKey:](v40->_visibleUnderlayAccessoryViews, "objectForKey:", v42);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      if (v38)
        objc_msgSend(v7, "addObject:", v38);

      v6 = v41;
      goto LABEL_50;
    case 2:
      if (!self->_dimmingView)
        goto LABEL_17;
      dimmingView = self->_dimmingView;
      v13 = (void *)MEMORY[0x1E0C99D20];
      p_dimmingView = &dimmingView;
      goto LABEL_16;
    case 3:
      if (!self->_backdropView)
        goto LABEL_17;
      backdropView = self->_backdropView;
      v13 = (void *)MEMORY[0x1E0C99D20];
      p_dimmingView = (UIView **)&backdropView;
      goto LABEL_16;
    case 4:
      if (!self->_slideOverTongue)
        goto LABEL_17;
      slideOverTongue = self->_slideOverTongue;
      v13 = (void *)MEMORY[0x1E0C99D20];
      p_dimmingView = (UIView **)&slideOverTongue;
      goto LABEL_16;
    case 6:
      if (!self->_continuousExposeStripTongueCaptureOnlyBackdropView)
        goto LABEL_17;
      continuousExposeStripTongueCaptureOnlyBackdropView = self->_continuousExposeStripTongueCaptureOnlyBackdropView;
      v13 = (void *)MEMORY[0x1E0C99D20];
      p_dimmingView = (UIView **)&continuousExposeStripTongueCaptureOnlyBackdropView;
      goto LABEL_16;
    case 7:
      -[NSMutableDictionary objectForKey:](self->_visibleShelves, "objectForKey:", v6);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "viewIfLoaded");
      v16 = (void *)objc_claimAutoreleasedReturnValue();

      if (v16)
      {
        v57 = v16;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v57, 1);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
        v7 = 0;
      }

      goto LABEL_50;
    case 8:
      if (self->_bezelEffectsPortalView)
      {
        bezelEffectsPortalView = self->_bezelEffectsPortalView;
        v13 = (void *)MEMORY[0x1E0C99D20];
        p_dimmingView = (UIView **)&bezelEffectsPortalView;
LABEL_16:
        objc_msgSend(v13, "arrayWithObjects:count:", p_dimmingView, 1);
        v7 = (void *)objc_claimAutoreleasedReturnValue();
      }
      else
      {
LABEL_17:
        v7 = 0;
      }
LABEL_50:

      return v7;
    default:
      goto LABEL_50;
  }
}

- (void)_updateSuppressingHomeAffordanceBounce
{
  _BOOL8 v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  void *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  if (__sb__runningInSpringBoard())
  {
    v3 = SBFEffectiveDeviceClass() == 2 && self->_isKeyboardShowing;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v3 = objc_msgSend(v4, "userInterfaceIdiom") == 1 && self->_isKeyboardShowing;

  }
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[SBFluidSwitcherViewController _spacesWithVisibleHomeAffordances](self, "_spacesWithVisibleHomeAffordances", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v14;
    do
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v14 != v8)
          objc_enumerationMutation(v5);
        -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * i));
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "homeGrabberView");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v11, "grabberView");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "setSuppressesBounce:", v3);

      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v7);
  }

}

- (id)_spacesWithVisibleHomeAffordances
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  _QWORD v8[5];

  v3 = (void *)MEMORY[0x1E0C99E60];
  -[NSMutableDictionary allKeys](self->_visibleOverlayAccessoryViews, "allKeys");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __66__SBFluidSwitcherViewController__spacesWithVisibleHomeAffordances__block_invoke;
  v8[3] = &unk_1E8E9DF78;
  v8[4] = self;
  objc_msgSend(v4, "bs_filter:", v8);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setWithArray:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (void)_updateAnimatableProperties
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t j;
  uint64_t v14;
  id v15;
  NSMutableDictionary *animatableProperties;
  NSMutableDictionary *v17;
  NSMutableDictionary *v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t k;
  uint64_t v24;
  void *v25;
  SBSwitcherModifier *rootModifier;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void (**activeTransitionSubcompletionGenerator)(id, _QWORD);
  void *v32;
  void *v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  id v38;
  id obj;
  void *v40;
  _QWORD v41[4];
  id v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _QWORD v48[4];
  id v49;
  id location;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _QWORD v59[4];
  id v60;
  _QWORD v61[4];
  id v62;
  _BYTE v63[128];
  uint64_t v64;
  id v65;
  _BYTE v66[128];
  _BYTE v67[128];
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  -[NSMutableDictionary allKeys](self->_animatableProperties, "allKeys");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBSwitcherModifier animatablePropertyIdentifiers](self->_rootModifier, "animatablePropertyIdentifiers");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v61[0] = MEMORY[0x1E0C809B0];
  v61[1] = 3221225472;
  v61[2] = __60__SBFluidSwitcherViewController__updateAnimatableProperties__block_invoke;
  v61[3] = &unk_1E8E9DE38;
  v36 = v3;
  v62 = v36;
  objc_msgSend(v4, "bs_filter:", v61);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v59[0] = MEMORY[0x1E0C809B0];
  v59[1] = 3221225472;
  v59[2] = __60__SBFluidSwitcherViewController__updateAnimatableProperties__block_invoke_2;
  v59[3] = &unk_1E8E9DE38;
  v35 = v4;
  v60 = v35;
  objc_msgSend(v36, "bs_filter:", v59);
  v57 = 0u;
  v58 = 0u;
  v55 = 0u;
  v56 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v55, v67, 16);
  if (v6)
  {
    v7 = *(_QWORD *)v56;
    do
    {
      for (i = 0; i != v6; ++i)
      {
        if (*(_QWORD *)v56 != v7)
          objc_enumerationMutation(obj);
        v9 = *(_QWORD *)(*((_QWORD *)&v55 + 1) + 8 * i);
        -[NSMutableDictionary objectForKey:](self->_animatableProperties, "objectForKey:", v9);
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v10, "invalidate");
        -[NSMutableDictionary removeObjectForKey:](self->_animatableProperties, "removeObjectForKey:", v9);

      }
      v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v55, v67, 16);
    }
    while (v6);
  }

  v40 = (void *)objc_opt_new();
  v53 = 0u;
  v54 = 0u;
  v51 = 0u;
  v52 = 0u;
  v38 = v5;
  v11 = objc_msgSend(v38, "countByEnumeratingWithState:objects:count:", &v51, v66, 16);
  if (v11)
  {
    v12 = *(_QWORD *)v52;
    do
    {
      for (j = 0; j != v11; ++j)
      {
        if (*(_QWORD *)v52 != v12)
          objc_enumerationMutation(v38);
        v14 = *(_QWORD *)(*((_QWORD *)&v51 + 1) + 8 * j);
        v15 = objc_alloc_init(MEMORY[0x1E0CEABC0]);
        -[SBSwitcherModifier modelValueForAnimatableProperty:currentValue:creating:](self->_rootModifier, "modelValueForAnimatableProperty:currentValue:creating:", v14, 1, 0.0);
        objc_msgSend(v15, "setValue:");
        animatableProperties = self->_animatableProperties;
        if (!animatableProperties)
        {
          v17 = (NSMutableDictionary *)objc_opt_new();
          v18 = self->_animatableProperties;
          self->_animatableProperties = v17;

          animatableProperties = self->_animatableProperties;
        }
        v64 = v14;
        v65 = v15;
        objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v65, &v64, 1);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSMutableDictionary addEntriesFromDictionary:](animatableProperties, "addEntriesFromDictionary:", v19);

        objc_msgSend(v40, "addObject:", v15);
      }
      v11 = objc_msgSend(v38, "countByEnumeratingWithState:objects:count:", &v51, v66, 16);
    }
    while (v11);
  }

  if (objc_msgSend(v40, "count"))
  {
    objc_initWeak(&location, self);
    v20 = (void *)MEMORY[0x1E0CEABB0];
    v48[0] = MEMORY[0x1E0C809B0];
    v48[1] = 3221225472;
    v48[2] = __60__SBFluidSwitcherViewController__updateAnimatableProperties__block_invoke_3;
    v48[3] = &unk_1E8E9DF28;
    objc_copyWeak(&v49, &location);
    objc_msgSend(v20, "_createTransformerWithInputAnimatableProperties:presentationValueChangedCallback:", v40, v48);
    objc_destroyWeak(&v49);
    objc_destroyWeak(&location);
  }
  v46 = 0u;
  v47 = 0u;
  v44 = 0u;
  v45 = 0u;
  -[NSMutableDictionary allKeys](self->_animatableProperties, "allKeys");
  v37 = (id)objc_claimAutoreleasedReturnValue();
  v21 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v44, v63, 16);
  if (v21)
  {
    v22 = *(_QWORD *)v45;
    do
    {
      for (k = 0; k != v21; ++k)
      {
        if (*(_QWORD *)v45 != v22)
          objc_enumerationMutation(v37);
        v24 = *(_QWORD *)(*((_QWORD *)&v44 + 1) + 8 * k);
        if (-[SBSwitcherModifier shouldUpdateAnimatableProperty:](self->_rootModifier, "shouldUpdateAnimatableProperty:", v24))
        {
          -[NSMutableDictionary valueForKey:](self->_animatableProperties, "valueForKey:", v24);
          v25 = (void *)objc_claimAutoreleasedReturnValue();
          rootModifier = self->_rootModifier;
          objc_msgSend(v25, "value");
          -[SBSwitcherModifier modelValueForAnimatableProperty:currentValue:creating:](rootModifier, "modelValueForAnimatableProperty:currentValue:creating:", v24, 0);
          v28 = v27;
          objc_msgSend(v25, "value");
          if ((BSFloatEqualToFloat() & 1) == 0)
          {
            v29 = -[SBSwitcherModifier updateModeForAnimatableProperty:](self->_rootModifier, "updateModeForAnimatableProperty:", v24);
            -[SBSwitcherModifier settingsForAnimatableProperty:](self->_rootModifier, "settingsForAnimatableProperty:", v24);
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            activeTransitionSubcompletionGenerator = (void (**)(id, _QWORD))self->_activeTransitionSubcompletionGenerator;
            if (activeTransitionSubcompletionGenerator)
            {
              activeTransitionSubcompletionGenerator[2](activeTransitionSubcompletionGenerator, v24);
              v32 = (void *)objc_claimAutoreleasedReturnValue();
              v33 = (void *)MEMORY[0x1D17E5550]();

            }
            else
            {
              v33 = 0;
            }
            v34 = (void *)MEMORY[0x1E0CEABB0];
            v41[0] = MEMORY[0x1E0C809B0];
            v41[1] = 3221225472;
            v41[2] = __60__SBFluidSwitcherViewController__updateAnimatableProperties__block_invoke_4;
            v41[3] = &unk_1E8E9DE88;
            v42 = v25;
            v43 = v28;
            objc_msgSend(v34, "sb_animateWithSettings:mode:animations:completion:", v30, v29, v41, v33);

          }
        }
      }
      v21 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v44, v63, 16);
    }
    while (v21);
  }

}

- (int64_t)_bestSupportedHomeAffordanceOrientationForOrientation:(int64_t)a3 inAppLayout:(id)a4
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  uint64_t v12;
  int64_t v13;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  objc_msgSend(a4, "leafAppLayouts", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v16;
    while (2)
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v16 != v9)
          objc_enumerationMutation(v6);
        -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * i));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_opt_respondsToSelector() & 1) != 0)
        {
          v12 = objc_msgSend(v11, "bestHomeAffordanceOrientationForOrientation:", a3);
          if (v12 != a3)
          {
            v13 = v12;

            a3 = v13;
            goto LABEL_12;
          }
        }

      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      if (v8)
        continue;
      break;
    }
  }
LABEL_12:

  return a3;
}

- (void)_updateTitlePresenceForAdjustedAppLayout:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  _BOOL4 v7;
  void *v8;
  _BOOL8 v9;
  _BOOL8 v10;
  void *v11;
  void *v12;
  uint64_t v13;
  SBFluidSwitcherSpaceTitleItemController *v14;
  SBSceneManager *sceneManager;
  void *v16;
  SBFluidSwitcherSpaceTitleItemController *v17;
  NSMutableDictionary *appLayoutToTitleItemController;
  NSMutableDictionary *v19;
  NSMutableDictionary *v20;
  void *v21;
  void *v22;
  _BOOL4 v23;
  void *v24;
  void *v25;
  _QWORD v26[4];
  id v27;
  uint64_t *v28;
  id v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  id location;
  _QWORD v35[5];
  id v36;
  id v37;
  id v38;

  v4 = a3;
  -[NSMutableDictionary objectForKey:](self->_visibleUnderlayAccessoryViews, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = -[SBFluidSwitcherViewController _allowsTitleItemsForAppLayout:](self, "_allowsTitleItemsForAppLayout:", v4);
  -[NSMutableDictionary objectForKey:](self->_appLayoutToTitleItemController, "objectForKey:", v4);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = -[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled");
  if (!v8)
  {
    if (v7)
      goto LABEL_5;
    objc_msgSend(v6, "titleItems");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    if (v21)
    {

    }
    else
    {
      objc_msgSend(v5, "titleItems");
      v22 = (void *)objc_claimAutoreleasedReturnValue();

      if (!v22)
        goto LABEL_17;
    }
LABEL_16:
    objc_msgSend(v5, "setTitleItems:animated:", 0, 0);
    objc_msgSend(v6, "setTitleItems:animated:", 0, 0);
    goto LABEL_17;
  }
  if (!(v7 & (v9 ^ objc_msgSend(v8, "isChamoisWindowingEnabled"))))
  {
    if (v7)
      goto LABEL_17;
    objc_msgSend(v8, "invalidate");
    -[NSMutableDictionary removeObjectForKey:](self->_appLayoutToTitleItemController, "removeObjectForKey:", v4);
    goto LABEL_16;
  }
  objc_msgSend(v8, "invalidate");
  objc_msgSend(v5, "setTitleItems:animated:", 0, 0);
  objc_msgSend(v6, "setTitleItems:animated:", 0, 0);
  v35[0] = MEMORY[0x1E0C809B0];
  v35[1] = 3221225472;
  v35[2] = __74__SBFluidSwitcherViewController__updateTitlePresenceForAdjustedAppLayout___block_invoke;
  v35[3] = &unk_1E8E9F108;
  v35[4] = self;
  v36 = v4;
  v37 = v5;
  v38 = v6;
  -[SBFluidSwitcherViewController _performWithFixedUpdateMode:usingBlock:](self, "_performWithFixedUpdateMode:usingBlock:", 2, v35);

LABEL_5:
  v24 = v6;
  v25 = v5;
  if (__sb__runningInSpringBoard())
  {
    v10 = SBFEffectiveDeviceClass() == 2;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v11, "userInterfaceIdiom") == 1;

  }
  v23 = -[SBFluidSwitcherViewController _shouldItemContainersUseDarkLabels](self, "_shouldItemContainersUseDarkLabels");
  -[SBFluidSwitcherViewController traitCollection](self, "traitCollection");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "userInterfaceStyle");

  v14 = [SBFluidSwitcherSpaceTitleItemController alloc];
  sceneManager = self->_sceneManager;
  -[SBSceneManager displayIdentity](sceneManager, "displayIdentity");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = -[SBFluidSwitcherSpaceTitleItemController initWithAppLayout:applicationSceneHandleProvider:displayIdentity:showCanvasTitles:isChamoisWindowingEnabled:](v14, "initWithAppLayout:applicationSceneHandleProvider:displayIdentity:showCanvasTitles:isChamoisWindowingEnabled:", v4, sceneManager, v16, v10, v9);

  appLayoutToTitleItemController = self->_appLayoutToTitleItemController;
  if (!appLayoutToTitleItemController)
  {
    v19 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    v20 = self->_appLayoutToTitleItemController;
    self->_appLayoutToTitleItemController = v19;

    appLayoutToTitleItemController = self->_appLayoutToTitleItemController;
  }
  -[NSMutableDictionary setObject:forKey:](appLayoutToTitleItemController, "setObject:forKey:", v17, v4);
  objc_initWeak(&location, self);
  v30 = 0;
  v31 = &v30;
  v32 = 0x2020000000;
  v33 = 1;
  -[SBFluidSwitcherSpaceTitleItemController setUseDarkLabels:](v17, "setUseDarkLabels:", v23);
  v6 = v24;
  v5 = v25;
  -[SBFluidSwitcherSpaceTitleItemController setUserInterfaceStyle:](v17, "setUserInterfaceStyle:", v13);
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __74__SBFluidSwitcherViewController__updateTitlePresenceForAdjustedAppLayout___block_invoke_2;
  v26[3] = &unk_1E8EA4C48;
  objc_copyWeak(&v29, &location);
  v27 = v4;
  v28 = &v30;
  -[SBFluidSwitcherSpaceTitleItemController setUpdateHandler:](v17, "setUpdateHandler:", v26);
  *((_BYTE *)v31 + 24) = 0;

  objc_destroyWeak(&v29);
  _Block_object_dispose(&v30, 8);
  objc_destroyWeak(&location);

LABEL_17:
}

- (BOOL)_allowsTitleItemsForAppLayout:(id)a3
{
  id v4;
  id WeakRetained;
  void *v6;
  char v7;

  v4 = a3;
  WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  v6 = WeakRetained;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 2) & 4) != 0)
    v7 = objc_msgSend(WeakRetained, "switcherContentController:supportsTitleItemsForAppLayout:", self, v4);
  else
    v7 = 1;

  return v7;
}

- (id)_dequeueUnderlayAccessoryViewFromReusePool
{
  uint64_t v3;
  SBFluidSwitcherSpaceUnderlayAccessoryView *v4;
  SBFluidSwitcherSpaceUnderlayAccessoryView *v5;
  void *v6;
  void *v7;

  -[NSMutableSet anyObject](self->_underlayAccessoryViewsReusePool, "anyObject");
  v3 = objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = (SBFluidSwitcherSpaceUnderlayAccessoryView *)v3;
    -[NSMutableSet removeObject:](self->_underlayAccessoryViewsReusePool, "removeObject:", v3);
  }
  else
  {
    v5 = [SBFluidSwitcherSpaceUnderlayAccessoryView alloc];
    -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "systemPointerInteractionManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = -[SBFluidSwitcherSpaceUnderlayAccessoryView initWithDelegate:systemPointerInteractionManager:](v5, "initWithDelegate:systemPointerInteractionManager:", self, v7);

  }
  return v4;
}

- (id)_dequeueOverlayAccessoryViewFromReusePool
{
  uint64_t v3;
  SBFluidSwitcherSpaceOverlayAccessoryView *v4;

  -[NSMutableSet anyObject](self->_overlayAccessoryViewsReusePool, "anyObject");
  v3 = objc_claimAutoreleasedReturnValue();
  if (v3)
  {
    v4 = (SBFluidSwitcherSpaceOverlayAccessoryView *)v3;
    -[NSMutableSet removeObject:](self->_overlayAccessoryViewsReusePool, "removeObject:", v3);
  }
  else
  {
    v4 = -[SBFluidSwitcherSpaceOverlayAccessoryView initWithDelegate:]([SBFluidSwitcherSpaceOverlayAccessoryView alloc], "initWithDelegate:", self);
  }
  return v4;
}

uint64_t __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_5(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

uint64_t __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_6(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "containsObject:", a2) ^ 1;
}

- (void)_performBlurItemContainerResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  void *v12;
  int v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  objc_msgSend(v4, "appLayout", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "leafAppLayouts");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v7)
  {
    v8 = v7;
    v9 = *(_QWORD *)v16;
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v16 != v9)
          objc_enumerationMutation(v6);
        -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * i));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        if (v11)
        {
          objc_msgSend(v4, "blurParameters");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          v13 = objc_msgSend(v4, "shouldBlur");
          v14 = objc_msgSend(v4, "animationUpdateMode");
          if (v13)
            -[SBFluidSwitcherViewController _blurItemContainer:blurParameters:withAnimationUpdateMode:](self, "_blurItemContainer:blurParameters:withAnimationUpdateMode:", v11, v12, v14);
          else
            -[SBFluidSwitcherViewController _unblurItemContainer:blurParameters:withAnimationUpdateMode:](self, "_unblurItemContainer:blurParameters:withAnimationUpdateMode:", v11, v12, v14);

        }
      }
      v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v8);
  }

}

- (void)_blurItemContainer:(id)a3 blurParameters:(id)a4 withAnimationUpdateMode:(int64_t)a5
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD v21[4];
  id v22;
  id v23;
  _QWORD v24[2];

  v24[1] = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  if (!UIAccessibilityIsReduceTransparencyEnabled())
  {
    objc_msgSend(v7, "layer");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "filters");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "count");

    if (!v11)
    {
      objc_msgSend(MEMORY[0x1E0CD2780], "filterWithType:", *MEMORY[0x1E0CD2C88]);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setName:", CFSTR("gaussianBlur"));
      SBStringForBlurItemContainerQuality(objc_msgSend(v8, "inputIntermediateBitDepth"));
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setValue:forKey:", v13, CFSTR("inputIntermediateBitDepth"));

      SBStringForBlurItemContainerQuality(objc_msgSend(v8, "inputQuality"));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "setValue:forKey:", v14, CFSTR("inputQuality"));

      objc_msgSend(v12, "setValue:forKey:", &unk_1E91CF668, CFSTR("inputRadius"));
      objc_msgSend(v7, "layer");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v24[0] = v12;
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v24, 1);
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "setFilters:", v16);

    }
    if (objc_msgSend(v8, "shouldRasterize"))
    {
      objc_msgSend(v7, "layer");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "rasterizationScale");
      objc_msgSend(v17, "setRasterizationScale:");

      objc_msgSend(v7, "layer");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setShouldRasterize:", 1);

    }
    v19 = (void *)MEMORY[0x1E0CEABB0];
    objc_msgSend(v8, "blurAnimationSettings");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v21[0] = MEMORY[0x1E0C809B0];
    v21[1] = 3221225472;
    v21[2] = __91__SBFluidSwitcherViewController__blurItemContainer_blurParameters_withAnimationUpdateMode___block_invoke;
    v21[3] = &unk_1E8E9E820;
    v22 = v7;
    v23 = v8;
    objc_msgSend(v19, "sb_animateWithSettings:mode:animations:completion:", v20, a5, v21, 0);

  }
}

- (void)_setupLiveContentOverlayForAppLayout:(id)a3 itemContainer:(id)a4 overlay:(id)a5
{
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;

  v13 = a3;
  v8 = a4;
  v9 = a5;
  objc_msgSend(v9, "setDelegate:", self);
  -[SBFluidSwitcherViewController _updateStatusBarAndHomeGrabberVisibilityForAppLayout:animated:](self, "_updateStatusBarAndHomeGrabberVisibilityForAppLayout:animated:", v13, 1);
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "indexOfObject:", v13);

  if (v11 != 0x7FFFFFFFFFFFFFFFLL)
    -[SBFluidSwitcherViewController _applyStyleToLiveContentOverlay:forItemContainer:atIndex:](self, "_applyStyleToLiveContentOverlay:forItemContainer:atIndex:", v9, v8, v11);
  -[SBFluidSwitcherViewController _updateAutoHideForItemContainer:appLayout:](self, "_updateAutoHideForItemContainer:appLayout:", v8, v13);
  -[SBFluidSwitcherViewController _applyTouchBehaviorToLiveContentOverlay:forAppLayout:](self, "_applyTouchBehaviorToLiveContentOverlay:forAppLayout:", v9, v13);
  -[SBFluidSwitcherViewController _updateAsyncRenderingAndResizesHostedContext](self, "_updateAsyncRenderingAndResizesHostedContext");
  -[SBFluidSwitcherViewController _updateWantsEnhancedWindowingEnabledState](self, "_updateWantsEnhancedWindowingEnabledState");
  -[SBFluidSwitcherViewController _updateCornerRadiiiAndMaximizedState](self, "_updateCornerRadiiiAndMaximizedState");
  +[SBBlurItemContainerParameters defaultCrossblurBlurParameters](SBBlurItemContainerParameters, "defaultCrossblurBlurParameters");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _unblurItemContainer:blurParameters:withAnimationUpdateMode:](self, "_unblurItemContainer:blurParameters:withAnimationUpdateMode:", v8, v12, 2);

}

uint64_t __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke_4(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  double v5;

  objc_msgSend(*(id *)(a1 + 32), "setAlpha:", *(double *)(a1 + 64));
  v2 = *(void **)(a1 + 32);
  v3 = *(void **)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "shelfFocusedDisplayItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setDrawsFocusIndicator:", objc_msgSend(v3, "containsAnyItemFromSet:", v4));

  objc_msgSend(*(id *)(a1 + 56), "setAlpha:", *(double *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 56), "setBackgroundOpacity:", *(double *)(a1 + 72));
  objc_msgSend(*(id *)(a1 + 56), "setShadowOffset:", *(double *)(a1 + 80));
  objc_msgSend(*(id *)(a1 + 56), "setShadowAlpha:", *(double *)(a1 + 88));
  objc_msgSend(*(id *)(a1 + 56), "setShadowStyle:", *(_QWORD *)(a1 + 96));
  v5 = 1.0;
  if (!*(_BYTE *)(a1 + 104))
    v5 = 0.0;
  return objc_msgSend(*(id *)(a1 + 56), "setResizeGrabberOpacity:", v5);
}

- (id)shelfFocusedDisplayItems
{
  NSSet *shelfFocusedDisplayItems;

  shelfFocusedDisplayItems = self->_shelfFocusedDisplayItems;
  if (shelfFocusedDisplayItems)
    return shelfFocusedDisplayItems;
  objc_msgSend(MEMORY[0x1E0C99E60], "set");
  return (id)objc_claimAutoreleasedReturnValue();
}

void __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke_2(uint64_t a1)
{
  void *v2;
  char v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1872), "objectForKey:", *(_QWORD *)(a1 + 40));
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_msgSend(*(id *)(a1 + 32), "_applyStyleToLiveContentOverlay:forItemContainer:atIndex:", v5, *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56));
    objc_msgSend(*(id *)(a1 + 32), "_applyTouchBehaviorToLiveContentOverlay:forAppLayout:", v5, *(_QWORD *)(a1 + 40));
  }
  objc_msgSend(*(id *)(a1 + 48), "setContentViewBlocksTouches:", *(_BYTE *)(a1 + 152) == 0);
  objc_msgSend(*(id *)(a1 + 48), "contentView");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_opt_respondsToSelector();

  if ((v3 & 1) != 0)
  {
    objc_msgSend(*(id *)(a1 + 48), "contentView");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setShouldUseBrightMaterial:", *(unsigned __int8 *)(a1 + 153));

  }
  objc_msgSend(*(id *)(a1 + 48), "setAlpha:", *(double *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 48), "setShadowAlpha:", *(double *)(a1 + 72));
  objc_msgSend(*(id *)(a1 + 48), "setShadowOffset:", *(double *)(a1 + 80));
  objc_msgSend(*(id *)(a1 + 48), "setDimmingAlpha:", *(double *)(a1 + 88));
  objc_msgSend(*(id *)(a1 + 48), "setTintStyle:", *(_QWORD *)(a1 + 96));
  objc_msgSend(*(id *)(a1 + 48), "setLighteningAlpha:", *(double *)(a1 + 104));
  objc_msgSend(*(id *)(a1 + 48), "setShouldUseBackgroundWallpaperTreatment:", *(unsigned __int8 *)(a1 + 154));
  objc_msgSend(*(id *)(a1 + 48), "setWallpaperOverlayAlpha:", *(double *)(a1 + 112));
  objc_msgSend(*(id *)(a1 + 48), "setPointerInteractionEnabled:", *(unsigned __int8 *)(a1 + 155));
  objc_msgSend(*(id *)(a1 + 48), "setPointerInteractionHitTestPadding:", *(double *)(a1 + 120));
  objc_msgSend(*(id *)(a1 + 48), "setShadowStyle:", *(_QWORD *)(a1 + 128));
  objc_msgSend(*(id *)(a1 + 48), "setAllowedTouchResizeCorners:", *(_QWORD *)(a1 + 136));
  objc_msgSend(*(id *)(a1 + 48), "setResizingAllowed:", *(unsigned __int8 *)(a1 + 156));
  objc_msgSend(*(id *)(a1 + 48), "setOccludedInContinuousExposeStage:", *(_QWORD *)(a1 + 144) != 2);

}

- (void)_applyTouchBehaviorToLiveContentOverlay:(id)a3 forAppLayout:(id)a4
{
  NSDictionary *leafAppLayoutsToAdjustedAppLayouts;
  id v7;
  id v8;
  void *v9;
  id v10;

  leafAppLayoutsToAdjustedAppLayouts = self->_leafAppLayoutsToAdjustedAppLayouts;
  v7 = a4;
  v8 = a3;
  -[NSDictionary objectForKey:](leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v7);
  v10 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "itemForLayoutRole:", 1);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "setTouchBehavior:", -[SBSwitcherModifier touchBehaviorForLayoutRole:inAppLayout:](self->_rootModifier, "touchBehaviorForLayoutRole:inAppLayout:", objc_msgSend(v10, "layoutRoleForItem:", v9), v10));
}

- (void)_updateAutoHideForGrabberAffordancesInAppLayout:(id)a3 withResetDelay:(double)a4 unhideDelay:(double)a5
{
  id v6;
  id v7;

  v6 = a3;
  -[SBFluidSwitcherViewController _itemContainerForAppLayoutIfExists:](self, "_itemContainerForAppLayoutIfExists:", v6);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _updateAutoHideForItemContainer:appLayout:](self, "_updateAutoHideForItemContainer:appLayout:", v7, v6);

}

- (void)_updateAutoHideForItemContainer:(id)a3 appLayout:(id)a4
{
  SBSwitcherLiveContentOverlayCoordinating *liveContentOverlayCoordinator;
  id v6;
  uint64_t v7;
  id v8;

  liveContentOverlayCoordinator = self->_liveContentOverlayCoordinator;
  v6 = a3;
  v7 = -[SBSwitcherLiveContentOverlayCoordinating wantsHomeAffordanceAutoHideForAppLayout:](liveContentOverlayCoordinator, "wantsHomeAffordanceAutoHideForAppLayout:", a4);
  objc_msgSend(v6, "affordancePresenceController");
  v8 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "setAutoHideAffordance:", v7);
}

- (void)_unblurItemContainer:(id)a3 blurParameters:(id)a4 withAnimationUpdateMode:(int64_t)a5
{
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  id v12;
  _QWORD v13[4];
  id v14;
  SBFluidSwitcherViewController *v15;
  _QWORD v16[4];
  id v17;

  v8 = a3;
  v9 = (void *)MEMORY[0x1E0CEABB0];
  objc_msgSend(a4, "blurAnimationSettings");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = MEMORY[0x1E0C809B0];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __93__SBFluidSwitcherViewController__unblurItemContainer_blurParameters_withAnimationUpdateMode___block_invoke;
  v16[3] = &unk_1E8E9DED8;
  v17 = v8;
  v13[0] = v11;
  v13[1] = 3221225472;
  v13[2] = __93__SBFluidSwitcherViewController__unblurItemContainer_blurParameters_withAnimationUpdateMode___block_invoke_2;
  v13[3] = &unk_1E8EA46C0;
  v14 = v17;
  v15 = self;
  v12 = v17;
  objc_msgSend(v9, "sb_animateWithSettings:mode:animations:completion:", v10, a5, v16, v13);

}

- (void)_updateEdgeProtectAndAutoHideForHomeAffordancesInAppLayout:(id)a3 withResetDelay:(double)a4 unhideDelay:(double)a5
{
  id v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  NSObject *v20;
  void *v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[128];
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "homeGrabberView");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "grabberView");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
  {
    v24 = 0u;
    v25 = 0u;
    v22 = 0u;
    v23 = 0u;
    -[SBFluidSwitcherViewController _leafAppLayoutsInAppLayout:intersectingHomeGrabber:](self, "_leafAppLayoutsInAppLayout:intersectingHomeGrabber:", v8, v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
    if (v13)
    {
      v14 = v13;
      v21 = v11;
      v15 = 0;
      v16 = 0;
      v17 = *(_QWORD *)v23;
      do
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v23 != v17)
            objc_enumerationMutation(v12);
          v19 = *(_QWORD *)(*((_QWORD *)&v22 + 1) + 8 * i);
          v16 |= -[SBSwitcherLiveContentOverlayCoordinating wantsEdgeProtectForHomeGestureForAppLayout:](self->_liveContentOverlayCoordinator, "wantsEdgeProtectForHomeGestureForAppLayout:", v19, v21);
          v15 |= -[SBSwitcherLiveContentOverlayCoordinating wantsHomeAffordanceAutoHideForAppLayout:](self->_liveContentOverlayCoordinator, "wantsHomeAffordanceAutoHideForAppLayout:", v19);
        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v22, v26, 16);
      }
      while (v14);

      v11 = v21;
      objc_msgSend(v21, "setEdgeProtectEnabled:", v16 & 1);
      if (!(v16 & 1 | ((v15 & 1) == 0)))
      {
        objc_msgSend(v21, "turnOnAutoHideWithInitialDelay:", a4);
        goto LABEL_16;
      }
    }
    else
    {

      objc_msgSend(v11, "setEdgeProtectEnabled:", 0);
    }
    objc_msgSend(v11, "turnOffAutoHideWithDelay:", a5);
    goto LABEL_16;
  }
  SBLogAppSwitcher();
  v20 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
    -[SBFluidSwitcherViewController _updateEdgeProtectAndAutoHideForHomeAffordancesInAppLayout:withResetDelay:unhideDelay:].cold.1();

LABEL_16:
}

- (id)_leafAppLayoutsInAppLayout:(id)a3 intersectingHomeGrabber:(id)a4
{
  id v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  void *v18;
  SBFluidSwitcherContentView *contentView;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double MaxX;
  double v29;
  double v30;
  _BOOL4 v31;
  void *v33;
  void *v34;
  void *v35;
  id v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  double MinX;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  _BYTE v46[128];
  uint64_t v47;
  CGRect v48;
  CGRect v49;
  CGRect v50;
  CGRect v51;

  v47 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v36 = (id)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v6);
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "bounds");
  objc_msgSend(v7, "grabberFrameForBounds:");
  v34 = v7;
  -[SBFluidSwitcherContentView convertRect:fromView:](self->_contentView, "convertRect:fromView:", v7);
  v39 = v9;
  v40 = v8;
  v37 = v11;
  v38 = v10;
  v42 = 0u;
  v43 = 0u;
  v44 = 0u;
  v45 = 0u;
  v35 = v6;
  objc_msgSend(v6, "leafAppLayouts");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v42, v46, 16);
  if (v13)
  {
    v14 = v13;
    v15 = *(_QWORD *)v43;
    do
    {
      for (i = 0; i != v14; ++i)
      {
        if (*(_QWORD *)v43 != v15)
          objc_enumerationMutation(v12);
        v17 = *(_QWORD *)(*((_QWORD *)&v42 + 1) + 8 * i);
        -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        contentView = self->_contentView;
        objc_msgSend(v18, "bounds");
        -[SBFluidSwitcherContentView convertRect:fromView:](contentView, "convertRect:fromView:", v18);
        v21 = v20;
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v48.origin.x = v40;
        v48.origin.y = v39;
        v48.size.width = v38;
        v48.size.height = v37;
        MinX = CGRectGetMinX(v48);
        v49.origin.x = v40;
        v49.origin.y = v39;
        v49.size.width = v38;
        v49.size.height = v37;
        MaxX = CGRectGetMaxX(v49);
        v50.origin.x = v21;
        v50.origin.y = v23;
        v50.size.width = v25;
        v50.size.height = v27;
        v29 = CGRectGetMinX(v50);
        v51.origin.x = v21;
        v51.origin.y = v23;
        v51.size.width = v25;
        v51.size.height = v27;
        v30 = CGRectGetMaxX(v51);
        if (MinX >= v29)
          v31 = v30 > MinX;
        else
          v31 = MaxX > v29;
        if (v31)
          objc_msgSend(v36, "addObject:", v17);

      }
      v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v42, v46, 16);
    }
    while (v14);
  }

  return v36;
}

- (void)liveContentOverlayDidUpdateHomeAffordanceEdgeProtectOrAutoHide:(id)a3
{
  id v4;
  NSMutableDictionary *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  NSObject *v13;
  void *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  _BYTE v23[128];
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v19 = 0u;
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v5 = self->_liveContentOverlays;
  v6 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v20;
LABEL_3:
    v9 = 0;
    while (1)
    {
      if (*(_QWORD *)v20 != v8)
        objc_enumerationMutation(v5);
      v10 = *(void **)(*((_QWORD *)&v19 + 1) + 8 * v9);
      -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v10, (_QWORD)v19);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = objc_msgSend(v11, "isEqual:", v4);

      if ((v12 & 1) != 0)
        break;
      if (v7 == ++v9)
      {
        v7 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v5, "countByEnumeratingWithState:objects:count:", &v19, v23, 16);
        if (v7)
          goto LABEL_3;
        goto LABEL_9;
      }
    }
    v13 = v10;

    if (!v13)
      goto LABEL_12;
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v13);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFHomeGrabberSettings autoHideTimeOnAppRequest](self->_homeGrabberSettings, "autoHideTimeOnAppRequest");
    v16 = v15;
    -[SBFHomeGrabberSettings delayForUnhideOnAppRequest](self->_homeGrabberSettings, "delayForUnhideOnAppRequest");
    v18 = v17;
    -[SBFluidSwitcherViewController _updateEdgeProtectAndAutoHideForHomeAffordancesInAppLayout:withResetDelay:unhideDelay:](self, "_updateEdgeProtectAndAutoHideForHomeAffordancesInAppLayout:withResetDelay:unhideDelay:", v14, v16, v17);
    -[SBFluidSwitcherViewController _updateAutoHideForGrabberAffordancesInAppLayout:withResetDelay:unhideDelay:](self, "_updateAutoHideForGrabberAffordancesInAppLayout:withResetDelay:unhideDelay:", v14, v16, v18);

  }
  else
  {
LABEL_9:

LABEL_12:
    SBLogAppSwitcher();
    v13 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
      -[SBFluidSwitcherViewController liveContentOverlayDidUpdateHomeAffordanceEdgeProtectOrAutoHide:].cold.1((id *)&self->_liveContentOverlays, (uint64_t)v4, v13);
  }

}

- (void)_sceneUpdateDidChange:(id)a3
{
  void *v4;
  void *v5;
  NSArray *v6;
  id v7;
  uint64_t v8;
  void *i;
  void *v10;
  SBSceneReadySwitcherModifierEvent *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "userInfo");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForKey:", CFSTR("SceneIdentifierKey"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v14 = 0u;
  v15 = 0u;
  v12 = 0u;
  v13 = 0u;
  v6 = self->_cachedAdjustedLeafAppLayouts;
  v7 = (id)-[NSArray countByEnumeratingWithState:objects:count:](v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v13;
    while (2)
    {
      for (i = 0; i != v7; i = (char *)i + 1)
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v6);
        v10 = *(void **)(*((_QWORD *)&v12 + 1) + 8 * (_QWORD)i);
        if (objc_msgSend(v10, "containsItemWithUniqueIdentifier:", v5, (_QWORD)v12))
        {
          v7 = v10;
          goto LABEL_11;
        }
      }
      v7 = (id)-[NSArray countByEnumeratingWithState:objects:count:](v6, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
      if (v7)
        continue;
      break;
    }
  }
LABEL_11:

  v11 = -[SBSceneReadySwitcherModifierEvent initWithAppLayout:]([SBSceneReadySwitcherModifierEvent alloc], "initWithAppLayout:", v7);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v11);

}

uint64_t __79__SBFluidSwitcherViewController__sceneDeactivationPredicateMatchingAppLayouts___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  void *v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = *(id *)(a1 + 32);
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = *(_QWORD *)v12;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v12 != v6)
          objc_enumerationMutation(v4);
        v8 = *(void **)(*((_QWORD *)&v11 + 1) + 8 * i);
        objc_msgSend(v3, "identifier", (_QWORD)v11);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        LOBYTE(v8) = objc_msgSend(v8, "containsItemWithUniqueIdentifier:", v9);

        if ((v8 & 1) != 0)
        {
          v5 = 1;
          goto LABEL_11;
        }
      }
      v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
      if (v5)
        continue;
      break;
    }
  }
LABEL_11:

  return v5;
}

- (void)performTransitionWithContext:(id)a3 animated:(BOOL)a4 completion:(id)a5
{
  _BOOL8 v6;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  void (**v14)(_QWORD);
  double v15;
  double v16;
  dispatch_time_t v17;
  _QWORD v18[4];
  id v19;
  void (**v20)(_QWORD);
  id v21;
  id location;
  _QWORD v23[5];
  id v24;
  id v25;
  BOOL v26;

  v6 = a4;
  v9 = a3;
  v10 = a5;
  v11 = MEMORY[0x1E0C809B0];
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke;
  v23[3] = &unk_1E8EA04C0;
  v23[4] = self;
  v12 = v9;
  v24 = v12;
  v26 = v6;
  v13 = v10;
  v25 = v13;
  v14 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v23);
  -[SBFluidSwitcherViewController _delayForTransitionWithContext:animated:](self, "_delayForTransitionWithContext:animated:", v12, v6);
  v16 = v15;
  if ((BSFloatIsZero() & 1) != 0)
  {
    v14[2](v14);
  }
  else
  {
    objc_storeStrong((id *)&self->_pendingTransitionContext, a3);
    objc_initWeak(&location, self);
    v17 = dispatch_time(0, (uint64_t)(v16 * 1000000000.0));
    v18[0] = v11;
    v18[1] = 3221225472;
    v18[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_11;
    v18[3] = &unk_1E8EA0510;
    objc_copyWeak(&v21, &location);
    v19 = v12;
    v20 = v14;
    dispatch_after(v17, MEMORY[0x1E0C80D38], v18);

    objc_destroyWeak(&v21);
    objc_destroyWeak(&location);
  }

}

- (double)_delayForTransitionWithContext:(id)a3 animated:(BOOL)a4
{
  double v4;
  void *v5;
  void *v6;
  void *v7;
  double v8;

  v4 = 0.0;
  if (a4)
  {
    objc_msgSend(a3, "previousApplicationSceneEntityForLayoutRole:", 1);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "objectForDeactivationSetting:", 2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if (v6)
    {
      objc_msgSend(v6, "doubleValue");
      v4 = v8;
    }

  }
  return v4;
}

void __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;
  void *v13;
  id *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  _QWORD v21[5];
  id v22;
  id v23;
  id v24;
  id v25[3];
  char v26;
  id location;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 1128);
  *(_QWORD *)(v2 + 1128) = 0;

  objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1816), "willBeginTransitioningToLayoutStateWithContext:", *(_QWORD *)(a1 + 40));
  objc_msgSend(*(id *)(a1 + 40), "previousLayoutState");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (void *)objc_msgSend(v5, "interfaceOrientation");

  objc_msgSend(*(id *)(a1 + 40), "layoutState");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (void *)objc_msgSend(v7, "interfaceOrientation");

  if (*(_BYTE *)(a1 + 56))
  {
    objc_msgSend(*(id *)(a1 + 32), "_transitionEventForTransitionWithContext:identifier:phase:animated:", *(_QWORD *)(a1 + 40), v4, 1, 1);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "_dispatchEventAndHandleAction:", v9);
    if (v6 != v8)
    {
      v10 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "shouldPerformRotationAnimationForOrientationChange");
      v11 = *(_QWORD **)(a1 + 32);
      v12 = (void *)v11[124];
      objc_msgSend(v11, "view");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v12, "willRotateFromInterfaceOrientation:toInterfaceOrientation:alongsideContainerView:animated:", v6, v8, v13, v10);

    }
    v14 = *(id **)(a1 + 32);
    if (v14[135])
    {
      objc_msgSend(v14[135], "relinquish");
      v15 = *(_QWORD *)(a1 + 32);
      v16 = *(void **)(v15 + 1080);
      *(_QWORD *)(v15 + 1080) = 0;

      v14 = *(id **)(a1 + 32);
    }
    if (objc_msgSend(v14, "isReduceMotionEnabled")
      && objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "shouldPerformCrossfadeForReduceMotion"))
    {
      objc_msgSend(*(id *)(a1 + 32), "_prepareForCrossfadeIfNeeded");
    }

  }
  objc_initWeak(&location, *(id *)(a1 + 32));
  v18 = *(void **)(a1 + 32);
  v17 = *(void **)(a1 + 40);
  v19 = *(unsigned __int8 *)(a1 + 56);
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_2;
  v21[3] = &unk_1E8EA4648;
  v21[4] = v18;
  v22 = v17;
  v26 = *(_BYTE *)(a1 + 56);
  v20 = v4;
  v23 = v20;
  objc_copyWeak(v25, &location);
  v25[1] = v6;
  v25[2] = v8;
  v24 = *(id *)(a1 + 48);
  objc_msgSend(v18, "_makeAppLayoutVisibleForTransitionWithContext:animated:completion:", v22, v19, v21);

  objc_destroyWeak(v25);
  objc_destroyWeak(&location);

}

- (void)_makeAppLayoutVisibleForTransitionWithContext:(id)a3 animated:(BOOL)a4 completion:(id)a5
{
  _BOOL4 v6;
  void (**v8)(id, uint64_t);
  void *v9;
  void *v10;
  int v11;
  void *v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;

  v6 = a4;
  v18 = a3;
  v8 = (void (**)(id, uint64_t))a5;
  if (v6 && !SBReduceMotion())
  {
    -[SBSwitcherModifier appLayoutToScrollToBeforeTransitioning](self->_rootModifier, "appLayoutToScrollToBeforeTransitioning");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    if (v9)
    {
      -[SBSwitcherModifier visibleAppLayouts](self->_rootModifier, "visibleAppLayouts");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      v11 = objc_msgSend(v10, "containsObject:", v9);

      if (!v11)
      {
        -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = objc_msgSend(v12, "indexOfObject:", v9);

        -[SBSwitcherModifier contentOffsetForIndex:alignment:](self->_rootModifier, "contentOffsetForIndex:alignment:", v13, 2);
        v15 = v14;
        v17 = v16;

        -[BSUIScrollView setContentOffset:animated:completion:](self->_scrollView, "setContentOffset:animated:completion:", 1, v8, v15, v17);
        goto LABEL_7;
      }
    }

  }
  v8[2](v8, 1);
LABEL_7:

}

void __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD v11[4];
  id v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  __int128 v17;
  char v18;
  _QWORD v19[4];
  id v20;
  uint64_t v21;
  id v22;
  char v23;

  objc_msgSend(*(id *)(a1 + 32), "layoutContext");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "activeTransitionContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = *(void **)(a1 + 40);

  if (v3 == v4)
  {
    v5 = MEMORY[0x1E0C809B0];
    v6 = (void *)MEMORY[0x1E0DA9D48];
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_3;
    v19[3] = &unk_1E8EA45A8;
    v7 = *(id *)(a1 + 40);
    v23 = *(_BYTE *)(a1 + 88);
    v8 = *(_QWORD *)(a1 + 32);
    v20 = v7;
    v21 = v8;
    v22 = *(id *)(a1 + 48);
    v11[0] = v5;
    v11[1] = 3221225472;
    v11[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_8;
    v11[3] = &unk_1E8EA4620;
    objc_copyWeak(&v16, (id *)(a1 + 64));
    v9 = *(id *)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 32);
    v12 = v9;
    v13 = v10;
    v14 = *(id *)(a1 + 48);
    v18 = *(_BYTE *)(a1 + 88);
    v17 = *(_OWORD *)(a1 + 72);
    v15 = *(id *)(a1 + 56);
    objc_msgSend(v6, "perform:finalCompletion:options:delegate:", v19, v11, objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "shouldFireTransitionCompletionInDefaultRunLoopMode", v5, 3221225472, __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_8, &unk_1E8EA4620), *(_QWORD *)(a1 + 32));

    objc_destroyWeak(&v16);
  }
}

void __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id *WeakRetained;
  id *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  id *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void (**v17)(_QWORD, _QWORD, _QWORD);
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  int v22;
  _QWORD v23[4];
  void (**v24)(_QWORD, _QWORD, _QWORD);
  char v25;
  char v26;
  _QWORD v27[4];
  id *v28;
  id v29;
  uint64_t v30;
  id v31;
  id v32;
  __int128 v33;
  char v34;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 64));
  v7 = WeakRetained;
  if (WeakRetained)
  {
    v8 = objc_loadWeakRetained(WeakRetained + 222);
    if (v8)
    {
      v9 = v8;
      v10 = objc_loadWeakRetained(v7 + 221);

      if (v10)
      {
        v11 = v7[164];
        v7[164] = 0;

        v12 = MEMORY[0x1E0C809B0];
        v27[0] = MEMORY[0x1E0C809B0];
        v27[1] = 3221225472;
        v27[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_9;
        v27[3] = &unk_1E8EA45D0;
        v13 = v7;
        v28 = v13;
        v14 = *(id *)(a1 + 32);
        v15 = *(_QWORD *)(a1 + 40);
        v16 = *(void **)(a1 + 48);
        v29 = v14;
        v30 = v15;
        v31 = v16;
        v34 = *(_BYTE *)(a1 + 88);
        v33 = *(_OWORD *)(a1 + 72);
        v32 = *(id *)(a1 + 56);
        v17 = (void (**)(_QWORD, _QWORD, _QWORD))MEMORY[0x1D17E5550](v27);
        objc_msgSend(v13, "pipViewMorphAnimator");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v18, "uuid");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(a1 + 32), "request");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "uniqueID");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        v22 = objc_msgSend(v19, "isEqual:", v21);

        if (v22)
        {
          v23[0] = v12;
          v23[1] = 3221225472;
          v23[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_10;
          v23[3] = &unk_1E8EA45F8;
          v24 = v17;
          v25 = a2;
          v26 = a3;
          objc_msgSend(v18, "noteSourceAnimationsDidEnd:finished:continueBlock:", 15, 1, v23);

        }
        else
        {
          v17[2](v17, a2, a3);
        }

      }
    }
  }

}

void __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_9(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  int v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _QWORD *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;

  objc_msgSend(*(id *)(a1 + 32), "pipViewMorphAnimator");
  v22 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v22, "uuid");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "request");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "uniqueID");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v4, "isEqual:", v6);

  if (v7)
    objc_msgSend(*(id *)(a1 + 32), "setPipViewMorphAnimator:", 0);
  objc_msgSend(*(id *)(a1 + 48), "_resetItemContainerShadowPathDisplayLink");
  objc_msgSend(*(id *)(a1 + 32), "layoutContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "activeTransitionContext");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = *(void **)(a1 + 40);

  if (v9 == v10)
  {
    objc_msgSend(*(id *)(a1 + 32), "layoutContext");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "didEndTransitioningToLayoutStateWithContext:", *(_QWORD *)(a1 + 40));

    objc_msgSend(*(id *)(a1 + 32), "_transitionEventForTransitionWithContext:identifier:phase:animated:", *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 56), 3, *(unsigned __int8 *)(a1 + 88));
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "_dispatchEventAndHandleAction:", v12);
    v13 = *(_QWORD **)(a1 + 32);
    v14 = (void *)v13[202];
    if (v14)
    {
      v13[202] = 0;
      v15 = v14;

      v16 = *(void **)(a1 + 32);
      objc_msgSend(v15, "interactionIdentifier");
      v17 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v16, "_removeCenterWindowAnimationContextWithKey:", v17);

      objc_msgSend(*(id *)(a1 + 32), "view");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "setNeedsLayout");

      objc_msgSend(MEMORY[0x1E0CD28B0], "flush");
      objc_msgSend(MEMORY[0x1E0D016A8], "response");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "sendResponse:", v19);

    }
    else
    {
      v20 = 0;
      objc_msgSend(v13, "view");
      v19 = (void *)objc_claimAutoreleasedReturnValue();

      objc_msgSend(v19, "setNeedsLayout");
    }

  }
  if (*(_QWORD *)(a1 + 72) != *(_QWORD *)(a1 + 80))
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 48) + 992), "didRotateFromInterfaceOrientation:toInterfaceOrientation:");
  v21 = *(_QWORD *)(a1 + 64);
  if (v21)
    (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v21, a2);

}

- (SBViewMorphAnimator)pipViewMorphAnimator
{
  return (SBViewMorphAnimator *)objc_loadWeakRetained((id *)&self->_pipViewMorphAnimator);
}

void __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_3(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  char v5;
  void (**v6)(_QWORD, _QWORD);
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t i;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  id v30;
  _QWORD *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;
  void *v36;
  id obj;
  _QWORD v38[5];
  void (**v39)(_QWORD, _QWORD);
  _QWORD v40[4];
  id v41;
  _QWORD v42[6];
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[4];
  id v48;
  char v49;
  _BYTE v50[128];
  uint64_t v51;

  v51 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  objc_msgSend(*(id *)(a1 + 32), "request");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *(_BYTE *)(a1 + 56);
  if (v5)
    v5 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1936), "transactionCompletionOptions") != 0;
  v47[0] = MEMORY[0x1E0C809B0];
  v47[1] = 3221225472;
  v47[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_4;
  v47[3] = &unk_1E8EA4580;
  v49 = v5;
  v35 = v3;
  v48 = v35;
  v6 = (void (**)(_QWORD, _QWORD))MEMORY[0x1D17E5550](v47);
  if (*(_BYTE *)(a1 + 56) && objc_msgSend(v4, "source") == 55)
  {
    ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("morph from in app view"));
    v7 = objc_claimAutoreleasedReturnValue();
    v8 = *(_QWORD *)(a1 + 40);
    v9 = *(void **)(v8 + 1608);
    *(_QWORD *)(v8 + 1608) = v7;

  }
  v36 = v4;
  v45 = 0u;
  v46 = 0u;
  v43 = 0u;
  v44 = 0u;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1888), "allValues");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v50, 16);
  if (v10)
  {
    v11 = v10;
    v12 = *(_QWORD *)v44;
    do
    {
      for (i = 0; i != v11; ++i)
      {
        if (*(_QWORD *)v44 != v12)
          objc_enumerationMutation(obj);
        v14 = *(void **)(*((_QWORD *)&v43 + 1) + 8 * i);
        v15 = *(_QWORD *)(a1 + 32);
        v16 = *(unsigned __int8 *)(a1 + 56);
        ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("shelf transition"));
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "performTransitionWithContext:animated:completion:", v15, v16, v17);

      }
      v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v43, v50, 16);
    }
    while (v11);
  }

  v18 = MEMORY[0x1D17E5550](v6);
  v19 = *(_QWORD *)(a1 + 40);
  v20 = *(void **)(v19 + 1312);
  *(_QWORD *)(v19 + 1312) = v18;

  objc_msgSend(*(id *)(a1 + 40), "_transitionEventForTransitionWithContext:identifier:phase:animated:", *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 48), 2, *(unsigned __int8 *)(a1 + 56));
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "_dispatchEventAndHandleAction:", v21);
  objc_msgSend(*(id *)(a1 + 40), "_configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:", *(_QWORD *)(a1 + 32));
  v22 = objc_msgSend(*(id *)(a1 + 40), "contentOrientation");
  objc_msgSend(*(id *)(a1 + 32), "layoutState");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = objc_msgSend(v23, "interfaceOrientation");

  if (v22 == v24
    || !objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1936), "shouldPerformRotationAnimationForOrientationChange"))
  {
    v31 = *(_QWORD **)(a1 + 40);
    v25 = v36;
    if (v31[147])
    {
      v38[0] = MEMORY[0x1E0C809B0];
      v38[1] = 3221225472;
      v38[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_7;
      v38[3] = &unk_1E8EA02D8;
      v38[4] = v31;
      v39 = v6;
      objc_msgSend(v31, "_performWithFixedUpdateMode:usingBlock:", 2, v38);

    }
    else
    {
      ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("update visible items accessory views layout and style"));
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v31, "_updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:", v32);

    }
  }
  else
  {
    v25 = v36;
    objc_msgSend(v36, "applicationContext");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "animationSettings");
    v27 = (void *)objc_claimAutoreleasedReturnValue();

    ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("rotation animation"));
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = (void *)MEMORY[0x1E0D01908];
    v41 = v28;
    v42[0] = MEMORY[0x1E0C809B0];
    v42[1] = 3221225472;
    v42[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_5;
    v42[3] = &unk_1E8E9DE88;
    v42[4] = *(_QWORD *)(a1 + 40);
    v42[5] = v24;
    v40[0] = MEMORY[0x1E0C809B0];
    v40[1] = 3221225472;
    v40[2] = __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_6;
    v40[3] = &unk_1E8E9F1C0;
    v30 = v28;
    objc_msgSend(v29, "animateWithSettings:options:actions:completion:", v27, 4, v42, v40);

  }
  v33 = *(void **)(a1 + 40);
  ((void (**)(_QWORD, const __CFString *))v6)[2](v6, CFSTR("perform crossfade if needed"));
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v33, "_performCrossfadeIfNeededWithCompletion:", v34);

}

- (id)_transitionEventForTransitionWithContext:(id)a3 identifier:(id)a4 phase:(unint64_t)a5 animated:(BOOL)a6
{
  _BOOL8 v6;
  id v10;
  id v11;
  void *v12;
  void *v13;

  v6 = a6;
  v10 = a4;
  v11 = a3;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "switcherContentController:transitionEventForContext:identifier:phase:animated:", self, v11, v10, a5, v6);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

id __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_4(uint64_t a1)
{
  void *v1;
  void *v2;

  if (*(_BYTE *)(a1 + 40))
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
    v1 = (void *)objc_claimAutoreleasedReturnValue();
    v2 = (void *)MEMORY[0x1D17E5550]();

  }
  else
  {
    v2 = 0;
  }
  return v2;
}

- (void)_updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:(id)a3
{
  id v4;
  char v5;
  _QWORD v6[5];
  BOOL v7;
  BOOL v8;

  v4 = a3;
  kdebug_trace();
  -[SBFluidSwitcherViewController _updateVisibleItems](self, "_updateVisibleItems");
  -[SBFluidSwitcherViewController _updateVisibleAccessoryViews](self, "_updateVisibleAccessoryViews");
  v5 = -[SBSwitcherModifier transactionCompletionOptions](self->_rootModifier, "transactionCompletionOptions");
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 3221225472;
  v6[2] = __95__SBFluidSwitcherViewController__updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion___block_invoke;
  v6[3] = &unk_1E8EA4818;
  v6[4] = self;
  v7 = (v5 & 2) != 0;
  v8 = (v5 & 4) != 0;
  objc_msgSend(MEMORY[0x1E0DA9D48], "perform:finalCompletion:options:delegate:", v6, v4, 0, self);

  kdebug_trace();
}

- (void)_updateVisibleShelves
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  SBSwitcherShelfViewController *v15;
  SBSwitcherShelfViewController *v16;
  NSMutableDictionary *visibleShelves;
  void *v18;
  SBSwitcherModifier *rootModifier;
  uint64_t v20;
  void *v21;
  void *v22;
  SBFluidSwitcherContentView *contentView;
  void *v24;
  SBLayoutStateTransitionCoordinator *layoutStateTransitionCoordinator;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  SBSwitcherShelfViewController *v31;
  uint64_t v32;
  SBSwitcherShelfViewController *v33;
  void *v34;
  SBSwitcherShelfViewController *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  SBPortalView *v46;
  uint64_t v47;
  int *v48;
  uint64_t j;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t k;
  void *v58;
  void *v59;
  void *v60;
  SBFluidSwitcherContentView *v61;
  SBFluidSwitcherContentView *v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t m;
  void *v68;
  void *v69;
  void *v70;
  uint64_t v71;
  id obj;
  id v73;
  id v74;
  uint64_t v75;
  void *v76;
  void *v77;
  uint64_t v78;
  void *v79;
  void *v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  _QWORD v93[4];
  SBSwitcherShelfViewController *v94;
  _QWORD v95[4];
  SBSwitcherShelfViewController *v96;
  _QWORD v97[5];
  SBSwitcherShelfViewController *v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  _QWORD v107[4];
  id v108;
  SBFluidSwitcherViewController *v109;
  _BYTE v110[128];
  _BYTE v111[128];
  _BYTE v112[128];
  uint64_t v113;
  SBSwitcherShelfViewController *v114;
  _BYTE v115[128];
  uint64_t v116;

  v116 = *MEMORY[0x1E0C80C00];
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "userInterfaceIdiom");

  if ((v4 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    -[SBSwitcherModifier visibleShelves](self->_rootModifier, "visibleShelves");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary allKeys](self->_visibleShelves, "allKeys");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v107[0] = MEMORY[0x1E0C809B0];
    v107[1] = 3221225472;
    v107[2] = __54__SBFluidSwitcherViewController__updateVisibleShelves__block_invoke;
    v107[3] = &unk_1E8EA4D38;
    v7 = v5;
    v108 = v7;
    v109 = self;
    objc_msgSend(v6, "bs_filter:", v107);
    v70 = (void *)objc_claimAutoreleasedReturnValue();

    v105 = 0u;
    v106 = 0u;
    v103 = 0u;
    v104 = 0u;
    obj = v7;
    v75 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v103, v115, 16);
    if (v75)
    {
      v73 = *(id *)v104;
      v8 = *MEMORY[0x1E0C9D648];
      v9 = *(double *)(MEMORY[0x1E0C9D648] + 8);
      v10 = *(double *)(MEMORY[0x1E0C9D648] + 16);
      v11 = *(double *)(MEMORY[0x1E0C9D648] + 24);
      do
      {
        for (i = 0; i != v75; ++i)
        {
          if (*(id *)v104 != v73)
            objc_enumerationMutation(obj);
          v13 = *(_QWORD *)(*((_QWORD *)&v103 + 1) + 8 * i);
          -[SBSwitcherModifier containerLeafAppLayoutForShelf:](self->_rootModifier, "containerLeafAppLayoutForShelf:", v13, v70);
          v14 = objc_claimAutoreleasedReturnValue();
          -[NSMutableDictionary objectForKey:](self->_visibleShelves, "objectForKey:", v13);
          v15 = (SBSwitcherShelfViewController *)objc_claimAutoreleasedReturnValue();
          if (!v15)
          {
            v16 = -[SBSwitcherShelfViewController initWithShelf:dataSource:delegate:]([SBSwitcherShelfViewController alloc], "initWithShelf:dataSource:delegate:", v13, self, self);
            visibleShelves = self->_visibleShelves;
            v113 = v13;
            v114 = v16;
            objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v114, &v113, 1);
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            -[NSMutableDictionary addEntriesFromDictionary:](visibleShelves, "addEntriesFromDictionary:", v18);

            v102 = 0;
            v100 = 0u;
            v101 = 0u;
            v99 = 0u;
            rootModifier = self->_rootModifier;
            if (rootModifier)
            {
              -[SBSwitcherModifier presentationAttributesForShelf:](rootModifier, "presentationAttributesForShelf:", v13);
              v20 = v102;
            }
            else
            {
              v20 = 0;
            }
            -[SBSwitcherShelfViewController setContentOptions:](v16, "setContentOptions:", v20);
            -[SBFluidSwitcherViewController addChildViewController:](self, "addChildViewController:", v16);
            -[SBSwitcherShelfViewController beginAppearanceTransition:animated:](v16, "beginAppearanceTransition:animated:", 1, 0);
            if (v14)
            {
              -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v14);
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v21);
              v22 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v22, "setShelfViewController:", v16);

            }
            else
            {
              contentView = self->_contentView;
              -[SBSwitcherShelfViewController view](v16, "view");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              -[SBFluidSwitcherContentView addSubview:](contentView, "addSubview:", v21);
            }

            -[SBSwitcherShelfViewController endAppearanceTransition](v16, "endAppearanceTransition");
            -[SBSwitcherShelfViewController didMoveToParentViewController:](v16, "didMoveToParentViewController:", self);
            v97[0] = MEMORY[0x1E0C809B0];
            v97[1] = 3221225472;
            v97[2] = __54__SBFluidSwitcherViewController__updateVisibleShelves__block_invoke_2;
            v97[3] = &unk_1E8E9E820;
            v97[4] = self;
            v15 = v16;
            v98 = v15;
            -[SBFluidSwitcherViewController _performWithFixedUpdateMode:usingBlock:](self, "_performWithFixedUpdateMode:usingBlock:", 1, v97);
            -[SBFluidSwitcherLayoutContext activeTransitionContext](self->_layoutContext, "activeTransitionContext");
            v24 = (void *)objc_claimAutoreleasedReturnValue();

            if (v24)
            {
              layoutStateTransitionCoordinator = self->_layoutStateTransitionCoordinator;
              -[SBLayoutStateTransitionCoordinator transitionContext](layoutStateTransitionCoordinator, "transitionContext");
              v26 = (void *)objc_claimAutoreleasedReturnValue();
              -[SBSwitcherShelfViewController layoutStateTransitionCoordinator:transitionDidBeginWithTransitionContext:](v15, "layoutStateTransitionCoordinator:transitionDidBeginWithTransitionContext:", layoutStateTransitionCoordinator, v26);

            }
          }
          v79 = (void *)v14;
          if (v14)
          {
            -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v14);
            v27 = (void *)objc_claimAutoreleasedReturnValue();
            -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v27);
            v28 = (void *)objc_claimAutoreleasedReturnValue();

            -[SBSwitcherShelfViewController view](v15, "view");
            v29 = (void *)objc_claimAutoreleasedReturnValue();
            v77 = v29;
            if (-[NSMutableSet containsObject:](self->_visibleShelvesHostedInContentView, "containsObject:", v13))
            {
              objc_msgSend(v29, "removeFromSuperview");
              objc_msgSend(v28, "setShelfViewController:", v15);
              -[NSMutableSet removeObject:](self->_visibleShelvesHostedInContentView, "removeObject:", v13);
            }
            else
            {
              objc_msgSend(v28, "shelfViewController");
              v33 = (SBSwitcherShelfViewController *)objc_claimAutoreleasedReturnValue();

              if (v33 != v15)
              {
                -[NSMutableDictionary allValues](self->_visibleOverlayAccessoryViews, "allValues");
                v34 = (void *)objc_claimAutoreleasedReturnValue();
                v93[0] = MEMORY[0x1E0C809B0];
                v93[1] = 3221225472;
                v93[2] = __54__SBFluidSwitcherViewController__updateVisibleShelves__block_invoke_4;
                v93[3] = &unk_1E8EA4D60;
                v35 = v15;
                v94 = v35;
                objc_msgSend(v34, "bs_firstObjectPassingTest:", v93);
                v36 = (void *)objc_claimAutoreleasedReturnValue();

                objc_msgSend(v36, "setShelfViewController:", 0);
                objc_msgSend(v28, "setShelfViewController:", v35);

              }
            }
          }
          else
          {
            -[NSMutableDictionary allValues](self->_visibleOverlayAccessoryViews, "allValues");
            v30 = (void *)objc_claimAutoreleasedReturnValue();
            v95[0] = MEMORY[0x1E0C809B0];
            v95[1] = 3221225472;
            v95[2] = __54__SBFluidSwitcherViewController__updateVisibleShelves__block_invoke_3;
            v95[3] = &unk_1E8EA4D60;
            v31 = v15;
            v96 = v31;
            objc_msgSend(v30, "bs_firstObjectPassingTest:", v95);
            v28 = (void *)objc_claimAutoreleasedReturnValue();

            -[SBSwitcherShelfViewController view](v31, "view");
            v32 = objc_claimAutoreleasedReturnValue();
            v77 = (void *)v32;
            if ((-[NSMutableSet containsObject:](self->_visibleShelvesHostedInContentView, "containsObject:", v13) & 1) == 0)
            {
              objc_msgSend(v28, "setShelfViewController:", 0);
              -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", v32);
              -[NSMutableSet addObject:](self->_visibleShelvesHostedInContentView, "addObject:", v13);
            }
          }
          -[SBSwitcherModifier focusedAppLayoutForShelf:](self->_rootModifier, "focusedAppLayoutForShelf:", v13);
          v37 = (void *)objc_claimAutoreleasedReturnValue();
          v38 = (void *)MEMORY[0x1E0C99E60];
          objc_msgSend(v37, "allItems");
          v39 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v38, "setWithArray:", v39);
          v40 = (void *)objc_claimAutoreleasedReturnValue();
          -[SBSwitcherShelfViewController setFocusedDisplayItems:](v15, "setFocusedDisplayItems:", v40);

          -[SBSwitcherModifier ignoredDisplayItemsForShelf:](self->_rootModifier, "ignoredDisplayItemsForShelf:", v13);
          v41 = (void *)objc_claimAutoreleasedReturnValue();
          -[SBSwitcherShelfViewController setIgnoredDisplayItems:](v15, "setIgnoredDisplayItems:", v41);
          -[SBSwitcherModifier homeAffordanceLayoutElementToPortalIntoShelf:](self->_rootModifier, "homeAffordanceLayoutElementToPortalIntoShelf:", v13);
          v42 = (void *)objc_claimAutoreleasedReturnValue();
          v43 = v42;
          if (v42 && !objc_msgSend(v42, "switcherLayoutElementType"))
          {
            -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v43);
            v44 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v44, "homeGrabberView");
            v45 = (void *)objc_claimAutoreleasedReturnValue();
            v46 = -[SBPortalView initWithFrame:]([SBPortalView alloc], "initWithFrame:", v8, v9, v10, v11);
            -[SBPortalView setSourceView:](v46, "setSourceView:", v45);
            -[SBPortalView setHidesSourceView:](v46, "setHidesSourceView:", 1);
            -[SBPortalView setMatchesPosition:](v46, "setMatchesPosition:", 1);
            -[SBPortalView setMatchesTransform:](v46, "setMatchesTransform:", 1);
            -[SBPortalView setMatchesAlpha:](v46, "setMatchesAlpha:", 1);
            -[SBSwitcherShelfViewController setHomeAffordancePortalView:](v15, "setHomeAffordancePortalView:", v46);

          }
          else
          {
            -[SBSwitcherShelfViewController setHomeAffordancePortalView:](v15, "setHomeAffordancePortalView:", 0);
          }

        }
        v75 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v103, v115, 16);
      }
      while (v75);
    }

    v91 = 0u;
    v92 = 0u;
    v89 = 0u;
    v90 = 0u;
    v74 = v70;
    v78 = objc_msgSend(v74, "countByEnumeratingWithState:objects:count:", &v89, v112, 16);
    if (v78)
    {
      v47 = *(_QWORD *)v90;
      v48 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
      v71 = *(_QWORD *)v90;
      do
      {
        for (j = 0; j != v78; ++j)
        {
          if (*(_QWORD *)v90 != v47)
            objc_enumerationMutation(v74);
          v50 = *(_QWORD *)(*((_QWORD *)&v89 + 1) + 8 * j);
          v51 = v48[879];
          objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v51), "objectForKey:", v50, v70);
          v52 = (void *)objc_claimAutoreleasedReturnValue();
          v85 = 0u;
          v86 = 0u;
          v87 = 0u;
          v88 = 0u;
          v80 = v52;
          objc_msgSend(v52, "allValues");
          v53 = (void *)objc_claimAutoreleasedReturnValue();
          v54 = objc_msgSend(v53, "countByEnumeratingWithState:objects:count:", &v85, v111, 16);
          if (v54)
          {
            v55 = v54;
            v56 = *(_QWORD *)v86;
            do
            {
              for (k = 0; k != v55; ++k)
              {
                if (*(_QWORD *)v86 != v56)
                  objc_enumerationMutation(v53);
                objc_msgSend(*(id *)(*((_QWORD *)&v85 + 1) + 8 * k), "invalidate");
              }
              v55 = objc_msgSend(v53, "countByEnumeratingWithState:objects:count:", &v85, v111, 16);
            }
            while (v55);
          }

          objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v51), "removeObjectForKey:", v50);
          -[NSMutableDictionary objectForKey:](self->_visibleShelves, "objectForKey:", v50);
          v58 = (void *)objc_claimAutoreleasedReturnValue();
          v59 = v58;
          if (v58)
          {
            objc_msgSend(v58, "setHomeAffordancePortalView:", 0);
            objc_msgSend(v59, "willMoveToParentViewController:", 0);
            objc_msgSend(v59, "beginAppearanceTransition:animated:", 0, 0);
            objc_msgSend(v59, "view");
            v60 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v60, "superview");
            v61 = (SBFluidSwitcherContentView *)objc_claimAutoreleasedReturnValue();
            v62 = self->_contentView;

            if (v61 == v62)
            {
              objc_msgSend(v60, "removeFromSuperview");
            }
            else
            {
              v76 = v60;
              v83 = 0u;
              v84 = 0u;
              v81 = 0u;
              v82 = 0u;
              -[NSMutableDictionary allValues](self->_visibleOverlayAccessoryViews, "allValues");
              v63 = (void *)objc_claimAutoreleasedReturnValue();
              v64 = objc_msgSend(v63, "countByEnumeratingWithState:objects:count:", &v81, v110, 16);
              if (v64)
              {
                v65 = v64;
                v66 = *(_QWORD *)v82;
                while (2)
                {
                  for (m = 0; m != v65; ++m)
                  {
                    if (*(_QWORD *)v82 != v66)
                      objc_enumerationMutation(v63);
                    v68 = *(void **)(*((_QWORD *)&v81 + 1) + 8 * m);
                    objc_msgSend(v68, "shelfViewController");
                    v69 = (void *)objc_claimAutoreleasedReturnValue();

                    if (v69 == v59)
                    {
                      objc_msgSend(v68, "setShelfViewController:", 0);
                      goto LABEL_54;
                    }
                  }
                  v65 = objc_msgSend(v63, "countByEnumeratingWithState:objects:count:", &v81, v110, 16);
                  if (v65)
                    continue;
                  break;
                }
              }
LABEL_54:

              v47 = v71;
              v48 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
              v60 = v76;
            }
            objc_msgSend(v59, "endAppearanceTransition");
            objc_msgSend(v59, "removeFromParentViewController");

          }
          -[NSMutableSet removeObject:](self->_visibleShelvesHostedInContentView, "removeObject:", v50);

        }
        v78 = objc_msgSend(v74, "countByEnumeratingWithState:objects:count:", &v89, v112, 16);
      }
      while (v78);
    }

    -[NSMutableDictionary removeObjectsForKeys:](self->_visibleShelves, "removeObjectsForKeys:", v74);
    -[SBFluidSwitcherViewController _ensureSubviewOrdering](self, "_ensureSubviewOrdering");

  }
}

- (void)_updateVisibleAccessoryViews
{
  -[SBFluidSwitcherViewController _updateVisibleHomeAffordanceViews](self, "_updateVisibleHomeAffordanceViews");
  -[SBFluidSwitcherViewController _updateVisibleShelves](self, "_updateVisibleShelves");
}

- (void)_performCrossfadeIfNeededWithCompletion:(id)a3
{
  id v4;
  void *v5;
  UIView *crossfadeSnapshotView;
  UIView *v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  uint64_t v12;
  UIView *v13;
  _QWORD v14[4];
  UIView *v15;
  SBFluidSwitcherViewController *v16;
  id v17;
  _QWORD v18[4];
  UIView *v19;

  v4 = a3;
  v5 = v4;
  crossfadeSnapshotView = self->_crossfadeSnapshotView;
  if (crossfadeSnapshotView)
  {
    v7 = crossfadeSnapshotView;
    -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = (void *)MEMORY[0x1E0CEABB0];
    objc_msgSend(v8, "reduceMotionCrossfadeDuration");
    v11 = v10;
    v12 = MEMORY[0x1E0C809B0];
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __73__SBFluidSwitcherViewController__performCrossfadeIfNeededWithCompletion___block_invoke;
    v18[3] = &unk_1E8E9DED8;
    v19 = v7;
    v14[0] = v12;
    v14[1] = 3221225472;
    v14[2] = __73__SBFluidSwitcherViewController__performCrossfadeIfNeededWithCompletion___block_invoke_2;
    v14[3] = &unk_1E8EA47F0;
    v15 = v19;
    v16 = self;
    v17 = v5;
    v13 = v19;
    objc_msgSend(v9, "animateWithDuration:animations:completion:", v18, v14, v11);

  }
  else if (v4)
  {
    (*((void (**)(id, uint64_t, _QWORD))v4 + 2))(v4, 1, 0);
  }

}

- (void)noteAppLayoutsDidChange
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t i;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t j;
  void *v13;
  void *v14;
  unint64_t v15;
  void *v16;
  BSInvalidatable *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  BSInvalidatable *v22;
  BSInvalidatable *applicationRestrictionUpdatePendingAssertion;
  id obj;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  _BYTE v35[128];
  uint64_t v36;

  v36 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_opt_new();
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  v33 = 0u;
  obj = v2;
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
  if (v4)
  {
    v5 = v4;
    LOBYTE(v6) = 0;
    v7 = *(_QWORD *)v31;
    while (2)
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v31 != v7)
          objc_enumerationMutation(obj);
        if ((v6 & 1) != 0)
        {
          LOBYTE(v6) = 1;
          goto LABEL_23;
        }
        v9 = *(void **)(*((_QWORD *)&v30 + 1) + 8 * i);
        v26 = 0u;
        v27 = 0u;
        v28 = 0u;
        v29 = 0u;
        objc_msgSend(v9, "allItems");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v6 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
        if (v6)
        {
          v11 = *(_QWORD *)v27;
          while (2)
          {
            for (j = 0; j != v6; ++j)
            {
              if (*(_QWORD *)v27 != v11)
                objc_enumerationMutation(v10);
              v13 = *(void **)(*((_QWORD *)&v26 + 1) + 8 * j);
              if (objc_msgSend(v13, "type") != 3)
              {
                objc_msgSend(v13, "uniqueIdentifier");
                v14 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v3, "addObject:", v14);
                v15 = objc_msgSend(v3, "countForObject:", v14);

                if (v15 > 1)
                {
                  LOBYTE(v6) = 1;
                  goto LABEL_18;
                }
              }
            }
            v6 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v26, v34, 16);
            if (v6)
              continue;
            break;
          }
        }
LABEL_18:

      }
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v30, v35, 16);
      if (v5)
        continue;
      break;
    }
  }
  else
  {
    LOBYTE(v6) = 0;
  }
LABEL_23:

  self->_hasAnyUnadjustedAppLayoutsInDuality = v6;
  -[SBFluidSwitcherViewController _rebuildCachedAdjustedAppLayouts](self, "_rebuildCachedAdjustedAppLayouts");
  -[SBFluidSwitcherViewController view](self, "view");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setNeedsLayout");

  v17 = self->_applicationRestrictionUpdatePendingAssertion;
  -[SBFluidSwitcherViewController view](self, "view");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "window");
  v19 = (void *)objc_claimAutoreleasedReturnValue();

  if (v19)
  {
    +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "_applicationRestrictionMonitoringServer");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "acquireApplicationRestrictionUpdatePendingAssertionForReason:", CFSTR("Outstanding layout work for switcher"));
    v22 = (BSInvalidatable *)objc_claimAutoreleasedReturnValue();
    applicationRestrictionUpdatePendingAssertion = self->_applicationRestrictionUpdatePendingAssertion;
    self->_applicationRestrictionUpdatePendingAssertion = v22;

  }
  -[BSInvalidatable invalidate](v17, "invalidate");

}

- (void)_rebuildCachedAdjustedAppLayouts
{
  void *v3;
  NSDictionary *appLayoutsForContinuousExposeIdentifiers;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t j;
  uint64_t v16;
  NSDictionary *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t k;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t m;
  NSDictionary *leafAppLayoutsToRecencyAppLayouts;
  void *v30;
  id obj;
  SBFluidSwitcherViewController *v32;
  NSArray *v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _BYTE v51[128];
  _BYTE v52[128];
  _BYTE v53[128];
  _BYTE v54[128];
  uint64_t v55;

  v55 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBSwitcherModifier adjustedAppLayoutsForAppLayouts:](self->_rootModifier, "adjustedAppLayoutsForAppLayouts:", v3);
  obj = (id)objc_claimAutoreleasedReturnValue();
  v32 = self;
  if (!-[NSArray isEqualToArray:](self->_cachedAdjustedAppLayouts, "isEqualToArray:"))
  {
    v30 = v3;
    objc_storeStrong((id *)&self->_cachedAdjustedAppLayouts, obj);
    self->_appLayoutsGenerationCount = -[SBFluidSwitcherViewController newAppLayoutsGenCount](self, "newAppLayoutsGenCount");
    appLayoutsForContinuousExposeIdentifiers = self->_appLayoutsForContinuousExposeIdentifiers;
    self->_appLayoutsForContinuousExposeIdentifiers = 0;

    v5 = (void *)objc_opt_new();
    v6 = (void *)objc_opt_new();
    v47 = 0u;
    v48 = 0u;
    v49 = 0u;
    v50 = 0u;
    v33 = self->_cachedAdjustedAppLayouts;
    v7 = -[NSArray countByEnumeratingWithState:objects:count:](v33, "countByEnumeratingWithState:objects:count:", &v47, v54, 16);
    if (v7)
    {
      v8 = v7;
      v34 = *(_QWORD *)v48;
      do
      {
        for (i = 0; i != v8; ++i)
        {
          if (*(_QWORD *)v48 != v34)
            objc_enumerationMutation(v33);
          v10 = *(void **)(*((_QWORD *)&v47 + 1) + 8 * i);
          objc_msgSend(v10, "leafAppLayouts");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v43 = 0u;
          v44 = 0u;
          v45 = 0u;
          v46 = 0u;
          v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v43, v53, 16);
          if (v12)
          {
            v13 = v12;
            v14 = *(_QWORD *)v44;
            do
            {
              for (j = 0; j != v13; ++j)
              {
                if (*(_QWORD *)v44 != v14)
                  objc_enumerationMutation(v11);
                v16 = *(_QWORD *)(*((_QWORD *)&v43 + 1) + 8 * j);
                objc_msgSend(v6, "setObject:forKey:", v10, v16);
                objc_msgSend(v5, "addObject:", v16);
              }
              v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v43, v53, 16);
            }
            while (v13);
          }

        }
        v8 = -[NSArray countByEnumeratingWithState:objects:count:](v33, "countByEnumeratingWithState:objects:count:", &v47, v54, 16);
      }
      while (v8);
    }

    objc_storeStrong((id *)&v32->_cachedAdjustedLeafAppLayouts, v5);
    objc_storeStrong((id *)&v32->_leafAppLayoutsToAdjustedAppLayouts, v6);
    -[SBFluidSwitcherViewController _updateVisibleAdjustedAppLayouts](v32, "_updateVisibleAdjustedAppLayouts");
    -[SBFluidSwitcherViewController _updateResignActiveAssertions](v32, "_updateResignActiveAssertions");
    if (-[SBSwitcherKeyboardSuppressionMode suppressesSwitcherScenesOnly](v32->_lastKeyboardSuppressionMode, "suppressesSwitcherScenesOnly"))
    {
      -[SBFluidSwitcherViewController _acquireKeyboardSuppressionAssertionForMode:](v32, "_acquireKeyboardSuppressionAssertionForMode:", v32->_lastKeyboardSuppressionMode);
    }

    v3 = v30;
  }
  v17 = (NSDictionary *)objc_opt_new();
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v42 = 0u;
  v18 = v3;
  v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v39, v52, 16);
  if (v19)
  {
    v20 = v19;
    v21 = *(_QWORD *)v40;
    do
    {
      for (k = 0; k != v20; ++k)
      {
        if (*(_QWORD *)v40 != v21)
          objc_enumerationMutation(v18);
        v23 = *(void **)(*((_QWORD *)&v39 + 1) + 8 * k);
        v35 = 0u;
        v36 = 0u;
        v37 = 0u;
        v38 = 0u;
        objc_msgSend(v23, "leafAppLayouts");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v25 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v35, v51, 16);
        if (v25)
        {
          v26 = v25;
          v27 = *(_QWORD *)v36;
          do
          {
            for (m = 0; m != v26; ++m)
            {
              if (*(_QWORD *)v36 != v27)
                objc_enumerationMutation(v24);
              -[NSDictionary setObject:forKey:](v17, "setObject:forKey:", v23, *(_QWORD *)(*((_QWORD *)&v35 + 1) + 8 * m));
            }
            v26 = objc_msgSend(v24, "countByEnumeratingWithState:objects:count:", &v35, v51, 16);
          }
          while (v26);
        }

      }
      v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v39, v52, 16);
    }
    while (v20);
  }

  leafAppLayoutsToRecencyAppLayouts = v32->_leafAppLayoutsToRecencyAppLayouts;
  v32->_leafAppLayoutsToRecencyAppLayouts = v17;

  if (-[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](v32, "isChamoisWindowingUIEnabled"))
    -[SBFluidSwitcherViewController _updateContinuousExposeIdentifiersTransitioningFromAppLayout:toAppLayout:animated:](v32, "_updateContinuousExposeIdentifiersTransitioningFromAppLayout:toAppLayout:animated:", 0, 0, 0);

}

- (void)_resetItemContainerShadowPathDisplayLink
{
  NSObject *v3;
  NSCountedSet *shadowPathDisplayLinkRequiringReasons;
  CADisplayLink *shadowPathDisplayLink;
  CADisplayLink *v6;
  uint8_t v7[16];

  SBLogAppSwitcher();
  v3 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1D0540000, v3, OS_LOG_TYPE_DEFAULT, "Destroying shadow path display link", v7, 2u);
  }

  shadowPathDisplayLinkRequiringReasons = self->_shadowPathDisplayLinkRequiringReasons;
  self->_shadowPathDisplayLinkRequiringReasons = 0;

  shadowPathDisplayLink = self->_shadowPathDisplayLink;
  if (shadowPathDisplayLink)
  {
    -[CADisplayLink invalidate](shadowPathDisplayLink, "invalidate");
    v6 = self->_shadowPathDisplayLink;
    self->_shadowPathDisplayLink = 0;

  }
}

uint64_t __72__SBFluidSwitcherViewController__performWithFixedUpdateMode_usingBlock___block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_7(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  void *v8;
  void *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v2 = *(id *)(a1 + 32);
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v11;
    do
    {
      for (i = 0; i != v4; ++i)
      {
        if (*(_QWORD *)v11 != v5)
          objc_enumerationMutation(v2);
        v7 = *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * i);
        objc_msgSend(*(id *)(a1 + 40), "_layoutAppLayout:roleMask:completion:", v7, 0, 0, (_QWORD)v10);
        objc_msgSend(*(id *)(a1 + 40), "_applyStyleToAppLayout:roleMask:completion:", v7, 0, 0);
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1832), "objectForKey:", v7);
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1840), "objectForKey:", v7);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "layoutIfNeeded");
        objc_msgSend(v9, "layoutIfNeeded");

      }
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v4);
  }

}

uint64_t __73__SBFluidSwitcherViewController_animationControllerForTransitionRequest___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __70__SBFluidSwitcherViewController__performModifierUpdateLayoutResponse___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

- (unint64_t)newAppLayoutsGenCount
{
  unint64_t v2;

  v2 = self->_appLayoutsGenerationCount + 1;
  self->_appLayoutsGenerationCount = v2;
  return v2;
}

uint64_t __94__SBFluidSwitcherViewController__updateLayoutFromInterfaceOrientation_toInterfaceOrientation___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "_updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:", 0);
}

- (double)minimumHomeScreenScale
{
  void *v3;
  double v4;
  double v5;
  double v6;
  void *v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;

  -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "homeScreenScaleForMode:", 1);
  v5 = v4;

  v6 = fmin(v5, 1.0);
  -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "homeScreenScaleForMode:", 2);
  v9 = v8;

  if (v6 > v9)
    v6 = v9;
  -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "homeScreenScaleForMode:", 3);
  v12 = v11;

  if (v6 <= v12)
    return v6;
  else
    return v12;
}

- (BOOL)homeScreenHasOpenFolder
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "hasOpenFolder");

  return v3;
}

- (BOOL)homeScreenHasWidgetCenterOrLibraryOpen
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  char v7;
  void *v8;
  char v9;
  char v10;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "homeScreenController");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    +[SBIconController sharedInstance](SBIconController, "sharedInstance");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "isModalAppLibrarySupported");

    if ((v9 & 1) != 0)
      goto LABEL_3;
LABEL_5:
    v7 = objc_msgSend(v5, "isMainDisplayLibraryViewVisible");
    goto LABEL_6;
  }
  if (!objc_msgSend(v4, "isModalAppLibrarySupported"))
    goto LABEL_5;
LABEL_3:
  objc_msgSend(v3, "modalLibraryController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isPresentingLibrary");

LABEL_6:
  v10 = objc_msgSend(v5, "isOverlayTodayViewVisible") | v7;

  return v10;
}

- (void)_updateBounceIcon
{
  unint64_t v3;
  void *v4;
  SBIconView *bounceIconView;
  SBIconView *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  CGFloat x;
  CGFloat y;
  double width;
  double height;
  SBIconView *v16;
  SBIconView *v17;
  SBIconView *v18;
  void *v19;
  SBIconView *v20;
  double v21;
  double v22;
  double v23;
  void *v24;
  void *v25;
  uint64_t v26;
  void *v27;
  double v28;
  double v29;
  dispatch_time_t v30;
  id v31;
  _QWORD block[4];
  id v33;
  id v34[6];
  id location;
  _QWORD v36[9];
  CGRect v37;

  v3 = -[SBSwitcherModifier bounceIconGenerationCountForCurrentCount:](self->_rootModifier, "bounceIconGenerationCountForCurrentCount:", self->_bounceIconGenerationCount);
  if (v3 != self->_bounceIconGenerationCount)
  {
    v4 = (void *)v3;
    self->_bounceIconGenerationCount = v3;
    bounceIconView = self->_bounceIconView;
    if (bounceIconView)
    {
      -[SBIconView removeFromSuperview](bounceIconView, "removeFromSuperview");
      v6 = self->_bounceIconView;
      self->_bounceIconView = 0;

    }
    -[SBSwitcherModifier bounceIconBundleIdentifier](self->_rootModifier, "bounceIconBundleIdentifier");
    v7 = objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      v8 = (void *)v7;
      -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "iconModel");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "leafIconForIdentifier:", v8);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBSwitcherModifier bounceIconInitialFrame](self->_rootModifier, "bounceIconInitialFrame");
      x = v37.origin.x;
      y = v37.origin.y;
      width = v37.size.width;
      height = v37.size.height;
      if (!CGRectIsNull(v37))
      {
        v16 = (SBIconView *)objc_msgSend(objc_alloc(MEMORY[0x1E0DAA620]), "initWithConfigurationOptions:", 6);
        v17 = self->_bounceIconView;
        self->_bounceIconView = v16;

        -[SBIconView setLocation:](self->_bounceIconView, "setLocation:", *MEMORY[0x1E0DAA9E8]);
        v18 = self->_bounceIconView;
        objc_msgSend(v9, "listLayoutProvider");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBIconView setListLayoutProvider:](v18, "setListLayoutProvider:", v19);

        -[SBIconView setDelegate:](self->_bounceIconView, "setDelegate:", v9);
        -[SBIconView setIcon:](self->_bounceIconView, "setIcon:", v11);
        -[SBIconView setEnabled:](self->_bounceIconView, "setEnabled:", 0);
        -[SBIconView setBounds:](self->_bounceIconView, "setBounds:", 0.0, 0.0, width, height);
        v20 = self->_bounceIconView;
        UIRectGetCenter();
        v22 = v21;
        -[SBFluidSwitcherContentView bounds](self->_contentView, "bounds");
        -[SBIconView setCenter:](v20, "setCenter:", v22, height + v23);
        -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", self->_bounceIconView);
        -[SBFluidSwitcherViewController medusaSettings](self, "medusaSettings");
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v24, "switcherShelfBounceIconSettings");
        v25 = (void *)objc_claimAutoreleasedReturnValue();

        v26 = MEMORY[0x1E0C809B0];
        v36[0] = MEMORY[0x1E0C809B0];
        v36[1] = 3221225472;
        v36[2] = __50__SBFluidSwitcherViewController__updateBounceIcon__block_invoke;
        v36[3] = &unk_1E8EA25E0;
        v36[4] = self;
        *(CGFloat *)&v36[5] = x;
        *(CGFloat *)&v36[6] = y;
        *(double *)&v36[7] = width;
        *(double *)&v36[8] = height;
        objc_msgSend(MEMORY[0x1E0CEABB0], "sb_animateWithSettings:mode:animations:completion:", v25, 3, v36, 0);
        objc_initWeak(&location, self);
        -[SBFluidSwitcherViewController medusaSettings](self, "medusaSettings");
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v27, "switcherShelfGenieIconBounceDelay");
        v29 = v28;

        v30 = dispatch_time(0, (uint64_t)(v29 * 1000000000.0));
        block[0] = v26;
        block[1] = 3221225472;
        block[2] = __50__SBFluidSwitcherViewController__updateBounceIcon__block_invoke_2;
        block[3] = &unk_1E8EA5088;
        objc_copyWeak(v34, &location);
        v34[1] = v4;
        v33 = v25;
        v34[2] = *(id *)&x;
        v34[3] = *(id *)&y;
        v34[4] = *(id *)&width;
        v34[5] = *(id *)&height;
        v31 = v25;
        dispatch_after(v30, MEMORY[0x1E0C80D38], block);

        objc_destroyWeak(v34);
        objc_destroyWeak(&location);

      }
    }
  }
}

void __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  if (objc_msgSend(*(id *)(a1 + 32), "_appLayoutWantsToBeKeptInViewHierarchy:"))
    objc_msgSend(*(id *)(a1 + 40), "addObject:", v3);

}

- (double)homeScreenIconScaleForAppLayout:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;

  v4 = a3;
  -[SBFluidSwitcherViewController _iconZoomContextProvider](self, "_iconZoomContextProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "iconScaleForAppLayout:", v4);
  v7 = v6;

  return v7;
}

- (CGRect)iconImageFrameForAppLayout:(id)a3
{
  void *v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  char v18;
  CGRect result;

  v18 = 1;
  -[SBFluidSwitcherViewController activatingDisplayItemForAppLayout:](self, "activatingDisplayItemForAppLayout:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _iconViewForDisplayItem:isVisible:](self, "_iconViewForDisplayItem:isVisible:", v4, &v18);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v18)
  {
    -[SBFluidSwitcherViewController _iconImageFrameForIconView:](self, "_iconImageFrameForIconView:", v5);
    v7 = v6;
    v9 = v8;
    v11 = v10;
    v13 = v12;
  }
  else
  {
    v7 = *MEMORY[0x1E0C9D628];
    v9 = *(double *)(MEMORY[0x1E0C9D628] + 8);
    v11 = *(double *)(MEMORY[0x1E0C9D628] + 16);
    v13 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  }

  v14 = v7;
  v15 = v9;
  v16 = v11;
  v17 = v13;
  result.size.height = v17;
  result.size.width = v16;
  result.origin.y = v15;
  result.origin.x = v14;
  return result;
}

- (id)iconViewForAppLayout:(id)a3
{
  void *v4;
  void *v5;

  -[SBFluidSwitcherViewController activatingDisplayItemForAppLayout:](self, "activatingDisplayItemForAppLayout:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _iconViewForDisplayItem:isVisible:](self, "_iconViewForDisplayItem:isVisible:", v4, 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (CGRect)homeScreenIconFrameForAppLayout:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  CGRect result;

  v4 = a3;
  -[SBFluidSwitcherViewController _iconZoomContextProvider](self, "_iconZoomContextProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "iconFrameForAppLayout:", v4);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  v14 = v7;
  v15 = v9;
  v16 = v11;
  v17 = v13;
  result.size.height = v17;
  result.size.width = v16;
  result.origin.y = v15;
  result.origin.x = v14;
  return result;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_23(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  CGFloat v18;
  CGFloat v19;
  CATransform3D v21;
  CATransform3D v22;
  CATransform3D v23;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "userInterfaceIdiom");

  if ((v3 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    objc_msgSend(*(id *)(a1 + 32), "layer");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 48));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setValue:forKeyPath:", v5, CFSTR("transform.scale"));

    objc_msgSend(*(id *)(a1 + 32), "layer");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 56));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setValue:forKeyPath:", v7, CFSTR("transform.translation.x"));

    objc_msgSend(*(id *)(a1 + 32), "layer");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 64));
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setValue:forKeyPath:", v9, CFSTR("transform.translation.y"));

    objc_msgSend(*(id *)(a1 + 32), "layer");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 72));
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setValue:forKeyPath:", v11, CFSTR("transform.rotation.y"));

    objc_msgSend(*(id *)(a1 + 32), "layer");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 80));
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "setValue:forKeyPath:", v13, CFSTR("transform.rotation.z"));

  }
  else
  {
    v14 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 80);
    *(_OWORD *)&v23.m31 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 64);
    *(_OWORD *)&v23.m33 = v14;
    v15 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 112);
    *(_OWORD *)&v23.m41 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 96);
    *(_OWORD *)&v23.m43 = v15;
    v16 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 16);
    *(_OWORD *)&v23.m11 = *MEMORY[0x1E0CD2610];
    *(_OWORD *)&v23.m13 = v16;
    v17 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 48);
    *(_OWORD *)&v23.m21 = *(_OWORD *)(MEMORY[0x1E0CD2610] + 32);
    *(_OWORD *)&v23.m23 = v17;
    v18 = *(double *)(a1 + 48);
    *(_OWORD *)&v22.m31 = *(_OWORD *)&v23.m31;
    *(_OWORD *)&v22.m33 = v14;
    *(_OWORD *)&v22.m41 = *(_OWORD *)&v23.m41;
    *(_OWORD *)&v22.m43 = v15;
    *(_OWORD *)&v22.m11 = *(_OWORD *)&v23.m11;
    *(_OWORD *)&v22.m13 = v16;
    *(_OWORD *)&v22.m21 = *(_OWORD *)&v23.m21;
    *(_OWORD *)&v22.m23 = v17;
    CATransform3DScale(&v23, &v22, v18, v18, 1.0);
    v19 = *(double *)(a1 + 80);
    v21 = v23;
    CATransform3DRotate(&v22, &v21, v19, 0.0, 0.0, 1.0);
    v23 = v22;
    objc_msgSend(*(id *)(a1 + 32), "setTransform3D:", &v22);
  }
  objc_msgSend(*(id *)(a1 + 32), "setContentPageViewScale:", *(double *)(a1 + 88));
  objc_msgSend(*(id *)(a1 + 32), "setBlurViewIconScale:", *(double *)(a1 + 96));
  return objc_msgSend(*(id *)(a1 + 40), "setBlurViewIconScale:", *(double *)(a1 + 96));
}

- (id)activatingDisplayItemForAppLayout:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  int v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  int v17;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t i;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  void *v31;
  void *v32;
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "activeTransitionContext");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "layoutState");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "appLayout");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "isEqual:", v4);

  if (v9)
  {
    v40 = 0u;
    v41 = 0u;
    v38 = 0u;
    v39 = 0u;
    objc_msgSend(v6, "entities");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v39;
LABEL_4:
      v14 = 0;
      while (1)
      {
        if (*(_QWORD *)v39 != v13)
          objc_enumerationMutation(v10);
        v15 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * v14);
        objc_msgSend(v15, "objectForActivationSetting:", 45);
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        v17 = objc_msgSend(v15, "BOOLForActivationSetting:", 53);
        if (v17)
          v17 = objc_msgSend(v15, "BOOLForActivationSetting:", 27);
        if (v16 || v17 != 0)
          break;
        if (v12 == ++v14)
        {
          v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
          if (v12)
            goto LABEL_4;
          goto LABEL_16;
        }
      }
      v36 = 0u;
      v37 = 0u;
      v34 = 0u;
      v35 = 0u;
      objc_msgSend(v4, "allItems");
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      v20 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
      if (v20)
      {
        v21 = v20;
        v31 = v10;
        v32 = v6;
        v33 = v4;
        v22 = *(_QWORD *)v35;
        while (2)
        {
          for (i = 0; i != v21; ++i)
          {
            if (*(_QWORD *)v35 != v22)
              objc_enumerationMutation(v19);
            v24 = *(void **)(*((_QWORD *)&v34 + 1) + 8 * i);
            objc_msgSend(v15, "applicationSceneEntity");
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v25, "sceneHandle");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "sceneIdentifier");
            v27 = (void *)objc_claimAutoreleasedReturnValue();

            objc_msgSend(v24, "uniqueIdentifier");
            v28 = (void *)objc_claimAutoreleasedReturnValue();
            LODWORD(v25) = objc_msgSend(v27, "isEqualToString:", v28);

            if ((_DWORD)v25)
            {
              v29 = v24;

              goto LABEL_27;
            }

          }
          v21 = objc_msgSend(v19, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
          if (v21)
            continue;
          break;
        }
        v29 = 0;
LABEL_27:
        v6 = v32;
        v4 = v33;
        v10 = v31;
      }
      else
      {
        v29 = 0;
      }

      if (v29)
        goto LABEL_31;
    }
    else
    {
LABEL_16:

    }
  }
  objc_msgSend(v4, "itemForLayoutRole:", 1);
  v29 = (id)objc_claimAutoreleasedReturnValue();
LABEL_31:

  return v29;
}

- (id)_iconViewForDisplayItem:(id)a3 isVisible:(BOOL *)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  char v24;
  char IsVisible;
  char v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t i;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  char v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  void *v51;
  void *v53;
  id v54;
  id v55;
  void *v56;
  void *v58;
  void *v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  _BYTE v64[128];
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "homeScreenController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "iconManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = v8;
  if (v8)
  {
    v10 = v8;
  }
  else
  {
    +[SBIconController sharedInstance](SBIconController, "sharedInstance");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "iconManager");
    v10 = (id)objc_claimAutoreleasedReturnValue();

  }
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "activeTransitionContext");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "bundleIdentifier");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _workspaceEntityForBundleIdentifier:inTransitionContext:](self, "_workspaceEntityForBundleIdentifier:inTransitionContext:", v14, v13);
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v5, "type"))
  {
    -[SBFluidSwitcherViewController _iconForWorkspaceEntity:](self, "_iconForWorkspaceEntity:", v15);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    if (v20)
      goto LABEL_11;
LABEL_8:
    v21 = 0;
    goto LABEL_48;
  }
  v16 = objc_msgSend(v5, "type");
  objc_msgSend(v10, "iconModel");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = v17;
  if (v16 == 5)
  {
    objc_msgSend(v5, "webClipIdentifier");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "leafIconForIdentifier:", v19);
    v20 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    objc_msgSend(v17, "leafIconForIdentifier:", v14);
    v20 = (void *)objc_claimAutoreleasedReturnValue();
  }

  if (!v20)
    goto LABEL_8;
LABEL_11:
  v58 = v12;
  v59 = v20;
  v55 = v5;
  v56 = v13;
  v53 = v14;
  if (v15)
  {
    if (objc_msgSend(v15, "isApplicationSceneEntity"))
    {
      objc_msgSend(v15, "sceneHandle");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      v23 = objc_msgSend(v22, "lastActivationSource");

    }
    else
    {
      v23 = 0;
    }
    if ((objc_msgSend(v15, "BOOLForActivationSetting:", 26) & 1) != 0)
      IsVisible = 1;
    else
      IsVisible = SBSpotlightIsVisible();
    v26 = objc_msgSend(v15, "BOOLForActivationSetting:", 28);
    v24 = (IsVisible | v26 | objc_msgSend(v15, "BOOLForActivationSetting:", 27)) ^ 1;
  }
  else
  {
    v23 = 0;
    v24 = 1;
  }
  -[SBFluidSwitcherViewController _iconLocationsForActivationSource:](self, "_iconLocationsForActivationSource:", v23);
  v60 = 0u;
  v61 = 0u;
  v62 = 0u;
  v63 = 0u;
  v27 = (id)objc_claimAutoreleasedReturnValue();
  v28 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v60, v64, 16);
  if (v28)
  {
    v29 = v28;
    v30 = *(_QWORD *)v61;
    while (2)
    {
      for (i = 0; i != v29; ++i)
      {
        if (*(_QWORD *)v61 != v30)
          objc_enumerationMutation(v27);
        if ((SBIconLocationGroupContainsLocation() & 1) != 0)
        {

          goto LABEL_30;
        }
      }
      v29 = objc_msgSend(v27, "countByEnumeratingWithState:objects:count:", &v60, v64, 16);
      if (v29)
        continue;
      break;
    }
  }

  objc_msgSend(v58, "layoutState");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "unlockedEnvironmentMode");

LABEL_30:
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v33 = (void *)objc_claimAutoreleasedReturnValue();
  v54 = v10;
  if ((objc_msgSend(v33, "isMainDisplayWindowScene") & 1) != 0
    || objc_msgSend(v33, "isContinuityDisplayWindowScene"))
  {
    SBIconViewQueryingBestIconViewForIcon();
    v34 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    objc_msgSend(v33, "floatingDockController");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "floatingDockViewController");
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v36, "isPresentingLibrary"))
    {
      objc_msgSend(v33, "modalLibraryController");
      v37 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v37, "libraryViewController");
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v38, "firstIconViewForIcon:", v59);
      v34 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      objc_msgSend(v35, "firstIconViewForIcon:", v59);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
    }

  }
  objc_msgSend(v34, "window");
  v39 = (void *)objc_claimAutoreleasedReturnValue();
  if (v34)
    v40 = v39 != 0;
  else
    v40 = v24;
  objc_msgSend(v33, "floatingDockController");
  v41 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v41, "viewController");
  v42 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v42, "view");
  v43 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v43, "window");
  v44 = (void *)objc_claimAutoreleasedReturnValue();

  if (v39 == v44)
  {
    objc_msgSend(v58, "transitioningFromLayoutState");
    v45 = (void *)objc_claimAutoreleasedReturnValue();
    v46 = objc_msgSend(v45, "interfaceOrientation");

    objc_msgSend(v58, "transitioningToLayoutState");
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    v48 = objc_msgSend(v47, "interfaceOrientation");

    if (v46 != v48)
      v40 = 0;
  }
  objc_msgSend(v34, "icon");
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "applicationBundleID");
  v50 = (void *)objc_claimAutoreleasedReturnValue();

  if (v50)
  {
    objc_msgSend(MEMORY[0x1E0CF9688], "applicationWithBundleIdentifier:", v50);
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    v40 &= ~objc_msgSend(v51, "isHidden");

  }
  v10 = v54;
  if (a4)
    *a4 = v40;
  v21 = v34;

  v5 = v55;
  v13 = v56;
  v12 = v58;
  v20 = v59;
  v14 = v53;
LABEL_48:

  return v21;
}

- (BOOL)_appLayoutWantsToBeKeptInViewHierarchy:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  _QWORD v15[4];
  id v16;

  v4 = a3;
  if ((objc_msgSend(v4, "type") & 0xFFFFFFFFFFFFFFFELL) == 2
    && (-[SBFluidSwitcherViewController layoutContext](self, "layoutContext"),
        v5 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v5, "layoutState"),
        v6 = (void *)objc_claimAutoreleasedReturnValue(),
        v7 = objc_msgSend(v6, "unlockedEnvironmentMode"),
        v6,
        v5,
        v7 == 2))
  {
    v8 = 1;
  }
  else
  {
    -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
    v9 = objc_claimAutoreleasedReturnValue();
    objc_msgSend((id)v9, "layoutState");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "appLayout");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "isOrContainsAppLayout:", v4);

    -[NSMutableDictionary allKeys](self->_liveContentOverlays, "allKeys");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __72__SBFluidSwitcherViewController__appLayoutWantsToBeKeptInViewHierarchy___block_invoke;
    v15[3] = &unk_1E8E9DF78;
    v16 = v4;
    LOBYTE(v9) = objc_msgSend(v13, "bs_containsObjectPassingTest:", v15);

    v8 = v12 | v9;
  }

  return v8;
}

- (SBFluidSwitcherLayoutContext)layoutContext
{
  return self->_layoutContext;
}

- (id)_workspaceEntityForBundleIdentifier:(id)a3 inTransitionContext:(id)a4
{
  id v5;
  id v6;
  SBDeviceApplicationSceneEntity *v7;
  void *v8;
  void *v9;

  v5 = a3;
  v6 = a4;
  objc_msgSend(v6, "applicationSceneEntityForBundleID:", v5);
  v7 = (SBDeviceApplicationSceneEntity *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    objc_msgSend(v6, "previousApplicationSceneEntityForBundleID:", v5);
    v7 = (SBDeviceApplicationSceneEntity *)objc_claimAutoreleasedReturnValue();
    if (!v7)
    {
      +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "applicationWithBundleIdentifier:", v5);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      v7 = -[SBDeviceApplicationSceneEntity initWithApplicationForMainDisplay:]([SBDeviceApplicationSceneEntity alloc], "initWithApplicationForMainDisplay:", v9);
      if (!v7)
      {
        objc_msgSend(v6, "appClipPlaceholderEntityForBundleID:", v5);
        v7 = (SBDeviceApplicationSceneEntity *)objc_claimAutoreleasedReturnValue();
        if (!v7)
        {
          objc_msgSend(v6, "previousAppClipPlaceholderEntityForBundleID:", v5);
          v7 = (SBDeviceApplicationSceneEntity *)objc_claimAutoreleasedReturnValue();
        }
      }
    }
  }

  return v7;
}

- (id)_iconLocationsForActivationSource:(int64_t)a3
{
  void *v3;
  void *v4;
  const __CFString **v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  const __CFString *v17;
  _QWORD v18[2];

  v3 = 0;
  v18[1] = *MEMORY[0x1E0C80C00];
  if (a3 <= 37)
  {
    if (a3 == 1)
    {
      v6 = *MEMORY[0x1E0DAA9A0];
      v9[0] = *MEMORY[0x1E0DAA9E8];
      v9[1] = v6;
      v9[2] = *MEMORY[0x1E0DAA990];
      v4 = (void *)MEMORY[0x1E0C99D20];
      v5 = (const __CFString **)v9;
      v7 = 3;
    }
    else
    {
      if (a3 == 24)
      {
        v16 = *MEMORY[0x1E0DAA998];
        v4 = (void *)MEMORY[0x1E0C99D20];
        v5 = (const __CFString **)&v16;
      }
      else
      {
        if (a3 != 25)
          return v3;
        v17 = CFSTR("SBIconLocationFloatingDockSuggestions");
        v4 = (void *)MEMORY[0x1E0C99D20];
        v5 = &v17;
      }
LABEL_16:
      v7 = 1;
    }
    objc_msgSend(v4, "arrayWithObjects:count:", v5, v7);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    return v3;
  }
  switch(a3)
  {
    case '&':
      v12 = *MEMORY[0x1E0DAA958];
      v4 = (void *)MEMORY[0x1E0C99D20];
      v5 = (const __CFString **)&v12;
      goto LABEL_16;
    case '\'':
      v11 = *MEMORY[0x1E0DAA988];
      v4 = (void *)MEMORY[0x1E0C99D20];
      v5 = (const __CFString **)&v11;
      goto LABEL_16;
    case '(':
      v13 = *MEMORY[0x1E0DAA968];
      v4 = (void *)MEMORY[0x1E0C99D20];
      v5 = (const __CFString **)&v13;
      goto LABEL_16;
    case ')':
      v14 = *MEMORY[0x1E0DAA970];
      v4 = (void *)MEMORY[0x1E0C99D20];
      v5 = (const __CFString **)&v14;
      goto LABEL_16;
    case '*':
      v15 = *MEMORY[0x1E0DAA978];
      v4 = (void *)MEMORY[0x1E0C99D20];
      v5 = (const __CFString **)&v15;
      goto LABEL_16;
    case '.':
      v10 = *MEMORY[0x1E0DAA9F0];
      v4 = (void *)MEMORY[0x1E0C99D20];
      v5 = (const __CFString **)&v10;
      goto LABEL_16;
    case '/':
      v18[0] = *MEMORY[0x1E0CF9608];
      v4 = (void *)MEMORY[0x1E0C99D20];
      v5 = (const __CFString **)v18;
      goto LABEL_16;
    default:
      return v3;
  }
  return v3;
}

- (id)_iconForWorkspaceEntity:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  int v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  int v27;
  void *v28;
  char v29;

  v4 = a3;
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "homeScreenController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "iconManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    v9 = v7;
  }
  else
  {
    +[SBIconController sharedInstance](SBIconController, "sharedInstance");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "iconManager");
    v9 = (id)objc_claimAutoreleasedReturnValue();

  }
  objc_msgSend(v9, "iconModel");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "objectForActivationSetting:", 45);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v12)
  {
    if (!objc_msgSend(v4, "isDeviceApplicationSceneEntity"))
      goto LABEL_28;
    objc_msgSend(v4, "deviceApplicationSceneEntity");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "sceneHandle");
    v14 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v14, "lastActivationIconLeafIdentifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v12)
    {
LABEL_28:
      if (objc_msgSend(v4, "isApplicationSceneEntity"))
      {
        objc_msgSend(v4, "applicationSceneEntity");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "application");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v16, "info");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        v18 = objc_msgSend(v17, "isAppClip");

        if (!v18)
        {
          objc_msgSend(v16, "iconIdentifier");
          v12 = (void *)objc_claimAutoreleasedReturnValue();
          goto LABEL_14;
        }
        objc_msgSend(v16, "bundleIdentifier");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "sceneHandle");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "sceneIdentifier");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBFluidSwitcherViewController _webClipIdentifierForAppClipBundleIdentifier:sceneIdentifier:](self, "_webClipIdentifierForAppClipBundleIdentifier:sceneIdentifier:", v19, v21);
        v12 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_12:
LABEL_14:

        goto LABEL_16;
      }
      if (objc_msgSend(v4, "isAppClipPlaceholderEntity"))
      {
        objc_msgSend(v4, "appClipPlaceholderEntity");
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "bundleIdentifier");
        v16 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v15, "futureSceneIdentifier");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        -[SBFluidSwitcherViewController _webClipIdentifierForAppClipBundleIdentifier:sceneIdentifier:](self, "_webClipIdentifierForAppClipBundleIdentifier:sceneIdentifier:", v16, v19);
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        goto LABEL_12;
      }
      v12 = 0;
    }
  }
LABEL_16:
  objc_msgSend(v11, "leafIconForIdentifier:", v12);
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  +[SBAppSwitcherDomain rootSettings](SBAppSwitcherDomain, "rootSettings");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "animationSettings");
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v22, "gridSizeClass");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  if (v25)
  {
    objc_msgSend((id)objc_opt_class(), "_mediumGridSizeClassesForIconZoom");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v26, "containsGridSizeClass:", v25) & 1) != 0)
    {
      v27 = objc_msgSend(v24, "allowIconZoomFromMediumWidgets");

      if (!v27)
        goto LABEL_23;
    }
    else
    {

    }
    objc_msgSend((id)objc_opt_class(), "_largeGridSizeClassesForIconZoom");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    if (!objc_msgSend(v28, "containsGridSizeClass:", v25))
    {
LABEL_24:

      goto LABEL_25;
    }
    v29 = objc_msgSend(v24, "allowIconZoomFromLargeWidgets");

    if ((v29 & 1) == 0)
    {
LABEL_23:
      v28 = v22;
      v22 = 0;
      goto LABEL_24;
    }
  }
LABEL_25:

  return v22;
}

- (void)_acquireKeyboardSuppressionAssertionForMode:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  char v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  unint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;

  v20 = a3;
  +[SBSwitcherKeyboardSuppressionMode suppressionModeNone](SBSwitcherKeyboardSuppressionMode, "suppressionModeNone");
  v5 = (id)objc_claimAutoreleasedReturnValue();

  if (v5 == v20)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 8979, CFSTR("We shouldn't be acquiring a keyboard suppression if the mode is None."));

  }
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "medusaHostedKeyboardWindowController");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "isUsingMedusaHostedKeyboardWindow");

  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "layoutState");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "elements");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if ((unint64_t)objc_msgSend(v11, "count") > 1)
  {

LABEL_10:
    if (objc_msgSend(v20, "suppressesSwitcherScenesOnly"))
    {
      objc_msgSend(v20, "appLayouts");
      v16 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBFluidSwitcherViewController _sceneDeactivationPredicateMatchingAppLayouts:](self, "_sceneDeactivationPredicateMatchingAppLayouts:", v16);
      v17 = (void *)objc_claimAutoreleasedReturnValue();

    }
    else
    {
      v17 = 0;
    }
    +[SBKeyboardSuppressionManager sharedInstance](SBKeyboardSuppressionManager, "sharedInstance");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "startSuppressingKeyboardWithReason:predicate:displayIdentity:", self->_fluidSwitcherAssertionReason, v17, 0);

    goto LABEL_14;
  }
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "transitioningFromLayoutState");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "elements");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = objc_msgSend(v14, "count");

  if (v15 > 1)
    v8 = 1;

  if ((v8 & 1) != 0 || (objc_msgSend(v20, "applyAssertionEvenIfAppIsHostingTheKeyboard") & 1) != 0)
    goto LABEL_10;
LABEL_14:

}

- (BOOL)itemContainerForAppLayoutOverlapsFloatingDock:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[SBFluidSwitcherViewController _iconZoomContextProvider](self, "_iconZoomContextProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "anyDisplayItemForAppLayoutOverlapsFloatingDock:", v4);

  return v6;
}

void __70__SBFluidSwitcherViewController__performModifierUpdateLayoutResponse___block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  id v10;

  v2 = *(_QWORD *)(a1 + 48);
  if ((v2 & 2) != 0)
  {
    objc_msgSend(*(id *)(a1 + 32), "_updateVisibleItems");
    v2 = *(_QWORD *)(a1 + 48);
  }
  if ((v2 & 4) != 0)
  {
    v4 = *(void **)(a1 + 32);
    v3 = *(_QWORD *)(a1 + 40);
    if (v3)
    {
      (*(void (**)(uint64_t, const __CFString *))(v3 + 16))(v3, CFSTR("update layout action"));
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v4, "_updateLayoutWithCompletion:", v5);

    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "_updateLayoutWithCompletion:", 0);
    }
  }
  if ((*(_BYTE *)(a1 + 48) & 8) != 0)
  {
    v7 = *(void **)(a1 + 32);
    v6 = *(_QWORD *)(a1 + 40);
    if (v6)
    {
      (*(void (**)(uint64_t, const __CFString *))(v6 + 16))(v6, CFSTR("update style action"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "_updateStyleWithCompletion:", v8);

    }
    else
    {
      objc_msgSend(*(id *)(a1 + 32), "_updateStyleWithCompletion:", 0);
    }
  }
  v9 = *(_QWORD *)(a1 + 48);
  if ((v9 & 0x10) == 0)
  {
    if ((v9 & 0x20) == 0)
      return;
LABEL_15:
    objc_msgSend(*(id *)(a1 + 32), "view");
    v10 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "setNeedsLayout");

    return;
  }
  objc_msgSend(*(id *)(a1 + 32), "_updateVisibleAccessoryViews");
  if ((*(_QWORD *)(a1 + 48) & 0x20) != 0)
    goto LABEL_15;
}

void __95__SBFluidSwitcherViewController__updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  void (**v3)(id, const __CFString *);
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void (**v8)(id, const __CFString *);

  v3 = a2;
  v4 = *(void **)(a1 + 32);
  v8 = v3;
  if (*(_BYTE *)(a1 + 40))
  {
    v3[2](v3, CFSTR("update layout"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "_updateLayoutWithCompletion:", v5);

  }
  else
  {
    objc_msgSend(v4, "_updateLayoutWithCompletion:", 0);
  }
  v6 = *(void **)(a1 + 32);
  if (*(_BYTE *)(a1 + 41))
  {
    v8[2](v8, CFSTR("update style"));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "_updateStyleWithCompletion:", v7);

  }
  else
  {
    objc_msgSend(*(id *)(a1 + 32), "_updateStyleWithCompletion:", 0);
  }

}

- (void)_updateStyleWithCompletion:(id)a3
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke;
  v3[3] = &unk_1E8EA4840;
  v3[4] = self;
  objc_msgSend(MEMORY[0x1E0DA9D48], "perform:finalCompletion:options:delegate:", v3, a3, 0);
}

- (void)_updateLayoutWithCompletion:(id)a3
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 3221225472;
  v3[2] = __61__SBFluidSwitcherViewController__updateLayoutWithCompletion___block_invoke;
  v3[3] = &unk_1E8EA4840;
  v3[4] = self;
  objc_msgSend(MEMORY[0x1E0DA9D48], "perform:finalCompletion:options:delegate:", v3, a3, 0);
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_11(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, a3);
  return result;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "invalidate");
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, a3);
  return result;
}

- (BOOL)snapshotView:(id)a3 shouldShowAppClipOverlayForLayout:(id)a4
{
  void *v4;
  BOOL v5;

  -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", a4);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4 == 0;

  return v5;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_27(uint64_t a1)
{
  double v2;
  uint64_t i;
  _BYTE v5[8];
  __int128 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v2 = *(double *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 72);
  for (i = 8; i != 32; i += 8)
  {
    if (v2 < *(double *)&v5[i])
      v2 = *(double *)&v5[i];
  }
  objc_msgSend(*(id *)(a1 + 32), "setCornerRadius:", v2);
  return objc_msgSend(*(id *)(a1 + 40), "setCornerRadius:", v2);
}

- (CGRect)layoutFrameForItemWithRole:(int64_t)a3 inAppLayout:(id)a4 interfaceOrientation:(int64_t)a5 forSnapshotView:(id)a6
{
  double v6;
  double v7;
  double v8;
  double v9;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  SBSwitcherModifier *rootModifier;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  CGRect result;

  v6 = *MEMORY[0x1E0C9D648];
  v7 = *(double *)(MEMORY[0x1E0C9D648] + 8);
  v8 = *(double *)(MEMORY[0x1E0C9D648] + 16);
  v9 = *(double *)(MEMORY[0x1E0C9D648] + 24);
  if (a4 && a3)
  {
    objc_msgSend(a4, "leafAppLayoutForRole:");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "indexOfObject:", v12);

      -[SBSwitcherModifier frameForIndex:](self->_rootModifier, "frameForIndex:", v14);
      objc_msgSend(v11, "itemForLayoutRole:", 1);
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      v16 = objc_msgSend(v12, "layoutRoleForItem:", v15);

      rootModifier = self->_rootModifier;
      SBRectWithSize();
      -[SBSwitcherModifier frameForLayoutRole:inAppLayout:withBounds:](rootModifier, "frameForLayoutRole:inAppLayout:withBounds:", v16, v12);
      v8 = v18;
      v9 = v19;
      v6 = *MEMORY[0x1E0C9D538];
      v7 = *(double *)(MEMORY[0x1E0C9D538] + 8);
    }

  }
  v20 = v6;
  v21 = v7;
  v22 = v8;
  v23 = v9;
  result.size.height = v23;
  result.size.width = v22;
  result.origin.y = v21;
  result.origin.x = v20;
  return result;
}

uint64_t __104__SBFluidSwitcherViewController_shouldAddAppLayoutToFront_forTransitionWithContext_transitionCompleted___block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

- (void)layoutStateTransitionCoordinator:(id)a3 transitionDidBeginWithTransitionContext:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  UIApplicationSceneDeactivationAssertion *v16;
  UIApplicationSceneDeactivationAssertion *transitionBeginResignActiveAssertion;
  UIApplicationSceneDeactivationAssertion *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  objc_msgSend(v7, "toLayoutState");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "applicationTransitionContext");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "elements");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "count");

  if (v11)
    -[SBSwitcherLiveContentOverlayCoordinating layoutStateTransitionCoordinator:transitionDidBeginWithTransitionContext:](self->_liveContentOverlayCoordinator, "layoutStateTransitionCoordinator:transitionDidBeginWithTransitionContext:", v6, v7);
  -[UIView setHidden:](self->_hitTestBlockerView, "setHidden:", 1);
  -[SBFluidSwitcherViewController _configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:](self, "_configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:", v9);
  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v13 = v12;
  if ((*((_BYTE *)&self->_delegateRespondsTo + 2) & 4) != 0
    && objc_msgSend(v12, "switcherContentController:shouldResignActiveForStartOfTransition:", self, v7)
    && !self->_transitionBeginResignActiveAssertion)
  {
    +[SBSceneManagerCoordinator sharedInstance](SBSceneManagerCoordinator, "sharedInstance");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "sceneDeactivationManager");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = (UIApplicationSceneDeactivationAssertion *)objc_msgSend(v15, "newAssertionWithReason:", 5);
    transitionBeginResignActiveAssertion = self->_transitionBeginResignActiveAssertion;
    self->_transitionBeginResignActiveAssertion = v16;

    v18 = self->_transitionBeginResignActiveAssertion;
    -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "_fbsDisplayIdentity");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    -[UIApplicationSceneDeactivationAssertion sb_acquireForDisplayIdentity:](v18, "sb_acquireForDisplayIdentity:", v20);

  }
  -[SBFluidSwitcherContentView setNeedsFocusUpdate](self->_contentView, "setNeedsFocusUpdate");
  -[SBFluidSwitcherContentView updateFocusIfNeeded](self->_contentView, "updateFocusIfNeeded");
  v28 = 0u;
  v29 = 0u;
  v26 = 0u;
  v27 = 0u;
  -[NSMutableDictionary allValues](self->_visibleShelves, "allValues", 0);
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  v22 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
  if (v22)
  {
    v23 = v22;
    v24 = *(_QWORD *)v27;
    do
    {
      v25 = 0;
      do
      {
        if (*(_QWORD *)v27 != v24)
          objc_enumerationMutation(v21);
        objc_msgSend(*(id *)(*((_QWORD *)&v26 + 1) + 8 * v25++), "layoutStateTransitionCoordinator:transitionDidBeginWithTransitionContext:", v6, v7);
      }
      while (v23 != v25);
      v23 = objc_msgSend(v21, "countByEnumeratingWithState:objects:count:", &v26, v30, 16);
    }
    while (v23);
  }

}

void __62__SBFluidSwitcherViewController__updateResignActiveAssertions__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;

  v5 = a3;
  v6 = a2;
  +[SBSceneManagerCoordinator sharedInstance](SBSceneManagerCoordinator, "sharedInstance");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "sceneDeactivationManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v6, "integerValue");

  v11 = (id)objc_msgSend(v8, "newAssertionWithReason:", v9);
  objc_msgSend(*(id *)(a1 + 32), "_sceneDeactivationPredicateMatchingAppLayouts:", v5);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v11, "acquireWithPredicate:transitionContext:", v10, 0);
  objc_msgSend(*(id *)(a1 + 40), "addObject:", v11);

}

- (id)_sceneDeactivationPredicateMatchingAppLayouts:(id)a3
{
  id v3;
  id v4;
  void *v5;
  _QWORD v7[4];
  id v8;

  v3 = a3;
  v7[0] = MEMORY[0x1E0C809B0];
  v7[1] = 3221225472;
  v7[2] = __79__SBFluidSwitcherViewController__sceneDeactivationPredicateMatchingAppLayouts___block_invoke;
  v7[3] = &unk_1E8EA3EA0;
  v8 = v3;
  v4 = v3;
  v5 = (void *)MEMORY[0x1D17E5550](v7);

  return v5;
}

- (void)_updateItemContainerBackdropPresenceForIndex:(unint64_t)a3 scale:(double)a4 rotation:(double)a5 cornerRadius:(double)a6 animationAttributes:(id)a7 completion:(id)a8
{
  id v14;
  int v15;
  NSMutableDictionary *visibleItemContainerBackdropViews;
  void *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  int v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  void *v30;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v35;
  CGFloat v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  NSMutableDictionary *v47;
  uint64_t v48;
  void *v49;
  void *v50;
  double v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  id v56;
  _QWORD v57[5];
  id v58;
  uint64_t *v59;
  unint64_t v60;
  _QWORD v61[5];
  CGAffineTransform v62;
  double v63;
  char v64;
  _QWORD v65[4];
  id v66;
  uint64_t *v67;
  _QWORD v68[4];
  id v69;
  _QWORD v70[5];
  CGAffineTransform v71;
  double v72;
  _QWORD v73[4];
  id v74;
  uint64_t *v75;
  CGFloat v76;
  CGFloat v77;
  CGFloat v78;
  CGFloat v79;
  CGAffineTransform v80;
  CGAffineTransform v81;
  CGAffineTransform v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t);
  void (*v87)(uint64_t);
  id v88;
  CGRect v89;
  CGRect v90;

  v14 = a7;
  v56 = a8;
  v15 = -[SBSwitcherModifier shouldShowBackdropViewAtIndex:](self->_rootModifier, "shouldShowBackdropViewAtIndex:", a3);
  v83 = 0;
  v84 = &v83;
  v85 = 0x3032000000;
  v86 = __Block_byref_object_copy__13;
  v87 = __Block_byref_object_dispose__13;
  visibleItemContainerBackdropViews = self->_visibleItemContainerBackdropViews;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](visibleItemContainerBackdropViews, "objectForKey:", v17);
  v88 = (id)objc_claimAutoreleasedReturnValue();

  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "objectAtIndex:", a3);
  v19 = objc_claimAutoreleasedReturnValue();

  -[SBFluidSwitcherViewController keyboardFocusedAppLayout](self, "keyboardFocusedAppLayout");
  v20 = objc_claimAutoreleasedReturnValue();
  v54 = (void *)v20;
  if (v20)
    v21 = v20 == v19;
  else
    v21 = 0;
  v22 = v21;
  if (v21)
    v23 = v15;
  else
    v23 = 0;
  if (v23 == 1)
  {
    v24 = -[SBSwitcherModifier isFocusEnabledForAppLayout:](self->_rootModifier, "isFocusEnabledForAppLayout:", v19);
    if (!v24)
      goto LABEL_15;
  }
  else
  {
    v24 = v15 & ~v22;
    if (!v24)
    {
LABEL_15:
      v25 = 0;
      goto LABEL_16;
    }
  }
  if (v84[5])
    goto LABEL_15;
  objc_msgSend(MEMORY[0x1E0D47498], "materialViewWithRecipe:", 101);
  v43 = objc_claimAutoreleasedReturnValue();
  v44 = (void *)v84[5];
  v84[5] = v43;

  objc_msgSend((id)v84[5], "bs_setHitTestingDisabled:", 1);
  memset(&v82, 0, sizeof(v82));
  CGAffineTransformMakeScale(&v82, a4, a4);
  v80 = v82;
  CGAffineTransformRotate(&v81, &v80, a5);
  v82 = v81;
  objc_msgSend((id)v84[5], "setTransform:", &v81);
  objc_msgSend((id)v84[5], "layer");
  v45 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v45, "setCornerCurve:", *MEMORY[0x1E0CD2A68]);

  objc_msgSend((id)v84[5], "layer");
  v46 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v46, "setCornerRadius:", a6);

  -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", v84[5]);
  v47 = self->_visibleItemContainerBackdropViews;
  v48 = v84[5];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a3);
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary setObject:forKey:](v47, "setObject:forKey:", v48, v49);

  -[SBFluidSwitcherViewController _ensureSubviewOrdering](self, "_ensureSubviewOrdering");
  v25 = 1;
LABEL_16:
  v26 = objc_msgSend(v14, "layoutUpdateMode");
  if (!v26)
    v26 = objc_msgSend(v14, "updateMode");
  v27 = objc_msgSend(v14, "positionUpdateMode");
  if (!v27)
    v27 = objc_msgSend(v14, "updateMode");
  objc_msgSend(v14, "layoutSettings");
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "positionSettings");
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v22 & 1) != 0
    || -[NSMutableSet containsObject:](self->_focusedItemBackdropsBeingRemoved, "containsObject:", v84[5]))
  {
    v27 = 1;
  }
  -[NSMutableDictionary objectForKey:](self->_visibleUnderlayAccessoryViews, "objectForKey:", v19, v19);
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  v30 = v29;
  if (v24)
  {
    objc_msgSend(v29, "bounds");
    x = v89.origin.x;
    y = v89.origin.y;
    width = v89.size.width;
    height = v89.size.height;
    v35 = CGRectGetWidth(v89);
    v90.origin.x = x;
    v90.origin.y = y;
    v90.size.width = width;
    v90.size.height = height;
    v36 = CGRectGetHeight(v90);
    memset(&v82, 0, sizeof(v82));
    CGAffineTransformMakeScale(&v82, (14.0 / a4 + v35) / v35 * a4, (14.0 / a4 + v36) / v36 * a4);
    v80 = v82;
    CGAffineTransformRotate(&v81, &v80, a5);
    v82 = v81;
    if (v25)
      v37 = 1;
    else
      v37 = v27;
    v38 = (void *)MEMORY[0x1E0CEABB0];
    v39 = MEMORY[0x1E0C809B0];
    v73[0] = MEMORY[0x1E0C809B0];
    v73[1] = 3221225472;
    v73[2] = __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke;
    v73[3] = &unk_1E8EA4FC0;
    v75 = &v83;
    v74 = v30;
    v76 = x;
    v77 = y;
    v78 = width;
    v79 = height;
    objc_msgSend(v38, "sb_animateWithSettings:mode:animations:completion:", v28, v37, v73, 0);
    v71 = v82;
    v40 = (void *)MEMORY[0x1E0CEABB0];
    v70[0] = v39;
    v70[1] = 3221225472;
    v70[2] = __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_2;
    v70[3] = &unk_1E8EA4FE8;
    v70[4] = &v83;
    v72 = a6 + 14.0;
    v68[0] = v39;
    v68[1] = 3221225472;
    v68[2] = __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_3;
    v68[3] = &unk_1E8EA4988;
    v69 = v56;
    objc_msgSend(v40, "sb_animateWithSettings:mode:animations:completion:", v55, v26, v70, v68);

    v41 = v74;
    goto LABEL_35;
  }
  if (v84[5])
  {
    if (v22)
    {
      v42 = MEMORY[0x1E0C809B0];
      -[NSMutableSet addObject:](self->_focusedItemBackdropsBeingRemoved, "addObject:");
    }
    else
    {
      v50 = (void *)MEMORY[0x1E0CEABB0];
      v42 = MEMORY[0x1E0C809B0];
      v65[0] = MEMORY[0x1E0C809B0];
      v65[1] = 3221225472;
      v65[2] = __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_4;
      v65[3] = &unk_1E8E9DFA0;
      v67 = &v83;
      v66 = v29;
      objc_msgSend(v50, "sb_animateWithSettings:mode:animations:completion:", v28, v27, v65, 0);

    }
    objc_msgSend((id)v84[5], "alpha");
    if (v51 != 0.0)
    {
      memset(&v82, 0, sizeof(v82));
      CGAffineTransformMakeScale(&v82, a4, a4);
      v80 = v82;
      CGAffineTransformRotate(&v81, &v80, a5);
      v82 = v81;
      v52 = (void *)MEMORY[0x1E0CEABB0];
      v61[0] = v42;
      v61[1] = 3221225472;
      v61[2] = __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_5;
      v61[3] = &unk_1E8EA5010;
      v61[4] = &v83;
      v64 = v22;
      v62 = v81;
      v63 = a6;
      v57[0] = v42;
      v57[1] = 3221225472;
      v57[2] = __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_6;
      v57[3] = &unk_1E8EA5038;
      v57[4] = self;
      v59 = &v83;
      v60 = a3;
      v58 = v56;
      objc_msgSend(v52, "sb_animateWithSettings:mode:animations:completion:", v55, v26, v61, v57);
      v41 = v58;
LABEL_35:

      goto LABEL_38;
    }
  }
  if (v56)
    (*((void (**)(id, uint64_t, _QWORD))v56 + 2))(v56, 1, 0);
LABEL_38:

  _Block_object_dispose(&v83, 8);
}

- (id)keyboardFocusedAppLayout
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v3 = objc_opt_class();
  objc_msgSend(MEMORY[0x1E0CEA5E0], "focusSystemForEnvironment:", self->_contentView);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "focusedItem");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  SBSafeCast(v3, v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if (v6)
  {
    objc_msgSend(v6, "appLayout");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v7);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = 0;
  }

  return v8;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_10(uint64_t a1)
{
  void *v2;
  void *v3;

  if (!*(_BYTE *)(a1 + 96) && !*(_BYTE *)(a1 + 97))
  {
    objc_msgSend(*(id *)(a1 + 32), "layer");
    v2 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v2, "setAnchorPoint:", *(double *)(a1 + 48), *(double *)(a1 + 56));

  }
  v3 = *(void **)(a1 + 32);
  UIRectGetCenter();
  objc_msgSend(v3, "setCenter:");
  return objc_msgSend(*(id *)(a1 + 40), "setValue:", 1.0);
}

- (int64_t)numberOfVisibleAppLayoutsForBundleIdentifier:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  $7708D0751127115E4838D42B16D0F436 dataSourceRespondsTo;
  uint64_t v8;
  void *v9;
  int64_t v10;
  void *v11;

  v4 = a3;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  dataSourceRespondsTo = self->_dataSourceRespondsTo;
  if ((*(_WORD *)&dataSourceRespondsTo & 0x4000) != 0)
  {
    objc_msgSend(v5, "switcherContentController:visibleAppLayoutsForBundleIdentifier:", self, v4);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v11, "count");

    if ((*(_DWORD *)&self->_dataSourceRespondsTo & 0x8000) != 0)
      goto LABEL_3;
  }
  else
  {
    v8 = 0;
    if ((*(_WORD *)&dataSourceRespondsTo & 0x8000) != 0)
    {
LABEL_3:
      objc_msgSend(v6, "switcherContentController:visibleDisplayItemsForBundleIdentifier:", self, v4);
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      v10 = objc_msgSend(v9, "count");

      goto LABEL_6;
    }
  }
  v10 = 0;
LABEL_6:
  if (v8 < v10)
    v10 = v8;

  return v10;
}

- (BOOL)displayItemIsClassic:(id)a3
{
  void *v3;
  char v4;

  -[SBFluidSwitcherViewController _applicationForDisplayItem:](self, "_applicationForDisplayItem:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isClassic");

  return v4;
}

- (BOOL)displayItemSupportsMultipleWindowsIndicator:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  uint64_t v7;
  int v8;

  v4 = a3;
  -[SBFluidSwitcherViewController _applicationForDisplayItem:](self, "_applicationForDisplayItem:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "info");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v4, "type");

  if (v7 || !objc_msgSend(v6, "supportsMultiwindow"))
    LOBYTE(v8) = 0;
  else
    v8 = objc_msgSend(v6, "hasHiddenTag") ^ 1;

  return v8;
}

- (id)animationControllerForTransitionRequest:(id)a3
{
  id v4;
  SBFluidSwitcherAnimationController *v5;
  void *v6;
  SBFluidSwitcherAnimationController *v7;
  _QWORD v9[4];
  id v10;
  id location;

  v4 = a3;
  objc_initWeak(&location, self);
  v5 = [SBFluidSwitcherAnimationController alloc];
  -[SBFluidSwitcherViewController defaultTransitionAnimationSettings](self, "defaultTransitionAnimationSettings");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __73__SBFluidSwitcherViewController_animationControllerForTransitionRequest___block_invoke;
  v9[3] = &unk_1E8EA4410;
  objc_copyWeak(&v10, &location);
  v7 = -[SBFluidSwitcherAnimationController initWithWorkspaceTransitionRequest:animationSettings:animationBlock:](v5, "initWithWorkspaceTransitionRequest:animationSettings:animationBlock:", v4, v6, v9);

  objc_destroyWeak(&v10);
  objc_destroyWeak(&location);

  return v7;
}

- (BSAnimationSettings)defaultTransitionAnimationSettings
{
  id v2;
  void *v3;

  v2 = objc_alloc_init(MEMORY[0x1E0DA9E08]);
  objc_msgSend(v2, "setDefaultCriticallyDampedValues");
  objc_msgSend(v2, "dampingRatio");
  objc_msgSend(v2, "response");
  convertDampingRatioAndResponseToTensionAndFriction();
  objc_msgSend(MEMORY[0x1E0D01870], "settingsWithMass:stiffness:damping:", 1.0, 0.0, 0.0);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return (BSAnimationSettings *)v3;
}

uint64_t __57__SBFluidSwitcherViewController_liveScenesIdentityTokens__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "liveSceneIdentityToken");
}

uint64_t __99__SBFluidSwitcherViewController__addVisibleItemContainerForAppLayout_reusingItemContainerIfExists___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  v2 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "allItems");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "firstObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v2, "layoutRoleForItem:", v4);

  objc_msgSend(*(id *)(a1 + 48), "_layoutAppLayout:roleMask:completion:", *(_QWORD *)(a1 + 32), SBLayoutRoleMaskForRole(v5), 0);
  return objc_msgSend(*(id *)(a1 + 48), "_applyStyleToAppLayout:roleMask:completion:", *(_QWORD *)(a1 + 32), SBLayoutRoleMaskForRole(v5), 0);
}

void __82__SBFluidSwitcherViewController__applyStyleToVisibleItemContainersWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t j;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(id, const __CFString *);
  void *v26;
  id obj;
  id v28;
  void *v29;
  uint64_t v30;
  void (**v31)(id, const __CFString *);
  _QWORD v32[4];
  id v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  _BYTE v43[128];
  uint64_t v44;

  v44 = *MEMORY[0x1E0C80C00];
  v31 = a2;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  v3 = *(id *)(*(_QWORD *)(a1 + 32) + 1288);
  v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v39;
    do
    {
      for (i = 0; i != v5; ++i)
      {
        if (*(_QWORD *)v39 != v6)
          objc_enumerationMutation(v3);
        v8 = *(_QWORD *)(*((_QWORD *)&v38 + 1) + 8 * i);
        v9 = *(void **)(a1 + 32);
        v10 = SBLayoutRoleMaskAll();
        v31[2](v31, CFSTR("style app layout"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "_applyStyleToAppLayout:roleMask:completion:", v8, v10, v11);

      }
      v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v38, v43, 16);
    }
    while (v5);
  }

  v36 = 0u;
  v37 = 0u;
  v34 = 0u;
  v35 = 0u;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1824), "allKeys");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v35;
    v15 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
    do
    {
      for (j = 0; j != v13; ++j)
      {
        if (*(_QWORD *)v35 != v14)
          objc_enumerationMutation(obj);
        v17 = *(_QWORD *)(*((_QWORD *)&v34 + 1) + 8 * j);
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + v15[805]), "objectForKey:", v17);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        if (!v18)
        {
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "animationAttributesForLayoutElement:", v17);
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          v30 = objc_msgSend(v19, "updateMode");
          objc_msgSend(v19, "opacitySettings");
          v29 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1824), "objectForKey:", v17);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          v21 = (void *)MEMORY[0x1E0CEABB0];
          v32[0] = MEMORY[0x1E0C809B0];
          v32[1] = 3221225472;
          v32[2] = __82__SBFluidSwitcherViewController__applyStyleToVisibleItemContainersWithCompletion___block_invoke_2;
          v32[3] = &unk_1E8E9DED8;
          v33 = v20;
          v22 = v15;
          v23 = a1;
          v24 = v14;
          v25 = v31[2];
          v28 = v20;
          v25(v31, CFSTR("non model opacity leaf opacity"));
          v26 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v21, "sb_animateWithSettings:mode:animations:completion:", v29, v30, v32, v26);

          v14 = v24;
          a1 = v23;
          v15 = v22;

        }
      }
      v13 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v34, v42, 16);
    }
    while (v13);
  }

}

- (void)_applyStyleToAppLayout:(id)a3 roleMask:(unint64_t)a4 completion:(id)a5
{
  id v8;
  void *v9;
  id v10;
  _QWORD v11[5];
  id v12;
  unint64_t v13;

  v8 = a3;
  v9 = (void *)MEMORY[0x1E0DA9D48];
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __76__SBFluidSwitcherViewController__applyStyleToAppLayout_roleMask_completion___block_invoke;
  v11[3] = &unk_1E8EA4B80;
  v11[4] = self;
  v12 = v8;
  v13 = a4;
  v10 = v8;
  objc_msgSend(v9, "perform:finalCompletion:options:delegate:", v11, a5, 0, self);

}

void __67__SBFluidSwitcherViewController__layoutVisibleItemsWithCompletion___block_invoke(uint64_t a1, void *a2)
{
  void (**v3)(id, const __CFString *);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id obj;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a2;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  obj = *(id *)(*(_QWORD *)(a1 + 32) + 1288);
  v4 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v4)
  {
    v5 = v4;
    v6 = *(_QWORD *)v14;
    do
    {
      v7 = 0;
      do
      {
        if (*(_QWORD *)v14 != v6)
          objc_enumerationMutation(obj);
        v8 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * v7);
        v9 = *(void **)(a1 + 32);
        v10 = SBLayoutRoleMaskAll();
        v3[2](v3, CFSTR("layout app layout"));
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "_layoutAppLayout:roleMask:completion:", v8, v10, v11);

        ++v7;
      }
      while (v5 != v7);
      v5 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v5);
  }

}

- (void)_layoutAppLayout:(id)a3 roleMask:(unint64_t)a4 completion:(id)a5
{
  id v8;
  void *v9;
  id v10;
  _QWORD v11[5];
  id v12;
  unint64_t v13;

  v8 = a3;
  v9 = (void *)MEMORY[0x1E0DA9D48];
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke;
  v11[3] = &unk_1E8EA4B80;
  v11[4] = self;
  v12 = v8;
  v13 = a4;
  v10 = v8;
  objc_msgSend(v9, "perform:finalCompletion:options:delegate:", v11, a5, 0, self);

}

void __73__SBFluidSwitcherViewController_animationControllerForTransitionRequest___block_invoke(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v7;
  id v8;
  id WeakRetained;
  void *v10;
  _QWORD v11[4];
  id v12;

  v7 = a3;
  v8 = a5;
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    objc_msgSend(v7, "applicationContext");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __73__SBFluidSwitcherViewController_animationControllerForTransitionRequest___block_invoke_2;
    v11[3] = &unk_1E8E9F1C0;
    v12 = v8;
    objc_msgSend(WeakRetained, "performTransitionWithContext:animated:completion:", v10, 1, v11);

  }
  else if (v8)
  {
    (*((void (**)(id, uint64_t))v8 + 2))(v8, 1);
  }

}

- (id)homeGrabberViewForAppLayout:(id)a3
{
  void *v3;
  void *v4;
  void *v5;

  -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "homeGrabberView");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "grabberView");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (BOOL)shouldAddAppLayoutToFront:(id)a3 forTransitionWithContext:(id)a4 transitionCompleted:(BOOL)a5
{
  uint64_t v5;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  void *v22;
  id v23;
  _QWORD v24[5];

  v5 = a5;
  v8 = a4;
  v9 = a3;
  -[SBFluidSwitcherViewController draggingAppLayoutsForWindowDrag](self, "draggingAppLayoutsForWindowDrag");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = MEMORY[0x1E0C809B0];
  v24[0] = MEMORY[0x1E0C809B0];
  v24[1] = 3221225472;
  v24[2] = __104__SBFluidSwitcherViewController_shouldAddAppLayoutToFront_forTransitionWithContext_transitionCompleted___block_invoke;
  v24[3] = &unk_1E8EA43E8;
  v24[4] = self;
  objc_msgSend(v10, "bs_compactMap:", v24);
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  +[SBMainSwitcherControllerCoordinator sharedInstance](SBMainSwitcherControllerCoordinator, "sharedInstance");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "recentAppLayouts");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v19 = v11;
  v20 = 3221225472;
  v21 = __104__SBFluidSwitcherViewController_shouldAddAppLayoutToFront_forTransitionWithContext_transitionCompleted___block_invoke_2;
  v22 = &unk_1E8E9DF78;
  v23 = v12;
  v15 = v12;
  objc_msgSend(v14, "bs_filter:", &v19);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext", v19, v20, v21, v22);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(v5) = objc_msgSend(v17, "shouldAddAppLayoutToFront:forTransitionWithContext:recentAppLayouts:transitionCompleted:", v9, v8, v16, v5);

  return v5;
}

- (id)draggingAppLayoutsForWindowDrag
{
  void *v3;
  void *v4;
  void *v5;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 3) & 2) != 0)
    objc_msgSend(v3, "draggingAppLayoutsForWindowDragForSwitcherContentController:", self);
  else
    objc_msgSend(MEMORY[0x1E0C99E60], "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (void)noteKeyboardFocusDidChangeToSceneID:(id)a3
{
  -[SBSwitcherLiveContentOverlayCoordinating noteKeyboardFocusDidChangeToSceneID:](self->_liveContentOverlayCoordinator, "noteKeyboardFocusDidChangeToSceneID:", a3);
}

- (void)_updateTitleItemsLabelColor
{
  _BOOL8 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _BYTE v13[128];
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v3 = -[SBFluidSwitcherViewController _shouldItemContainersUseDarkLabels](self, "_shouldItemContainersUseDarkLabels");
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v12 = 0u;
  -[NSMutableDictionary allValues](self->_appLayoutToTitleItemController, "allValues", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v10;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v10 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v9 + 1) + 8 * v8++), "setUseDarkLabels:", v3);
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v9, v13, 16);
    }
    while (v6);
  }

}

- (BOOL)_shouldItemContainersUseDarkLabels
{
  id WeakRetained;
  void *v4;
  BOOL v5;

  WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  v4 = WeakRetained;
  v5 = (*((_BYTE *)&self->_dataSourceRespondsTo + 1) & 4) != 0
    && objc_msgSend(WeakRetained, "backdropInterfaceStyleForContentController:", self) == 1;

  return v5;
}

uint64_t __66__SBFluidSwitcherViewController__updateVisibleHomeAffordanceViews__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;

  v3 = a2;
  if (objc_msgSend(v3, "switcherLayoutElementType"))
    v4 = 1;
  else
    v4 = objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "isHomeAffordanceSupportedForAppLayout:", v3);

  return v4;
}

- (SBFHomeGrabberSettings)homeGrabberSettings
{
  return self->_homeGrabberSettings;
}

- (void)_handleKeyboardFrameWillChange:(id)a3
{
  void *v4;
  double v5;
  CGFloat v6;
  double v7;
  CGFloat v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  void *v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  void *v22;
  id v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;

  objc_msgSend(a3, "userInfo");
  v23 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "objectForKeyedSubscript:", *MEMORY[0x1E0CEB890]);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "rectValue");
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  -[SBFluidSwitcherViewController _screen](self, "_screen");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "bounds");
  v26.origin.x = v14;
  v26.origin.y = v15;
  v26.size.width = v16;
  v26.size.height = v17;
  v24.origin.x = v6;
  v24.origin.y = v8;
  v24.size.width = v10;
  v24.size.height = v12;
  v25 = CGRectIntersection(v24, v26);
  x = v25.origin.x;
  y = v25.origin.y;
  width = v25.size.width;
  height = v25.size.height;
  if (!CGRectEqualToRect(self->_currentKeyboardFrame, v25))
  {
    self->_currentKeyboardFrame.origin.x = x;
    self->_currentKeyboardFrame.origin.y = y;
    self->_currentKeyboardFrame.size.width = width;
    self->_currentKeyboardFrame.size.height = height;
    -[SBFluidSwitcherViewController view](self, "view");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "setNeedsLayout");

  }
}

- (id)liveScenesIdentityTokens
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  -[NSMutableDictionary allValues](self->_liveContentOverlays, "allValues");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bs_mapNoNulls:", &__block_literal_global_416);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v3, "count"))
    v4 = v3;
  else
    v4 = 0;
  v5 = v4;

  return v5;
}

- (id)sceneHandleProviderForSnapshotView:(id)a3
{
  void *v3;
  void *v4;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sceneManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)displayIdentityForSnapshotView:(id)a3
{
  void *v3;
  void *v4;
  void *v5;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sceneManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "displayIdentity");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (id)homeScreenIconLocationForAppLayout:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBFluidSwitcherViewController _iconZoomContextProvider](self, "_iconZoomContextProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "iconLocationForAppLayout:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (void)viewWillLayoutSubviews
{
  _BOOL4 hasAnyUnadjustedAppLayoutsInDuality;
  uint64_t v4;
  SBInitialSetupSwitcherModifierEvent *v5;
  int64_t contentOrientation;
  objc_super v7;
  CGRect v8;

  v7.receiver = self;
  v7.super_class = (Class)SBFluidSwitcherViewController;
  -[SBFluidSwitcherViewController viewWillLayoutSubviews](&v7, sel_viewWillLayoutSubviews);
  hasAnyUnadjustedAppLayoutsInDuality = self->_hasAnyUnadjustedAppLayoutsInDuality;
  v4 = qword_1EFC55240;
  if (self->_hasAnyUnadjustedAppLayoutsInDuality)
    qword_1EFC55240 = (uint64_t)"note: performing implicit switcher layout with duality app layouts";
  if (!self->_hasDispatchedInitialSetupEvent)
  {
    -[SBFluidSwitcherViewController view](self, "view");
    v5 = (SBInitialSetupSwitcherModifierEvent *)objc_claimAutoreleasedReturnValue();
    -[SBInitialSetupSwitcherModifierEvent bounds](v5, "bounds");
    if (!CGRectIsEmpty(v8))
    {
      contentOrientation = self->_contentOrientation;

      if (!contentOrientation)
        goto LABEL_8;
      self->_hasDispatchedInitialSetupEvent = 1;
      v5 = objc_alloc_init(SBInitialSetupSwitcherModifierEvent);
      -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v5);
    }

  }
LABEL_8:
  -[SBFluidSwitcherViewController _updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:](self, "_updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:", 0);
  if (hasAnyUnadjustedAppLayoutsInDuality)
    qword_1EFC55240 = v4;
}

- (void)setContentOrientation:(int64_t)a3
{
  if (self->_contentOrientation != a3)
  {
    self->_contentOrientation = a3;
    -[SBFluidSwitcherViewController _updateLayoutFromInterfaceOrientation:toInterfaceOrientation:](self, "_updateLayoutFromInterfaceOrientation:toInterfaceOrientation:");
  }
}

- (void)_cancelInProcessAnimationsWithOptions:(unint64_t)a3
{
  char v3;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[128];
  _BYTE v45[128];
  _BYTE v46[128];
  _BYTE v47[128];
  uint64_t v48;

  v3 = a3;
  v48 = *MEMORY[0x1E0C80C00];
  if ((a3 & 2) != 0)
  {
    -[SBFluidSwitcherViewController _homeScreenAppearanceController](self, "_homeScreenAppearanceController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "cancelInProcessAnimations");

    +[SBWallpaperController sharedInstance](SBWallpaperController, "sharedInstance");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "cancelInProcessAnimations");

  }
  if ((v3 & 1) != 0)
  {
    v42 = 0u;
    v43 = 0u;
    v40 = 0u;
    v41 = 0u;
    -[NSMutableDictionary allValues](self->_visibleItemContainers, "allValues");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v40, v47, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v41;
      do
      {
        v11 = 0;
        do
        {
          if (*(_QWORD *)v41 != v10)
            objc_enumerationMutation(v7);
          objc_msgSend(*(id *)(*((_QWORD *)&v40 + 1) + 8 * v11++), "_removeAllRetargetableAnimations:", 1);
        }
        while (v9 != v11);
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v40, v47, 16);
      }
      while (v9);
    }

    v38 = 0u;
    v39 = 0u;
    v36 = 0u;
    v37 = 0u;
    -[NSMutableDictionary allValues](self->_visibleOverlayAccessoryViews, "allValues");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v36, v46, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v37;
      do
      {
        v16 = 0;
        do
        {
          if (*(_QWORD *)v37 != v15)
            objc_enumerationMutation(v12);
          objc_msgSend(*(id *)(*((_QWORD *)&v36 + 1) + 8 * v16++), "_removeAllRetargetableAnimations:", 1);
        }
        while (v14 != v16);
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v36, v46, 16);
      }
      while (v14);
    }

    v34 = 0u;
    v35 = 0u;
    v32 = 0u;
    v33 = 0u;
    -[NSMutableDictionary allValues](self->_visibleUnderlayAccessoryViews, "allValues");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v32, v45, 16);
    if (v18)
    {
      v19 = v18;
      v20 = *(_QWORD *)v33;
      do
      {
        v21 = 0;
        do
        {
          if (*(_QWORD *)v33 != v20)
            objc_enumerationMutation(v17);
          objc_msgSend(*(id *)(*((_QWORD *)&v32 + 1) + 8 * v21++), "_removeAllRetargetableAnimations:", 1);
        }
        while (v19 != v21);
        v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v32, v45, 16);
      }
      while (v19);
    }

    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    -[NSMutableDictionary allValues](self->_externalDropletZoomUpTokens, "allValues", 0);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v28, v44, 16);
    if (v23)
    {
      v24 = v23;
      v25 = *(_QWORD *)v29;
      do
      {
        v26 = 0;
        do
        {
          if (*(_QWORD *)v29 != v25)
            objc_enumerationMutation(v22);
          objc_msgSend(*(id *)(*((_QWORD *)&v28 + 1) + 8 * v26), "animatingDroplet");
          v27 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v27, "_removeAllRetargetableAnimations:", 1);

          ++v26;
        }
        while (v24 != v26);
        v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v28, v44, 16);
      }
      while (v24);
    }

  }
}

- (void)_medusaHostedKeyboardWillHideNotification:(id)a3
{
  id v4;

  if (self->_isMedusaHostedKeyboardVisible)
  {
    self->_isMedusaHostedKeyboardVisible = 0;
    -[SBFluidSwitcherViewController _configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:](self, "_configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:", 0);
    -[SBFluidSwitcherViewController view](self, "view");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setNeedsLayout");

  }
}

void __74__SBFluidSwitcherViewController__updateTitlePresenceForAdjustedAppLayout___block_invoke_2(uint64_t a1, uint64_t a2, void *a3)
{
  id *WeakRetained;
  id *v5;
  void *v6;
  void *v7;
  unsigned int v8;
  uint64_t v9;
  id v10;

  v10 = a3;
  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  v5 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained[230], "objectForKey:", *(_QWORD *)(a1 + 32));
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5[229], "objectForKey:", *(_QWORD *)(a1 + 32));
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v5[161], "containsObject:", *(_QWORD *)(a1 + 32));
    if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 24))
      v9 = 0;
    else
      v9 = v8;
    if (v6)
      objc_msgSend(v6, "setTitleItems:animated:", v10, v9);
    if (v7)
      objc_msgSend(v7, "setTitleItems:animated:", v10, v9);

  }
}

- (void)layoutStateTransitionCoordinator:(id)a3 transitionWillEndWithTransitionContext:(id)a4
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[128];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  if ((objc_opt_respondsToSelector() & 1) != 0)
    -[SBSwitcherLiveContentOverlayCoordinating layoutStateTransitionCoordinator:transitionWillEndWithTransitionContext:](self->_liveContentOverlayCoordinator, "layoutStateTransitionCoordinator:transitionWillEndWithTransitionContext:", v6, v7);
  v15 = 0u;
  v16 = 0u;
  v13 = 0u;
  v14 = 0u;
  -[NSMutableDictionary allValues](self->_visibleShelves, "allValues", 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
  if (v9)
  {
    v10 = v9;
    v11 = *(_QWORD *)v14;
    do
    {
      v12 = 0;
      do
      {
        if (*(_QWORD *)v14 != v11)
          objc_enumerationMutation(v8);
        objc_msgSend(*(id *)(*((_QWORD *)&v13 + 1) + 8 * v12++), "layoutStateTransitionCoordinator:transitionWillEndWithTransitionContext:", v6, v7);
      }
      while (v10 != v12);
      v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v13, v17, 16);
    }
    while (v10);
  }

}

void __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_2(uint64_t a1, void *a2)
{
  char v3;
  void *v4;
  void *v5;
  uint64_t v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  int v11;
  id v12;
  _QWORD v13[4];
  id v14;
  _QWORD v15[4];
  id v16;

  v12 = a2;
  v3 = objc_msgSend(*(id *)(a1 + 32), "containsObject:", v12);
  v4 = v12;
  if ((v3 & 1) == 0)
  {
    v5 = *(void **)(a1 + 32);
    v6 = MEMORY[0x1E0C809B0];
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 3221225472;
    v15[2] = __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_3;
    v15[3] = &unk_1E8E9DF78;
    v7 = v12;
    v16 = v7;
    objc_msgSend(v5, "bs_firstObjectPassingTest:", v15);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = *(void **)(*(_QWORD *)(a1 + 40) + 1272);
    v13[0] = v6;
    v13[1] = 3221225472;
    v13[2] = __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_4;
    v13[3] = &unk_1E8E9DF78;
    v10 = v7;
    v14 = v10;
    v11 = objc_msgSend(v9, "bs_containsObjectPassingTest:", v13);
    if (!*(_BYTE *)(a1 + 56) || v8 || v11)
      objc_msgSend(*(id *)(a1 + 48), "addObject:", v10);

    v4 = v12;
  }

}

- (double)homeScreenIconCornerRadiusForAppLayout:(id)a3
{
  id v4;
  void *v5;
  double v6;
  double v7;

  v4 = a3;
  -[SBFluidSwitcherViewController _iconZoomContextProvider](self, "_iconZoomContextProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "iconCornerRadiusForAppLayout:", v4);
  v7 = v6;

  return v7;
}

- (void)layoutStateTransitionCoordinator:(id)a3 transitionDidEndWithTransitionContext:(id)a4
{
  id v6;
  id v7;
  SBWorkspaceApplicationSceneTransitionContext *pendingTransitionContext;
  char v9;
  void *v10;
  void *v11;
  id WeakRetained;
  void *v13;
  void *v14;
  UIApplicationSceneDeactivationAssertion *transitionBeginResignActiveAssertion;
  UIApplicationSceneDeactivationAssertion *v16;
  __int128 v17;
  unint64_t v18;
  void *v19;
  NSObject *v20;
  NSString *debugName;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint8_t v34[128];
  uint8_t buf[4];
  NSString *v36;
  __int16 v37;
  void *v38;
  uint64_t v39;

  v39 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  pendingTransitionContext = self->_pendingTransitionContext;
  self->_pendingTransitionContext = 0;

  v9 = objc_msgSend(v7, "isInterrupted");
  objc_msgSend(v7, "applicationTransitionContext");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if ((v9 & 1) == 0)
  {
    -[SBFluidSwitcherLayoutContext activeGesture](self->_layoutContext, "activeGesture");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v11)
    {
      WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
      v13 = WeakRetained;
      if ((*((_BYTE *)&self->_delegateRespondsTo + 3) & 2) == 0
        || (objc_msgSend(WeakRetained, "switcherContentController:shouldSkipNonAnimatedLayoutPassAfterTransition:", self, v10) & 1) == 0)
      {
        -[SBFluidSwitcherViewController performTransitionWithContext:animated:completion:](self, "performTransitionWithContext:animated:completion:", v10, 0, 0);
      }

    }
    if (!self->_activeTransitionSubcompletionGenerator)
    {
      -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "didEndTransitioningToLayoutStateWithContext:", v10);

    }
    -[SBFluidSwitcherViewController _configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:](self, "_configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:", v10);
    transitionBeginResignActiveAssertion = self->_transitionBeginResignActiveAssertion;
    if (transitionBeginResignActiveAssertion)
    {
      -[UIApplicationSceneDeactivationAssertion relinquish](transitionBeginResignActiveAssertion, "relinquish");
      v16 = self->_transitionBeginResignActiveAssertion;
      self->_transitionBeginResignActiveAssertion = 0;

    }
    if (-[NSPointerArray count](self->_outstandingAnimations, "count"))
    {
      v18 = 0;
      *(_QWORD *)&v17 = 138412546;
      v29 = v17;
      do
      {
        -[NSPointerArray pointerAtIndex:](self->_outstandingAnimations, "pointerAtIndex:", v18, v29);
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        SBLogAppSwitcher();
        v20 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v20, OS_LOG_TYPE_ERROR))
        {
          debugName = self->_debugName;
          *(_DWORD *)buf = v29;
          v36 = debugName;
          v37 = 2112;
          v38 = v19;
          _os_log_error_impl(&dword_1D0540000, v20, OS_LOG_TYPE_ERROR, "[Fluid Switcher - %@] Layout state transition settled with outstanding animation: %@", buf, 0x16u);
        }

        -[NSPointerArray removePointerAtIndex:](self->_outstandingAnimations, "removePointerAtIndex:", v18);
        ++v18;
      }
      while (v18 < -[NSPointerArray count](self->_outstandingAnimations, "count"));
    }
  }
  -[SBSwitcherLiveContentOverlayCoordinating layoutStateTransitionCoordinator:transitionDidEndWithTransitionContext:](self->_liveContentOverlayCoordinator, "layoutStateTransitionCoordinator:transitionDidEndWithTransitionContext:", v6, v7);
  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  -[NSMutableDictionary allValues](self->_visibleShelves, "allValues");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  v23 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
  if (v23)
  {
    v24 = v23;
    v25 = *(_QWORD *)v31;
    do
    {
      v26 = 0;
      do
      {
        if (*(_QWORD *)v31 != v25)
          objc_enumerationMutation(v22);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * v26++), "layoutStateTransitionCoordinator:transitionDidEndWithTransitionContext:", v6, v7);
      }
      while (v24 != v26);
      v24 = objc_msgSend(v22, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    }
    while (v24);
  }

  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v27 = (void *)objc_claimAutoreleasedReturnValue();
  v28 = v27;
  if ((*((_BYTE *)&self->_delegateRespondsTo + 2) & 0x80) != 0)
    objc_msgSend(v27, "switcherContentController:layoutStateTransitionDidEndWithTransitionContext:", self, v7);

}

- (void)_addVisibleItemContainerForAppLayout:(id)a3 reusingItemContainerIfExists:(id)a4
{
  id v6;
  id v7;
  void *v8;
  id v9;
  SBSwitcherLiveContentOverlayCoordinating *liveContentOverlayCoordinator;
  void *v11;
  NSMutableDictionary *visibleItemContainers;
  void *v13;
  id v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t i;
  void *v42;
  void *v43;
  id v44;
  void *v45;
  void *v46;
  _QWORD v47[4];
  id v48;
  id v49;
  SBFluidSwitcherViewController *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[128];
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  -[SBSwitcherLiveContentOverlayCoordinating appLayoutWillBecomeVisible:](self->_liveContentOverlayCoordinator, "appLayoutWillBecomeVisible:", v6);
  -[NSMutableArray _sb_peek](self->_hiddenRecycledItemContainers, "_sb_peek");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (v8
    && -[SBFluidSwitcherPageContentViewProvider isSuitableForRecycledItemContainer:](self->_pageContentViewProvider, "isSuitableForRecycledItemContainer:", v6))
  {

    if (!v7)
    {
      -[NSMutableArray _sb_dequeue](self->_hiddenRecycledItemContainers, "_sb_dequeue");
      v9 = (id)objc_claimAutoreleasedReturnValue();
LABEL_9:
      objc_msgSend(v9, "setActive:", 1);
      objc_msgSend(v9, "setAppLayout:", v6);
      objc_msgSend(v9, "setHidden:", 0);
      goto LABEL_11;
    }
LABEL_6:
    liveContentOverlayCoordinator = self->_liveContentOverlayCoordinator;
    objc_msgSend(v7, "appLayout");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBSwitcherLiveContentOverlayCoordinating itemContainerForAppLayout:willBeReusedForAppLayout:](liveContentOverlayCoordinator, "itemContainerForAppLayout:willBeReusedForAppLayout:", v11, v6);

    if (-[NSMutableArray containsObject:](self->_hiddenRecycledItemContainers, "containsObject:", v7))
      -[NSMutableArray removeObject:](self->_hiddenRecycledItemContainers, "removeObject:", v7);
    v9 = v7;
    visibleItemContainers = self->_visibleItemContainers;
    -[NSMutableDictionary allKeysForObject:](visibleItemContainers, "allKeysForObject:", v9);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary removeObjectsForKeys:](visibleItemContainers, "removeObjectsForKeys:", v13);

    goto LABEL_9;
  }

  if (v7)
    goto LABEL_6;
  -[SBFluidSwitcherPageContentViewProvider isSuitableForRecycledItemContainer:](self->_pageContentViewProvider, "isSuitableForRecycledItemContainer:", v6);
  v14 = objc_alloc((Class)objc_opt_class());
  -[SBFluidSwitcherContentView bounds](self->_contentView, "bounds");
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = (id)objc_msgSend(v14, "initWithFrame:appLayout:delegate:active:windowScene:", v6, self, 1, v23, v16, v18, v20, v22);

  -[SBFluidSwitcherPageContentViewProvider pageContentViewForAppLayout:setActive:](self->_pageContentViewProvider, "pageContentViewForAppLayout:setActive:", v6, 1);
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "setContentView:", v24);

  -[SBFluidSwitcherContentView addSubview:](self->_contentView, "addSubview:", v9);
LABEL_11:
  v46 = v7;
  -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v6);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  v26 = v25;
  if (v25)
  {
    objc_msgSend(v25, "contentOverlayView");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setContentOverlay:animated:", v27, 0);

    objc_msgSend(v6, "itemForLayoutRole:", 1);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "uniqueIdentifier");
    v29 = (void *)objc_claimAutoreleasedReturnValue();

    if (v29)
    {
      -[SBFluidSwitcherViewController _centerWindowActivationAnimationContextForKey:](self, "_centerWindowActivationAnimationContextForKey:", v29);
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v31 = v30;
      if (v30)
      {
        objc_msgSend(v30, "contentPortalContainer");
        v32 = (void *)objc_claimAutoreleasedReturnValue();
        v33 = objc_alloc(MEMORY[0x1E0CEAE58]);
        objc_msgSend(v32, "bounds");
        v34 = (void *)objc_msgSend(v33, "initWithFrame:");
        objc_msgSend(v26, "contentOverlayView");
        v35 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v34, "setSourceView:", v35);

        objc_msgSend(v34, "setHidesSourceView:", 1);
        objc_msgSend(v34, "setAllowsHitTesting:", 1);
        objc_msgSend(v34, "setName:", CFSTR("com.apple.SpringBoard.centerWindowContentPortal"));
        objc_msgSend(v32, "addSubview:", v34);

      }
    }
    if (objc_msgSend(v26, "isAsyncRenderingEnabled"))
      objc_msgSend(v26, "disableAsynchronousRenderingForNextCommit");
    -[SBFluidSwitcherViewController _setupLiveContentOverlayForAppLayout:itemContainer:overlay:](self, "_setupLiveContentOverlayForAppLayout:itemContainer:overlay:", v6, v9, v26);

  }
  v45 = v26;
  -[NSMutableDictionary setObject:forKey:](self->_visibleItemContainers, "setObject:forKey:", v9, v6);
  -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v6);
  v36 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v36, "leafAppLayouts");
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v37 = (id)objc_claimAutoreleasedReturnValue();
  v38 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v51, v55, 16);
  if (v38)
  {
    v39 = v38;
    v40 = *(_QWORD *)v52;
    while (2)
    {
      for (i = 0; i != v39; ++i)
      {
        if (*(_QWORD *)v52 != v40)
          objc_enumerationMutation(v37);
        -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v51 + 1) + 8 * i));
        v42 = (void *)objc_claimAutoreleasedReturnValue();

        if (!v42)
        {

          goto LABEL_29;
        }
      }
      v39 = objc_msgSend(v37, "countByEnumeratingWithState:objects:count:", &v51, v55, 16);
      if (v39)
        continue;
      break;
    }
  }

  -[SBFluidSwitcherViewController _ensureSubviewOrderingInsideSpace:](self, "_ensureSubviewOrderingInsideSpace:", v36);
LABEL_29:
  if (!v46)
  {
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v6);
    v43 = (void *)objc_claimAutoreleasedReturnValue();
    v47[0] = MEMORY[0x1E0C809B0];
    v47[1] = 3221225472;
    v47[2] = __99__SBFluidSwitcherViewController__addVisibleItemContainerForAppLayout_reusingItemContainerIfExists___block_invoke;
    v47[3] = &unk_1E8E9E270;
    v48 = v43;
    v49 = v6;
    v50 = self;
    v44 = v43;
    -[SBFluidSwitcherViewController _performWithFixedUpdateMode:usingBlock:](self, "_performWithFixedUpdateMode:usingBlock:", 1, v47);
    objc_msgSend(v9, "layoutIfNeeded");

  }
}

void __95__SBFluidSwitcherViewController__updateStatusBarAndHomeGrabberVisibilityForAppLayout_animated___block_invoke(uint64_t a1, void *a2, void *a3)
{
  void (**v5)(id, uint64_t, _QWORD);
  void (**v6)(_QWORD);

  v6 = a2;
  v5 = a3;
  if (*(_BYTE *)(a1 + 40))
  {
    objc_msgSend(MEMORY[0x1E0CEABB0], "sb_animateWithSettings:mode:animations:completion:", *(_QWORD *)(a1 + 32), 3, v6, v5);
  }
  else
  {
    if (v6)
      v6[2](v6);
    if (v5)
      v5[2](v5, 1, 0);
  }

}

- (void)addLiveContentOverlay:(id)a3 forAppLayout:(id)a4 animated:(BOOL)a5
{
  _BOOL4 v5;
  id v9;
  id v10;
  int v11;
  void *v12;
  int v13;
  void *v14;
  int v15;
  void *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  objc_class *v21;
  void *v22;
  void *v23;
  objc_class *v24;
  void *v25;
  id v26;

  v5 = a5;
  v26 = a3;
  v9 = a4;
  -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v9);
  v10 = (id)objc_claimAutoreleasedReturnValue();

  if (v10 != v26)
  {
    v11 = -[SBAppSwitcherSettings shouldRedactWindowContents](self->_settings, "shouldRedactWindowContents");
    -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v9);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    if (v12)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = (objc_class *)objc_opt_class();
      NSStringFromClass(v21);
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v20, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 2668, CFSTR("The appLayout %@ already has an overlay <%@:%p>"), v9, v22, v12);

    }
    v13 = v5 & ~v11;
    -[NSMutableDictionary allValues](self->_liveContentOverlays, "allValues");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(v14, "containsObject:", v26);

    if (v15)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v24 = (objc_class *)objc_opt_class();
      NSStringFromClass(v24);
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 2669, CFSTR("The overlay <%@:%p> for %@ is already active for another app layout"), v25, v26, v9);

    }
    -[SBFluidSwitcherViewController visibleItemContainers](self, "visibleItemContainers");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "objectForKey:", v9);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

    v18 = v13 & ~objc_msgSend(v17, "contentViewHasSceneOverlay");
    objc_msgSend(v26, "contentOverlayView");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setContentOverlay:animated:", v19, v18);

    -[NSMutableDictionary setObject:forKey:](self->_liveContentOverlays, "setObject:forKey:", v26, v9);
    -[SBFluidSwitcherViewController _setupLiveContentOverlayForAppLayout:itemContainer:overlay:](self, "_setupLiveContentOverlayForAppLayout:itemContainer:overlay:", v9, v17, v26);

  }
}

- (NSMutableDictionary)visibleItemContainers
{
  return self->_visibleItemContainers;
}

- (void)_ensureSubviewOrderingInsideSpace:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t i;
  void *v14;
  unint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t j;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "leafAppLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherContentView subviews](self->_contentView, "subviews");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v7 = v5;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
  v9 = v7;
  if (!v8)
  {
LABEL_19:

    goto LABEL_20;
  }
  v10 = v8;
  v11 = *(_QWORD *)v26;
  v12 = 0x7FFFFFFFFFFFFFFFLL;
  do
  {
    for (i = 0; i != v10; ++i)
    {
      if (*(_QWORD *)v26 != v11)
        objc_enumerationMutation(v7);
      -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * i));
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      if (v14)
      {
        v15 = objc_msgSend(v6, "indexOfObject:", v14);
        if (v15 < v12)
          v12 = v15;
      }

    }
    v10 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
  }
  while (v10);

  if (v12 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    -[SBFluidSwitcherViewController _orderedViewsForLayoutElement:excludeSwitcherHostedShelves:](self, "_orderedViewsForLayoutElement:excludeSwitcherHostedShelves:", v4, 1);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "reverseObjectEnumerator");
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    if (v17)
    {
      v18 = v17;
      v19 = *(_QWORD *)v22;
      do
      {
        for (j = 0; j != v18; ++j)
        {
          if (*(_QWORD *)v22 != v19)
            objc_enumerationMutation(v9);
          -[SBFluidSwitcherContentView insertSubview:atIndex:](self->_contentView, "insertSubview:atIndex:", *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * j), v12 + j);
        }
        v18 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
        v12 += j;
      }
      while (v18);
    }
    goto LABEL_19;
  }
LABEL_20:

}

- (id)_centerWindowActivationAnimationContextForKey:(id)a3
{
  return (id)-[NSMutableDictionary objectForKey:](self->_centerWindowActivationAnimationContexts, "objectForKey:", a3);
}

void __93__SBFluidSwitcherViewController__unblurItemContainer_blurParameters_withAnimationUpdateMode___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;

  objc_msgSend(*(id *)(a1 + 32), "layer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setFilters:", 0);

  objc_msgSend(*(id *)(a1 + 32), "layer");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 40), "traitCollection");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "displayScale");
  objc_msgSend(v3, "setRasterizationScale:");

  objc_msgSend(*(id *)(a1 + 32), "layer");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setShouldRasterize:", 0);

}

void __54__SBFluidSwitcherViewController__handleEventResponse___block_invoke(uint64_t a1)
{
  NSObject *v2;
  uint64_t v3;
  void *v4;
  int v5;
  uint64_t v6;
  __int16 v7;
  void *v8;
  uint64_t v9;

  v9 = *MEMORY[0x1E0C80C00];
  if (objc_msgSend(*(id *)(a1 + 32), "isValid"))
  {
    objc_msgSend(*(id *)(a1 + 40), "_performEventResponse:", *(_QWORD *)(a1 + 32));
  }
  else
  {
    SBLogAppSwitcher();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
    {
      v3 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 1320);
      objc_msgSend(*(id *)(a1 + 32), "description");
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      v5 = 138412546;
      v6 = v3;
      v7 = 2112;
      v8 = v4;
      _os_log_impl(&dword_1D0540000, v2, OS_LOG_TYPE_INFO, "[Fluid Switcher - %@] Skipping the following action because it's no longer valid: %@", (uint8_t *)&v5, 0x16u);

    }
  }
}

uint64_t __82__SBFluidSwitcherViewController__performModifierIconViewVisibilityUpdateResponse___block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAllIconElementsButLabelHidden:", 0);
  objc_msgSend(*(id *)(a1 + 32), "removeObserver:", *(_QWORD *)(a1 + 40));
  return objc_msgSend(*(id *)(a1 + 48), "removeObserver:", *(_QWORD *)(a1 + 40));
}

uint64_t __82__SBFluidSwitcherViewController__performModifierIconViewVisibilityUpdateResponse___block_invoke_2(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "setAllIconElementsButLabelHidden:", 1);
  v2 = *(void **)(a1 + 40);
  if (!v2)
    v2 = *(void **)(a1 + 32);
  return objc_msgSend(v2, "addObserver:", *(_QWORD *)(a1 + 48));
}

- (void)zStackActivationStateUpdated
{
  id v2;

  -[SBFluidSwitcherViewController view](self, "view");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setNeedsLayout");

}

- (void)_performModifierTimerEventResponse:(id)a3
{
  id v4;
  SBTimerSwitcherModifierEvent *v5;
  void *v6;
  SBTimerSwitcherModifierEvent *v7;

  v4 = a3;
  v5 = [SBTimerSwitcherModifierEvent alloc];
  objc_msgSend(v4, "reason");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = -[SBTimerSwitcherModifierEvent initWithReason:](v5, "initWithReason:", v6);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v7);

}

- (void)_performModifierUpdateLayoutResponse:(id)a3
{
  id activeTransitionSubcompletionGenerator;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void (**v11)(_QWORD);
  void *v12;
  _QWORD v13[4];
  void (**v14)(_QWORD);
  _QWORD v15[5];
  id v16;
  uint64_t v17;

  activeTransitionSubcompletionGenerator = self->_activeTransitionSubcompletionGenerator;
  v5 = a3;
  v6 = (void *)MEMORY[0x1D17E5550](activeTransitionSubcompletionGenerator);
  v7 = objc_msgSend(v5, "options");
  v8 = objc_msgSend(v5, "updateMode");

  v9 = MEMORY[0x1E0C809B0];
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __70__SBFluidSwitcherViewController__performModifierUpdateLayoutResponse___block_invoke;
  v15[3] = &unk_1E8EA1310;
  v17 = v7;
  v15[4] = self;
  v10 = v6;
  v16 = v10;
  v11 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v15);
  v12 = v11;
  if (v8)
  {
    v13[0] = v9;
    v13[1] = 3221225472;
    v13[2] = __70__SBFluidSwitcherViewController__performModifierUpdateLayoutResponse___block_invoke_2;
    v13[3] = &unk_1E8E9E8D0;
    v14 = v11;
    -[SBFluidSwitcherViewController _performWithFixedUpdateMode:usingBlock:](self, "_performWithFixedUpdateMode:usingBlock:", v8, v13);

  }
  else
  {
    v11[2](v11);
  }

}

void __77__SBFluidSwitcherViewController__performModifierMatchMoveToIconViewResponse___block_invoke_3(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "view");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setAlpha:", 1.0);

}

- (void)_keyboardWillHide:(id)a3
{
  id v4;
  _BOOL8 isKeyboardShowing;
  id v6;

  v4 = a3;
  if (!self->_keyboardUIPosition)
  {
    v6 = v4;
    if (self->_isKeyboardShowing)
    {
      self->_isKeyboardShowing = 0;
      -[SBFluidSwitcherViewController _updateSuppressingHomeAffordanceBounce](self, "_updateSuppressingHomeAffordanceBounce");
      isKeyboardShowing = self->_isKeyboardShowing;
    }
    else
    {
      isKeyboardShowing = 0;
    }
    -[SBFluidSwitcherViewController _updateSoftwareKeyboardVisibleWithKeyboardShowing:](self, "_updateSoftwareKeyboardVisibleWithKeyboardShowing:", isKeyboardShowing);
    v4 = v6;
  }

}

- (void)_keyboardWillShow:(id)a3
{
  id v4;
  _BOOL8 isKeyboardShowing;
  id v6;

  v4 = a3;
  if (!self->_keyboardUIPosition)
  {
    v6 = v4;
    isKeyboardShowing = 1;
    if (!self->_isKeyboardShowing)
    {
      self->_isKeyboardShowing = 1;
      -[SBFluidSwitcherViewController _updateSuppressingHomeAffordanceBounce](self, "_updateSuppressingHomeAffordanceBounce");
      isKeyboardShowing = self->_isKeyboardShowing;
    }
    -[SBFluidSwitcherViewController _updateSoftwareKeyboardVisibleWithKeyboardShowing:](self, "_updateSoftwareKeyboardVisibleWithKeyboardShowing:", isKeyboardShowing);
    v4 = v6;
  }

}

- (void)_updateSoftwareKeyboardVisibleWithKeyboardShowing:(BOOL)a3
{
  _BOOL4 v3;
  int isSoftwareKeyboardVisible;
  void *v6;
  char v7;
  int v8;
  unint64_t keyboardUIPosition;
  BOOL v10;
  id v12;

  v3 = a3;
  isSoftwareKeyboardVisible = self->_isSoftwareKeyboardVisible;
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "isExternalDisplayWindowScene");

  if ((v7 & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    keyboardUIPosition = self->_keyboardUIPosition;
    v10 = keyboardUIPosition == 0;
    if (keyboardUIPosition)
      v8 = v3;
    else
      v8 = 0;
    if (v10 && v3)
      v8 = objc_msgSend(MEMORY[0x1E0CEA6C8], "isInHardwareKeyboardMode") ^ 1;
  }
  self->_isSoftwareKeyboardVisible = v8;
  if (isSoftwareKeyboardVisible != v8)
  {
    -[SBFluidSwitcherViewController _configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:](self, "_configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:", 0);
    -[SBFluidSwitcherViewController view](self, "view");
    v12 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "setNeedsLayout");

  }
}

void __91__SBFluidSwitcherViewController__blurItemContainer_blurParameters_withAnimationUpdateMode___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "layer");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  v2 = (void *)MEMORY[0x1E0CB37E8];
  objc_msgSend(*(id *)(a1 + 40), "blurRadius");
  objc_msgSend(v2, "numberWithDouble:");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setValue:forKeyPath:", v3, CFSTR("filters.gaussianBlur.inputRadius"));

}

void __93__SBFluidSwitcherViewController__unblurItemContainer_blurParameters_withAnimationUpdateMode___block_invoke(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "layer");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setValue:forKeyPath:", &unk_1E91CF668, CFSTR("filters.gaussianBlur.inputRadius"));

}

- (void)_performModifierMatchMoveToIconViewResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  void *v31;
  void *v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  double v43;
  double v44;
  __int128 v45;
  uint64_t v46;
  void *v47;
  void *v48;
  void *v49;
  double v50;
  double v51;
  double v52;
  double v53;
  void *v54;
  void *v55;
  id v56;
  void *v57;
  void *v58;
  void *v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  void *v66;
  _QWORD *v67;
  void *v68;
  void *v69;
  void *v70;
  void *v71;
  void *v72;
  void *v73;
  void *v74;
  _QWORD v75[5];
  _QWORD v76[5];
  _QWORD v77[5];
  CGAffineTransform v78;
  CGAffineTransform v79;
  CGAffineTransform v80;
  void *v81;
  _QWORD v82[4];
  _QWORD v83[4];
  _QWORD v84[4];
  _QWORD v85[7];
  CGRect v86;
  CGRect v87;

  v85[4] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "appLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "isActive"))
  {
    -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "floatingDockWindow");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _homeScreenAppearanceController](self, "_homeScreenAppearanceController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "window");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController iconViewForAppLayout:](self, "iconViewForAppLayout:", v5);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "window");
    v12 = objc_claimAutoreleasedReturnValue();
    v13 = (void *)v12;
    if ((void *)v12 == v9 || (void *)v12 == v7)
    {
      v74 = v10;
      objc_msgSend(v4, "iconFrame");
      x = v86.origin.x;
      y = v86.origin.y;
      width = v86.size.width;
      height = v86.size.height;
      if (CGRectEqualToRect(v86, *MEMORY[0x1E0C9D648])
        || (v87.origin.x = x, v87.origin.y = y, v87.size.width = width, v87.size.height = height, CGRectIsNull(v87)))
      {
        -[SBFluidSwitcherViewController iconImageFrameForAppLayout:](self, "iconImageFrameForAppLayout:", v5);
      }
      UIRectGetCenter();
      v19 = v18;
      v21 = v20;
      -[SBFluidSwitcherViewController view](self, "view");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "convertPoint:toView:", v13, v19, v21);
      v24 = v23;
      v26 = v25;

      if (objc_msgSend(v11, "iconImageSizeMatchesBoundsSize"))
      {
        objc_msgSend(v11, "bounds");
        v28 = v27;
        v30 = v29;
      }
      else
      {
        objc_msgSend(v11, "iconImageSize");
        v28 = v33;
        v30 = v34;
      }
      objc_msgSend(v13, "bounds");
      v36 = v28 * 0.5 + v35 * 0.5 - v24;
      v38 = v30 * 0.5 + v37 * 0.5 - v26;
      v72 = v8;
      v73 = v9;
      if (v13 == v9 && objc_msgSend(v74, "hasOpenFolder"))
      {
        v71 = v6;
        objc_msgSend(v8, "homeScreenScalingView");
        v39 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v39, "layer");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "presentationLayer");
        v41 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v41, "valueForKeyPath:", CFSTR("transform.scale.x"));
        v42 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v42, "doubleValue");
        v44 = v43;

        memset(&v80, 0, sizeof(v80));
        v45 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        *(_OWORD *)&v79.a = *MEMORY[0x1E0C9BAA8];
        *(_OWORD *)&v79.c = v45;
        *(_OWORD *)&v79.tx = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        CGAffineTransformScale(&v80, &v79, 1.0 / v44, 1.0 / v44);
        v46 = MEMORY[0x1E0C809B0];
        v77[0] = MEMORY[0x1E0C809B0];
        v77[1] = 3221225472;
        v77[2] = __77__SBFluidSwitcherViewController__performModifierMatchMoveToIconViewResponse___block_invoke;
        v77[3] = &unk_1E8EA5150;
        v77[4] = self;
        v78 = v80;
        objc_msgSend(MEMORY[0x1E0CEABB0], "_performWithoutRetargetingAnimations:", v77);
        v47 = (void *)MEMORY[0x1E0CEABB0];
        -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
        v48 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v48, "homeScreenScaleSettings");
        v49 = (void *)objc_claimAutoreleasedReturnValue();
        v76[0] = v46;
        v76[1] = 3221225472;
        v76[2] = __77__SBFluidSwitcherViewController__performModifierMatchMoveToIconViewResponse___block_invoke_2;
        v76[3] = &unk_1E8E9DED8;
        v76[4] = self;
        objc_msgSend(v47, "sb_animateWithSettings:mode:animations:completion:", v49, 3, v76, 0);

        objc_msgSend(v73, "bounds");
        v51 = v50;
        v53 = v52;
        if (-[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation") != 1
          && -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation") != 4
          && -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation") != 3)
        {
          -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation");
        }
        v60 = v51 * 0.5;
        v61 = v53 * 0.5;
        v6 = v71;
        if (-[SBFluidSwitcherViewController homeScreenInterfaceOrientation](self, "homeScreenInterfaceOrientation") != 1
          && -[SBFluidSwitcherViewController homeScreenInterfaceOrientation](self, "homeScreenInterfaceOrientation") != 4
          && -[SBFluidSwitcherViewController homeScreenInterfaceOrientation](self, "homeScreenInterfaceOrientation") != 3)
        {
          -[SBFluidSwitcherViewController homeScreenInterfaceOrientation](self, "homeScreenInterfaceOrientation");
        }
        v62 = v36 - v60;
        v63 = v38 + v61;
        v64 = v36 + v60;
        v65 = v38 - v61;
        if (BSFloatEqualToFloat())
        {
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v64, v65);
          v70 = (void *)objc_claimAutoreleasedReturnValue();
          v85[0] = v70;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v64, v63);
          v69 = (void *)objc_claimAutoreleasedReturnValue();
          v85[1] = v69;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v62, v63);
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          v85[2] = v68;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v62, v65);
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          v85[3] = v66;
          v67 = v85;
        }
        else if (BSFloatEqualToFloat())
        {
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v64, v63);
          v70 = (void *)objc_claimAutoreleasedReturnValue();
          v84[0] = v70;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v62, v63);
          v69 = (void *)objc_claimAutoreleasedReturnValue();
          v84[1] = v69;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v62, v65);
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          v84[2] = v68;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v64, v65);
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          v84[3] = v66;
          v67 = v84;
        }
        else if (BSFloatEqualToFloat())
        {
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v62, v63);
          v70 = (void *)objc_claimAutoreleasedReturnValue();
          v83[0] = v70;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v62, v65);
          v69 = (void *)objc_claimAutoreleasedReturnValue();
          v83[1] = v69;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v64, v65);
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          v83[2] = v68;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v64, v63);
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          v83[3] = v66;
          v67 = v83;
        }
        else
        {
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v62, v65);
          v70 = (void *)objc_claimAutoreleasedReturnValue();
          v82[0] = v70;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v64, v65);
          v69 = (void *)objc_claimAutoreleasedReturnValue();
          v82[1] = v69;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v64, v63);
          v68 = (void *)objc_claimAutoreleasedReturnValue();
          v82[2] = v68;
          objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v62, v63);
          v66 = (void *)objc_claimAutoreleasedReturnValue();
          v82[3] = v66;
          v67 = v82;
        }
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v67, 4);
        v55 = (void *)objc_claimAutoreleasedReturnValue();

      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", v36, v38);
        v54 = (void *)objc_claimAutoreleasedReturnValue();
        v81 = v54;
        objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", &v81, 1);
        v55 = (void *)objc_claimAutoreleasedReturnValue();

      }
      v56 = objc_alloc_init(MEMORY[0x1E0CD27C0]);
      objc_msgSend(v11, "layer");
      v57 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v56, "setSourceLayer:", v57);

      objc_msgSend(v56, "setSourcePoints:", v55);
      objc_msgSend(v56, "setDuration:", INFINITY);
      objc_msgSend(v56, "setFillMode:", *MEMORY[0x1E0CD2B58]);
      objc_msgSend(v56, "setRemovedOnCompletion:", 0);
      -[SBFluidSwitcherViewController view](self, "view");
      v58 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v58, "layer");
      v59 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v59, "addAnimation:forKey:", v56, CFSTR("MatchMoveToIconViewAnimation"));

      v8 = v72;
      v9 = v73;
      v10 = v74;
    }

  }
  else
  {
    v75[0] = MEMORY[0x1E0C809B0];
    v75[1] = 3221225472;
    v75[2] = __77__SBFluidSwitcherViewController__performModifierMatchMoveToIconViewResponse___block_invoke_3;
    v75[3] = &unk_1E8E9DED8;
    v75[4] = self;
    objc_msgSend(MEMORY[0x1E0CEABB0], "_performWithoutRetargetingAnimations:", v75);
    -[SBFluidSwitcherViewController view](self, "view");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "layer");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "removeAnimationForKey:", CFSTR("MatchMoveToIconViewAnimation"));

  }
}

- (NSMutableDictionary)visibleShelves
{
  return self->_visibleShelves;
}

- (void)_updateLayoutFromInterfaceOrientation:(int64_t)a3 toInterfaceOrientation:(int64_t)a4
{
  _QWORD v7[5];

  -[SBSwitcherLiveContentOverlayCoordinating setContainerOrientation:](self->_liveContentOverlayCoordinator, "setContainerOrientation:", a4);
  if ((-[SBSwitcherModifier shouldPerformRotationAnimationForOrientationChange](self->_rootModifier, "shouldPerformRotationAnimationForOrientationChange") & 1) == 0)
  {
    v7[0] = MEMORY[0x1E0C809B0];
    v7[1] = 3221225472;
    v7[2] = __94__SBFluidSwitcherViewController__updateLayoutFromInterfaceOrientation_toInterfaceOrientation___block_invoke;
    v7[3] = &unk_1E8E9DED8;
    v7[4] = self;
    -[SBFluidSwitcherViewController _performWithFixedUpdateMode:usingBlock:](self, "_performWithFixedUpdateMode:usingBlock:", 2, v7);
  }
  -[SBFluidSwitcherViewController _rotateHomeAffordancesFromInterfaceOrientation:toInterfaceOrientation:](self, "_rotateHomeAffordancesFromInterfaceOrientation:toInterfaceOrientation:", a3, a4);
}

- (void)_rotateHomeAffordancesFromInterfaceOrientation:(int64_t)a3 toInterfaceOrientation:(int64_t)a4
{
  NSSet *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  v7 = self->_visibleAdjustedAppLayouts;
  v8 = -[NSSet countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v17;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v17 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v16 + 1) + 8 * i);
        if (-[SBFluidSwitcherViewController _bestSupportedHomeAffordanceOrientationForOrientation:inAppLayout:](self, "_bestSupportedHomeAffordanceOrientationForOrientation:inAppLayout:", a4, v12, (_QWORD)v16) == a4)
        {
          -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v12);
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "homeGrabberView");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          +[SBAnimationUtilities animationSettingsForRotationFromInterfaceOrientation:toInterfaceOrientation:](SBAnimationUtilities, "animationSettingsForRotationFromInterfaceOrientation:toInterfaceOrientation:", a3, a4);
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "setOrientation:animated:rotationSettings:", a4, 1, v15);

        }
      }
      v9 = -[NSSet countByEnumeratingWithState:objects:count:](v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
    }
    while (v9);
  }

}

- (SBFluidSwitcherViewController)initWithRootModifier:(id)a3 liveContentOverlayCoordinator:(id)a4 dataSource:(id)a5 delegate:(id)a6 debugName:(id)a7
{
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  SBFluidSwitcherViewController *v19;
  SBFluidSwitcherViewController *v20;
  uint64_t v21;
  NSString *debugName;
  NSMutableDictionary *v23;
  NSMutableDictionary *visibleItemContainers;
  NSMutableDictionary *v25;
  NSMutableDictionary *visibleOverlayAccessoryViews;
  NSMutableDictionary *v27;
  NSMutableDictionary *visibleUnderlayAccessoryViews;
  NSMutableDictionary *v29;
  NSMutableDictionary *externalDropletZoomUpTokens;
  NSMutableDictionary *v31;
  NSMutableDictionary *visibleItemContainerBackdropViews;
  NSMutableSet *v33;
  NSMutableSet *focusedItemBackdropsBeingRemoved;
  NSMutableArray *v35;
  NSMutableArray *hiddenRecycledItemContainers;
  NSMutableDictionary *v37;
  NSMutableDictionary *visibleShelves;
  NSMutableSet *v39;
  NSMutableSet *visibleShelvesHostedInContentView;
  NSMutableDictionary *v41;
  NSMutableDictionary *hiddenIconViews;
  NSMutableDictionary *v43;
  NSMutableDictionary *hiddenIconViewContainers;
  NSArray *continuousExposeIdentifiersInSwitcher;
  NSArray *v46;
  NSArray *continuousExposeIdentifiersInStrip;
  uint64_t v48;
  NSMutableSet *systemApertureContentSuppressionAssertionsForGesture;
  NSMutableDictionary *v50;
  NSMutableDictionary *systemApertureContentSuppressionAssertionsByInvalidationUUID;
  NSMutableDictionary *v52;
  NSMutableDictionary *systemApertureGlobalSuppressionAssertionsByInvalidationUUID;
  NSMutableDictionary *v54;
  NSMutableDictionary *systemApertureKeyLineAssertionsByInvalidationUUID;
  uint64_t v56;
  NSPointerArray *outstandingAnimations;
  CGSize v58;
  SBDisplayItemLayoutAttributesCalculator *v59;
  SBDisplayItemLayoutAttributesCalculator *displayItemLayoutAttributesCalculator;
  void *v61;
  uint64_t v62;
  SBAppSwitcherDefaults *defaults;
  uint64_t v64;
  SBAppSwitcherSettings *settings;
  void *v66;
  void *v67;
  uint64_t v68;
  SBFHomeGrabberSettings *homeGrabberSettings;
  uint64_t v70;
  NSMutableDictionary *liveContentOverlays;
  void *v72;
  uint64_t v73;
  SBSwitcherKeyboardSuppressionMode *lastKeyboardSuppressionMode;
  SBSwitcherAccessoryLayoutElement *v75;
  SBSwitcherAccessoryLayoutElement *genericAccessoryLayoutElement;
  id v77;
  objc_class *v78;
  void *v79;
  uint64_t v80;
  NSString *fluidSwitcherAssertionReason;
  id v82;
  void *v83;
  void *v84;
  void *v85;
  uint64_t v86;
  UINotificationFeedbackGenerator *emptySwitcherFeedbackGenerator;
  id v88;
  void *v89;
  void *v90;
  void *v91;
  uint64_t v92;
  UINotificationFeedbackGenerator *flyInFeedbackGenerator;
  id v94;
  void *v95;
  void *v96;
  void *v97;
  uint64_t v98;
  UINotificationFeedbackGenerator *reduceMotionFeedbackGenerator;
  void *v100;
  void *v101;
  void *v102;
  void *v103;
  void *v104;
  void *v105;
  void *v106;
  void *v107;
  void *v108;
  void *v109;
  void *v110;
  void *v111;
  void *v112;
  void *v113;
  id v114;
  void *v115;
  uint64_t v116;
  BSInvalidatable *stateCaptureInvalidatable;
  void *v119;
  void *v120;
  void *v121;
  id v122;
  id v123;
  id v124;
  id location;
  objc_super v126;

  v14 = a3;
  v15 = a4;
  v16 = a5;
  v17 = a6;
  v18 = a7;
  if (v14)
  {
    if (v15)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v119 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v119, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 624, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("rootModifier"));

    if (v15)
      goto LABEL_3;
  }
  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v120 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v120, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 625, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("liveContentOverlayCoordinator"));

LABEL_3:
  v126.receiver = self;
  v126.super_class = (Class)SBFluidSwitcherViewController;
  v19 = -[SBFluidSwitcherViewController initWithNibName:bundle:](&v126, sel_initWithNibName_bundle_, 0, 0);
  v20 = v19;
  if (v19)
  {
    v123 = v14;
    -[SBFluidSwitcherViewController setDelegate:](v19, "setDelegate:", v17);
    v122 = v16;
    -[SBFluidSwitcherViewController setDataSource:](v20, "setDataSource:", v16);
    v21 = objc_msgSend(v18, "copy");
    debugName = v20->_debugName;
    v20->_debugName = (NSString *)v21;

    v23 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    visibleItemContainers = v20->_visibleItemContainers;
    v20->_visibleItemContainers = v23;

    v25 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    visibleOverlayAccessoryViews = v20->_visibleOverlayAccessoryViews;
    v20->_visibleOverlayAccessoryViews = v25;

    v27 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    visibleUnderlayAccessoryViews = v20->_visibleUnderlayAccessoryViews;
    v20->_visibleUnderlayAccessoryViews = v27;

    v29 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    externalDropletZoomUpTokens = v20->_externalDropletZoomUpTokens;
    v20->_externalDropletZoomUpTokens = v29;

    v31 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    visibleItemContainerBackdropViews = v20->_visibleItemContainerBackdropViews;
    v20->_visibleItemContainerBackdropViews = v31;

    v33 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E0C99E20]);
    focusedItemBackdropsBeingRemoved = v20->_focusedItemBackdropsBeingRemoved;
    v20->_focusedItemBackdropsBeingRemoved = v33;

    v35 = (NSMutableArray *)objc_alloc_init(MEMORY[0x1E0C99DE8]);
    hiddenRecycledItemContainers = v20->_hiddenRecycledItemContainers;
    v20->_hiddenRecycledItemContainers = v35;

    v37 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    visibleShelves = v20->_visibleShelves;
    v20->_visibleShelves = v37;

    v39 = (NSMutableSet *)objc_alloc_init(MEMORY[0x1E0C99E20]);
    visibleShelvesHostedInContentView = v20->_visibleShelvesHostedInContentView;
    v20->_visibleShelvesHostedInContentView = v39;

    v41 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    hiddenIconViews = v20->_hiddenIconViews;
    v20->_hiddenIconViews = v41;

    v43 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    hiddenIconViewContainers = v20->_hiddenIconViewContainers;
    v20->_hiddenIconViewContainers = v43;

    continuousExposeIdentifiersInSwitcher = v20->_continuousExposeIdentifiersInSwitcher;
    v46 = (NSArray *)MEMORY[0x1E0C9AA60];
    v20->_continuousExposeIdentifiersInSwitcher = (NSArray *)MEMORY[0x1E0C9AA60];

    continuousExposeIdentifiersInStrip = v20->_continuousExposeIdentifiersInStrip;
    v20->_continuousExposeIdentifiersInStrip = v46;

    objc_msgSend(MEMORY[0x1E0C99E20], "set");
    v48 = objc_claimAutoreleasedReturnValue();
    systemApertureContentSuppressionAssertionsForGesture = v20->_systemApertureContentSuppressionAssertionsForGesture;
    v20->_systemApertureContentSuppressionAssertionsForGesture = (NSMutableSet *)v48;

    v50 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    systemApertureContentSuppressionAssertionsByInvalidationUUID = v20->_systemApertureContentSuppressionAssertionsByInvalidationUUID;
    v20->_systemApertureContentSuppressionAssertionsByInvalidationUUID = v50;

    v52 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    systemApertureGlobalSuppressionAssertionsByInvalidationUUID = v20->_systemApertureGlobalSuppressionAssertionsByInvalidationUUID;
    v20->_systemApertureGlobalSuppressionAssertionsByInvalidationUUID = v52;

    v54 = (NSMutableDictionary *)objc_alloc_init(MEMORY[0x1E0C99E08]);
    systemApertureKeyLineAssertionsByInvalidationUUID = v20->_systemApertureKeyLineAssertionsByInvalidationUUID;
    v20->_systemApertureKeyLineAssertionsByInvalidationUUID = v54;

    objc_msgSend(MEMORY[0x1E0CB3868], "pointerArrayWithOptions:", 256);
    v56 = objc_claimAutoreleasedReturnValue();
    outstandingAnimations = v20->_outstandingAnimations;
    v20->_outstandingAnimations = (NSPointerArray *)v56;

    v58 = *(CGSize *)(MEMORY[0x1E0C9D648] + 16);
    v20->_currentKeyboardFrame.origin = (CGPoint)*MEMORY[0x1E0C9D648];
    v20->_currentKeyboardFrame.size = v58;
    v59 = objc_alloc_init(SBDisplayItemLayoutAttributesCalculator);
    displayItemLayoutAttributesCalculator = v20->_displayItemLayoutAttributesCalculator;
    v20->_displayItemLayoutAttributesCalculator = v59;

    +[SBDefaults localDefaults](SBDefaults, "localDefaults");
    v61 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v61, "appSwitcherDefaults");
    v62 = objc_claimAutoreleasedReturnValue();
    defaults = v20->_defaults;
    v20->_defaults = (SBAppSwitcherDefaults *)v62;

    +[SBAppSwitcherDomain rootSettings](SBAppSwitcherDomain, "rootSettings");
    v64 = objc_claimAutoreleasedReturnValue();
    settings = v20->_settings;
    v20->_settings = (SBAppSwitcherSettings *)v64;

    -[PTSettings addKeyPathObserver:](v20->_settings, "addKeyPathObserver:", v20);
    -[SBAppSwitcherSettings chamoisSettings](v20->_settings, "chamoisSettings");
    v66 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v66, "addKeyObserver:", v20);

    +[SBHomeGestureDomain rootSettings](SBHomeGestureDomain, "rootSettings");
    v121 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v121, "addKeyObserver:", v20);
    +[SBMedusaDomain rootSettings](SBMedusaDomain, "rootSettings");
    v67 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v67, "addKeyObserver:", v20);
    objc_msgSend(MEMORY[0x1E0DA9E28], "rootSettings");
    v68 = objc_claimAutoreleasedReturnValue();
    homeGrabberSettings = v20->_homeGrabberSettings;
    v20->_homeGrabberSettings = (SBFHomeGrabberSettings *)v68;

    -[SBFHomeGrabberSettings addKeyObserver:](v20->_homeGrabberSettings, "addKeyObserver:", v20);
    objc_storeStrong((id *)&v20->_rootModifier, a3);
    objc_msgSend(v15, "setDelegate:", v20);
    objc_storeStrong((id *)&v20->_liveContentOverlayCoordinator, a4);
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v70 = objc_claimAutoreleasedReturnValue();
    liveContentOverlays = v20->_liveContentOverlays;
    v20->_liveContentOverlays = (NSMutableDictionary *)v70;

    objc_msgSend(MEMORY[0x1E0D83110], "recipeWithTitle:toggleAction:", CFSTR("Toggle Modifier Timeline"), &__block_literal_global_47);
    v72 = (void *)objc_claimAutoreleasedReturnValue();
    +[PTDomain registerTestRecipe:](SBAppSwitcherDomain, "registerTestRecipe:", v72);

    v20->_currentWallpaperRequiredForSwitcher = 0;
    v20->_currentWallpaperStyle = 1;
    v20->_currentHomeScreenContentRequired = 0;
    v20->_currentHomeScreenBackdropBlurType = 1;
    v20->_currentSwitcherBackdropBlurType = 1;
    +[SBSwitcherKeyboardSuppressionMode suppressionModeNone](SBSwitcherKeyboardSuppressionMode, "suppressionModeNone");
    v73 = objc_claimAutoreleasedReturnValue();
    lastKeyboardSuppressionMode = v20->_lastKeyboardSuppressionMode;
    v20->_lastKeyboardSuppressionMode = (SBSwitcherKeyboardSuppressionMode *)v73;

    v75 = -[SBSwitcherAccessoryLayoutElement initWithType:]([SBSwitcherAccessoryLayoutElement alloc], "initWithType:", 1);
    genericAccessoryLayoutElement = v20->_genericAccessoryLayoutElement;
    v20->_genericAccessoryLayoutElement = v75;

    v77 = objc_alloc(MEMORY[0x1E0CB3940]);
    v78 = (objc_class *)objc_opt_class();
    NSStringFromClass(v78);
    v79 = (void *)objc_claimAutoreleasedReturnValue();
    v80 = objc_msgSend(v77, "initWithFormat:", CFSTR("%@-%p-%@"), v79, v20, v20->_debugName);
    fluidSwitcherAssertionReason = v20->_fluidSwitcherAssertionReason;
    v20->_fluidSwitcherAssertionReason = (NSString *)v80;

    v82 = objc_alloc(MEMORY[0x1E0CEA7D0]);
    v83 = (void *)MEMORY[0x1E0CEAE28];
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", &unk_1E91D03E0);
    v84 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v83, "privateConfigurationForTypes:", v84);
    v85 = (void *)objc_claimAutoreleasedReturnValue();
    v86 = objc_msgSend(v82, "initWithConfiguration:", v85);
    emptySwitcherFeedbackGenerator = v20->_emptySwitcherFeedbackGenerator;
    v20->_emptySwitcherFeedbackGenerator = (UINotificationFeedbackGenerator *)v86;

    v88 = objc_alloc(MEMORY[0x1E0CEA7D0]);
    v89 = (void *)MEMORY[0x1E0CEAE28];
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", &unk_1E91D03F8);
    v90 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v89, "privateConfigurationForTypes:", v90);
    v91 = (void *)objc_claimAutoreleasedReturnValue();
    v92 = objc_msgSend(v88, "initWithConfiguration:", v91);
    flyInFeedbackGenerator = v20->_flyInFeedbackGenerator;
    v20->_flyInFeedbackGenerator = (UINotificationFeedbackGenerator *)v92;

    v94 = objc_alloc(MEMORY[0x1E0CEA7D0]);
    v95 = (void *)MEMORY[0x1E0CEAE28];
    objc_msgSend(MEMORY[0x1E0C99E60], "setWithObject:", &unk_1E91D0410);
    v96 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v95, "privateConfigurationForTypes:", v96);
    v97 = (void *)objc_claimAutoreleasedReturnValue();
    v98 = objc_msgSend(v94, "initWithConfiguration:", v97);
    reduceMotionFeedbackGenerator = v20->_reduceMotionFeedbackGenerator;
    v20->_reduceMotionFeedbackGenerator = (UINotificationFeedbackGenerator *)v98;

    -[SBFluidSwitcherViewController setDefinesPresentationContext:](v20, "setDefinesPresentationContext:", 1);
    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v100 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v100, "addObserver:selector:name:object:", v20, sel__reduceMotionStatusDidChange_, *MEMORY[0x1E0CEB090], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v101 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v101, "addObserver:selector:name:object:", v20, sel__backgroundContrastDidChange_, *MEMORY[0x1E0CEB098], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v102 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v102, "addObserver:selector:name:object:", v20, sel__folderExpansionAnimationWillBegin_, *MEMORY[0x1E0DAAA58], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v103 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v103, "addObserver:selector:name:object:", v20, sel__containerScrolledEnoughToClipSwitcherIconView_, *MEMORY[0x1E0DAA8A8], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v104 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v104, "addObserver:selector:name:object:", v20, sel__iconControllerOverlayVisibilityDidChange_, SBIconControllerOverlayVisibilityDidChangeNotification, 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v105 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v105, "addObserver:selector:name:object:", v20, sel__iconControllerDidReconfigureChildControllers_, SBIconControllerDidReconfigureChildControllersNotification, 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v106 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v106, "addObserver:selector:name:object:", v20, sel__sceneUpdateDidChange_, CFSTR("SBApplicationSceneHandleProgressNotification"), 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v107 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v107, "addObserver:selector:name:object:", v20, sel__handleKeyboardFrameWillChange_, *MEMORY[0x1E0CEB960], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v108 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v108, "addObserver:selector:name:object:", v20, sel__keyboardWillShow_, *MEMORY[0x1E0CEB978], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v109 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v109, "addObserver:selector:name:object:", v20, sel__keyboardWillHide_, *MEMORY[0x1E0CEB970], 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v110 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v110, "addObserver:selector:name:object:", v20, sel__keyboardDidUIPosition_, CFSTR("UIKeyboardDidChangeUIPosition"), 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v111 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v111, "addObserver:selector:name:object:", v20, sel__medusaHostedKeyboardWillShowNotification_, CFSTR("SBMedusaHostedKeyboardWindowWillShowNotification"), 0);

    objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
    v112 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v112, "addObserver:selector:name:object:", v20, sel__medusaHostedKeyboardWillHideNotification_, CFSTR("SBMedusaHostedKeyboardWindowWillHideNotification"), 0);

    +[SBAppInteractionEventSourceManager sharedInstance](SBAppInteractionEventSourceManager, "sharedInstance");
    v113 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v113, "addObserver:", v20);

    objc_initWeak(&location, v20);
    v114 = MEMORY[0x1E0C80D38];
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("SpringBoard - FluidSwitcher - %@"), v20->_debugName);
    v115 = (void *)objc_claimAutoreleasedReturnValue();
    objc_copyWeak(&v124, &location);
    BSLogAddStateCaptureBlockWithTitle();
    v116 = objc_claimAutoreleasedReturnValue();
    stateCaptureInvalidatable = v20->_stateCaptureInvalidatable;
    v20->_stateCaptureInvalidatable = (BSInvalidatable *)v116;

    objc_destroyWeak(&v124);
    objc_destroyWeak(&location);

    v16 = v122;
    v14 = v123;
  }

  return v20;
}

void __114__SBFluidSwitcherViewController_initWithRootModifier_liveContentOverlayCoordinator_dataSource_delegate_debugName___block_invoke(uint64_t a1, uint64_t a2)
{
  id v3;

  +[SBAppSwitcherDomain rootSettings](SBAppSwitcherDomain, "rootSettings");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setShowMainModifierTimeline:", a2);

}

id __114__SBFluidSwitcherViewController_initWithRootModifier_liveContentOverlayCoordinator_dataSource_delegate_debugName___block_invoke_117(uint64_t a1)
{
  id WeakRetained;
  _QWORD *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  v2 = WeakRetained;
  if (WeakRetained)
  {
    v3 = (void *)MEMORY[0x1E0CB3940];
    v4 = *((_QWORD *)WeakRetained + 242);
    v5 = *((_QWORD *)WeakRetained + 228);
    objc_msgSend(*((id *)WeakRetained + 170), "allObjects");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "stringWithFormat:", CFSTR("rootModifier:\n%@\n\nvisibleItemContainers:\n%@\n\noutstandingAnimations:\n%@\n\nvisibleOverlayAccessoryViews:\n%@\n\nleafAppLayoutsToAdjustedAppLayouts:\n%@"), v4, v5, v6, v2[229], v2[162]);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (SBFluidSwitcherViewController)init
{
  void *v4;
  void *v5;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromSelector(sel_initWithRootModifier_liveContentOverlayCoordinator_dataSource_delegate_debugName_);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 732, CFSTR("%s is unavailable; use %@ instead"),
    "-[SBFluidSwitcherViewController init]",
    v5);

  return 0;
}

- (SBFluidSwitcherViewController)initWithNibName:(id)a3 bundle:(id)a4
{
  void *v6;
  void *v7;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler", a3, a4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromSelector(sel_initWithRootModifier_liveContentOverlayCoordinator_dataSource_delegate_debugName_);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 737, CFSTR("%s is unavailable; use %@ instead"),
    "-[SBFluidSwitcherViewController initWithNibName:bundle:]",
    v7);

  return 0;
}

- (SBFluidSwitcherViewController)initWithCoder:(id)a3
{
  void *v5;
  void *v6;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  NSStringFromSelector(sel_initWithRootModifier_liveContentOverlayCoordinator_dataSource_delegate_debugName_);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 742, CFSTR("%s is unavailable; use %@ instead"),
    "-[SBFluidSwitcherViewController initWithCoder:]",
    v6);

  return 0;
}

- (void)dealloc
{
  void *v5;
  objc_class *v6;
  void *v7;
  int v8;
  void *v9;
  __int16 v10;
  void *v11;
  __int16 v12;
  uint64_t v13;
  __int16 v14;
  const __CFString *v15;
  __int16 v16;
  int v17;
  __int16 v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  NSStringFromSelector(a1);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = (objc_class *)objc_opt_class();
  NSStringFromClass(v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 138544642;
  v9 = v5;
  v10 = 2114;
  v11 = v7;
  v12 = 2048;
  v13 = a2;
  v14 = 2114;
  v15 = CFSTR("SBFluidSwitcherViewController.m");
  v16 = 1024;
  v17 = 747;
  v18 = 2114;
  v19 = a3;
  _os_log_error_impl(&dword_1D0540000, MEMORY[0x1E0C81028], OS_LOG_TYPE_ERROR, "failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@", (uint8_t *)&v8, 0x3Au);

}

- (void)loadView
{
  SBFluidSwitcherTouchPassThroughView *v3;

  v3 = objc_alloc_init(SBFluidSwitcherTouchPassThroughView);
  -[SBFluidSwitcherViewController setView:](self, "setView:", v3);

}

- (void)viewDidLoad
{
  objc_super v3;

  v3.receiver = self;
  v3.super_class = (Class)SBFluidSwitcherViewController;
  -[SBFluidSwitcherViewController viewDidLoad](&v3, sel_viewDidLoad);
  -[SBFluidSwitcherViewController _performDeferredInitialization](self, "_performDeferredInitialization");
  -[SBFluidSwitcherViewController _setupContentAndTransientViews](self, "_setupContentAndTransientViews");
  -[SBFluidSwitcherViewController _updateImplicitModifierStackInvalidatables](self, "_updateImplicitModifierStackInvalidatables");
  -[SBFluidSwitcherViewController _updateChamoisDefaultsObserverIfNeeded](self, "_updateChamoisDefaultsObserverIfNeeded");
}

- (void)traitCollectionDidChange:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v8;

  v8.receiver = self;
  v8.super_class = (Class)SBFluidSwitcherViewController;
  v4 = a3;
  -[SBFluidSwitcherViewController traitCollectionDidChange:](&v8, sel_traitCollectionDidChange_, v4);
  -[SBFluidSwitcherViewController traitCollection](self, "traitCollection", v8.receiver, v8.super_class);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "userInterfaceStyle");

  v7 = objc_msgSend(v4, "userInterfaceStyle");
  if (v6 != v7)
  {
    -[SBAppSwitcherSnapshotImageCache reloadSnapshotsForInterfaceStyleChange:](self->_snapshotCache, "reloadSnapshotsForInterfaceStyleChange:", v6);
    -[SBFluidSwitcherViewController _updateTitleItemsLabelColor](self, "_updateTitleItemsLabelColor");
    -[SBFluidSwitcherViewController _updateTitleItemsUserInterfaceStyle](self, "_updateTitleItemsUserInterfaceStyle");
  }
}

- (void)_performDeferredInitialization
{
  SBSceneManager *v3;
  SBSceneManager *sceneManager;
  SBLayoutStateTransitionCoordinator *v5;
  SBLayoutStateTransitionCoordinator *layoutStateTransitionCoordinator;
  SBFluidSwitcherLayoutContext *v7;
  void *v8;
  void *v9;
  SBFluidSwitcherLayoutContext *v10;
  SBFluidSwitcherLayoutContext *layoutContext;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  int v16;
  unint64_t v17;
  SBAppSwitcherSnapshotImageCache *v18;
  SBAppSwitcherSnapshotImageCache *snapshotCache;
  SBAppSwitcherSnapshotImageCache *v20;
  void *v21;
  SBAppSwitcherSnapshotLockoutViewControllerProvider *v22;
  SBAppSwitcherSnapshotLockoutViewControllerProvider *lockoutVCProvider;
  SBFluidSwitcherPageContentViewProvider *v24;
  SBFluidSwitcherPageContentViewProvider *pageContentViewProvider;
  id v26;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v26 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "sceneManager");
  v3 = (SBSceneManager *)objc_claimAutoreleasedReturnValue();
  sceneManager = self->_sceneManager;
  self->_sceneManager = v3;

  objc_msgSend(v26, "layoutStateTransitionCoordinator");
  v5 = (SBLayoutStateTransitionCoordinator *)objc_claimAutoreleasedReturnValue();
  layoutStateTransitionCoordinator = self->_layoutStateTransitionCoordinator;
  self->_layoutStateTransitionCoordinator = v5;

  v7 = [SBFluidSwitcherLayoutContext alloc];
  objc_msgSend(v26, "layoutStateProvider");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "layoutState");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = -[SBFluidSwitcherLayoutContext initWithLayoutState:](v7, "initWithLayoutState:", v9);
  layoutContext = self->_layoutContext;
  self->_layoutContext = v10;

  -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "searchGesture");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "addObserver:", self);

  -[SBFluidSwitcherViewController _setUpSearchPresenterObservation](self, "_setUpSearchPresenterObservation");
  objc_msgSend(v26, "systemPointerInteractionManager");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "addObserver:", self);

  objc_msgSend(v26, "assistantController");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "addObserver:", self);
  v16 = objc_msgSend(v15, "isVisible");
  v17 = 3;
  if (!v16)
    v17 = 0;
  self->_assistantPresentationState = v17;
  v18 = -[SBAppSwitcherSnapshotImageCache initWithDelegate:]([SBAppSwitcherSnapshotImageCache alloc], "initWithDelegate:", self);
  snapshotCache = self->_snapshotCache;
  self->_snapshotCache = v18;

  -[SBAppSwitcherSnapshotImageCache setDebugName:](self->_snapshotCache, "setDebugName:", self->_debugName);
  v20 = self->_snapshotCache;
  -[SBFluidSwitcherViewController traitCollection](self, "traitCollection");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBAppSwitcherSnapshotImageCache reloadSnapshotsForInterfaceStyleChange:](v20, "reloadSnapshotsForInterfaceStyleChange:", objc_msgSend(v21, "userInterfaceStyle"));

  -[SBFluidSwitcherViewController _updateSnapshotCacheReloadingForActiveInterfaceOrientationChange](self, "_updateSnapshotCacheReloadingForActiveInterfaceOrientationChange");
  v22 = objc_alloc_init(SBAppSwitcherSnapshotLockoutViewControllerProvider);
  lockoutVCProvider = self->_lockoutVCProvider;
  self->_lockoutVCProvider = v22;

  v24 = -[SBFluidSwitcherPageContentViewProvider initWithDelegate:snapshotCache:lockoutViewProvider:]([SBFluidSwitcherPageContentViewProvider alloc], "initWithDelegate:snapshotCache:lockoutViewProvider:", self, self->_snapshotCache, self->_lockoutVCProvider);
  pageContentViewProvider = self->_pageContentViewProvider;
  self->_pageContentViewProvider = v24;

  -[SBChainableModifier setDelegate:](self->_rootModifier, "setDelegate:", self);
  -[SBFluidSwitcherViewController _rebuildCachedAdjustedAppLayouts](self, "_rebuildCachedAdjustedAppLayouts");

}

- (void)_setupContentAndTransientViews
{
  void *v3;
  void *v4;
  SBAppSwitcherScrollView *v5;
  void *v6;
  SBAppSwitcherScrollView *v7;
  SBAppSwitcherScrollView *scrollView;
  SBAppSwitcherScrollView *v9;
  void *v10;
  void *v11;
  SBFluidSwitcherContentView *v12;
  void *v13;
  SBFluidSwitcherContentView *v14;
  SBFluidSwitcherContentView *contentView;
  SBFluidSwitcherContentView *v16;
  void *v17;
  void *v18;
  void *v19;
  UIPanGestureRecognizer *v20;
  UIPanGestureRecognizer *borrowableScrollViewPanGestureRecognizer;
  UITapGestureRecognizer *v22;
  UITapGestureRecognizer *dismissTapGestureRecognizer;
  id v24;
  void *v25;
  UIView *v26;
  UIView *hitTestBlockerView;
  UIView *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  _QWORD v33[2];
  CAFrameRateRange v34;

  -[SBFluidSwitcherViewController view](self, "view");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setBackgroundColor:", v4);

  v5 = [SBAppSwitcherScrollView alloc];
  -[SBFluidSwitcherViewController view](self, "view");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "bounds");
  v7 = -[BSUIScrollView initWithFrame:](v5, "initWithFrame:");
  scrollView = self->_scrollView;
  self->_scrollView = v7;

  -[BSUIScrollView setDelegate:](self->_scrollView, "setDelegate:", self);
  -[SBAppSwitcherScrollView setShowsHorizontalScrollIndicator:](self->_scrollView, "setShowsHorizontalScrollIndicator:", 0);
  -[SBAppSwitcherScrollView setShowsVerticalScrollIndicator:](self->_scrollView, "setShowsVerticalScrollIndicator:", 0);
  v9 = self->_scrollView;
  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBAppSwitcherScrollView setBackgroundColor:](v9, "setBackgroundColor:", v10);

  -[SBAppSwitcherScrollView setClipsToBounds:](self->_scrollView, "setClipsToBounds:", 0);
  -[SBAppSwitcherScrollView setZoomEnabled:](self->_scrollView, "setZoomEnabled:", 0);
  -[SBAppSwitcherScrollView setTracksImmediatelyWhileDecelerating:](self->_scrollView, "setTracksImmediatelyWhileDecelerating:", 0);
  -[SBAppSwitcherScrollView _setAutomaticContentOffsetAdjustmentEnabled:](self->_scrollView, "_setAutomaticContentOffsetAdjustmentEnabled:", 0);
  -[SBAppSwitcherScrollView _setSupportsPointerDragScrolling:](self->_scrollView, "_setSupportsPointerDragScrolling:", 1);
  -[SBAppSwitcherScrollView bs_setHitTestingDisabled:](self->_scrollView, "bs_setHitTestingDisabled:", 1);
  v34 = CAFrameRateRangeMake(80.0, 120.0, 120.0);
  _setupContentAndTransientViews_updateRequest = 0;
  *(_DWORD *)algn_1ED930DCC = v34.minimum;
  dword_1ED930DD0 = v34.preferred;
  unk_1ED930DD4 = v34.maximum;
  v33[0] = &_setupContentAndTransientViews_updateRequest;
  v33[1] = 1114132;
  -[SBAppSwitcherScrollView _setUpdateRequestRecord:](self->_scrollView, "_setUpdateRequestRecord:", v33);
  -[SBFluidSwitcherViewController view](self, "view");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "addSubview:", self->_scrollView);

  v12 = [SBFluidSwitcherContentView alloc];
  -[SBFluidSwitcherViewController view](self, "view");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "bounds");
  v14 = -[SBFluidSwitcherContentView initWithFrame:](v12, "initWithFrame:");
  contentView = self->_contentView;
  self->_contentView = v14;

  v16 = self->_contentView;
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@%p"), CFSTR("AppSwitcherItemContainerFocus-"), self);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherContentView setFocusGroupIdentifier:](v16, "setFocusGroupIdentifier:", v17);

  -[SBFluidSwitcherContentView setDelegate:](self->_contentView, "setDelegate:", self);
  -[SBFluidSwitcherViewController view](self, "view");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "addSubview:", self->_contentView);

  -[SBFluidSwitcherViewController _updateContentViewSublayerTransform](self, "_updateContentViewSublayerTransform");
  -[SBFluidSwitcherContentView layer](self->_contentView, "layer");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "setSortsSublayers:", 0);

  -[SBAppSwitcherScrollView panGestureRecognizer](self->_scrollView, "panGestureRecognizer");
  v20 = (UIPanGestureRecognizer *)objc_claimAutoreleasedReturnValue();
  borrowableScrollViewPanGestureRecognizer = self->_borrowableScrollViewPanGestureRecognizer;
  self->_borrowableScrollViewPanGestureRecognizer = v20;

  -[SBFluidSwitcherContentView addGestureRecognizer:](self->_contentView, "addGestureRecognizer:", self->_borrowableScrollViewPanGestureRecognizer);
  v22 = (UITapGestureRecognizer *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEAA88]), "initWithTarget:action:", self, sel__handleDismissTapGesture_);
  dismissTapGestureRecognizer = self->_dismissTapGestureRecognizer;
  self->_dismissTapGestureRecognizer = v22;

  -[UITapGestureRecognizer setDelegate:](self->_dismissTapGestureRecognizer, "setDelegate:", self);
  -[SBFluidSwitcherContentView addGestureRecognizer:](self->_contentView, "addGestureRecognizer:", self->_dismissTapGestureRecognizer);
  v24 = objc_alloc(MEMORY[0x1E0CEABB0]);
  -[SBFluidSwitcherViewController view](self, "view");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v25, "bounds");
  v26 = (UIView *)objc_msgSend(v24, "initWithFrame:");
  hitTestBlockerView = self->_hitTestBlockerView;
  self->_hitTestBlockerView = v26;

  v28 = self->_hitTestBlockerView;
  objc_msgSend(MEMORY[0x1E0CEA478], "clearColor");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  -[UIView setBackgroundColor:](v28, "setBackgroundColor:", v29);

  -[UIView layer](self->_hitTestBlockerView, "layer");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setHitTestsAsOpaque:", 1);

  -[UIView layer](self->_hitTestBlockerView, "layer");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v31, "setAllowsHitTesting:", 1);

  -[UIView setHidden:](self->_hitTestBlockerView, "setHidden:", 1);
  -[SBFluidSwitcherViewController view](self, "view");
  v32 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v32, "addSubview:", self->_hitTestBlockerView);

}

- (void)_updateContentViewSublayerTransform
{
  uint64_t v3;
  void *v4;
  double v5;
  double v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v11[5];
  uint64_t v12;
  double v13;
  __int128 v14;
  __int128 v15;

  v3 = MEMORY[0x1E0CD2610];
  if (-[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled"))
  {
    -[SBFluidSwitcherViewController chamoisLayoutAttributes](self, "chamoisLayoutAttributes");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "containerPerspective");
    v6 = -1.0 / v5;

  }
  else
  {
    v6 = *(double *)(v3 + 88);
  }
  -[SBFluidSwitcherContentView layer](self->_contentView, "layer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = *(_OWORD *)(v3 + 48);
  v11[2] = *(_OWORD *)(v3 + 32);
  v11[3] = v8;
  v11[4] = *(_OWORD *)(v3 + 64);
  v12 = *(_QWORD *)(v3 + 80);
  v9 = *(_OWORD *)(v3 + 16);
  v11[0] = *(_OWORD *)v3;
  v11[1] = v9;
  v13 = v6;
  v10 = *(_OWORD *)(v3 + 112);
  v14 = *(_OWORD *)(v3 + 96);
  v15 = v10;
  objc_msgSend(v7, "setSublayerTransform:", v11);

}

- (NSString)description
{
  return (NSString *)-[SBFluidSwitcherViewController descriptionWithMultilinePrefix:](self, "descriptionWithMultilinePrefix:", 0);
}

- (id)succinctDescription
{
  void *v2;
  void *v3;

  -[SBFluidSwitcherViewController succinctDescriptionBuilder](self, "succinctDescriptionBuilder");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "build");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)succinctDescriptionBuilder
{
  return (id)objc_msgSend(MEMORY[0x1E0D01748], "builderWithObject:", self);
}

- (id)descriptionWithMultilinePrefix:(id)a3
{
  void *v3;
  void *v4;

  -[SBFluidSwitcherViewController descriptionBuilderWithMultilinePrefix:](self, "descriptionBuilderWithMultilinePrefix:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "build");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)descriptionBuilderWithMultilinePrefix:(id)a3
{
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v9[4];
  id v10;
  SBFluidSwitcherViewController *v11;

  v4 = a3;
  -[SBFluidSwitcherViewController succinctDescriptionBuilder](self, "succinctDescriptionBuilder");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __71__SBFluidSwitcherViewController_descriptionBuilderWithMultilinePrefix___block_invoke;
  v9[3] = &unk_1E8E9E820;
  v6 = v5;
  v10 = v6;
  v11 = self;
  objc_msgSend(v6, "appendBodySectionWithName:multilinePrefix:block:", 0, v4, v9);

  v7 = v6;
  return v7;
}

id __71__SBFluidSwitcherViewController_descriptionBuilderWithMultilinePrefix___block_invoke(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  void *v30;
  void *v31;

  objc_msgSend(*(id *)(a1 + 32), "appendString:withName:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 1320), CFSTR("debugName"));
  v2 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "view");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "window");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = (id)objc_msgSend(v2, "appendObject:withName:", v4, CFSTR("window"));

  v6 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "view");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = (id)objc_msgSend(v6, "appendObject:withName:", v7, CFSTR("view"));

  v9 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "scrollView");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = (id)objc_msgSend(v9, "appendObject:withName:", v10, CFSTR("scrollView"));

  v12 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "contentView");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = (id)objc_msgSend(v12, "appendObject:withName:", v13, CFSTR("contentView"));

  v15 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "_appearState");
  SBFStringForAppearState();
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = (id)objc_msgSend(v15, "appendObject:withName:", v16, CFSTR("appearState"));

  objc_msgSend(*(id *)(a1 + 32), "appendDictionarySection:withName:skipIfEmpty:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 1872), CFSTR("liveContentOverlays"), 0);
  v18 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "visibleItemContainers");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "appendDictionarySection:withName:skipIfEmpty:", v19, CFSTR("visibleItemContainers"), 0);

  v20 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "_spacesWithVisibleHomeAffordances");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "allObjects");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v20, "appendArraySection:withName:skipIfEmpty:", v22, CFSTR("visibleHomeGrabberLayoutElements"), 0);

  v23 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "visibleShelves");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v23, "appendDictionarySection:withName:skipIfEmpty:", v24, CFSTR("visibleShelves"), 0);

  v25 = (id)objc_msgSend(*(id *)(a1 + 32), "appendObject:withName:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 1952), CFSTR("hiddenIconViews"));
  v26 = (id)objc_msgSend(*(id *)(a1 + 32), "appendObject:withName:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 1960), CFSTR("hiddenIconViewContainers"));
  v27 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1936), "descriptionWithMultilinePrefix:", CFSTR("\t"));
  v28 = (void *)objc_claimAutoreleasedReturnValue();
  v29 = (id)objc_msgSend(v27, "appendObject:withName:", v28, CFSTR("rootModifier"));

  v30 = *(void **)(a1 + 32);
  objc_msgSend(*(id *)(a1 + 40), "appLayouts");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "appendArraySection:withName:skipIfEmpty:", v31, CFSTR("appLayouts"), 0);

  return (id)objc_msgSend(*(id *)(a1 + 32), "appendObject:withName:", *(_QWORD *)(*(_QWORD *)(a1 + 40) + 1816), CFSTR("layoutContext"));
}

uint64_t __68__SBFluidSwitcherViewController_appLayoutsContainedWithinAppLayout___block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "isOrContainsAppLayout:", a2);
}

- (BOOL)appLayoutContainsOnlyResizableApps:(id)a3
{
  id v3;
  void *v4;
  char v5;

  v3 = a3;
  +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "_appLayoutContainsOnlyResizableApps:", v3);

  return v5;
}

- (BOOL)appLayoutContainsAnUnoccludedMaximizedDisplayItem:(id)a3
{
  return -[SBFluidSwitcherViewController appLayoutContainsAnUnoccludedMaximizedDisplayItem:ignoreOcclusion:displayItem:](self, "appLayoutContainsAnUnoccludedMaximizedDisplayItem:ignoreOcclusion:displayItem:", a3, 0, 0);
}

- (BOOL)appLayoutContainsAnUnoccludedMaximizedDisplayItem:(id)a3 ignoreOcclusion:(BOOL)a4 displayItem:(id *)a5
{
  _BOOL4 v6;
  id v8;
  unint64_t v9;
  void *v10;
  id v11;
  BOOL v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  void *v18;
  id v19;
  void *v20;
  BOOL IsOccluded;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  int v36;
  _BOOL4 v37;
  int v38;
  void *v39;
  void *v41;
  id *v42;
  _BOOL4 v43;
  id obj;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  _BYTE v50[128];
  uint64_t v51;

  v6 = a4;
  v51 = *MEMORY[0x1E0C80C00];
  v8 = a3;
  v9 = -[SBFluidSwitcherViewController _windowManagementStyle](self, "_windowManagementStyle");
  if (v9 == 2)
  {
    -[SBFluidSwitcherViewController chamoisLayoutAttributes](self, "chamoisLayoutAttributes");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v46 = 0u;
    v47 = 0u;
    v48 = 0u;
    v49 = 0u;
    objc_msgSend(v8, "allItems");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v15 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v46, v50, 16);
    if (v15)
    {
      v16 = v15;
      v43 = v6;
      v42 = a5;
      v45 = *(_QWORD *)v47;
      while (2)
      {
        for (i = 0; i != v16; ++i)
        {
          if (*(_QWORD *)v47 != v45)
            objc_enumerationMutation(obj);
          v18 = *(void **)(*((_QWORD *)&v46 + 1) + 8 * i);
          v19 = v8;
          objc_msgSend(v8, "layoutAttributesForItem:", v18, v42);
          v20 = (void *)objc_claimAutoreleasedReturnValue();
          IsOccluded = SBDisplayItemLayoutAttributesOcclusionStateIsOccluded(objc_msgSend(v20, "occlusionState"));
          v22 = objc_msgSend(v20, "sizingPolicy");
          -[SBFluidSwitcherViewController containerViewBounds](self, "containerViewBounds");
          v24 = v23;
          v26 = v25;
          v28 = v27;
          v30 = v29;
          objc_msgSend(v14, "defaultWindowSize");
          v32 = v31;
          v34 = v33;
          objc_msgSend(v14, "screenEdgePadding");
          objc_msgSend(v20, "sizeInBounds:defaultSize:screenEdgePadding:", v24, v26, v28, v30, v32, v34, v35);
          v36 = BSSizeEqualToSize();
          v37 = -[SBFluidSwitcherViewController _areContinuousExposeStripsUnoccluded](self, "_areContinuousExposeStripsUnoccluded");
          if (v22 == 2)
            v38 = 1;
          else
            v38 = v36;
          if (IsOccluded || v37)
          {
            if ((v43 & v38 & 1) != 0)
            {
LABEL_32:
              v11 = v18;

              v12 = 1;
              a5 = v42;
              v8 = v19;
              goto LABEL_34;
            }
          }
          else if (v38)
          {
            goto LABEL_32;
          }

          v8 = v19;
        }
        v16 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v46, v50, 16);
        if (v16)
          continue;
        break;
      }
      v11 = 0;
      v12 = 0;
      a5 = v42;
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
LABEL_34:

    goto LABEL_35;
  }
  if (v9 == 1)
  {
    if (objc_msgSend(v8, "environment") != 1)
    {
LABEL_30:
      v11 = 0;
      v12 = 0;
      if (!a5)
        goto LABEL_37;
      goto LABEL_36;
    }
    objc_msgSend(v8, "itemForLayoutRole:", 1);
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v14)
      goto LABEL_29;
    objc_msgSend(v8, "itemForLayoutRole:", 2);
    v39 = (void *)objc_claimAutoreleasedReturnValue();
    if (v39
      || (objc_msgSend(v8, "itemForLayoutRole:", 3), (v39 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
    {

LABEL_29:
      v12 = 0;
      v11 = 0;
      goto LABEL_35;
    }
    objc_msgSend(v8, "itemForLayoutRole:", 4);
    v41 = (void *)objc_claimAutoreleasedReturnValue();

    if (v41)
      goto LABEL_29;
    v11 = v14;
    v12 = 1;
LABEL_35:

    if (!a5)
      goto LABEL_37;
LABEL_36:
    *a5 = objc_retainAutorelease(v11);
    goto LABEL_37;
  }
  if (v9)
    goto LABEL_30;
  objc_msgSend(v8, "itemForLayoutRole:", 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  v12 = v10 != 0;
  if (v10)
    v13 = v10;

  if (a5)
    goto LABEL_36;
LABEL_37:

  return v12;
}

- (unint64_t)supportedSizingPoliciesForItem:(id)a3 inAppLayout:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  unint64_t v12;
  void *v13;
  unint64_t v14;

  v6 = a3;
  v7 = a4;
  +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "bundleIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "applicationWithBundleIdentifier:", v9);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  if (v10)
  {
    objc_msgSend(v7, "layoutAttributesForItem:", v6);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = -[SBFluidSwitcherViewController _windowManagementStyle](self, "_windowManagementStyle");
    -[SBSceneManager displayIdentity](self->_sceneManager, "displayIdentity");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v10, "supportedSizingPoliciesForSwitcherWindowManagementStyle:displayIdentity:contentOrientation:containerOrientation:", v12, v13, objc_msgSend(v11, "contentOrientation"), -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation"));

  }
  else
  {
    v14 = 4;
  }

  return v14;
}

- (unint64_t)supportedContentInterfaceOrientationsForItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  unint64_t v7;

  v4 = a3;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "switcherContentController:deviceApplicationSceneHandleForDisplayItem:", self, v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = objc_msgSend(v6, "supportedInterfaceOrientations");
  return v7;
}

- (unint64_t)appLayoutsGenerationCount
{
  return self->_appLayoutsGenerationCount;
}

- (unint64_t)continuousExposeIdentifiersGenerationCount
{
  return self->_continuousExposeIdentifiersGenerationCount;
}

- (unint64_t)newContinuousExposeIdentifiersGenerationCount
{
  unint64_t v2;

  v2 = self->_continuousExposeIdentifiersGenerationCount + 1;
  self->_continuousExposeIdentifiersGenerationCount = v2;
  return v2;
}

- (double)splitViewInnerCornerRadius
{
  void *v4;
  double v5;
  double v6;

  -[SBFluidSwitcherViewController displayCornerRadius](self, "displayCornerRadius");
  if ((BSFloatIsZero() & 1) != 0)
    return 0.0;
  -[SBFluidSwitcherViewController medusaSettings](self, "medusaSettings");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "cornerRadiusForInnerCorners");
  v6 = v5;

  return v6;
}

- (unint64_t)numberOfRowsInGridSwitcher
{
  return 2;
}

- (id)switcherDimmingViewLayoutElement
{
  return self->_dimmingViewLayoutElement;
}

- (id)switcherBackdropLayoutElement
{
  return self->_backdropLayoutElement;
}

- (id)slideOverTongueLayoutElement
{
  return self->_slideOverTongueLayoutElement;
}

- (id)bezelEffectsLayoutElement
{
  return self->_bezelEffectsLayoutElement;
}

- (id)continuousExposeStripTongueBackdropCaptureLayoutElement
{
  return self->_continuousExposeStripTongueBackdropCaptureLayoutElement;
}

- (double)statusBarHeight
{
  if (statusBarHeight_onceToken != -1)
    dispatch_once(&statusBarHeight_onceToken, &__block_literal_global_184);
  return *(double *)&statusBarHeight___statusBarHeight;
}

uint64_t __48__SBFluidSwitcherViewController_statusBarHeight__block_invoke()
{
  uint64_t result;
  uint64_t v1;

  result = objc_msgSend(MEMORY[0x1E0CEA9E8], "heightForStyle:orientation:", 0, 1);
  statusBarHeight___statusBarHeight = v1;
  return result;
}

- (double)floatingDockPresentedHeight
{
  double result;

  if (!-[SBFluidSwitcherViewController isFloatingDockFullyPresented](self, "isFloatingDockFullyPresented"))
    return 0.0;
  -[SBFluidSwitcherViewController floatingDockHeight](self, "floatingDockHeight");
  return result;
}

- (double)floatingDockViewTopMargin
{
  void *v2;
  double v3;
  double v4;

  -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "floatingDockViewTopMargin");
  v4 = v3;

  return v4;
}

- (BOOL)isFloatingDockFullyPresented
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isFloatingDockFullyPresented");

  return v3;
}

- (BOOL)isFloatingDockGesturePossible
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isGesturePossible");

  return v3;
}

- (double)shelfPresentedHeight
{
  void *v3;
  void *v4;
  double v5;
  void *v6;
  double v7;
  double v8;
  double v9;

  -[NSMutableDictionary allValues](self->_visibleShelves, "allValues");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "firstObject");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = 0.0;
  if (v4 && objc_msgSend(v4, "presented"))
  {
    objc_msgSend(v4, "view");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "frame");
    v8 = v7;
    -[SBFluidSwitcherViewController floatingDockPresentedHeight](self, "floatingDockPresentedHeight");
    v5 = v8 - v9;

  }
  return v5;
}

- (double)continuousExposeStripProgress
{
  double result;

  result = 1.0;
  if ((self->_continuousExposeStripsPresentationOptions & 1) == 0)
    return 0.0;
  return result;
}

- (BOOL)requireStripContentsInViewHierarchy
{
  return 0;
}

- (BOOL)homeScreenHasOpenFolderInLocation:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "hasOpenFolderInLocation:", v4);

  return v6;
}

- (BOOL)homeScreenHasModalLibraryOpenInForeground
{
  void *v2;
  void *v3;
  char v4;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "modalLibraryController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isPresentingLibraryInForeground");

  return v4;
}

- (BOOL)isShowingSpotlightOrTodayView
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isShowingSpotlightOrLeadingCustomView");

  return v3;
}

- (BOOL)isLayoutRoleContentReady:(int64_t)a3 inAppLayout:(id)a4
{
  void *v5;
  void *v6;
  void *v7;
  int v8;

  objc_msgSend(a4, "leafAppLayoutForRole:", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
    v8 = objc_msgSend(v6, "isContentUpdating") ^ 1;
  else
    LOBYTE(v8) = 1;

  return v8;
}

- (id)currentVelocityValueForVisibleAppLayout:(id)a3 key:(id)a4
{
  NSMutableDictionary *visibleItemContainers;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  visibleItemContainers = self->_visibleItemContainers;
  v6 = a4;
  objc_msgSend(a3, "anyLeafAppLayout");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](visibleItemContainers, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "_velocityForKey:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)homeGestureSettings
{
  return +[SBHomeGestureDomain rootSettings](SBHomeGestureDomain, "rootSettings");
}

- (id)entityRemovalSettings
{
  void *v2;
  void *v3;

  +[SBSystemAnimationDomain rootSettings](SBSystemAnimationDomain, "rootSettings");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "entityRemovalAnimationSettings");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (id)siriSettings
{
  return (id)objc_msgSend(MEMORY[0x1E0DA9EE0], "rootSettings");
}

- (id)layoutRestrictionInfoForItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBFluidSwitcherViewController displayItemLayoutAttributesCalculator](self, "displayItemLayoutAttributesCalculator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "layoutRestrictionInfoForItem:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (int64_t)numberOfVisibleCards
{
  void *v2;
  int64_t v3;

  -[SBFluidSwitcherViewController visibleItemContainers](self, "visibleItemContainers");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "count");

  return v3;
}

- (int64_t)numberOfHiddenAppLayoutsForBundleIdentifier:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  int64_t v7;
  void *v8;

  v4 = a3;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 2) & 1) != 0)
  {
    objc_msgSend(v5, "switcherContentController:hiddenAppLayoutsForBundleIdentifier:", self, v4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v8, "count");

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (id)continuousExposeIdentifiersInSwitcher
{
  return self->_continuousExposeIdentifiersInSwitcher;
}

- (id)continuousExposeIdentifiersInStrip
{
  return self->_continuousExposeIdentifiersInStrip;
}

- (id)appLayoutsForContinuousExposeIdentifier:(id)a3
{
  id v4;
  id v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  int v14;
  NSDictionary *appLayoutsForContinuousExposeIdentifiers;
  void *v16;
  void *v17;
  NSDictionary *v18;
  NSDictionary *v19;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  id v25;
  id v26;
  _BYTE v27[128];
  uint64_t v28;

  v28 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[NSDictionary objectForKey:](self->_appLayoutsForContinuousExposeIdentifiers, "objectForKey:", v4);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    v6 = objc_alloc_init(MEMORY[0x1E0C99DE8]);
    v21 = 0u;
    v22 = 0u;
    v23 = 0u;
    v24 = 0u;
    -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v22;
      do
      {
        for (i = 0; i != v9; ++i)
        {
          if (*(_QWORD *)v22 != v10)
            objc_enumerationMutation(v7);
          v12 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * i);
          objc_msgSend(v12, "continuousExposeIdentifier");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          v14 = objc_msgSend(v13, "isEqualToString:", v4);

          if (v14)
            objc_msgSend(v6, "addObject:", v12);
        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v27, 16);
      }
      while (v9);
    }

    if (self->_appLayoutsForContinuousExposeIdentifiers)
      appLayoutsForContinuousExposeIdentifiers = self->_appLayoutsForContinuousExposeIdentifiers;
    else
      appLayoutsForContinuousExposeIdentifiers = (NSDictionary *)MEMORY[0x1E0C9AA70];
    v25 = v4;
    v26 = v6;
    v16 = (void *)MEMORY[0x1E0C99D80];
    v5 = v6;
    objc_msgSend(v16, "dictionaryWithObjects:forKeys:count:", &v26, &v25, 1);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSDictionary bs_dictionaryByAddingEntriesFromDictionary:](appLayoutsForContinuousExposeIdentifiers, "bs_dictionaryByAddingEntriesFromDictionary:", v17);
    v18 = (NSDictionary *)objc_claimAutoreleasedReturnValue();
    v19 = self->_appLayoutsForContinuousExposeIdentifiers;
    self->_appLayoutsForContinuousExposeIdentifiers = v18;

  }
  return v5;
}

- (BOOL)anyHighlightedAppLayoutsForContinuousExposeIdentifier:(id)a3
{
  id v4;
  void *v5;
  id v6;
  char v7;
  _QWORD v9[4];
  id v10;

  v4 = a3;
  -[NSMutableDictionary allValues](self->_visibleItemContainers, "allValues");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __87__SBFluidSwitcherViewController_anyHighlightedAppLayoutsForContinuousExposeIdentifier___block_invoke;
  v9[3] = &unk_1E8E9E388;
  v10 = v4;
  v6 = v4;
  v7 = objc_msgSend(v5, "bs_containsObjectPassingTest:", v9);

  return v7;
}

uint64_t __87__SBFluidSwitcherViewController_anyHighlightedAppLayoutsForContinuousExposeIdentifier___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  uint64_t v6;

  v3 = a2;
  if (objc_msgSend(v3, "isHighlightedFromCursorHover"))
  {
    objc_msgSend(v3, "appLayout");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "continuousExposeIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "isEqualToString:", *(_QWORD *)(a1 + 32));

  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (BOOL)isFloatingDockSupported
{
  return +[SBFloatingDockController isFloatingDockSupported](SBFloatingDockController, "isFloatingDockSupported");
}

- (BOOL)isStudyLogEnabled
{
  void *v2;
  char v3;

  objc_msgSend(MEMORY[0x1E0DAFEC0], "sharedInstance");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEnabled");

  return v3;
}

- (BOOL)isMedusaCapable
{
  void *v2;
  char v3;

  +[SBWorkspace mainWorkspace](SBWorkspace, "mainWorkspace");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isMedusaCapable");

  return v3;
}

- (BOOL)isSplitViewSupported
{
  return -[SBFluidSwitcherViewController _windowManagementStyle](self, "_windowManagementStyle") != 0;
}

- (BOOL)isInMedusaCapableSpace
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  char v6;

  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layoutState");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "elementWithRole:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
    v6 = objc_msgSend(v4, "supportsLayoutRole:", 2);
  else
    v6 = 1;

  return v6;
}

- (BOOL)prefersStripHiddenAndDisabled
{
  int v2;

  v2 = -[SBFluidSwitcherViewController prefersStripHidden](self, "prefersStripHidden");
  if (v2)
    LOBYTE(v2) = SBFIsChamoisStripDisabledWhenHiddenAvailable();
  return v2;
}

- (BOOL)isSoftwareKeyboardVisible
{
  return self->_isSoftwareKeyboardVisible;
}

- (BOOL)isMedusaHostedKeyboardVisible
{
  return self->_isMedusaHostedKeyboardVisible;
}

- (id)appLayoutsToEnsureExistForMainTransitionEvent:(id)a3
{
  return (id)MEMORY[0x1E0C9AA60];
}

- (id)homeScreenIconGridSizeClassForAppLayout:(id)a3
{
  id v4;
  void *v5;
  void *v6;

  v4 = a3;
  -[SBFluidSwitcherViewController _iconZoomContextProvider](self, "_iconZoomContextProvider");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "iconGridSizeClassForAppLayout:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  return v6;
}

- (CGRect)shelfItemFrameForAppLayout:(id)a3 inShelf:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  CGRect result;

  v6 = a3;
  -[NSMutableDictionary objectForKey:](self->_visibleShelves, "objectForKey:", a4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "itemFrameForAppLayout:", v6);
    v10 = v9;
    v12 = v11;
    v14 = v13;
    v16 = v15;
    objc_msgSend(v8, "view");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "convertRect:toView:", self->_contentView, v10, v12, v14, v16);
    v19 = v18;
    v21 = v20;
    v23 = v22;
    v25 = v24;

  }
  else
  {
    v19 = *MEMORY[0x1E0C9D648];
    v21 = *(double *)(MEMORY[0x1E0C9D648] + 8);
    v23 = *(double *)(MEMORY[0x1E0C9D648] + 16);
    v25 = *(double *)(MEMORY[0x1E0C9D648] + 24);
  }

  v26 = v19;
  v27 = v21;
  v28 = v23;
  v29 = v25;
  result.size.height = v29;
  result.size.width = v28;
  result.origin.y = v27;
  result.origin.x = v26;
  return result;
}

- (double)shelfItemScaleForAppLayout:(id)a3 inShelf:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;

  v6 = a3;
  -[NSMutableDictionary objectForKey:](self->_visibleShelves, "objectForKey:", a4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "itemScaleForAppLayout:", v6);
    v10 = v9;
  }
  else
  {
    v10 = 0.0;
  }

  return v10;
}

- (double)shelfItemCornerRadiusForAppLayout:(id)a3 inShelf:(id)a4
{
  id v6;
  void *v7;
  void *v8;
  double v9;
  double v10;

  v6 = a3;
  -[NSMutableDictionary objectForKey:](self->_visibleShelves, "objectForKey:", a4);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    objc_msgSend(v7, "itemCornerRadiusForAppLayout:", v6);
    v10 = v9;
  }
  else
  {
    v10 = 0.0;
  }

  return v10;
}

- (CGRect)preferredFrameForLayoutRole:(int64_t)a3 inAppLayout:(id)a4 bounds:(CGRect)a5 interfaceOrientation:(int64_t)a6
{
  CGFloat height;
  CGFloat width;
  double y;
  double x;
  id v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGRect result;

  height = a5.size.height;
  width = a5.size.width;
  y = a5.origin.y;
  x = a5.origin.x;
  v13 = a4;
  if (objc_msgSend(v13, "environment") != 3 && objc_msgSend(v13, "environment") != 2)
  {
    -[SBFluidSwitcherViewController _frameForItemWithRole:inMainAppLayout:interfaceOrientation:](self, "_frameForItemWithRole:inMainAppLayout:interfaceOrientation:", a3, v13, a6);
    width = v14;
    height = v15;
    x = x + v16;
    y = y + v17;
  }

  v18 = x;
  v19 = y;
  v20 = width;
  v21 = height;
  result.size.height = v21;
  result.size.width = v20;
  result.origin.y = v19;
  result.origin.x = v18;
  return result;
}

- (double)switcherWindowLevel
{
  return *MEMORY[0x1E0CEBE28] + 5.0;
}

- (double)floatingDockWindowLevel
{
  return *MEMORY[0x1E0CEBE28] + 5.0 + 20.0;
}

- (double)homeScreenWindowLevel
{
  return *MEMORY[0x1E0CEBE28] + -2.0;
}

- (void)setPipViewMorphAnimator:(id)a3
{
  id WeakRetained;
  id obj;

  obj = a3;
  WeakRetained = objc_loadWeakRetained((id *)&self->_pipViewMorphAnimator);

  if (WeakRetained != obj)
  {
    objc_storeWeak((id *)&self->_pipViewMorphAnimator, obj);
    objc_msgSend(obj, "setDelegate:", self);
    objc_msgSend(obj, "addObserver:", self);
  }

}

- (double)morphToPIPSourceAlpha
{
  return 1.0;
}

- (CGRect)morphToPIPClippingFrame
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  CGRect result;

  -[SBFluidSwitcherViewController pipViewMorphAnimator](self, "pipViewMorphAnimator");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "sourceClippingFrame");
    v5 = v4;
    v7 = v6;
    v9 = v8;
    v11 = v10;
  }
  else
  {
    v5 = *MEMORY[0x1E0C9D628];
    v7 = *(double *)(MEMORY[0x1E0C9D628] + 8);
    v9 = *(double *)(MEMORY[0x1E0C9D628] + 16);
    v11 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  }

  v12 = v5;
  v13 = v7;
  v14 = v9;
  v15 = v11;
  result.size.height = v15;
  result.size.width = v14;
  result.origin.y = v13;
  result.origin.x = v12;
  return result;
}

- (double)morphToPIPClippingCornerRadius
{
  void *v2;
  double v3;
  double v4;

  -[SBFluidSwitcherViewController pipViewMorphAnimator](self, "pipViewMorphAnimator");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "sourceClippingCornerRadius");
  v4 = v3;

  return v4;
}

- (CGPoint)morphToPIPTargetCenter
{
  void *v2;
  void *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  CGPoint result;

  -[SBFluidSwitcherViewController pipViewMorphAnimator](self, "pipViewMorphAnimator");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "sourceFinalCenter");
    v5 = v4;
    v7 = v6;
  }
  else
  {
    v5 = *MEMORY[0x1E0C9D538];
    v7 = *(double *)(MEMORY[0x1E0C9D538] + 8);
  }

  v8 = v5;
  v9 = v7;
  result.y = v9;
  result.x = v8;
  return result;
}

- (double)morphToPIPTargetScale
{
  void *v2;
  void *v3;
  double v4;
  double v5;

  -[SBFluidSwitcherViewController pipViewMorphAnimator](self, "pipViewMorphAnimator");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
  {
    objc_msgSend(v2, "sourceFinalScale");
    v5 = v4;
  }
  else
  {
    v5 = 0.0;
  }

  return v5;
}

- (BOOL)isSystemApertureTransitionTargetForSceneIdentifier:(id)a3 bundleIdentifier:(id)a4 isPortrait:(BOOL)a5
{
  void *v7;
  id v8;
  id v9;
  void *v10;
  char v11;
  BOOL v12;

  if (!a4)
    return 0;
  v7 = (void *)SBApp;
  v8 = a4;
  v9 = a3;
  objc_msgSend(v7, "systemApertureControllerForMainDisplay");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "isTransitionTargetForSceneIdentifier:bundleIdentifier:", v9, v8);

  v12 = v11 & a5;
  return v12;
}

- (CGRect)systemApertureDefaultFrame
{
  void *v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGRect result;

  objc_msgSend((id)SBApp, "systemApertureControllerForMainDisplay");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController view](self, "view");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "defaultIslandFrameInCoordinateSpace:", v4);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  v13 = v6;
  v14 = v8;
  v15 = v10;
  v16 = v12;
  result.size.height = v16;
  result.size.width = v15;
  result.origin.y = v14;
  result.origin.x = v13;
  return result;
}

- (CGPoint)scrollableQueryModifier:(id)a3 contentOffsetVelocityConsideringNextContentOffset:(CGPoint)a4
{
  double v4;
  double v5;
  CGPoint result;

  -[SBAppSwitcherScrollView contentOffsetVelocityConsideringNextContentOffset:](self->_scrollView, "contentOffsetVelocityConsideringNextContentOffset:", a3, a4.x, a4.y);
  result.y = v5;
  result.x = v4;
  return result;
}

- (CGPoint)scrollableQueryModifier:(id)a3 convertScrollViewPointToContainerViewCoordinateSpace:(CGPoint)a4
{
  double y;
  double x;
  SBAppSwitcherScrollView *scrollView;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGPoint result;

  y = a4.y;
  x = a4.x;
  scrollView = self->_scrollView;
  -[SBFluidSwitcherViewController view](self, "view", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBAppSwitcherScrollView convertPoint:toView:](scrollView, "convertPoint:toView:", v7, x, y);
  v9 = v8;
  v11 = v10;

  v12 = v9;
  v13 = v11;
  result.y = v13;
  result.x = v12;
  return result;
}

- (CGAffineTransform)transformForCardUnderSheetForBoundsSize:(SEL)a3
{
  double height;
  double width;
  uint64_t v8;
  __int128 v9;
  void *v10;
  void *v11;
  CGAffineTransform *result;
  __int128 v13;
  __int128 v14;
  __int128 v15;

  height = a4.height;
  width = a4.width;
  v8 = MEMORY[0x1E0C9BAA8];
  v9 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
  *(_OWORD *)&retstr->a = *MEMORY[0x1E0C9BAA8];
  *(_OWORD *)&retstr->c = v9;
  *(_OWORD *)&retstr->tx = *(_OWORD *)(v8 + 32);
  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  if ((*((_BYTE *)&self->_delegateRespondsTo + 3) & 1) != 0)
  {
    if (v10)
    {
      objc_msgSend(v10, "switcherContentController:transformForCardUnderSheetForBoundsSize:", self, width, height);
    }
    else
    {
      v14 = 0u;
      v15 = 0u;
      v13 = 0u;
    }
    *(_OWORD *)&retstr->a = v13;
    *(_OWORD *)&retstr->c = v14;
    *(_OWORD *)&retstr->tx = v15;
  }

  return result;
}

- (id)leafAppLayoutForKeyboardFocusedScene
{
  return (id)-[SBSwitcherLiveContentOverlayCoordinating appLayoutForKeyboardFocusedScene](self->_liveContentOverlayCoordinator, "appLayoutForKeyboardFocusedScene");
}

- (int64_t)userInterfaceStyle
{
  void *v2;
  int64_t v3;

  -[SBFluidSwitcherViewController traitCollection](self, "traitCollection");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "userInterfaceStyle");

  return v3;
}

- (double)presentationValueForAnimatableProperty:(id)a3
{
  void *v3;
  void *v4;
  double v5;
  double v6;

  -[NSMutableDictionary valueForKey:](self->_animatableProperties, "valueForKey:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "presentationValue");
    v6 = v5;
  }
  else
  {
    v6 = 0.0;
  }

  return v6;
}

- (id)foregroundAppLayouts
{
  return self->_foregroundingAppLayouts;
}

- (char)jetsamModeForAppLayout:(id)a3
{
  return -[SBSwitcherModifier jetsamModeForAppLayout:](self->_rootModifier, "jetsamModeForAppLayout:", a3);
}

- (char)activityModeForAppLayout:(id)a3
{
  return -[SBSwitcherModifier activityModeForAppLayout:](self->_rootModifier, "activityModeForAppLayout:", a3);
}

- (void)sceneLayoutTransitionWillStartWithTransitionContext:(id)a3
{
  id v4;

  objc_msgSend(a3, "layoutState");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _updateForegroundAppLayoutsWithNewLayoutState:](self, "_updateForegroundAppLayoutsWithNewLayoutState:", v4);

}

- (BOOL)isDisplayEmbedded
{
  void *v3;
  void *v4;
  char v5;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 2) & 0x80) != 0)
    v5 = objc_msgSend(v3, "isDisplayEmbeddedForSwitcherContentController:", self);
  else
    v5 = 1;

  return v5;
}

- (id)appLayoutByBringingItemToFront:(id)a3 inAppLayout:(id)a4
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v16;

  v7 = a3;
  v8 = a4;
  v9 = v8;
  if (!v7 || (objc_msgSend(v8, "containsItem:", v7) & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v16 = (void *)objc_claimAutoreleasedReturnValue();

  }
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "nextDisplayItemInteractionTimeForSwitcherContentController:", self);

  objc_msgSend(v9, "layoutAttributesForItem:", v7);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "attributesByModifyingLastInteractionTime:", v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "appLayoutByModifyingLayoutAttributes:forItem:", v13, v7);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  return v14;
}

- (id)appLayoutOnStage
{
  return 0;
}

- (id)proposedAppLayoutsForWindowDrag
{
  void *v3;
  void *v4;
  void *v5;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 3) & 4) != 0)
    objc_msgSend(v3, "proposedAppLayoutsForWindowDragForSwitcherContentController:", self);
  else
    objc_msgSend(MEMORY[0x1E0C99E60], "set");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (unint64_t)assistantPresentationState
{
  return self->_assistantPresentationState;
}

- (unint64_t)assistantModality
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  unint64_t v6;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "assistantController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "presentationContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  v5 = objc_msgSend(v4, "modality");
  if (v5 == 1)
    v6 = 1;
  else
    v6 = 2 * (v5 == 2);

  return v6;
}

- (BOOL)isAssistantKeyboardVisible
{
  void *v2;
  void *v3;
  void *v4;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "assistantController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "presentationContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  LOBYTE(v2) = objc_msgSend(v4, "isKeyboardVisible");
  return (char)v2;
}

- (BOOL)isSystemAssistantExperienceEnabled
{
  void *v2;
  void *v3;
  char v4;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "assistantController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isSystemAssistantExperienceEnabled");

  return v4;
}

- (BOOL)isSystemAssistantExperiencePersistentSiriEnabled
{
  void *v2;
  void *v3;
  char v4;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "assistantController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isSystemAssistantExperiencePersistentSiriEnabled");

  return v4;
}

- (void)handleFluidSwitcherGestureManager:(id)a3 didBeginGesture:(id)a4
{
  id v7;
  void *v8;
  void *v9;
  char v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  NSString *debugName;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  _QWORD v28[5];

  v27 = a3;
  v7 = a4;
  -[SBFluidSwitcherViewController _gestureManager](self, "_gestureManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v21, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1733, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("gesture != nil"));

  }
  if ((objc_msgSend(v27, "isEqual:", v8) & 1) == 0)
  {
    objc_msgSend(v7, "gestureEvent");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    v10 = objc_msgSend(v9, "isWindowDragGestureEvent");

    if ((v10 & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v11, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1734, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("[gestureManager isEqual:ourGestureManager] || [[gesture gestureEvent] isWindowDragGestureEvent]"));

    }
  }
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "activeGesture");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    debugName = self->_debugName;
    SBStringForFluidSwitcherGestureType(objc_msgSend(v7, "type"));
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "activeGesture");
    v25 = (void *)objc_claimAutoreleasedReturnValue();
    SBStringForFluidSwitcherGestureType(objc_msgSend(v25, "type"));
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v22, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1737, CFSTR("[%@] Only one gesture at a time. Can't begin %@ while %@ is still active"), debugName, v24, v26);

  }
  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "selectedAppLayout");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _spaceContainingAppLayout:](self, "_spaceContainingAppLayout:", v15);
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  if (v16)
  {
    -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v17, "shouldAddAppLayoutToFront:whenBeginningGestureOfType:layoutContext:", v16, objc_msgSend(v7, "type"), v17)&& (*(_BYTE *)&self->_delegateRespondsTo & 1) != 0)
    {
      objc_msgSend(v14, "switcherContentController:bringAppLayoutToFront:", self, v16);
    }

  }
  if (!-[NSMutableSet count](self->_systemApertureContentSuppressionAssertionsForGesture, "count"))
  {
    objc_msgSend(v7, "selectedAppLayout");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v28[0] = MEMORY[0x1E0C809B0];
    v28[1] = 3221225472;
    v28[2] = __83__SBFluidSwitcherViewController_handleFluidSwitcherGestureManager_didBeginGesture___block_invoke;
    v28[3] = &unk_1E8EA43C0;
    v28[4] = self;
    objc_msgSend(v18, "enumerate:", v28);

  }
  -[SBFluidSwitcherViewController _cancelWindowMorphingAnimation](self, "_cancelWindowMorphingAnimation");
  objc_msgSend(v12, "setActiveGesture:", v7);
  objc_msgSend(v7, "gestureEvent");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _adjustedGestureEventForGestureEvent:fromGestureManager:](self, "_adjustedGestureEventForGestureEvent:fromGestureManager:", v19, v27);
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v20);
  objc_msgSend(MEMORY[0x1E0CD28B0], "setFrameStallSkipRequest:", 1);

}

void __83__SBFluidSwitcherViewController_handleFluidSwitcherGestureManager_didBeginGesture___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a3;
  if (!objc_msgSend(v8, "type"))
  {
    objc_msgSend(*(id *)(a1 + 32), "_gestureManager");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "bundleIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "uniqueIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "acquireSystemApertureSuppressionAssertionForBundleIdentifier:sceneIdentifier:", v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1552), "addObject:", v7);

  }
}

- (void)handleFluidSwitcherGestureManager:(id)a3 didUpdateGesture:(id)a4
{
  id v7;
  void *v8;
  void *v9;
  void *v10;
  char v11;
  void *v12;
  char v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;

  v19 = a3;
  v7 = a4;
  -[SBFluidSwitcherViewController _gestureManager](self, "_gestureManager");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v7)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1782, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("gesture != nil"));

  }
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "activeGesture");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v7, "isEqual:", v10);

  if ((v11 & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1783, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("[gesture isEqual:[[self layoutContext] activeGesture]]"));

  }
  if ((objc_msgSend(v19, "isEqual:", v8) & 1) == 0)
  {
    objc_msgSend(v7, "gestureEvent");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "isWindowDragGestureEvent");

    if ((v13 & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1784, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("[gestureManager isEqual:ourGestureManager] || [[gesture gestureEvent] isWindowDragGestureEvent]"));

    }
  }
  objc_msgSend(v7, "gestureEvent");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _adjustedGestureEventForGestureEvent:fromGestureManager:](self, "_adjustedGestureEventForGestureEvent:fromGestureManager:", v15, v19);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v16);

}

- (void)handleFluidSwitcherGestureManager:(id)a3 didEndGesture:(id)a4
{
  id v7;
  id v8;
  void *v9;
  void *v10;
  void *v11;
  char v12;
  void *v13;
  char v14;
  void *v15;
  void *v16;
  NSMutableSet *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  uint64_t v35;

  v35 = *MEMORY[0x1E0C80C00];
  v7 = a3;
  v8 = a4;
  -[SBFluidSwitcherViewController _gestureManager](self, "_gestureManager");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v8)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1795, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("gesture != nil"));

  }
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "activeGesture");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v8, "isEqual:", v11);

  if ((v12 & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v29, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1796, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("[gesture isEqual:[[self layoutContext] activeGesture]]"));

  }
  if ((objc_msgSend(v7, "isEqual:", v9) & 1) == 0)
  {
    objc_msgSend(v8, "gestureEvent");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = objc_msgSend(v13, "isWindowDragGestureEvent");

    if ((v14 & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1797, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("[gestureManager isEqual:ourGestureManager] || [[gesture gestureEvent] isWindowDragGestureEvent]"));

    }
  }
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "setActiveGesture:", 0);

  -[UIView setHidden:](self->_hitTestBlockerView, "setHidden:", 1);
  v32 = 0u;
  v33 = 0u;
  v30 = 0u;
  v31 = 0u;
  v17 = self->_systemApertureContentSuppressionAssertionsForGesture;
  v18 = -[NSMutableSet countByEnumeratingWithState:objects:count:](v17, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v31;
    do
    {
      v21 = 0;
      do
      {
        if (*(_QWORD *)v31 != v20)
          objc_enumerationMutation(v17);
        objc_msgSend(*(id *)(*((_QWORD *)&v30 + 1) + 8 * v21++), "invalidate");
      }
      while (v19 != v21);
      v19 = -[NSMutableSet countByEnumeratingWithState:objects:count:](v17, "countByEnumeratingWithState:objects:count:", &v30, v34, 16);
    }
    while (v19);
  }

  -[NSMutableSet removeAllObjects](self->_systemApertureContentSuppressionAssertionsForGesture, "removeAllObjects");
  objc_msgSend(v8, "gestureEvent");
  v22 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _adjustedGestureEventForGestureEvent:fromGestureManager:](self, "_adjustedGestureEventForGestureEvent:fromGestureManager:", v22, v7);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v23);
  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "selectedAppLayout");
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _spaceContainingAppLayout:](self, "_spaceContainingAppLayout:", v25);
  v26 = (void *)objc_claimAutoreleasedReturnValue();

  if (v26)
  {
    -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v27, "shouldAddAppLayoutToFront:whenEndingGestureOfType:layoutContext:", v26, objc_msgSend(v8, "type"), v27)&& (*(_BYTE *)&self->_delegateRespondsTo & 1) != 0)
    {
      objc_msgSend(v24, "switcherContentController:bringAppLayoutToFront:", self, v26);
    }

  }
}

- (id)_spaceContainingAppLayout:(id)a3
{
  id v4;
  id v5;
  void *v6;
  int v7;

  v4 = a3;
  -[NSDictionary objectForKey:](self->_leafAppLayoutsToRecencyAppLayouts, "objectForKey:", v4);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  if (!v5)
  {
    -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = objc_msgSend(v6, "containsObject:", v4);

    if (v7)
      v5 = v4;
    else
      v5 = 0;
  }

  return v5;
}

- (void)handleTapToBringItemContainerForward:(id)a3
{
  SBFluidSwitcherContentView *contentView;
  id v5;
  uint64_t v6;
  id v7;

  contentView = self->_contentView;
  v5 = a3;
  objc_msgSend(v5, "locationInView:", contentView);
  -[SBFluidSwitcherViewController _itemContainerAtLocation:environment:](self, "_itemContainerAtLocation:environment:", 0);
  v7 = (id)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "modifierFlags");

  -[SBFluidSwitcherViewController didSelectContainer:modifierFlags:](self, "didSelectContainer:modifierFlags:", v7, v6);
}

- (void)handleClickDownToBringItemContainerForward:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  id v9;

  v9 = a3;
  objc_msgSend(v9, "locationInView:", self->_contentView);
  -[SBFluidSwitcherViewController _itemContainerAtLocation:environment:](self, "_itemContainerAtLocation:environment:", 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherLayoutContext layoutState](self->_layoutContext, "layoutState");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "appLayout");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "appLayout");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v6, "containsAnyItemFromAppLayout:", v7);

  if (v8)
    -[SBFluidSwitcherViewController didSelectContainer:modifierFlags:](self, "didSelectContainer:modifierFlags:", v4, objc_msgSend(v9, "modifierFlags"));

}

- (void)handleContinuousExposeHoverGesture:(id)a3
{
  int v4;
  void *v5;
  SBFluidSwitcherContentView *contentView;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  SBHoverSwitcherModifierEvent *v14;
  id v15;

  v15 = a3;
  v4 = -[SBSwitcherModifier wantsContinuousExposeHoverGesture](self->_rootModifier, "wantsContinuousExposeHoverGesture");
  v5 = v15;
  if (v4)
  {
    contentView = self->_contentView;
    objc_msgSend(v15, "view");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "locationInView:", v7);
    -[SBFluidSwitcherContentView convertPoint:fromView:](contentView, "convertPoint:fromView:", 0);
    v9 = v8;
    v11 = v10;

    v12 = objc_msgSend(v15, "state");
    if ((unint64_t)(v12 - 1) > 3)
      v13 = 1;
    else
      v13 = qword_1D0E88C40[v12 - 1];
    v14 = -[SBHoverSwitcherModifierEvent initWithPhase:position:]([SBHoverSwitcherModifierEvent alloc], "initWithPhase:position:", v13, v9, v11);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v14);

    v5 = v15;
  }

}

- (void)historianModifier:(id)a3 didRecordEntry:(id)a4
{
  void *v6;
  id v7;

  v7 = a4;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 1880, CFSTR("Root modifier should be SBHistorianSwitcherModifier"));

  }
  -[SBFluidSwitcherModifierTimelineController addEntry:](self->_modifierTimelineController, "addEntry:", v7);

}

- (BOOL)historianModifier:(id)a3 shouldRecordEvent:(id)a4
{
  id v5;
  BOOL v6;

  v5 = a4;
  v6 = -[SBFluidSwitcherViewController isShowingModifierTimeline](self, "isShowingModifierTimeline")
    && -[SBFluidSwitcherViewController _shouldLogSwitcherModifierEvent:](self, "_shouldLogSwitcherModifierEvent:", v5)
    && -[SBFluidSwitcherModifierTimelineController wantsEvent:](self->_modifierTimelineController, "wantsEvent:", v5);

  return v6;
}

- (void)setDelegate:(id)a3
{
  id WeakRetained;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  id obj;

  obj = a3;
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);

  if (WeakRetained != obj)
  {
    objc_storeWeak((id *)&self->_delegate, obj);
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFFFE | objc_opt_respondsToSelector() & 1);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v5 = 2;
    else
      v5 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFFFD | v5);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v6 = 4;
    else
      v6 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFFFB | v6);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v7 = 8;
    else
      v7 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFFF7 | v7);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v8 = 16;
    else
      v8 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFFEF | v8);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v9 = 32;
    else
      v9 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFFDF | v9);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v10 = 64;
    else
      v10 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFFBF | v10);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v11 = 128;
    else
      v11 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFF7F | v11);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v12 = 256;
    else
      v12 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFEFF | v12);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v13 = 512;
    else
      v13 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFDFF | v13);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v14 = 1024;
    else
      v14 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFFBFF | v14);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v15 = 2048;
    else
      v15 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFF7FF | v15);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v16 = 4096;
    else
      v16 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFEFFF | v16);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v17 = 0x2000;
    else
      v17 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFDFFF | v17);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v18 = 0x4000;
    else
      v18 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFFBFFF | v18);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v19 = 0x8000;
    else
      v19 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFF7FFF | v19);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v20 = 0x10000;
    else
      v20 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFEFFFF | v20);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v21 = 0x20000;
    else
      v21 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFDFFFF | v21);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v22 = 0x40000;
    else
      v22 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFFBFFFF | v22);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v23 = 0x80000;
    else
      v23 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFF7FFFF | v23);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v24 = 0x100000;
    else
      v24 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFEFFFFF | v24);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v25 = 0x200000;
    else
      v25 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFDFFFFF | v25);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v26 = 0x400000;
    else
      v26 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFFBFFFFF | v26);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v27 = 0x800000;
    else
      v27 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFF7FFFFF | v27);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v28 = 0x1000000;
    else
      v28 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFEFFFFFF | v28);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v29 = 0x2000000;
    else
      v29 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFDFFFFFF | v29);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v30 = 0x4000000;
    else
      v30 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xFBFFFFFF | v30);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v31 = 0x8000000;
    else
      v31 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xF7FFFFFF | v31);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v32 = 0x10000000;
    else
      v32 = 0;
    self->_delegateRespondsTo = ($7EE821BD319585819EBA76872E177884)(*(_DWORD *)&self->_delegateRespondsTo & 0xEFFFFFFF | v32);
  }

}

- (void)setDataSource:(id)a3
{
  id WeakRetained;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  id obj;

  obj = a3;
  WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);

  if (WeakRetained != obj)
  {
    objc_storeWeak((id *)&self->_dataSource, obj);
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFFFE | objc_opt_respondsToSelector() & 1);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v5 = 2;
    else
      v5 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFFFD | v5);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v6 = 4;
    else
      v6 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFFFB | v6);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v7 = 8;
    else
      v7 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFFF7 | v7);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v8 = 16;
    else
      v8 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFFEF | v8);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v9 = 32;
    else
      v9 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFFDF | v9);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v10 = 64;
    else
      v10 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFFBF | v10);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v11 = 128;
    else
      v11 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFF7F | v11);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v12 = 256;
    else
      v12 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFEFF | v12);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v13 = 512;
    else
      v13 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFDFF | v13);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v14 = 1024;
    else
      v14 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFFBFF | v14);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v15 = 2048;
    else
      v15 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFF7FF | v15);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v16 = 4096;
    else
      v16 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFEFFF | v16);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v17 = 0x2000;
    else
      v17 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFDFFF | v17);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v18 = 0x4000;
    else
      v18 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFFBFFF | v18);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v19 = 0x8000;
    else
      v19 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFF7FFF | v19);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v20 = 0x10000;
    else
      v20 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFEFFFF | v20);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v21 = 0x20000;
    else
      v21 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFDFFFF | v21);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v22 = 0x40000;
    else
      v22 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFFBFFFF | v22);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v23 = 0x80000;
    else
      v23 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFF7FFFF | v23);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v24 = 0x100000;
    else
      v24 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFEFFFFF | v24);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v25 = 0x200000;
    else
      v25 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFDFFFFF | v25);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v26 = 0x400000;
    else
      v26 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFFBFFFFF | v26);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v27 = 0x800000;
    else
      v27 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFF7FFFFF | v27);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v28 = 0x1000000;
    else
      v28 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFEFFFFFF | v28);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v29 = 0x2000000;
    else
      v29 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFDFFFFFF | v29);
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v30 = 0x4000000;
    else
      v30 = 0;
    self->_dataSourceRespondsTo = ($7708D0751127115E4838D42B16D0F436)(*(_DWORD *)&self->_dataSourceRespondsTo & 0xFBFFFFFF | v30);
    -[SBFluidSwitcherViewController _rebuildCachedAdjustedAppLayouts](self, "_rebuildCachedAdjustedAppLayouts");
    -[SBFluidSwitcherViewController _updateSnapshotCacheReloadingForActiveInterfaceOrientationChange](self, "_updateSnapshotCacheReloadingForActiveInterfaceOrientationChange");
  }

}

- (void)setAsyncRenderingDisabled:(BOOL)a3
{
  if (self->_asyncRenderingDisabled != a3)
  {
    self->_asyncRenderingDisabled = a3;
    -[SBFluidSwitcherViewController _updateAsyncRenderingAndResizesHostedContext](self, "_updateAsyncRenderingAndResizesHostedContext");
  }
}

- (double)snapshotScaleForSceneHandle:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  void *v14;
  double v15;
  void *v16;
  int v17;
  _QWORD v19[4];
  id v20;

  v4 = a3;
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "displayItemRepresentation");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 3221225472;
    v19[2] = __61__SBFluidSwitcherViewController_snapshotScaleForSceneHandle___block_invoke;
    v19[3] = &unk_1E8E9DF78;
    v8 = v6;
    v20 = v8;
    objc_msgSend(v7, "bs_firstObjectPassingTest:", v19);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v10 = objc_msgSend(v9, "layoutRoleForItem:", v8);
    if (v9)
    {
      v11 = v10;
    }
    else
    {
      if (objc_msgSend(v5, "layoutRole") == 3)
        v13 = 2;
      else
        v13 = 1;
      SBAppLayoutGenericAppLayoutWithConfiguration(1);
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "appLayoutByModifyingEnvironment:", v13);
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      v11 = 1;
    }
    -[SBSwitcherModifier snapshotScaleForLayoutRole:inAppLayout:](self->_rootModifier, "snapshotScaleForLayoutRole:inAppLayout:", v11, v9);
    v12 = v15;
    objc_msgSend(v5, "application");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v16, "classicAppPhoneAppRunningOnPad");

    if (v17)
      v12 = v12 + v12;

  }
  else
  {
    v12 = 0.0;
  }

  return v12;
}

uint64_t __61__SBFluidSwitcherViewController_snapshotScaleForSceneHandle___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "containsItem:", *(_QWORD *)(a1 + 32));
}

- (void)acquiredViewController:(id)a3 forTransientOverlayAppLayout:(id)a4
{
  -[SBFluidSwitcherPageContentViewProvider acquiredViewController:forTransientOverlayAppLayout:](self->_pageContentViewProvider, "acquiredViewController:forTransientOverlayAppLayout:", a3, a4);
}

- (void)relinquishTransientOverlayViewController:(id)a3
{
  -[SBFluidSwitcherPageContentViewProvider relinquishTransientOverlayViewController:](self->_pageContentViewProvider, "relinquishTransientOverlayViewController:", a3);
}

id __104__SBFluidSwitcherViewController_shouldAddAppLayoutToFront_forTransitionWithContext_transitionCompleted___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;

  v3 = a2;
  v4 = objc_msgSend(v3, "preferredDisplayOrdinal");
  if (v4 == objc_msgSend(*(id *)(a1 + 32), "displayOrdinal"))
  {
    v5 = 0;
  }
  else
  {
    objc_msgSend(v3, "appLayoutByModifyingPreferredDisplayOrdinal:", objc_msgSend(*(id *)(a1 + 32), "displayOrdinal"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }

  return v5;
}

- (double)contentAspectRatio
{
  void *v2;
  double v3;
  double v4;
  double v5;

  -[SBFluidSwitcherViewController viewIfLoaded](self, "viewIfLoaded");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "bounds");
  if (v2)
    v5 = v3 / v4;
  else
    v5 = 0.0;

  return v5;
}

- (BOOL)shouldAcceleratedHomeButtonPressBegin
{
  return -[SBSwitcherModifier shouldAcceleratedHomeButtonPressBegin](self->_rootModifier, "shouldAcceleratedHomeButtonPressBegin");
}

- (BOOL)shouldRubberbandFullScreenHomeGrabberView
{
  return -[SBSwitcherModifier shouldRubberbandFullScreenHomeGrabberView](self->_rootModifier, "shouldRubberbandFullScreenHomeGrabberView");
}

- (BOOL)isStatusBarHiddenForAppLayout:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;

  v4 = a3;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "indexOfObject:", v4);

  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
    return 0;
  else
    return -[SBSwitcherModifier isContentStatusBarVisibleForIndex:](self->_rootModifier, "isContentStatusBarVisibleForIndex:", v6) ^ 1;
}

- (id)leadingStatusBarStyleRequest
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v13;

  if (-[NSMutableDictionary count](self->_liveContentOverlays, "count"))
  {
    -[SBFluidSwitcherViewController _leafAppLayoutInLiveContentOverlaysWithLayoutRole:](self, "_leafAppLayoutInLiveContentOverlaysWithLayoutRole:", 1);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v4)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v13, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 2107, CFSTR("We should have found a leading leaf app layout by this point."));

    }
    -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "statusBarManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "assertionManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "leadingStatusBarStyle");
    objc_msgSend(v8, "backgroundActivitiesToSuppress");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "effectiveStatusBarStyleForRequestedStyle:styleOverridesToSuppress:", v9, STUIStyleOverridesForBackgroundActivityIdentifiers());
    v11 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DB0F20]), "initWithResolvedStyle:foregroundColor:", _UIStatusBarResolvedStyleFromStyle(), 0);

  }
  else
  {
    v11 = 0;
  }
  return v11;
}

- (id)trailingStatusBarStyleRequest
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v14;

  if (-[NSMutableDictionary count](self->_liveContentOverlays, "count"))
  {
    -[SBFluidSwitcherViewController _leafAppLayoutInLiveContentOverlaysWithLayoutRole:](self, "_leafAppLayoutInLiveContentOverlaysWithLayoutRole:", 2);
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v4)
    {
      -[SBFluidSwitcherViewController _leafAppLayoutInLiveContentOverlaysWithLayoutRole:](self, "_leafAppLayoutInLiveContentOverlaysWithLayoutRole:", 1);
      v4 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v4)
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v14, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 2129, CFSTR("We should have found a trailing leaf app layout by this point."));

        v4 = 0;
      }
    }
    -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "statusBarManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "assertionManager");
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "trailingStatusBarStyle");
    objc_msgSend(v8, "backgroundActivitiesToSuppress");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v7, "effectiveStatusBarStyleForRequestedStyle:styleOverridesToSuppress:", v9, STUIStyleOverridesForBackgroundActivityIdentifiers());
    v12 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0DB0F20]), "initWithResolvedStyle:foregroundColor:", _SBStatusBarStyleFromLegacyStyle(v11), 0);

  }
  else
  {
    v12 = 0;
  }
  return v12;
}

- (id)_leafAppLayoutInLiveContentOverlaysWithLayoutRole:(int64_t)a3
{
  SBFluidSwitcherViewController *v4;
  void *v5;
  void *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  SBFluidSwitcherViewController *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  int64_t v24;
  uint64_t v25;
  id obj;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _BYTE v31[128];
  uint64_t v32;

  v4 = self;
  v32 = *MEMORY[0x1E0C80C00];
  if (-[NSMutableDictionary count](self->_liveContentOverlays, "count") == 1)
  {
    -[NSMutableDictionary allKeys](v4->_liveContentOverlays, "allKeys");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "firstObject");
    v6 = (void *)objc_claimAutoreleasedReturnValue();

    return v6;
  }
  else
  {
    v29 = 0u;
    v30 = 0u;
    v27 = 0u;
    v28 = 0u;
    -[NSMutableDictionary allKeys](v4->_liveContentOverlays, "allKeys");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
    if (v8)
    {
      v9 = v8;
      v10 = *(_QWORD *)v28;
      v24 = a3;
LABEL_5:
      v11 = 0;
      v25 = v9;
      while (1)
      {
        if (*(_QWORD *)v28 != v10)
          objc_enumerationMutation(obj);
        v12 = *(void **)(*((_QWORD *)&v27 + 1) + 8 * v11);
        -[NSDictionary objectForKey:](v4->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        v14 = v13;
        if (v13)
        {
          objc_msgSend(v13, "leafAppLayoutForRole:", a3);
          v15 = (void *)objc_claimAutoreleasedReturnValue();

          if (v15 == v12)
          {
            v22 = v12;
LABEL_17:

            goto LABEL_18;
          }
        }
        else
        {
          v16 = v4;
          -[SBFluidSwitcherViewController _sbWindowScene](v4, "_sbWindowScene");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v17, "layoutStateProvider");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v18, "layoutState");
          v19 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v19, "appLayout");
          v20 = (void *)objc_claimAutoreleasedReturnValue();

          a3 = v24;
          objc_msgSend(v20, "leafAppLayoutForRole:", v24);
          v21 = (void *)objc_claimAutoreleasedReturnValue();

          if (v21 == v12)
          {
            v23 = v12;

            goto LABEL_17;
          }

          v4 = v16;
          v9 = v25;
        }

        if (v9 == ++v11)
        {
          v9 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v27, v31, 16);
          if (v9)
            goto LABEL_5;
          break;
        }
      }
    }
    v12 = 0;
LABEL_18:

    return v12;
  }
}

- (void)handleEventResponse:(id)a3
{
  if (a3)
    -[SBFluidSwitcherViewController _handleEventResponse:](self, "_handleEventResponse:");
}

- (id)iconForAppLayout:(id)a3
{
  void *v3;
  void *v4;

  -[SBFluidSwitcherViewController iconViewForAppLayout:](self, "iconViewForAppLayout:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "icon");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)liveContentOverlayForAppLayout:(id)a3
{
  return (id)-[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", a3);
}

- (void)clickReceivedForHomeGrabberView:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  SBMutableSwitcherTransitionRequest *v18;
  void *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  -[SBFluidSwitcherViewController _spacesWithVisibleHomeAffordances](self, "_spacesWithVisibleHomeAffordances", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v22;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v22 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v21 + 1) + 8 * v9);
        -[SBFluidSwitcherViewController homeGrabberViewForAppLayout:](self, "homeGrabberViewForAppLayout:", v10);
        v11 = (id)objc_claimAutoreleasedReturnValue();

        if (v11 == v4)
        {
          v12 = objc_msgSend(v10, "environment");
          if (v12 == 2)
          {
            -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
            v13 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v13, "layoutState");
            v14 = (void *)objc_claimAutoreleasedReturnValue();

            v15 = objc_msgSend(v14, "floatingConfiguration");
            v16 = 4;
            if (v15 != 2)
              v16 = v15;
            if (v15 == 1)
              v17 = 3;
            else
              v17 = v16;
            v18 = objc_alloc_init(SBMutableSwitcherTransitionRequest);
            -[SBSwitcherTransitionRequest setFloatingConfiguration:](v18, "setFloatingConfiguration:", v17);
            -[SBFluidSwitcherViewController delegate](self, "delegate");
            v19 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v19, "switcherContentController:performTransitionWithRequest:gestureInitiated:", self, v18, 0);

          }
          else if (v12 == 1)
          {
            SBWorkspaceSuspendActiveDisplay();
          }
        }
        ++v9;
      }
      while (v7 != v9);
      v20 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
      v7 = v20;
    }
    while (v20);
  }

}

- (void)tapReceivedForGrabberTongueAtEdge:(unint64_t)a3
{
  void *v4;
  void *v5;
  void *v6;
  SBMutableSwitcherTransitionRequest *v7;

  if (a3 == 1)
  {
    v7 = objc_alloc_init(SBMutableSwitcherTransitionRequest);
    -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "firstObject");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBSwitcherTransitionRequest setAppLayout:](v7, "setAppLayout:", v5);

    -[SBSwitcherTransitionRequest setFloatingConfiguration:](v7, "setFloatingConfiguration:", 1);
    -[SBSwitcherTransitionRequest setPreferredInterfaceOrientation:](v7, "setPreferredInterfaceOrientation:", -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation"));
    -[SBFluidSwitcherViewController delegate](self, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "switcherContentController:performTransitionWithRequest:gestureInitiated:", self, v7, 0);

  }
}

- (BOOL)canPerformKeyboardShortcutAction:(int64_t)a3 forBundleIdentifier:(id)a4
{
  id v6;
  void *v7;
  int v8;
  id v9;
  void *v10;
  void *v11;
  BOOL v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  unint64_t v18;
  void *v19;
  int v20;
  int v21;
  BOOL v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  int v31;
  uint64_t v32;
  void *v33;
  char v34;
  char v35;
  int v36;
  void *v37;
  void *v38;
  unint64_t v39;
  _BOOL4 v40;
  uint64_t v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  char v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v52;
  void *v53;
  void *v54;
  uint64_t v55;
  _QWORD v56[4];
  id v57;
  _QWORD v58[4];
  id v59;

  v6 = a4;
  -[SBFluidSwitcherViewController rootModifier](self, "rootModifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "canPerformKeyboardShortcutAction:forBundleIdentifier:", a3, v6);

  v9 = v6;
  -[SBSwitcherLiveContentOverlayCoordinating appLayoutForKeyboardFocusedScene](self->_liveContentOverlayCoordinator, "appLayoutForKeyboardFocusedScene");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = v10;
  v12 = v9 != 0;
  v13 = v9;
  if (v9)
    goto LABEL_3;
  objc_msgSend(v10, "allItems");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "firstObject");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "bundleIdentifier");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (v13)
  {
LABEL_3:
    +[SBApplicationController sharedInstanceIfExists](SBApplicationController, "sharedInstanceIfExists");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "applicationWithBundleIdentifier:", v13);
    v17 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v17 = 0;
  }
  v18 = -[SBFluidSwitcherViewController _windowManagementStyle](self, "_windowManagementStyle");
  -[SBSceneManager displayIdentity](self->_sceneManager, "displayIdentity");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = objc_msgSend(v17, "supportsMultiWindowLayoutsForSwitcherWindowManagementStyle:displayIdentity:", v18, v19);

  switch(a3)
  {
    case 3:
      if (v17)
      {
        v32 = -[SBFluidSwitcherViewController numberOfVisibleAppLayoutsForBundleIdentifier:](self, "numberOfVisibleAppLayoutsForBundleIdentifier:", v13);
        if (!v8)
          goto LABEL_62;
      }
      else
      {
        v32 = 0;
        if (!v8)
          goto LABEL_62;
      }
      objc_msgSend(v17, "info");
      v45 = (void *)objc_claimAutoreleasedReturnValue();
      v46 = objc_msgSend(v45, "supportsMultiwindow");
      if (v32 > 0)
        v34 = v46;
      else
        v34 = 0;

      goto LABEL_69;
    case 4:
    case 5:
      v22 = -[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled");
      if (v22
        || (objc_msgSend(v17, "info"),
            v19 = (void *)objc_claimAutoreleasedReturnValue(),
            objc_msgSend(v19, "supportsMultiwindow")))
      {
        -[SBFluidSwitcherViewController _keyboardFocusableLiveAppLayoutsMatchingFocusedApp:foundAtIndex:](self, "_keyboardFocusableLiveAppLayoutsMatchingFocusedApp:foundAtIndex:", 1, 0);
        v23 = (void *)objc_claimAutoreleasedReturnValue();
        v24 = v23;
        if (v22)
        {
          v54 = v23;
          v55 = objc_msgSend(v23, "count");
          if (v11)
          {
            objc_msgSend(v11, "allItems");
            v25 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v25, "firstObject");
            v26 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v26, "bundleIdentifier");
            v52 = (void *)objc_claimAutoreleasedReturnValue();

            v58[0] = MEMORY[0x1E0C809B0];
            v58[1] = 3221225472;
            v58[2] = __86__SBFluidSwitcherViewController_canPerformKeyboardShortcutAction_forBundleIdentifier___block_invoke_2;
            v58[3] = &unk_1E8E9DF78;
            v27 = v52;
            v28 = v24;
            v29 = v27;
            v59 = v27;
            LODWORD(v25) = objc_msgSend(v28, "bs_containsObjectPassingTest:", v58);

            if (!(_DWORD)v25)
            {
              v30 = 0;
              goto LABEL_65;
            }
          }
          else
          {
            objc_msgSend(v24, "firstObject");
            v47 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v47, "allItems");
            v53 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v53, "firstObject");
            v48 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v48, "bundleIdentifier");
            v29 = (id)objc_claimAutoreleasedReturnValue();

          }
          -[SBSwitcherModifier inactiveAppLayoutsReachableByKeyboardShortcut](self->_rootModifier, "inactiveAppLayoutsReachableByKeyboardShortcut");
          v49 = (void *)objc_claimAutoreleasedReturnValue();
          v56[0] = MEMORY[0x1E0C809B0];
          v56[1] = 3221225472;
          v56[2] = __86__SBFluidSwitcherViewController_canPerformKeyboardShortcutAction_forBundleIdentifier___block_invoke_3;
          v56[3] = &unk_1E8E9DF78;
          v29 = v29;
          v57 = v29;
          objc_msgSend(v49, "bs_filter:", v56);
          v30 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_65:
          v40 = objc_msgSend(v30, "count") != 0;

          v24 = v54;
          v39 = v55;
          if (!v8)
            goto LABEL_49;
          goto LABEL_46;
        }
      }
      else
      {
        v24 = 0;
      }

      v39 = objc_msgSend(v24, "count");
      v40 = 0;
      if (!v8)
        goto LABEL_49;
LABEL_46:
      v8 = v39 > 1 || v40;
      goto LABEL_49;
    case 6:
      if (!v8)
        goto LABEL_62;
      -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
      v33 = (void *)objc_claimAutoreleasedReturnValue();
      v34 = objc_msgSend(v33, "bs_containsObjectPassingTest:", &__block_literal_global_334);
      goto LABEL_55;
    case 7:
    case 8:
    case 13:
    case 14:
      goto LABEL_5;
    case 11:
      if (!v9 && v11)
      {
        if ((objc_msgSend(v11, "environment") & 0xFFFFFFFFFFFFFFFELL) == 2)
        {
          v12 = 1;
        }
        else
        {
          -[NSDictionary objectForKey:](self->_leafAppLayoutsToRecencyAppLayouts, "objectForKey:", v11);
          v50 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v50, "configuration") != 1;

        }
      }
      v34 = v8 & v12;
      goto LABEL_69;
    case 12:
      if (v8)
        v8 = objc_msgSend(v11, "environment") == 1;
LABEL_5:
      if (v17)
        v21 = v8;
      else
        v21 = 0;
      v8 = v21 & v20;
      goto LABEL_50;
    case 15:
    case 16:
      if (v17)
        v31 = v8;
      else
        v31 = 0;
      if (v31 == 1)
      {
        -[SBFluidSwitcherViewController _keyboardFocusableLiveAppLayoutsMatchingFocusedApp:foundAtIndex:](self, "_keyboardFocusableLiveAppLayoutsMatchingFocusedApp:foundAtIndex:", 0, 0);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = (unint64_t)objc_msgSend(v24, "count") > 1;
LABEL_49:

      }
      else
      {
        v8 = 0;
      }
      goto LABEL_50;
    case 17:
      if (!v8)
        goto LABEL_62;
      v8 = !-[SBFluidSwitcherViewController appLayoutContainsAnUnoccludedMaximizedDisplayItem:](self, "appLayoutContainsAnUnoccludedMaximizedDisplayItem:", v11);
      goto LABEL_52;
    case 18:
      if (v17)
        v35 = v8;
      else
        v35 = 0;
      v34 = v35 & v20;
      goto LABEL_69;
    case 20:
      if (v17)
        v36 = v8;
      else
        v36 = 0;
      if (v36 == 1)
      {
        objc_msgSend((id)SBApp, "windowSceneManager");
        v37 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v37, "connectedWindowScenes");
        v38 = (void *)objc_claimAutoreleasedReturnValue();
        v8 = (unint64_t)objc_msgSend(v38, "count") > 1;

        goto LABEL_52;
      }
LABEL_62:
      v34 = 0;
      goto LABEL_69;
    default:
LABEL_50:
      if ((unint64_t)a3 > 0x14)
      {
        v34 = v8;
      }
      else
      {
        v41 = 1 << a3;
        v34 = v8;
        if ((v41 & 0x1A1180) != 0)
        {
LABEL_52:
          v34 = 0;
          if (!v9 && v8)
          {
            v42 = (void *)MEMORY[0x1E0CEA5E0];
            -[SBFluidSwitcherViewController view](self, "view");
            v33 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v42, "focusSystemForEnvironment:", v33);
            v43 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v43, "focusedItem");
            v44 = (void *)objc_claimAutoreleasedReturnValue();
            objc_opt_class();
            v34 = objc_opt_isKindOfClass() ^ 1;

LABEL_55:
          }
        }
      }
LABEL_69:

      return v34 & 1;
  }
}

BOOL __86__SBFluidSwitcherViewController_canPerformKeyboardShortcutAction_forBundleIdentifier___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "environment") == 2;
}

uint64_t __86__SBFluidSwitcherViewController_canPerformKeyboardShortcutAction_forBundleIdentifier___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "containsItemWithBundleIdentifier:", *(_QWORD *)(a1 + 32));
}

uint64_t __86__SBFluidSwitcherViewController_canPerformKeyboardShortcutAction_forBundleIdentifier___block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "containsItemWithBundleIdentifier:", *(_QWORD *)(a1 + 32));
}

- (void)performKeyboardShortcutAction:(int64_t)a3
{
  _BOOL8 v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  _QWORD v19[4];
  id v20;
  _QWORD v21[4];
  id v22;
  SBFluidSwitcherViewController *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char v29;

  switch(a3)
  {
    case 3:
      -[SBSwitcherLiveContentOverlayCoordinating appLayoutForKeyboardFocusedScene](self->_liveContentOverlayCoordinator, "appLayoutForKeyboardFocusedScene");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = v6;
      if (v6)
      {
        objc_msgSend(v6, "allItems");
        v8 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "firstObject");
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v9, "bundleIdentifier");
        v10 = (void *)objc_claimAutoreleasedReturnValue();

        v26 = 0;
        v27 = &v26;
        v28 = 0x2020000000;
        v29 = 0;
        -[NSMutableDictionary allKeys](self->_visibleShelves, "allKeys");
        v11 = (void *)objc_claimAutoreleasedReturnValue();
        v12 = MEMORY[0x1E0C809B0];
        v21[0] = MEMORY[0x1E0C809B0];
        v21[1] = 3221225472;
        v21[2] = __63__SBFluidSwitcherViewController_performKeyboardShortcutAction___block_invoke;
        v21[3] = &unk_1E8EA4478;
        v13 = v10;
        v22 = v13;
        v23 = self;
        v24 = &v26;
        v25 = 3;
        objc_msgSend(v11, "enumerateObjectsUsingBlock:", v21);

        if (!*((_BYTE *)v27 + 24))
        {
          -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "layoutState");
          v15 = (void *)objc_claimAutoreleasedReturnValue();

          objc_msgSend(v15, "bundleIDShowingAppExpose");
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          if (v16)
          {
            if (objc_msgSend(v13, "isEqualToString:", v16))
            {

              v13 = 0;
            }
          }
          +[SBWorkspace mainWorkspace](SBWorkspace, "mainWorkspace");
          v17 = (void *)objc_claimAutoreleasedReturnValue();
          -[UIViewController _fbsDisplayConfiguration](self, "_fbsDisplayConfiguration");
          v18 = (void *)objc_claimAutoreleasedReturnValue();
          v19[0] = v12;
          v19[1] = 3221225472;
          v19[2] = __63__SBFluidSwitcherViewController_performKeyboardShortcutAction___block_invoke_2;
          v19[3] = &unk_1E8E9EE78;
          v13 = v13;
          v20 = v13;
          objc_msgSend(v17, "requestTransitionWithOptions:displayConfiguration:builder:", 0, v18, v19);

        }
        _Block_object_dispose(&v26, 8);

      }
      break;
    case 4:
    case 5:
      v4 = a3 == 4;
      v5 = 1;
      goto LABEL_5;
    case 6:
      -[SBFluidSwitcherViewController _toggleFloatingAppVisibility](self, "_toggleFloatingAppVisibility");
      break;
    case 7:
    case 8:
    case 11:
    case 12:
    case 13:
    case 14:
    case 17:
    case 18:
    case 19:
    case 20:
      -[SBSwitcherLiveContentOverlayCoordinating performSwitcherKeyboardShortcutAction:](self->_liveContentOverlayCoordinator, "performSwitcherKeyboardShortcutAction:");
      break;
    case 15:
    case 16:
      v4 = a3 == 15;
      v5 = 0;
LABEL_5:
      -[SBFluidSwitcherViewController _navigateFromFocusedAppWindowSceneToNextSceneInForwardDirection:matchFocusedApp:](self, "_navigateFromFocusedAppWindowSceneToNextSceneInForwardDirection:matchFocusedApp:", v4, v5);
      break;
    default:
      return;
  }
}

void __63__SBFluidSwitcherViewController_performKeyboardShortcutAction___block_invoke(_QWORD *a1, void *a2)
{
  void *v3;
  int v4;
  void *v5;
  id v6;

  v6 = a2;
  objc_msgSend(v6, "bundleIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", a1[4]);

  if (v4)
  {
    objc_msgSend(*(id *)(a1[5] + 1888), "objectForKey:", v6);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "performKeyboardShortcutAction:", a1[7]);

    *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
  }

}

void __63__SBFluidSwitcherViewController_performKeyboardShortcutAction___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  _QWORD v4[4];
  id v5;

  v3 = a2;
  objc_msgSend(v3, "setSource:", 51);
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __63__SBFluidSwitcherViewController_performKeyboardShortcutAction___block_invoke_3;
  v4[3] = &unk_1E8E9EE50;
  v5 = *(id *)(a1 + 32);
  objc_msgSend(v3, "modifyApplicationContext:", v4);

}

void __63__SBFluidSwitcherViewController_performKeyboardShortcutAction___block_invoke_3(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = a2;
  objc_msgSend(v3, "setRequestedAppExposeBundleID:", v2);
  objc_msgSend(v3, "setRequestedUnlockedEnvironmentMode:", 3);

}

- (id)_keyboardFocusableLiveAppLayoutsMatchingFocusedApp:(BOOL)a3 foundAtIndex:(int64_t *)a4
{
  _BOOL4 v5;
  BOOL v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  _QWORD v23[4];
  id v24;
  id v25;
  BOOL v26;
  char v27;

  v5 = a3;
  v7 = -[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled");
  -[SBSwitcherLiveContentOverlayCoordinating appLayoutForKeyboardFocusedScene](self->_liveContentOverlayCoordinator, "appLayoutForKeyboardFocusedScene");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBSwitcherModifier activeLeafAppLayoutsReachableByKeyboardShortcut](self->_rootModifier, "activeLeafAppLayoutsReachableByKeyboardShortcut");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (!v7)
  {
    -[SBSwitcherModifier appLayoutsToResignActive](self->_rootModifier, "appLayoutsToResignActive");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "allValues");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
LABEL_7:

    goto LABEL_8;
  }
  v11 = 0;
  if (v5 && !v8)
  {
    if (!objc_msgSend(v9, "count"))
    {
      v11 = 0;
      v8 = 0;
      goto LABEL_8;
    }
    -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "layoutState");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "appLayout");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "zOrderedLeafAppLayouts");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "firstObject");
    v8 = (void *)objc_claimAutoreleasedReturnValue();

    v11 = 0;
    goto LABEL_7;
  }
LABEL_8:
  objc_msgSend(v8, "allItems");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "firstObject");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "bundleIdentifier");
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  LOBYTE(v16) = objc_msgSend(v10, "bs_containsObjectPassingTest:", &__block_literal_global_339);
  v23[0] = MEMORY[0x1E0C809B0];
  v23[1] = 3221225472;
  v23[2] = __97__SBFluidSwitcherViewController__keyboardFocusableLiveAppLayoutsMatchingFocusedApp_foundAtIndex___block_invoke_2;
  v23[3] = &unk_1E8EA44E8;
  v26 = v5;
  v24 = v18;
  v19 = v11;
  v25 = v19;
  v27 = (char)v16;
  v20 = v18;
  objc_msgSend(v10, "bs_compactMap:", v23);
  v21 = (void *)objc_claimAutoreleasedReturnValue();

  if (a4 && v8)
    *a4 = objc_msgSend(v21, "indexOfObject:", v8);

  return v21;
}

BOOL __97__SBFluidSwitcherViewController__keyboardFocusableLiveAppLayoutsMatchingFocusedApp_foundAtIndex___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "environment") == 3;
}

id __97__SBFluidSwitcherViewController__keyboardFocusableLiveAppLayoutsMatchingFocusedApp_foundAtIndex___block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  int v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v13[4];
  id v14;

  v3 = a2;
  v4 = v3;
  if (*(_BYTE *)(a1 + 48))
  {
    objc_msgSend(v3, "allItems");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "firstObject");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "bundleIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v8 = objc_msgSend(v7, "isEqualToString:", *(_QWORD *)(a1 + 32));

    if (!v8)
      goto LABEL_7;
  }
  v9 = *(void **)(a1 + 40);
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __97__SBFluidSwitcherViewController__keyboardFocusableLiveAppLayoutsMatchingFocusedApp_foundAtIndex___block_invoke_3;
  v13[3] = &unk_1E8EA44C0;
  v10 = v4;
  v14 = v10;
  LOBYTE(v9) = objc_msgSend(v9, "bs_containsObjectPassingTest:", v13);

  if ((v9 & 1) != 0
    || *(_BYTE *)(a1 + 49) && (objc_msgSend(v10, "environment") & 0xFFFFFFFFFFFFFFFELL) != 2)
  {
LABEL_7:
    v11 = 0;
  }
  else
  {
    v11 = v10;
  }

  return v11;
}

uint64_t __97__SBFluidSwitcherViewController__keyboardFocusableLiveAppLayoutsMatchingFocusedApp_foundAtIndex___block_invoke_3(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "containsObject:", *(_QWORD *)(a1 + 32));
}

- (void)_navigateFromFocusedAppWindowSceneToNextSceneInForwardDirection:(BOOL)a3 matchFocusedApp:(BOOL)a4
{
  _BOOL4 v4;
  _BOOL8 v5;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  void *v20;
  void *v21;
  void *v22;
  uint64_t v23;
  SBTapAppLayoutSwitcherModifierEvent *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, void *);
  void *v28;
  id v29;
  uint64_t v30;

  v4 = a4;
  v5 = a3;
  v30 = 0x7FFFFFFFFFFFFFFFLL;
  -[SBFluidSwitcherViewController _keyboardFocusableLiveAppLayoutsMatchingFocusedApp:foundAtIndex:](self, "_keyboardFocusableLiveAppLayoutsMatchingFocusedApp:foundAtIndex:", a4, &v30);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = 0;
  if (-[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled") && v4)
  {
    v9 = v30;
    if (v30 == 0x7FFFFFFFFFFFFFFFLL)
    {
      v9 = 0;
      v30 = 0;
    }
    objc_msgSend(v7, "objectAtIndex:", v9);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "allItems");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "firstObject");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "bundleIdentifier");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    -[SBSwitcherModifier inactiveAppLayoutsReachableByKeyboardShortcut](self->_rootModifier, "inactiveAppLayoutsReachableByKeyboardShortcut");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    v25 = MEMORY[0x1E0C809B0];
    v26 = 3221225472;
    v27 = __113__SBFluidSwitcherViewController__navigateFromFocusedAppWindowSceneToNextSceneInForwardDirection_matchFocusedApp___block_invoke;
    v28 = &unk_1E8E9DF78;
    v29 = v13;
    v15 = v13;
    objc_msgSend(v14, "bs_filter:", &v25);
    v8 = (void *)objc_claimAutoreleasedReturnValue();

  }
  v16 = v30;
  if (v30 != 0x7FFFFFFFFFFFFFFFLL)
  {
    if (v5)
    {
      if (v16 == objc_msgSend(v7, "count") - 1)
      {
        v17 = 0;
        goto LABEL_14;
      }
      v16 = v30;
    }
    if (v16)
      v17 = 1;
    else
      v17 = v5;
LABEL_14:
    if (!objc_msgSend(v8, "count", v25, v26, v27, v28) || (v17 & 1) != 0)
    {
      if ((unint64_t)objc_msgSend(v7, "count") >= 2)
      {
        if (v5)
        {
          v18 = v30 + 1;
          v19 = v18 % objc_msgSend(v7, "count");
        }
        else if (v30 <= 0)
        {
          v19 = objc_msgSend(v7, "count") - 1;
        }
        else
        {
          v19 = v30 - 1;
        }
        objc_msgSend(v7, "objectAtIndex:", v19);
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v20);
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "itemForLayoutRole:", 1);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        v23 = objc_msgSend(v21, "layoutRoleForItem:", v22);

        v24 = -[SBTapAppLayoutSwitcherModifierEvent initWithAppLayout:layoutRole:modifierFlags:source:]([SBTapAppLayoutSwitcherModifierEvent alloc], "initWithAppLayout:layoutRole:modifierFlags:source:", v21, v23, 0, 1);
        -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v24);

      }
    }
    else
    {
      -[SBFluidSwitcherViewController _navigateFromFocusedAppWindowSceneToNextSceneFromStripInForwardDirection:withReachableAppLayouts:](self, "_navigateFromFocusedAppWindowSceneToNextSceneFromStripInForwardDirection:withReachableAppLayouts:", v5, v8);
    }
  }

}

uint64_t __113__SBFluidSwitcherViewController__navigateFromFocusedAppWindowSceneToNextSceneInForwardDirection_matchFocusedApp___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "containsItemWithBundleIdentifier:", *(_QWORD *)(a1 + 32));
}

- (void)_navigateFromFocusedAppWindowSceneToNextSceneFromStripInForwardDirection:(BOOL)a3 withReachableAppLayouts:(id)a4
{
  void *v6;
  void *v7;
  void *v8;
  NSArray *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  unsigned int v21;
  unint64_t v22;
  void *v23;
  SBTapAppLayoutSwitcherModifierEvent *v24;
  BOOL v25;
  NSArray *v26;
  id v27;
  _QWORD v28[4];
  id v29;

  v27 = (id)objc_msgSend(a4, "mutableCopy");
  -[SBFluidSwitcherLayoutContext layoutState](self->_layoutContext, "layoutState");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "appLayout");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "continuousExposeIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = self->_continuousExposeIdentifiersInSwitcher;
  -[SBFluidSwitcherViewController appLayoutsForContinuousExposeIdentifier:](self, "appLayoutsForContinuousExposeIdentifier:", v8);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v10, "indexOfObject:", v7);
  v12 = -[NSArray indexOfObject:](v9, "indexOfObject:", v8);
  v26 = v9;
  v25 = a3;
  if (!v12)
  {
    v16 = 0;
    if (v11)
      goto LABEL_6;
LABEL_12:
    v18 = v27;
    goto LABEL_13;
  }
  -[NSArray objectAtIndex:](v9, "objectAtIndex:", v12 - 1);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v28[0] = MEMORY[0x1E0C809B0];
  v28[1] = 3221225472;
  v28[2] = __130__SBFluidSwitcherViewController__navigateFromFocusedAppWindowSceneToNextSceneFromStripInForwardDirection_withReachableAppLayouts___block_invoke;
  v28[3] = &unk_1E8EA4510;
  v29 = v13;
  v14 = v13;
  v15 = objc_msgSend(v27, "indexOfObjectWithOptions:passingTest:", 2, v28);
  if (v15 == 0x7FFFFFFFFFFFFFFFLL)
    v16 = 0;
  else
    v16 = v15 + 1;

  if (!v11)
    goto LABEL_12;
LABEL_6:
  v17 = 0;
  v18 = v27;
  do
  {
    if (v16 < (unint64_t)objc_msgSend(v18, "count"))
    {
      objc_msgSend(v27, "objectAtIndex:", v16);
      v19 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "objectAtIndex:", v17);
      v20 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = objc_msgSend(v19, "isEqual:", v20);

      v16 += v21;
    }
    v18 = v27;
    ++v17;
  }
  while (v11 != v17);
LABEL_13:
  objc_msgSend(v18, "insertObject:atIndex:", v7, v16);
  if (v25)
  {
    v22 = (v16 + 1) % (unint64_t)objc_msgSend(v27, "count");
  }
  else if (v16 <= 0)
  {
    v22 = objc_msgSend(v27, "count") - 1;
  }
  else
  {
    v22 = v16 - 1;
  }
  objc_msgSend(v27, "objectAtIndex:", v22);
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v24 = -[SBTapAppLayoutSwitcherModifierEvent initWithAppLayout:layoutRole:modifierFlags:source:]([SBTapAppLayoutSwitcherModifierEvent alloc], "initWithAppLayout:layoutRole:modifierFlags:source:", v23, 1, 0, 1);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v24);

}

uint64_t __130__SBFluidSwitcherViewController__navigateFromFocusedAppWindowSceneToNextSceneFromStripInForwardDirection_withReachableAppLayouts___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "continuousExposeIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", *(_QWORD *)(a1 + 32));

  return v4;
}

- (void)_toggleFloatingAppVisibility
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  SBMutableSwitcherTransitionRequest *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "layoutState");
  v12 = (id)objc_claimAutoreleasedReturnValue();

  v4 = objc_msgSend(v12, "floatingConfiguration");
  objc_msgSend(v12, "elementWithRole:", 3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    v6 = 4;
    if (v4 != 2)
      v6 = v4;
    if (v4 == 1)
      v7 = 3;
    else
      v7 = v6;
    v8 = objc_alloc_init(SBMutableSwitcherTransitionRequest);
    -[SBSwitcherTransitionRequest setFloatingConfiguration:](v8, "setFloatingConfiguration:", v7);
    if (v8)
      goto LABEL_8;
  }
  else
  {
    -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "bs_firstObjectPassingTest:", &__block_literal_global_343);
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    if (v11)
    {
      v8 = objc_alloc_init(SBMutableSwitcherTransitionRequest);
      -[SBSwitcherTransitionRequest setAppLayout:](v8, "setAppLayout:", v11);
      -[SBSwitcherTransitionRequest setAppLayoutEnvironment:](v8, "setAppLayoutEnvironment:", 2);
    }
    else
    {
      v8 = 0;
    }

    if (v8)
    {
LABEL_8:
      -[SBFluidSwitcherViewController delegate](self, "delegate");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "switcherContentController:performTransitionWithRequest:gestureInitiated:", self, v8, 0);

    }
  }

}

BOOL __61__SBFluidSwitcherViewController__toggleFloatingAppVisibility__block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "environment") == 2;
}

- (void)invalidate
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  SBAppSwitcherSnapshotImageCache *snapshotCache;
  SBSwitcherLiveContentOverlayCoordinating *liveContentOverlayCoordinator;
  BSInvalidatable *stateCaptureInvalidatable;
  BSDefaultObserver *chamoisDefaultsObserver;
  BSInvalidatable *wallpaperRequireAssertion;
  BSInvalidatable *bezelEffectsPortalObserverToken;
  void *v13;
  void *v14;
  id v15;

  -[SBFluidSwitcherViewController _removeSearchPresenterObservation](self, "_removeSearchPresenterObservation");
  +[SBAppInteractionEventSourceManager sharedInstance](SBAppInteractionEventSourceManager, "sharedInstance");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removeObserver:", self);

  objc_msgSend(MEMORY[0x1E0CB37D0], "defaultCenter");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "removeObserver:", self);

  -[SBFluidSwitcherPageContentViewProvider setDelegate:](self->_pageContentViewProvider, "setDelegate:", 0);
  -[BSUIScrollView setDelegate:](self->_scrollView, "setDelegate:", 0);
  -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "searchGesture");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "removeObserver:", self);

  -[SBAppSwitcherSnapshotImageCache setDelegate:](self->_snapshotCache, "setDelegate:", 0);
  snapshotCache = self->_snapshotCache;
  self->_snapshotCache = 0;

  -[SBSwitcherLiveContentOverlayCoordinating invalidate](self->_liveContentOverlayCoordinator, "invalidate");
  liveContentOverlayCoordinator = self->_liveContentOverlayCoordinator;
  self->_liveContentOverlayCoordinator = 0;

  -[BSInvalidatable invalidate](self->_stateCaptureInvalidatable, "invalidate");
  stateCaptureInvalidatable = self->_stateCaptureInvalidatable;
  self->_stateCaptureInvalidatable = 0;

  -[BSDefaultObserver invalidate](self->_chamoisDefaultsObserver, "invalidate");
  chamoisDefaultsObserver = self->_chamoisDefaultsObserver;
  self->_chamoisDefaultsObserver = 0;

  -[BSInvalidatable invalidate](self->_wallpaperRequireAssertion, "invalidate");
  wallpaperRequireAssertion = self->_wallpaperRequireAssertion;
  self->_wallpaperRequireAssertion = 0;

  -[BSInvalidatable invalidate](self->_bezelEffectsPortalObserverToken, "invalidate");
  bezelEffectsPortalObserverToken = self->_bezelEffectsPortalObserverToken;
  self->_bezelEffectsPortalObserverToken = 0;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v15 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "systemPointerInteractionManager");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "removeObserver:", self);

  objc_msgSend(v15, "assistantController");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "removeObserver:", self);

  self->_isInvalidated = 1;
}

- (void)removeLiveContentOverlayForAppLayout:(id)a3 animated:(BOOL)a4
{
  _BOOL4 v4;
  SBAppSwitcherSettings *settings;
  id v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;

  v4 = a4;
  settings = self->_settings;
  v7 = a3;
  v8 = v4 & ~-[SBAppSwitcherSettings shouldRedactWindowContents](settings, "shouldRedactWindowContents");
  -[SBFluidSwitcherViewController visibleItemContainers](self, "visibleItemContainers");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "objectForKey:", v7);
  v12 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v12, "setContentOverlay:animated:", 0, v8);
  objc_msgSend(v7, "itemForLayoutRole:", 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "uniqueIdentifier");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBFluidSwitcherViewController _removeCenterWindowAnimationContextWithKey:](self, "_removeCenterWindowAnimationContextWithKey:", v11);
  -[NSMutableDictionary removeObjectForKey:](self->_liveContentOverlays, "removeObjectForKey:", v7);

}

- (void)moveExistingLiveContentOverlay:(id)a3 forAppLayout:(id)a4 toAppLayout:(id)a5
{
  id v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  objc_class *v17;
  void *v18;
  void *v19;
  objc_class *v20;
  void *v21;
  id v22;

  v22 = a3;
  v9 = a4;
  v10 = a5;
  -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v10);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  if (v11)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = (objc_class *)objc_opt_class();
    NSStringFromClass(v17);
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 2698, CFSTR("The appLayout %@ already has an overlay <%@:%p>"), v10, v18, v11);

  }
  -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", v9);
  v12 = (id)objc_claimAutoreleasedReturnValue();

  if (v12 != v22)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = (objc_class *)objc_opt_class();
    NSStringFromClass(v20);
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 2699, CFSTR("Asked to move an existing overlay <%@:%p> for %@ that doesn't match / exist."), v21, v22, v9);

  }
  -[NSMutableDictionary removeObjectForKey:](self->_liveContentOverlays, "removeObjectForKey:", v9);
  -[NSMutableDictionary setObject:forKey:](self->_liveContentOverlays, "setObject:forKey:", v22, v10);
  -[SBFluidSwitcherViewController visibleItemContainers](self, "visibleItemContainers");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v13, "objectForKey:", v10);
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  if (v14)
  {
    objc_msgSend(v22, "contentOverlayView");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "setContentOverlay:animated:", v15, 0);

    -[SBFluidSwitcherViewController _setupLiveContentOverlayForAppLayout:itemContainer:overlay:](self, "_setupLiveContentOverlayForAppLayout:itemContainer:overlay:", v10, v14, v22);
  }

}

- (BOOL)areLiveContentOverlayUpdatesSuspended
{
  return -[SBSwitcherLiveContentOverlayCoordinating areLiveContentOverlayUpdatesSuspended](self->_liveContentOverlayCoordinator, "areLiveContentOverlayUpdatesSuspended");
}

- (void)setLiveContentOverlayUpdatesSuspended:(BOOL)a3
{
  -[SBSwitcherLiveContentOverlayCoordinating setLiveContentOverlayUpdatesSuspended:](self->_liveContentOverlayCoordinator, "setLiveContentOverlayUpdatesSuspended:", a3);
}

- (void)liveContentOverlayDidUpdateHomeAffordanceSupportedOrientations:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  int *v20;
  void *v21;
  void *v22;
  SBFluidSwitcherViewController *v23;
  id obj;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  uint64_t v30;

  v30 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBFluidSwitcherViewController view](self, "view");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setNeedsLayout");

  v22 = v4;
  -[NSMutableDictionary allKeysForObject:](self->_liveContentOverlays, "allKeysForObject:", v4);
  v25 = 0u;
  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  obj = (id)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v26;
    v9 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
    v10 = &OBJC_IVAR___SBSceneManager__persistentMapSceneIdentityToSceneHandle;
    v23 = self;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v26 != v8)
          objc_enumerationMutation(obj);
        objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v9[840]), "objectForKey:", *(_QWORD *)(*((_QWORD *)&v25 + 1) + 8 * v11));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(*(id *)((char *)&self->super.super.super.isa + v10[769]), "objectForKey:", v12);
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "homeGrabberView");
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        if (v14)
        {
          v15 = -[SBFluidSwitcherViewController _bestSupportedHomeAffordanceOrientationForOrientation:inAppLayout:](self, "_bestSupportedHomeAffordanceOrientationForOrientation:inAppLayout:", self->_contentOrientation, v12);
          v16 = objc_msgSend(v14, "orientation");
          if (v16 != v15)
          {
            +[SBAnimationUtilities animationSettingsForRotationFromInterfaceOrientation:toInterfaceOrientation:](SBAnimationUtilities, "animationSettingsForRotationFromInterfaceOrientation:toInterfaceOrientation:", v16, v15);
            v17 = v7;
            v18 = v8;
            v19 = v10;
            v20 = v9;
            v21 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v14, "setOrientation:animated:rotationSettings:", v15, 1, v21);

            v9 = v20;
            v10 = v19;
            v8 = v18;
            v7 = v17;
            self = v23;
            objc_msgSend(v13, "setNeedsLayout");
          }
        }

        ++v11;
      }
      while (v7 != v11);
      v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v25, v29, 16);
    }
    while (v7);
  }

}

- (id)liveOverlayForSceneHandle:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD v9[4];
  id v10;

  v4 = a3;
  -[NSMutableDictionary allValues](self->_liveContentOverlays, "allValues");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __59__SBFluidSwitcherViewController_liveOverlayForSceneHandle___block_invoke;
  v9[3] = &unk_1E8EA4558;
  v10 = v4;
  v6 = v4;
  objc_msgSend(v5, "bs_firstObjectPassingTest:", v9);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t __59__SBFluidSwitcherViewController_liveOverlayForSceneHandle___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a2, "overlaySceneHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = BSEqualObjects();

  return v3;
}

- (id)liveOverlayForSceneIdentityToken:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD v9[4];
  id v10;

  v4 = a3;
  -[NSMutableDictionary allValues](self->_liveContentOverlays, "allValues");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __66__SBFluidSwitcherViewController_liveOverlayForSceneIdentityToken___block_invoke;
  v9[3] = &unk_1E8EA4558;
  v10 = v4;
  v6 = v4;
  objc_msgSend(v5, "bs_firstObjectPassingTest:", v9);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t __66__SBFluidSwitcherViewController_liveOverlayForSceneIdentityToken___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;

  objc_msgSend(a2, "overlaySceneHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "sceneIfExists");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "identityToken");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = BSEqualObjects();

  return v5;
}

- (id)liveOverlayForSceneIdentifier:(id)a3
{
  id v4;
  void *v5;
  id v6;
  void *v7;
  _QWORD v9[4];
  id v10;

  v4 = a3;
  -[NSMutableDictionary allValues](self->_liveContentOverlays, "allValues");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 3221225472;
  v9[2] = __63__SBFluidSwitcherViewController_liveOverlayForSceneIdentifier___block_invoke;
  v9[3] = &unk_1E8EA4558;
  v10 = v4;
  v6 = v4;
  objc_msgSend(v5, "bs_firstObjectPassingTest:", v9);
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  return v7;
}

uint64_t __63__SBFluidSwitcherViewController_liveOverlayForSceneIdentifier___block_invoke(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  objc_msgSend(a2, "overlaySceneHandle");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "sceneIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = BSEqualObjects();

  return v4;
}

- (UIScrollView)switcherScrollView
{
  return (UIScrollView *)self->_scrollView;
}

- (id)defaultFocusItem
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  NSMutableDictionary *visibleItemContainers;
  void *v10;
  void *v11;
  void *v12;

  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "activeTransitionContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if (v4)
    objc_msgSend(v5, "transitioningToLayoutState");
  else
    objc_msgSend(v5, "layoutState");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "elementWithRole:", 1);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    visibleItemContainers = self->_visibleItemContainers;
    objc_msgSend(v7, "appLayout");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "leafAppLayoutForRole:", 1);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary objectForKey:](visibleItemContainers, "objectForKey:", v11);
    v12 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v12 = 0;
  }

  return v12;
}

- (BOOL)handleHomeButtonPress
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _liveContentOverlayForHandlingHardwareButtonEvents](self, "_liveContentOverlayForHandlingHardwareButtonEvents");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = objc_msgSend(v2, "handleHomeButtonPress");
  else
    v3 = 0;

  return v3;
}

- (BOOL)handleHomeButtonDoublePress
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _liveContentOverlayForHandlingHardwareButtonEvents](self, "_liveContentOverlayForHandlingHardwareButtonEvents");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = objc_msgSend(v2, "handleHomeButtonDoublePress");
  else
    v3 = 0;

  return v3;
}

- (BOOL)handleHomeButtonLongPress
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _liveContentOverlayForHandlingHardwareButtonEvents](self, "_liveContentOverlayForHandlingHardwareButtonEvents");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = objc_msgSend(v2, "handleHomeButtonLongPress");
  else
    v3 = 0;

  return v3;
}

- (BOOL)handleLockButtonPress
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _liveContentOverlayForHandlingHardwareButtonEvents](self, "_liveContentOverlayForHandlingHardwareButtonEvents");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = objc_msgSend(v2, "handleLockButtonPress");
  else
    v3 = 0;

  return v3;
}

- (BOOL)handleVoiceCommandButtonPress
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _liveContentOverlayForHandlingHardwareButtonEvents](self, "_liveContentOverlayForHandlingHardwareButtonEvents");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = objc_msgSend(v2, "handleVoiceCommandButtonPress");
  else
    v3 = 0;

  return v3;
}

- (BOOL)handleVolumeUpButtonPress
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _liveContentOverlayForHandlingHardwareButtonEvents](self, "_liveContentOverlayForHandlingHardwareButtonEvents");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = objc_msgSend(v2, "handleVolumeUpButtonPress");
  else
    v3 = 0;

  return v3;
}

- (BOOL)handleVolumeDownButtonPress
{
  void *v2;
  char v3;

  -[SBFluidSwitcherViewController _liveContentOverlayForHandlingHardwareButtonEvents](self, "_liveContentOverlayForHandlingHardwareButtonEvents");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v3 = objc_msgSend(v2, "handleVolumeDownButtonPress");
  else
    v3 = 0;

  return v3;
}

- (BOOL)handleHeadsetButtonPress:(BOOL)a3
{
  _BOOL8 v3;
  void *v4;
  char v5;

  v3 = a3;
  -[SBFluidSwitcherViewController _liveContentOverlayForHandlingHardwareButtonEvents](self, "_liveContentOverlayForHandlingHardwareButtonEvents");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v5 = objc_msgSend(v4, "handleHeadsetButtonPress:", v3);
  else
    v5 = 0;

  return v5;
}

- (id)_liveContentOverlayForHandlingHardwareButtonEvents
{
  void *v3;
  void *v4;
  NSMutableDictionary *liveContentOverlays;
  void *v6;
  void *v7;

  -[SBSwitcherModifier appLayoutForReceivingHardwareButtonEvents](self->_rootModifier, "appLayoutForReceivingHardwareButtonEvents");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    liveContentOverlays = self->_liveContentOverlays;
    objc_msgSend(v3, "anyLeafAppLayout");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary objectForKey:](liveContentOverlays, "objectForKey:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (void)_updateForegroundAppLayoutsWithNewLayoutState:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  SBPrepareForSceneUpdateSwitcherModifierEvent *v7;
  id v8;

  v4 = a3;
  objc_msgSend(v4, "appLayout");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "floatingAppLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = (void *)objc_opt_new();
  if (v8)
    objc_msgSend(v6, "addObject:", v8);
  if (v5)
    objc_msgSend(v6, "addObject:", v5);
  v7 = -[SBPrepareForSceneUpdateSwitcherModifierEvent initWithLiveAppLayouts:]([SBPrepareForSceneUpdateSwitcherModifierEvent alloc], "initWithLiveAppLayouts:", v6);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v7);

}

- (BOOL)canInterruptActiveTransition
{
  return -[SBSwitcherModifier shouldPerformRotationAnimationForOrientationChange](self->_rootModifier, "shouldPerformRotationAnimationForOrientationChange") ^ 1;
}

void __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_5(uint64_t a1)
{
  void *v2;
  _BYTE *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "delegate");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = *(_BYTE **)(a1 + 32);
  v4 = v2;
  if ((v3[969] & 0x20) != 0)
  {
    objc_msgSend(v2, "switcherContentController:setInterfaceOrientation:");
    v3 = *(_BYTE **)(a1 + 32);
  }
  objc_msgSend(v3, "_updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:", 0);

}

uint64_t __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_6(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_7(uint64_t a1)
{
  void *v1;
  id v2;

  v1 = *(void **)(a1 + 32);
  (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:", v2);

}

uint64_t __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_10(uint64_t a1)
{
  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(a1 + 32) + 16))(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(unsigned __int8 *)(a1 + 41));
}

void __82__SBFluidSwitcherViewController_performTransitionWithContext_animated_completion___block_invoke_11(uint64_t a1)
{
  _QWORD *WeakRetained;
  _QWORD *v3;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained[141] == *(_QWORD *)(a1 + 32))
  {
    v3 = WeakRetained;
    (*(void (**)(void))(*(_QWORD *)(a1 + 40) + 16))();
    WeakRetained = v3;
  }

}

- (void)_performContentViewScaleAnimationForDosido
{
  void *v3;
  void *v4;
  void *v5;
  CGFloat v6;
  double v7;
  double v8;
  double v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  id v16;
  void *v17;
  double v18;
  double v19;
  double v20;
  double v21;
  id v22;
  _QWORD v23[4];
  id v24;
  SBFluidSwitcherViewController *v25;
  _QWORD v26[4];
  id v27;
  SBFluidSwitcherViewController *v28;
  CGAffineTransform v29;
  CGAffineTransform v30;
  CGAffineTransform v31;
  CGAffineTransform v32;

  -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dosidoScaleDownSettings");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dosidoScaleUpSettings");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dosidoScale");
  v7 = v6;
  memset(&v32, 0, sizeof(v32));
  CGAffineTransformMakeScale(&v32, v6, v6);
  memset(&v31, 0, sizeof(v31));
  CGAffineTransformMakeScale(&v31, 1.0 / v7, 1.0 / v7);
  objc_msgSend(v3, "dosidoScaleUpDelay");
  v9 = v8;
  v10 = (void *)MEMORY[0x1E0CEABB0];
  objc_msgSend(v4, "settlingDuration");
  v12 = v11;
  objc_msgSend(v4, "dampingRatio");
  v14 = v13;
  v15 = MEMORY[0x1E0C809B0];
  v26[0] = MEMORY[0x1E0C809B0];
  v26[1] = 3221225472;
  v26[2] = __75__SBFluidSwitcherViewController__performContentViewScaleAnimationForDosido__block_invoke;
  v26[3] = &unk_1E8EA4698;
  v27 = v4;
  v28 = self;
  v29 = v32;
  v30 = v31;
  v16 = v4;
  objc_msgSend(v10, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v26, 0, v12, 0.0, v14, 0.0);
  v17 = (void *)MEMORY[0x1E0CEABB0];
  objc_msgSend(v5, "settlingDuration");
  v19 = v18;
  objc_msgSend(v5, "dampingRatio");
  v21 = v20;
  v23[0] = v15;
  v23[1] = 3221225472;
  v23[2] = __75__SBFluidSwitcherViewController__performContentViewScaleAnimationForDosido__block_invoke_3;
  v23[3] = &unk_1E8E9E820;
  v24 = v5;
  v25 = self;
  v22 = v5;
  objc_msgSend(v17, "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:", 0, v23, 0, v19, v9, v21, 0.0);

}

void __75__SBFluidSwitcherViewController__performContentViewScaleAnimationForDosido__block_invoke(uint64_t a1)
{
  void *v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  double v13;
  id v14;
  _QWORD v15[5];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  objc_msgSend(*(id *)(a1 + 32), "preferredFrameRateRange");
  v14 = (id)objc_claimAutoreleasedReturnValue();
  v2 = (void *)MEMORY[0x1E0CEABB0];
  objc_msgSend(v14, "frameRateRange");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v14, "highFrameRateReason");
  v15[1] = 3221225472;
  v10 = *(_OWORD *)(a1 + 64);
  v16 = *(_OWORD *)(a1 + 48);
  v17 = v10;
  v11 = *(_OWORD *)(a1 + 96);
  v18 = *(_OWORD *)(a1 + 80);
  v19 = v11;
  v12 = *(_OWORD *)(a1 + 128);
  v20 = *(_OWORD *)(a1 + 112);
  v15[0] = MEMORY[0x1E0C809B0];
  v15[2] = __75__SBFluidSwitcherViewController__performContentViewScaleAnimationForDosido__block_invoke_2;
  v15[3] = &unk_1E8EA4670;
  v15[4] = *(_QWORD *)(a1 + 40);
  v21 = v12;
  LODWORD(v12) = v6;
  LODWORD(v13) = v8;
  objc_msgSend(v2, "_modifyAnimationsWithPreferredFrameRateRange:updateReason:animations:", v9, v15, COERCE_DOUBLE(__PAIR64__(DWORD1(v20), v4)), *(double *)&v12, v13);

}

uint64_t __75__SBFluidSwitcherViewController__performContentViewScaleAnimationForDosido__block_invoke_2(uint64_t a1)
{
  void *v2;
  __int128 v3;
  void *v4;
  __int128 v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 1808);
  v3 = *(_OWORD *)(a1 + 56);
  v7 = *(_OWORD *)(a1 + 40);
  v8 = v3;
  v9 = *(_OWORD *)(a1 + 72);
  objc_msgSend(v2, "setTransform:", &v7);
  v4 = *(void **)(*(_QWORD *)(a1 + 32) + 1400);
  v5 = *(_OWORD *)(a1 + 104);
  v7 = *(_OWORD *)(a1 + 88);
  v8 = v5;
  v9 = *(_OWORD *)(a1 + 120);
  return objc_msgSend(v4, "setTransform:", &v7);
}

void __75__SBFluidSwitcherViewController__performContentViewScaleAnimationForDosido__block_invoke_3(uint64_t a1)
{
  void *v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  double v10;
  double v11;
  id v12;
  _QWORD v13[5];

  objc_msgSend(*(id *)(a1 + 32), "preferredFrameRateRange");
  v12 = (id)objc_claimAutoreleasedReturnValue();
  v2 = (void *)MEMORY[0x1E0CEABB0];
  objc_msgSend(v12, "frameRateRange");
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = objc_msgSend(v12, "highFrameRateReason");
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 3221225472;
  v13[2] = __75__SBFluidSwitcherViewController__performContentViewScaleAnimationForDosido__block_invoke_4;
  v13[3] = &unk_1E8E9DED8;
  v13[4] = *(_QWORD *)(a1 + 40);
  LODWORD(v10) = v6;
  LODWORD(v11) = v8;
  objc_msgSend(v2, "_modifyAnimationsWithPreferredFrameRateRange:updateReason:animations:", v9, v13, COERCE_DOUBLE((unint64_t)v4), v10, v11);

}

uint64_t __75__SBFluidSwitcherViewController__performContentViewScaleAnimationForDosido__block_invoke_4(uint64_t a1)
{
  void *v2;
  void *v3;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 1808);
  v7 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
  v8 = *MEMORY[0x1E0C9BAA8];
  v6 = v8;
  v9 = v7;
  v10 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
  v5 = v10;
  objc_msgSend(v2, "setTransform:", &v8);
  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 1400);
  v8 = v6;
  v9 = v7;
  v10 = v5;
  return objc_msgSend(v3, "setTransform:", &v8);
}

- (BOOL)_isPerformingMatchMoveToIconView
{
  void *v2;
  void *v3;
  void *v4;
  char v5;

  -[SBFluidSwitcherViewController view](self, "view");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layer");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "animationKeys");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "containsObject:", CFSTR("MatchMoveToIconViewAnimation"));

  return v5;
}

- (void)_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:(BOOL)a3
{
  _BOOL4 v3;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t i;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t j;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _QWORD v27[6];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _QWORD v32[5];
  _QWORD v33[5];
  _BYTE v34[128];
  _BYTE v35[128];
  uint64_t v36;

  v3 = a3;
  v36 = *MEMORY[0x1E0C80C00];
  if (-[SBFluidSwitcherViewController _isPerformingMatchMoveToIconView](self, "_isPerformingMatchMoveToIconView"))
  {
    if (v3)
      v5 = 3;
    else
      v5 = 2;
    v6 = (void *)MEMORY[0x1E0CEABB0];
    -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "switcherFadeOutSettings");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = MEMORY[0x1E0C809B0];
    v32[4] = self;
    v33[0] = MEMORY[0x1E0C809B0];
    v33[1] = 3221225472;
    v33[2] = __89__SBFluidSwitcherViewController__temporarilyHideMatchMovedZoomDownAnimationViewAnimated___block_invoke;
    v33[3] = &unk_1E8E9DED8;
    v33[4] = self;
    v32[0] = MEMORY[0x1E0C809B0];
    v32[1] = 3221225472;
    v32[2] = __89__SBFluidSwitcherViewController__temporarilyHideMatchMovedZoomDownAnimationViewAnimated___block_invoke_2;
    v32[3] = &unk_1E8EA46E8;
    objc_msgSend(v6, "sb_animateWithSettings:mode:animations:completion:", v8, v5, v33, v32);

    -[SBAppSwitcherSettings animationSettings](self->_settings, "animationSettings");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "iconFadeInSettings");
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v30 = 0u;
    v31 = 0u;
    v28 = 0u;
    v29 = 0u;
    -[NSMutableDictionary allValues](self->_hiddenIconViews, "allValues");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v28, v35, 16);
    if (v13)
    {
      v14 = v13;
      v15 = *(_QWORD *)v29;
      do
      {
        for (i = 0; i != v14; ++i)
        {
          if (*(_QWORD *)v29 != v15)
            objc_enumerationMutation(v12);
          v17 = *(_QWORD *)(*((_QWORD *)&v28 + 1) + 8 * i);
          v27[0] = v9;
          v27[1] = 3221225472;
          v27[2] = __89__SBFluidSwitcherViewController__temporarilyHideMatchMovedZoomDownAnimationViewAnimated___block_invoke_3;
          v27[3] = &unk_1E8E9E820;
          v27[4] = v17;
          v27[5] = self;
          objc_msgSend(MEMORY[0x1E0CEABB0], "sb_animateWithSettings:mode:animations:completion:", v11, v5, v27, 0);
        }
        v14 = objc_msgSend(v12, "countByEnumeratingWithState:objects:count:", &v28, v35, 16);
      }
      while (v14);
    }

    -[NSMutableDictionary removeAllObjects](self->_hiddenIconViews, "removeAllObjects");
    v25 = 0u;
    v26 = 0u;
    v23 = 0u;
    v24 = 0u;
    -[NSMutableDictionary allValues](self->_hiddenIconViewContainers, "allValues");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    v19 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v23, v34, 16);
    if (v19)
    {
      v20 = v19;
      v21 = *(_QWORD *)v24;
      do
      {
        for (j = 0; j != v20; ++j)
        {
          if (*(_QWORD *)v24 != v21)
            objc_enumerationMutation(v18);
          objc_msgSend(*(id *)(*((_QWORD *)&v23 + 1) + 8 * j), "removeObserver:", self);
        }
        v20 = objc_msgSend(v18, "countByEnumeratingWithState:objects:count:", &v23, v34, 16);
      }
      while (v20);
    }

    -[NSMutableDictionary removeAllObjects](self->_hiddenIconViewContainers, "removeAllObjects");
  }
}

void __89__SBFluidSwitcherViewController__temporarilyHideMatchMovedZoomDownAnimationViewAnimated___block_invoke(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "view");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setAlpha:", 0.0);

}

void __89__SBFluidSwitcherViewController__temporarilyHideMatchMovedZoomDownAnimationViewAnimated___block_invoke_2(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  if ((a3 & 1) == 0)
  {
    v10 = 0u;
    v11 = 0u;
    v8 = 0u;
    v9 = 0u;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1832), "allValues", 0);
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v9;
      do
      {
        v7 = 0;
        do
        {
          if (*(_QWORD *)v9 != v6)
            objc_enumerationMutation(v3);
          objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v7++), "removeIconOverlay");
        }
        while (v5 != v7);
        v5 = objc_msgSend(v3, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
      }
      while (v5);
    }

  }
}

uint64_t __89__SBFluidSwitcherViewController__temporarilyHideMatchMovedZoomDownAnimationViewAnimated___block_invoke_3(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setAllIconElementsButLabelHidden:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "removeObserver:", *(_QWORD *)(a1 + 40));
}

- (void)_folderExpansionAnimationWillBegin:(id)a3
{
  -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 1);
}

- (void)_containerScrolledEnoughToClipSwitcherIconView:(id)a3
{
  -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 0);
}

- (void)_iconControllerOverlayVisibilityDidChange:(id)a3
{
  -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 0);
}

- (void)_setUpSearchPresenterObservation
{
  id v3;

  -[SBFluidSwitcherViewController _searchPresenter](self, "_searchPresenter");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "addSearchPresenterObserver:", self);

}

- (void)_removeSearchPresenterObservation
{
  id v3;

  -[SBFluidSwitcherViewController _searchPresenter](self, "_searchPresenter");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "removeSearchPresenterObserver:", self);

}

- (void)searchPresenterWillPresentSearch:(id)a3 animated:(BOOL)a4
{
  -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 0, a4);
}

- (void)searchGesture:(id)a3 startedShowing:(BOOL)a4
{
  if (a4)
    -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 0);
}

- (void)iconViewWasRecycled:(id)a3
{
  void *v4;
  void *v5;
  int v6;
  id v7;

  v7 = a3;
  -[NSMutableDictionary allValues](self->_hiddenIconViews, "allValues");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "containsObject:", v7))
  {

LABEL_4:
    -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 0);
    goto LABEL_5;
  }
  -[NSMutableDictionary allValues](self->_hiddenIconViewContainers, "allValues");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "containsObject:", v7);

  if (v6)
    goto LABEL_4;
LABEL_5:

}

- (void)iconViewDidBecomeWindowless:(id)a3
{
  void *v4;
  void *v5;
  int v6;
  id v7;

  v7 = a3;
  -[NSMutableDictionary allValues](self->_hiddenIconViews, "allValues");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "containsObject:", v7))
  {

LABEL_4:
    -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 0);
    goto LABEL_5;
  }
  -[NSMutableDictionary allValues](self->_hiddenIconViewContainers, "allValues");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "containsObject:", v7);

  if (v6)
    goto LABEL_4;
LABEL_5:

}

- (void)iconViewSizeDidChange:(id)a3
{
  void *v4;
  void *v5;
  int v6;
  id v7;

  v7 = a3;
  -[NSMutableDictionary allValues](self->_hiddenIconViews, "allValues");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "containsObject:", v7))
  {

LABEL_4:
    -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 0);
    goto LABEL_5;
  }
  -[NSMutableDictionary allValues](self->_hiddenIconViewContainers, "allValues");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "containsObject:", v7);

  if (v6)
    goto LABEL_4;
LABEL_5:

}

- (void)iconViewWasDiscarded:(id)a3
{
  void *v4;
  void *v5;
  int v6;
  id v7;

  v7 = a3;
  -[NSMutableDictionary allValues](self->_hiddenIconViews, "allValues");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v4, "containsObject:", v7))
  {

LABEL_4:
    -[SBFluidSwitcherViewController _temporarilyHideMatchMovedZoomDownAnimationViewAnimated:](self, "_temporarilyHideMatchMovedZoomDownAnimationViewAnimated:", 0);
    goto LABEL_5;
  }
  -[NSMutableDictionary allValues](self->_hiddenIconViewContainers, "allValues");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "containsObject:", v7);

  if (v6)
    goto LABEL_4;
LABEL_5:

}

- (void)animatorWasCanceled:(id)a3
{
  SBMorphToPIPChangedSwitcherModifierEvent *v4;

  if (!objc_msgSend(a3, "direction"))
  {
    v4 = objc_alloc_init(SBMorphToPIPChangedSwitcherModifierEvent);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

  }
}

- (void)hideSourceViewForAnimator:(id)a3
{
  SBViewMorphAnimator **p_pipViewMorphAnimator;
  id v5;
  id WeakRetained;
  SBMorphToPIPChangedSwitcherModifierEvent *v7;

  p_pipViewMorphAnimator = &self->_pipViewMorphAnimator;
  v5 = a3;
  WeakRetained = objc_loadWeakRetained((id *)p_pipViewMorphAnimator);

  if (WeakRetained == v5)
  {
    v7 = objc_alloc_init(SBMorphToPIPChangedSwitcherModifierEvent);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v7);

  }
}

- (BOOL)shouldAnimateInsertionOfAppLayouts:(id)a3 atIndexes:(id)a4
{
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  int v16;

  v6 = a3;
  v7 = a4;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "count");

  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (objc_msgSend(v6, "count"))
  {
    v11 = 0;
    do
    {
      objc_msgSend(v6, "objectAtIndex:", v11);
      v12 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "objectAtIndex:", v11);
      v13 = (void *)objc_claimAutoreleasedReturnValue();
      v14 = objc_msgSend(v13, "unsignedIntegerValue");

      if (v10 >= v14)
        v15 = v14;
      else
        v15 = v10;
      v16 = -[SBSwitcherModifier shouldAnimateInsertionOrRemovalOfAppLayout:atIndex:](self->_rootModifier, "shouldAnimateInsertionOrRemovalOfAppLayout:atIndex:", v12, v15);

      if (v16)
        break;
      ++v11;
    }
    while (v11 < objc_msgSend(v6, "count"));
  }
  else
  {
    LOBYTE(v16) = 0;
  }

  return v16;
}

- (void)prepareAnimatedInsertionOfAppLayouts:(id)a3 atIndexes:(id)a4
{
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  SBFluidSwitcherViewController *v10;

  v6 = a4;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __80__SBFluidSwitcherViewController_prepareAnimatedInsertionOfAppLayouts_atIndexes___block_invoke;
  v8[3] = &unk_1E8EA4710;
  v9 = v6;
  v10 = self;
  v7 = v6;
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v8);

}

void __80__SBFluidSwitcherViewController_prepareAnimatedInsertionOfAppLayouts_atIndexes___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  SBInsertionSwitcherModifierEvent *v9;

  v5 = *(void **)(a1 + 32);
  v6 = a2;
  objc_msgSend(v5, "objectAtIndex:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "unsignedIntegerValue");

  v9 = -[SBInsertionSwitcherModifierEvent initWithAppLayout:intoIndex:phase:]([SBInsertionSwitcherModifierEvent alloc], "initWithAppLayout:intoIndex:phase:", v6, v8, 1);
  objc_msgSend(*(id *)(a1 + 40), "_dispatchEventAndHandleAction:", v9);

}

- (void)noteModelDidMutateForInsertionOfAppLayouts:(id)a3 atIndexes:(id)a4 willAnimate:(BOOL)a5
{
  id v8;
  id v9;
  _QWORD v10[4];
  id v11;
  SBFluidSwitcherViewController *v12;

  v8 = a4;
  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __98__SBFluidSwitcherViewController_noteModelDidMutateForInsertionOfAppLayouts_atIndexes_willAnimate___block_invoke;
  v10[3] = &unk_1E8EA4710;
  v9 = v8;
  v11 = v9;
  v12 = self;
  objc_msgSend(a3, "enumerateObjectsUsingBlock:", v10);
  if (!a5)
  {
    -[SBFluidSwitcherViewController _updateVisibleItems](self, "_updateVisibleItems");
    -[SBFluidSwitcherViewController _updateVisibleAccessoryViews](self, "_updateVisibleAccessoryViews");
  }

}

void __98__SBFluidSwitcherViewController_noteModelDidMutateForInsertionOfAppLayouts_atIndexes_willAnimate___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  SBInsertionSwitcherModifierEvent *v9;

  v5 = *(void **)(a1 + 32);
  v6 = a2;
  objc_msgSend(v5, "objectAtIndex:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "unsignedIntegerValue");

  v9 = -[SBInsertionSwitcherModifierEvent initWithAppLayout:intoIndex:phase:]([SBInsertionSwitcherModifierEvent alloc], "initWithAppLayout:intoIndex:phase:", v6, v8, 2);
  objc_msgSend(*(id *)(a1 + 40), "_dispatchEventAndHandleAction:", v9);

}

- (void)performAnimatedInsertionOfAppLayouts:(id)a3 atIndexes:(id)a4 completion:(id)a5
{
  id v8;
  id v9;
  id v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  _QWORD v16[4];
  id v17;
  id v18;
  SBFluidSwitcherViewController *v19;
  id v20;
  _QWORD v21[4];
  id v22;
  SBFluidSwitcherViewController *v23;

  v8 = a3;
  v9 = a4;
  v10 = a5;
  -[SBFluidSwitcherViewController _updateVisibleItems](self, "_updateVisibleItems");
  v11 = MEMORY[0x1E0C809B0];
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 3221225472;
  v21[2] = __91__SBFluidSwitcherViewController_performAnimatedInsertionOfAppLayouts_atIndexes_completion___block_invoke;
  v21[3] = &unk_1E8EA4710;
  v12 = v9;
  v22 = v12;
  v23 = self;
  objc_msgSend(v8, "enumerateObjectsUsingBlock:", v21);
  v16[0] = v11;
  v16[1] = 3221225472;
  v16[2] = __91__SBFluidSwitcherViewController_performAnimatedInsertionOfAppLayouts_atIndexes_completion___block_invoke_2;
  v16[3] = &unk_1E8EA4738;
  v17 = v8;
  v18 = v12;
  v19 = self;
  v20 = v10;
  v13 = v10;
  v14 = v12;
  v15 = v8;
  -[SBFluidSwitcherViewController _updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:](self, "_updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:", v16);

}

void __91__SBFluidSwitcherViewController_performAnimatedInsertionOfAppLayouts_atIndexes_completion___block_invoke(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  SBInsertionSwitcherModifierEvent *v9;

  v5 = *(void **)(a1 + 32);
  v6 = a2;
  objc_msgSend(v5, "objectAtIndex:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "unsignedIntegerValue");

  v9 = -[SBInsertionSwitcherModifierEvent initWithAppLayout:intoIndex:phase:]([SBInsertionSwitcherModifierEvent alloc], "initWithAppLayout:intoIndex:phase:", v6, v8, 3);
  objc_msgSend(*(id *)(a1 + 40), "_dispatchEventAndHandleAction:", v9);

}

void __91__SBFluidSwitcherViewController_performAnimatedInsertionOfAppLayouts_atIndexes_completion___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  uint64_t v12;

  v10[0] = MEMORY[0x1E0C809B0];
  v10[1] = 3221225472;
  v10[2] = __91__SBFluidSwitcherViewController_performAnimatedInsertionOfAppLayouts_atIndexes_completion___block_invoke_3;
  v10[3] = &unk_1E8EA4710;
  v6 = *(void **)(a1 + 32);
  v7 = *(id *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v11 = v7;
  v12 = v8;
  objc_msgSend(v6, "enumerateObjectsUsingBlock:", v10);
  v9 = *(_QWORD *)(a1 + 56);
  if (v9)
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v9, a2, a3);

}

void __91__SBFluidSwitcherViewController_performAnimatedInsertionOfAppLayouts_atIndexes_completion___block_invoke_3(uint64_t a1, void *a2, uint64_t a3)
{
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  SBInsertionSwitcherModifierEvent *v9;

  v5 = *(void **)(a1 + 32);
  v6 = a2;
  objc_msgSend(v5, "objectAtIndex:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "unsignedIntegerValue");

  v9 = -[SBInsertionSwitcherModifierEvent initWithAppLayout:intoIndex:phase:]([SBInsertionSwitcherModifierEvent alloc], "initWithAppLayout:intoIndex:phase:", v6, v8, 4);
  objc_msgSend(*(id *)(a1 + 40), "_dispatchEventAndHandleAction:", v9);

}

- (void)_performSwitcherDropWithContext:(id)a3 mutationBlock:(id)a4
{
  void (**v6)(_QWORD);
  id v7;
  SBCardDropSwitcherModifierEvent *v8;
  SBCardDropSwitcherModifierEvent *v9;

  v6 = (void (**)(_QWORD))a4;
  v7 = a3;
  v9 = -[SBCardDropSwitcherModifierEvent initWithPhase:context:]([SBCardDropSwitcherModifierEvent alloc], "initWithPhase:context:", 1, v7);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v9);
  v6[2](v6);

  v8 = -[SBCardDropSwitcherModifierEvent initWithPhase:context:]([SBCardDropSwitcherModifierEvent alloc], "initWithPhase:context:", 2, v7);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v8);

}

- (void)_noteSwitcherDropAnimationCompletedWithContext:(id)a3
{
  id v4;
  SBCardDropSwitcherModifierEvent *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  _QWORD v22[3];
  _QWORD v23[4];

  v23[3] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = -[SBCardDropSwitcherModifierEvent initWithPhase:context:]([SBCardDropSwitcherModifierEvent alloc], "initWithPhase:context:", 3, v4);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v5);
  objc_msgSend(v4, "draggingLeafAppLayout");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "itemForLayoutRole:", 1);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "bundleIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = (void *)MEMORY[0x1E0C99E08];
  v10 = *MEMORY[0x1E0DABF28];
  v23[0] = v8;
  v11 = *MEMORY[0x1E0DABF38];
  v22[0] = v10;
  v22[1] = v11;
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v4, "currentDropRegion"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  v23[1] = v12;
  v22[2] = *MEMORY[0x1E0DABF20];
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", objc_msgSend(v4, "currentDropAction"));
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v23[2] = v13;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v23, v22, 3);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "dictionaryWithDictionary:", v14);
  v15 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v4, "intersectingLeafAppLayout");
  v16 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v16, "itemForLayoutRole:", 1);
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "bundleIdentifier");
  v18 = (void *)objc_claimAutoreleasedReturnValue();

  if (v18)
    objc_msgSend(v15, "setObject:forKey:", v18, *MEMORY[0x1E0DABF30]);
  v19 = (void *)MEMORY[0x1E0DA9D78];
  v20 = v15;
  objc_msgSend(v19, "sharedInstance");
  v21 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v21, "emitEvent:withPayload:", 50, v20);

}

- (void)removeLayoutRole:(int64_t)a3 inSpace:(id)a4 mutationBlock:(id)a5 reason:(int64_t)a6
{
  id v10;
  void (**v11)(_QWORD);
  void *v12;
  void *v13;
  void *v14;
  uint64_t v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  id v21;
  SBRemovalSwitcherModifierEvent *v22;
  SBRemovalSwitcherModifierEvent *v23;
  _QWORD v24[4];
  id v25;
  id v26;
  id v27[3];
  _QWORD v28[5];
  id v29;
  id location[2];

  v10 = a4;
  v11 = (void (**)(_QWORD))a5;
  objc_msgSend(v10, "leafAppLayoutForRole:", a3);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v12);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  if (v13
    && (-[SBFluidSwitcherViewController appLayouts](self, "appLayouts"),
        v14 = (void *)objc_claimAutoreleasedReturnValue(),
        v15 = objc_msgSend(v14, "indexOfObject:", v13),
        v14,
        -[SBSwitcherModifier shouldAnimateInsertionOrRemovalOfAppLayout:atIndex:](self->_rootModifier, "shouldAnimateInsertionOrRemovalOfAppLayout:atIndex:", v13, v15)))
  {
    objc_msgSend(v12, "allItems");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "firstObject");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    v18 = (void *)objc_msgSend(v13, "layoutRoleForItem:", v17);

    v23 = -[SBRemovalSwitcherModifierEvent initWithLayoutRole:inAppLayout:reason:phase:]([SBRemovalSwitcherModifierEvent alloc], "initWithLayoutRole:inAppLayout:reason:phase:", v18, v13, a6, 1);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:");
    v11[2](v11);
    v22 = -[SBRemovalSwitcherModifierEvent initWithLayoutRole:inAppLayout:reason:phase:]([SBRemovalSwitcherModifierEvent alloc], "initWithLayoutRole:inAppLayout:reason:phase:", v18, v13, a6, 2);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:");
    objc_initWeak(location, self);
    v19 = MEMORY[0x1E0C809B0];
    v20 = (void *)MEMORY[0x1E0DA9D48];
    v28[0] = MEMORY[0x1E0C809B0];
    v28[1] = 3221225472;
    v28[2] = __79__SBFluidSwitcherViewController_removeLayoutRole_inSpace_mutationBlock_reason___block_invoke;
    v28[3] = &unk_1E8EA4760;
    v28[4] = self;
    v21 = v12;
    v29 = v21;
    v24[0] = v19;
    v24[1] = 3221225472;
    v24[2] = __79__SBFluidSwitcherViewController_removeLayoutRole_inSpace_mutationBlock_reason___block_invoke_3;
    v24[3] = &unk_1E8EA4788;
    objc_copyWeak(v27, location);
    v27[1] = v18;
    v25 = v13;
    v27[2] = (id)a6;
    v26 = v21;
    objc_msgSend(v20, "perform:finalCompletion:options:delegate:", v28, v24, 0, self);

    objc_destroyWeak(v27);
    objc_destroyWeak(location);

  }
  else
  {
    v11[2](v11);
    -[SBFluidSwitcherPageContentViewProvider purgePageContentViewForAppLayout:](self->_pageContentViewProvider, "purgePageContentViewForAppLayout:", v12);
  }

}

void __79__SBFluidSwitcherViewController_removeLayoutRole_inSpace_mutationBlock_reason___block_invoke(uint64_t a1, void *a2)
{
  void (**v3)(id, const __CFString *);
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  _QWORD v11[4];
  id v12;

  v3 = a2;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1824), "objectForKey:", *(_QWORD *)(a1 + 40));
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v5 = (void *)MEMORY[0x1E0CEABB0];
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1064), "animationSettings");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "opacitySettings");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __79__SBFluidSwitcherViewController_removeLayoutRole_inSpace_mutationBlock_reason___block_invoke_2;
    v11[3] = &unk_1E8E9DED8;
    v12 = v4;
    v3[2](v3, CFSTR("fade item container"));
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "sb_animateWithSettings:mode:animations:completion:", v7, 3, v11, v8);

  }
  v9 = *(void **)(a1 + 32);
  v3[2](v3, CFSTR("update visible items accessory views layout and style"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "_updateVisibleItemsAccessoryViewsLayoutAndStyleWithCompletion:", v10);

}

uint64_t __79__SBFluidSwitcherViewController_removeLayoutRole_inSpace_mutationBlock_reason___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

void __79__SBFluidSwitcherViewController_removeLayoutRole_inSpace_mutationBlock_reason___block_invoke_3(uint64_t a1)
{
  SBRemovalSwitcherModifierEvent *v2;
  id *WeakRetained;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    v2 = -[SBRemovalSwitcherModifierEvent initWithLayoutRole:inAppLayout:reason:phase:]([SBRemovalSwitcherModifierEvent alloc], "initWithLayoutRole:inAppLayout:reason:phase:", *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 64), 3);
    objc_msgSend(WeakRetained, "_dispatchEventAndHandleAction:", v2);
    objc_msgSend(WeakRetained[129], "purgePageContentViewForAppLayout:", *(_QWORD *)(a1 + 40));

  }
}

- (void)noteWindowManagementStyleDidChange
{
  SBUpdateWindowingModeSwitcherModifierEvent *v3;

  v3 = objc_alloc_init(SBUpdateWindowingModeSwitcherModifierEvent);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v3);

  -[SBFluidSwitcherViewController _updateContentViewSublayerTransform](self, "_updateContentViewSublayerTransform");
  -[SBFluidSwitcherViewController _updateChamoisDefaultsObserverIfNeeded](self, "_updateChamoisDefaultsObserverIfNeeded");
}

- (void)viewDidLayoutSubviews
{
  BSInvalidatable *applicationRestrictionUpdatePendingAssertion;
  objc_super v4;

  v4.receiver = self;
  v4.super_class = (Class)SBFluidSwitcherViewController;
  -[SBFluidSwitcherViewController viewDidLayoutSubviews](&v4, sel_viewDidLayoutSubviews);
  -[BSInvalidatable invalidate](self->_applicationRestrictionUpdatePendingAssertion, "invalidate");
  applicationRestrictionUpdatePendingAssertion = self->_applicationRestrictionUpdatePendingAssertion;
  self->_applicationRestrictionUpdatePendingAssertion = 0;

}

- (void)viewDidDisappear:(BOOL)a3
{
  BSInvalidatable *applicationRestrictionUpdatePendingAssertion;
  objc_super v5;

  v5.receiver = self;
  v5.super_class = (Class)SBFluidSwitcherViewController;
  -[SBFluidSwitcherViewController viewDidDisappear:](&v5, sel_viewDidDisappear_, a3);
  -[BSInvalidatable invalidate](self->_applicationRestrictionUpdatePendingAssertion, "invalidate");
  applicationRestrictionUpdatePendingAssertion = self->_applicationRestrictionUpdatePendingAssertion;
  self->_applicationRestrictionUpdatePendingAssertion = 0;

}

void __106__SBFluidSwitcherViewController__configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext___block_invoke(uint64_t a1)
{
  SBFloatingDockWindowLevelAssertion *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  if (!*(_QWORD *)(*(_QWORD *)(a1 + 32) + 2000))
  {
    v2 = [SBFloatingDockWindowLevelAssertion alloc];
    v3 = -[SBFloatingDockWindowLevelAssertion initWithFloatingDockController:priority:level:reason:](v2, "initWithFloatingDockController:priority:level:reason:", *(_QWORD *)(a1 + 40), 1, CFSTR("TransientOverlay"), *MEMORY[0x1E0CEBBD0] + 15.0 + -0.1);
    v4 = *(_QWORD *)(a1 + 32);
    v5 = *(void **)(v4 + 2000);
    *(_QWORD *)(v4 + 2000) = v3;

  }
}

void __106__SBFluidSwitcherViewController__configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext___block_invoke_2(uint64_t a1)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;

  objc_msgSend(*(id *)(a1 + 32), "_activeTransientOverlayPresentedAppLayout");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  if (v2)
  {

LABEL_3:
    (*(void (**)(void))(*(_QWORD *)(a1 + 48) + 16))();
    return;
  }
  objc_msgSend(*(id *)(a1 + 32), "layoutContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "activeTransitionContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = *(void **)(a1 + 40);

  if (v4 == v5)
    goto LABEL_3;
}

void __71__SBFluidSwitcherViewController__layoutSlideoverTonguesWithCompletion___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  CGFloat v9;
  void *v10;
  void *v11;
  CGAffineTransform *v12;
  void *v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  CGAffineTransform v23;

  if (!*(_QWORD *)(a1 + 32))
  {
    objc_msgSend(*(id *)(a1 + 40), "floatingApplicationFrameInInterfaceOrientation:floatingConfiguration:", objc_msgSend(*(id *)(a1 + 40), "switcherInterfaceOrientation"), 2);
    v15 = v14;
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1424), "setBounds:", 0.0, 0.0);
    v16 = objc_msgSend((id)*MEMORY[0x1E0CEB258], "userInterfaceLayoutDirection");
    v17 = *(_QWORD *)(a1 + 48);
    if (v16 == 1)
    {
      if (v17 != 1)
      {
LABEL_6:
        v18 = v15 * 0.5 + *(double *)(a1 + 72);
LABEL_9:
        objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1424), "setCenter:", v18, *(double *)(a1 + 80) * 0.5);
        v13 = *(void **)(*(_QWORD *)(a1 + 40) + 1424);
        v19 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
        v20 = *MEMORY[0x1E0C9BAA8];
        v21 = v19;
        v22 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
        v12 = (CGAffineTransform *)&v20;
        goto LABEL_10;
      }
    }
    else if (v17 == 1)
    {
      goto LABEL_6;
    }
    v18 = v15 * -0.5;
    goto LABEL_9;
  }
  objc_msgSend(*(id *)(a1 + 40), "appLayouts");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "indexOfObject:", *(_QWORD *)(a1 + 32));

  if (v3 == 0x7FFFFFFFFFFFFFFFLL)
    return;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1936), "frameForIndex:", v3);
  v5 = v4;
  v7 = v6;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1936), "scaleForIndex:", v3);
  v9 = v8;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1424), "setBounds:", 0.0, 0.0, v5, v7);
  v10 = *(void **)(*(_QWORD *)(a1 + 40) + 1424);
  UIRectGetCenter();
  objc_msgSend(v10, "setCenter:");
  v11 = *(void **)(*(_QWORD *)(a1 + 40) + 1424);
  CGAffineTransformMakeScale(&v23, v9, v9);
  v12 = &v23;
  v13 = v11;
LABEL_10:
  objc_msgSend(v13, "setTransform:", v12, v20, v21, v22);
}

uint64_t __77__SBFluidSwitcherViewController__applyRootContentViewClippingWithCompletion___block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;

  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0CEABB0]), "initWithFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 1592);
  *(_QWORD *)(v3 + 1592) = v2;

  v5 = *(void **)(*(_QWORD *)(a1 + 32) + 1592);
  objc_msgSend(MEMORY[0x1E0CEA478], "blackColor");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "setBackgroundColor:", v6);

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1592), "layer");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "setCompositingFilter:", *MEMORY[0x1E0CD2C50]);

  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1592));
}

uint64_t __77__SBFluidSwitcherViewController__applyRootContentViewClippingWithCompletion___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1592), "setFrame:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64));
}

void __79__SBFluidSwitcherViewController__applyRootContentViewBlurRadiusWithCompletion___block_invoke(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "layer");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setValue:forKeyPath:", v2, CFSTR("filters.gaussianBlur.inputRadius"));

}

uint64_t __79__SBFluidSwitcherViewController__applyRootContentViewBlurRadiusWithCompletion___block_invoke_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t result;

  if ((_DWORD)a2)
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "layer");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "setFilters:", 0);

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "layer");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(*(id *)(a1 + 32), "traitCollection");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "displayScale");
    objc_msgSend(v7, "setRasterizationScale:");

    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "layer");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "setShouldRasterize:", 0);

  }
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, a3);
  return result;
}

void __79__SBFluidSwitcherViewController__applyRootContentViewBlurRadiusWithCompletion___block_invoke_3(uint64_t a1)
{
  void *v2;
  id v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "layer");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 40));
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "setValue:forKeyPath:", v2, CFSTR("filters.gaussianBlur.inputRadius"));

}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_2()
{
  uint64_t v0;
  void *v1;
  void *v2;
  CAFrameRateRange v4;

  v0 = objc_msgSend(objc_alloc(MEMORY[0x1E0DA9E08]), "initWithDefaultValues");
  v1 = (void *)kKeyboardHeightIncludingAccessory_block_invoke_keyboardHeightSettings;
  kKeyboardHeightIncludingAccessory_block_invoke_keyboardHeightSettings = v0;

  objc_msgSend((id)kKeyboardHeightIncludingAccessory_block_invoke_keyboardHeightSettings, "setResponse:", 0.25);
  objc_msgSend((id)kKeyboardHeightIncludingAccessory_block_invoke_keyboardHeightSettings, "setDampingRatio:", 1.0);
  v2 = (void *)kKeyboardHeightIncludingAccessory_block_invoke_keyboardHeightSettings;
  v4 = CAFrameRateRangeMake(80.0, 120.0, 120.0);
  return objc_msgSend(v2, "setFrameRateRange:highFrameRateReason:", 1114113, *(double *)&v4.minimum, *(double *)&v4.maximum, *(double *)&v4.preferred);
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_3(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a2, "keyPath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEqualToString:", CFSTR("position"));

  return v3;
}

void __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_5(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  void (**v4)(_QWORD);
  void *v5;
  _QWORD v6[4];
  void (**v7)(_QWORD);
  _QWORD v8[4];
  id v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v2 = MEMORY[0x1E0C809B0];
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_6;
  v8[3] = &unk_1E8EA4938;
  v9 = *(id *)(a1 + 32);
  v3 = *(_OWORD *)(a1 + 64);
  v10 = *(_OWORD *)(a1 + 48);
  v11 = v3;
  v12 = *(_QWORD *)(a1 + 80);
  v4 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v8);
  if (objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1936), "shouldPerformRotationAnimationForOrientationChange"))
  {
    v5 = (void *)MEMORY[0x1E0CEABB0];
    v6[0] = v2;
    v6[1] = 3221225472;
    v6[2] = __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_7;
    v6[3] = &unk_1E8E9E8D0;
    v7 = v4;
    objc_msgSend(v5, "performWithoutAnimation:", v6);

  }
  else
  {
    v4[2](v4);
  }

}

void __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_6(uint64_t a1)
{
  void *v2;
  void *v3;
  id v4;

  objc_msgSend(*(id *)(a1 + 32), "layer");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setAnchorPoint:", *(double *)(a1 + 40), *(double *)(a1 + 48));

  objc_msgSend(*(id *)(a1 + 32), "setCenter:", *(double *)(a1 + 56), *(double *)(a1 + 64));
  objc_msgSend(*(id *)(a1 + 32), "layer");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", *(double *)(a1 + 72));
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setValue:forKey:", v3, CFSTR("transform.translation.x"));

}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_7(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_8(uint64_t a1)
{
  SBBlurProgressSwitcherModifierEvent *v2;

  v2 = -[SBBlurProgressSwitcherModifierEvent initWithProgress:]([SBBlurProgressSwitcherModifierEvent alloc], "initWithProgress:", 0.0);
  objc_msgSend(*(id *)(a1 + 32), "_dispatchEventAndHandleAction:", v2);

}

void __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_9(uint64_t a1)
{
  SBBlurProgressSwitcherModifierEvent *v2;

  v2 = -[SBBlurProgressSwitcherModifierEvent initWithProgress:]([SBBlurProgressSwitcherModifierEvent alloc], "initWithProgress:", 1.0);
  objc_msgSend(*(id *)(a1 + 32), "_dispatchEventAndHandleAction:", v2);

}

void __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_16(uint64_t a1)
{
  id v2;

  objc_msgSend(*(id *)(a1 + 32), "layer");
  v2 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "setValue:forKey:", *(_QWORD *)(a1 + 40), CFSTR("meshTransform"));

}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_21(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "setContentClippingFrame:cornerRadii:", *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72), *(double *)(a1 + 80), *(double *)(a1 + 88), *(double *)(a1 + 96));
  return objc_msgSend(*(id *)(a1 + 32), "layoutIfNeeded");
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_22(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  objc_msgSend(*(id *)(a1 + 32), "_noteItemContainerDidUpdateContentClippingWithMode:", *(_QWORD *)(a1 + 48));
  result = *(_QWORD *)(a1 + 40);
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, a3);
  return result;
}

uint64_t __70__SBFluidSwitcherViewController__layoutAppLayout_roleMask_completion___block_invoke_25(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v3;

  objc_msgSend(a2, "keyPath");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "isEqualToString:", CFSTR("position"));

  return v3;
}

- (void)_noteItemContainerDidUpdateContentClippingWithMode:(int64_t)a3
{
  uint64_t v4;
  void *v5;
  BOOL v6;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)&self->_pipViewMorphAnimator);
  v4 = objc_msgSend(WeakRetained, "direction");
  v5 = WeakRetained;
  if (WeakRetained)
    v6 = a3 == 3;
  else
    v6 = 0;
  if (v6 && v4 == 0)
  {
    objc_msgSend(WeakRetained, "noteSourceAnimationsDidEnd:finished:continueBlock:", 4, 1, 0);
    v5 = WeakRetained;
  }

}

- (id)_animatablePropertyWithNotifications:(id)a3 progressEventType:(Class)a4
{
  id v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD v15[4];
  id v16;
  SBFluidSwitcherViewController *v17;
  id v18[2];
  id location;
  _QWORD v20[2];

  v20[1] = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = (void *)objc_msgSend(v6, "mutableCopy");
  v8 = objc_alloc_init(MEMORY[0x1E0CEABC0]);
  objc_msgSend(v8, "setValue:", 0.0);
  objc_initWeak(&location, v8);
  v9 = (void *)MEMORY[0x1E0CEABB0];
  v20[0] = v8;
  objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v20, 1);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __88__SBFluidSwitcherViewController__animatablePropertyWithNotifications_progressEventType___block_invoke;
  v15[3] = &unk_1E8EA4BA8;
  objc_copyWeak(v18, &location);
  v11 = v7;
  v18[1] = a4;
  v16 = v11;
  v17 = self;
  objc_msgSend(v9, "_createTransformerWithInputAnimatableProperties:presentationValueChangedCallback:", v10, v15);

  if (objc_msgSend(v11, "containsObject:", &unk_1E91CF668))
  {
    v12 = (void *)objc_msgSend([a4 alloc], "initWithProgress:", 0.0);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v12);
    objc_msgSend(v11, "removeObject:", &unk_1E91CF668);

  }
  v13 = v8;

  objc_destroyWeak(v18);
  objc_destroyWeak(&location);

  return v13;
}

void __88__SBFluidSwitcherViewController__animatablePropertyWithNotifications_progressEventType___block_invoke(uint64_t a1)
{
  id WeakRetained;
  void *v3;
  int v4;
  double v5;
  double v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t j;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[128];
  _BYTE v30[128];
  uint64_t v31;

  v31 = *MEMORY[0x1E0C80C00];
  WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    v4 = objc_msgSend(WeakRetained, "isInvalidated");
    v20 = v3;
    objc_msgSend(v3, "presentationValue");
    v6 = v5;
    v25 = 0u;
    v26 = 0u;
    v27 = 0u;
    v28 = 0u;
    v7 = *(id *)(a1 + 32);
    v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
    if (v8)
    {
      v9 = v8;
      v10 = 0;
      v11 = *(_QWORD *)v26;
      do
      {
        for (i = 0; i != v9; ++i)
        {
          if (*(_QWORD *)v26 != v11)
            objc_enumerationMutation(v7);
          v13 = *(void **)(*((_QWORD *)&v25 + 1) + 8 * i);
          objc_msgSend(v13, "floatValue");
          if (((BSFloatLessThanOrEqualToFloat() ^ 1 | v4) & 1) == 0)
          {
            v14 = (void *)objc_msgSend(objc_alloc(*(Class *)(a1 + 56)), "initWithProgress:", v6);
            objc_msgSend(*(id *)(a1 + 40), "_dispatchEventAndHandleAction:", v14);
            if (!v10)
              v10 = (void *)objc_opt_new();
            objc_msgSend(v10, "addObject:", v13);

          }
        }
        v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v25, v30, 16);
      }
      while (v9);
    }
    else
    {
      v10 = 0;
    }

    v23 = 0u;
    v24 = 0u;
    v21 = 0u;
    v22 = 0u;
    v15 = v10;
    v16 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
    if (v16)
    {
      v17 = v16;
      v18 = *(_QWORD *)v22;
      do
      {
        for (j = 0; j != v17; ++j)
        {
          if (*(_QWORD *)v22 != v18)
            objc_enumerationMutation(v15);
          objc_msgSend(*(id *)(a1 + 32), "removeObject:", *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * j));
        }
        v17 = objc_msgSend(v15, "countByEnumeratingWithState:objects:count:", &v21, v29, 16);
      }
      while (v17);
    }

    v3 = v20;
  }

}

void __55__SBFluidSwitcherViewController__ensureSubviewOrdering__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  unint64_t v7;
  void *v8;
  unint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void *v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  void (*v25)(uint64_t);
  id v26;
  _QWORD v27[4];

  v5 = a2;
  v6 = a3;
  v7 = objc_msgSend(v5, "integerValue");
  objc_msgSend(*(id *)(a1 + 32), "appLayouts");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v8, "count");

  if (v7 < v9)
  {
    objc_msgSend(*(id *)(a1 + 32), "appLayouts");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "objectAtIndex:", objc_msgSend(v5, "integerValue"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    v27[0] = 0;
    v27[1] = v27;
    v27[2] = 0x2020000000;
    v27[3] = -1;
    v21 = 0;
    v22 = &v21;
    v23 = 0x3032000000;
    v24 = __Block_byref_object_copy__13;
    v25 = __Block_byref_object_dispose__13;
    v26 = 0;
    v13 = MEMORY[0x1E0C809B0];
    v14 = 3221225472;
    v15 = __55__SBFluidSwitcherViewController__ensureSubviewOrdering__block_invoke_519;
    v16 = &unk_1E8EA4BD0;
    v17 = *(_QWORD *)(a1 + 32);
    v12 = v11;
    v18 = v12;
    v19 = v27;
    v20 = &v21;
    objc_msgSend(v12, "enumerate:", &v13);
    if (v22[5])
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "insertSubview:belowSubview:", v6, v13, v14, v15, v16, v17);

    _Block_object_dispose(&v21, 8);
    _Block_object_dispose(v27, 8);

  }
}

void __55__SBFluidSwitcherViewController__ensureSubviewOrdering__block_invoke_519(uint64_t a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  unint64_t v6;
  uint64_t v7;
  id obj;

  v3 = *(void **)(*(_QWORD *)(a1 + 32) + 1824);
  objc_msgSend(*(id *)(a1 + 40), "leafAppLayoutForRole:", a2);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "objectForKey:", v4);
  obj = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "subviews");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "indexOfObject:", obj);

  v7 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8);
  if (v6 < *(_QWORD *)(v7 + 24))
  {
    *(_QWORD *)(v7 + 24) = v6;
    objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), obj);
  }

}

uint64_t __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_3(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "itemForLayoutRole:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v3, "containsItem:", v4);

  return v5;
}

uint64_t __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_4(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "isOrContainsAppLayout:", *(_QWORD *)(a1 + 32));
}

uint64_t __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_5(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "itemForLayoutRole:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v3, "containsItem:", v4);

  return v5;
}

uint64_t __52__SBFluidSwitcherViewController__updateVisibleItems__block_invoke_7(uint64_t a1, void *a2)
{
  void *v2;
  id v3;
  void *v4;
  uint64_t v5;

  v2 = *(void **)(a1 + 32);
  v3 = a2;
  objc_msgSend(v2, "itemForLayoutRole:", 1);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v3, "containsItem:", v4);

  return v5;
}

- (void)_prepareForCrossfadeIfNeeded
{
  void *v3;
  void *v4;
  UIView *v5;
  UIView *crossfadeSnapshotView;
  UIView *v7;
  void *v8;
  void *v9;
  id v10;

  if (SBReduceMotion())
  {
    -[UIView removeFromSuperview](self->_crossfadeSnapshotView, "removeFromSuperview");
    -[SBFluidSwitcherViewController view](self, "view");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v3, "window");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    SBCreateMainScreenSnapshotBelowWindowWithOrientation(v4, 1, 0, 0);
    v10 = (id)objc_claimAutoreleasedReturnValue();

    v5 = (UIView *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEA658]), "initWithImage:", v10);
    crossfadeSnapshotView = self->_crossfadeSnapshotView;
    self->_crossfadeSnapshotView = v5;
    v7 = v5;

    -[SBFluidSwitcherViewController view](self, "view");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "window");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "addSubview:", self->_crossfadeSnapshotView);

  }
}

uint64_t __73__SBFluidSwitcherViewController__performCrossfadeIfNeededWithCompletion___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

uint64_t __73__SBFluidSwitcherViewController__performCrossfadeIfNeededWithCompletion___block_invoke_2(_QWORD *a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t result;

  v4 = (void *)a1[4];
  if (v4 == *(void **)(a1[5] + 1176))
  {
    objc_msgSend(v4, "removeFromSuperview");
    v5 = a1[5];
    v6 = *(void **)(v5 + 1176);
    *(_QWORD *)(v5 + 1176) = 0;

  }
  result = a1[6];
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(result + 16))(result, a2, 0);
  return result;
}

uint64_t __74__SBFluidSwitcherViewController__updateTitlePresenceForAdjustedAppLayout___block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_layoutAppLayout:roleMask:completion:", *(_QWORD *)(a1 + 40), 0, 0);
  objc_msgSend(*(id *)(a1 + 32), "_applyStyleToAppLayout:roleMask:completion:", *(_QWORD *)(a1 + 40), 0, 0);
  objc_msgSend(*(id *)(a1 + 48), "layoutIfNeeded");
  return objc_msgSend(*(id *)(a1 + 56), "layoutIfNeeded");
}

- (void)_applyOcclusionStateToLiveContentOverlay:(id)a3 forLayoutRole:(int64_t)a4 inAppLayout:(id)a5
{
  SBSwitcherModifier *rootModifier;
  id v8;

  rootModifier = self->_rootModifier;
  v8 = a3;
  objc_msgSend(v8, "setOccluded:", -[SBSwitcherModifier isLayoutRoleOccluded:inAppLayout:](rootModifier, "isLayoutRoleOccluded:inAppLayout:", a4, a5));

}

- (BOOL)_removeVisibleItemContainerForAppLayout:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  char v10;
  void *v12;

  v5 = a3;
  -[SBFluidSwitcherViewController _itemContainerForAppLayoutIfExists:](self, "_itemContainerForAppLayoutIfExists:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "setVisible:", 0);
    objc_msgSend(v7, "setActive:", 0);
    objc_msgSend(v7, "_removeAllRetargetableAnimations:", 1);
    +[SBBlurItemContainerParameters defaultCrossblurBlurParameters](SBBlurItemContainerParameters, "defaultCrossblurBlurParameters");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _unblurItemContainer:blurParameters:withAnimationUpdateMode:](self, "_unblurItemContainer:blurParameters:withAnimationUpdateMode:", v7, v8, 1);

    v9 = v7;
    v10 = objc_opt_respondsToSelector();

    if ((v10 & 1) != 0)
    {
      objc_msgSend(v9, "setHidden:", 1);
      -[NSMutableDictionary removeObjectForKey:](self->_visibleItemContainers, "removeObjectForKey:", v5);
      objc_msgSend(v9, "prepareForReuse");
      if (-[NSMutableArray containsObject:](self->_hiddenRecycledItemContainers, "containsObject:", v9))
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v12, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 5246, CFSTR("This item container is already in the reuse queue."));

      }
      -[NSMutableArray _sb_enqueue:](self->_hiddenRecycledItemContainers, "_sb_enqueue:", v9);
    }
    else
    {
      objc_msgSend(v9, "removeFromSuperview");
      -[NSMutableDictionary removeObjectForKey:](self->_visibleItemContainers, "removeObjectForKey:", v5);
    }
    -[SBSwitcherLiveContentOverlayCoordinating appLayoutDidBecomeHidden:](self->_liveContentOverlayCoordinator, "appLayoutDidBecomeHidden:", v5);
  }

  return v7 != 0;
}

void __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke(_QWORD *a1, void *a2, void *a3)
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;

  v14 = a2;
  v5 = *(void **)(a1[4] + 1832);
  v6 = a3;
  objc_msgSend(v5, "objectForKey:", v14);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1[4] + 1840), "objectForKey:", v14);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1[4] + 1832), "removeObjectForKey:", v14);
  objc_msgSend(*(id *)(a1[4] + 1840), "removeObjectForKey:", v14);
  objc_msgSend(*(id *)(a1[4] + 1000), "objectForKey:", v14);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = v9;
  if (v9)
  {
    objc_msgSend(v9, "invalidate");
    objc_msgSend(*(id *)(a1[4] + 1000), "removeObjectForKey:", v14);
  }
  objc_msgSend(*(id *)(a1[4] + 1832), "setObject:forKey:", v7, v6);
  objc_msgSend(*(id *)(a1[4] + 1840), "setObject:forKey:", v8, v6);

  objc_msgSend(*(id *)(a1[4] + 1832), "allKeys");
  v11 = objc_claimAutoreleasedReturnValue();
  v12 = *(_QWORD *)(a1[5] + 8);
  v13 = *(void **)(v12 + 40);
  *(_QWORD *)(v12 + 40) = v11;

  *(_BYTE *)(*(_QWORD *)(a1[6] + 8) + 24) = 1;
}

uint64_t __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_2(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;

  v3 = a2;
  if (objc_msgSend(v3, "containsAllItemsFromAppLayout:", *(_QWORD *)(a1 + 32)))
    v4 = objc_msgSend(*(id *)(a1 + 32), "containsAllItemsFromAppLayout:", v3);
  else
    v4 = 0;

  return v4;
}

uint64_t __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_3(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsAllItemsFromAppLayout:", a2);
}

uint64_t __70__SBFluidSwitcherViewController__updateVisibleOverlayAndUnderlayViews__block_invoke_4(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsAllItemsFromAppLayout:", a2);
}

- (id)beginHidingAppLayout:(id)a3 forReason:(id)a4
{
  id v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  NSCountedSet *requestedHiddenAppLayouts;
  NSCountedSet *v14;
  NSCountedSet *v15;
  _QWORD v17[4];
  id v18;
  id v19;
  id location;

  v6 = a3;
  v7 = a4;
  objc_initWeak(&location, self);
  v8 = objc_alloc(MEMORY[0x1E0D01868]);
  objc_msgSend(MEMORY[0x1E0CB3A28], "UUID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "UUIDString");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v17[0] = MEMORY[0x1E0C809B0];
  v17[1] = 3221225472;
  v17[2] = __64__SBFluidSwitcherViewController_beginHidingAppLayout_forReason___block_invoke;
  v17[3] = &unk_1E8EA4CC0;
  objc_copyWeak(&v19, &location);
  v11 = v6;
  v18 = v11;
  v12 = (void *)objc_msgSend(v8, "initWithIdentifier:forReason:invalidationBlock:", v10, v7, v17);

  requestedHiddenAppLayouts = self->_requestedHiddenAppLayouts;
  if (!requestedHiddenAppLayouts)
  {
    v14 = (NSCountedSet *)objc_msgSend(objc_alloc(MEMORY[0x1E0CB3550]), "initWithCapacity:", 1);
    v15 = self->_requestedHiddenAppLayouts;
    self->_requestedHiddenAppLayouts = v14;

    requestedHiddenAppLayouts = self->_requestedHiddenAppLayouts;
  }
  -[NSCountedSet addObject:](requestedHiddenAppLayouts, "addObject:", v11);
  -[SBFluidSwitcherViewController _updateVisibleItems](self, "_updateVisibleItems");

  objc_destroyWeak(&v19);
  objc_destroyWeak(&location);

  return v12;
}

void __64__SBFluidSwitcherViewController_beginHidingAppLayout_forReason___block_invoke(uint64_t a1)
{
  id *WeakRetained;
  id *v3;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    v3 = WeakRetained;
    objc_msgSend(WeakRetained[159], "removeObject:", *(_QWORD *)(a1 + 32));
    objc_msgSend(v3, "_updateVisibleItems");
    WeakRetained = v3;
  }

}

- (CGRect)completedTransitionFrameForAppLayout:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  SBOverridePresentationValueSwitcherModifier *v12;
  SBSwitcherModifier *rootModifier;
  double v14;
  double v15;
  double v16;
  double v17;
  _QWORD v18[7];
  uint64_t v19;
  double *v20;
  uint64_t v21;
  void *v22;
  __int128 v23;
  __int128 v24;
  CGRect result;

  v4 = a3;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "indexOfObject:", v4);

  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = *MEMORY[0x1E0C9D648];
    v8 = *(double *)(MEMORY[0x1E0C9D648] + 8);
    v9 = *(double *)(MEMORY[0x1E0C9D648] + 16);
    v10 = *(double *)(MEMORY[0x1E0C9D648] + 24);
  }
  else
  {
    v19 = 0;
    v20 = (double *)&v19;
    v21 = 0x4010000000;
    v22 = &unk_1D0FA064E;
    v23 = 0u;
    v24 = 0u;
    -[SBSwitcherModifier animatablePropertyIdentifiers](self->_rootModifier, "animatablePropertyIdentifiers");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = -[SBOverridePresentationValueSwitcherModifier initWithAnimatablePropertyKeys:presentationValue:]([SBOverridePresentationValueSwitcherModifier alloc], "initWithAnimatablePropertyKeys:presentationValue:", v11, 1.0);
    rootModifier = self->_rootModifier;
    v18[0] = MEMORY[0x1E0C809B0];
    v18[1] = 3221225472;
    v18[2] = __70__SBFluidSwitcherViewController_completedTransitionFrameForAppLayout___block_invoke;
    v18[3] = &unk_1E8E9FD08;
    v18[4] = self;
    v18[5] = &v19;
    v18[6] = v6;
    -[SBChainableModifier performTransactionWithTemporaryChildModifier:usingBlock:](rootModifier, "performTransactionWithTemporaryChildModifier:usingBlock:", v12, v18);
    v7 = v20[4];
    v8 = v20[5];
    v9 = v20[6];
    v10 = v20[7];

    _Block_object_dispose(&v19, 8);
  }

  v14 = v7;
  v15 = v8;
  v16 = v9;
  v17 = v10;
  result.size.height = v17;
  result.size.width = v16;
  result.origin.y = v15;
  result.origin.x = v14;
  return result;
}

uint64_t __70__SBFluidSwitcherViewController_completedTransitionFrameForAppLayout___block_invoke(_QWORD *a1)
{
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = objc_msgSend(*(id *)(a1[4] + 1936), "frameForIndex:", a1[6]);
  v3 = *(_QWORD **)(a1[5] + 8);
  v3[4] = v4;
  v3[5] = v5;
  v3[6] = v6;
  v3[7] = v7;
  return result;
}

- (CGRect)scaledFrameForLayoutRole:(int64_t)a3 inAppLayout:(id)a4
{
  id v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGRect result;

  v6 = a4;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "indexOfObject:", v6);

  -[SBSwitcherModifier scaledFrameForLayoutRole:inAppLayout:atIndex:](self->_rootModifier, "scaledFrameForLayoutRole:inAppLayout:atIndex:", a3, v6, v8);
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;

  v17 = v10;
  v18 = v12;
  v19 = v14;
  v20 = v16;
  result.size.height = v20;
  result.size.width = v19;
  result.origin.y = v18;
  result.origin.x = v17;
  return result;
}

- (double)scaleForAppLayout:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  double v7;
  void *v8;
  SBOverridePresentationValueSwitcherModifier *v9;
  SBSwitcherModifier *rootModifier;
  _QWORD v12[7];
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a3;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "indexOfObject:", v4);

  v7 = 0.0;
  if (v6 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v13 = 0;
    v14 = (double *)&v13;
    v15 = 0x2020000000;
    v16 = 0;
    -[SBSwitcherModifier animatablePropertyIdentifiers](self->_rootModifier, "animatablePropertyIdentifiers");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = -[SBOverridePresentationValueSwitcherModifier initWithAnimatablePropertyKeys:presentationValue:]([SBOverridePresentationValueSwitcherModifier alloc], "initWithAnimatablePropertyKeys:presentationValue:", v8, 1.0);
    rootModifier = self->_rootModifier;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __51__SBFluidSwitcherViewController_scaleForAppLayout___block_invoke;
    v12[3] = &unk_1E8E9FD08;
    v12[4] = self;
    v12[5] = &v13;
    v12[6] = v6;
    -[SBChainableModifier performTransactionWithTemporaryChildModifier:usingBlock:](rootModifier, "performTransactionWithTemporaryChildModifier:usingBlock:", v9, v12);
    v7 = v14[3];

    _Block_object_dispose(&v13, 8);
  }

  return v7;
}

uint64_t __51__SBFluidSwitcherViewController_scaleForAppLayout___block_invoke(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1[4] + 1936), "scaleForIndex:", a1[6]);
  *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) = v3;
  return result;
}

- (double)contentPageViewScaleForAppLayout:(id)a3
{
  id v4;
  void *v5;
  SBOverridePresentationValueSwitcherModifier *v6;
  SBSwitcherModifier *rootModifier;
  id v8;
  double v9;
  _QWORD v11[5];
  id v12;
  uint64_t *v13;
  uint64_t v14;
  double *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a3;
  v14 = 0;
  v15 = (double *)&v14;
  v16 = 0x2020000000;
  v17 = 0;
  -[SBSwitcherModifier animatablePropertyIdentifiers](self->_rootModifier, "animatablePropertyIdentifiers");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = -[SBOverridePresentationValueSwitcherModifier initWithAnimatablePropertyKeys:presentationValue:]([SBOverridePresentationValueSwitcherModifier alloc], "initWithAnimatablePropertyKeys:presentationValue:", v5, 1.0);
  rootModifier = self->_rootModifier;
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __66__SBFluidSwitcherViewController_contentPageViewScaleForAppLayout___block_invoke;
  v11[3] = &unk_1E8EA4CE8;
  v11[4] = self;
  v8 = v4;
  v12 = v8;
  v13 = &v14;
  -[SBChainableModifier performTransactionWithTemporaryChildModifier:usingBlock:](rootModifier, "performTransactionWithTemporaryChildModifier:usingBlock:", v6, v11);
  v9 = v15[3];

  _Block_object_dispose(&v14, 8);
  return v9;
}

void __66__SBFluidSwitcherViewController_contentPageViewScaleForAppLayout___block_invoke(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  int v7;
  double v8;
  uint64_t v9;
  id v10;

  objc_msgSend(*(id *)(a1 + 32), "appLayouts");
  v10 = (id)objc_claimAutoreleasedReturnValue();
  v2 = objc_msgSend(v10, "count");
  if (!v2)
    goto LABEL_12;
  v3 = v2;
  v4 = 0;
  v5 = 0x7FFFFFFFFFFFFFFFLL;
  while (1)
  {
    objc_msgSend(v10, "objectAtIndex:", v4);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(*(id *)(a1 + 40), "isOrContainsAppLayout:", v6))
      break;
    v7 = objc_msgSend(v6, "isOrContainsAppLayout:", *(_QWORD *)(a1 + 40));
    if (v7)
      v5 = v4;

    if (++v4 >= v3 || v7)
      goto LABEL_11;
  }

  v5 = v4;
LABEL_11:
  if (v5 != 0x7FFFFFFFFFFFFFFFLL)
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "scaleForIndex:", v5);
  else
LABEL_12:
    v8 = 1.0;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "contentPageViewScaleForAppLayout:withScale:", *(_QWORD *)(a1 + 40), v8);
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 24) = v9;

}

- (double)cornerRadiusForAppLayout:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  double v7;
  void *v8;
  SBOverridePresentationValueSwitcherModifier *v9;
  SBSwitcherModifier *rootModifier;
  _QWORD v12[7];
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;

  v4 = a3;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "indexOfObject:", v4);

  v7 = 0.0;
  if (v6 != 0x7FFFFFFFFFFFFFFFLL)
  {
    v13 = 0;
    v14 = (double *)&v13;
    v15 = 0x2020000000;
    v16 = 0;
    -[SBSwitcherModifier animatablePropertyIdentifiers](self->_rootModifier, "animatablePropertyIdentifiers");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = -[SBOverridePresentationValueSwitcherModifier initWithAnimatablePropertyKeys:presentationValue:]([SBOverridePresentationValueSwitcherModifier alloc], "initWithAnimatablePropertyKeys:presentationValue:", v8, 1.0);
    rootModifier = self->_rootModifier;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 3221225472;
    v12[2] = __58__SBFluidSwitcherViewController_cornerRadiusForAppLayout___block_invoke;
    v12[3] = &unk_1E8E9FD08;
    v12[4] = self;
    v12[5] = &v13;
    v12[6] = v6;
    -[SBChainableModifier performTransactionWithTemporaryChildModifier:usingBlock:](rootModifier, "performTransactionWithTemporaryChildModifier:usingBlock:", v9, v12);
    v7 = v14[3];

    _Block_object_dispose(&v13, 8);
  }

  return v7;
}

uint64_t __58__SBFluidSwitcherViewController_cornerRadiusForAppLayout___block_invoke(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;

  result = objc_msgSend(*(id *)(a1[4] + 1936), "cornerRadiiForIndex:", a1[6]);
  *(_QWORD *)(*(_QWORD *)(a1[5] + 8) + 24) = v3;
  return result;
}

- (UIRectCornerRadii)cornerRadiiForLayoutRole:(int64_t)a3 inAppLayout:(id)a4
{
  id v6;
  void *v7;
  uint64_t v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  UIRectCornerRadii result;

  v6 = a4;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "indexOfObject:", v6);

  if (v8 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v9 = *MEMORY[0x1E0CEBAC0];
    v10 = *(double *)(MEMORY[0x1E0CEBAC0] + 8);
    v11 = *(double *)(MEMORY[0x1E0CEBAC0] + 16);
    v12 = *(double *)(MEMORY[0x1E0CEBAC0] + 24);
  }
  else
  {
    -[SBSwitcherModifier cornerRadiiForIndex:](self->_rootModifier, "cornerRadiiForIndex:", v8);
    -[SBSwitcherModifier cornerRadiiForLayoutRole:inAppLayout:withCornerRadii:](self->_rootModifier, "cornerRadiiForLayoutRole:inAppLayout:withCornerRadii:", a3, v6);
    v9 = v13;
    v10 = v14;
    v11 = v15;
    v12 = v16;
  }

  v17 = v9;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  result.topRight = v20;
  result.bottomRight = v19;
  result.bottomLeft = v18;
  result.topLeft = v17;
  return result;
}

- (void)_enqueueOverlayAccessoryViewInReusePool:(id)a3
{
  NSMutableSet *overlayAccessoryViewsReusePool;
  NSMutableSet *v5;
  NSMutableSet *v6;
  id v7;

  v7 = a3;
  objc_msgSend(v7, "prepareForReuse");
  overlayAccessoryViewsReusePool = self->_overlayAccessoryViewsReusePool;
  if (overlayAccessoryViewsReusePool)
  {
    -[NSMutableSet addObject:](overlayAccessoryViewsReusePool, "addObject:", v7);
  }
  else
  {
    v5 = (NSMutableSet *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithObjects:", v7, 0);
    v6 = self->_overlayAccessoryViewsReusePool;
    self->_overlayAccessoryViewsReusePool = v5;

  }
}

- (void)_enqueueUnderlayAccessoryViewInReusePool:(id)a3
{
  NSMutableSet *underlayAccessoryViewsReusePool;
  NSMutableSet *v5;
  NSMutableSet *v6;
  id v7;

  v7 = a3;
  objc_msgSend(v7, "prepareForReuse");
  underlayAccessoryViewsReusePool = self->_underlayAccessoryViewsReusePool;
  if (underlayAccessoryViewsReusePool)
  {
    -[NSMutableSet addObject:](underlayAccessoryViewsReusePool, "addObject:", v7);
  }
  else
  {
    v5 = (NSMutableSet *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E20]), "initWithObjects:", v7, 0);
    v6 = self->_underlayAccessoryViewsReusePool;
    self->_underlayAccessoryViewsReusePool = v5;

  }
}

uint64_t __54__SBFluidSwitcherViewController__updateVisibleShelves__block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;
  void *v5;

  v3 = a2;
  if ((objc_msgSend(*(id *)(a1 + 32), "containsObject:", v3) & 1) != 0)
  {
    v4 = 0;
  }
  else
  {
    objc_msgSend(*(id *)(*(_QWORD *)(a1 + 40) + 1888), "objectForKey:", v3);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(v5, "isPresentingOrDismissing") ^ 1;

  }
  return v4;
}

uint64_t __54__SBFluidSwitcherViewController__updateVisibleShelves__block_invoke_2(uint64_t a1)
{
  void *v2;

  objc_msgSend(*(id *)(a1 + 32), "_layoutVisibleShelvesWithCompletion:", 0);
  objc_msgSend(*(id *)(a1 + 40), "setContentOrientation:", objc_msgSend(*(id *)(a1 + 32), "contentOrientation"));
  objc_msgSend(*(id *)(a1 + 40), "view");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "layoutIfNeeded");

  return objc_msgSend(*(id *)(a1 + 32), "_ensureSubviewOrdering");
}

BOOL __54__SBFluidSwitcherViewController__updateVisibleShelves__block_invoke_3(uint64_t a1, void *a2)
{
  void *v3;
  _BOOL8 v4;

  objc_msgSend(a2, "shelfViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3 == *(void **)(a1 + 32);

  return v4;
}

BOOL __54__SBFluidSwitcherViewController__updateVisibleShelves__block_invoke_4(uint64_t a1, void *a2)
{
  void *v3;
  _BOOL8 v4;

  objc_msgSend(a2, "shelfViewController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3 == *(void **)(a1 + 32);

  return v4;
}

- (id)_appLayoutFromLayoutElement:(id)a3
{
  id v4;
  void *v5;
  NSObject *v6;
  id v7;
  NSObject *v8;

  v4 = a3;
  v5 = v4;
  if (!v4)
  {
LABEL_11:
    v7 = 0;
    goto LABEL_12;
  }
  if (objc_msgSend(v4, "switcherLayoutElementType"))
  {
    SBLogAppSwitcher();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      -[SBFluidSwitcherViewController _appLayoutFromLayoutElement:].cold.2((uint64_t)self, v5, v6);

    goto LABEL_11;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0)
  {
    SBLogAppSwitcher();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
      -[SBFluidSwitcherViewController _appLayoutFromLayoutElement:].cold.1();

    goto LABEL_11;
  }
  v7 = v5;
LABEL_12:

  return v7;
}

- (CGRect)containerViewBoundsForHomeGrabberView:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  id v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  int64_t v20;
  void *v21;
  void *v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  _BYTE v33[128];
  uint64_t v34;
  CGRect result;

  v34 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v32 = 0u;
  -[SBFluidSwitcherViewController _spacesWithVisibleHomeAffordances](self, "_spacesWithVisibleHomeAffordances", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v30;
    while (2)
    {
      for (i = 0; i != v7; ++i)
      {
        if (*(_QWORD *)v30 != v8)
          objc_enumerationMutation(v5);
        v10 = *(void **)(*((_QWORD *)&v29 + 1) + 8 * i);
        -[SBFluidSwitcherViewController homeGrabberViewForAppLayout:](self, "homeGrabberViewForAppLayout:", v10);
        v11 = (id)objc_claimAutoreleasedReturnValue();

        if (v11 == v4)
        {
          switch(objc_msgSend(v10, "environment"))
          {
            case 0:
            case 3:
              v12 = *MEMORY[0x1E0C9D628];
              v13 = *(double *)(MEMORY[0x1E0C9D628] + 8);
              v14 = *(double *)(MEMORY[0x1E0C9D628] + 16);
              v15 = *(double *)(MEMORY[0x1E0C9D628] + 24);
              break;
            case 1:
              -[SBFluidSwitcherViewController containerViewBounds](self, "containerViewBounds");
              v12 = v16;
              v13 = v17;
              v14 = v18;
              v15 = v19;
              break;
            case 2:
              v20 = -[SBFluidSwitcherViewController contentOrientation](self, "contentOrientation");
              -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
              v21 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v21, "layoutState");
              v22 = (void *)objc_claimAutoreleasedReturnValue();

              -[SBFluidSwitcherViewController floatingApplicationFrameInInterfaceOrientation:floatingConfiguration:](self, "floatingApplicationFrameInInterfaceOrientation:floatingConfiguration:", v20, objc_msgSend(v22, "floatingConfiguration"));
              v14 = v23;
              v15 = v24;
              v12 = *MEMORY[0x1E0C9D538];
              v13 = *(double *)(MEMORY[0x1E0C9D538] + 8);

              break;
            default:
              continue;
          }

          goto LABEL_15;
        }
      }
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v29, v33, 16);
      if (v7)
        continue;
      break;
    }
  }

  v12 = *MEMORY[0x1E0C9D628];
  v13 = *(double *)(MEMORY[0x1E0C9D628] + 8);
  v14 = *(double *)(MEMORY[0x1E0C9D628] + 16);
  v15 = *(double *)(MEMORY[0x1E0C9D628] + 24);
LABEL_15:

  v25 = v12;
  v26 = v13;
  v27 = v14;
  v28 = v15;
  result.size.height = v28;
  result.size.width = v27;
  result.origin.y = v26;
  result.origin.x = v25;
  return result;
}

- (BOOL)isEdgeProtectedForHomeGestureAtEdgeLocation:(double)a3 edge:(unint64_t)a4
{
  void *v7;
  char v8;
  char v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGFloat v14;
  NSMutableDictionary *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  CGFloat v23;
  double v24;
  double v25;
  double v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  double MinY;
  double v32;
  _BOOL4 v33;
  double MaxY;
  double v35;
  double MaxX;
  double MinX;
  double v38;
  double v39;
  double v40;
  id WeakRetained;
  void *v43;
  uint64_t v44;
  void *v45;
  void *v46;
  CGFloat rect;
  CGFloat v49;
  CGFloat v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _BYTE v55[128];
  uint64_t v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;
  CGRect v63;
  CGRect v64;
  CGRect v65;
  CGRect v66;

  v56 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "switcherContentControllerIsKeyboardHomeAffordanceAssertionCurrentlyBeingTaken:", self);

  if ((v8 & 1) != 0)
    return 0;
  -[SBFluidSwitcherViewController containerViewBounds](self, "containerViewBounds");
  v49 = v11;
  v50 = v10;
  rect = v12;
  v14 = v13;
  v51 = 0u;
  v52 = 0u;
  v53 = 0u;
  v54 = 0u;
  v15 = self->_visibleItemContainers;
  v16 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v51, v55, 16);
  if (v16)
  {
    v17 = v16;
    v18 = *(_QWORD *)v52;
    v19 = a4 - 1;
    do
    {
      v20 = 0;
      do
      {
        if (*(_QWORD *)v52 != v18)
          objc_enumerationMutation(v15);
        v21 = *(void **)(*((_QWORD *)&v51 + 1) + 8 * v20);
        -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", v21);
        v22 = (void *)objc_claimAutoreleasedReturnValue();
        if ((objc_msgSend(v22, "isOccludedInContinuousExposeStage") & 1) == 0)
        {
          objc_msgSend(v22, "frame");
          v27 = v23;
          v28 = v24;
          v29 = v25;
          v30 = v26;
          switch(v19)
          {
            case 0uLL:
              MinY = CGRectGetMinY(*(CGRect *)&v23);
              v57.origin.y = v49;
              v57.origin.x = v50;
              v57.size.width = rect;
              v57.size.height = v14;
              v32 = CGRectGetMinY(v57);
              v58.origin.x = v27;
              v58.origin.y = v28;
              v58.size.width = v29;
              v58.size.height = v30;
              if (CGRectGetMinX(v58) > a3)
                goto LABEL_9;
              v33 = MinY <= v32;
              goto LABEL_16;
            case 1uLL:
              MinX = CGRectGetMinX(*(CGRect *)&v23);
              v62.origin.y = v49;
              v62.origin.x = v50;
              v62.size.width = rect;
              v62.size.height = v14;
              v38 = CGRectGetMinX(v62);
              v63.origin.x = v27;
              v63.origin.y = v28;
              v63.size.width = v29;
              v63.size.height = v30;
              if (CGRectGetMinY(v63) > a3)
                goto LABEL_9;
              v33 = MinX <= v38;
              goto LABEL_21;
            case 3uLL:
              MaxY = CGRectGetMaxY(*(CGRect *)&v23);
              v59.origin.y = v49;
              v59.origin.x = v50;
              v59.size.width = rect;
              v59.size.height = v14;
              v35 = CGRectGetMaxY(v59);
              v60.origin.x = v27;
              v60.origin.y = v28;
              v60.size.width = v29;
              v60.size.height = v30;
              if (CGRectGetMinX(v60) > a3)
                goto LABEL_9;
              v33 = MaxY >= v35;
LABEL_16:
              v61.origin.x = v27;
              v61.origin.y = v28;
              v61.size.width = v29;
              v61.size.height = v30;
              MaxX = CGRectGetMaxX(v61);
              break;
            case 7uLL:
              v39 = CGRectGetMaxX(*(CGRect *)&v23);
              v64.origin.y = v49;
              v64.origin.x = v50;
              v64.size.width = rect;
              v64.size.height = v14;
              v40 = CGRectGetMaxX(v64);
              v65.origin.x = v27;
              v65.origin.y = v28;
              v65.size.width = v29;
              v65.size.height = v30;
              if (CGRectGetMinY(v65) > a3)
                goto LABEL_9;
              v33 = v39 >= v40;
LABEL_21:
              v66.origin.x = v27;
              v66.origin.y = v28;
              v66.size.width = v29;
              v66.size.height = v30;
              MaxX = CGRectGetMaxY(v66);
              break;
            default:
              goto LABEL_9;
          }
          if (v33 && MaxX >= a3)
          {
            WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
            v43 = WeakRetained;
            if ((*((_BYTE *)&self->_dataSourceRespondsTo + 2) & 0x40) != 0)
            {
              objc_msgSend(v21, "itemForLayoutRole:", 1);
              v45 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v43, "switcherContentController:deviceApplicationSceneHandleForDisplayItem:", self, v45);
              v46 = (void *)objc_claimAutoreleasedReturnValue();

              v9 = objc_msgSend(v46, "isEdgeProtectEnabledForHomeGesture");
              goto LABEL_31;
            }

          }
        }
LABEL_9:

        ++v20;
      }
      while (v17 != v20);
      v44 = -[NSMutableDictionary countByEnumeratingWithState:objects:count:](v15, "countByEnumeratingWithState:objects:count:", &v51, v55, 16);
      v17 = v44;
    }
    while (v44);
  }
  v9 = 0;
LABEL_31:

  return v9;
}

- (int64_t)homeAffordanceOrientationIfMismatchedFromCurrentLayoutState
{
  void *v3;
  int64_t v4;
  void *v5;
  NSMutableDictionary *visibleOverlayAccessoryViews;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;

  -[SBFluidSwitcherLayoutContext activeTransitionContext](self->_layoutContext, "activeTransitionContext");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3)
    return 0;
  -[SBFluidSwitcherLayoutContext layoutState](self->_layoutContext, "layoutState");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  visibleOverlayAccessoryViews = self->_visibleOverlayAccessoryViews;
  objc_msgSend(v5, "appLayout");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](visibleOverlayAccessoryViews, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    v9 = objc_msgSend(v5, "interfaceOrientation");
    objc_msgSend(v8, "homeGrabberView");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "orientation");

    if (v11 == v9 || v11 == 0)
      v4 = 0;
    else
      v4 = v11;
  }
  else
  {
    v4 = 0;
  }

  return v4;
}

- (void)_keyboardDidUIPosition:(id)a3
{
  void *v4;

  objc_msgSend(a3, "object");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  self->_keyboardUIPosition = objc_msgSend(v4, "integerValue");

  -[SBFluidSwitcherViewController _updateSoftwareKeyboardVisibleWithKeyboardShowing:](self, "_updateSoftwareKeyboardVisibleWithKeyboardShowing:", self->_keyboardUIPosition == 3);
}

- (void)_medusaHostedKeyboardWillShowNotification:(id)a3
{
  id v4;

  if (!self->_isMedusaHostedKeyboardVisible)
  {
    self->_isMedusaHostedKeyboardVisible = 1;
    -[SBFluidSwitcherViewController _configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:](self, "_configureApplicationAndTransientOverlayDockBehaviorAssertionsForContext:", 0);
    -[SBFluidSwitcherViewController view](self, "view");
    v4 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setNeedsLayout");

  }
}

uint64_t __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1400), "setAlpha:", *(double *)(a1 + 40));
}

uint64_t __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke_3(uint64_t a1)
{
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;

  SBRectWithSize();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  UIRectGetCenter();
  v11 = v10;
  v13 = v12;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1464), "setBounds:", v3, v5, v7, v9);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1464), "setCenter:", v11, v13);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1464), "setNeedsLayout");
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1464), "layoutIfNeeded");
}

uint64_t __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke_4(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1464), "setWeighting:", *(double *)(a1 + 40));
}

void __60__SBFluidSwitcherViewController__updateStyleWithCompletion___block_invoke_5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id *WeakRetained;
  id *v7;
  id v8;
  int IsZero;
  id v10;
  uint64_t v11;
  id *v12;

  WeakRetained = (id *)objc_loadWeakRetained((id *)(a1 + 40));
  v7 = WeakRetained;
  v12 = WeakRetained;
  if (WeakRetained)
  {
    if ((a3 & 1) == 0)
    {
      v8 = WeakRetained[183];
      if (v8)
      {
        objc_msgSend(v8, "alpha");
        IsZero = BSFloatIsZero();
        v7 = v12;
        if (IsZero)
        {
          objc_msgSend(v12[183], "removeFromSuperview");
          v10 = v12[183];
          v12[183] = 0;

          v7 = v12;
        }
      }
    }
  }
  v11 = *(_QWORD *)(a1 + 32);
  if (v11)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v11, a2, a3);
    v7 = v12;
  }

}

uint64_t __82__SBFluidSwitcherViewController__applyStyleToVisibleItemContainersWithCompletion___block_invoke_2(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setAlpha:", 0.0);
}

- (void)presentSlideOverEdgeProtectTongueOnEdge:(unint64_t)a3
{
  SBSlideOverEdgeProtectTongueSwitcherModifierEvent *v4;

  v4 = -[SBSlideOverEdgeProtectTongueSwitcherModifierEvent initWithTonguePresented:edge:]([SBSlideOverEdgeProtectTongueSwitcherModifierEvent alloc], "initWithTonguePresented:edge:", 1, a3);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

}

- (void)dismissSlideOverEdgeProtectTongueOnEdge:(unint64_t)a3
{
  SBSlideOverEdgeProtectTongueSwitcherModifierEvent *v4;

  v4 = -[SBSlideOverEdgeProtectTongueSwitcherModifierEvent initWithTonguePresented:edge:]([SBSlideOverEdgeProtectTongueSwitcherModifierEvent alloc], "initWithTonguePresented:edge:", 0, a3);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

}

- (void)presentContinuousExposeStripEdgeProtectTongue
{
  SBContinuousExposeStripEdgeProtectTongueSwitcherModifierEvent *v3;

  v3 = -[SBContinuousExposeStripEdgeProtectTongueSwitcherModifierEvent initWithTonguePresented:]([SBContinuousExposeStripEdgeProtectTongueSwitcherModifierEvent alloc], "initWithTonguePresented:", 1);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v3);

}

- (void)dismissContinuousExposeStripEdgeProtectTongue
{
  SBContinuousExposeStripEdgeProtectTongueSwitcherModifierEvent *v3;

  v3 = -[SBContinuousExposeStripEdgeProtectTongueSwitcherModifierEvent initWithTonguePresented:]([SBContinuousExposeStripEdgeProtectTongueSwitcherModifierEvent alloc], "initWithTonguePresented:", 0);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v3);

}

- (void)willBeginGestureWithType:(int64_t)a3 identifier:(id)a4
{
  id v6;
  SBGestureSwitcherModifierEvent *v7;

  v6 = a4;
  v7 = -[SBGestureSwitcherModifierEvent initWithGestureID:selectedAppLayout:gestureType:phase:]([SBGestureSwitcherModifierEvent alloc], "initWithGestureID:selectedAppLayout:gestureType:phase:", v6, 0, a3, 0);

  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v7);
}

- (void)_setCenterWindowActivationContext:(id)a3 forKey:(id)a4
{
  id v6;
  NSMutableDictionary *centerWindowActivationAnimationContexts;
  NSMutableDictionary *v8;
  NSMutableDictionary *v9;
  id v10;

  v10 = a3;
  v6 = a4;
  centerWindowActivationAnimationContexts = self->_centerWindowActivationAnimationContexts;
  if (!centerWindowActivationAnimationContexts)
  {
    objc_msgSend(MEMORY[0x1E0C99E08], "dictionary");
    v8 = (NSMutableDictionary *)objc_claimAutoreleasedReturnValue();
    v9 = self->_centerWindowActivationAnimationContexts;
    self->_centerWindowActivationAnimationContexts = v8;

    centerWindowActivationAnimationContexts = self->_centerWindowActivationAnimationContexts;
  }
  -[NSMutableDictionary setObject:forKey:](centerWindowActivationAnimationContexts, "setObject:forKey:", v10, v6);

}

- (void)_removeCenterWindowAnimationContextWithKey:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  -[SBFluidSwitcherViewController _centerWindowActivationAnimationContextForKey:](self, "_centerWindowActivationAnimationContextForKey:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
  {
    v8 = v4;
    objc_msgSend(v4, "contentPortalContainer");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "removeFromSuperview");

    objc_msgSend(v8, "deparentingPortal");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "removeFromSuperview");

    -[NSMutableDictionary allKeysForObject:](self->_centerWindowActivationAnimationContexts, "allKeysForObject:", v8);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary removeObjectsForKeys:](self->_centerWindowActivationAnimationContexts, "removeObjectsForKeys:", v7);

    v4 = v8;
  }

}

- (void)prepareForIncomingCenterWindowAnimationWithAction:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t j;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  uint64_t v51;
  double v52;
  double v53;
  double v54;
  double v55;
  void *v56;
  void *v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  SBSwitcherModifier *rootModifier;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;
  void *v75;
  void *v76;
  void *v77;
  SBFluidSwitcherViewController *v78;
  void *v79;
  id obj;
  id obja;
  uint64_t v82;
  uint64_t v83;
  void *v84;
  void *v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  const __CFString *v95;
  _BYTE v96[128];
  _BYTE v97[128];
  uint64_t v98;

  v98 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  v5 = (void *)MEMORY[0x1E0CB3940];
  objc_msgSend(v4, "sourceAppBundleIdentifier");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v79 = v4;
  objc_msgSend(v4, "sourceSceneIdentifier");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "stringWithFormat:", CFSTR("sceneID:%@-%@"), v6, v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v92 = 0u;
  v93 = 0u;
  v90 = 0u;
  v91 = 0u;
  v78 = self;
  -[SBSwitcherModifier visibleAppLayouts](self->_rootModifier, "visibleAppLayouts");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = objc_msgSend(v9, "countByEnumeratingWithState:objects:count:", &v90, v97, 16);
  if (!v10)
  {

    v22 = 0;
LABEL_26:
    v23 = v79;
LABEL_27:
    v35 = (void *)MEMORY[0x1E0CB35C8];
    v94 = *MEMORY[0x1E0CB2D50];
    v95 = CFSTR("Center window activation denied in current configuration.");
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v95, &v94, 1);
    v36 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "errorWithDomain:code:userInfo:", CFSTR("SBWindowActivationScenePrewarmError"), -1, v36);
    v37 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(MEMORY[0x1E0D016A8], "responseForError:", v37);
    v38 = (void *)objc_claimAutoreleasedReturnValue();

    goto LABEL_28;
  }
  v11 = v10;
  v85 = 0;
  v82 = 0;
  v83 = *(_QWORD *)v91;
  obj = v9;
  do
  {
    for (i = 0; i != v11; ++i)
    {
      if (*(_QWORD *)v91 != v83)
        objc_enumerationMutation(obj);
      v13 = *(void **)(*((_QWORD *)&v90 + 1) + 8 * i);
      v86 = 0u;
      v87 = 0u;
      v88 = 0u;
      v89 = 0u;
      objc_msgSend(v13, "allItems");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      v15 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v86, v96, 16);
      if (v15)
      {
        v16 = v15;
        v17 = *(_QWORD *)v87;
        while (2)
        {
          for (j = 0; j != v16; ++j)
          {
            if (*(_QWORD *)v87 != v17)
              objc_enumerationMutation(v14);
            v19 = *(void **)(*((_QWORD *)&v86 + 1) + 8 * j);
            objc_msgSend(v19, "uniqueIdentifier");
            v20 = (void *)objc_claimAutoreleasedReturnValue();
            if (objc_msgSend(v20, "isEqualToString:", v8))
            {
              v21 = v13;

              v82 = objc_msgSend(v21, "layoutRoleForItem:", v19);
              v85 = v21;
              goto LABEL_16;
            }

          }
          v16 = objc_msgSend(v14, "countByEnumeratingWithState:objects:count:", &v86, v96, 16);
          if (v16)
            continue;
          break;
        }
      }
LABEL_16:

    }
    v11 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v90, v97, 16);
  }
  while (v11);

  v22 = v85;
  if (!v85)
    goto LABEL_26;
  v23 = v79;
  if (objc_msgSend(v85, "environment") == 2)
    goto LABEL_27;
  -[SBFluidSwitcherViewController contentView](v78, "contentView");
  v24 = (void *)objc_claimAutoreleasedReturnValue();
  v25 = objc_msgSend(v79, "sourceLayerContextId");
  v26 = objc_msgSend(v79, "morphContainerRenderId");
  v27 = objc_alloc(MEMORY[0x1E0CEAE58]);
  objc_msgSend(v24, "bounds");
  v28 = (void *)objc_msgSend(v27, "initWithFrame:");
  objc_msgSend(v28, "portalLayer");
  v29 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v29, "setSourceContextId:", v25);

  objc_msgSend(v28, "portalLayer");
  v30 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v30, "setSourceLayerRenderId:", v26);

  objc_msgSend(v28, "portalLayer");
  v31 = (void *)objc_claimAutoreleasedReturnValue();
  v32 = 1;
  objc_msgSend(v31, "setAllowsGroupOpacity:", 1);

  objc_msgSend(v28, "setName:", CFSTR("com.apple.SpringBoard.centerWindowDeparentingPortal"));
  objc_msgSend(v28, "setAllowsHitTesting:", 1);
  objc_msgSend(v28, "setMatchesPosition:", 1);
  objc_msgSend(v28, "setMatchesTransform:", 1);
  objc_msgSend(v24, "addSubview:", v28);
  v33 = (void *)objc_opt_new();
  objc_msgSend(v33, "setSourceContextId:", v25);
  objc_msgSend(v33, "setSourceLayerRenderId:", objc_msgSend(v79, "deparentingPortalAlphaSourceLayerRenderId"));
  objc_msgSend(v33, "setKeyPath:", CFSTR("opacity"));
  objc_msgSend(v33, "setDuration:", INFINITY);
  objc_msgSend(v33, "setRemovedOnCompletion:", 0);
  objc_msgSend(v28, "layer");
  v34 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v34, "addAnimation:forKey:", v33, CFSTR("CenterWindowDeparenting.opacityMatchProperty"));

  if (!-[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](v78, "isChamoisWindowingUIEnabled"))
  {
    if (objc_msgSend(v79, "requestCenterSlot"))
    {
      if (objc_msgSend(v79, "requestFullscreen"))
        v32 = 2;
      else
        v32 = 1;
    }
    else
    {
      v32 = 1;
    }
  }
  -[SBFluidSwitcherViewController _frameForCenterItemInInterfaceOrientation:centerConfiguration:](v78, "_frameForCenterItemInInterfaceOrientation:centerConfiguration:", -[SBFluidSwitcherViewController switcherInterfaceOrientation](v78, "switcherInterfaceOrientation"), SBMainDisplayLayoutStateCenterConfigurationFromAppLayoutCenterConfiguration(v32));
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v46 = v45;
  v84 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0CEABB0]), "initWithFrame:", v39, v41, v43, v45);
  objc_msgSend(v24, "insertSubview:atIndex:", v84, 0);
  -[SBFluidSwitcherViewController _sbWindowScene](v78, "_sbWindowScene");
  v47 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v47, "screen");
  v48 = v24;
  v49 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v49, "fixedCoordinateSpace");
  v50 = (void *)objc_claimAutoreleasedReturnValue();
  +[SBSceneLayoutCoordinateSpace coordinateSpaceForInterfaceOrientation:withReferenceCoordinateSpace:inOrientation:](SBSceneLayoutCoordinateSpace, "coordinateSpaceForInterfaceOrientation:withReferenceCoordinateSpace:inOrientation:", 1, v50, 1);
  v51 = objc_claimAutoreleasedReturnValue();

  -[SBFluidSwitcherViewController containerViewBounds](v78, "containerViewBounds");
  v22 = v85;
  -[SBFluidSwitcherViewController preferredFrameForLayoutRole:inAppLayout:bounds:interfaceOrientation:](v78, "preferredFrameForLayoutRole:inAppLayout:bounds:interfaceOrientation:", v82, v85, -[SBFluidSwitcherViewController switcherInterfaceOrientation](v78, "switcherInterfaceOrientation"), v52, v53, v54, v55);
  v56 = v48;
  obja = v48;
  v77 = (void *)v51;
  objc_msgSend(v48, "convertRect:toCoordinateSpace:", v51);
  +[SBSceneLayoutCoordinateSpace coordinateSpaceForFrame:withinCoordinateSpace:](SBSceneLayoutCoordinateSpace, "coordinateSpaceForFrame:withinCoordinateSpace:", v51);
  v57 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v56, "convertRect:toCoordinateSpace:", v57, v40, v42, v44, v46);
  v59 = v58;
  v61 = v60;
  v63 = v62;
  v65 = v64;
  rootModifier = v78->_rootModifier;
  -[SBFluidSwitcherViewController displayCornerRadius](v78, "displayCornerRadius");
  SBRectCornerRadiiForRadius();
  -[SBSwitcherModifier cornerRadiiForLayoutRole:inAppLayout:withCornerRadii:](rootModifier, "cornerRadiiForLayoutRole:inAppLayout:withCornerRadii:", 4, v85);
  v68 = v67;
  v70 = v69;
  v72 = v71;
  v74 = v73;
  v75 = (void *)objc_opt_new();
  objc_msgSend(v75, "setContentPortalContainer:", v84);
  objc_msgSend(v75, "setDeparentingPortal:", v28);
  v23 = v79;
  objc_msgSend(v79, "interactionIdentifier");
  v76 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _setCenterWindowActivationContext:forKey:](v78, "_setCenterWindowActivationContext:forKey:", v75, v76);

  objc_msgSend(MEMORY[0x1E0CEAF98], "responseWithSceneContainer:expectedSceneFrame:cornerRadii:", v84, v59, v61, v63, v65, v68, v70, v72, v74);
  v38 = (void *)objc_claimAutoreleasedReturnValue();

  if (!v38)
    goto LABEL_27;
LABEL_28:
  objc_msgSend(v23, "sendResponse:", v38);

}

- (void)cleanUpAfterCompletingCenterWindowAnimationWithAction:(id)a3
{
  id v5;
  void *centerWindowInAppMorphCompletion;
  void *v7;
  id v8;

  v5 = a3;
  v8 = v5;
  if (self->_centerWindowInAppMorphCompletion)
  {
    objc_storeStrong((id *)&self->_pendingCenterWindowCleanupAction, a3);
    (*((void (**)(void))self->_centerWindowInAppMorphCompletion + 2))();
    centerWindowInAppMorphCompletion = self->_centerWindowInAppMorphCompletion;
    self->_centerWindowInAppMorphCompletion = 0;
  }
  else
  {
    objc_msgSend(v5, "interactionIdentifier");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _removeCenterWindowAnimationContextWithKey:](self, "_removeCenterWindowAnimationContextWithKey:", v7);

    objc_msgSend(MEMORY[0x1E0D016A8], "response");
    centerWindowInAppMorphCompletion = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "sendResponse:", centerWindowInAppMorphCompletion);
  }

}

- (void)associateCenterWindowInteractionIdentifier:(id)a3 withSceneIdentifier:(id)a4
{
  void *v6;
  id v7;

  v7 = a4;
  -[SBFluidSwitcherViewController _centerWindowActivationAnimationContextForKey:](self, "_centerWindowActivationAnimationContextForKey:", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
    -[SBFluidSwitcherViewController _setCenterWindowActivationContext:forKey:](self, "_setCenterWindowActivationContext:forKey:", v6, v7);

}

- (id)_switcherDropRegionContextForDraggingLayoutRole:(int64_t)a3 inAppLayout:(id)a4 atLocation:(CGPoint)a5
{
  return (id)-[SBSwitcherModifier switcherDropRegionContextForDraggingLayoutRole:inAppLayout:atLocation:](self->_rootModifier, "switcherDropRegionContextForDraggingLayoutRole:inAppLayout:atLocation:", a3, a4, a5.x, a5.y);
}

id __92__SBFluidSwitcherViewController__orderedViewsForLayoutElement_excludeSwitcherHostedShelves___block_invoke_2(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1888), "objectForKey:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "view");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

- (void)scrollViewDidScroll:(id)a3 withContext:(id *)a4
{
  int64_t var0;
  SBScrollSwitcherModifierEvent *currentScrollEvent;
  id v8;
  SBScrollSwitcherModifierEvent *v9;
  id v10;
  SBScrollSwitcherModifierEvent *v11;
  SBScrollSwitcherModifierEvent *v12;
  SBScrollSwitcherModifierEvent *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  id v18;

  var0 = a4->var0;
  currentScrollEvent = self->_currentScrollEvent;
  if (currentScrollEvent)
  {
    v8 = a3;
    -[SBChainableModifierEvent unhandledCopy](currentScrollEvent, "unhandledCopy");
    v9 = (SBScrollSwitcherModifierEvent *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v10 = a3;
    v11 = [SBScrollSwitcherModifierEvent alloc];
    objc_msgSend(v10, "contentOffset");
    v9 = -[SBScrollSwitcherModifierEvent initWithContentOffset:phase:userInitiated:](v11, "initWithContentOffset:phase:userInitiated:", 0, var0 == 3);
  }
  v12 = self->_currentScrollEvent;
  self->_currentScrollEvent = v9;

  v13 = self->_currentScrollEvent;
  objc_msgSend(a3, "contentOffset");
  v15 = v14;
  v17 = v16;

  -[SBScrollSwitcherModifierEvent setContentOffset:](v13, "setContentOffset:", v15, v17);
  -[SBScrollSwitcherModifierEvent setPhase:](self->_currentScrollEvent, "setPhase:", 0);
  -[SBScrollSwitcherModifierEvent setUserInitiated:](self->_currentScrollEvent, "setUserInitiated:", var0 == 3);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", self->_currentScrollEvent);
  objc_msgSend(MEMORY[0x1E0CD28B0], "setLowLatency:", 0);
  -[SBFluidSwitcherViewController view](self, "view");
  v18 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "setNeedsLayout");

}

- (void)scrollViewWillEndDragging:(id)a3 withVelocity:(CGPoint)a4 targetContentOffset:(CGPoint *)a5
{
  CGFloat v6;

  -[SBSwitcherModifier restingOffsetForScrollOffset:velocity:](self->_rootModifier, "restingOffsetForScrollOffset:velocity:", a3, a5->x, a5->y, a4.x, a4.y);
  a5->x = v6;
}

- (void)scrollViewDidEndDragging:(id)a3 willDecelerate:(BOOL)a4
{
  -[SBSwitcherModifier resetAdjustedScrollingState](self->_rootModifier, "resetAdjustedScrollingState", a3, a4);
}

- (void)scrollViewDidEndScrolling:(id)a3
{
  SBScrollSwitcherModifierEvent *currentScrollEvent;
  id v5;
  SBScrollSwitcherModifierEvent *v6;
  SBScrollSwitcherModifierEvent *v7;
  SBScrollSwitcherModifierEvent *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  SBScrollSwitcherModifierEvent *v13;

  currentScrollEvent = self->_currentScrollEvent;
  if (currentScrollEvent)
  {
    v5 = a3;
    -[SBChainableModifierEvent unhandledCopy](currentScrollEvent, "unhandledCopy");
    v6 = (SBScrollSwitcherModifierEvent *)objc_claimAutoreleasedReturnValue();
    v7 = self->_currentScrollEvent;
    self->_currentScrollEvent = v6;

    v8 = self->_currentScrollEvent;
    objc_msgSend(v5, "contentOffset");
    v10 = v9;
    v12 = v11;

    -[SBScrollSwitcherModifierEvent setContentOffset:](v8, "setContentOffset:", v10, v12);
    -[SBScrollSwitcherModifierEvent setPhase:](self->_currentScrollEvent, "setPhase:", 1);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", self->_currentScrollEvent);
    v13 = self->_currentScrollEvent;
    self->_currentScrollEvent = 0;

  }
}

- (CGPoint)_scrollView:(id)a3 adjustedOffsetForOffset:(CGPoint)a4 translation:(CGPoint)a5 startPoint:(CGPoint)a6 locationInView:(CGPoint)a7 horizontalVelocity:(double *)a8 verticalVelocity:(double *)a9
{
  double v9;
  double v10;
  CGPoint result;

  -[SBSwitcherModifier adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:](self->_rootModifier, "adjustedOffsetForOffset:translation:startPoint:locationInView:horizontalVelocity:verticalVelocity:", a8, a9, a4.x, a4.y, a5.x, a5.y, a6.x, a6.y, a7.x, a7.y);
  result.y = v10;
  result.x = v9;
  return result;
}

- (CGSize)sizeForAppLayout:(id)a3 fromProvider:(id)a4
{
  double v4;
  double v5;
  double v6;
  double v7;
  CGSize result;

  -[SBFluidSwitcherContentView bounds](self->_contentView, "bounds", a3, a4);
  v5 = v4;
  v7 = v6;
  result.height = v7;
  result.width = v5;
  return result;
}

- (id)viewControllerForTransientOverlayAppLayout:(id)a3 fromProvider:(id)a4
{
  id v5;
  void *v6;
  void *v7;
  void *v8;

  v5 = a3;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if ((*(_BYTE *)&self->_dataSourceRespondsTo & 0x10) != 0)
  {
    objc_msgSend(v6, "viewControllerForTransientOverlayAppLayout:", v5);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

- (int64_t)orientationForSnapshotOfAppLayout:(id)a3 inImageCache:(id)a4
{
  uint64_t v5;
  void *v6;
  int64_t v7;

  v5 = -[SBSwitcherModifier preferredSnapshotOrientationForAppLayout:](self->_rootModifier, "preferredSnapshotOrientationForAppLayout:", a3, a4);
  if (v5 == 2)
    return -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation");
  if (v5 != 1)
    return 0;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v6, "activeInterfaceOrientationForSwitcherContentController:", self);

  return v7;
}

- (double)scaleForDownscaledSnapshotsForLayoutRole:(int64_t)a3 inAppLayout:(id)a4 inImageCache:(id)a5
{
  double result;

  -[SBSwitcherModifier snapshotScaleForLayoutRole:inAppLayout:](self->_rootModifier, "snapshotScaleForLayoutRole:inAppLayout:", a3, a4, a5);
  return result;
}

- (CGSize)snapshotSizeForItemWithRole:(int64_t)a3 inAppLayout:(id)a4 interfaceOrientation:(int64_t)a5 inImageCache:(id)a6
{
  id v10;
  id v11;
  void *v12;
  void *v13;
  SBOverrideInterfaceOrientationSwitcherModifier *v14;
  SBSwitcherModifier *rootModifier;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  _QWORD v22[5];
  id v23;
  id v24;
  _QWORD *v25;
  _QWORD v26[4];
  __int128 v27;
  __int128 v28;
  CGSize result;

  v10 = a4;
  v11 = a6;
  if (a3 == 4 && objc_msgSend(v10, "environment") == 1 || objc_msgSend(v10, "environment") == 3)
  {
    -[SBFluidSwitcherViewController _frameForCenterItemInInterfaceOrientation:centerConfiguration:](self, "_frameForCenterItemInInterfaceOrientation:centerConfiguration:", a5, SBMainDisplayLayoutStateCenterConfigurationFromAppLayoutCenterConfiguration(objc_msgSend(v10, "centerConfiguration")));
  }
  else if (objc_msgSend(v10, "environment") == 1)
  {
    objc_msgSend(v10, "leafAppLayoutForRole:", a3);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v12);
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    if (v13)
    {
      v26[0] = 0;
      v26[1] = v26;
      v26[2] = 0x4010000000;
      v26[3] = &unk_1D0FA064E;
      v27 = 0u;
      v28 = 0u;
      v14 = -[SBOverrideInterfaceOrientationSwitcherModifier initWithInterfaceOrientation:]([SBOverrideInterfaceOrientationSwitcherModifier alloc], "initWithInterfaceOrientation:", a5);
      rootModifier = self->_rootModifier;
      v22[0] = MEMORY[0x1E0C809B0];
      v22[1] = 3221225472;
      v22[2] = __107__SBFluidSwitcherViewController_snapshotSizeForItemWithRole_inAppLayout_interfaceOrientation_inImageCache___block_invoke;
      v22[3] = &unk_1E8EA4E50;
      v22[4] = self;
      v23 = v13;
      v24 = v12;
      v25 = v26;
      -[SBChainableModifier performTransactionWithTemporaryChildModifier:usingBlock:](rootModifier, "performTransactionWithTemporaryChildModifier:usingBlock:", v14, v22);

      _Block_object_dispose(v26, 8);
    }

  }
  else if (objc_msgSend(v10, "environment") == 2)
  {
    -[SBFluidSwitcherViewController _frameForFloatingAppLayoutInInterfaceOrientation:floatingConfiguration:](self, "_frameForFloatingAppLayoutInInterfaceOrientation:floatingConfiguration:", a5, 2);
  }
  _UIWindowConvertRectFromOrientationToOrientation();
  v17 = v16;
  v19 = v18;

  v20 = v17;
  v21 = v19;
  result.height = v21;
  result.width = v20;
  return result;
}

uint64_t __107__SBFluidSwitcherViewController_snapshotSizeForItemWithRole_inAppLayout_interfaceOrientation_inImageCache___block_invoke(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  objc_msgSend(*(id *)(a1 + 32), "appLayouts");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "indexOfObject:", *(_QWORD *)(a1 + 40));

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "frameForIndex:", v3);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "fullyPresentedFrameForIndex:frame:", v3);
  v4 = *(void **)(a1 + 40);
  objc_msgSend(*(id *)(a1 + 48), "allItems");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "firstObject");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(v4, "layoutRoleForItem:", v6);

  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(void **)(*(_QWORD *)(a1 + 32) + 1936);
  SBRectWithSize();
  result = objc_msgSend(v9, "frameForLayoutRole:inAppLayout:withBounds:", v7, v8);
  v11 = *(_QWORD **)(*(_QWORD *)(a1 + 56) + 8);
  v11[4] = v12;
  v11[5] = v13;
  v11[6] = v14;
  v11[7] = v15;
  return result;
}

- (id)sceneHandleProviderForImageCache:(id)a3
{
  void *v3;
  void *v4;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sceneManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();

  return v4;
}

- (id)displayIdentityForImageCache:(id)a3
{
  void *v3;
  void *v4;
  void *v5;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "sceneManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "displayIdentity");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

- (void)underlayAccessoryView:(id)a3 didSelectHeaderForRole:(int64_t)a4
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  SBTapAppLayoutSwitcherModifierEvent *v15;
  _QWORD v16[4];
  id v17;

  -[NSMutableDictionary allKeysForObject:](self->_visibleUnderlayAccessoryViews, "allKeysForObject:", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "firstObject");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  -[NSMutableDictionary objectForKey:](self->_appLayoutToTitleItemController, "objectForKey:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  if (SBLayoutRoleMaskContainsRole(objc_msgSend(v8, "multiWindowIndicatorRoleMask"), a4))
  {
    -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "_fbsDisplayConfiguration");
    v10 = (void *)objc_claimAutoreleasedReturnValue();

    objc_msgSend(v7, "itemForLayoutRole:", a4);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "bundleIdentifier");
    v12 = (void *)objc_claimAutoreleasedReturnValue();

    +[SBMainWorkspace sharedInstance](SBMainWorkspace, "sharedInstance");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 3221225472;
    v16[2] = __78__SBFluidSwitcherViewController_underlayAccessoryView_didSelectHeaderForRole___block_invoke;
    v16[3] = &unk_1E8E9EE78;
    v17 = v12;
    v14 = v12;
    objc_msgSend(v13, "requestTransitionWithOptions:displayConfiguration:builder:validator:", 0, v10, v16, 0);

  }
  else
  {
    v15 = -[SBTapAppLayoutSwitcherModifierEvent initWithAppLayout:layoutRole:modifierFlags:]([SBTapAppLayoutSwitcherModifierEvent alloc], "initWithAppLayout:layoutRole:modifierFlags:", v7, a4, 0);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v15);

  }
}

void __78__SBFluidSwitcherViewController_underlayAccessoryView_didSelectHeaderForRole___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  _QWORD v4[4];
  id v5;

  v3 = a2;
  objc_msgSend(v3, "setSource:", 3);
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 3221225472;
  v4[2] = __78__SBFluidSwitcherViewController_underlayAccessoryView_didSelectHeaderForRole___block_invoke_2;
  v4[3] = &unk_1E8E9EE50;
  v5 = *(id *)(a1 + 32);
  objc_msgSend(v3, "modifyApplicationContext:", v4);

}

uint64_t __78__SBFluidSwitcherViewController_underlayAccessoryView_didSelectHeaderForRole___block_invoke_2(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "setRequestedAppExposeBundleID:", *(_QWORD *)(a1 + 32));
}

- (BOOL)underlayAccessoryViewShouldBeginPointerInteraction:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  BOOL v7;
  void *v8;

  -[NSMutableDictionary allKeysForObject:](self->_visibleUnderlayAccessoryViews, "allKeysForObject:", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "firstObject");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBFluidSwitcherLayoutContext activeGesture](self->_layoutContext, "activeGesture");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v7 = 0;
  }
  else
  {
    objc_msgSend(v5, "itemForLayoutRole:", 4);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v8 == 0;

  }
  return v7;
}

- (void)overlayAccessoryView:(id)a3 didSelectHeaderForRole:(int64_t)a4
{
  id v6;
  void *v7;
  void *v8;
  SBTapAppLayoutHeaderSwitcherModifierEvent *v9;
  NSObject *v10;
  SBTapAppLayoutHeaderSwitcherModifierEvent *v11;

  v6 = a3;
  -[NSMutableDictionary allKeysForObject:](self->_visibleOverlayAccessoryViews, "allKeysForObject:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "firstObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  if (v8)
  {
    if (-[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled"))
      v9 = -[SBTapAppLayoutHeaderSwitcherModifierEvent initWithAppLayout:layoutRole:]([SBTapAppLayoutHeaderSwitcherModifierEvent alloc], "initWithAppLayout:layoutRole:", v8, a4);
    else
      v9 = -[SBTapAppLayoutSwitcherModifierEvent initWithAppLayout:layoutRole:modifierFlags:]([SBTapAppLayoutSwitcherModifierEvent alloc], "initWithAppLayout:layoutRole:modifierFlags:", v8, a4, 0);
    v11 = v9;
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v9);

  }
  else
  {
    SBLogAppSwitcher();
    v10 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
      -[SBFluidSwitcherViewController overlayAccessoryView:didSelectHeaderForRole:].cold.1(v6, v10);

  }
}

- (id)appLayoutsForSwitcherShelfViewController:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  _QWORD v12[4];
  id v13;
  id v14;

  objc_msgSend(a3, "shelf");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "bundleIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBFluidSwitcherViewController draggingAppLayoutsForWindowDrag](self, "draggingAppLayoutsForWindowDrag");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v12[0] = MEMORY[0x1E0C809B0];
  v12[1] = 3221225472;
  v12[2] = __74__SBFluidSwitcherViewController_appLayoutsForSwitcherShelfViewController___block_invoke;
  v12[3] = &unk_1E8EA4E78;
  v13 = v5;
  v14 = v6;
  v8 = v6;
  v9 = v5;
  objc_msgSend(v7, "bs_filter:", v12);
  v10 = (void *)objc_claimAutoreleasedReturnValue();

  return v10;
}

uint64_t __74__SBFluidSwitcherViewController_appLayoutsForSwitcherShelfViewController___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  uint64_t v4;

  v3 = a2;
  if (objc_msgSend(v3, "containsItemWithBundleIdentifier:", *(_QWORD *)(a1 + 32)))
    v4 = objc_msgSend(*(id *)(a1 + 40), "containsObject:", v3) ^ 1;
  else
    v4 = 0;

  return v4;
}

- (int64_t)nextDisplayItemInteractionTimeForSwitcherShelfViewController:(id)a3
{
  id WeakRetained;
  int64_t v5;

  WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
  v5 = objc_msgSend(WeakRetained, "nextDisplayItemInteractionTimeForSwitcherContentController:", self);

  return v5;
}

- (CGRect)switcherShelfViewController:(id)a3 frameForItemWithRole:(int64_t)a4 inMainAppLayout:(id)a5 interfaceOrientation:(int64_t)a6
{
  double v6;
  double v7;
  double v8;
  double v9;
  CGRect result;

  -[SBFluidSwitcherViewController _frameForItemWithRole:inMainAppLayout:interfaceOrientation:](self, "_frameForItemWithRole:inMainAppLayout:interfaceOrientation:", a4, a5, a6);
  result.size.height = v9;
  result.size.width = v8;
  result.origin.y = v7;
  result.origin.x = v6;
  return result;
}

- (CGRect)switcherShelfViewController:(id)a3 frameForFloatingAppLayoutInInterfaceOrientation:(int64_t)a4 floatingConfiguration:(int64_t)a5
{
  double v5;
  double v6;
  double v7;
  double v8;
  CGRect result;

  -[SBFluidSwitcherViewController _frameForFloatingAppLayoutInInterfaceOrientation:floatingConfiguration:](self, "_frameForFloatingAppLayoutInInterfaceOrientation:floatingConfiguration:", a4, a5);
  result.size.height = v8;
  result.size.width = v7;
  result.origin.y = v6;
  result.origin.x = v5;
  return result;
}

- (CGRect)switcherShelfViewController:(id)a3 frameForCenterItemWithConfiguration:(int64_t)a4 interfaceOrientation:(int64_t)a5
{
  double v5;
  double v6;
  double v7;
  double v8;
  CGRect result;

  -[SBFluidSwitcherViewController _frameForCenterItemInInterfaceOrientation:centerConfiguration:](self, "_frameForCenterItemInInterfaceOrientation:centerConfiguration:", a5, a4);
  result.size.height = v8;
  result.size.width = v7;
  result.origin.y = v6;
  result.origin.x = v5;
  return result;
}

- (id)switcherShelfViewController:(id)a3 transitionEventForContext:(id)a4 identifier:(id)a5 phase:(unint64_t)a6 animated:(BOOL)a7
{
  return -[SBFluidSwitcherViewController _transitionEventForTransitionWithContext:identifier:phase:animated:](self, "_transitionEventForTransitionWithContext:identifier:phase:animated:", a4, a5, a6, a7);
}

- (id)switcherShelfViewController:(id)a3 liveViewForAppLayout:(id)a4
{
  NSMutableDictionary *liveContentOverlays;
  void *v5;
  void *v6;
  void *v7;

  liveContentOverlays = self->_liveContentOverlays;
  objc_msgSend(a4, "anyLeafAppLayout", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](liveContentOverlays, "objectForKey:", v5);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_opt_respondsToSelector() & 1) != 0)
    v7 = (void *)objc_msgSend(v6, "newPortaledLiveContentOverlayView");
  else
    v7 = 0;

  return v7;
}

- (BOOL)switcherShelfViewController:(id)a3 hitTestedToTopAffordance:(CGPoint)a4 window:(id)a5
{
  double y;
  double x;
  id v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  BOOL v18;

  y = a4.y;
  x = a4.x;
  v9 = a5;
  v10 = a3;
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "layoutState");
  v12 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v10, "shelf");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  if (!objc_msgSend(v13, "displayMode"))
  {
    objc_msgSend(v12, "appLayout");
    v14 = objc_claimAutoreleasedReturnValue();
    goto LABEL_7;
  }
  if (objc_msgSend(v13, "displayMode") == 1 && objc_msgSend(v13, "layoutRole") == 3)
  {
    objc_msgSend(v12, "floatingAppLayout");
    v14 = objc_claimAutoreleasedReturnValue();
LABEL_7:
    v16 = (void *)v14;
    goto LABEL_8;
  }
  objc_msgSend(v12, "appLayout");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "leafAppLayoutForRole:", objc_msgSend(v13, "layoutRole"));
  v16 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_8:
  objc_msgSend(v16, "anyLeafAppLayout");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = -[SBFluidSwitcherViewController _hitTestedToTopAffordance:window:forLeafAppLayout:](self, "_hitTestedToTopAffordance:window:forLeafAppLayout:", v9, v17, x, y);

  return v18;
}

- (void)pointerBeganResizingItemContainer:(id)a3
{
  objc_storeStrong((id *)&self->_itemContainerToResizeUsingPointer, a3);
}

- (void)pointerEndedResizingItemContainer:(id)a3
{
  SBFluidSwitcherItemContainer *v4;
  SBFluidSwitcherItemContainer *v5;

  v4 = (SBFluidSwitcherItemContainer *)a3;
  if (self->_itemContainerToResizeUsingPointer == v4)
  {
    self->_itemContainerToResizeUsingPointer = 0;
    v5 = v4;

    v4 = v5;
  }

}

- (void)killContainer:(id)a3 forReason:(int64_t)a4
{
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  _QWORD v14[6];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "appLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSDictionary objectForKey:](self->_leafAppLayoutsToRecencyAppLayouts, "objectForKey:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v7, "isCenterOverFull"))
  {
    v17 = 0u;
    v18 = 0u;
    v15 = 0u;
    v16 = 0u;
    objc_msgSend(v7, "allItems");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v16;
      do
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v16 != v11)
            objc_enumerationMutation(v8);
          objc_msgSend(v6, "switcherContentController:deletedDisplayItem:inAppLayout:forReason:", self, *(_QWORD *)(*((_QWORD *)&v15 + 1) + 8 * i), v7, 1);
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
      }
      while (v10);
    }
  }
  else
  {
    objc_msgSend(v5, "itemForLayoutRole:", 1);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "switcherContentController:deletedDisplayItem:inAppLayout:forReason:", self, v8, v7, 1);
    v13 = objc_msgSend(v7, "layoutRoleForItem:", v8);
    if (SBLayoutRoleIsValidForSplitView(v13))
    {
      v14[0] = MEMORY[0x1E0C809B0];
      v14[1] = 3221225472;
      v14[2] = __57__SBFluidSwitcherViewController_killContainer_forReason___block_invoke;
      v14[3] = &unk_1E8EA4EA0;
      v14[4] = self;
      v14[5] = v13;
      objc_msgSend(v7, "enumerate:", v14);
    }
  }

}

void __57__SBFluidSwitcherViewController_killContainer_forReason___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  id v5;
  uint64_t v6;
  _BOOL4 IsValidForSplitView;
  id v8;

  v5 = a3;
  v6 = *(_QWORD *)(a1 + 40);
  if (v6 != a2)
  {
    v8 = v5;
    IsValidForSplitView = SBLayoutRoleIsValidForSplitView(v6);
    v5 = v8;
    if (IsValidForSplitView)
    {
      objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1040), "reloadSnapshotForDisplayItem:", v8);
      v5 = v8;
    }
  }

}

- (BOOL)canSelectContainer:(id)a3 numberOfTaps:(int64_t)a4
{
  id v6;
  BOOL v7;
  double v8;
  NSMutableDictionary *visibleItemContainers;
  _QWORD v11[5];
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v6 = a3;
  v12 = 0;
  v13 = &v12;
  v14 = 0x2020000000;
  v7 = 1;
  v15 = 1;
  if (a4 <= 1)
  {
    -[SBAppSwitcherScrollView contentOffsetVelocity](self->_scrollView, "contentOffsetVelocity");
    if (fabs(v8) > 0.3)
      *((_BYTE *)v13 + 24) = 0;
    visibleItemContainers = self->_visibleItemContainers;
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __65__SBFluidSwitcherViewController_canSelectContainer_numberOfTaps___block_invoke;
    v11[3] = &unk_1E8EA4EC8;
    v11[4] = &v12;
    -[NSMutableDictionary enumerateKeysAndObjectsUsingBlock:](visibleItemContainers, "enumerateKeysAndObjectsUsingBlock:", v11);
    v7 = *((_BYTE *)v13 + 24) != 0;
  }
  _Block_object_dispose(&v12, 8);

  return v7;
}

uint64_t __65__SBFluidSwitcherViewController_canSelectContainer_numberOfTaps___block_invoke(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  uint64_t result;

  objc_msgSend(a3, "killingProgress");
  result = BSFloatIsZero();
  if ((result & 1) == 0)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 0;
    *a4 = 1;
  }
  return result;
}

- (void)containerSelectionStateChanged:(id)a3 toState:(int64_t)a4 hover:(BOOL)a5 pencilHover:(BOOL)a6
{
  _BOOL8 v6;
  _BOOL8 v7;
  id v10;
  int64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  void *v16;
  uint64_t v17;
  SBHighlightSwitcherModifierEvent *v18;
  id v19;

  v6 = a6;
  v7 = a5;
  v10 = a3;
  v11 = a4 - 1;
  if ((unint64_t)(a4 - 1) <= 4 && ((0x1Du >> v11) & 1) != 0)
  {
    v12 = qword_1D0E88C60[v11];
    v19 = v10;
    objc_msgSend(v10, "appLayout");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v13);
    v14 = (id)objc_claimAutoreleasedReturnValue();
    if (!v14)
      v14 = v13;
    objc_msgSend(v13, "allItems");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "firstObject");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v17 = objc_msgSend(v14, "layoutRoleForItem:", v16);

    v18 = -[SBHighlightSwitcherModifierEvent initWithLayoutRole:inAppLayout:phase:hover:pencilHover:]([SBHighlightSwitcherModifierEvent alloc], "initWithLayoutRole:inAppLayout:phase:hover:pencilHover:", v17, v14, v12, v7, v6);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v18);

    v10 = v19;
  }

}

- (id)itemContainerToResizeUsingPointer
{
  return self->_itemContainerToResizeUsingPointer;
}

- (void)clientWithSceneIdentifier:(id)a3 suppressPreferredPointerLockStatusUpdated:(BOOL)a4
{
  _BOOL8 v4;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _BYTE v18[128];
  uint64_t v19;

  v4 = a4;
  v19 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController liveOverlayForSceneIdentifier:](self, "liveOverlayForSceneIdentifier:", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary allKeysForObject:](self->_liveContentOverlays, "allKeysForObject:", v6);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v14 = 0u;
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v15;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v15 != v10)
          objc_enumerationMutation(v7);
        -[SBFluidSwitcherViewController _itemContainerForAppLayoutIfExists:](self, "_itemContainerForAppLayoutIfExists:", *(_QWORD *)(*((_QWORD *)&v14 + 1) + 8 * v11));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        v13 = v12;
        if (v12)
          objc_msgSend(v12, "setPreferredPointerLockStatusSuppressed:", v4);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v14, v18, 16);
    }
    while (v9);
  }

}

- (void)didSelectContainer:(id)a3 modifierFlags:(int64_t)a4
{
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  _BOOL4 v13;
  id v14;
  SBTapAppLayoutSwitcherModifierEvent *v15;
  id v16;

  objc_msgSend(a3, "appLayout");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v16 = v6;
    objc_msgSend(v6, "itemForLayoutRole:", 1);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "uniqueIdentifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "lockedPointerManager");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v7, "uniqueIdentifier");
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "clientWithSceneIdentifier:suppressPreferredLockStatus:", v11, 0);

    }
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v16);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v13 = -[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled");
    if ((a4 & 0x20000) != 0
      && v13
      && -[SBSwitcherModifier canSelectLeafWithModifierKeysInAppLayout:](self->_rootModifier, "canSelectLeafWithModifierKeysInAppLayout:", v12))
    {
      v14 = v16;

      v12 = v14;
    }
    v15 = -[SBTapAppLayoutSwitcherModifierEvent initWithAppLayout:layoutRole:modifierFlags:]([SBTapAppLayoutSwitcherModifierEvent alloc], "initWithAppLayout:layoutRole:modifierFlags:", v12, objc_msgSend(v12, "layoutRoleForItem:", v7), a4);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v15);

    v6 = v16;
  }

}

- (void)containerWillBeginSwipingToKill:(id)a3
{
  void *v4;
  id v5;

  objc_msgSend(a3, "appLayout");
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if ((-[SBSwitcherModifier shouldTetherItemsAndAccessoriesInAppLayout:](self->_rootModifier, "shouldTetherItemsAndAccessoriesInAppLayout:", v4) & 1) == 0)-[SBFluidSwitcherViewController _beginRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:killing:](self, "_beginRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:killing:", v5, 1);

}

- (void)containerDidEndSwipingToKill:(id)a3
{
  id v4;

  objc_msgSend(a3, "appLayout");
  v4 = (id)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _stopRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:killing:](self, "_stopRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:killing:", v4, 1);

}

- (void)scrollViewKillingProgressUpdated:(double)a3 translation:(CGPoint)a4 isDragging:(BOOL)a5 decelerationTargetProgress:(double)a6 forContainer:(id)a7
{
  _BOOL8 v8;
  double y;
  double x;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  SBSwipeToKillSwitcherModifierEvent *v17;
  id v18;

  v8 = a5;
  y = a4.y;
  x = a4.x;
  objc_msgSend(a7, "appLayout");
  v18 = (id)objc_claimAutoreleasedReturnValue();
  -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v18);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "allItems");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v14, "firstObject");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v13, "layoutRoleForItem:", v15);

  v17 = -[SBSwipeToKillSwitcherModifierEvent initWithLayoutRole:inAppLayout:progress:translation:]([SBSwipeToKillSwitcherModifierEvent alloc], "initWithLayoutRole:inAppLayout:progress:translation:", v16, v13, a3, x, y);
  -[SBSwipeToKillSwitcherModifierEvent setDragging:](v17, "setDragging:", v8);
  -[SBSwipeToKillSwitcherModifierEvent setDecelerationTargetProgress:](v17, "setDecelerationTargetProgress:", a6);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v17);

}

- (void)containerWillBeginAnimatingHighlight:(id)a3 scale:(double)a4 isTracking:(BOOL)a5
{
  _BOOL8 v5;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _BYTE v22[128];
  uint64_t v23;

  v5 = a5;
  v23 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "appLayout");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  if ((-[SBSwitcherModifier shouldTetherItemsAndAccessoriesInAppLayout:](self->_rootModifier, "shouldTetherItemsAndAccessoriesInAppLayout:", v9) & 1) == 0)-[SBFluidSwitcherViewController _beginRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:killing:](self, "_beginRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:killing:", v8, 0);
  if (-[SBSwitcherModifier shouldTetherItemsAndAccessoriesInAppLayout:](self->_rootModifier, "shouldTetherItemsAndAccessoriesInAppLayout:", v9))
  {
    -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v9);
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v17, "setContentViewScale:", a4);
    -[NSMutableDictionary objectForKey:](self->_visibleUnderlayAccessoryViews, "objectForKey:", v9);
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "setContentViewScale:", a4);
    v20 = 0u;
    v21 = 0u;
    v18 = 0u;
    v19 = 0u;
    objc_msgSend(v9, "leafAppLayouts");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    v11 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
    if (v11)
    {
      v12 = v11;
      v13 = *(_QWORD *)v19;
      do
      {
        v14 = 0;
        do
        {
          if (*(_QWORD *)v19 != v13)
            objc_enumerationMutation(v10);
          if (*(void **)(*((_QWORD *)&v18 + 1) + 8 * v14) != v8)
          {
            -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:");
            v15 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v15, "setLifted:", v5);

          }
          ++v14;
        }
        while (v12 != v14);
        v12 = objc_msgSend(v10, "countByEnumeratingWithState:objects:count:", &v18, v22, 16);
      }
      while (v12);
    }

  }
}

- (void)containerDidEndAnimatingHighlight:(id)a3 scale:(double)a4
{
  id v5;

  objc_msgSend(a3, "appLayout", a4);
  v5 = (id)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController _stopRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:killing:](self, "_stopRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:killing:", v5, 0);

}

- (BOOL)isLocationInSafeArea:(CGPoint)a3
{
  CGFloat y;
  CGFloat x;
  void *v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  CGFloat v15;
  double v16;
  double v17;
  CGFloat v18;
  double v19;
  BOOL v20;
  CGPoint v22;
  CGRect v23;

  y = a3.y;
  x = a3.x;
  -[SBFluidSwitcherViewController view](self, "view");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "bounds");
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;
  objc_msgSend(v5, "safeAreaInsets");
  v15 = v9 + v14;
  v18 = v11 - (v16 + v17);
  v23.size.height = v13 - (v14 + v19);
  v23.origin.x = v7 + v16;
  v23.origin.y = v15;
  v23.size.width = v18;
  v22.x = x;
  v22.y = y;
  v20 = CGRectContainsPoint(v23, v22);

  return v20;
}

- (void)container:(id)a3 didBecomeFocused:(BOOL)a4
{
  _BOOL8 v4;
  void *v6;
  uint64_t v7;
  void *v8;
  SBUpdateFocusedAppLayoutSwitcherModifierEvent *v9;
  void *v10;

  v4 = a4;
  objc_msgSend(a3, "appLayout");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (v6)
  {
    v10 = v6;
    -[NSDictionary objectForKeyedSubscript:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKeyedSubscript:", v6);
    v7 = objc_claimAutoreleasedReturnValue();
    v6 = v10;
    if (v7)
    {
      v8 = (void *)v7;
      v9 = -[SBUpdateFocusedAppLayoutSwitcherModifierEvent initWithAppLayout:focused:]([SBUpdateFocusedAppLayoutSwitcherModifierEvent alloc], "initWithAppLayout:focused:", v7, v4);
      -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v9);

      v6 = v10;
    }
  }

}

- (BOOL)isAppLayoutMostRecentRepresentationOfDisplayItems:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  char v12;
  void *v14;
  _QWORD v15[4];
  id v16;

  v5 = a3;
  if (!v5)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 7396, CFSTR("Invalid parameter not satisfying: %@"), CFSTR("appLayout"));

  }
  v6 = (void *)MEMORY[0x1E0C99E60];
  objc_msgSend(v5, "allItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "setWithArray:", v7);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v15[0] = MEMORY[0x1E0C809B0];
  v15[1] = 3221225472;
  v15[2] = __83__SBFluidSwitcherViewController_isAppLayoutMostRecentRepresentationOfDisplayItems___block_invoke;
  v15[3] = &unk_1E8E9DF78;
  v16 = v8;
  v10 = v8;
  objc_msgSend(v9, "bs_firstObjectPassingTest:", v15);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  if (v11)
    v12 = objc_msgSend(v11, "isOrContainsAppLayout:", v5);
  else
    v12 = 1;

  return v12;
}

uint64_t __83__SBFluidSwitcherViewController_isAppLayoutMostRecentRepresentationOfDisplayItems___block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "containsAnyItemFromSet:", *(_QWORD *)(a1 + 32));
}

- (BOOL)displayItemSupportsMedusa:(id)a3
{
  void *v3;
  char v4;

  -[SBFluidSwitcherViewController _applicationForDisplayItem:](self, "_applicationForDisplayItem:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isMedusaCapable");

  return v4;
}

- (BOOL)displayItemSupportsCenterRole:(id)a3
{
  id v4;
  char v5;
  id WeakRetained;
  void *v7;

  v4 = a3;
  if (-[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled"))
  {
    v5 = 0;
  }
  else
  {
    WeakRetained = objc_loadWeakRetained((id *)&self->_dataSource);
    v7 = WeakRetained;
    if ((*((_BYTE *)&self->_dataSourceRespondsTo + 2) & 0x10) != 0)
      v5 = objc_msgSend(WeakRetained, "switcherContentController:displayItemSupportsCenterRole:", self, v4);
    else
      v5 = 0;

  }
  return v5;
}

- (BOOL)hitTestedToTopAffordance:(CGPoint)a3 window:(id)a4 ofItemContainer:(id)a5
{
  double y;
  double x;
  id v9;
  void *v10;

  y = a3.y;
  x = a3.x;
  v9 = a4;
  objc_msgSend(a5, "appLayout");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  LOBYTE(self) = -[SBFluidSwitcherViewController _hitTestedToTopAffordance:window:forLeafAppLayout:](self, "_hitTestedToTopAffordance:window:forLeafAppLayout:", v9, v10, x, y);

  return (char)self;
}

- (BOOL)hitTestedToFloatingElement:(CGPoint)a3 window:(id)a4 ofItemContainer:(id)a5
{
  double y;
  double x;
  id v7;
  void *v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  void *v14;
  void *v15;
  char v16;
  void *v17;
  char v18;
  void *v19;
  char v20;

  y = a3.y;
  x = a3.x;
  v7 = a4;
  objc_msgSend(v7, "screen");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "fixedCoordinateSpace");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "convertPoint:toCoordinateSpace:", v9, x, y);
  v11 = v10;
  v13 = v12;
  objc_msgSend(v7, "_sbWindowScene");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v14, "floatingDockController");
  v15 = (void *)objc_claimAutoreleasedReturnValue();
  v16 = objc_msgSend(v15, "containsPoint:fromCoordinateSpace:", v9, v11, v13);

  objc_msgSend(v14, "pictureInPictureManager");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = objc_msgSend(v17, "isPointWithinAnyPictureInPictureContent:", v11, v13);

  objc_msgSend((id)SBApp, "bannerManager");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  v20 = objc_msgSend(v19, "pointInsideBanner:inWindowScene:", v14, v11, v13);

  return v16 | v18 | v20;
}

- (void)prepareForCoordinatedLayoutStateTransitionWithContext:(id)a3
{
  -[SBSwitcherLiveContentOverlayCoordinating prepareForCoordinatedLayoutStateTransitionWithContext:](self->_liveContentOverlayCoordinator, "prepareForCoordinatedLayoutStateTransitionWithContext:", a3);
}

- (void)cleanUpAfterCoordinatedLayoutStateTransitionWithContext:(id)a3
{
  -[SBSwitcherLiveContentOverlayCoordinating cleanUpAfterCoordinatedLayoutStateTransitionWithContext:](self->_liveContentOverlayCoordinator, "cleanUpAfterCoordinatedLayoutStateTransitionWithContext:", a3);
}

- (void)gestureHandlingModifierRequestsUpdate:(id)a3
{
  void *v4;
  void *v5;
  id v6;

  -[SBFluidSwitcherViewController _gestureManager](self, "_gestureManager", a3);
  v6 = (id)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "activeGesture");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController handleFluidSwitcherGestureManager:didUpdateGesture:](self, "handleFluidSwitcherGestureManager:didUpdateGesture:", v6, v5);

}

- (CGPoint)gestureHandlingModifier:(id)a3 averageVelocityOverDuration:(double)a4
{
  void *v5;
  void *v6;
  void *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  CGPoint result;

  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext", a3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "activeGesture");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "gestureEvent");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v7, "averageTouchVelocityOverTimeDuration:", a4);
  v9 = v8;
  v11 = v10;

  v12 = v9;
  v13 = v11;
  result.y = v13;
  result.x = v12;
  return result;
}

- (void)settings:(id)a3 changedValueForKey:(id)a4
{
  SBFHomeGrabberSettings *v5;
  SBFHomeGrabberSettings *v6;
  SBFHomeGrabberSettings *v7;
  void *v8;
  id v9;
  __objc2_class *v10;
  SBFHomeGrabberSettings *v11;

  v11 = (SBFHomeGrabberSettings *)a3;
  +[SBHomeGestureDomain rootSettings](SBHomeGestureDomain, "rootSettings");
  v5 = (SBFHomeGrabberSettings *)objc_claimAutoreleasedReturnValue();
  +[SBMedusaDomain rootSettings](SBMedusaDomain, "rootSettings");
  v6 = (SBFHomeGrabberSettings *)objc_claimAutoreleasedReturnValue();
  if (v5 == v11)
  {
    v10 = SBHomeGestureSettingsChangedSwitcherModifierEvent;
    goto LABEL_8;
  }
  if (v6 == v11 || self->_homeGrabberSettings == v11)
  {
    v10 = SBMedusaSettingsChangedSwitcherModifierEvent;
LABEL_8:
    v9 = objc_alloc_init(v10);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v9);
    goto LABEL_9;
  }
  -[SBAppSwitcherSettings chamoisSettings](self->_settings, "chamoisSettings");
  v7 = (SBFHomeGrabberSettings *)objc_claimAutoreleasedReturnValue();

  if (v7 == v11)
  {
    -[SBFluidSwitcherViewController _updateContentViewSublayerTransform](self, "_updateContentViewSublayerTransform");
    -[SBFluidSwitcherViewController view](self, "view");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "setNeedsLayout");

    -[SBFluidSwitcherViewController view](self, "view");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "layoutIfNeeded");
LABEL_9:

  }
}

- (void)settings:(id)a3 changedValueForKeyPath:(id)a4
{
  SBSwitcherSettingsChangedSwitcherModifierEvent *v5;
  _QWORD block[5];

  if (self->_settings == a3)
  {
    v5 = objc_alloc_init(SBSwitcherSettingsChangedSwitcherModifierEvent);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v5);
    block[0] = MEMORY[0x1E0C809B0];
    block[1] = 3221225472;
    block[2] = __65__SBFluidSwitcherViewController_settings_changedValueForKeyPath___block_invoke;
    block[3] = &unk_1E8E9DED8;
    block[4] = self;
    dispatch_async(MEMORY[0x1E0C80D38], block);

  }
}

void __65__SBFluidSwitcherViewController_settings_changedValueForKeyPath___block_invoke(uint64_t a1)
{
  id v1;

  objc_msgSend(*(id *)(a1 + 32), "viewIfLoaded");
  v1 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "setNeedsLayout");

}

- (void)_scrollToAppLayout:(id)a3 animated:(BOOL)a4 alignment:(int64_t)a5 completion:(id)a6
{
  _BOOL8 v7;
  id v10;
  void *v11;
  uint64_t v12;
  void (**v13)(id, uint64_t);

  v7 = a4;
  v13 = (void (**)(id, uint64_t))a6;
  v10 = a3;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = objc_msgSend(v11, "indexOfObject:", v10);

  if (v12 == 0x7FFFFFFFFFFFFFFFLL)
  {
    if (v13)
      v13[2](v13, 1);
  }
  else
  {
    -[SBFluidSwitcherViewController _updateScrollViewSizeAndSpacing](self, "_updateScrollViewSizeAndSpacing");
    -[SBSwitcherModifier contentOffsetForIndex:alignment:](self->_rootModifier, "contentOffsetForIndex:alignment:", v12, a5);
    -[BSUIScrollView setContentOffset:animated:completion:](self->_scrollView, "setContentOffset:animated:completion:", v7, v13);
  }

}

- (id)_createWorkspaceTransientOverlayForAppLayout:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if ((*(_BYTE *)&self->_dataSourceRespondsTo & 0x20) != 0)
  {
    objc_msgSend(v5, "createWorkspaceTransientOverlayForAppLayout:", v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (void)_configureTransitionRequestForGestureBegin:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  _QWORD v8[4];
  id v9;

  v4 = a3;
  -[SBFluidSwitcherViewController _activeTransientOverlayPresentedAppLayout](self, "_activeTransientOverlayPresentedAppLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5
    && (-[SBFluidSwitcherViewController _createWorkspaceTransientOverlayForAppLayout:](self, "_createWorkspaceTransientOverlayForAppLayout:", v5), (v6 = (void *)objc_claimAutoreleasedReturnValue()) != 0))
  {
    v8[0] = MEMORY[0x1E0C809B0];
    v8[1] = 3221225472;
    v8[2] = __76__SBFluidSwitcherViewController__configureTransitionRequestForGestureBegin___block_invoke;
    v8[3] = &unk_1E8EA1EB8;
    v9 = v6;
    v7 = v6;
    objc_msgSend(v4, "modifyTransientOverlayContext:", v8);

  }
  else
  {
    objc_msgSend(v4, "setTransientOverlayContext:", 0);
  }

}

void __76__SBFluidSwitcherViewController__configureTransitionRequestForGestureBegin___block_invoke(uint64_t a1, void *a2)
{
  id v3;

  v3 = a2;
  objc_msgSend(v3, "setTransitionType:", 1);
  objc_msgSend(v3, "setTransientOverlay:", *(_QWORD *)(a1 + 32));

}

- (id)appLayoutAtLocation:(CGPoint)a3 withDraggedItem:(id)a4 environment:(int64_t)a5
{
  void *v6;
  NSDictionary *leafAppLayoutsToAdjustedAppLayouts;
  void *v8;
  void *v9;

  -[SBFluidSwitcherViewController _itemContainerAtLocation:ignoringDraggedItem:environment:](self, "_itemContainerAtLocation:ignoringDraggedItem:environment:", a4, a5, a3.x, a3.y);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  leafAppLayoutsToAdjustedAppLayouts = self->_leafAppLayoutsToAdjustedAppLayouts;
  objc_msgSend(v6, "appLayout");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSDictionary objectForKey:](leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v8);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

- (id)_itemContainerAtLocation:(CGPoint)a3 ignoringDraggedItem:(id)a4 environment:(int64_t)a5
{
  double y;
  double x;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  char v21;
  void *v22;
  void *v23;
  id v24;
  void *v26;
  SBFluidSwitcherViewController *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _BYTE v32[128];
  uint64_t v33;

  y = a3.y;
  x = a3.x;
  v33 = *MEMORY[0x1E0C80C00];
  v9 = a4;
  -[SBFluidSwitcherViewController _unadjustedLeafAppLayouts](self, "_unadjustedLeafAppLayouts");
  v28 = 0u;
  v29 = 0u;
  v30 = 0u;
  v31 = 0u;
  v27 = self;
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherContentView subviews](self->_contentView, "subviews");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "reverseObjectEnumerator");
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
  if (v12)
  {
    v13 = v12;
    v14 = *(_QWORD *)v29;
    while (2)
    {
      for (i = 0; i != v13; ++i)
      {
        if (*(_QWORD *)v29 != v14)
          objc_enumerationMutation(v11);
        v16 = *(void **)(*((_QWORD *)&v28 + 1) + 8 * i);
        v17 = objc_opt_class();
        SBSafeCast(v17, v16);
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        v19 = v18;
        if (v18)
        {
          if (!v9
            || (objc_msgSend(v18, "appLayout"),
                v20 = (void *)objc_claimAutoreleasedReturnValue(),
                v21 = objc_msgSend(v20, "containsItem:", v9),
                v20,
                (v21 & 1) == 0))
          {
            objc_msgSend(v19, "appLayout");
            v22 = (void *)objc_claimAutoreleasedReturnValue();
            v23 = v22;
            if ((!a5 || objc_msgSend(v22, "environment") == a5)
              && (objc_msgSend(v19, "isDeceleratingTowardsKillZone") & 1) == 0)
            {
              -[SBFluidSwitcherContentView convertPoint:toView:](v27->_contentView, "convertPoint:toView:", v19, x, y);
              if (objc_msgSend(v19, "pointInside:withEvent:", 0))
              {
                if ((objc_msgSend(v26, "containsObject:", v23) & 1) != 0
                  || -[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](v27, "isChamoisWindowingUIEnabled")
                  && -[NSArray containsObject:](v27->_cachedAdjustedLeafAppLayouts, "containsObject:", v23))
                {
                  v24 = v19;

                  goto LABEL_21;
                }
              }
            }

          }
        }

      }
      v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v28, v32, 16);
      if (v13)
        continue;
      break;
    }
  }
  v24 = 0;
LABEL_21:

  return v24;
}

- (id)_itemContainerAtLocation:(CGPoint)a3 environment:(int64_t)a4
{
  return -[SBFluidSwitcherViewController _itemContainerAtLocation:ignoringDraggedItem:environment:](self, "_itemContainerAtLocation:ignoringDraggedItem:environment:", 0, a4, a3.x, a3.y);
}

- (id)_itemContainerNearestLocation:(CGPoint)a3 environment:(int64_t)a4 prioritizeForegroundedItemContainers:(BOOL)a5
{
  CGFloat y;
  CGFloat x;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  _QWORD v15[6];
  _QWORD v16[5];
  BOOL v17;

  y = a3.y;
  x = a3.x;
  -[NSMutableDictionary allValues](self->_visibleItemContainers, "allValues");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  v10 = MEMORY[0x1E0C809B0];
  v16[0] = MEMORY[0x1E0C809B0];
  v16[1] = 3221225472;
  v16[2] = __112__SBFluidSwitcherViewController__itemContainerNearestLocation_environment_prioritizeForegroundedItemContainers___block_invoke;
  v16[3] = &__block_descriptor_41_e38_B16__0__SBFluidSwitcherItemContainer_8l;
  v16[4] = a4;
  v17 = a5;
  objc_msgSend(v9, "bs_filter:", v16);
  v11 = (void *)objc_claimAutoreleasedReturnValue();

  v15[0] = v10;
  v15[1] = 3221225472;
  v15[2] = __112__SBFluidSwitcherViewController__itemContainerNearestLocation_environment_prioritizeForegroundedItemContainers___block_invoke_2;
  v15[3] = &__block_descriptor_48_e71_q24__0__SBFluidSwitcherItemContainer_8__SBFluidSwitcherItemContainer_16l;
  *(CGFloat *)&v15[4] = x;
  *(CGFloat *)&v15[5] = y;
  objc_msgSend(v11, "sortedArrayUsingComparator:", v15);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v12, "firstObject");
  v13 = (void *)objc_claimAutoreleasedReturnValue();

  return v13;
}

BOOL __112__SBFluidSwitcherViewController__itemContainerNearestLocation_environment_prioritizeForegroundedItemContainers___block_invoke(uint64_t a1, void *a2)
{
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v8;

  v3 = a2;
  objc_msgSend(v3, "appLayout");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "environment");
  v6 = *(_QWORD *)(a1 + 32);
  if (v5 == v6 || v6 == 0)
  {
    if (objc_msgSend(v3, "isOccludedInContinuousExposeStage"))
      v8 = *(_BYTE *)(a1 + 40) == 0;
    else
      v8 = 1;
  }
  else
  {
    v8 = 0;
  }

  return v8;
}

uint64_t __112__SBFluidSwitcherViewController__itemContainerNearestLocation_environment_prioritizeForegroundedItemContainers___block_invoke_2(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;

  v5 = a3;
  v6 = a2;
  objc_msgSend(v6, "frame");
  v8 = v7;
  objc_msgSend(v6, "frame");
  hypot(v8 - *(double *)(a1 + 32), v9 + v10 - *(double *)(a1 + 40));
  objc_msgSend(v6, "frame");
  v13 = v11 + v12;
  objc_msgSend(v6, "frame");
  hypot(v13 - *(double *)(a1 + 32), v14 + v15 - *(double *)(a1 + 40));
  objc_msgSend(v6, "frame");
  v17 = v16;
  objc_msgSend(v6, "frame");
  hypot(v17 - *(double *)(a1 + 32), v18 - *(double *)(a1 + 40));
  objc_msgSend(v6, "frame");
  v21 = v19 + v20;
  objc_msgSend(v6, "frame");
  v23 = v22;

  hypot(v21 - *(double *)(a1 + 32), v23 - *(double *)(a1 + 40));
  objc_msgSend(v5, "frame");
  v25 = v24;
  objc_msgSend(v5, "frame");
  hypot(v25 - *(double *)(a1 + 32), v26 + v27 - *(double *)(a1 + 40));
  objc_msgSend(v5, "frame");
  v30 = v28 + v29;
  objc_msgSend(v5, "frame");
  hypot(v30 - *(double *)(a1 + 32), v31 + v32 - *(double *)(a1 + 40));
  objc_msgSend(v5, "frame");
  v34 = v33;
  objc_msgSend(v5, "frame");
  hypot(v34 - *(double *)(a1 + 32), v35 - *(double *)(a1 + 40));
  objc_msgSend(v5, "frame");
  v38 = v36 + v37;
  objc_msgSend(v5, "frame");
  v40 = v39;

  hypot(v38 - *(double *)(a1 + 32), v40 - *(double *)(a1 + 40));
  if ((BSFloatGreaterThanFloat() & 1) != 0)
    return 1;
  else
    return BSFloatLessThanFloat() << 63 >> 63;
}

- (id)adjustedAppLayoutForLeafAppLayout:(id)a3
{
  return -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", a3);
}

- (id)_leafAppLayoutForItemContainerAtLocation:(CGPoint)a3 environment:(int64_t)a4
{
  void *v4;
  void *v5;
  void *v6;

  -[SBFluidSwitcherViewController _itemContainerAtLocation:environment:](self, "_itemContainerAtLocation:environment:", a4, a3.x, a3.y);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    objc_msgSend(v4, "appLayout");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)_adjustedAppLayoutForItemContainerAtLocation:(CGPoint)a3 environment:(int64_t)a4
{
  void *v5;
  void *v6;

  -[SBFluidSwitcherViewController _leafAppLayoutForItemContainerAtLocation:environment:](self, "_leafAppLayoutForItemContainerAtLocation:environment:", a4, a3.x, a3.y);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    -[NSDictionary objectForKey:](self->_leafAppLayoutsToAdjustedAppLayouts, "objectForKey:", v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

- (id)_appLayoutForWorkspaceTransientOverlay:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;

  v4 = a3;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = v5;
  if ((*(_BYTE *)&self->_dataSourceRespondsTo & 8) != 0)
  {
    objc_msgSend(v5, "appLayoutForWorkspaceTransientOverlay:", v4);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v7 = 0;
  }

  return v7;
}

- (BOOL)_isAppLayoutBlurred:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  BOOL v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  void *v13;
  void *v14;
  uint64_t v15;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _BYTE v21[128];
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "indexOfObject:", v4);

  if (v6 == 0x7FFFFFFFFFFFFFFFLL)
  {
    v7 = 0;
  }
  else
  {
    v19 = 0u;
    v20 = 0u;
    v17 = 0u;
    v18 = 0u;
    objc_msgSend(v4, "leafAppLayouts", 0);
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
    if (v9)
    {
      v10 = v9;
      v11 = *(_QWORD *)v18;
      while (2)
      {
        for (i = 0; i != v10; ++i)
        {
          if (*(_QWORD *)v18 != v11)
            objc_enumerationMutation(v8);
          objc_msgSend(*(id *)(*((_QWORD *)&v17 + 1) + 8 * i), "allItems");
          v13 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v13, "firstObject");
          v14 = (void *)objc_claimAutoreleasedReturnValue();
          v15 = objc_msgSend(v4, "layoutRoleForItem:", v14);

          if ((-[SBSwitcherModifier isLayoutRoleBlurred:inAppLayout:](self->_rootModifier, "isLayoutRoleBlurred:inAppLayout:", v15, v4) & 1) != 0)
          {
            v7 = 1;
            goto LABEL_13;
          }
        }
        v10 = objc_msgSend(v8, "countByEnumeratingWithState:objects:count:", &v17, v21, 16);
        if (v10)
          continue;
        break;
      }
    }
    v7 = 0;
LABEL_13:

  }
  return v7;
}

- (id)_proposedAppLayoutForWindowDrag
{
  return (id)-[SBSwitcherModifier proposedAppLayoutForWindowDrag](self->_rootModifier, "proposedAppLayoutForWindowDrag");
}

- (BOOL)_areContinuousExposeStripsUnoccluded
{
  return -[SBSwitcherModifier isContinuousExposeStripVisible](self->_rootModifier, "isContinuousExposeStripVisible");
}

- (BOOL)_appLayoutRequiresLegacyRotationSupport:(id)a3
{
  NSMutableDictionary *liveContentOverlays;
  void *v4;
  void *v5;
  char v6;

  liveContentOverlays = self->_liveContentOverlays;
  objc_msgSend(a3, "anyLeafAppLayout");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](liveContentOverlays, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
    v6 = objc_msgSend(v5, "requiresLegacyRotationSupport");
  else
    v6 = 0;

  return v6;
}

uint64_t __60__SBFluidSwitcherViewController__updateAnimatableProperties__block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

uint64_t __60__SBFluidSwitcherViewController__updateAnimatableProperties__block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

void __60__SBFluidSwitcherViewController__updateAnimatableProperties__block_invoke_3(uint64_t a1)
{
  SBAnimatablePropertyChangedSwitcherModifierEvent *v1;
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    v1 = objc_alloc_init(SBAnimatablePropertyChangedSwitcherModifierEvent);
    objc_msgSend(WeakRetained, "_dispatchEventAndHandleAction:", v1);

  }
}

uint64_t __60__SBFluidSwitcherViewController__updateAnimatableProperties__block_invoke_4(uint64_t a1)
{
  return objc_msgSend(*(id *)(a1 + 32), "setValue:", *(double *)(a1 + 40));
}

- (void)_beginRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:(id)a3 killing:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  uint64_t v8;
  const __CFString *v9;
  void *v10;
  NSObject *v11;
  NSCountedSet *shadowPathDisplayLinkRequiringReasons;
  NSCountedSet *v13;
  NSCountedSet *v14;
  uint8_t buf[4];
  void *v16;
  uint64_t v17;

  v4 = a4;
  v17 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "userInterfaceIdiom");

  if ((v8 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    v9 = CFSTR("highlighting");
    if (v4)
      v9 = CFSTR("killing");
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ %p"), v9, v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    SBLogAppSwitcher();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v16 = v10;
      _os_log_impl(&dword_1D0540000, v11, OS_LOG_TYPE_DEFAULT, "Begin requiring shadow path display link for reason: %@", buf, 0xCu);
    }

    shadowPathDisplayLinkRequiringReasons = self->_shadowPathDisplayLinkRequiringReasons;
    if (!shadowPathDisplayLinkRequiringReasons)
    {
      v13 = (NSCountedSet *)objc_opt_new();
      v14 = self->_shadowPathDisplayLinkRequiringReasons;
      self->_shadowPathDisplayLinkRequiringReasons = v13;

      shadowPathDisplayLinkRequiringReasons = self->_shadowPathDisplayLinkRequiringReasons;
    }
    -[NSCountedSet addObject:](shadowPathDisplayLinkRequiringReasons, "addObject:", v10);
    -[SBFluidSwitcherViewController _updateShadowPathDisplayLink](self, "_updateShadowPathDisplayLink");

  }
}

- (void)_stopRequiringItemContainerShadowPathDisplayLinkForLeafAppLayout:(id)a3 killing:(BOOL)a4
{
  _BOOL4 v4;
  id v6;
  void *v7;
  uint64_t v8;
  const __CFString *v9;
  void *v10;
  NSObject *v11;
  uint8_t buf[4];
  void *v13;
  uint64_t v14;

  v4 = a4;
  v14 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "userInterfaceIdiom");

  if ((v8 & 0xFFFFFFFFFFFFFFFBLL) == 1)
  {
    v9 = CFSTR("highlighting");
    if (v4)
      v9 = CFSTR("killing");
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithFormat:", CFSTR("%@ %p"), v9, v6);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    SBLogAppSwitcher();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      v13 = v10;
      _os_log_impl(&dword_1D0540000, v11, OS_LOG_TYPE_DEFAULT, "End requiring shadow path display link for reason: %@", buf, 0xCu);
    }

    -[NSCountedSet removeObject:](self->_shadowPathDisplayLinkRequiringReasons, "removeObject:", v10);
    -[SBFluidSwitcherViewController _updateShadowPathDisplayLink](self, "_updateShadowPathDisplayLink");

  }
}

- (void)_updateShadowPathDisplayLink
{
  void *shadowPathDisplayLink;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  NSObject *v11;
  CADisplayLink *v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint8_t buf[8];
  _BYTE v18[128];
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  if (-[NSCountedSet count](self->_shadowPathDisplayLinkRequiringReasons, "count") && !self->_shadowPathDisplayLink)
  {
    SBLogAppSwitcher();
    v11 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1D0540000, v11, OS_LOG_TYPE_DEFAULT, "Creating shadow path display link", buf, 2u);
    }

    objc_msgSend(MEMORY[0x1E0CD2730], "displayLinkWithTarget:selector:", self, sel__shadowPathDisplayLinkDidUpdate_);
    v12 = (CADisplayLink *)objc_claimAutoreleasedReturnValue();
    shadowPathDisplayLink = self->_shadowPathDisplayLink;
    self->_shadowPathDisplayLink = v12;
    goto LABEL_18;
  }
  if (!-[NSCountedSet count](self->_shadowPathDisplayLinkRequiringReasons, "count") && self->_shadowPathDisplayLink)
  {
    -[SBFluidSwitcherViewController _resetItemContainerShadowPathDisplayLink](self, "_resetItemContainerShadowPathDisplayLink");
    v15 = 0u;
    v16 = 0u;
    v13 = 0u;
    v14 = 0u;
    -[NSMutableDictionary allKeys](self->_visibleUnderlayAccessoryViews, "allKeys", 0);
    shadowPathDisplayLink = (void *)objc_claimAutoreleasedReturnValue();
    v4 = objc_msgSend(shadowPathDisplayLink, "countByEnumeratingWithState:objects:count:", &v13, v18, 16);
    if (v4)
    {
      v5 = v4;
      v6 = *(_QWORD *)v14;
      do
      {
        for (i = 0; i != v5; ++i)
        {
          if (*(_QWORD *)v14 != v6)
            objc_enumerationMutation(shadowPathDisplayLink);
          v8 = *(_QWORD *)(*((_QWORD *)&v13 + 1) + 8 * i);
          -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
          v9 = (void *)objc_claimAutoreleasedReturnValue();
          v10 = objc_msgSend(v9, "indexOfObject:", v8);

          if (v10 != 0x7FFFFFFFFFFFFFFFLL)
            -[SBFluidSwitcherViewController _updateShadowPathForIndex:](self, "_updateShadowPathForIndex:", v10);
        }
        v5 = objc_msgSend(shadowPathDisplayLink, "countByEnumeratingWithState:objects:count:", &v13, v18, 16);
      }
      while (v5);
    }
LABEL_18:

  }
}

- (void)_shadowPathDisplayLinkDidUpdate:(id)a3
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  -[NSMutableDictionary allKeys](self->_visibleUnderlayAccessoryViews, "allKeys", a3, 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v13;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v13 != v7)
          objc_enumerationMutation(v4);
        v9 = *(_QWORD *)(*((_QWORD *)&v12 + 1) + 8 * v8);
        -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
        v10 = (void *)objc_claimAutoreleasedReturnValue();
        v11 = objc_msgSend(v10, "indexOfObject:", v9);

        if (v11 != 0x7FFFFFFFFFFFFFFFLL)
          -[SBFluidSwitcherViewController _updateShadowPathForIndex:](self, "_updateShadowPathForIndex:", v11);
        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v6);
  }

}

- (void)_updateShadowPathForIndex:(unint64_t)a3
{
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t i;
  void *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  SBSwitcherModifier *rootModifier;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  void *v33;
  void *v34;
  void *v35;
  id obj;
  unint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _BYTE v42[128];
  uint64_t v43;

  v43 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v37 = a3;
  objc_msgSend(v5, "objectAtIndex:", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  -[NSMutableDictionary objectForKey:](self->_visibleUnderlayAccessoryViews, "objectForKey:", v6);
  v35 = (void *)objc_claimAutoreleasedReturnValue();
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0u;
  objc_msgSend(v6, "leafAppLayouts");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v42, 16);
  if (v7)
  {
    v8 = v7;
    v9 = 0;
    v10 = *(_QWORD *)v39;
    v11 = *MEMORY[0x1E0C9D538];
    v12 = *(double *)(MEMORY[0x1E0C9D538] + 8);
    do
    {
      for (i = 0; i != v8; ++i)
      {
        if (*(_QWORD *)v39 != v10)
          objc_enumerationMutation(obj);
        v14 = *(void **)(*((_QWORD *)&v38 + 1) + 8 * i);
        -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", v14);
        v15 = (void *)objc_claimAutoreleasedReturnValue();
        if (v15)
        {
          objc_msgSend(v14, "itemForLayoutRole:", 1);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = objc_msgSend(v6, "layoutRoleForItem:", v16);

          objc_msgSend(v15, "effectivePageViewPresentationFrame");
          v19 = v18;
          v21 = v20;
          v23 = v22;
          v25 = v24;
          if (-[SBSwitcherModifier shouldTetherItemsAndAccessoriesInAppLayout:](self->_rootModifier, "shouldTetherItemsAndAccessoriesInAppLayout:", v6))
          {
            v21 = v12;
            v19 = v11;
          }
          -[SBSwitcherModifier frameForIndex:](self->_rootModifier, "frameForIndex:", v37);
          rootModifier = self->_rootModifier;
          SBRectWithSize();
          -[SBSwitcherModifier frameForLayoutRole:inAppLayout:withBounds:](rootModifier, "frameForLayoutRole:inAppLayout:withBounds:", v17, v6);
          v28 = v19 + v27;
          v30 = v21 + v29;
          objc_msgSend(v15, "effectivePageViewPresentationCornerRadius");
          if (v17 == 1)
            v32 = 5;
          else
            v32 = 10;
          objc_msgSend(MEMORY[0x1E0CEA390], "bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:", v32, v28, v30, v23, v25, v31, v31);
          v33 = (void *)objc_claimAutoreleasedReturnValue();
          v34 = v33;
          if (v9)
            objc_msgSend(v9, "appendPath:", v33);
          else
            v9 = v33;

        }
      }
      v8 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v38, v42, 16);
    }
    while (v8);
  }
  else
  {
    v9 = 0;
  }

  objc_msgSend(v35, "setShadowPath:", v9);
}

- (id)snapshotCache
{
  return self->_snapshotCache;
}

- (void)setShelfFocusedDisplayItems:(id)a3
{
  NSSet *v4;
  NSSet *shelfFocusedDisplayItems;
  SBShelfFocusedDisplayItemsChangedEvent *v6;
  id v7;

  v7 = a3;
  if ((BSEqualSets() & 1) == 0)
  {
    v4 = (NSSet *)objc_msgSend(v7, "copy");
    shelfFocusedDisplayItems = self->_shelfFocusedDisplayItems;
    self->_shelfFocusedDisplayItems = v4;

    v6 = objc_alloc_init(SBShelfFocusedDisplayItemsChangedEvent);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v6);

  }
}

double __68__SBFluidSwitcherViewController__updateSwitcherBackdropViewPresence__block_invoke()
{
  void *v0;
  uint64_t v1;
  double result;

  objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "sbf_animatedBlurRadiusGraphicsQuality");

  result = 0.3;
  if (v1 >= 41)
    return 0.5;
  return result;
}

uint64_t __63__SBFluidSwitcherViewController__updateSlideOverTonguePresence__block_invoke(uint64_t a1)
{
  objc_msgSend(*(id *)(a1 + 32), "_layoutSlideoverTonguesWithCompletion:", 0);
  return objc_msgSend(*(id *)(a1 + 32), "_ensureSubviewOrdering");
}

- (void)_updateBezelEffectsPortal
{
  int v3;
  void *v4;
  void *v5;
  uint64_t v6;
  void *v7;
  _UIPortalView *bezelEffectsPortalView;
  BSInvalidatable *v9;
  BSInvalidatable *bezelEffectsPortalObserverToken;
  SBSwitcherAccessoryLayoutElement *v11;
  SBSwitcherAccessoryLayoutElement *bezelEffectsLayoutElement;
  BSInvalidatable *v13;
  _UIPortalView *v14;
  SBSwitcherAccessoryLayoutElement *v15;
  _QWORD v16[4];
  id v17;
  id location;
  _QWORD v19[5];
  id v20;

  v3 = -[SBSwitcherModifier wantsBezelEffectsLayoutElement](self->_rootModifier, "wantsBezelEffectsLayoutElement");
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "hardwareButtonBezelEffectsCoordinator");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v3 && (objc_msgSend(v5, "dropletLaunchPortalSourceView"), (v6 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    v7 = (void *)v6;
    bezelEffectsPortalView = self->_bezelEffectsPortalView;
    if (!bezelEffectsPortalView)
    {
      v19[0] = MEMORY[0x1E0C809B0];
      v19[1] = 3221225472;
      v19[2] = __58__SBFluidSwitcherViewController__updateBezelEffectsPortal__block_invoke;
      v19[3] = &unk_1E8E9E820;
      v19[4] = self;
      v20 = v7;
      -[SBFluidSwitcherViewController _performWithFixedUpdateMode:usingBlock:](self, "_performWithFixedUpdateMode:usingBlock:", 2, v19);

      bezelEffectsPortalView = self->_bezelEffectsPortalView;
    }
    -[_UIPortalView setSourceView:](bezelEffectsPortalView, "setSourceView:", v7);
    if (!self->_bezelEffectsPortalObserverToken)
    {
      objc_initWeak(&location, self);
      v16[0] = MEMORY[0x1E0C809B0];
      v16[1] = 3221225472;
      v16[2] = __58__SBFluidSwitcherViewController__updateBezelEffectsPortal__block_invoke_2;
      v16[3] = &unk_1E8EA4F98;
      objc_copyWeak(&v17, &location);
      objc_msgSend(v5, "observePortalSourceWithHandler:", v16);
      v9 = (BSInvalidatable *)objc_claimAutoreleasedReturnValue();
      bezelEffectsPortalObserverToken = self->_bezelEffectsPortalObserverToken;
      self->_bezelEffectsPortalObserverToken = v9;

      objc_destroyWeak(&v17);
      objc_destroyWeak(&location);
    }
    if (!self->_bezelEffectsLayoutElement)
    {
      v11 = -[SBSwitcherAccessoryLayoutElement initWithType:]([SBSwitcherAccessoryLayoutElement alloc], "initWithType:", 8);
      bezelEffectsLayoutElement = self->_bezelEffectsLayoutElement;
      self->_bezelEffectsLayoutElement = v11;

    }
  }
  else
  {
    -[BSInvalidatable invalidate](self->_bezelEffectsPortalObserverToken, "invalidate");
    v13 = self->_bezelEffectsPortalObserverToken;
    self->_bezelEffectsPortalObserverToken = 0;

    -[_UIPortalView removeFromSuperview](self->_bezelEffectsPortalView, "removeFromSuperview");
    v14 = self->_bezelEffectsPortalView;
    self->_bezelEffectsPortalView = 0;

    v15 = self->_bezelEffectsLayoutElement;
    self->_bezelEffectsLayoutElement = 0;

    v7 = 0;
  }

}

uint64_t __58__SBFluidSwitcherViewController__updateBezelEffectsPortal__block_invoke(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  v2 = objc_msgSend(objc_alloc(MEMORY[0x1E0CEAE58]), "initWithSourceView:", *(_QWORD *)(a1 + 40));
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 1440);
  *(_QWORD *)(v3 + 1440) = v2;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1440), "setMatchesPosition:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1440), "setMatchesAlpha:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1440), "setMatchesTransform:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1440), "setAllowsBackdropGroups:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1440), "setHidesSourceView:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1440), "setAllowsHitTesting:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "addSubview:", *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1440));
  return objc_msgSend(*(id *)(a1 + 32), "_ensureSubviewOrdering");
}

void __58__SBFluidSwitcherViewController__updateBezelEffectsPortal__block_invoke_2(uint64_t a1)
{
  id WeakRetained;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  objc_msgSend(WeakRetained, "_updateBezelEffectsPortal");

}

uint64_t __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  objc_msgSend(*(id *)(a1 + 32), "frame");
  UIRectGetCenter();
  objc_msgSend(v2, "setCenter:");
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), "setBounds:", *(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72));
}

void __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_2(uint64_t a1)
{
  void *v2;
  __int128 v3;
  void *v4;
  _OWORD v5[3];

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setAlpha:", 0.8);
  v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
  v3 = *(_OWORD *)(a1 + 56);
  v5[0] = *(_OWORD *)(a1 + 40);
  v5[1] = v3;
  v5[2] = *(_OWORD *)(a1 + 72);
  objc_msgSend(v2, "setTransform:", v5);
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "layer");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "setCornerRadius:", *(double *)(a1 + 88));

}

uint64_t __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_3(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 32);
  if (result)
    return (*(uint64_t (**)(void))(result + 16))();
  return result;
}

uint64_t __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_4(uint64_t a1)
{
  void *v1;

  v1 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40);
  objc_msgSend(*(id *)(a1 + 32), "frame");
  UIRectGetCenter();
  return objc_msgSend(v1, "setCenter:");
}

void __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_5(uint64_t a1)
{
  void *v2;
  __int128 v3;
  void *v4;
  _OWORD v5[3];

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setAlpha:", 0.0);
  if (!*(_BYTE *)(a1 + 96))
  {
    v2 = *(void **)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40);
    v3 = *(_OWORD *)(a1 + 56);
    v5[0] = *(_OWORD *)(a1 + 40);
    v5[1] = v3;
    v5[2] = *(_OWORD *)(a1 + 72);
    objc_msgSend(v2, "setTransform:", v5);
    objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "layer");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "setCornerRadius:", *(double *)(a1 + 88));

  }
}

uint64_t __137__SBFluidSwitcherViewController__updateItemContainerBackdropPresenceForIndex_scale_rotation_cornerRadius_animationAttributes_completion___block_invoke_6(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t result;

  objc_msgSend(*(id *)(a1[4] + 1864), "removeObject:", *(_QWORD *)(*(_QWORD *)(a1[6] + 8) + 40));
  if ((a3 & 1) == 0)
  {
    v6 = *(void **)(a1[4] + 1856);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a1[7]);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "removeObjectForKey:", v7);

    objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "setHidden:", 1);
    objc_msgSend(*(id *)(*(_QWORD *)(a1[6] + 8) + 40), "removeFromSuperview");
    v8 = *(_QWORD *)(a1[6] + 8);
    v9 = *(void **)(v8 + 40);
    *(_QWORD *)(v8 + 40) = 0;

  }
  result = a1[5];
  if (result)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(result + 16))(result, a2, a3);
  return result;
}

- (void)_updateSnapshotCacheReloadingForActiveInterfaceOrientationChange
{
  void *v3;
  id v4;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  if (v3 && (*((_BYTE *)&self->_dataSourceRespondsTo + 2) & 2) != 0)
  {
    v4 = v3;
    -[SBAppSwitcherSnapshotImageCache setReloadsSnapshotsForActiveInterfaceOrientationChange:](self->_snapshotCache, "setReloadsSnapshotsForActiveInterfaceOrientationChange:", objc_msgSend(v3, "switcherContentControllerReloadsSnapshotsForActiveInterfaceOrientationChange:", self));
    v3 = v4;
  }

}

- (CGRect)_frameForItemWithRole:(int64_t)a3 inMainAppLayout:(id)a4 interfaceOrientation:(int64_t)a5
{
  id v8;
  void *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGRect result;

  v8 = a4;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "switcherContentController:frameForItemWithRole:inMainAppLayout:interfaceOrientation:", self, a3, v8, a5);
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v17 = v16;

  v18 = v11;
  v19 = v13;
  v20 = v15;
  v21 = v17;
  result.size.height = v21;
  result.size.width = v20;
  result.origin.y = v19;
  result.origin.x = v18;
  return result;
}

- (CGRect)_frameForFloatingAppLayoutInInterfaceOrientation:(int64_t)a3 floatingConfiguration:(int64_t)a4
{
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGRect result;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if ((*(_BYTE *)&self->_dataSourceRespondsTo & 0x80) != 0)
  {
    objc_msgSend(v7, "switcherContentController:frameForFloatingAppLayoutInInterfaceOrientation:floatingConfiguration:", self, a3, a4);
    v9 = v13;
    v10 = v14;
    v11 = v15;
    v12 = v16;
  }
  else
  {
    v9 = *MEMORY[0x1E0C9D628];
    v10 = *(double *)(MEMORY[0x1E0C9D628] + 8);
    v11 = *(double *)(MEMORY[0x1E0C9D628] + 16);
    v12 = *(double *)(MEMORY[0x1E0C9D628] + 24);
  }

  v17 = v9;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  result.size.height = v20;
  result.size.width = v19;
  result.origin.y = v18;
  result.origin.x = v17;
  return result;
}

- (CGRect)_frameForCenterItemInInterfaceOrientation:(int64_t)a3 centerConfiguration:(int64_t)a4
{
  void *v7;
  void *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  CGRect result;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 1) & 1) != 0)
  {
    objc_msgSend(v7, "switcherContentController:frameForCenterItemWithConfiguration:interfaceOrientation:", self, a4, a3);
    v9 = v13;
    v10 = v14;
    v11 = v15;
    v12 = v16;
  }
  else
  {
    v9 = *MEMORY[0x1E0C9D648];
    v10 = *(double *)(MEMORY[0x1E0C9D648] + 8);
    v11 = *(double *)(MEMORY[0x1E0C9D648] + 16);
    v12 = *(double *)(MEMORY[0x1E0C9D648] + 24);
  }

  v17 = v9;
  v18 = v10;
  v19 = v11;
  v20 = v12;
  result.size.height = v20;
  result.size.width = v19;
  result.origin.y = v18;
  result.origin.x = v17;
  return result;
}

- (id)_unadjustedLeafAppLayouts
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _BYTE v15[128];
  uint64_t v16;

  v16 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController _unadjustedAppLayouts](self, "_unadjustedAppLayouts");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = (void *)objc_opt_new();
  v11 = 0u;
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v4 = v2;
  v5 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
  if (v5)
  {
    v6 = v5;
    v7 = *(_QWORD *)v12;
    do
    {
      v8 = 0;
      do
      {
        if (*(_QWORD *)v12 != v7)
          objc_enumerationMutation(v4);
        objc_msgSend(*(id *)(*((_QWORD *)&v11 + 1) + 8 * v8), "leafAppLayouts", (_QWORD)v11);
        v9 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v3, "addObjectsFromArray:", v9);

        ++v8;
      }
      while (v6 != v8);
      v6 = objc_msgSend(v4, "countByEnumeratingWithState:objects:count:", &v11, v15, 16);
    }
    while (v6);
  }

  return v3;
}

- (void)_updateContinuousExposeIdentifiersTransitioningFromAppLayout:(id)a3 toAppLayout:(id)a4 animated:(BOOL)a5
{
  _BOOL8 v5;
  id v8;
  NSArray *continuousExposeIdentifiersInSwitcher;
  NSArray *v10;
  NSArray *v11;
  NSArray *continuousExposeIdentifiersInStrip;
  NSArray *v13;
  NSArray *v14;
  NSArray *v15;
  NSArray *v16;
  NSArray *v17;
  NSDictionary *appLayoutsForContinuousExposeIdentifiers;
  SBContinuousExposeIdentifiersChangedModifierEvent *v19;
  void *v20;
  SBContinuousExposeIdentifiersChangedModifierEvent *v21;
  void *v22;
  void *v23;
  id v24;

  v5 = a5;
  v24 = a3;
  v8 = a4;
  if (-[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled"))
  {
    continuousExposeIdentifiersInSwitcher = self->_continuousExposeIdentifiersInSwitcher;
    v10 = (NSArray *)MEMORY[0x1E0C9AA60];
    if (!continuousExposeIdentifiersInSwitcher)
      continuousExposeIdentifiersInSwitcher = (NSArray *)MEMORY[0x1E0C9AA60];
    v11 = continuousExposeIdentifiersInSwitcher;
    continuousExposeIdentifiersInStrip = self->_continuousExposeIdentifiersInStrip;
    if (!continuousExposeIdentifiersInStrip)
      continuousExposeIdentifiersInStrip = v10;
    v13 = continuousExposeIdentifiersInStrip;
    -[SBSwitcherModifier adjustedContinuousExposeIdentifiersInStripFromPreviousIdentifiersInStrip:](self->_rootModifier, "adjustedContinuousExposeIdentifiersInStripFromPreviousIdentifiersInStrip:", v13);
    v14 = (NSArray *)objc_claimAutoreleasedReturnValue();
    v15 = self->_continuousExposeIdentifiersInStrip;
    self->_continuousExposeIdentifiersInStrip = v14;

    -[SBSwitcherModifier adjustedContinuousExposeIdentifiersInSwitcherFromPreviousIdentifiersInSwitcher:identifiersInStrip:](self->_rootModifier, "adjustedContinuousExposeIdentifiersInSwitcherFromPreviousIdentifiersInSwitcher:identifiersInStrip:", v11, self->_continuousExposeIdentifiersInStrip);
    v16 = (NSArray *)objc_claimAutoreleasedReturnValue();
    v17 = self->_continuousExposeIdentifiersInSwitcher;
    self->_continuousExposeIdentifiersInSwitcher = v16;

    -[SBFluidSwitcherViewController newContinuousExposeIdentifiersGenerationCount](self, "newContinuousExposeIdentifiersGenerationCount");
    appLayoutsForContinuousExposeIdentifiers = self->_appLayoutsForContinuousExposeIdentifiers;
    self->_appLayoutsForContinuousExposeIdentifiers = 0;

    v19 = [SBContinuousExposeIdentifiersChangedModifierEvent alloc];
    -[SBFluidSwitcherLayoutContext activeGesture](self->_layoutContext, "activeGesture");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    if (v20)
    {
      v21 = -[SBContinuousExposeIdentifiersChangedModifierEvent initWithPreviousContinuousExposeIdentifiersInSwitcher:previousContinuousExposeIdentifiersInStrip:transitioningFromAppLayout:transitioningToAppLayout:animated:gestureInitiated:](v19, "initWithPreviousContinuousExposeIdentifiersInSwitcher:previousContinuousExposeIdentifiersInStrip:transitioningFromAppLayout:transitioningToAppLayout:animated:gestureInitiated:", v11, v13, v24, v8, v5, 1);
    }
    else
    {
      -[SBFluidSwitcherLayoutContext activeTransitionContext](self->_layoutContext, "activeTransitionContext");
      v22 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v22, "request");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      v21 = -[SBContinuousExposeIdentifiersChangedModifierEvent initWithPreviousContinuousExposeIdentifiersInSwitcher:previousContinuousExposeIdentifiersInStrip:transitioningFromAppLayout:transitioningToAppLayout:animated:gestureInitiated:](v19, "initWithPreviousContinuousExposeIdentifiersInSwitcher:previousContinuousExposeIdentifiersInStrip:transitioningFromAppLayout:transitioningToAppLayout:animated:gestureInitiated:", v11, v13, v24, v8, v5, objc_msgSend(v23, "source") == 11);

    }
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v21);

  }
}

- (void)_updateReopenClosedWindowsButtonText
{
  void *v3;
  int64_t v4;
  void *v5;
  void *v6;
  const __CFString *v7;
  void *v8;
  void *v9;

  if (self->_reopenClosedWindowsButton)
  {
    -[SBSwitcherModifier appExposeAccessoryButtonsBundleIdentifier](self->_rootModifier, "appExposeAccessoryButtonsBundleIdentifier");
    v3 = (void *)objc_claimAutoreleasedReturnValue();
    if (v3)
    {
      v9 = v3;
      v4 = -[SBFluidSwitcherViewController numberOfHiddenAppLayoutsForBundleIdentifier:](self, "numberOfHiddenAppLayoutsForBundleIdentifier:", v3);
      objc_msgSend(MEMORY[0x1E0CB34D0], "mainBundle");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      v6 = v5;
      if (v4 == 1)
        v7 = CFSTR("REOPEN_CLOSED_WINDOW");
      else
        v7 = CFSTR("REOPEN_CLOSED_WINDOWS");
      objc_msgSend(v5, "localizedStringForKey:value:table:", v7, &stru_1E8EC7EC0, CFSTR("SpringBoard"));
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      -[SBFluidSwitcherTitledButton setTitle:](self->_reopenClosedWindowsButton, "setTitle:", v8);
      v3 = v9;
    }

  }
}

- (void)_updateAppExposeAccessoryButtonsExtendedTouchRegions
{
  SBFluidSwitcherTitledButton *reopenClosedWindowsButton;
  double v4;
  double v5;
  SBFluidSwitcherButton *plusButton;
  id *v7;
  uint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  double v12;
  double v13;

  reopenClosedWindowsButton = self->_reopenClosedWindowsButton;
  v4 = 17.0;
  v5 = 17.0;
  if (reopenClosedWindowsButton)
  {
    -[SBFluidSwitcherTitledButton alpha](reopenClosedWindowsButton, "alpha");
    if (BSFloatIsZero())
      v5 = 17.0;
    else
      v5 = 8.0;
  }
  plusButton = self->_plusButton;
  v7 = (id *)MEMORY[0x1E0CEB258];
  if (plusButton)
  {
    -[SBFluidSwitcherButton alpha](plusButton, "alpha");
    v4 = BSFloatIsZero() ? 17.0 : 8.0;
    if (self->_plusButton)
    {
      v8 = objc_msgSend(*v7, "userInterfaceLayoutDirection");
      if (v8 == 1)
        v9 = v5;
      else
        v9 = 17.0;
      if (v8 == 1)
        v10 = 17.0;
      else
        v10 = v5;
      -[SBFluidSwitcherButton setExtendedEdgeInsets:](self->_plusButton, "setExtendedEdgeInsets:", -17.0, -v10, -17.0, -v9);
    }
  }
  if (self->_reopenClosedWindowsButton)
  {
    v11 = objc_msgSend(*v7, "userInterfaceLayoutDirection");
    v12 = 17.0;
    if (v11 == 1)
      v13 = v4;
    else
      v13 = 17.0;
    if (v11 != 1)
      v12 = v4;
    -[SBFluidSwitcherButton setExtendedEdgeInsets:](self->_reopenClosedWindowsButton, "setExtendedEdgeInsets:", -17.0, -v13, -17.0, -v12);
  }
}

uint64_t __75__SBFluidSwitcherViewController__updatePlusButtonStyleWithMode_completion___block_invoke(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1920), "setButtonStyle:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "plusButtonStyle"));
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1920), "setOverrideUserInterfaceStyle:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "appExposeAccessoryButtonsOverrideUserInterfaceStyle"));
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 1920);
  objc_msgSend(*(id *)(v2 + 1936), "plusButtonAlpha");
  return objc_msgSend(v3, "setAlpha:");
}

void __85__SBFluidSwitcherViewController__updateReopenClosedWindowsButtonWithMode_completion___block_invoke(uint64_t a1, void *a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void (**v6)(id, const __CFString *);
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD v21[6];
  _QWORD v22[5];

  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(void **)(v3 + 1936);
  v5 = *(_QWORD *)(v3 + 1416);
  v6 = a2;
  objc_msgSend(v4, "animationAttributesForLayoutElement:", v5);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "opacitySettings");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  v9 = (void *)MEMORY[0x1E0CEABB0];
  v10 = MEMORY[0x1E0C809B0];
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __85__SBFluidSwitcherViewController__updateReopenClosedWindowsButtonWithMode_completion___block_invoke_2;
  v22[3] = &unk_1E8E9DED8;
  v11 = *(_QWORD *)(a1 + 40);
  v22[4] = *(_QWORD *)(a1 + 32);
  v6[2](v6, CFSTR("reopen alpha"));
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v9, "sb_animateWithSettings:mode:animations:completion:", v8, v11, v22, v12);

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "reopenClosedWindowsButtonScale");
  v14 = v13;
  v15 = (void *)MEMORY[0x1E0CEABB0];
  objc_msgSend(*(id *)(a1 + 32), "switcherSettings");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v16, "animationSettings");
  v17 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v17, "reopenButtonScaleSettings");
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v21[0] = v10;
  v21[1] = 3221225472;
  v21[2] = __85__SBFluidSwitcherViewController__updateReopenClosedWindowsButtonWithMode_completion___block_invoke_3;
  v21[3] = &unk_1E8E9DE88;
  v19 = *(_QWORD *)(a1 + 40);
  v21[4] = *(_QWORD *)(a1 + 32);
  v21[5] = v14;
  v6[2](v6, CFSTR("reopen button scale"));
  v20 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v15, "sb_animateWithSettings:mode:animations:completion:", v18, v19, v21, v20);
}

uint64_t __85__SBFluidSwitcherViewController__updateReopenClosedWindowsButtonWithMode_completion___block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1928), "setOverrideUserInterfaceStyle:", objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1936), "appExposeAccessoryButtonsOverrideUserInterfaceStyle"));
  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(void **)(v2 + 1928);
  objc_msgSend(*(id *)(v2 + 1936), "reopenClosedWindowsButtonAlpha");
  return objc_msgSend(v3, "setAlpha:");
}

uint64_t __85__SBFluidSwitcherViewController__updateReopenClosedWindowsButtonWithMode_completion___block_invoke_3(uint64_t a1)
{
  void *v1;
  CGAffineTransform v3;

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 1928);
  CGAffineTransformMakeScale(&v3, *(CGFloat *)(a1 + 40), *(CGFloat *)(a1 + 40));
  return objc_msgSend(v1, "setTransform:", &v3);
}

- (void)_updateTitleItemsUserInterfaceStyle
{
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  -[SBFluidSwitcherViewController traitCollection](self, "traitCollection");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "userInterfaceStyle");

  v12 = 0u;
  v13 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[NSMutableDictionary allValues](self->_appLayoutToTitleItemController, "allValues", 0);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v11;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v11 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v10 + 1) + 8 * v9++), "setUserInterfaceStyle:", v4);
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    }
    while (v7);
  }

}

- (void)_handlePlusButtonTapped:(id)a3
{
  id WeakRetained;
  void *v5;
  id v6;

  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  if ((*((_BYTE *)&self->_delegateRespondsTo + 1) & 0x80) != 0)
  {
    v6 = WeakRetained;
    -[SBSwitcherModifier appExposeAccessoryButtonsBundleIdentifier](self->_rootModifier, "appExposeAccessoryButtonsBundleIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "switcherContentController:requestNewWindowForBundleIdentifier:", self, v5);

    WeakRetained = v6;
  }

}

- (void)handleReopenClosedWindowsButtonTapped:(id)a3
{
  id WeakRetained;
  void *v5;
  uint64_t v6;
  void (**v7)(_QWORD);
  void *v8;
  _QWORD v9[4];
  void (**v10)(_QWORD);
  _QWORD v11[4];
  id v12;
  SBFluidSwitcherViewController *v13;

  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v5 = WeakRetained;
  if ((*((_BYTE *)&self->_delegateRespondsTo + 2) & 0x40) != 0)
  {
    v6 = MEMORY[0x1E0C809B0];
    v11[0] = MEMORY[0x1E0C809B0];
    v11[1] = 3221225472;
    v11[2] = __71__SBFluidSwitcherViewController_handleReopenClosedWindowsButtonTapped___block_invoke;
    v11[3] = &unk_1E8E9E820;
    v12 = WeakRetained;
    v13 = self;
    v7 = (void (**)(_QWORD))MEMORY[0x1D17E5550](v11);
    -[SBSwitcherModifier appLayoutToScrollToBeforeReopeningClosedWindows](self->_rootModifier, "appLayoutToScrollToBeforeReopeningClosedWindows");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    if (v8)
    {
      v9[0] = v6;
      v9[1] = 3221225472;
      v9[2] = __71__SBFluidSwitcherViewController_handleReopenClosedWindowsButtonTapped___block_invoke_2;
      v9[3] = &unk_1E8E9F1C0;
      v10 = v7;
      -[SBFluidSwitcherViewController _scrollToAppLayout:animated:alignment:completion:](self, "_scrollToAppLayout:animated:alignment:completion:", v8, 1, 0, v9);

    }
    else
    {
      v7[2](v7);
    }

  }
}

void __71__SBFluidSwitcherViewController_handleReopenClosedWindowsButtonTapped___block_invoke(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  id v3;

  v1 = *(void **)(a1 + 32);
  v2 = *(_QWORD *)(a1 + 40);
  objc_msgSend(*(id *)(v2 + 1936), "appExposeAccessoryButtonsBundleIdentifier");
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "switcherContentController:reopenHiddenAppLayoutsWithBundleIdentifier:", v2, v3);

}

uint64_t __71__SBFluidSwitcherViewController_handleReopenClosedWindowsButtonTapped___block_invoke_2(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __65__SBFluidSwitcherViewController__updateHiddenAppLayoutsInShelves__block_invoke(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

uint64_t __65__SBFluidSwitcherViewController__updateHiddenAppLayoutsInShelves__block_invoke_2(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(a1 + 32), "containsObject:", a2) ^ 1;
}

uint64_t __50__SBFluidSwitcherViewController__updateBounceIcon__block_invoke(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 2048);
  UIRectGetCenter();
  v4 = v3;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "bounds");
  return objc_msgSend(v2, "setCenter:", v4, v5 + *(double *)(a1 + 64) * -0.5 + -20.0);
}

void __50__SBFluidSwitcherViewController__updateBounceIcon__block_invoke_2(uint64_t a1)
{
  _QWORD *WeakRetained;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD v10[4];
  id v11;
  uint64_t v12;
  _QWORD v13[4];
  _QWORD *v14;
  __int128 v15;
  __int128 v16;

  WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained && WeakRetained[257] == *(_QWORD *)(a1 + 48))
  {
    v4 = (void *)MEMORY[0x1E0CEABB0];
    v5 = *(_QWORD *)(a1 + 32);
    v6 = MEMORY[0x1E0C809B0];
    v13[0] = MEMORY[0x1E0C809B0];
    v13[1] = 3221225472;
    v13[2] = __50__SBFluidSwitcherViewController__updateBounceIcon__block_invoke_3;
    v13[3] = &unk_1E8EA25E0;
    v14 = WeakRetained;
    v7 = *(_OWORD *)(a1 + 72);
    v15 = *(_OWORD *)(a1 + 56);
    v16 = v7;
    v10[0] = v6;
    v10[1] = 3221225472;
    v10[2] = __50__SBFluidSwitcherViewController__updateBounceIcon__block_invoke_4;
    v10[3] = &unk_1E8E9E5D8;
    v8 = v14;
    v9 = *(_QWORD *)(a1 + 48);
    v11 = v8;
    v12 = v9;
    objc_msgSend(v4, "sb_animateWithSettings:mode:animations:completion:", v5, 3, v13, v10);

  }
}

uint64_t __50__SBFluidSwitcherViewController__updateBounceIcon__block_invoke_3(uint64_t a1)
{
  void *v2;
  double v3;
  double v4;
  double v5;

  v2 = *(void **)(*(_QWORD *)(a1 + 32) + 2048);
  UIRectGetCenter();
  v4 = v3;
  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1808), "bounds");
  return objc_msgSend(v2, "setCenter:", v4, *(double *)(a1 + 64) + v5);
}

void __50__SBFluidSwitcherViewController__updateBounceIcon__block_invoke_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;

  v1 = *(_QWORD *)(a1 + 32);
  if (v1)
  {
    if (*(_QWORD *)(v1 + 2056) == *(_QWORD *)(a1 + 40))
    {
      objc_msgSend(*(id *)(v1 + 2048), "removeFromSuperview");
      v3 = *(_QWORD *)(a1 + 32);
      v4 = *(void **)(v3 + 2048);
      *(_QWORD *)(v3 + 2048) = 0;

    }
  }
}

- (BOOL)_controlsWallpaper
{
  id WeakRetained;
  void *v4;
  char v5;

  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  v4 = WeakRetained;
  if ((*((_BYTE *)&self->_delegateRespondsTo + 1) & 4) != 0)
    v5 = objc_msgSend(WeakRetained, "switcherContentControllerControlsWallpaper:", self);
  else
    v5 = 1;

  return v5;
}

- (void)_updateCornerRadiiiAndMaximizedState
{
  BOOL v3;
  NSMutableDictionary *liveContentOverlays;
  _QWORD v5[5];
  BOOL v6;

  v3 = -[SBFluidSwitcherViewController isChamoisWindowingUIEnabled](self, "isChamoisWindowingUIEnabled");
  liveContentOverlays = self->_liveContentOverlays;
  v5[0] = MEMORY[0x1E0C809B0];
  v5[1] = 3221225472;
  v5[2] = __69__SBFluidSwitcherViewController__updateCornerRadiiiAndMaximizedState__block_invoke;
  v5[3] = &unk_1E8EA50B0;
  v5[4] = self;
  v6 = v3;
  -[NSMutableDictionary enumerateKeysAndObjectsUsingBlock:](liveContentOverlays, "enumerateKeysAndObjectsUsingBlock:", v5);
}

void __69__SBFluidSwitcherViewController__updateCornerRadiiiAndMaximizedState__block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  int v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  id v21;

  v5 = a3;
  v6 = a2;
  objc_msgSend(v6, "allItems");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "firstObject");
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(*(id *)(*(_QWORD *)(a1 + 32) + 1296), "objectForKey:", v6);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  v10 = *(void **)(a1 + 32);
  v21 = 0;
  v11 = objc_msgSend(v10, "appLayoutContainsAnUnoccludedMaximizedDisplayItem:ignoreOcclusion:displayItem:", v9, 1, &v21);
  v12 = v21;
  v13 = v12;
  if (v11)
    v14 = objc_msgSend(v12, "isEqual:", v8);
  else
    v14 = 0;
  objc_msgSend(v5, "setMaximized:", v14);
  if (*(_BYTE *)(a1 + 40))
  {
    objc_msgSend(*(id *)(a1 + 32), "chamoisLayoutAttributes");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "stageCornerRadii");
    v17 = v16;

    v18 = v17;
    v19 = v17;
    v20 = v17;
  }
  else
  {
    v17 = *MEMORY[0x1E0CEBAC0];
    v18 = *(double *)(MEMORY[0x1E0CEBAC0] + 8);
    v19 = *(double *)(MEMORY[0x1E0CEBAC0] + 16);
    v20 = *(double *)(MEMORY[0x1E0CEBAC0] + 24);
  }
  objc_msgSend(v5, "setCornerRadii:", v17, v18, v19, v20);

}

- (void)_updateHitTestBlockingView
{
  -[UIView setHidden:](self->_hitTestBlockerView, "setHidden:", -[SBSwitcherModifier isHitTestBlockingViewVisible](self->_rootModifier, "isHitTestBlockingViewVisible") ^ 1);
}

- (id)_activeTransientOverlayPresentedAppLayout
{
  void *v3;
  void *v4;
  void *v5;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((*(_BYTE *)&self->_dataSourceRespondsTo & 4) != 0)
  {
    objc_msgSend(v3, "activeTransientOverlayPresentedAppLayoutForSwitcherContentController:", self);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

- (BOOL)_isLayoutStateSwitcher:(id)a3 allowTransitions:(BOOL)a4
{
  uint64_t v6;
  BOOL v7;
  void *v8;

  v6 = objc_msgSend(a3, "unlockedEnvironmentMode");
  v7 = v6 == 2;
  if (v6 == 2 && !a4)
  {
    -[SBFluidSwitcherLayoutContext activeTransitionContext](self->_layoutContext, "activeTransitionContext");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v8 == 0;

  }
  return v7;
}

- (void)_handleDismissTapGesture:(id)a3
{
  SBTapOutsideToDismissSwitcherModifierEvent *v4;

  if (objc_msgSend(a3, "state") == 3)
  {
    v4 = objc_alloc_init(SBTapOutsideToDismissSwitcherModifierEvent);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

  }
}

- (BOOL)_shouldInterruptPresentationAndDismiss
{
  void *v2;
  BOOL v3;

  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "count") == 0;

  return v3;
}

- (void)_setupMorphAnimatorIfNeededForEntity:(id)a3 pipCoordinator:(id)a4 appLayout:(id)a5 appLayoutBoundingBox:(CGRect)a6 uniqueID:(id)a7 direction:(int64_t)a8 gestureInitiated:(BOOL)a9
{
  double height;
  double width;
  double y;
  double x;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  void *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  int64_t v44;
  uint64_t v45;
  void *v46;
  int64_t v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  SEL v52;
  void *v53;
  int64_t v54;
  _BOOL4 v55;
  id v56;
  id v57;
  id v58;
  _QWORD v59[4];
  id v60;

  v55 = a9;
  height = a6.size.height;
  width = a6.size.width;
  y = a6.origin.y;
  x = a6.origin.x;
  v19 = a3;
  v20 = a4;
  v21 = a5;
  v22 = a7;
  objc_msgSend(v21, "allItems");
  v23 = (void *)objc_claimAutoreleasedReturnValue();
  v59[0] = MEMORY[0x1E0C809B0];
  v59[1] = 3221225472;
  v59[2] = __152__SBFluidSwitcherViewController__setupMorphAnimatorIfNeededForEntity_pipCoordinator_appLayout_appLayoutBoundingBox_uniqueID_direction_gestureInitiated___block_invoke;
  v59[3] = &unk_1E8E9DF50;
  v58 = v19;
  v60 = v58;
  objc_msgSend(v23, "bs_firstObjectPassingTest:", v59);
  v24 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v21, "leafAppLayoutForItem:", v24);
  v25 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController visibleItemContainers](self, "visibleItemContainers");
  v26 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v26, "objectForKey:", v25);
  v27 = (void *)objc_claimAutoreleasedReturnValue();

  if (v27)
  {
    v54 = a8;
    v57 = v22;
    objc_msgSend(v58, "application");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "processState");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    v30 = objc_msgSend(v29, "pid");

    -[SBFluidSwitcherViewController pipViewMorphAnimator](self, "pipViewMorphAnimator");
    v31 = (void *)objc_claimAutoreleasedReturnValue();

    v56 = v20;
    if (v31 || !(_DWORD)v30)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v34, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 9119, CFSTR("Morph animator already running for switcher view controller, can't assign new one."));
    }
    else
    {
      objc_msgSend(v58, "objectForActivationSetting:", 57);
      v32 = (void *)objc_claimAutoreleasedReturnValue();
      v33 = objc_msgSend(v32, "integerValue");

      objc_msgSend(v20, "controllerForType:", v33);
      v34 = (void *)objc_claimAutoreleasedReturnValue();
      v35 = objc_opt_class();
      v36 = v58;
      v52 = a2;
      if (v35)
      {
        if ((objc_opt_isKindOfClass() & 1) != 0)
          v37 = v36;
        else
          v37 = 0;
      }
      else
      {
        v37 = 0;
      }
      v38 = v37;

      v53 = v38;
      objc_msgSend(v38, "sceneHandle");
      v39 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v39, "persistenceIdentifier");
      v40 = objc_claimAutoreleasedReturnValue();

      v41 = (void *)v40;
      objc_msgSend(v34, "pictureInPictureMorphAnimatorControllerForProcessIdentifier:scenePersistenceIdentifier:", v30, v40);
      v42 = objc_claimAutoreleasedReturnValue();
      v43 = (void *)v42;
      v44 = v54;
      if (v54)
      {
        if (!v42)
        {
          objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          v50 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v50, "handleFailureInMethod:object:file:lineNumber:description:", v52, self, CFSTR("SBFluidSwitcherViewController.m"), 9093, CFSTR("An SBPIPMorphAnimatorController for pid %ui was not found."), v30);

          v44 = v54;
        }
        objc_msgSend(v43, "setAppLayout:", v21);
        objc_msgSend(v43, "setLayoutRole:", objc_msgSend(v21, "layoutRoleForItem:", v24));
        objc_msgSend(v43, "setAppLayoutBoundingBox:", x, y, width, height);
      }
      else
      {
        if (v42)
        {
          objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
          v51 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v51, "handleFailureInMethod:object:file:lineNumber:description:", v52, self, CFSTR("SBFluidSwitcherViewController.m"), 9087, CFSTR("An SBPIPMorphAnimatorController for pid %ui is already running, can't create new one."), v30);

          v44 = 0;
        }
        -[SBFluidSwitcherViewController _updateFloatingDockBehaviorAssertion](self, "_updateFloatingDockBehaviorAssertion");
        objc_msgSend(v34, "createAndRegisterPictureInPictureMorphAnimatorControllerWithTargetProcessIdentifier:uuid:scenePersistenceIdentifier:appLayout:layoutRole:appLayoutBoundingBox:gestureInitiated:direction:", v30, v57, v41, v21, objc_msgSend(v21, "layoutRoleForItem:", v24), v55, x, y, width, height, 0);
        v45 = objc_claimAutoreleasedReturnValue();

        v43 = (void *)v45;
      }
      objc_msgSend(v43, "viewMorphAnimator");
      v46 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBFluidSwitcherViewController setPipViewMorphAnimator:](self, "setPipViewMorphAnimator:", v46);
      if (v44)
      {
        objc_msgSend(v46, "setFromOrientation:", -[SBFluidSwitcherViewController homeScreenInterfaceOrientation](self, "homeScreenInterfaceOrientation"));
        v47 = -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation");
      }
      else
      {
        objc_msgSend(v46, "setFromOrientation:", -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation"));
        v47 = -[SBFluidSwitcherViewController homeScreenInterfaceOrientation](self, "homeScreenInterfaceOrientation");
      }
      objc_msgSend(v46, "setToOrientation:", v47);
      objc_msgSend(v46, "setAutomaticallyStartSourceAnimations:", 0);
      -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v21);
      v48 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v46, "setSourceView:", v48);
      if (v44)
      {
        objc_msgSend(v46, "targetView");
        v49 = (void *)objc_claimAutoreleasedReturnValue();

        if (v49)
          objc_msgSend(v46, "startTargetAnimations:", 1);
      }
      objc_msgSend(v46, "noteSourceAnimationsWillStart:", 15);

    }
    v20 = v56;
    v22 = v57;
  }

}

uint64_t __152__SBFluidSwitcherViewController__setupMorphAnimatorIfNeededForEntity_pipCoordinator_appLayout_appLayoutBoundingBox_uniqueID_direction_gestureInitiated___block_invoke(uint64_t a1, void *a2)
{
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;

  objc_msgSend(a2, "uniqueIdentifier");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(*(id *)(a1 + 32), "sceneHandle");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "sceneIdentifier");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v3, "isEqualToString:", v5);

  return v6;
}

- (void)_setupPIPMorphingIfNeededForTransitionContext:(id)a3 response:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  $7708D0751127115E4838D42B16D0F436 dataSourceRespondsTo;
  int v13;
  char v14;
  int v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _BOOL4 v21;
  id v22;
  void *v23;
  void *v24;
  void *v25;
  SBFluidSwitcherViewController *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t i;
  void *v33;
  void *v34;
  SBFluidSwitcherViewController *v35;
  void *v36;
  _BOOL4 v37;
  _BOOL4 v38;
  void *v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  id v47;
  _BYTE v48[128];
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  v6 = a3;
  v7 = a4;
  objc_msgSend(v6, "request");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "uniqueID");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  v11 = objc_msgSend(v8, "source");
  dataSourceRespondsTo = self->_dataSourceRespondsTo;
  if ((*(_WORD *)&dataSourceRespondsTo & 0x800) != 0)
  {
    v13 = objc_msgSend(v10, "switcherContentController:shouldMorphToPIPForTransitionContext:", self, v6);
    v14 = v13;
    if ((*((_BYTE *)&self->_dataSourceRespondsTo + 1) & 0x10) != 0)
    {
      v15 = objc_msgSend(v10, "switcherContentController:shouldMorphFromPIPForTransitionContext:", self, v6);
      if ((v14 & 1) == 0)
      {
        if (!v15)
          goto LABEL_31;
        goto LABEL_17;
      }
    }
    else if (!v13)
    {
      goto LABEL_31;
    }
    objc_msgSend(v8, "transientOverlayContext");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    v40 = v16;
    if (v16 && (v17 = v16, objc_msgSend(v16, "transitionType") == 1))
    {
      objc_msgSend(v17, "transientOverlay");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      -[SBFluidSwitcherViewController _appLayoutForWorkspaceTransientOverlay:](self, "_appLayoutForWorkspaceTransientOverlay:", v18);
      v19 = objc_claimAutoreleasedReturnValue();
    }
    else
    {
      objc_msgSend(v6, "previousLayoutState");
      v18 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v18, "appLayout");
      v19 = objc_claimAutoreleasedReturnValue();
    }
    v20 = (void *)v19;

    v47 = 0;
    v21 = +[SBAutoPIPWorkspaceTransaction shouldAutoPIPEnteringBackgroundForRequest:foundEntity:transitionStyle:](SBAutoPIPWorkspaceTransaction, "shouldAutoPIPEnteringBackgroundForRequest:foundEntity:transitionStyle:", v8, &v47, 0);
    v22 = v47;
    v23 = v22;
    if (v21 && v22)
    {
      v37 = v11 == 11;
      objc_msgSend(v8, "workspace");
      v24 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v24, "pipCoordinator");
      v25 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = v7;
      objc_msgSend(v7, "appLayoutBoundingBox");
      v26 = self;
      v27 = v9;
      -[SBFluidSwitcherViewController _setupMorphAnimatorIfNeededForEntity:pipCoordinator:appLayout:appLayoutBoundingBox:uniqueID:direction:gestureInitiated:](v26, "_setupMorphAnimatorIfNeededForEntity:pipCoordinator:appLayout:appLayoutBoundingBox:uniqueID:direction:gestureInitiated:", v23, v25, v20, v9, 0, v37);

      v28 = v40;
LABEL_28:

      v7 = v39;
      v9 = v27;
    }
    else
    {
      v28 = v40;
    }

LABEL_30:
    goto LABEL_31;
  }
  if ((*(_WORD *)&dataSourceRespondsTo & 0x1000) != 0
    && (objc_msgSend(v10, "switcherContentController:shouldMorphFromPIPForTransitionContext:", self, v6) & 1) != 0)
  {
LABEL_17:
    v41 = v11;
    v45 = 0u;
    v46 = 0u;
    v43 = 0u;
    v44 = 0u;
    objc_msgSend(v6, "applicationSceneEntities");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    v29 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v43, v48, 16);
    if (v29)
    {
      v30 = v29;
      v39 = v7;
      v31 = *(_QWORD *)v44;
      while (2)
      {
        for (i = 0; i != v30; ++i)
        {
          if (*(_QWORD *)v44 != v31)
            objc_enumerationMutation(v20);
          v33 = *(void **)(*((_QWORD *)&v43 + 1) + 8 * i);
          if (objc_msgSend(v33, "BOOLForActivationSetting:", 56))
          {
            v38 = v41 == 11;
            objc_msgSend(v6, "layoutState");
            v34 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v34, "appLayout");
            v42 = objc_claimAutoreleasedReturnValue();

            objc_msgSend(v8, "workspace");
            v23 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v23, "pipCoordinator");
            v24 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v39, "appLayoutBoundingBox");
            v35 = self;
            v36 = v33;
            v28 = (void *)v42;
            v27 = v9;
            -[SBFluidSwitcherViewController _setupMorphAnimatorIfNeededForEntity:pipCoordinator:appLayout:appLayoutBoundingBox:uniqueID:direction:gestureInitiated:](v35, "_setupMorphAnimatorIfNeededForEntity:pipCoordinator:appLayout:appLayoutBoundingBox:uniqueID:direction:gestureInitiated:", v36, v24, v42, v9, 1, v38);
            goto LABEL_28;
          }
        }
        v30 = objc_msgSend(v20, "countByEnumeratingWithState:objects:count:", &v43, v48, 16);
        if (v30)
          continue;
        break;
      }
      v7 = v39;
    }
    goto LABEL_30;
  }
LABEL_31:

}

void __63__SBFluidSwitcherViewController__dispatchEventAndHandleAction___block_invoke(uint64_t a1, void *a2, _BYTE *a3)
{
  id v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  id v10;

  v5 = a2;
  v6 = objc_opt_class();
  v10 = v5;
  if (v6)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v7 = v10;
    else
      v7 = 0;
  }
  else
  {
    v7 = 0;
  }
  v8 = v7;

  v9 = objc_msgSend(v8, "type");
  if (v9 == 43)
  {
    *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = 1;
    *a3 = 1;
  }

}

- (void)_performModifierPerformTransitionResponse:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;

  v4 = a3;
  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "transitionRequest");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "isGestureInitiated");

  objc_msgSend(v7, "switcherContentController:performTransitionWithRequest:gestureInitiated:", self, v5, v6);
}

- (void)_performModifierCompletionResponse:(id)a3
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  NSObject *v8;
  uint8_t v9[16];

  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext", a3);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "activeGesture");
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if (v5)
  {
    -[SBFluidSwitcherViewController delegate](self, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if ((*((_BYTE *)&self->_delegateRespondsTo + 2) & 0x20) != 0)
      objc_msgSend(v6, "cancelActiveGestureForSwitcherContentController:", self);

  }
  else
  {
    SBLogAppSwitcher();
    v8 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1D0540000, v8, OS_LOG_TYPE_DEFAULT, "SBSwitcherModifierEventResponseTypeRequestCompletion response ignored. Can only be performed when there is an active gesture!", v9, 2u);
    }

  }
}

- (void)_performModifierReachabilityResponse:(id)a3
{
  id v3;
  void *v4;
  void *v5;
  _OWORD v6[5];
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v3 = a3;
  v4 = v3;
  v13 = 0;
  v11 = 0u;
  v12 = 0u;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  if (v3)
    objc_msgSend(v3, "reachabilityActivationContext");
  v6[2] = v10;
  v6[3] = v11;
  v6[4] = v12;
  v7 = v13;
  v6[0] = v8;
  v6[1] = v9;
  if (SBReachabilityGestureShouldActivate((uint64_t)v6))
  {
    +[SBReachabilityManager sharedInstance](SBReachabilityManager, "sharedInstance");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_msgSend(v5, "reachabilityModeActive") & 1) == 0)
      objc_msgSend(v5, "toggleReachability");

  }
}

- (void)_performModifierHapticResponse:(id)a3
{
  id v5;
  uint64_t v6;
  uint64_t v7;
  UINotificationFeedbackGenerator *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  uint8_t buf[4];
  uint64_t v16;
  __int16 v17;
  uint64_t v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  v6 = objc_msgSend(v5, "hapticType");
  v7 = objc_msgSend(v5, "phase");
  if (v6)
  {
    if (v6 == 2)
    {
      v8 = self->_reduceMotionFeedbackGenerator;
      v9 = 1010;
    }
    else if (v6 == 1)
    {
      v8 = self->_emptySwitcherFeedbackGenerator;
      v9 = 1013;
    }
    else
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v10, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 9533, CFSTR("Unknown haptic type %d"), objc_msgSend(v5, "hapticType"));

      v8 = 0;
      v9 = 0;
    }
  }
  else
  {
    v8 = self->_flyInFeedbackGenerator;
    v9 = 1012;
  }
  if (v7 == 2)
  {
    -[UINotificationFeedbackGenerator deactivate](v8, "deactivate");
    goto LABEL_20;
  }
  if (v7 != 1)
  {
    if (!v7)
      -[UINotificationFeedbackGenerator activateWithCompletionBlock:](v8, "activateWithCompletionBlock:", 0);
    goto LABEL_20;
  }
  if (__sb__runningInSpringBoard())
  {
    if (SBFEffectiveDeviceClass() != 2)
    {
LABEL_15:
      -[UINotificationFeedbackGenerator _privateNotificationOccurred:](v8, "_privateNotificationOccurred:", v9);
      goto LABEL_20;
    }
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CEA508], "currentDevice");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "userInterfaceIdiom");

    if (v12 != 1)
      goto LABEL_15;
  }
  v13 = objc_msgSend(v5, "hidEventSenderID");
  SBLogAppSwitcher();
  v14 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 134218240;
    v16 = v9;
    v17 = 2048;
    v18 = v13;
    _os_log_impl(&dword_1D0540000, v14, OS_LOG_TYPE_DEFAULT, "Firing switcher haptic for type %ld, senderID %llu", buf, 0x16u);
  }

  -[UINotificationFeedbackGenerator _privateNotificationOccurred:atLocation:senderID:](v8, "_privateNotificationOccurred:atLocation:senderID:", v9, v13, *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8));
LABEL_20:

}

- (void)_performModifierInjectVelocityResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[128];
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "appLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "key");
  v20 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "velocity");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  v24 = 0u;
  objc_msgSend(v5, "leafAppLayouts");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v22;
    do
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v22 != v10)
          objc_enumerationMutation(v7);
        v12 = *(_QWORD *)(*((_QWORD *)&v21 + 1) + 8 * i);
        -[SBFluidSwitcherViewController visibleItemContainers](self, "visibleItemContainers");
        v13 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v13, "objectForKey:", v12);
        v14 = (void *)objc_claimAutoreleasedReturnValue();

        if (v14)
        {
          objc_msgSend(v4, "key");
          v15 = (void *)objc_claimAutoreleasedReturnValue();
          objc_msgSend(v14, "_setVelocity:forKey:", v6, v15);

        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v21, v25, 16);
    }
    while (v9);
  }

  -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v5);
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  v17 = v16;
  if (v16)
    objc_msgSend(v16, "_setVelocity:forKey:", v6, v20);
  -[NSMutableDictionary objectForKey:](self->_visibleUnderlayAccessoryViews, "objectForKey:", v5);
  v18 = (void *)objc_claimAutoreleasedReturnValue();
  v19 = v18;
  if (v18)
    objc_msgSend(v18, "_setVelocity:forKey:", v6, v20);

}

- (void)_performModifierEmitStudyLogResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  void *v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  void *v52;
  void *v53;
  void *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  void *v60;
  _QWORD v61[4];
  _QWORD v62[4];
  _QWORD v63[4];
  _QWORD v64[6];

  v64[4] = *MEMORY[0x1E0C80C00];
  v4 = a3;
  objc_msgSend(v4, "name");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "payload");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v7 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99E08]), "initWithDictionary:", v6);
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v8, "activeGesture");
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  if (objc_msgSend(v5, "isEqualToString:", CFSTR("[SBDeckSwitcherPanGestureWorkspaceTransresponse _beginWithGesture:]")))
  {
    -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "layoutState");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "unlockedEnvironmentMode");

    -[SBFluidSwitcherViewController scrollView](self, "scrollView");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v13, "bounds");
    v15 = v14;
    v17 = v16;
    v19 = v18;
    v21 = v20;

    v58 = v9;
    objc_msgSend(v9, "studyLogData");
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "addEntriesFromDictionary:", v22);

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v12);
    v23 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v23, CFSTR("unlockedEnvironmentMode"));

    v63[0] = CFSTR("x");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v15);
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v64[0] = v24;
    v63[1] = CFSTR("y");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v17);
    v25 = objc_claimAutoreleasedReturnValue();
    v64[1] = v25;
    v63[2] = CFSTR("width");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v19);
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    v64[2] = v26;
    v63[3] = CFSTR("height");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v21);
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    v64[3] = v27;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v64, v63, 4);
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v28, CFSTR("switcherScrollViewBounds"));
    v29 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99D80]), "initWithDictionary:", v7);

    v6 = (void *)v25;
LABEL_8:

    v6 = (void *)v29;
    v9 = v58;
    goto LABEL_9;
  }
  if (objc_msgSend(v5, "isEqualToString:", CFSTR("[SBDeckSwitcherPanGestureWorkspaceTransresponse _finishWithGesture:]")))
  {
    -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
    v30 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v30, "activeTransitionContext");
    v31 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v31, "request");
    v32 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v32, "transientOverlayContext");
    v24 = (void *)objc_claimAutoreleasedReturnValue();

    -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
    v33 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v33, "layoutState");
    v34 = (void *)objc_claimAutoreleasedReturnValue();
    v56 = objc_msgSend(v34, "unlockedEnvironmentMode");

    -[SBFluidSwitcherViewController view](self, "view");
    v35 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v35, "bounds");
    v37 = v36;
    v39 = v38;
    v41 = v40;
    v43 = v42;

    v58 = v9;
    objc_msgSend(v9, "studyLogData");
    v44 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "addEntriesFromDictionary:", v44);

    if (v24)
      v45 = &unk_1E91D0428;
    else
      v45 = &unk_1E91D0440;
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v45, CFSTR("transientOverlayContext"), v56);
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", objc_msgSend(v24, "transitionType"));
    v46 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v46, CFSTR("transientOverlayContextTransitionType"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation"));
    v47 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v47, CFSTR("orientation"));

    v61[0] = CFSTR("x");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v37);
    v48 = (void *)objc_claimAutoreleasedReturnValue();
    v62[0] = v48;
    v61[1] = CFSTR("y");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v39);
    v49 = (void *)objc_claimAutoreleasedReturnValue();
    v62[1] = v49;
    v61[2] = CFSTR("width");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v41);
    v50 = (void *)objc_claimAutoreleasedReturnValue();
    v62[2] = v50;
    v61[3] = CFSTR("height");
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithDouble:", v43);
    v51 = (void *)objc_claimAutoreleasedReturnValue();
    v62[3] = v51;
    objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", v62, v61, 4);
    v52 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v52, CFSTR("bounds"));

    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithInteger:", v57);
    v53 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "setObject:forKeyedSubscript:", v53, CFSTR("unlockedEnvironmentMode"));

    v29 = objc_msgSend(objc_alloc(MEMORY[0x1E0C99D80]), "initWithDictionary:", v7);
    goto LABEL_8;
  }
LABEL_9:
  objc_msgSend(MEMORY[0x1E0DAFEC0], "sharedInstance");
  v54 = (void *)objc_claimAutoreleasedReturnValue();
  v59 = v5;
  v60 = v6;
  objc_msgSend(MEMORY[0x1E0C99D80], "dictionaryWithObjects:forKeys:count:", &v60, &v59, 1);
  v55 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v54, "log:", v55);

}

- (void)_performModifierEmitSBEventResponse:(id)a3
{
  id v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a3;
  v4 = objc_msgSend(v3, "eventType");
  objc_msgSend(v3, "payload");
  v6 = (id)objc_claimAutoreleasedReturnValue();

  objc_msgSend(MEMORY[0x1E0DA9D78], "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "emitEvent:withPayload:", v4, v6);

}

- (void)_performModifierScrollToAppLayoutResponse:(id)a3
{
  void *v4;
  id v5;

  v5 = a3;
  objc_msgSend(v5, "appLayout");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (v4)
    -[SBFluidSwitcherViewController _scrollToAppLayout:animated:alignment:completion:](self, "_scrollToAppLayout:animated:alignment:completion:", v4, objc_msgSend(v5, "animated"), objc_msgSend(v5, "alignment"), 0);

}

- (void)_performModifierNotifyIconWillZoomDownResponse:(id)a3
{
  NSMutableDictionary *hiddenIconViews;
  void *v5;
  void *v6;
  id v7;

  hiddenIconViews = self->_hiddenIconViews;
  objc_msgSend(a3, "appLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](hiddenIconViews, "objectForKey:", v5);
  v7 = (id)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    -[SBFluidSwitcherViewController _iconManager](self, "_iconManager");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "noteIconViewWillZoomDown:", v7);

  }
}

uint64_t __77__SBFluidSwitcherViewController__performModifierMatchMoveToIconViewResponse___block_invoke(uint64_t a1)
{
  void *v1;
  __int128 v2;
  _OWORD v4[3];

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 1808);
  v2 = *(_OWORD *)(a1 + 56);
  v4[0] = *(_OWORD *)(a1 + 40);
  v4[1] = v2;
  v4[2] = *(_OWORD *)(a1 + 72);
  return objc_msgSend(v1, "setTransform:", v4);
}

uint64_t __77__SBFluidSwitcherViewController__performModifierMatchMoveToIconViewResponse___block_invoke_2(uint64_t a1)
{
  void *v1;
  __int128 v2;
  _OWORD v4[3];

  v1 = *(void **)(*(_QWORD *)(a1 + 32) + 1808);
  v2 = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 16);
  v4[0] = *MEMORY[0x1E0C9BAA8];
  v4[1] = v2;
  v4[2] = *(_OWORD *)(MEMORY[0x1E0C9BAA8] + 32);
  return objc_msgSend(v1, "setTransform:", v4);
}

- (void)_performModifierMatchMoveToDropletResponse:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t i;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  _QWORD *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t j;
  void *v35;
  void *v36;
  void *v37;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  void *v45;
  void *v46;
  void *v47;
  id v48;
  void *v49;
  void *v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _BYTE v59[128];
  _BYTE v60[128];
  _QWORD v61[4];
  _QWORD v62[4];
  _QWORD v63[4];
  _QWORD v64[6];

  v64[4] = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(v5, "appLayout");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v5, "isActive"))
  {
    v53 = 0u;
    v54 = 0u;
    v51 = 0u;
    v52 = 0u;
    v49 = v6;
    objc_msgSend(v6, "leafAppLayouts");
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v51, v59, 16);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)v52;
      do
      {
        for (i = 0; i != v13; ++i)
        {
          if (*(_QWORD *)v52 != v14)
            objc_enumerationMutation(v11);
          -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v51 + 1) + 8 * i));
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v17 = v16;
          if (v16)
          {
            objc_msgSend(v16, "layer");
            v18 = (void *)objc_claimAutoreleasedReturnValue();
            objc_msgSend(v18, "removeAnimationForKey:", CFSTR("MatchMoveToDropletAnimation"));

          }
        }
        v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v51, v59, 16);
      }
      while (v13);
    }

    v6 = v49;
    -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v49);
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    v20 = v19;
    if (v19)
    {
      objc_msgSend(v19, "layer");
      v21 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v21, "removeAnimationForKey:", CFSTR("MatchMoveToDropletAnimation"));

    }
    -[NSMutableDictionary objectForKey:](self->_visibleUnderlayAccessoryViews, "objectForKey:", v49);
    v22 = (void *)objc_claimAutoreleasedReturnValue();
    v23 = v22;
    if (!v22)
      goto LABEL_46;
    objc_msgSend(v22, "layer");
    v9 = (id)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v9, "removeAnimationForKey:", CFSTR("MatchMoveToDropletAnimation"));
LABEL_45:

LABEL_46:
    goto LABEL_47;
  }
  if (v6)
  {
    -[NSMutableDictionary objectForKey:](self->_externalDropletZoomUpTokens, "objectForKey:", v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    if (v7)
    {
      v47 = v7;
      objc_msgSend(v7, "animatingDroplet");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      if (!v8)
      {
        objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
        v44 = (void *)objc_claimAutoreleasedReturnValue();

      }
      v9 = objc_alloc_init(MEMORY[0x1E0CD27C0]);
      objc_msgSend(v8, "layer");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v9, "setSourceLayer:", v10);

      objc_msgSend(v9, "setDuration:", INFINITY);
      objc_msgSend(v9, "setFillMode:", *MEMORY[0x1E0CD2B58]);
      objc_msgSend(v9, "setRemovedOnCompletion:", 0);
      if (-[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation") != 1
        && -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation", 0.0) != 4
        && -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation") != 3)
      {
        -[SBFluidSwitcherViewController switcherInterfaceOrientation](self, "switcherInterfaceOrientation");
      }
      v48 = v5;
      v46 = v8;
      if (BSFloatEqualToFloat())
      {
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 0.0, 1.0);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v64[0] = v24;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 0.0, 0.0);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v64[1] = v25;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 1.0, 0.0);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v64[2] = v26;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 1.0, 1.0);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v64[3] = v27;
        v28 = v64;
      }
      else if (BSFloatEqualToFloat())
      {
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 1.0, 1.0);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v63[0] = v24;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 0.0, 1.0);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v63[1] = v25;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 0.0, 0.0);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v63[2] = v26;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 1.0, 0.0);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v63[3] = v27;
        v28 = v63;
      }
      else if (BSFloatEqualToFloat())
      {
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 1.0, 0.0);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v62[0] = v24;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 1.0, 1.0);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v62[1] = v25;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 0.0, 1.0);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v62[2] = v26;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 0.0, 0.0);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v62[3] = v27;
        v28 = v62;
      }
      else
      {
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 0.0, 0.0);
        v24 = (void *)objc_claimAutoreleasedReturnValue();
        v61[0] = v24;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 1.0, 0.0);
        v25 = (void *)objc_claimAutoreleasedReturnValue();
        v61[1] = v25;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 1.0, 1.0);
        v26 = (void *)objc_claimAutoreleasedReturnValue();
        v61[2] = v26;
        objc_msgSend(MEMORY[0x1E0CB3B18], "valueWithCGPoint:", 0.0, 1.0);
        v27 = (void *)objc_claimAutoreleasedReturnValue();
        v61[3] = v27;
        v28 = v61;
      }
      objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v28, 4);
      v29 = objc_claimAutoreleasedReturnValue();

      v45 = (void *)v29;
      objc_msgSend(v9, "setSourcePoints:", v29);
      objc_msgSend(v9, "setUsesNormalizedCoordinates:", 1);
      v57 = 0u;
      v58 = 0u;
      v55 = 0u;
      v56 = 0u;
      v50 = v6;
      objc_msgSend(v6, "leafAppLayouts");
      v30 = (void *)objc_claimAutoreleasedReturnValue();
      v31 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v55, v60, 16);
      if (v31)
      {
        v32 = v31;
        v33 = *(_QWORD *)v56;
        do
        {
          for (j = 0; j != v32; ++j)
          {
            if (*(_QWORD *)v56 != v33)
              objc_enumerationMutation(v30);
            -[NSMutableDictionary objectForKey:](self->_visibleItemContainers, "objectForKey:", *(_QWORD *)(*((_QWORD *)&v55 + 1) + 8 * j));
            v35 = (void *)objc_claimAutoreleasedReturnValue();
            v36 = v35;
            if (v35)
            {
              objc_msgSend(v35, "layer");
              v37 = (void *)objc_claimAutoreleasedReturnValue();
              objc_msgSend(v37, "addAnimation:forKey:", v9, CFSTR("MatchMoveToDropletAnimation"));

            }
          }
          v32 = objc_msgSend(v30, "countByEnumeratingWithState:objects:count:", &v55, v60, 16);
        }
        while (v32);
      }

      v6 = v50;
      -[NSMutableDictionary objectForKey:](self->_visibleOverlayAccessoryViews, "objectForKey:", v50);
      v38 = (void *)objc_claimAutoreleasedReturnValue();
      v39 = v38;
      if (v38)
      {
        objc_msgSend(v38, "layer");
        v40 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v40, "addAnimation:forKey:", v9, CFSTR("MatchMoveToDropletAnimation"));

      }
      -[NSMutableDictionary objectForKey:](self->_visibleUnderlayAccessoryViews, "objectForKey:", v50);
      v41 = (void *)objc_claimAutoreleasedReturnValue();
      v42 = v41;
      v20 = v47;
      v5 = v48;
      v23 = v46;
      if (v41)
      {
        objc_msgSend(v41, "layer");
        v43 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v43, "addAnimation:forKey:", v9, CFSTR("MatchMoveToDropletAnimation"));

      }
      goto LABEL_45;
    }
  }
LABEL_47:

}

- (void)_performNewWindowSwitcherResponse:(id)a3
{
  id WeakRetained;
  void *v5;
  id v6;

  v6 = a3;
  WeakRetained = objc_loadWeakRetained((id *)&self->_delegate);
  if ((*((_BYTE *)&self->_delegateRespondsTo + 1) & 0x80) != 0)
  {
    objc_msgSend(v6, "bundleIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(WeakRetained, "switcherContentController:requestNewWindowForBundleIdentifier:", self, v5);

  }
}

- (void)_performModifierDismissSiriResponse:(id)a3
{
  void *v3;
  id v4;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene", a3);
  v4 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "assistantController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "dismissAssistantViewIfNecessary");

}

- (void)_performInvalidateSnapshotCacheResponse:(id)a3
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t j;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t k;
  id obj;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[128];
  _BYTE v36[128];
  _BYTE v37[128];
  uint64_t v38;

  v38 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "displayItems");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v4)
  {
    v5 = (void *)objc_opt_new();
    v31 = 0u;
    v32 = 0u;
    v33 = 0u;
    v34 = 0u;
    -[SBAppSwitcherSnapshotImageCache cachableAppLayouts](self->_snapshotCache, "cachableAppLayouts");
    obj = (id)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v31, v37, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v32;
      do
      {
        for (i = 0; i != v7; ++i)
        {
          if (*(_QWORD *)v32 != v8)
            objc_enumerationMutation(obj);
          v10 = *(void **)(*((_QWORD *)&v31 + 1) + 8 * i);
          v27 = 0u;
          v28 = 0u;
          v29 = 0u;
          v30 = 0u;
          objc_msgSend(v10, "leafAppLayouts");
          v11 = (void *)objc_claimAutoreleasedReturnValue();
          v12 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v27, v36, 16);
          if (v12)
          {
            v13 = v12;
            v14 = *(_QWORD *)v28;
            do
            {
              for (j = 0; j != v13; ++j)
              {
                if (*(_QWORD *)v28 != v14)
                  objc_enumerationMutation(v11);
                objc_msgSend(*(id *)(*((_QWORD *)&v27 + 1) + 8 * j), "allItems");
                v16 = (void *)objc_claimAutoreleasedReturnValue();
                objc_msgSend(v5, "addObjectsFromArray:", v16);

              }
              v13 = objc_msgSend(v11, "countByEnumeratingWithState:objects:count:", &v27, v36, 16);
            }
            while (v13);
          }

        }
        v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v31, v37, 16);
      }
      while (v7);
    }

    objc_msgSend(v5, "allObjects");
    v4 = (void *)objc_claimAutoreleasedReturnValue();

  }
  v25 = 0u;
  v26 = 0u;
  v23 = 0u;
  v24 = 0u;
  v17 = v4;
  v18 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v23, v35, 16);
  if (v18)
  {
    v19 = v18;
    v20 = *(_QWORD *)v24;
    do
    {
      for (k = 0; k != v19; ++k)
      {
        if (*(_QWORD *)v24 != v20)
          objc_enumerationMutation(v17);
        -[SBAppSwitcherSnapshotImageCache reloadSnapshotForDisplayItem:](self->_snapshotCache, "reloadSnapshotForDisplayItem:", *(_QWORD *)(*((_QWORD *)&v23 + 1) + 8 * k));
      }
      v19 = objc_msgSend(v17, "countByEnumeratingWithState:objects:count:", &v23, v35, 16);
    }
    while (v19);
  }

}

- (void)_performInvalidateItemContainerBackdropResponse:(id)a3
{
  void *v4;
  unint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id obj;
  _QWORD v16[5];
  _QWORD v17[5];
  _QWORD v18[5];
  id v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[128];
  uint64_t v25;

  v25 = *MEMORY[0x1E0C80C00];
  v12 = a3;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "count");

  -[SBSwitcherModifier animationAttributesForLayoutElement:](self->_rootModifier, "animationAttributesForLayoutElement:", self->_genericAccessoryLayoutElement);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "layoutSettings");
  v14 = (void *)objc_claimAutoreleasedReturnValue();

  v13 = objc_msgSend(v12, "updateMode");
  v20 = 0u;
  v21 = 0u;
  v22 = 0u;
  v23 = 0u;
  -[NSMutableDictionary allKeys](self->_visibleItemContainerBackdropViews, "allKeys");
  obj = (id)objc_claimAutoreleasedReturnValue();
  v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
  if (v7)
  {
    v8 = *(_QWORD *)v21;
    v9 = MEMORY[0x1E0C809B0];
    do
    {
      v10 = 0;
      do
      {
        if (*(_QWORD *)v21 != v8)
          objc_enumerationMutation(obj);
        v11 = *(void **)(*((_QWORD *)&v20 + 1) + 8 * v10);
        v18[0] = 0;
        v18[1] = v18;
        v18[2] = 0x3032000000;
        v18[3] = __Block_byref_object_copy__13;
        v18[4] = __Block_byref_object_dispose__13;
        -[NSMutableDictionary objectForKey:](self->_visibleItemContainerBackdropViews, "objectForKey:", v11);
        v19 = (id)objc_claimAutoreleasedReturnValue();
        if (objc_msgSend(v11, "integerValue") >= v5)
        {
          -[NSMutableDictionary removeObjectForKey:](self->_visibleItemContainerBackdropViews, "removeObjectForKey:", v11);
          v16[4] = v18;
          v17[0] = v9;
          v17[1] = 3221225472;
          v17[2] = __81__SBFluidSwitcherViewController__performInvalidateItemContainerBackdropResponse___block_invoke;
          v17[3] = &unk_1E8E9ED40;
          v17[4] = v18;
          v16[0] = v9;
          v16[1] = 3221225472;
          v16[2] = __81__SBFluidSwitcherViewController__performInvalidateItemContainerBackdropResponse___block_invoke_2;
          v16[3] = &unk_1E8EA5178;
          objc_msgSend(MEMORY[0x1E0CEABB0], "sb_animateWithSettings:mode:animations:completion:", v14, v13, v17, v16);
        }
        _Block_object_dispose(v18, 8);

        ++v10;
      }
      while (v7 != v10);
      v7 = objc_msgSend(obj, "countByEnumeratingWithState:objects:count:", &v20, v24, 16);
    }
    while (v7);
  }

}

uint64_t __81__SBFluidSwitcherViewController__performInvalidateItemContainerBackdropResponse___block_invoke(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setAlpha:", 0.0);
}

void __81__SBFluidSwitcherViewController__performInvalidateItemContainerBackdropResponse___block_invoke_2(uint64_t a1)
{
  uint64_t v2;
  void *v3;

  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "setHidden:", 1);
  objc_msgSend(*(id *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 40), "removeFromSuperview");
  v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8);
  v3 = *(void **)(v2 + 40);
  *(_QWORD *)(v2 + 40) = 0;

}

- (void)_performUpdateDragPlatterBlurResponse:(id)a3
{
  void *v3;
  void *v4;
  uint64_t v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  +[SBWorkspace mainWorkspace](SBWorkspace, "mainWorkspace", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "currentTransaction");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = objc_opt_class();
  v6 = v4;
  if (v5)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v7 = v6;
    else
      v7 = 0;
  }
  else
  {
    v7 = 0;
  }
  v9 = v7;

  v8 = v9;
  if (v9)
  {
    objc_msgSend(v9, "blurReadinessDidChange");
    v8 = v9;
  }

}

- (void)_performRequestSystemApertureElementSuppressionResponse:(id)a3
{
  void *v4;
  void *v5;
  id v6;
  NSMutableDictionary *systemApertureContentSuppressionAssertionsByInvalidationUUID;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  NSMutableDictionary *systemApertureGlobalSuppressionAssertionsByInvalidationUUID;
  void *v13;
  void *v14;
  void *v15;
  NSMutableDictionary *systemApertureKeyLineAssertionsByInvalidationUUID;
  void *v17;
  id v18;
  _QWORD v19[5];
  id v20;

  v18 = a3;
  objc_msgSend(MEMORY[0x1E0C99E20], "set");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "appLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v19[0] = MEMORY[0x1E0C809B0];
  v19[1] = 3221225472;
  v19[2] = __89__SBFluidSwitcherViewController__performRequestSystemApertureElementSuppressionResponse___block_invoke;
  v19[3] = &unk_1E8E9E3B0;
  v19[4] = self;
  v6 = v4;
  v20 = v6;
  objc_msgSend(v5, "enumerate:", v19);

  systemApertureContentSuppressionAssertionsByInvalidationUUID = self->_systemApertureContentSuppressionAssertionsByInvalidationUUID;
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithSet:", v6);
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v18, "invalidationIdentifier");
  v9 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary setObject:forKey:](systemApertureContentSuppressionAssertionsByInvalidationUUID, "setObject:forKey:", v8, v9);

  if (objc_msgSend(v18, "wantsGlobalSuppression"))
  {
    objc_msgSend((id)SBApp, "systemApertureControllerForMainDisplay");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "restrictSystemApertureToInertWithReason:", CFSTR("Switcher"));
    v11 = (void *)objc_claimAutoreleasedReturnValue();

    systemApertureGlobalSuppressionAssertionsByInvalidationUUID = self->_systemApertureGlobalSuppressionAssertionsByInvalidationUUID;
    objc_msgSend(v18, "invalidationIdentifier");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary setObject:forKey:](systemApertureGlobalSuppressionAssertionsByInvalidationUUID, "setObject:forKey:", v11, v13);

  }
  if (objc_msgSend(v18, "wantsKeyLineEnabled"))
  {
    objc_msgSend((id)SBApp, "systemApertureControllerForMainDisplay");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "requireKeyLineAssertionForTransition");
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    systemApertureKeyLineAssertionsByInvalidationUUID = self->_systemApertureKeyLineAssertionsByInvalidationUUID;
    objc_msgSend(v18, "invalidationIdentifier");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    -[NSMutableDictionary setObject:forKey:](systemApertureKeyLineAssertionsByInvalidationUUID, "setObject:forKey:", v15, v17);

  }
}

void __89__SBFluidSwitcherViewController__performRequestSystemApertureElementSuppressionResponse___block_invoke(uint64_t a1, uint64_t a2, void *a3)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v8 = a3;
  if (!objc_msgSend(v8, "type"))
  {
    objc_msgSend(*(id *)(a1 + 32), "_gestureManager");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "bundleIdentifier");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "uniqueIdentifier");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v4, "acquireSystemApertureSuppressionAssertionForBundleIdentifier:sceneIdentifier:", v5, v6);
    v7 = (void *)objc_claimAutoreleasedReturnValue();

    if (v7)
      objc_msgSend(*(id *)(a1 + 40), "addObject:", v7);

  }
}

- (void)_performRelinquishSystemApertureElementSuppressionResponse:(id)a3
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[128];
  uint64_t v17;

  v17 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a3, "invalidationIdentifier");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_systemApertureContentSuppressionAssertionsByInvalidationUUID, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v12 = 0u;
  v13 = 0u;
  v14 = 0u;
  v15 = 0u;
  v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
  if (v6)
  {
    v7 = v6;
    v8 = *(_QWORD *)v13;
    do
    {
      v9 = 0;
      do
      {
        if (*(_QWORD *)v13 != v8)
          objc_enumerationMutation(v5);
        objc_msgSend(*(id *)(*((_QWORD *)&v12 + 1) + 8 * v9++), "invalidate");
      }
      while (v7 != v9);
      v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v12, v16, 16);
    }
    while (v7);
  }
  -[NSMutableDictionary removeObjectForKey:](self->_systemApertureContentSuppressionAssertionsByInvalidationUUID, "removeObjectForKey:", v4);
  -[NSMutableDictionary objectForKey:](self->_systemApertureGlobalSuppressionAssertionsByInvalidationUUID, "objectForKey:", v4);
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v10, "invalidateWithReason:", CFSTR("Switcher"));
  -[NSMutableDictionary removeObjectForKey:](self->_systemApertureGlobalSuppressionAssertionsByInvalidationUUID, "removeObjectForKey:", v4);
  -[NSMutableDictionary objectForKey:](self->_systemApertureKeyLineAssertionsByInvalidationUUID, "objectForKey:", v4);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v11, "invalidateWithReason:", CFSTR("Switcher"));
  -[NSMutableDictionary removeObjectForKey:](self->_systemApertureKeyLineAssertionsByInvalidationUUID, "removeObjectForKey:", v4);

}

- (void)_performSystemApertureBounceResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  double v7;
  double v8;
  double v9;
  double v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  _QWORD v22[4];
  id v23;
  id v24;
  id v25;

  v4 = a3;
  objc_msgSend(v4, "appLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  -[SBFluidSwitcherViewController currentVelocityValueForVisibleAppLayout:key:](self, "currentVelocityValueForVisibleAppLayout:key:", v5, CFSTR("position"));
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v20 = v6;
  if (v6)
  {
    objc_msgSend(v6, "CGPointValue", v6);
    v8 = v7;
    v10 = v9;
  }
  else
  {
    v8 = *MEMORY[0x1E0C9D538];
    v10 = *(double *)(MEMORY[0x1E0C9D538] + 8);
  }
  objc_msgSend(v4, "suppressionIdentifierToInvalidate", v20);
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_systemApertureContentSuppressionAssertionsByInvalidationUUID, "objectForKey:", v11);
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_systemApertureGlobalSuppressionAssertionsByInvalidationUUID, "objectForKey:", v11);
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  -[NSMutableDictionary objectForKey:](self->_systemApertureKeyLineAssertionsByInvalidationUUID, "objectForKey:", v11);
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v22[0] = MEMORY[0x1E0C809B0];
  v22[1] = 3221225472;
  v22[2] = __70__SBFluidSwitcherViewController__performSystemApertureBounceResponse___block_invoke;
  v22[3] = &unk_1E8E9E270;
  v23 = v12;
  v24 = v13;
  v25 = v14;
  v15 = v14;
  v16 = v13;
  v17 = v12;
  v18 = (void *)MEMORY[0x1D17E5550](v22);
  -[NSMutableDictionary removeObjectForKey:](self->_systemApertureContentSuppressionAssertionsByInvalidationUUID, "removeObjectForKey:", v11);
  -[NSMutableDictionary removeObjectForKey:](self->_systemApertureGlobalSuppressionAssertionsByInvalidationUUID, "removeObjectForKey:", v11);
  -[NSMutableDictionary removeObjectForKey:](self->_systemApertureKeyLineAssertionsByInvalidationUUID, "removeObjectForKey:", v11);
  objc_msgSend((id)SBApp, "systemApertureControllerForMainDisplay");
  v19 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v19, "animateTransitionAcceptanceBounceWithVelocityVector:triggeredBlock:", v18, v8, v10);

}

uint64_t __70__SBFluidSwitcherViewController__performSystemApertureBounceResponse___block_invoke(id *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  v2 = a1[4];
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        objc_msgSend(*(id *)(*((_QWORD *)&v8 + 1) + 8 * v6++), "invalidate", (_QWORD)v8);
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

  objc_msgSend(a1[5], "invalidateWithReason:", CFSTR("Switcher"));
  return objc_msgSend(a1[6], "invalidateWithReason:", CFSTR("Switcher"));
}

- (void)_performSystemApertureStretchResponse:(id)a3
{
  id v3;

  objc_msgSend((id)SBApp, "systemApertureControllerForMainDisplay", a3);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "animateTransitionEjectionStretchWithVelocityVector:", *MEMORY[0x1E0C9D538], *(double *)(MEMORY[0x1E0C9D538] + 8));

}

- (void)_performUpdateContinuousExposeStripsPresentationResponse:(id)a3
{
  unint64_t continuousExposeStripsPresentationOptions;
  id v5;
  unint64_t v6;
  uint64_t v7;

  continuousExposeStripsPresentationOptions = self->_continuousExposeStripsPresentationOptions;
  v5 = a3;
  v6 = objc_msgSend(v5, "presentationOptions") | continuousExposeStripsPresentationOptions;
  self->_continuousExposeStripsPresentationOptions = v6;
  v7 = objc_msgSend(v5, "dismissalOptions");

  self->_continuousExposeStripsPresentationOptions = v6 & ~v7;
}

- (void)_performInvalidateContinuousExposeIdentifiersResponse:(id)a3
{
  id v4;
  void *v5;
  uint64_t v6;
  id v7;

  v4 = a3;
  objc_msgSend(v4, "transitioningFromAppLayout");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "transitioningToAppLayout");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  v6 = objc_msgSend(v4, "animated");

  -[SBFluidSwitcherViewController _updateContinuousExposeIdentifiersTransitioningFromAppLayout:toAppLayout:animated:](self, "_updateContinuousExposeIdentifiersTransitioningFromAppLayout:toAppLayout:animated:", v7, v5, v6);
}

- (void)_performSetInterfaceOrientationFromUserResizingResponse:(id)a3
{
  id v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;

  v4 = a3;
  objc_msgSend(v4, "displayItem");
  v8 = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "desiredOrientation");

  if (v8 && v5)
  {
    -[SBFluidSwitcherViewController delegate](self, "delegate");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v7 = v6;
    if ((*((_BYTE *)&self->_delegateRespondsTo + 1) & 0x40) != 0)
      objc_msgSend(v6, "switcherContentController:setInterfaceOrientationFromUserResizing:forDisplayItem:", self, v5, v8);

  }
}

- (void)_performPresentContinuousExposeStripEdgeProtectGrabberResponse:(id)a3
{
  id v4;
  int v5;
  id v6;

  v4 = a3;
  -[SBFluidSwitcherViewController delegate](self, "delegate");
  v6 = (id)objc_claimAutoreleasedReturnValue();
  v5 = objc_msgSend(v4, "isInitialPresentation");

  if (v5)
    objc_msgSend(v6, "presentContinuousExposeStripRevealGrabberTongueImmediatelyForSwitcherContentController:", self);
  else
    objc_msgSend(v6, "tickleContinuousExposeStripRevealGrabberTongueIfVisibleForSwitcherContentController:", self);

}

- (void)_performInvalidateRootContentViewClippingAndBlurResponse:(id)a3
{
  -[SBFluidSwitcherViewController _applyRootContentViewClippingAndBlurWithCompletion:](self, "_applyRootContentViewClippingAndBlurWithCompletion:", 0);
}

- (void)_performActionForPreludeAnimationTokenActionResponse:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  double v16;
  void *v17;
  void *v18;
  void *v19;
  SBHardwareButtonDropletAnimationEvent *v20;
  NSObject *v21;
  SBMatchMoveToDropletSwitcherEventResponse *v22;
  void *v23;
  int v24;
  void *v25;
  uint64_t v26;

  v26 = *MEMORY[0x1E0C80C00];
  v5 = a3;
  objc_msgSend(v5, "preludeToken");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "zoomUpToken");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "appLayout");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  v9 = objc_msgSend(v5, "action");

  if (v9 == 1)
  {
    if (v6)
    {
      objc_msgSend(v6, "cancel");
      SBLogCameraCaptureLaunchAnimation();
      v21 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        v24 = 138412290;
        v25 = v6;
        _os_log_impl(&dword_1D0540000, v21, OS_LOG_TYPE_DEFAULT, "Switcher-Modifier: Still have prelude token when transition ends; canceling: %@",
          (uint8_t *)&v24,
          0xCu);
      }

    }
    -[NSMutableDictionary removeObjectForKey:](self->_externalDropletZoomUpTokens, "removeObjectForKey:", v8);
    v22 = -[SBMatchMoveToDropletSwitcherEventResponse initWithAppLayout:active:]([SBMatchMoveToDropletSwitcherEventResponse alloc], "initWithAppLayout:active:", v8, 0);
    -[SBFluidSwitcherViewController _performModifierMatchMoveToDropletResponse:](self, "_performModifierMatchMoveToDropletResponse:", v22);

    objc_msgSend(v7, "invalidate");
  }
  else if (!v9)
  {
    objc_msgSend(v6, "associatedBezelEffectsCoordinator");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "commandeerDropletAnimationWithToken:", v6);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController view](self, "view");
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v12, "window");
    v13 = (void *)objc_claimAutoreleasedReturnValue();

    if (!v13)
    {
      -[SBFluidSwitcherViewController delegate](self, "delegate");
      v14 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "updateWindowVisibilityForSwitcherContentController:", self);

      -[SBFluidSwitcherViewController view](self, "view");
      v15 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v15, "window");
      v13 = (void *)objc_claimAutoreleasedReturnValue();

    }
    objc_msgSend(v13, "windowLevel");
    objc_msgSend(v11, "setRequestedDropletWindowLevel:", v16 + -1.0);
    objc_msgSend(v11, "animatingDroplet");
    v17 = (void *)objc_claimAutoreleasedReturnValue();
    if (!v17)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v23 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v23, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController.m"), 10134, CFSTR("No Droplet to Commandeer"));

    }
    -[NSMutableDictionary setObject:forKey:](self->_externalDropletZoomUpTokens, "setObject:forKey:", v11, v8);
    objc_msgSend(v11, "animatingDropletContext");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v11, "animatingDroplet");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v18, "applyKeylineStyle:forContainerView:", 0, v19);

    v20 = -[SBHardwareButtonDropletAnimationEvent initWithPreludeToken:zoomUpToken:]([SBHardwareButtonDropletAnimationEvent alloc], "initWithPreludeToken:zoomUpToken:", 0, v11);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v20);

  }
}

- (void)_performCancelSystemGesturesResponse:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  objc_class *v13;
  void *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[128];
  uint64_t v20;

  v20 = *MEMORY[0x1E0C80C00];
  v4 = a3;
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "systemGestureManager");
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  v17 = 0u;
  v18 = 0u;
  v15 = 0u;
  v16 = 0u;
  objc_msgSend(v4, "systemGestureTypes", 0);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v16;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v16 != v10)
          objc_enumerationMutation(v7);
        v12 = objc_msgSend(*(id *)(*((_QWORD *)&v15 + 1) + 8 * v11), "unsignedIntegerValue");
        v13 = (objc_class *)objc_opt_class();
        NSStringFromClass(v13);
        v14 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "cancelGestureRecognizerOfType:reason:", v12, v14);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v19, 16);
    }
    while (v9);
  }

}

- (void)_cancelWindowMorphingAnimation
{
  void (**centerWindowInAppMorphCompletion)(id, uint64_t, _QWORD);
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _BYTE v14[128];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  centerWindowInAppMorphCompletion = (void (**)(id, uint64_t, _QWORD))self->_centerWindowInAppMorphCompletion;
  if (centerWindowInAppMorphCompletion)
  {
    centerWindowInAppMorphCompletion[2](centerWindowInAppMorphCompletion, 1, 0);
    v4 = self->_centerWindowInAppMorphCompletion;
    self->_centerWindowInAppMorphCompletion = 0;

    v12 = 0u;
    v13 = 0u;
    v10 = 0u;
    v11 = 0u;
    -[NSMutableDictionary allKeys](self->_centerWindowActivationAnimationContexts, "allKeys", 0);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v6 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
    if (v6)
    {
      v7 = v6;
      v8 = *(_QWORD *)v11;
      do
      {
        v9 = 0;
        do
        {
          if (*(_QWORD *)v11 != v8)
            objc_enumerationMutation(v5);
          -[SBFluidSwitcherViewController _removeCenterWindowAnimationContextWithKey:](self, "_removeCenterWindowAnimationContextWithKey:", *(_QWORD *)(*((_QWORD *)&v10 + 1) + 8 * v9++));
        }
        while (v7 != v9);
        v7 = objc_msgSend(v5, "countByEnumeratingWithState:objects:count:", &v10, v14, 16);
      }
      while (v7);
    }

  }
}

- (void)_updateModifierStackDebugLabelPresence
{
  _BOOL4 v3;
  UILabel *modifierStackDebugLabel;
  BOOL v5;
  UILabel *v6;
  UILabel *v7;
  UILabel *v8;
  void *v9;
  UILabel *v10;
  void *v11;
  UILabel *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  UILabel *v17;

  v3 = -[SBAppSwitcherSettings showModifierDebugLabel](self->_settings, "showModifierDebugLabel");
  modifierStackDebugLabel = self->_modifierStackDebugLabel;
  if (modifierStackDebugLabel)
    v5 = 1;
  else
    v5 = !v3;
  if (v5)
  {
    if (!modifierStackDebugLabel)
      LOBYTE(v3) = 1;
    if (!v3)
    {
      -[UILabel removeFromSuperview](modifierStackDebugLabel, "removeFromSuperview");
      v17 = self->_modifierStackDebugLabel;
      self->_modifierStackDebugLabel = 0;

    }
  }
  else
  {
    v6 = (UILabel *)objc_alloc_init(MEMORY[0x1E0CEA700]);
    v7 = self->_modifierStackDebugLabel;
    self->_modifierStackDebugLabel = v6;

    v8 = self->_modifierStackDebugLabel;
    objc_msgSend(MEMORY[0x1E0CEA478], "colorWithWhite:alpha:", 0.0, 0.8);
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    -[UILabel setBackgroundColor:](v8, "setBackgroundColor:", v9);

    v10 = self->_modifierStackDebugLabel;
    objc_msgSend(MEMORY[0x1E0CEA5E8], "systemFontOfSize:", 12.0);
    v11 = (void *)objc_claimAutoreleasedReturnValue();
    -[UILabel setFont:](v10, "setFont:", v11);

    v12 = self->_modifierStackDebugLabel;
    objc_msgSend(MEMORY[0x1E0CEA478], "whiteColor");
    v13 = (void *)objc_claimAutoreleasedReturnValue();
    -[UILabel setTextColor:](v12, "setTextColor:", v13);

    -[UILabel setTextAlignment:](self->_modifierStackDebugLabel, "setTextAlignment:", 0);
    -[UILabel setNumberOfLines:](self->_modifierStackDebugLabel, "setNumberOfLines:", 0);
    -[UILabel layer](self->_modifierStackDebugLabel, "layer");
    v14 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v14, "setCornerRadius:", 19.0);

    -[UILabel layer](self->_modifierStackDebugLabel, "layer");
    v15 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v15, "setCornerCurve:", *MEMORY[0x1E0CD2A68]);

    -[UILabel setClipsToBounds:](self->_modifierStackDebugLabel, "setClipsToBounds:", 1);
    -[UILabel bs_setHitTestingDisabled:](self->_modifierStackDebugLabel, "bs_setHitTestingDisabled:", 1);
    -[SBFluidSwitcherViewController view](self, "view");
    v16 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v16, "addSubview:", self->_modifierStackDebugLabel);

    -[SBFluidSwitcherViewController _updateModifierStackDebugLabel](self, "_updateModifierStackDebugLabel");
  }
}

- (BOOL)isShowingModifierTimeline
{
  return self->_isShowingModifierTimeline;
}

- (void)setShowModifierTimeline:(BOOL)a3
{
  if (self->_isShowingModifierTimeline != a3)
  {
    self->_isShowingModifierTimeline = a3;
    -[SBFluidSwitcherViewController _updateModifierTimelinePresence](self, "_updateModifierTimelinePresence");
  }
}

- (void)_updateModifierTimelinePresence
{
  SBSwitcherModifier **p_rootModifier;
  void *v4;
  SBFluidSwitcherModifierTimelineController *v5;
  void *v6;
  SBFluidSwitcherModifierTimelineController *v7;
  SBFluidSwitcherModifierTimelineController *modifierTimelineController;
  uint64_t v9;
  SBSwitcherModifier *v10;
  SBFluidSwitcherModifierTimelineController *v11;
  SBFluidSwitcherModifierTimelineController *v12;
  SBHistorianSwitcherModifier *obj;

  p_rootModifier = &self->_rootModifier;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0 && self->_isShowingModifierTimeline)
  {
    obj = -[SBHistorianSwitcherModifier initWithRootModifier:]([SBHistorianSwitcherModifier alloc], "initWithRootModifier:", *p_rootModifier);
    -[SBChainableModifier delegate](*p_rootModifier, "delegate");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBHistorianSwitcherModifier setDelegate:](obj, "setDelegate:", v4);

    -[SBHistorianSwitcherModifier setHistorianDelegate:](obj, "setHistorianDelegate:", self);
    objc_storeStrong((id *)p_rootModifier, obj);
    if (!self->_modifierTimelineController)
    {
      v5 = [SBFluidSwitcherModifierTimelineController alloc];
      -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      v7 = -[SBFluidSwitcherModifierTimelineController initWithWindowScene:](v5, "initWithWindowScene:", v6);
      modifierTimelineController = self->_modifierTimelineController;
      self->_modifierTimelineController = v7;

      -[SBFluidSwitcherModifierTimelineController setVisible:](self->_modifierTimelineController, "setVisible:", 1);
    }
LABEL_10:

    return;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && !self->_isShowingModifierTimeline)
  {
    obj = *p_rootModifier;
    -[SBHistorianSwitcherModifier rootModifier](obj, "rootModifier");
    v9 = objc_claimAutoreleasedReturnValue();
    v10 = *p_rootModifier;
    *p_rootModifier = (SBSwitcherModifier *)v9;

    v11 = self->_modifierTimelineController;
    if (v11)
    {
      -[SBFluidSwitcherModifierTimelineController setVisible:](v11, "setVisible:", 0);
      v12 = self->_modifierTimelineController;
      self->_modifierTimelineController = 0;

    }
    goto LABEL_10;
  }
}

- (void)_updateModifierStackDebugLabel
{
  void *v3;
  char v4;
  double v5;
  double v6;
  id v7;

  -[SBSwitcherModifier stackDescription](self->_rootModifier, "stackDescription");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  -[UILabel text](self->_modifierStackDebugLabel, "text");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = objc_msgSend(v3, "isEqualToString:", v7);

  if ((v4 & 1) == 0)
  {
    -[UILabel setText:](self->_modifierStackDebugLabel, "setText:", v7);
    -[UILabel sizeThatFits:](self->_modifierStackDebugLabel, "sizeThatFits:", 400.0, 400.0);
    -[UILabel setFrame:](self->_modifierStackDebugLabel, "setFrame:", 5.0, 25.0, v5 + 20.0, v6 + 20.0);
  }

}

- (BOOL)_hitTestedToTopAffordance:(CGPoint)a3 window:(id)a4 forLeafAppLayout:(id)a5
{
  double y;
  double x;
  id v9;
  void *v10;
  char v11;

  y = a3.y;
  x = a3.x;
  v9 = a4;
  if (a5)
  {
    -[NSMutableDictionary objectForKey:](self->_liveContentOverlays, "objectForKey:", a5);
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    if ((objc_opt_respondsToSelector() & 1) != 0)
      v11 = objc_msgSend(v10, "hitTestedToTopAffordance:window:", v9, x, y);
    else
      v11 = 0;

  }
  else
  {
    v11 = 0;
  }

  return v11;
}

- (id)_adjustedGestureEventForGestureEvent:(id)a3 fromGestureManager:(id)a4
{
  id v6;
  id v7;
  void *v8;
  id v9;

  v6 = a3;
  v7 = a4;
  if (objc_msgSend(v6, "isWindowDragGestureEvent"))
  {
    objc_msgSend(v7, "contentViewController");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _convertWindowDragEvent:fromSwitcherContentViewController:](self, "_convertWindowDragEvent:fromSwitcherContentViewController:", v6, v8);
    v9 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v9 = v6;
  }

  return v9;
}

- (id)_convertWindowDragEvent:(id)a3 fromSwitcherContentViewController:(id)a4
{
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  SBFluidSwitcherViewController *v13;
  SBWindowDragSwitcherModifierEvent *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  SBWindowDragSwitcherModifierEvent *v23;
  void *v24;
  void *v26;
  void *v27;
  void *v28;
  void *v29;

  v7 = a3;
  v8 = a4;
  v9 = objc_opt_class();
  v10 = v8;
  if (v9)
  {
    if ((objc_opt_isKindOfClass() & 1) != 0)
      v11 = v10;
    else
      v11 = 0;
  }
  else
  {
    v11 = 0;
  }
  v12 = v11;

  v13 = self;
  if (!v12)
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v26 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v26, "handleFailureInMethod:object:file:lineNumber:description:", a2, v13, CFSTR("SBFluidSwitcherViewController.m"), 10275, CFSTR("switcherContentViewController must be a UIViewController"));

  }
  if (-[SBFluidSwitcherViewController isEqual:](v13, "isEqual:", v12))
  {
    v14 = (SBWindowDragSwitcherModifierEvent *)v7;
  }
  else
  {
    objc_msgSend(v12, "_sbWindowScene");
    v29 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _sbWindowScene](v13, "_sbWindowScene");
    v28 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "locationInContainerView");
    objc_msgSend(v29, "convertPoint:toNeighboringDisplayWindowScene:", v28);
    v16 = v15;
    v18 = v17;
    objc_msgSend(v29, "switcherController");
    v19 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v28, "switcherController");
    v27 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v19, "switcherCoordinator");
    v20 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "selectedAppLayout");
    v21 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v20, "convertAppLayout:fromSwitcherController:toSwitcherController:", v21, v19, v27);
    v22 = (void *)objc_claimAutoreleasedReturnValue();

    v23 = [SBWindowDragSwitcherModifierEvent alloc];
    objc_msgSend(v7, "gestureID");
    v24 = (void *)objc_claimAutoreleasedReturnValue();
    v14 = -[SBGestureSwitcherModifierEvent initWithGestureID:selectedAppLayout:gestureType:phase:](v23, "initWithGestureID:selectedAppLayout:gestureType:phase:", v24, v22, objc_msgSend(v7, "gestureType"), objc_msgSend(v7, "phase"));

    -[SBGestureSwitcherModifierEvent setLocationInContainerView:](v14, "setLocationInContainerView:", v16, v18);
    -[SBWindowDragSwitcherModifierEvent setDraggingFromContinuousExposeStrips:](v14, "setDraggingFromContinuousExposeStrips:", objc_msgSend(v7, "isDraggingFromContinuousExposeStrips"));
    objc_msgSend(v7, "locationInSelectedDisplayItem");
    -[SBWindowDragSwitcherModifierEvent setLocationInSelectedDisplayItem:](v14, "setLocationInSelectedDisplayItem:");
    objc_msgSend(v7, "sizeOfSelectedDisplayItem");
    -[SBWindowDragSwitcherModifierEvent setSizeOfSelectedDisplayItem:](v14, "setSizeOfSelectedDisplayItem:");

  }
  return v14;
}

- (void)_updateOverlaysTopAffordanceContextMenu
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _BYTE v12[128];
  uint64_t v13;

  v13 = *MEMORY[0x1E0C80C00];
  v8 = 0u;
  v9 = 0u;
  v10 = 0u;
  v11 = 0u;
  -[NSMutableDictionary allValues](self->_liveContentOverlays, "allValues", 0);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
  if (v3)
  {
    v4 = v3;
    v5 = *(_QWORD *)v9;
    do
    {
      v6 = 0;
      do
      {
        if (*(_QWORD *)v9 != v5)
          objc_enumerationMutation(v2);
        v7 = *(void **)(*((_QWORD *)&v8 + 1) + 8 * v6);
        if ((objc_opt_respondsToSelector() & 1) != 0)
          objc_msgSend(v7, "updateTopAffordanceContextMenu");
        ++v6;
      }
      while (v4 != v6);
      v4 = objc_msgSend(v2, "countByEnumeratingWithState:objects:count:", &v8, v12, 16);
    }
    while (v4);
  }

}

- (id)_homeScreenAppearanceController
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "homeScreenController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    v5 = v3;
  }
  else
  {
    +[SBUIController sharedInstance](SBUIController, "sharedInstance");
    v5 = (id)objc_claimAutoreleasedReturnValue();
  }
  v6 = v5;

  return v6;
}

- (id)_iconManager
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "homeScreenController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v3, "iconManager");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = v4;
  }
  else
  {
    +[SBIconController sharedInstance](SBIconController, "sharedInstance");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "iconManager");
    v6 = (id)objc_claimAutoreleasedReturnValue();

  }
  return v6;
}

- (id)_searchPresenter
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;

  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "homeScreenController");
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v3, "searchPresenter");
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  v5 = v4;
  if (v4)
  {
    v6 = v4;
  }
  else
  {
    +[SBIconController sharedInstance](SBIconController, "sharedInstance");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v7, "searchPresenter");
    v6 = (id)objc_claimAutoreleasedReturnValue();

  }
  return v6;
}

- (void)_updateChamoisDefaultsObserverIfNeeded
{
  unint64_t v3;
  BSDefaultObserver *chamoisDefaultsObserver;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void (**v10)(_QWORD);
  SBAppSwitcherDefaults *defaults;
  uint64_t v12;
  id v13;
  BSDefaultObserver *v14;
  BSDefaultObserver *v15;
  BSDefaultObserver *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  void *v20;
  SBFluidSwitcherViewController *v21;
  id v22;
  id location;
  _QWORD v24[5];

  v24[4] = *MEMORY[0x1E0C80C00];
  v3 = -[SBFluidSwitcherViewController _windowManagementStyle](self, "_windowManagementStyle");
  chamoisDefaultsObserver = self->_chamoisDefaultsObserver;
  if (v3 != 2 || chamoisDefaultsObserver)
  {
    if (v3 != 2)
    {
      if (chamoisDefaultsObserver)
      {
        -[BSDefaultObserver invalidate](chamoisDefaultsObserver, "invalidate");
        v16 = self->_chamoisDefaultsObserver;
        self->_chamoisDefaultsObserver = 0;

      }
    }
  }
  else
  {
    objc_initWeak(&location, self);
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "chamoisHideStrips");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    v24[0] = v5;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "chamoisHideDock");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    v24[1] = v6;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "chamoisHideStripsExternal");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    v24[2] = v7;
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "chamoisHideDockExternal");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v24[3] = v8;
    objc_msgSend(MEMORY[0x1E0C99D20], "arrayWithObjects:count:", v24, 4);
    v9 = (void *)objc_claimAutoreleasedReturnValue();

    v17 = MEMORY[0x1E0C809B0];
    v18 = 3221225472;
    v19 = __71__SBFluidSwitcherViewController__updateChamoisDefaultsObserverIfNeeded__block_invoke;
    v20 = &unk_1E8E9F280;
    objc_copyWeak(&v22, &location);
    v21 = self;
    v10 = (void (**)(_QWORD))MEMORY[0x1D17E5550](&v17);
    defaults = self->_defaults;
    v12 = MEMORY[0x1E0C80D38];
    v13 = MEMORY[0x1E0C80D38];
    -[SBAppSwitcherDefaults observeDefaults:onQueue:withBlock:](defaults, "observeDefaults:onQueue:withBlock:", v9, v12, v10, v17, v18, v19, v20);
    v14 = (BSDefaultObserver *)objc_claimAutoreleasedReturnValue();
    v15 = self->_chamoisDefaultsObserver;
    self->_chamoisDefaultsObserver = v14;

    v10[2](v10);
    objc_destroyWeak(&v22);

    objc_destroyWeak(&location);
  }
}

void __71__SBFluidSwitcherViewController__updateChamoisDefaultsObserverIfNeeded__block_invoke(uint64_t a1)
{
  unsigned __int8 *WeakRetained;
  unsigned __int8 *v3;
  void *v4;
  int v5;
  void *v6;
  int v7;
  int v8;
  void *v9;
  unsigned __int8 *v10;

  WeakRetained = (unsigned __int8 *)objc_loadWeakRetained((id *)(a1 + 40));
  v3 = WeakRetained;
  if (WeakRetained)
  {
    objc_msgSend(WeakRetained, "_sbWindowScene");
    v4 = (void *)objc_claimAutoreleasedReturnValue();
    v5 = objc_msgSend(v4, "isExtendedDisplayWindowScene");

    v6 = (void *)*((_QWORD *)v3 + 132);
    if (v5)
    {
      v7 = objc_msgSend(v6, "chamoisHideStripsExternal");
      v8 = objc_msgSend(*((id *)v3 + 132), "chamoisHideDockExternal");
    }
    else
    {
      v7 = objc_msgSend(v6, "chamoisHideStrips");
      v8 = objc_msgSend(*((id *)v3 + 132), "chamoisHideDock");
    }
    if (v3[1352] != v7 || v3[1353] != v8)
    {
      v3[1352] = v7;
      v3[1353] = v8;
      if (v7 && SBFIsChamoisStripDisabledWhenHiddenAvailable())
        *(_QWORD *)(*(_QWORD *)(a1 + 32) + 1680) &= ~1uLL;
      objc_msgSend(v3, "viewIfLoaded");
      v9 = (void *)objc_claimAutoreleasedReturnValue();

      if (v9)
      {
        v10 = v3;
        BSRunLoopPerformRelativeToCACommit();

      }
    }
  }

}

void __71__SBFluidSwitcherViewController__updateChamoisDefaultsObserverIfNeeded__block_invoke_2(uint64_t a1)
{
  void *v2;
  SBPerformTransitionSwitcherEventResponse *v3;
  SBMutableSwitcherTransitionRequest *v4;

  v4 = objc_alloc_init(SBMutableSwitcherTransitionRequest);
  -[SBSwitcherTransitionRequest setSource:](v4, "setSource:", 65);
  v2 = *(void **)(a1 + 32);
  v3 = -[SBPerformTransitionSwitcherEventResponse initWithTransitionRequest:gestureInitiated:]([SBPerformTransitionSwitcherEventResponse alloc], "initWithTransitionRequest:gestureInitiated:", v4, 0);
  objc_msgSend(v2, "_handleEventResponse:", v3);

}

- (id)_gestureManager
{
  void *v3;
  void *v4;
  void *v5;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((*(_BYTE *)&self->_dataSourceRespondsTo & 1) != 0)
  {
    objc_msgSend(v3, "switcherGestureManagerForSwitcherContentController:", self);
    v5 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = 0;
  }

  return v5;
}

- (id)_iconZoomContextProvider
{
  void *v3;
  void *v4;
  SBFluidSwitcherViewController *v5;
  SBFluidSwitcherViewController *v6;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((*(_BYTE *)&self->_dataSourceRespondsTo & 2) != 0)
  {
    objc_msgSend(v3, "switcherIconZoomContextProviderForSwitcherContentController:", self);
    v5 = (SBFluidSwitcherViewController *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v5 = self;
  }
  v6 = v5;

  return v6;
}

- (BOOL)_isSwitcherForegroundActive
{
  void *v2;
  void *v3;
  char v4;

  -[SBFluidSwitcherViewController _gestureManager](self, "_gestureManager");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  v3 = v2;
  if (v2)
    v4 = objc_msgSend(v2, "isSwitcherForegroundActive");
  else
    v4 = 0;

  return v4;
}

- (unint64_t)_windowManagementStyle
{
  void *v3;
  void *v4;
  unint64_t v5;

  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if ((*((_BYTE *)&self->_dataSourceRespondsTo + 3) & 1) != 0)
    v5 = objc_msgSend(v3, "windowManagementStyleForSwitcherContentController:", self);
  else
    v5 = 0;

  return v5;
}

- (BOOL)gestureRecognizer:(id)a3 shouldReceiveTouch:(id)a4
{
  char v4;
  double v6;
  CGFloat v7;
  double v8;
  CGFloat v9;
  void *v10;
  char v11;
  BOOL v12;
  char isKindOfClass;
  NSObject *v14;
  NSString *debugName;
  void *v16;
  id v17;
  int v19;
  NSString *v20;
  __int16 v21;
  void *v22;
  __int16 v23;
  id v24;
  uint64_t v25;
  NSPoint v26;

  v25 = *MEMORY[0x1E0C80C00];
  if (self->_dismissTapGestureRecognizer == a3)
  {
    objc_msgSend(a4, "locationInView:", self->_contentView);
    v7 = v6;
    v9 = v8;
    -[SBFluidSwitcherViewController _firstZOrderedSubviewViewAtLocation:](self, "_firstZOrderedSubviewViewAtLocation:");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) != 0)
    {
      v11 = 0;
      v12 = v10 == 0;
    }
    else
    {
      objc_opt_class();
      isKindOfClass = objc_opt_isKindOfClass();
      v11 = isKindOfClass ^ 1;
      v12 = v10 == 0;
      if (v10 && (isKindOfClass & 1) == 0)
      {
        SBLogAppSwitcher();
        v14 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
        {
          debugName = self->_debugName;
          v26.x = v7;
          v26.y = v9;
          NSStringFromPoint(v26);
          v16 = (void *)objc_claimAutoreleasedReturnValue();
          v19 = 138543874;
          v20 = debugName;
          v21 = 2114;
          v22 = v16;
          v23 = 2114;
          v24 = (id)objc_opt_class();
          v17 = v24;
          _os_log_impl(&dword_1D0540000, v14, OS_LOG_TYPE_DEFAULT, "[%{public}@] Dismissing switcher for touch at location %{public}@ on view of class: %{public}@", (uint8_t *)&v19, 0x20u);

        }
        v12 = 0;
      }
    }
    v4 = v12 | v11;

  }
  else
  {
    v4 = 1;
  }
  return v4 & 1;
}

- (id)_firstZOrderedSubviewViewAtLocation:(CGPoint)a3
{
  double y;
  double x;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t i;
  void *v12;
  void *v13;
  id v14;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _BYTE v20[128];
  uint64_t v21;

  y = a3.y;
  x = a3.x;
  v21 = *MEMORY[0x1E0C80C00];
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v19 = 0u;
  -[SBFluidSwitcherContentView subviews](self->_contentView, "subviews", 0);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "reverseObjectEnumerator");
  v7 = (void *)objc_claimAutoreleasedReturnValue();

  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v17;
    while (2)
    {
      for (i = 0; i != v9; ++i)
      {
        if (*(_QWORD *)v17 != v10)
          objc_enumerationMutation(v7);
        v12 = *(void **)(*((_QWORD *)&v16 + 1) + 8 * i);
        -[SBFluidSwitcherContentView convertPoint:toView:](self->_contentView, "convertPoint:toView:", v12, x, y);
        objc_msgSend(v12, "hitTest:withEvent:", 0);
        v13 = (void *)objc_claimAutoreleasedReturnValue();

        if (v13)
        {
          v14 = v12;
          goto LABEL_11;
        }
      }
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v16, v20, 16);
      if (v9)
        continue;
      break;
    }
  }
  v14 = 0;
LABEL_11:

  return v14;
}

- (void)slideOverTongueViewTapped:(id)a3
{
  SBTapSlideOverTongueSwitcherModifierEvent *v4;

  if (self->_slideOverTongue == a3)
  {
    v4 = objc_alloc_init(SBTapSlideOverTongueSwitcherModifierEvent);
    -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

  }
}

- (void)continuousExposeStripTongueViewTapped:(id)a3
{
  unint64_t continuousExposeStripsPresentationOptions;
  SBUpdateLayoutSwitcherEventResponse *v5;

  continuousExposeStripsPresentationOptions = self->_continuousExposeStripsPresentationOptions;
  if ((continuousExposeStripsPresentationOptions & 1) == 0)
  {
    self->_continuousExposeStripsPresentationOptions = continuousExposeStripsPresentationOptions | 1;
    v5 = -[SBUpdateLayoutSwitcherEventResponse initWithOptions:updateMode:]([SBUpdateLayoutSwitcherEventResponse alloc], "initWithOptions:updateMode:", 30, 3);
    -[SBFluidSwitcherViewController _handleEventResponse:](self, "_handleEventResponse:", v5);
    -[SBFluidSwitcherViewController dismissContinuousExposeStripEdgeProtectTongue](self, "dismissContinuousExposeStripEdgeProtectTongue");

  }
}

- (void)eventSource:(id)a3 userTouchedApplication:(id)a4
{
  SBUpdateLayoutSwitcherEventResponse *v5;

  if (self->_continuousExposeStripsPresentationOptions)
  {
    self->_continuousExposeStripsPresentationOptions = 0;
    v5 = -[SBUpdateLayoutSwitcherEventResponse initWithOptions:updateMode:]([SBUpdateLayoutSwitcherEventResponse alloc], "initWithOptions:updateMode:", 12, 3);
    -[SBFluidSwitcherViewController _handleEventResponse:](self, "_handleEventResponse:", v5);

  }
}

- (void)pointerDidMoveToFromWindowScene:(id)a3 toWindowScene:(id)a4
{
  id v6;
  id v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  SBPointerCrossedDisplayBoundarySwitcherModifierEvent *v13;
  id v14;

  v14 = a3;
  v6 = a4;
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v7 = (id)objc_claimAutoreleasedReturnValue();
  if (v6 && v14 && v7)
  {
    if (v7 == v14)
    {
      objc_msgSend((id)SBApp, "externalDisplayService");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "_fbsDisplayIdentity");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "_fbsDisplayIdentity");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "preferredArrangementOfDisplay:relativeTo:", v9, v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 1;
    }
    else
    {
      if (v7 != v6)
        goto LABEL_10;
      objc_msgSend((id)SBApp, "externalDisplayService");
      v8 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v14, "_fbsDisplayIdentity");
      v9 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v6, "_fbsDisplayIdentity");
      v10 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v8, "preferredArrangementOfDisplay:relativeTo:", v9, v10);
      v11 = (void *)objc_claimAutoreleasedReturnValue();
      v12 = 0;
    }

    v13 = -[SBPointerCrossedDisplayBoundarySwitcherModifierEvent initWithDirection:edge:]([SBPointerCrossedDisplayBoundarySwitcherModifierEvent alloc], "initWithDirection:edge:", v12, objc_msgSend(v11, "edge"));
    if (v13)
    {
      -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v13);

    }
  }
LABEL_10:

}

- (void)assistantWillAppear:(id)a3
{
  SBAssistantPresentationChangedSwitcherModifierEvent *v4;

  self->_assistantPresentationState = 2;
  v4 = objc_alloc_init(SBAssistantPresentationChangedSwitcherModifierEvent);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

}

- (void)assistantDidAppear:(id)a3
{
  SBAssistantPresentationChangedSwitcherModifierEvent *v4;

  self->_assistantPresentationState = 3;
  v4 = objc_alloc_init(SBAssistantPresentationChangedSwitcherModifierEvent);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

}

- (void)assistantWillDisappear:(id)a3
{
  SBAssistantPresentationChangedSwitcherModifierEvent *v4;

  self->_assistantPresentationState = 1;
  v4 = objc_alloc_init(SBAssistantPresentationChangedSwitcherModifierEvent);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

}

- (void)assistantDidDisappear:(id)a3
{
  SBAssistantPresentationChangedSwitcherModifierEvent *v4;

  self->_assistantPresentationState = 0;
  v4 = objc_alloc_init(SBAssistantPresentationChangedSwitcherModifierEvent);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

}

- (void)assistantDidChangePresentation:(id)a3
{
  SBAssistantPresentationChangedSwitcherModifierEvent *v4;

  v4 = objc_alloc_init(SBAssistantPresentationChangedSwitcherModifierEvent);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);

}

- (double)iconScaleForAppLayout:(id)a3
{
  void *v3;
  void *v4;
  double v5;
  double v6;

  -[SBFluidSwitcherViewController iconViewForAppLayout:](self, "iconViewForAppLayout:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "iconContentScale");
    v6 = v5;
  }
  else
  {
    v6 = 1.0;
  }

  return v6;
}

- (double)iconCornerRadiusForAppLayout:(id)a3
{
  void *v3;
  void *v4;
  double v5;
  double v6;

  -[SBFluidSwitcherViewController iconViewForAppLayout:](self, "iconViewForAppLayout:", a3);
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  v4 = v3;
  if (v3)
  {
    objc_msgSend(v3, "iconImageInfo");
    v6 = v5;
  }
  else
  {
    v6 = 0.0;
  }

  return v6;
}

- (id)iconLocationForAppLayout:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v5 = (id)*MEMORY[0x1E0DAA9E0];
  -[SBFluidSwitcherViewController iconViewForAppLayout:](self, "iconViewForAppLayout:", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "location");
    v8 = objc_claimAutoreleasedReturnValue();

    v5 = (id)v8;
  }

  return v5;
}

- (id)iconGridSizeClassForAppLayout:(id)a3
{
  id v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;

  v5 = (id)*MEMORY[0x1E0DAA750];
  -[SBFluidSwitcherViewController iconViewForAppLayout:](self, "iconViewForAppLayout:", a3);
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  v7 = v6;
  if (v6)
  {
    objc_msgSend(v6, "icon");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "gridSizeClass");
    v9 = objc_claimAutoreleasedReturnValue();

    v5 = (id)v9;
  }

  return v5;
}

- (BOOL)anyDisplayItemForAppLayoutOverlapsFloatingDock:(id)a3
{
  id v4;
  void *v5;
  NSMutableDictionary *visibleItemContainers;
  void *v7;
  void *v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  CGFloat v14;
  double v15;
  CGFloat v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double v26;
  CGFloat v27;
  double v28;
  CGFloat v29;
  BOOL v30;
  CGRect v32;
  CGRect v33;

  v4 = a3;
  if (+[SBFloatingDockController isFloatingDockSupported](SBFloatingDockController, "isFloatingDockSupported"))
  {
    -[SBFluidSwitcherViewController _floatingDockController](self, "_floatingDockController");
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    if (objc_msgSend(v5, "isFloatingDockPresented"))
    {
      visibleItemContainers = self->_visibleItemContainers;
      objc_msgSend(v4, "anyLeafAppLayout");
      v7 = (void *)objc_claimAutoreleasedReturnValue();
      -[NSMutableDictionary objectForKey:](visibleItemContainers, "objectForKey:", v7);
      v8 = (void *)objc_claimAutoreleasedReturnValue();

      if (v8)
      {
        objc_msgSend(v5, "floatingDockScreenPresentationFrame");
        v10 = v9;
        v12 = v11;
        v14 = v13;
        v16 = v15;
        objc_msgSend(v8, "window");
        v17 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "window");
        v18 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "superview");
        v19 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v8, "layer");
        v20 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v20, "presentationLayer");
        v21 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v21, "frame");
        objc_msgSend(v19, "convertRect:toCoordinateSpace:", v17);
        objc_msgSend(v18, "_convertRectToSceneReferenceSpace:");
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;

        v32.origin.x = v10;
        v32.origin.y = v12;
        v32.size.width = v14;
        v32.size.height = v16;
        v33.origin.x = v23;
        v33.origin.y = v25;
        v33.size.width = v27;
        v33.size.height = v29;
        v30 = CGRectIntersectsRect(v32, v33);

      }
      else
      {
        v30 = 0;
      }

    }
    else
    {
      v30 = 0;
    }

  }
  else
  {
    v30 = 0;
  }

  return v30;
}

- (void)_reduceMotionStatusDidChange:(id)a3
{
  SBReduceMotionChangedSwitcherModifierEvent *v4;

  v4 = objc_alloc_init(SBReduceMotionChangedSwitcherModifierEvent);
  -[SBFluidSwitcherViewController _dispatchEventAndHandleAction:](self, "_dispatchEventAndHandleAction:", v4);
  -[SBFluidSwitcherViewController _updateSwitcherBackdropViewPresence](self, "_updateSwitcherBackdropViewPresence");

}

- (id)sourceLeafAppLayoutForCenterItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  int v16;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, void *, uint64_t, _BYTE *);
  void *v21;
  id v22;
  id v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  void (*v30)(uint64_t);
  id v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t);
  id v37;

  v4 = a3;
  +[SBApplicationController sharedInstance](SBApplicationController, "sharedInstance");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "applicationForDisplayItem:", v4);
  v6 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v6, "_dataStore");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "uniqueIdentifier");
  v8 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "sceneStoreForIdentifier:creatingIfNecessary:", v8, 0);
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v9, "objectForKey:", CFSTR("sourceSceneIdentifier"));
  v10 = (void *)objc_claimAutoreleasedReturnValue();
  if (!v10
    || (objc_msgSend(v4, "uniqueIdentifier"),
        v11 = (void *)objc_claimAutoreleasedReturnValue(),
        objc_msgSend(v10, "objectForKey:", v11),
        v12 = (void *)objc_claimAutoreleasedReturnValue(),
        v11,
        !v12))
  {
    v14 = 0;
LABEL_9:
    v12 = 0;
    goto LABEL_10;
  }
  v32 = 0;
  v33 = &v32;
  v34 = 0x3032000000;
  v35 = __Block_byref_object_copy__13;
  v36 = __Block_byref_object_dispose__13;
  v37 = 0;
  v26 = 0;
  v27 = &v26;
  v28 = 0x3032000000;
  v29 = __Block_byref_object_copy__13;
  v30 = __Block_byref_object_dispose__13;
  v31 = 0;
  -[SBFluidSwitcherViewController appLayouts](self, "appLayouts");
  v13 = (void *)objc_claimAutoreleasedReturnValue();
  v18 = MEMORY[0x1E0C809B0];
  v19 = 3221225472;
  v20 = __66__SBFluidSwitcherViewController_sourceLeafAppLayoutForCenterItem___block_invoke;
  v21 = &unk_1E8EA51C8;
  v22 = v4;
  v14 = v12;
  v23 = v14;
  v24 = &v32;
  v25 = &v26;
  objc_msgSend(v13, "enumerateObjectsUsingBlock:", &v18);

  if (v33[5] && (v15 = (void *)v27[5]) != 0)
  {
    objc_msgSend(v15, "leafAppLayoutForItem:", v18, v19, v20, v21, v22);
    v12 = (void *)objc_claimAutoreleasedReturnValue();
    v16 = 0;
  }
  else
  {
    v16 = 1;
  }

  _Block_object_dispose(&v26, 8);
  _Block_object_dispose(&v32, 8);

  if (v16)
    goto LABEL_9;
LABEL_10:

  return v12;
}

void __66__SBFluidSwitcherViewController_sourceLeafAppLayoutForCenterItem___block_invoke(uint64_t a1, void *a2, uint64_t a3, _BYTE *a4)
{
  id v6;
  id v7;
  _QWORD v8[4];
  id v9;
  id v10;
  id v11;
  __int128 v12;

  v6 = a2;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 3221225472;
  v8[2] = __66__SBFluidSwitcherViewController_sourceLeafAppLayoutForCenterItem___block_invoke_2;
  v8[3] = &unk_1E8EA51A0;
  v9 = *(id *)(a1 + 32);
  v10 = *(id *)(a1 + 40);
  v12 = *(_OWORD *)(a1 + 48);
  v11 = v6;
  v7 = v11;
  objc_msgSend(v11, "enumerate:", v8);
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 48) + 8) + 40)
    && *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40))
  {
    *a4 = 1;
  }

}

void __66__SBFluidSwitcherViewController_sourceLeafAppLayoutForCenterItem___block_invoke_2(uint64_t a1, uint64_t a2, void *a3, _BYTE *a4)
{
  uint64_t v7;
  void *v8;
  int v9;
  id v10;

  v10 = a3;
  v7 = objc_msgSend(*(id *)(a1 + 32), "type");
  if (v7 == objc_msgSend(v10, "type"))
  {
    objc_msgSend(v10, "uniqueIdentifier");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    v9 = objc_msgSend(v8, "hasSuffix:", *(_QWORD *)(a1 + 40));

    if (v9)
    {
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8) + 40), a3);
      objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 64) + 8) + 40), *(id *)(a1 + 48));
      *a4 = 1;
    }
  }

}

- (SBBestAppSuggestion)bestAppSuggestion
{
  return self->_bestAppSuggestion;
}

- (void)setBestAppSuggestion:(id)a3
{
  objc_storeStrong((id *)&self->_bestAppSuggestion, a3);
}

- (BOOL)isAsyncRenderingDisabled
{
  return self->_asyncRenderingDisabled;
}

- (void)setScrollView:(id)a3
{
  objc_storeStrong((id *)&self->_scrollView, a3);
}

- (SBFluidSwitcherContentView)contentView
{
  return self->_contentView;
}

- (void)setContentView:(id)a3
{
  objc_storeStrong((id *)&self->_contentView, a3);
}

- (void)setLayoutContext:(id)a3
{
  objc_storeStrong((id *)&self->_layoutContext, a3);
}

- (void)setVisibleItemContainers:(id)a3
{
  objc_storeStrong((id *)&self->_visibleItemContainers, a3);
}

- (NSMutableDictionary)visibleOverlayAccessoryViews
{
  return self->_visibleOverlayAccessoryViews;
}

- (void)setVisibleOverlayAccessoryViews:(id)a3
{
  objc_storeStrong((id *)&self->_visibleOverlayAccessoryViews, a3);
}

- (NSMutableDictionary)visibleUnderlayAccessoryViews
{
  return self->_visibleUnderlayAccessoryViews;
}

- (void)setVisibleUnderlayAccessoryViews:(id)a3
{
  objc_storeStrong((id *)&self->_visibleUnderlayAccessoryViews, a3);
}

- (NSMutableDictionary)externalDropletZoomUpTokens
{
  return self->_externalDropletZoomUpTokens;
}

- (void)setExternalDropletZoomUpTokens:(id)a3
{
  objc_storeStrong((id *)&self->_externalDropletZoomUpTokens, a3);
}

- (NSMutableDictionary)visibleItemContainerBackdropViews
{
  return self->_visibleItemContainerBackdropViews;
}

- (void)setVisibleItemContainerBackdropViews:(id)a3
{
  objc_storeStrong((id *)&self->_visibleItemContainerBackdropViews, a3);
}

- (NSMutableSet)focusedItemBackdropsBeingRemoved
{
  return self->_focusedItemBackdropsBeingRemoved;
}

- (void)setFocusedItemBackdropsBeingRemoved:(id)a3
{
  objc_storeStrong((id *)&self->_focusedItemBackdropsBeingRemoved, a3);
}

- (NSMutableDictionary)liveContentOverlays
{
  return self->_liveContentOverlays;
}

- (NSMutableArray)hiddenRecycledItemContainers
{
  return self->_hiddenRecycledItemContainers;
}

- (void)setHiddenRecycledItemContainers:(id)a3
{
  objc_storeStrong((id *)&self->_hiddenRecycledItemContainers, a3);
}

- (void)setVisibleShelves:(id)a3
{
  objc_storeStrong((id *)&self->_visibleShelves, a3);
}

- (NSMutableSet)visibleShelvesHostedInContentView
{
  return self->_visibleShelvesHostedInContentView;
}

- (void)setVisibleShelvesHostedInContentView:(id)a3
{
  objc_storeStrong((id *)&self->_visibleShelvesHostedInContentView, a3);
}

- (NSMutableDictionary)hiddenAppLayoutAssertionsForShelves
{
  return self->_hiddenAppLayoutAssertionsForShelves;
}

- (void)setHiddenAppLayoutAssertionsForShelves:(id)a3
{
  objc_storeStrong((id *)&self->_hiddenAppLayoutAssertionsForShelves, a3);
}

- (SBScrollSwitcherModifierEvent)currentScrollEvent
{
  return self->_currentScrollEvent;
}

- (void)setCurrentScrollEvent:(id)a3
{
  objc_storeStrong((id *)&self->_currentScrollEvent, a3);
}

- (SBFluidSwitcherButton)plusButton
{
  return self->_plusButton;
}

- (void)setPlusButton:(id)a3
{
  objc_storeStrong((id *)&self->_plusButton, a3);
}

- (SBFluidSwitcherTitledButton)reopenClosedWindowsButton
{
  return self->_reopenClosedWindowsButton;
}

- (void)setReopenClosedWindowsButton:(id)a3
{
  objc_storeStrong((id *)&self->_reopenClosedWindowsButton, a3);
}

- (SBSwitcherModifier)rootModifier
{
  return self->_rootModifier;
}

- (void)setRootModifier:(id)a3
{
  objc_storeStrong((id *)&self->_rootModifier, a3);
}

- (SBSwitcherModifier)reduceMotionModifier
{
  return self->_reduceMotionModifier;
}

- (void)setReduceMotionModifier:(id)a3
{
  objc_storeStrong((id *)&self->_reduceMotionModifier, a3);
}

- (NSMutableDictionary)hiddenIconViews
{
  return self->_hiddenIconViews;
}

- (void)setHiddenIconViews:(id)a3
{
  objc_storeStrong((id *)&self->_hiddenIconViews, a3);
}

- (NSMutableDictionary)hiddenIconViewContainers
{
  return self->_hiddenIconViewContainers;
}

- (void)setHiddenIconViewContainers:(id)a3
{
  objc_storeStrong((id *)&self->_hiddenIconViewContainers, a3);
}

- (SBFloatingDockBehaviorAssertion)inAppFloatingDockBehaviorAssertion
{
  return self->_inAppFloatingDockBehaviorAssertion;
}

- (void)setInAppFloatingDockBehaviorAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_inAppFloatingDockBehaviorAssertion, a3);
}

- (SBFloatingDockBehaviorAssertion)transientOverlayFloatingDockBehaviorAssertion
{
  return self->_transientOverlayFloatingDockBehaviorAssertion;
}

- (void)setTransientOverlayFloatingDockBehaviorAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_transientOverlayFloatingDockBehaviorAssertion, a3);
}

- (SBFloatingDockBehaviorAssertion)switcherFloatingDockBehaviorAssertion
{
  return self->_switcherFloatingDockBehaviorAssertion;
}

- (void)setSwitcherFloatingDockBehaviorAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_switcherFloatingDockBehaviorAssertion, a3);
}

- (SBFloatingDockWindowLevelAssertion)switcherFloatingDockWindowLevelAssertion
{
  return self->_switcherFloatingDockWindowLevelAssertion;
}

- (void)setSwitcherFloatingDockWindowLevelAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_switcherFloatingDockWindowLevelAssertion, a3);
}

- (SBFloatingDockWindowLevelAssertion)transientOverlayFloatingDockWindowLevelAssertion
{
  return self->_transientOverlayFloatingDockWindowLevelAssertion;
}

- (void)setTransientOverlayFloatingDockWindowLevelAssertion:(id)a3
{
  objc_storeStrong((id *)&self->_transientOverlayFloatingDockWindowLevelAssertion, a3);
}

- (void)setHomeGrabberSettings:(id)a3
{
  objc_storeStrong((id *)&self->_homeGrabberSettings, a3);
}

- (UILabel)modifierStackDebugLabel
{
  return self->_modifierStackDebugLabel;
}

- (void)setModifierStackDebugLabel:(id)a3
{
  objc_storeStrong((id *)&self->_modifierStackDebugLabel, a3);
}

- (NSMutableDictionary)animatableProperties
{
  return self->_animatableProperties;
}

- (void)setAnimatableProperties:(id)a3
{
  objc_storeStrong((id *)&self->_animatableProperties, a3);
}

- (SBIconView)bounceIconView
{
  return self->_bounceIconView;
}

- (void)setBounceIconView:(id)a3
{
  objc_storeStrong((id *)&self->_bounceIconView, a3);
}

- (unint64_t)bounceIconGenerationCount
{
  return self->_bounceIconGenerationCount;
}

- (void)setBounceIconGenerationCount:(unint64_t)a3
{
  self->_bounceIconGenerationCount = a3;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_bounceIconView, 0);
  objc_storeStrong((id *)&self->_animatableProperties, 0);
  objc_storeStrong((id *)&self->_wallpaperRequireAssertion, 0);
  objc_storeStrong((id *)&self->_modifierStackDebugLabel, 0);
  objc_destroyWeak((id *)&self->_pipViewMorphAnimator);
  objc_storeStrong((id *)&self->_homeGrabberSettings, 0);
  objc_storeStrong((id *)&self->_transientOverlayFloatingDockWindowLevelAssertion, 0);
  objc_storeStrong((id *)&self->_switcherFloatingDockWindowLevelAssertion, 0);
  objc_storeStrong((id *)&self->_switcherFloatingDockBehaviorAssertion, 0);
  objc_storeStrong((id *)&self->_transientOverlayFloatingDockBehaviorAssertion, 0);
  objc_storeStrong((id *)&self->_inAppFloatingDockBehaviorAssertion, 0);
  objc_storeStrong((id *)&self->_hiddenIconViewContainers, 0);
  objc_storeStrong((id *)&self->_hiddenIconViews, 0);
  objc_storeStrong((id *)&self->_reduceMotionModifier, 0);
  objc_storeStrong((id *)&self->_rootModifier, 0);
  objc_storeStrong((id *)&self->_reopenClosedWindowsButton, 0);
  objc_storeStrong((id *)&self->_plusButton, 0);
  objc_storeStrong((id *)&self->_currentScrollEvent, 0);
  objc_storeStrong((id *)&self->_hiddenAppLayoutAssertionsForShelves, 0);
  objc_storeStrong((id *)&self->_visibleShelvesHostedInContentView, 0);
  objc_storeStrong((id *)&self->_visibleShelves, 0);
  objc_storeStrong((id *)&self->_hiddenRecycledItemContainers, 0);
  objc_storeStrong((id *)&self->_liveContentOverlays, 0);
  objc_storeStrong((id *)&self->_focusedItemBackdropsBeingRemoved, 0);
  objc_storeStrong((id *)&self->_visibleItemContainerBackdropViews, 0);
  objc_storeStrong((id *)&self->_externalDropletZoomUpTokens, 0);
  objc_storeStrong((id *)&self->_visibleUnderlayAccessoryViews, 0);
  objc_storeStrong((id *)&self->_visibleOverlayAccessoryViews, 0);
  objc_storeStrong((id *)&self->_visibleItemContainers, 0);
  objc_storeStrong((id *)&self->_layoutContext, 0);
  objc_storeStrong((id *)&self->_contentView, 0);
  objc_storeStrong((id *)&self->_scrollView, 0);
  objc_storeStrong((id *)&self->_bestAppSuggestion, 0);
  objc_destroyWeak((id *)&self->_dataSource);
  objc_destroyWeak((id *)&self->_delegate);
  objc_storeStrong((id *)&self->_applicationRestrictionUpdatePendingAssertion, 0);
  objc_storeStrong((id *)&self->_continuousExposeStripTongue, 0);
  objc_storeStrong((id *)&self->_continuousExposeStripTongueBackdropCaptureLayoutElement, 0);
  objc_storeStrong((id *)&self->_continuousExposeStripTongueCaptureOnlyBackdropView, 0);
  objc_storeStrong((id *)&self->_continuousExposeStripCaptureAndBlurHomeScreenBackdropView, 0);
  objc_storeStrong((id *)&self->_displayItemLayoutAttributesCalculator, 0);
  objc_storeStrong((id *)&self->_itemContainerToResizeUsingPointer, 0);
  objc_storeStrong((id *)&self->_appLayoutsForContinuousExposeIdentifiers, 0);
  objc_storeStrong((id *)&self->_continuousExposeIdentifiersInStrip, 0);
  objc_storeStrong((id *)&self->_continuousExposeIdentifiersInSwitcher, 0);
  objc_storeStrong((id *)&self->_foregroundingAppLayouts, 0);
  objc_storeStrong((id *)&self->_cachedOrderedAllLayoutElementViews, 0);
  objc_storeStrong((id *)&self->_shadowPathDisplayLink, 0);
  objc_storeStrong((id *)&self->_shadowPathDisplayLinkRequiringReasons, 0);
  objc_storeStrong((id *)&self->_pendingCenterWindowCleanupAction, 0);
  objc_storeStrong(&self->_centerWindowInAppMorphCompletion, 0);
  objc_storeStrong((id *)&self->_centerWindowActivationAnimationContexts, 0);
  objc_storeStrong((id *)&self->_rootDestOutClippingView, 0);
  objc_storeStrong((id *)&self->_systemApertureShadowAssertion, 0);
  objc_storeStrong((id *)&self->_systemApertureKeyLineAssertionsByInvalidationUUID, 0);
  objc_storeStrong((id *)&self->_systemApertureGlobalSuppressionAssertionsByInvalidationUUID, 0);
  objc_storeStrong((id *)&self->_systemApertureContentSuppressionAssertionsByInvalidationUUID, 0);
  objc_storeStrong((id *)&self->_systemApertureContentSuppressionAssertionsForGesture, 0);
  objc_storeStrong((id *)&self->_underlayAccessoryViewsReusePool, 0);
  objc_storeStrong((id *)&self->_overlayAccessoryViewsReusePool, 0);
  objc_storeStrong((id *)&self->_shelfFocusedDisplayItems, 0);
  objc_storeStrong((id *)&self->_shelfBackgroundView, 0);
  objc_storeStrong((id *)&self->_bezelEffectsPortalObserverToken, 0);
  objc_storeStrong((id *)&self->_bezelEffectsLayoutElement, 0);
  objc_storeStrong((id *)&self->_bezelEffectsPortalView, 0);
  objc_storeStrong((id *)&self->_slideOverTongueLayoutElement, 0);
  objc_storeStrong((id *)&self->_slideOverTongue, 0);
  objc_storeStrong((id *)&self->_genericAccessoryLayoutElement, 0);
  objc_storeStrong((id *)&self->_dimmingViewLayoutElement, 0);
  objc_storeStrong((id *)&self->_dimmingView, 0);
  objc_storeStrong((id *)&self->_backdropLayoutElement, 0);
  objc_storeStrong((id *)&self->_backdropView, 0);
  objc_storeStrong((id *)&self->_stashedContentView, 0);
  objc_storeStrong((id *)&self->_borrowableScrollViewPanGestureRecognizer, 0);
  objc_storeStrong((id *)&self->_outstandingAnimations, 0);
  objc_storeStrong((id *)&self->_chamoisDefaultsObserver, 0);
  objc_storeStrong((id *)&self->_stateCaptureInvalidatable, 0);
  objc_storeStrong((id *)&self->_debugName, 0);
  objc_storeStrong(&self->_activeTransitionSubcompletionGenerator, 0);
  objc_storeStrong((id *)&self->_leafAppLayoutsToRecencyAppLayouts, 0);
  objc_storeStrong((id *)&self->_leafAppLayoutsToAdjustedAppLayouts, 0);
  objc_storeStrong((id *)&self->_visibleAdjustedAppLayouts, 0);
  objc_storeStrong((id *)&self->_requestedHiddenAppLayouts, 0);
  objc_storeStrong((id *)&self->_cachedAdjustedLeafAppLayouts, 0);
  objc_storeStrong((id *)&self->_cachedAdjustedAppLayouts, 0);
  objc_storeStrong((id *)&self->_modifierTimelineController, 0);
  objc_storeStrong((id *)&self->_hitTestBlockerView, 0);
  objc_storeStrong((id *)&self->_crossfadeSnapshotView, 0);
  objc_storeStrong((id *)&self->_dismissTapGestureRecognizer, 0);
  objc_storeStrong((id *)&self->_deferOrientationUpdatesAssertion, 0);
  objc_storeStrong((id *)&self->_reduceMotionFeedbackGenerator, 0);
  objc_storeStrong((id *)&self->_flyInFeedbackGenerator, 0);
  objc_storeStrong((id *)&self->_emptySwitcherFeedbackGenerator, 0);
  objc_storeStrong((id *)&self->_pendingTransitionContext, 0);
  objc_storeStrong((id *)&self->_fluidSwitcherAssertionReason, 0);
  objc_storeStrong((id *)&self->_lastKeyboardSuppressionMode, 0);
  objc_storeStrong((id *)&self->_lastAppLayoutsToResignActive, 0);
  objc_storeStrong((id *)&self->_resignActiveAssertions, 0);
  objc_storeStrong((id *)&self->_resignActiveAssertion, 0);
  objc_storeStrong((id *)&self->_transitionBeginResignActiveAssertion, 0);
  objc_storeStrong((id *)&self->_sheetMetricsCache, 0);
  objc_storeStrong((id *)&self->_settings, 0);
  objc_storeStrong((id *)&self->_defaults, 0);
  objc_storeStrong((id *)&self->_lockoutVCProvider, 0);
  objc_storeStrong((id *)&self->_snapshotCache, 0);
  objc_storeStrong((id *)&self->_pageContentViewProvider, 0);
  objc_storeStrong((id *)&self->_appLayoutToTitleItemController, 0);
  objc_storeStrong((id *)&self->_liveContentOverlayCoordinator, 0);
  objc_storeStrong((id *)&self->_sceneManager, 0);
  objc_storeStrong((id *)&self->_layoutStateTransitionCoordinator, 0);
}

- (BOOL)shouldMorphToPIPForTransitionContext:(id)a3
{
  id v4;
  void *v5;
  char v6;

  v4 = a3;
  -[SBFluidSwitcherViewController dataSource](self, "dataSource");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if ((objc_opt_respondsToSelector() & 1) != 0)
    v6 = objc_msgSend(v5, "switcherContentController:shouldMorphToPIPForTransitionContext:", self, v4);
  else
    v6 = 0;

  return v6;
}

- (id)_webClipIdentifierForAppClipBundleIdentifier:(id)a3 sceneIdentifier:(id)a4
{
  void *v5;
  id v6;
  void *v7;
  void *v8;
  void *v9;

  v5 = (void *)MEMORY[0x1E0D23068];
  v6 = a4;
  objc_msgSend(v5, "storeForApplication:", a3);
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v7, "sceneStoreForIdentifier:creatingIfNecessary:", v6, 0);
  v8 = (void *)objc_claimAutoreleasedReturnValue();

  objc_msgSend(v8, "objectForKey:", CFSTR("appClipIdentifier"));
  v9 = (void *)objc_claimAutoreleasedReturnValue();

  return v9;
}

+ (id)_mediumGridSizeClassesForIconZoom
{
  if (_mediumGridSizeClassesForIconZoom_onceToken != -1)
    dispatch_once(&_mediumGridSizeClassesForIconZoom_onceToken, &__block_literal_global_216);
  return (id)_mediumGridSizeClassesForIconZoom_gridSizeClasses;
}

void __74__SBFluidSwitcherViewController_Common___mediumGridSizeClassesForIconZoom__block_invoke()
{
  id v0;
  uint64_t v1;
  void *v2;

  v0 = objc_alloc(MEMORY[0x1E0DAA488]);
  v1 = objc_msgSend(v0, "initWithGridSizeClass:", *MEMORY[0x1E0DAA770]);
  v2 = (void *)_mediumGridSizeClassesForIconZoom_gridSizeClasses;
  _mediumGridSizeClassesForIconZoom_gridSizeClasses = v1;

}

+ (id)_largeGridSizeClassesForIconZoom
{
  if (_largeGridSizeClassesForIconZoom_onceToken != -1)
    dispatch_once(&_largeGridSizeClassesForIconZoom_onceToken, &__block_literal_global_9_3);
  return (id)_largeGridSizeClassesForIconZoom_gridSizeClasses;
}

void __73__SBFluidSwitcherViewController_Common___largeGridSizeClassesForIconZoom__block_invoke()
{
  id v0;
  uint64_t v1;
  void *v2;
  id v3;

  v0 = objc_alloc(MEMORY[0x1E0DAA488]);
  objc_msgSend(MEMORY[0x1E0C99E60], "setWithObjects:", *MEMORY[0x1E0DAA768], *MEMORY[0x1E0DAA778], *MEMORY[0x1E0DAA758], 0);
  v3 = (id)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "initWithGridSizeClasses:", v3);
  v2 = (void *)_largeGridSizeClassesForIconZoom_gridSizeClasses;
  _largeGridSizeClassesForIconZoom_gridSizeClasses = v1;

}

- (id)_floatingDockIconLocationForTransitionSource:(int64_t)a3
{
  id *v3;
  void *v6;

  if (a3 == 24)
  {
    v3 = (id *)MEMORY[0x1E0DAA998];
  }
  else if (a3 == 25)
  {
    v3 = (id *)&SBIconLocationFloatingDockSuggestions;
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "handleFailureInMethod:object:file:lineNumber:description:", a2, self, CFSTR("SBFluidSwitcherViewController+Common.m"), 141, CFSTR("_floatingDockIconLocationForTransitionRequestSource: source must be a transition request from the dock"));

    v3 = (id *)MEMORY[0x1E0DAA9E0];
  }
  return *v3;
}

- (id)iconForDisplayItem:(id)a3
{
  id v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v4 = a3;
  -[SBFluidSwitcherViewController _sbWindowScene](self, "_sbWindowScene");
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v5, "homeScreenController");
  v6 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v6, "iconManager");
  v7 = (void *)objc_claimAutoreleasedReturnValue();
  v8 = v7;
  if (v7)
  {
    v9 = v7;
  }
  else
  {
    +[SBIconController sharedInstance](SBIconController, "sharedInstance");
    v10 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v10, "iconManager");
    v9 = (id)objc_claimAutoreleasedReturnValue();

  }
  -[SBFluidSwitcherViewController layoutContext](self, "layoutContext");
  v11 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v4, "bundleIdentifier");
  v12 = (void *)objc_claimAutoreleasedReturnValue();
  if (!objc_msgSend(v4, "type"))
  {
    objc_msgSend(v11, "activeTransitionContext");
    v18 = (void *)objc_claimAutoreleasedReturnValue();
    -[SBFluidSwitcherViewController _workspaceEntityForBundleIdentifier:inTransitionContext:](self, "_workspaceEntityForBundleIdentifier:inTransitionContext:", v12, v18);
    v15 = (void *)objc_claimAutoreleasedReturnValue();

    -[SBFluidSwitcherViewController _iconForWorkspaceEntity:](self, "_iconForWorkspaceEntity:", v15);
    v19 = objc_claimAutoreleasedReturnValue();
LABEL_9:
    v17 = (void *)v19;
    goto LABEL_10;
  }
  v13 = objc_msgSend(v4, "type");
  objc_msgSend(v9, "iconModel");
  v14 = (void *)objc_claimAutoreleasedReturnValue();
  v15 = v14;
  if (v13 != 5)
  {
    objc_msgSend(v14, "leafIconForIdentifier:", v12);
    v19 = objc_claimAutoreleasedReturnValue();
    goto LABEL_9;
  }
  objc_msgSend(v4, "webClipIdentifier");
  v16 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v15, "leafIconForIdentifier:", v16);
  v17 = (void *)objc_claimAutoreleasedReturnValue();

LABEL_10:
  return v17;
}

- (void)liveContentOverlayDidUpdateHomeAffordanceEdgeProtectOrAutoHide:(NSObject *)a3 .cold.1(id *a1, uint64_t a2, NSObject *a3)
{
  uint8_t v5[12];
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  objc_msgSend(*a1, "count");
  OUTLINED_FUNCTION_3();
  v6 = 2112;
  v7 = a2;
  _os_log_error_impl(&dword_1D0540000, a3, OS_LOG_TYPE_ERROR, "Didn't find leafAppLayoutForOverlay (in _liveContentOverlays, count=%lu) for liveContentOverlay: %@", v5, 0x16u);
  OUTLINED_FUNCTION_2_2();
}

- (void)_updateEdgeProtectAndAutoHideForHomeAffordancesInAppLayout:withResetDelay:unhideDelay:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_4(&dword_1D0540000, v0, v1, "Didn't find grabberView for %@", v2);
}

- (void)_appLayoutFromLayoutElement:.cold.1()
{
  NSObject *v0;
  uint64_t v1;
  uint8_t v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_4(&dword_1D0540000, v0, v1, "Unexpected class for SBSwitcherLayoutElementTypeAppLayout: %@", v2);
}

- (void)_appLayoutFromLayoutElement:(NSObject *)a3 .cold.2(uint64_t a1, void *a2, NSObject *a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  __int16 v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD *)(a1 + 1320);
  v6 = 138543874;
  v7 = v5;
  v8 = 2050;
  v9 = objc_msgSend(a2, "switcherLayoutElementType");
  v10 = 2112;
  v11 = a2;
  _os_log_error_impl(&dword_1D0540000, a3, OS_LOG_TYPE_ERROR, "[%{public}@] layoutElement type (%{public}lu) is not .AppLayout in %@", (uint8_t *)&v6, 0x20u);
}

- (void)overlayAccessoryView:(void *)a1 didSelectHeaderForRole:(NSObject *)a2 .cold.1(void *a1, NSObject *a2)
{
  void *v3;
  uint64_t v4;
  uint8_t v5[24];
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  objc_msgSend(a1, "debugDescription");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  OUTLINED_FUNCTION_3();
  OUTLINED_FUNCTION_2_4(&dword_1D0540000, a2, v4, "no visible appLayout for selected overlay accessory view: %{public}@", v5);

  OUTLINED_FUNCTION_2_2();
}

- (void)_dispatchEventAndHandleAction:(os_log_t)log .cold.1(os_log_t log)
{
  uint8_t v1[16];

  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1D0540000, log, OS_LOG_TYPE_ERROR, "Failed to handle prelude animation token in Switcher transition event; canceling",
    v1,
    2u);
}

@end
