uint64_t sub_244D633F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v9[2] = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = sub_244E4C06C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C09C();
  swift_allocObject();
  sub_244E4C090();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCB358], v3);
  sub_244E4C078();
  v7 = sub_244E4C084();
  swift_release();
  return v7;
}

uint64_t sub_244D63764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  NSObject *v30;
  uint8_t *v31;
  void *v32;
  _QWORD v33[2];
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38[5];

  v38[4] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244D633F4();
  if (v11 >> 60 == 15)
    return 0;
  v13 = v10;
  v14 = v11;
  v36 = v6;
  v15 = (void *)objc_opt_self();
  v16 = (void *)sub_244E4C30C();
  v38[0] = 0;
  v17 = objc_msgSend(v15, sel_JSONObjectWithData_options_error_, v16, 4, v38);

  if (!v17)
  {
    v35 = v13;
    v19 = v38[0];
    v20 = (void *)sub_244E4C1E0();

    swift_willThrow();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v1, a1);
    v21 = sub_244E4E370();
    v23 = v22;
    if (qword_257414408 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v3, (uint64_t)qword_257419E18);
    v25 = (uint64_t)v36;
    sub_244D640E4(v24, (uint64_t)v36);
    v26 = sub_244E4DCD4();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
    {
      sub_244D65198(v35, v14);

      swift_bridgeObjectRelease();
      sub_244D6412C(v25);
    }
    else
    {
      swift_bridgeObjectRetain();
      v28 = sub_244E4DCBC();
      v29 = sub_244E4E67C();
      v30 = v28;
      if (os_log_type_enabled(v28, v29))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        v34 = (void *)swift_slowAlloc();
        v38[0] = v34;
        *(_DWORD *)v31 = 136315138;
        v33[1] = v31 + 4;
        swift_bridgeObjectRetain();
        v37 = sub_244D9A70C(v21, v23, (uint64_t *)v38);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244D61000, v30, v29, "Error encoding %s to Dictionary", v31, 0xCu);
        v32 = v34;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v32, -1, -1);
        MEMORY[0x2495283BC](v31, -1, -1);
        sub_244D65198(v35, v14);

      }
      else
      {
        sub_244D65198(v35, v14);

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v36, v26);
    }
    return 0;
  }
  v18 = v38[0];
  sub_244E4E82C();
  sub_244D65198(v13, v14);
  swift_unknownObjectRelease();
  sub_244E4E2BC();
  if (swift_dynamicCast())
    return v37;
  else
    return 0;
}

void sub_244D63B7C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  id v20[2];

  v20[1] = *(id *)MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v20[0] = 0;
  v4 = objc_msgSend(v3, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 5, 1, 0, 0, v20);

  v5 = v20[0];
  if (v4)
  {
    sub_244E4C27C();
    v6 = v5;

  }
  else
  {
    v7 = v20[0];
    v8 = (void *)sub_244E4C1E0();

    swift_willThrow();
    if (qword_257414408 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E18);
    sub_244D640E4(v9, (uint64_t)v2);
    v10 = sub_244E4DCD4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v2, 1, v10) == 1)
    {
      sub_244D6412C((uint64_t)v2);
    }
    else
    {
      v12 = v8;
      v13 = sub_244E4DCBC();
      v14 = sub_244E4E670();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        v19 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v15 = 138412290;
        v16 = v8;
        v17 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v20[0] = v17;
        sub_244E4E7E4();
        v18 = v19;
        *v19 = v17;

        _os_log_impl(&dword_244D61000, v13, v14, "Could not load library URL: %@", v15, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v18, -1, -1);
        MEMORY[0x2495283BC](v15, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v2, v10);
    }
    sub_244E4E94C();
    __break(1u);
  }
}

uint64_t sub_244D63EBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_244E4C2AC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_257419C90);
  __swift_project_value_buffer(v0, (uint64_t)qword_257419C90);
  sub_244D63B7C();
  sub_244E4C264();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2495282D8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_244D6400C(uint64_t a1)
{
  return sub_244D64040(a1, qword_257419CA8);
}

uint64_t sub_244D64020(uint64_t a1)
{
  return sub_244D64040(a1, qword_257419CC0);
}

uint64_t sub_244D64040(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_244E4C2AC();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  if (qword_2574143A0 != -1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_257419C90);
  return sub_244E4C264();
}

uint64_t sub_244D640E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D6412C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244D6416C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_244D64174()
{
  sub_244D65324(&qword_2574146F0, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E4FEC4);
  return sub_244E4EB20();
}

uint64_t sub_244D641B4()
{
  sub_244D65324(&qword_2574146F0, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E4FEC4);
  return sub_244E4EB14();
}

uint64_t sub_244D641F8()
{
  sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
  return sub_244E4C168();
}

id sub_244D64238()
{
  id *v0;

  return *v0;
}

uint64_t sub_244D64240()
{
  sub_244D65324(&qword_2574147B8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E4FB28);
  return sub_244E4EB20();
}

uint64_t sub_244D64280()
{
  sub_244D65324(&qword_2574147B8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E4FB28);
  return sub_244E4EB14();
}

uint64_t sub_244D642C0()
{
  sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
  return sub_244E4C168();
}

void sub_244D64300(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

void sub_244D6430C(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

unsigned __int8 *sub_244D64318@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_244D64328(uint64_t a1, uint64_t a2)
{
  return sub_244D65024(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_244D64334(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_244E4E304();
  *a2 = 0;
  return result;
}

uint64_t sub_244D643A8(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_244E4E310();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_244D64424@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_244E4E31C();
  v2 = sub_244E4E2F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_244D64464()
{
  sub_244D65324(&qword_257414730, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E50290);
  return sub_244E4C1BC();
}

uint64_t sub_244D644A4()
{
  sub_244D65324(&qword_257414730, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E50290);
  return sub_244E4C180();
}

uint64_t sub_244D644E4(void *a1)
{
  id v2;

  sub_244D65324(&qword_257414730, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E50290);
  v2 = a1;
  return sub_244E4C174();
}

uint64_t sub_244D64548()
{
  sub_244D65324(&qword_257414730, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E50290);
  return sub_244E4C1A4();
}

uint64_t sub_244D6459C()
{
  sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
  return sub_244E4C1BC();
}

uint64_t sub_244D645DC()
{
  sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
  return sub_244E4C180();
}

uint64_t sub_244D6461C(void *a1)
{
  id v2;

  sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
  v2 = a1;
  return sub_244E4C174();
}

uint64_t sub_244D64680()
{
  sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
  return sub_244E4C1A4();
}

uint64_t sub_244D646D0()
{
  return sub_244E4E31C();
}

uint64_t sub_244D646E0()
{
  sub_244D65324(&qword_257414778, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50464);
  return sub_244E4C1BC();
}

uint64_t sub_244D64720()
{
  sub_244D65324(&qword_257414778, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50464);
  return sub_244E4C180();
}

uint64_t sub_244D64760(void *a1)
{
  id v2;

  sub_244D65324(&qword_257414778, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50464);
  v2 = a1;
  return sub_244E4C174();
}

uint64_t sub_244D647C4()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = *v0;
  v2 = sub_244E4E784();

  return v2;
}

uint64_t sub_244D647F8()
{
  sub_244D65324(&qword_257414778, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50464);
  return sub_244E4C1A4();
}

_QWORD *sub_244D64848@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

BOOL sub_244D64858(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_244D6486C()
{
  sub_244D65324(&qword_2574146A8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E4FFAC);
  return sub_244E4C1BC();
}

uint64_t sub_244D648AC()
{
  sub_244D65324(&qword_2574146A8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E4FFAC);
  return sub_244E4C180();
}

uint64_t sub_244D648EC(void *a1)
{
  id v2;

  sub_244D65324(&qword_2574146A8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E4FFAC);
  v2 = a1;
  return sub_244E4C174();
}

uint64_t sub_244D64950()
{
  sub_244D65324(&qword_2574146A8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E4FFAC);
  return sub_244E4C1A4();
}

uint64_t sub_244D649A0()
{
  sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
  return sub_244E4C1BC();
}

uint64_t sub_244D649E0()
{
  sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
  return sub_244E4C180();
}

uint64_t sub_244D64A20(void *a1)
{
  id v2;

  sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
  v2 = a1;
  return sub_244E4C174();
}

uint64_t sub_244D64A84()
{
  sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
  return sub_244E4C1A4();
}

uint64_t sub_244D64AD4()
{
  sub_244E4EB80();
  sub_244E4E2C8();
  return sub_244E4EBC8();
}

uint64_t sub_244D64B30()
{
  sub_244D65324(&qword_257414738, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E503E4);
  return sub_244E4EB20();
}

uint64_t sub_244D64B70()
{
  sub_244D65324(&qword_257414738, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E503E4);
  return sub_244E4EB14();
}

uint64_t sub_244D64BB0()
{
  sub_244D65324(&qword_257414730, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E50290);
  return sub_244E4C168();
}

uint64_t sub_244D64BF0()
{
  sub_244D65324(&qword_257414730, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E50290);
  return sub_244E4C18C();
}

uint64_t sub_244D64C48()
{
  sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
  return sub_244E4C18C();
}

uint64_t sub_244D64CA0()
{
  sub_244D65324(&qword_257414780, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E505B8);
  return sub_244E4EB20();
}

uint64_t sub_244D64CE0()
{
  sub_244D65324(&qword_257414780, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E505B8);
  return sub_244E4EB14();
}

uint64_t sub_244D64D20()
{
  sub_244D65324(&qword_257414778, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50464);
  return sub_244E4C168();
}

uint64_t sub_244D64D60()
{
  sub_244D65324(&qword_257414778, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50464);
  return sub_244E4C18C();
}

uint64_t sub_244D64DB8()
{
  sub_244D65324(&qword_2574146B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E50100);
  return sub_244E4EB20();
}

uint64_t sub_244D64DF8()
{
  sub_244D65324(&qword_2574146B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E50100);
  return sub_244E4EB14();
}

uint64_t sub_244D64E38()
{
  sub_244D65324(&qword_2574146A8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E4FFAC);
  return sub_244E4C168();
}

uint64_t sub_244D64E78()
{
  sub_244D65324(&qword_2574146A8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E4FFAC);
  return sub_244E4C18C();
}

uint64_t sub_244D64ED0()
{
  sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
  return sub_244E4C18C();
}

uint64_t sub_244D64F28@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_244E4E2F8();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_244D64F6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_244E4E31C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_244D64F94()
{
  sub_244D65324(&qword_2574147F0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244E4FCA8);
  sub_244D65324(&qword_2574147F8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244E4FC48);
  return sub_244E4E9B8();
}

uint64_t sub_244D65018(uint64_t a1, uint64_t a2)
{
  return sub_244D65024(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_244D65024(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_244E4E31C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_244D65060()
{
  sub_244E4E31C();
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D650A0()
{
  uint64_t v0;

  sub_244E4E31C();
  sub_244E4EB80();
  sub_244E4E3C4();
  v0 = sub_244E4EBC8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_244D65110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_244E4E31C();
  v2 = v1;
  if (v0 == sub_244E4E31C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_244D65198(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_244D651AC(a1, a2);
  return a1;
}

uint64_t sub_244D651AC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void type metadata accessor for Code(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414610);
}

void type metadata accessor for ConfigurationError(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414618);
}

void type metadata accessor for SPRTransactionOutcomeStatus(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414620);
}

void type metadata accessor for SPRCardEffectiveState(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414628);
}

void type metadata accessor for SPRCardExpirationState(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414630);
}

void type metadata accessor for SPRTransactionCVMType(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414638);
}

void _s3__C4CodeOMa_0(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414640);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414648);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414650);
}

void _s3__C4CodeOMa_1(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414658);
}

void type metadata accessor for ReadError(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414660);
}

uint64_t sub_244D652CC()
{
  return sub_244D65324(&qword_257414668, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E4FA40);
}

uint64_t sub_244D652F8()
{
  return sub_244D65324(&qword_257414670, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E4FA6C);
}

uint64_t sub_244D65324(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x2495282F0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_244D65364()
{
  return sub_244D65324(&qword_257414678, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244E4FC0C);
}

uint64_t sub_244D65390()
{
  return sub_244D65324(&qword_257414680, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244E4FBE0);
}

uint64_t sub_244D653BC()
{
  return sub_244D65324(&qword_257414688, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_244E4FC7C);
}

uint64_t sub_244D653E8()
{
  return sub_244D65324(&qword_257414690, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E4FDDC);
}

uint64_t sub_244D65414()
{
  return sub_244D65324(&qword_257414698, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E4FE08);
}

uint64_t sub_244D65440()
{
  return sub_244D65324(&qword_2574146A0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_244E4FF08);
}

uint64_t sub_244D6546C()
{
  return sub_244D65324(&qword_2574146A8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E4FFAC);
}

void type metadata accessor for PINControllerError(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414810);
}

uint64_t sub_244D654AC()
{
  return sub_244D65324(&qword_2574146B0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E50100);
}

uint64_t sub_244D654D8()
{
  return sub_244D65324(&qword_2574146B8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E50088);
}

uint64_t sub_244D65504()
{
  return sub_244D65324(&qword_2574146C0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E50018);
}

uint64_t sub_244D65530()
{
  return sub_244D65324(&qword_2574146C8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_244E4FF70);
}

uint64_t sub_244D6555C()
{
  return sub_244D65324(&qword_2574146D0, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_244E4FF34);
}

unint64_t sub_244D6558C()
{
  unint64_t result;

  result = qword_2574146D8;
  if (!qword_2574146D8)
  {
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_2574146D8);
  }
  return result;
}

uint64_t sub_244D655D0()
{
  return sub_244D65324(&qword_2574146E0, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E5005C);
}

uint64_t sub_244D655FC()
{
  return sub_244D65324(&qword_2574146E8, (uint64_t (*)(uint64_t))type metadata accessor for PINControllerError, (uint64_t)&unk_244E500BC);
}

uint64_t sub_244D65628()
{
  return sub_244D65324(&qword_2574146F0, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E4FEC4);
}

uint64_t sub_244D65654()
{
  return sub_244D65324(&qword_2574146F8, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E4FE90);
}

uint64_t sub_244D65680()
{
  return sub_244D65324(&qword_257414700, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E4FE4C);
}

uint64_t sub_244D656AC()
{
  return sub_244D65324(&qword_257414708, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_3, (uint64_t)&unk_244E501EC);
}

void _s3__C4CodeOMa_3(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414808);
}

uint64_t sub_244D656EC()
{
  return sub_244D65324(&qword_257414710, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_3, (uint64_t)&unk_244E501B0);
}

uint64_t sub_244D65718()
{
  return sub_244D65324(&qword_257414718, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_3, (uint64_t)&unk_244E50228);
}

uint64_t sub_244D65744()
{
  return sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
}

uint64_t sub_244D65770()
{
  return sub_244D65324(&qword_257414728, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_244E4FD38);
}

uint64_t sub_244D6579C()
{
  return sub_244D65324(&qword_257414730, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E50290);
}

void type metadata accessor for SecureChannelError(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414818);
}

uint64_t sub_244D657DC()
{
  return sub_244D65324(&qword_257414738, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E503E4);
}

uint64_t sub_244D65808()
{
  return sub_244D65324(&qword_257414740, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E5036C);
}

uint64_t sub_244D65834()
{
  return sub_244D65324(&qword_257414748, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E502FC);
}

uint64_t sub_244D65860()
{
  return sub_244D65324(&qword_257414750, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_244E50254);
}

uint64_t sub_244D6588C()
{
  return sub_244D65324(&qword_257414758, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_0, (uint64_t)&unk_244E4FD64);
}

uint64_t sub_244D658B8()
{
  return sub_244D65324(&qword_257414760, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E50340);
}

uint64_t sub_244D658E4()
{
  return sub_244D65324(&qword_257414768, (uint64_t (*)(uint64_t))type metadata accessor for SecureChannelError, (uint64_t)&unk_244E503A0);
}

uint64_t sub_244D65910()
{
  return sub_244D65324(&qword_257414770, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E4FB6C);
}

uint64_t sub_244D6593C()
{
  return sub_244D65324(&qword_257414778, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50464);
}

void type metadata accessor for SPRXPCError(uint64_t a1)
{
  sub_244D65B74(a1, (unint64_t *)&unk_257414820);
}

uint64_t sub_244D6597C()
{
  return sub_244D65324(&qword_257414780, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E505B8);
}

uint64_t sub_244D659A8()
{
  return sub_244D65324(&qword_257414788, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50540);
}

uint64_t sub_244D659D4()
{
  return sub_244D65324(&qword_257414790, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E504D0);
}

uint64_t sub_244D65A00()
{
  return sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
}

uint64_t sub_244D65A2C()
{
  return sub_244D65324(&qword_2574147A0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E4FB98);
}

uint64_t sub_244D65A58()
{
  return sub_244D65324(&qword_2574147A8, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50514);
}

uint64_t sub_244D65A84()
{
  return sub_244D65324(&qword_2574147B0, (uint64_t (*)(uint64_t))type metadata accessor for SPRXPCError, (uint64_t)&unk_244E50574);
}

uint64_t sub_244D65AB0()
{
  return sub_244D65324(&qword_2574147B8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E4FB28);
}

uint64_t sub_244D65ADC()
{
  return sub_244D65324(&qword_2574147C0, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E4FAF4);
}

uint64_t sub_244D65B08()
{
  return sub_244D65324(&qword_2574147C8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E4FAB0);
}

uint64_t sub_244D65B34()
{
  return sub_244D65324(&qword_2574147D0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_244E506A4);
}

void _s3__C4CodeOMa_2(uint64_t a1)
{
  sub_244D65B74(a1, &qword_257414800);
}

void sub_244D65B74(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_244D65BB8()
{
  return sub_244D65324(&qword_2574147D8, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_244E50668);
}

uint64_t sub_244D65BE4()
{
  return sub_244D65324(&qword_2574147E0, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_2, (uint64_t)&unk_244E506E0);
}

uint64_t sub_244D65C10()
{
  return sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
}

uint64_t sub_244D65C58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  double v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  char v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  int v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  double v57;
  unint64_t v58;
  __int128 v59;
  __int128 v60;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_244E4DADC();
  swift_bridgeObjectRelease();
  if (!v5)
    goto LABEL_44;
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = sub_244DC859C(6911082, 0xE300000000000000);
    if ((v7 & 1) != 0)
    {
      sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v6, (uint64_t)&v59);
      if ((swift_dynamicCast() & 1) != 0)
      {
        v8 = v58;
        if (!*(_QWORD *)(v5 + 16))
          goto LABEL_42;
        v9 = *(_QWORD *)&v57;
        v10 = sub_244DC859C(7627113, 0xE300000000000000);
        if ((v11 & 1) == 0)
          goto LABEL_42;
        sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v10, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_42;
        if (!*(_QWORD *)(v5 + 16))
          goto LABEL_42;
        v12 = *(_QWORD *)&v57;
        v13 = sub_244DC859C(7370853, 0xE300000000000000);
        if ((v14 & 1) == 0)
          goto LABEL_42;
        sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v13, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_42;
        if (!*(_QWORD *)(v5 + 16))
          goto LABEL_42;
        v15 = v57;
        v16 = sub_244DC859C(1684632694, 0xE400000000000000);
        if ((v17 & 1) == 0)
          goto LABEL_42;
        sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v16, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_42;
        v18 = v58;
        if (!*(_QWORD *)(v5 + 16))
          goto LABEL_41;
        v19 = *(_QWORD *)&v57;
        v20 = sub_244DC859C(6580592, 0xE300000000000000);
        if ((v21 & 1) == 0)
          goto LABEL_41;
        sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v20, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_41;
        v22 = v58;
        if (!*(_QWORD *)(v5 + 16)
          || (v56 = *(_QWORD *)&v57, v23 = sub_244DC859C(1684631668, 0xE400000000000000), (v24 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_42:
          swift_bridgeObjectRelease();
          goto LABEL_43;
        }
        sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v23, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_40;
        v55 = v58;
        if (!*(_QWORD *)(v5 + 16)
          || (v54 = *(_QWORD *)&v57, v25 = sub_244DC859C(7234157, 0xE300000000000000), (v26 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_41:
          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
        sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v25, (uint64_t)&v59);
        if ((swift_dynamicCast() & 1) == 0)
          goto LABEL_39;
        v53 = v58;
        if (*(_QWORD *)(v5 + 16)
          && (v52 = *(_QWORD *)&v57, v27 = sub_244DC859C(6580589, 0xE300000000000000), (v28 & 1) != 0))
        {
          sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v27, (uint64_t)&v59);
          if ((swift_dynamicCast() & 1) == 0)
          {
LABEL_38:
            swift_bridgeObjectRelease();
LABEL_39:
            swift_bridgeObjectRelease();
            goto LABEL_40;
          }
          v51 = v58;
          if (*(_QWORD *)(v5 + 16))
          {
            v50 = *(_QWORD *)&v57;
            v29 = sub_244DC859C(6513517, 0xE300000000000000);
            if ((v30 & 1) != 0)
            {
              sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v29, (uint64_t)&v59);
              if ((swift_dynamicCast() & 1) != 0)
              {
                v49 = sub_244E04BB8(*(uint64_t *)&v57, v58);
                if ((v31 & 1) == 0)
                {
                  *(_QWORD *)(v1 + 32) = v9;
                  *(_QWORD *)(v1 + 40) = v8;
                  sub_244E4D914();
                  *(_QWORD *)(v1 + 16) = v12;
                  *(double *)(v1 + 24) = v15 - v32;
                  v33 = v53;
                  *(_QWORD *)(v1 + 64) = v52;
                  *(_QWORD *)(v1 + 72) = v33;
                  v34 = v51;
                  *(_QWORD *)(v1 + 48) = v50;
                  *(_QWORD *)(v1 + 56) = v34;
                  *(_QWORD *)(v1 + 80) = v49;
                  *(_QWORD *)(v1 + 88) = v19;
                  v35 = v56;
                  *(_QWORD *)(v1 + 96) = v18;
                  *(_QWORD *)(v1 + 104) = v35;
                  v36 = v54;
                  *(_QWORD *)(v1 + 112) = v22;
                  *(_QWORD *)(v1 + 120) = v36;
                  *(_QWORD *)(v1 + 128) = v55;
                  if (*(_QWORD *)(v5 + 16)
                    && (v37 = sub_244DC859C(0x64697074666173, 0xE700000000000000), (v38 & 1) != 0))
                  {
                    sub_244D66F18(*(_QWORD *)(v5 + 56) + 32 * v37, (uint64_t)&v59);
                  }
                  else
                  {
                    v59 = 0u;
                    v60 = 0u;
                  }
                  swift_bridgeObjectRelease();
                  if (*((_QWORD *)&v60 + 1))
                  {
                    v46 = swift_dynamicCast();
                    v47 = *(_QWORD *)&v57;
                    v48 = v58;
                    if (!v46)
                    {
                      v47 = 0;
                      v48 = 0;
                    }
                  }
                  else
                  {
                    sub_244D66F54((uint64_t)&v59, &qword_257414A38);
                    v47 = 0;
                    v48 = 0;
                  }
                  *(_QWORD *)(v1 + 136) = v47;
                  *(_QWORD *)(v1 + 144) = v48;
                  return v1;
                }
              }
              swift_bridgeObjectRelease();
              goto LABEL_38;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
  }
LABEL_43:
  swift_bridgeObjectRelease();
LABEL_44:
  if (qword_2574143E0 != -1)
    swift_once();
  v39 = __swift_project_value_buffer(v2, (uint64_t)qword_257419DA0);
  sub_244D640E4(v39, (uint64_t)v4);
  v40 = sub_244E4DCD4();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v4, 1, v40) == 1)
  {
    sub_244D66F54((uint64_t)v4, &qword_2574145A0);
  }
  else
  {
    v42 = sub_244E4DCBC();
    v43 = sub_244E4E67C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_244D61000, v42, v43, "SessionToken could not be parsed", v44, 2u);
      MEMORY[0x2495283BC](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v4, v40);
  }
  type metadata accessor for SessionToken();
  swift_deallocPartialClassInstance();
  return 0;
}

BOOL sub_244D662F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(void);
  char v12;
  id v13;
  void *v14;
  unsigned int v15;
  char v16;
  void (*v17)(char *, uint64_t);
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v0 = sub_244E4C384();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244E4C414();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244E4C42C();
  v24 = *(_QWORD *)(v8 - 8);
  v25 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (uint64_t (*)(void))sub_244E4D86C();
  v12 = v11();
  swift_release();
  if ((v12 & 1) != 0
    && (v13 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v14 = (void *)sub_244E4E2F8(),
        v15 = objc_msgSend(v13, sel_BOOLForKey_, v14),
        v13,
        v14,
        v15))
  {
    sub_244E4C408();
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCF258], v4);
    sub_244E4C378();
    v16 = sub_244E4C420();
    v17 = *(void (**)(char *, uint64_t))(v1 + 8);
    v17(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v25);
    if ((v16 & 1) == 0)
      return 1;
    v19 = *(double *)(v26 + 24);
    sub_244E4C378();
    sub_244E4C354();
    v21 = v22;
    v17(v3, v0);
  }
  else
  {
    v19 = *(double *)(v26 + 24);
    sub_244E4C378();
    sub_244E4C354();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return v19 <= v21;
}

uint64_t sub_244D66544(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D66570
                                                            + 4 * asc_244E50800[a1]))(7627113, 0xE300000000000000);
}

uint64_t sub_244D66570()
{
  return 7370853;
}

uint64_t sub_244D6657C()
{
  return 6911082;
}

uint64_t sub_244D66588()
{
  return 6580589;
}

uint64_t sub_244D66594()
{
  return 7234157;
}

uint64_t sub_244D665A0()
{
  return 6513517;
}

uint64_t sub_244D665AC()
{
  return 1684632694;
}

uint64_t sub_244D665BC()
{
  return 0x4972656E74726170;
}

unint64_t sub_244D665D8()
{
  return 0xD000000000000011;
}

unint64_t sub_244D665F4()
{
  return 0xD000000000000014;
}

BOOL sub_244D66614(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_244D66628()
{
  sub_244E4EB80();
  sub_244E4EB8C();
  return sub_244E4EBC8();
}

uint64_t sub_244D6666C()
{
  return sub_244E4EB8C();
}

uint64_t sub_244D66694()
{
  sub_244E4EB80();
  sub_244E4EB8C();
  return sub_244E4EBC8();
}

uint64_t sub_244D666D4()
{
  unsigned __int8 *v0;

  return sub_244D66544(*v0);
}

uint64_t sub_244D666DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D671E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D66700()
{
  return 0;
}

void sub_244D6670C(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_244D66718()
{
  sub_244D66EB4();
  return sub_244E4EC04();
}

uint64_t sub_244D66740()
{
  sub_244D66EB4();
  return sub_244E4EC10();
}

uint64_t sub_244D66768()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_244D667B4()
{
  sub_244D66768();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionToken()
{
  return objc_opt_self();
}

uint64_t sub_244D667F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414A40);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D66EB4();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA78();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA78();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA60();
    v8[10] = 5;
    sub_244E4EA84();
    v8[9] = 6;
    sub_244E4EA60();
    v8[8] = 7;
    sub_244E4EA60();
    v8[7] = 8;
    sub_244E4EA60();
    v8[6] = 9;
    sub_244E4EA3C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D66A48()
{
  return MEMORY[0x24BEE0D10];
}

_QWORD *sub_244D66A54(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414A28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D66EB4();
  sub_244E4EBE0();
  if (v2)
  {
    type metadata accessor for SessionToken();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v21[31] = 0;
    sub_244E4EA0C();
    v1[2] = v9;
    v21[30] = 1;
    sub_244E4EA0C();
    v1[3] = v10;
    v21[29] = 2;
    v1[4] = sub_244E4E9F4();
    v1[5] = v12;
    v21[28] = 3;
    v1[6] = sub_244E4E9F4();
    v1[7] = v13;
    v21[27] = 4;
    v1[8] = sub_244E4E9F4();
    v1[9] = v14;
    v21[26] = 5;
    v1[10] = sub_244E4EA18();
    v21[25] = 6;
    v1[11] = sub_244E4E9F4();
    v1[12] = v15;
    v21[24] = 7;
    v1[13] = sub_244E4E9F4();
    v1[14] = v16;
    v21[15] = 8;
    v1[15] = sub_244E4E9F4();
    v1[16] = v17;
    v21[14] = 9;
    v18 = sub_244E4E9D0();
    v20 = v19;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    v3[17] = v18;
    v3[18] = v20;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

_QWORD *sub_244D66E0C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  type metadata accessor for SessionToken();
  v5 = swift_allocObject();
  result = sub_244D66A54(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_244D66E60(_QWORD *a1)
{
  return sub_244D667F4(a1);
}

uint64_t sub_244D66E80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 32);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_244D66EB4()
{
  unint64_t result;

  result = qword_257414A30;
  if (!qword_257414A30)
  {
    result = MEMORY[0x2495282F0](&unk_244E509E0, &type metadata for SessionToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414A30);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_244D66F18(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_244D66F54(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SessionToken.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionToken.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_244D6707C + 4 * byte_244E5080F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_244D670B0 + 4 * byte_244E5080A[v4]))();
}

uint64_t sub_244D670B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D670B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D670C0);
  return result;
}

uint64_t sub_244D670CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D670D4);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_244D670D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D670E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D670EC(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_244D670F8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SessionToken.CodingKeys()
{
  return &type metadata for SessionToken.CodingKeys;
}

unint64_t sub_244D67114()
{
  unint64_t result;

  result = qword_257414A48;
  if (!qword_257414A48)
  {
    result = MEMORY[0x2495282F0](&unk_244E509B8, &type metadata for SessionToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414A48);
  }
  return result;
}

unint64_t sub_244D6715C()
{
  unint64_t result;

  result = qword_257414A50;
  if (!qword_257414A50)
  {
    result = MEMORY[0x2495282F0](&unk_244E50928, &type metadata for SessionToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414A50);
  }
  return result;
}

unint64_t sub_244D671A4()
{
  unint64_t result;

  result = qword_257414A58;
  if (!qword_257414A58)
  {
    result = MEMORY[0x2495282F0](&unk_244E50950, &type metadata for SessionToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414A58);
  }
  return result;
}

uint64_t sub_244D671E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 7627113 && a2 == 0xE300000000000000;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7370853 && a2 == 0xE300000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6911082 && a2 == 0xE300000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6580589 && a2 == 0xE300000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7234157 && a2 == 0xE300000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 6513517 && a2 == 0xE300000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1684632694 && a2 == 0xE400000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56A20 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000244E56A40)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_244D67588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t (*v15)(void);
  char v16;
  id v17;
  void *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  unint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  char v55;

  v43 = a4;
  v44 = a5;
  v41 = a2;
  v42 = a3;
  v48 = a1;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B10);
  v5 = *(_QWORD *)(v49 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v49);
  v45 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_244E4C024();
  v7 = *(_QWORD *)(v47 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v47);
  v46 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v39 - v10;
  v40 = sub_244E4C714();
  v12 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t (*)(void))sub_244E4D86C();
  v16 = v15();
  swift_release();
  if ((v16 & 1) != 0
    && (v17 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v18 = (void *)sub_244E4E2F8(),
        v19 = objc_msgSend(v17, sel_BOOLForKey_, v18),
        v17,
        v18,
        v19))
  {
    v20 = sub_244DCA7C4(v41, v42, v43);
    v22 = v21;
    v23 = sub_244DCABB8();
    v25 = v24;
    sub_244E4C564();
    sub_244E4C6A8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v40);
    v50 = v20;
    v51 = v22;
    v52 = v23;
    v53 = v25;
    v54 = xmmword_244E50A40;
    v55 = 0;
    return sub_244E4E52C();
  }
  else
  {
    v27 = (uint64_t)v11;
    if (qword_257414450 != -1)
      swift_once();
    v43 = qword_257419EE0;
    v28 = v7;
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v30 = v47;
    v29(v27, v44, v47);
    v31 = v45;
    v32 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v45, v48, v49);
    v33 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v34 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v34 + v33, v31, v32);
    v35 = swift_allocObject();
    swift_weakInit();
    v36 = v46;
    v29((uint64_t)v46, v27, v30);
    v37 = (*(unsigned __int8 *)(v28 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v38 = (char *)swift_allocObject();
    *((_QWORD *)v38 + 2) = sub_244D68740;
    *((_QWORD *)v38 + 3) = v34;
    *((_QWORD *)v38 + 4) = v35;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v38[v37], v36, v30);
    v38[v37 + v8] = 0;
    swift_retain();
    sub_244D86BB8(v27, 0, 0, (uint64_t)sub_244D68824, (uint64_t)v38);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v30);
  }
}

uint64_t sub_244D67910(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v16 = a2;
  v15 = sub_244E4C714();
  v3 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_BYTE *)(a1 + 48);
  sub_244E4C564();
  sub_244E4C6A8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  v22 = v11;
  v23 = v12;
  sub_244D688F8(v6, v7, v8, v9, v10, v11, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414B10);
  return sub_244E4E52C();
}

uint64_t sub_244D67A0C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AuthorizerService()
{
  return objc_opt_self();
}

uint64_t sub_244D67A3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D692A4();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA3C();
    v8[12] = 3;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D67BA0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D67BD8 + 4 * byte_244E50A50[*v0]))(0x6C646E7542707061, 0xEB00000000644965);
}

unint64_t sub_244D67BD8()
{
  return 0xD000000000000011;
}

uint64_t sub_244D67BF4()
{
  return 0x6973736553646C6FLL;
}

uint64_t sub_244D67C18()
{
  return 0x6E656B6F54707370;
}

uint64_t sub_244D67C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D68DF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_244D67C54(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_244D67C60()
{
  sub_244D692A4();
  return sub_244E4EC04();
}

uint64_t sub_244D67C88()
{
  sub_244D692A4();
  return sub_244E4EC10();
}

uint64_t sub_244D67CB0(_QWORD *a1)
{
  return sub_244D67A3C(a1);
}

uint64_t sub_244D67CC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_244D806DC(*a1, *a2);
}

uint64_t sub_244D67CD0()
{
  sub_244E4EB80();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244D67D88()
{
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D67E1C()
{
  sub_244E4EB80();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244D67ED0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B38);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D69260();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D6800C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244D68FE4();
  *a1 = result;
  return result;
}

void sub_244D68038(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEC0000006E656B6FLL;
  v4 = 0xEB000000006E656BLL;
  v5 = 0x6F546C656E72656BLL;
  if (v2 != 1)
  {
    v5 = 0x746E61686372656DLL;
    v4 = 0xEC0000006F676F4CLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x546E6F6973736573;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_244D680B0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F546C656E72656BLL;
  if (*v0 != 1)
    v1 = 0x746E61686372656DLL;
  if (*v0)
    return v1;
  else
    return 0x546E6F6973736573;
}

uint64_t sub_244D68124@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244D68FE4();
  *a1 = result;
  return result;
}

void sub_244D68148(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_244D68154()
{
  sub_244D69260();
  return sub_244E4EC04();
}

uint64_t sub_244D6817C()
{
  sub_244D69260();
  return sub_244E4EC10();
}

double sub_244D681A4@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_244D6902C(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_244D681E4(_QWORD *a1)
{
  return sub_244D67ED0(a1);
}

uint64_t sub_244D681F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6[21] = a5;
  v6[22] = a6;
  v6[19] = a3;
  v6[20] = a4;
  v6[17] = a1;
  v6[18] = a2;
  v7 = sub_244E4C024();
  v6[23] = v7;
  v6[24] = *(_QWORD *)(v7 - 8);
  v6[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  v6[26] = swift_task_alloc();
  v8 = sub_244E4C2AC();
  v6[27] = v8;
  v6[28] = *(_QWORD *)(v8 - 8);
  v6[29] = swift_task_alloc();
  v6[30] = swift_task_alloc();
  v9 = sub_244E4C714();
  v6[31] = v9;
  v6[32] = *(_QWORD *)(v9 - 8);
  v6[33] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D682E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v0[32];
  v1 = v0[33];
  v4 = v0[30];
  v3 = v0[31];
  v5 = v0[29];
  v6 = v0[26];
  v16 = v0[28];
  v17 = v0[27];
  v7 = v0[25];
  v20 = v0[22];
  v8 = v0[20];
  v9 = v0[18];
  v18 = v0[19];
  v19 = v0[21];
  sub_244E4C564();
  sub_244E4C6C0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_244E4E88C();
  swift_bridgeObjectRelease();
  sub_244E4D188();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244D80008(*(_BYTE *)(v9 + 96));
  sub_244E4C294();
  swift_bridgeObjectRelease();
  sub_244E4C228();
  swift_bridgeObjectRelease();
  sub_244D68690(v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v5, v4, v17);
  sub_244E4D1A0();
  sub_244E4BFF4();
  sub_244E4BFC4();
  v10 = *(_QWORD *)(v9 + 40);
  v11 = *(_QWORD *)(v9 + 64);
  v12 = *(_QWORD *)(v9 + 72);
  v0[2] = *(_QWORD *)(v9 + 32);
  v0[3] = v10;
  v0[4] = v11;
  v0[5] = v12;
  v0[6] = v19;
  v0[7] = v20;
  v0[8] = v18;
  v0[9] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_244E0F5F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244E4C018();
  v13 = (_QWORD *)swift_task_alloc();
  v0[34] = v13;
  v13[2] = v9;
  v13[3] = v18;
  v13[4] = v8;
  v13[5] = v7;
  v14 = (_QWORD *)swift_task_alloc();
  v0[35] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414B08);
  *v14 = v0;
  v14[1] = sub_244D68564;
  return sub_244E4EAB4();
}

uint64_t sub_244D68564()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244D685C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 192);
  v4 = *(_QWORD *)(v0 + 136);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 224) + 8))(*(_QWORD *)(v0 + 240), *(_QWORD *)(v0 + 216));
  v9 = *(_OWORD *)(v0 + 96);
  v10 = *(_OWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v7 = *(_BYTE *)(v0 + 128);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)v4 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v5;
  *(_BYTE *)(v4 + 48) = v7;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D68690(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244D686D0(uint64_t a1)
{
  uint64_t *v1;

  return sub_244D67588(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_244D686DC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B10);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_244D68740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257414B10) - 8) + 80);
  return sub_244D67910(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_244D68780()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_244D687A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244E4C024();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_244D68824(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v5)(_BYTE *);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _BYTE v11[56];

  v3 = *(_QWORD *)(sub_244E4C024() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (uint64_t (*)(_BYTE *))v1[2];
  v6 = v1[3];
  v7 = v1[4];
  v8 = (uint64_t)v1 + v4;
  v9 = *((_BYTE *)v1 + v4 + *(_QWORD *)(v3 + 64));
  sub_244D688B0(a1, (uint64_t)v11);
  return sub_244D86968((uint64_t)v11, v5, v6, v7, v8, v9);
}

uint64_t sub_244D688B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D688F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t initializeBufferWithCopyOfBuffer for SessionRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for SessionRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SessionRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *assignWithTake for SessionRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionRequest()
{
  return &type metadata for SessionRequest;
}

uint64_t destroy for SessionResponse()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SessionResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SessionResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_QWORD *assignWithTake for SessionResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SessionResponse()
{
  return &type metadata for SessionResponse;
}

uint64_t sub_244D68DF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6973736553646C6FLL && a2 == 0xEF6E656B6F546E6FLL || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656B6F54707370 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_244D68FE4()
{
  unint64_t v0;

  v0 = sub_244E4E9C4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_244D6902C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B18);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D69260();
  sub_244E4EBE0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_244E4E9F4();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_244E4E9F4();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_244E4E9F4();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v19 = v23;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  return result;
}

unint64_t sub_244D69260()
{
  unint64_t result;

  result = qword_257414B20;
  if (!qword_257414B20)
  {
    result = MEMORY[0x2495282F0](&unk_244E50D20, &type metadata for SessionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414B20);
  }
  return result;
}

unint64_t sub_244D692A4()
{
  unint64_t result;

  result = qword_257414B30;
  if (!qword_257414B30)
  {
    result = MEMORY[0x2495282F0](&unk_244E50CD0, &type metadata for SessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414B30);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SessionRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_244D693C4 + 4 * byte_244E50A59[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_244D693F8 + 4 * byte_244E50A54[v4]))();
}

uint64_t sub_244D693F8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D69400(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D69408);
  return result;
}

uint64_t sub_244D69414(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D6941CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_244D69420(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D69428(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionRequest.CodingKeys()
{
  return &type metadata for SessionRequest.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SessionResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_244D69520 + 4 * byte_244E50A63[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_244D69554 + 4 * byte_244E50A5E[v4]))();
}

uint64_t sub_244D69554(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D6955C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D69564);
  return result;
}

uint64_t sub_244D69570(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D69578);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_244D6957C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D69584(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionResponse.CodingKeys()
{
  return &type metadata for SessionResponse.CodingKeys;
}

unint64_t sub_244D695A4()
{
  unint64_t result;

  result = qword_257414B40;
  if (!qword_257414B40)
  {
    result = MEMORY[0x2495282F0](&unk_244E50BF0, &type metadata for SessionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414B40);
  }
  return result;
}

unint64_t sub_244D695EC()
{
  unint64_t result;

  result = qword_257414B48;
  if (!qword_257414B48)
  {
    result = MEMORY[0x2495282F0](&unk_244E50CA8, &type metadata for SessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414B48);
  }
  return result;
}

unint64_t sub_244D69634()
{
  unint64_t result;

  result = qword_257414B50;
  if (!qword_257414B50)
  {
    result = MEMORY[0x2495282F0](&unk_244E50C18, &type metadata for SessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414B50);
  }
  return result;
}

unint64_t sub_244D6967C()
{
  unint64_t result;

  result = qword_257414B58;
  if (!qword_257414B58)
  {
    result = MEMORY[0x2495282F0](&unk_244E50C40, &type metadata for SessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414B58);
  }
  return result;
}

unint64_t sub_244D696C4()
{
  unint64_t result;

  result = qword_257414B60;
  if (!qword_257414B60)
  {
    result = MEMORY[0x2495282F0](&unk_244E50B28, &type metadata for SessionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414B60);
  }
  return result;
}

unint64_t sub_244D6970C()
{
  unint64_t result;

  result = qword_257414B68;
  if (!qword_257414B68)
  {
    result = MEMORY[0x2495282F0](&unk_244E50B50, &type metadata for SessionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257414B68);
  }
  return result;
}

void sub_244D6975C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(*a1, *a2);
  v5 = sub_244E4E31C();
  v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

void sub_244D697AC(id *a1)
{
  id v1;

  v1 = objc_msgSend(*a1, sel_transactionTimestamp);
  sub_244E4C360();

}

void sub_244D697F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_paymentCardDataHash);
  v4 = sub_244E4C324();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

id ManagedTransaction.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTransaction.init(entity:insertInto:)(void *a1, void *a2)
{
  void *v2;
  id v5;
  objc_super v7;

  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedTransaction();
  v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedTransaction()
{
  return objc_opt_self();
}

id ManagedTransaction.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedTransaction();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedTransaction.fetchRequest()()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v1 = (void *)sub_244E4E2F8();
  v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

char *keypath_get_selector_safSessionHash()
{
  return sel_safSessionHash;
}

void sub_244D69A1C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_244D6975C(a1, (SEL *)&selRef_safSessionHash, a2);
}

void sub_244D69A38(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDCF9E0], (SEL *)&selRef_setSafSessionHash_);
}

char *keypath_get_selector_transactionId()
{
  return sel_transactionId;
}

void sub_244D69A58(id *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_244D6975C(a1, (SEL *)&selRef_transactionId, a2);
}

void sub_244D69A74(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDCF9E0], (SEL *)&selRef_setTransactionId_);
}

char *keypath_get_selector_transactionTimestamp()
{
  return sel_transactionTimestamp;
}

void sub_244D69A98(uint64_t a1, void **a2)
{
  void *v2;
  id v3;

  v2 = *a2;
  v3 = (id)sub_244E4C33C();
  objc_msgSend(v2, sel_setTransactionTimestamp_, v3);

}

char *keypath_get_selector_paymentCardDataHash()
{
  return sel_paymentCardDataHash;
}

void sub_244D69AF0(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4)
{
  keypath_setTm(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x24BDCDCA0], (SEL *)&selRef_setPaymentCardDataHash_);
}

void keypath_setTm(_QWORD *a1, void **a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD), SEL *a6)
{
  void *v7;
  id v8;

  v7 = *a2;
  v8 = (id)a5(*a1, a1[1]);
  objc_msgSend(v7, *a6, v8);

}

uint64_t sub_244D69B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = sub_244E4C2AC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v2, qword_257414B98);
  __swift_project_value_buffer(v0, (uint64_t)qword_257414B98);
  if (qword_2574143A8 != -1)
    swift_once();
  __swift_project_value_buffer(v0, (uint64_t)qword_257419CA8);
  sub_244E4C264();
  sub_244E4C270();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_244D69C60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414428 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E78);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D66F54((uint64_t)v4, &qword_2574145A0);
  }
  else
  {
    v8 = sub_244E4DCBC();
    v9 = sub_244E4E688();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_244D61000, v8, v9, "SAF DB deinit", v10, 2u);
      MEMORY[0x2495283BC](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }

  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for StoreAndForwardStorage()
{
  return objc_opt_self();
}

void sub_244D69E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint8_t *v22;
  id v23;
  void *v24;
  void *v25;
  void *v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  _QWORD v31[6];
  uint64_t v32;
  uint64_t v33;
  id v34[2];

  v7 = v6;
  v31[4] = a3;
  v31[5] = a4;
  v31[2] = a1;
  v31[3] = a2;
  v34[1] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = sub_244E4C384();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414428 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v13, (uint64_t)qword_257419E78);
  sub_244D640E4(v16, (uint64_t)v15);
  v17 = sub_244E4DCD4();
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17) == 1)
  {
    sub_244D66F54((uint64_t)v15, &qword_2574145A0);
  }
  else
  {
    v31[1] = a5;
    v19 = sub_244E4DCBC();
    v20 = sub_244E4E688();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v31[0] = a6;
      v22 = v21;
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_244D61000, v19, v20, "Saving ManagedTransaction", v21, 2u);
      MEMORY[0x2495283BC](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  }
  type metadata accessor for ManagedTransaction();
  v23 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, *(_QWORD *)(v7 + 112));
  v24 = (void *)sub_244E4E2F8();
  objc_msgSend(v23, sel_setSafSessionHash_, v24);

  v25 = (void *)sub_244E4E2F8();
  objc_msgSend(v23, sel_setTransactionId_, v25);

  sub_244E4C36C();
  v26 = (void *)sub_244E4C33C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v33);
  objc_msgSend(v23, sel_setTransactionTimestamp_, v26);

  v27 = (void *)sub_244E4C30C();
  objc_msgSend(v23, sel_setPaymentCardDataHash_, v27);

  v28 = *(void **)(v7 + 112);
  v34[0] = 0;
  if ((objc_msgSend(v28, sel_save_, v34) & 1) != 0)
  {
    v29 = v34[0];
  }
  else
  {
    v30 = v34[0];
    sub_244E4C1E0();

    swift_willThrow();
  }

}

uint64_t sub_244D6A140(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;

  v3 = v2;
  v6 = objc_allocWithZone(MEMORY[0x24BDBB678]);
  v7 = (void *)sub_244E4E2F8();
  v8 = objc_msgSend(v6, sel_initWithEntityName_, v7);

  sub_244D6B068();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414CB8);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_244E50DA0;
  *(_QWORD *)(v9 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 64) = sub_244D6B0A4();
  *(_QWORD *)(v9 + 32) = a1;
  *(_QWORD *)(v9 + 40) = a2;
  swift_bridgeObjectRetain();
  v10 = (void *)sub_244E4E640();
  objc_msgSend(v8, sel_setPredicate_, v10);

  v11 = *(void **)(v3 + 112);
  type metadata accessor for ManagedTransaction();
  v12 = v11;
  v13 = sub_244E4E748();

  return v13;
}

uint64_t sub_244D6A2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  objc_class *ObjCClassFromMetadata;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  id v33;
  void *v34;
  void *v35;
  void *v36;
  void *v37;
  unint64_t v38;
  void *v40;
  unsigned __int8 v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  id v46;
  id v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  objc_class *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  char *v72;
  uint64_t v73;

  v8 = v7;
  v69 = a6;
  v67 = a4;
  v68 = a5;
  v65 = a2;
  v66 = a3;
  v64 = a1;
  v73 = *MEMORY[0x24BDAC8D0];
  v10 = sub_244E4C384();
  v63 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  ObjCClassFromMetadata = (objc_class *)((char *)&v56 - v18);
  MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v56 - v20;
  if (a7 < 1)
  {
    if (qword_257414428 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v13, (uint64_t)qword_257419E78);
    sub_244D640E4(v25, (uint64_t)v16);
    v26 = sub_244E4DCD4();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v16, 1, v26) == 1)
    {
      return sub_244D66F54((uint64_t)v16, &qword_2574145A0);
    }
    else
    {
      v48 = sub_244E4DCBC();
      v49 = sub_244E4E67C();
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_244D61000, v48, v49, "Invalid number of transactions to persist in the DB", v50, 2u);
        MEMORY[0x2495283BC](v50, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v16, v26);
    }
  }
  else
  {
    v22 = a7;
    if (qword_257414428 != -1)
LABEL_32:
      swift_once();
    v58 = __swift_project_value_buffer(v13, (uint64_t)qword_257419E78);
    sub_244D640E4(v58, (uint64_t)v21);
    v23 = sub_244E4DCD4();
    v62 = *(_QWORD *)(v23 - 8);
    v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v62 + 48);
    v24 = v57(v21, 1, v23);
    v60 = ObjCClassFromMetadata;
    v61 = v8;
    v59 = v23;
    if (v24 == 1)
    {
      sub_244D66F54((uint64_t)v21, &qword_2574145A0);
    }
    else
    {
      v29 = sub_244E4DCBC();
      v30 = sub_244E4E688();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v31 = 134217984;
        *(_QWORD *)&v71 = v22;
        sub_244E4E7E4();
        _os_log_impl(&dword_244D61000, v29, v30, "Saving [%ld] Mocked ManagedTransaction", v31, 0xCu);
        MEMORY[0x2495283BC](v31, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v62 + 8))(v21, v23);
    }
    v21 = (char *)type metadata accessor for ManagedTransaction();
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    v8 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v32 = 1;
    while (1)
    {
      v33 = objc_msgSend(objc_allocWithZone(ObjCClassFromMetadata), sel_initWithContext_, *(_QWORD *)(v70 + 112));
      v34 = (void *)sub_244E4E2F8();
      objc_msgSend(v33, sel_setSafSessionHash_, v34);

      v35 = (void *)sub_244E4E2F8();
      objc_msgSend(v33, sel_setTransactionId_, v35);

      sub_244E4C36C();
      v36 = (void *)sub_244E4C33C();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v12, v10);
      objc_msgSend(v33, sel_setTransactionTimestamp_, v36);

      v37 = (void *)sub_244E4C30C();
      objc_msgSend(v33, sel_setPaymentCardDataHash_, v37);

      v72 = v21;
      *(_QWORD *)&v71 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_244DCB02C(0, v8[2] + 1, 1, v8);
      v13 = v8[2];
      v38 = v8[3];
      if (v13 >= v38 >> 1)
        v8 = sub_244DCB02C((_QWORD *)(v38 > 1), v13 + 1, 1, v8);
      v8[2] = v13 + 1;
      sub_244D6B058(&v71, &v8[4 * v13 + 4]);
      if (v22 == v32)
        break;
      if (__OFADD__(v32++, 1))
      {
        __break(1u);
        goto LABEL_32;
      }
    }
    v40 = *(void **)(v70 + 112);
    *(_QWORD *)&v71 = 0;
    v41 = objc_msgSend(v40, sel_save_, &v71);
    v42 = (void *)v71;
    if ((v41 & 1) != 0)
    {
      v43 = (uint64_t)v60;
      sub_244D640E4(v58, (uint64_t)v60);
      v44 = v59;
      v45 = v57((char *)v43, 1, v59);
      v46 = v42;
      if (v45 == 1)
      {
        swift_bridgeObjectRelease();
        return sub_244D66F54(v43, &qword_2574145A0);
      }
      else
      {
        swift_bridgeObjectRetain();
        v51 = sub_244E4DCBC();
        v52 = sub_244E4E688();
        if (os_log_type_enabled(v51, v52))
        {
          v53 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v53 = 134217984;
          v54 = v44;
          v55 = v8[2];
          swift_bridgeObjectRelease();
          *(_QWORD *)&v71 = v55;
          v44 = v54;
          sub_244E4E7E4();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_244D61000, v51, v52, "Saved [%ld] mocked transactions", v53, 0xCu);
          MEMORY[0x2495283BC](v53, -1, -1);

        }
        else
        {

          swift_bridgeObjectRelease_n();
        }
        return (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 8))(v43, v44);
      }
    }
    else
    {
      v47 = (id)v71;
      swift_bridgeObjectRelease();
      sub_244E4C1E0();

      return swift_willThrow();
    }
  }
}

uint64_t sub_244D6A944()
{
  uint64_t v0;

  return v0;
}

char *sub_244D6A950()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  int v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t ObjCClassFromMetadata;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  uint64_t v30;
  _QWORD *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t *boxed_opaque_existential_1;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[5];
  uint64_t v51;

  v43 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x24BDAC7A8](v43);
  v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244E4C2AC();
  v51 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v44 = (char *)&v42 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v42 - v15;
  if (qword_257414428 != -1)
    swift_once();
  v48 = __swift_project_value_buffer(v11, (uint64_t)qword_257419E78);
  sub_244D640E4(v48, (uint64_t)v16);
  v17 = sub_244E4DCD4();
  v49 = *(_QWORD *)(v17 - 8);
  v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  v18 = v47(v16, 1, v17);
  v45 = v0;
  v46 = v2;
  if (v18 == 1)
  {
    sub_244D66F54((uint64_t)v16, &qword_2574145A0);
  }
  else
  {
    v19 = sub_244E4DCBC();
    v20 = sub_244E4E688();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_244D61000, v19, v20, "Retrieving DB context", v21, 2u);
      MEMORY[0x2495283BC](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v16, v17);
  }
  type metadata accessor for StoreAndForwardStorage();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v23 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v24 = (void *)sub_244E4E2F8();
  v25 = (void *)sub_244E4E2F8();
  v26 = objc_msgSend(v23, sel_URLForResource_withExtension_, v24, v25);

  if (v26)
  {
    sub_244E4C27C();

    v27 = v51;
    v28 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
    v28(v5, v9, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v5, 0, 1, v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v5, 1, v6) != 1)
    {
      v29 = v44;
      v28(v44, v5, v6);
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
      v31 = v46;
      v9 = (char *)v46 + *(int *)(v30 + 64);
      v32 = (char *)v46 + *(int *)(v30 + 80);
      *v46 = 0;
      v31[1] = 0;
      v31[2] = 0x646E4165726F7453;
      v31[3] = 0xEF64726177726F46;
      if (qword_2574143B8 != -1)
        swift_once();
      v33 = __swift_project_value_buffer(v6, (uint64_t)qword_257414B98);
      v34 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
      v34(v9, v33, v6);
      v34(v32, (uint64_t)v29, v6);
      v50[3] = v43;
      v50[4] = (uint64_t)&off_2515DF210;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v50);
      sub_244D6AFD8((uint64_t)v31, (uint64_t)boxed_opaque_existential_1);
      type metadata accessor for CoreDataStore();
      swift_initStackObject();
      v36 = v45;
      v37 = sub_244DC96D8(v50);
      if (!v36)
      {
        v9 = (char *)objc_msgSend(*(id *)(v37 + 16), sel_newBackgroundContext);
        objc_msgSend(v9, sel_setAutomaticallyMergesChangesFromParent_, 1);
        swift_release();
      }
      sub_244D6B01C((uint64_t)v31);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v6);
      return v9;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56))(v5, 1, 1, v6);
  }
  sub_244D66F54((uint64_t)v5, &qword_257414B00);
  sub_244D640E4(v48, (uint64_t)v14);
  if (v47(v14, 1, v17) == 1)
  {
    sub_244D66F54((uint64_t)v14, &qword_2574145A0);
  }
  else
  {
    v38 = sub_244E4DCBC();
    v39 = sub_244E4E67C();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_244D61000, v38, v39, "Could not generate model URL", v40, 2u);
      MEMORY[0x2495283BC](v40, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v14, v17);
  }
  sub_244D6AF58();
  swift_allocError();
  swift_willThrow();
  return v9;
}

unint64_t sub_244D6AF58()
{
  unint64_t result;

  result = qword_257414CA0;
  if (!qword_257414CA0)
  {
    result = MEMORY[0x2495282F0](&unk_244E51040, &type metadata for StoreAndForwardError);
    atomic_store(result, (unint64_t *)&qword_257414CA0);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_244D6AFD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CoreDataStoreConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D6B01C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CoreDataStoreConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_244D6B058(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_244D6B068()
{
  unint64_t result;

  result = qword_257414CB0;
  if (!qword_257414CB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257414CB0);
  }
  return result;
}

unint64_t sub_244D6B0A4()
{
  unint64_t result;

  result = qword_257414CC0;
  if (!qword_257414CC0)
  {
    result = MEMORY[0x2495282F0](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257414CC0);
  }
  return result;
}

uint64_t (*sub_244D6B0E8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_244D6B130(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _BYTE v13[352];

  v3 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_resolvedCustomerLocale;
  v4 = sub_244E4C3FC();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56);
  v5(v3, 1, 1, v4);
  v5(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_resolvedCardPreferredLocale, 1, 1, v4);
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_analyticsLanguageSource);
  *v6 = sub_244E4D3D4();
  v6[1] = v7;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardDeclineCount) = 0;
  sub_244E4C39C();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_disconnectionCount) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_attestationFailureCount) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerNotAvailableCount) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_vasErrorCount) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readSuccessReceived) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerReadyReceived) = 0;
  v8 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_transactionData;
  sub_244D6B9B4((uint64_t)v13);
  sub_244D6B9EC((uint64_t)v13, v8);
  v9 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerError;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = -4;
  v10 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readErrorToReturn;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = (_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob);
  *v11 = 0;
  v11[1] = 0;
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_244D6B294(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  _BYTE v14[344];
  _BYTE v15[352];

  v3 = sub_244E4C3A8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  sub_244D6B9B4((uint64_t)v14);
  v7 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_transactionData;
  swift_beginAccess();
  sub_244D6B9EC(v7, (uint64_t)v15);
  sub_244D6B9EC((uint64_t)v14, v7);
  sub_244D6BB6C((uint64_t)v15);
  v8 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerError;
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = -4;
  v9 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readErrorToReturn;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob);
  *v10 = 0;
  v10[1] = 0;
  result = swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readSuccessReceived) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerReadyReceived) = 0;
  if ((a1 & 1) == 0)
  {
    sub_244E4C39C();
    v12 = v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readId;
    swift_beginAccess();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 40))(v12, v6, v3);
    result = swift_endAccess();
    *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_disconnectionCount) = 0;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_attestationFailureCount) = 0;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readerNotAvailableCount) = 0;
    *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_vasErrorCount) = 0;
  }
  return result;
}

uint64_t sub_244D6B42C()
{
  _QWORD v1[2];

  sub_244E4E88C();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "retry count D=");
  sub_244E4EAA8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244E4EAA8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244E4EAA8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244E4EAA8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  return v1[0];
}

BOOL sub_244D6B5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[344];
  _BYTE v18[344];
  _BYTE v19[64];
  uint64_t v20;
  unint64_t v21;

  v1 = v0;
  v2 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_transactionData;
  swift_beginAccess();
  sub_244D6B9EC(v2, (uint64_t)v18);
  sub_244D6B9EC((uint64_t)v18, (uint64_t)v19);
  if (sub_244D6BA34((uint64_t)v19) == 1)
    return *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob + 8) == 0;
  sub_244D6B9EC((uint64_t)v18, (uint64_t)v17);
  sub_244D6BA4C((uint64_t)v17);
  sub_244E4CCA8();
  v3 = sub_244E4D260();
  v5 = v4;
  if (v3 == sub_244E4D260() && v5 == v6)
    goto LABEL_4;
  v7 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
    sub_244E4CCA8();
    v8 = sub_244E4D260();
    v10 = v9;
    if (v8 == sub_244E4D260() && v10 == v11)
    {
LABEL_4:
      swift_bridgeObjectRelease_n();
      goto LABEL_9;
    }
    v12 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      sub_244D6BB6C((uint64_t)v18);
      return *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob + 8) == 0;
    }
  }
LABEL_9:
  v13 = v20;
  v14 = v21;
  sub_244D6BB6C((uint64_t)v18);
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v13 & 0xFFFFFFFFFFFFLL;
  if (!v15)
    return 0;
  return *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_cardReaderBlob + 8) == 0;
}

uint64_t sub_244D6B76C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[352];

  sub_244D6BD20(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_resolvedCustomerLocale);
  sub_244D6BD20(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_resolvedCardPreferredLocale);
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_readId;
  v2 = sub_244E4C3A8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_244D6B9EC(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon16TransactionStore_transactionData, (uint64_t)v4);
  sub_244D6BB6C((uint64_t)v4);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_244D6B834()
{
  return type metadata accessor for TransactionStore();
}

uint64_t type metadata accessor for TransactionStore()
{
  uint64_t result;

  result = qword_257414CF0;
  if (!qword_257414CF0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_244D6B878()
{
  unint64_t v0;
  unint64_t v1;

  sub_244D6B960();
  if (v0 <= 0x3F)
  {
    sub_244E4C3A8();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_244D6B960()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257414D00)
  {
    sub_244E4C3FC();
    v0 = sub_244E4E7C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257414D00);
  }
}

double sub_244D6B9B4(uint64_t a1)
{
  double result;

  *(_BYTE *)(a1 + 336) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_244D6B9EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414F80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D6BA34(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_244D6BA4C(uint64_t a1)
{
  id v2;
  void *v4;

  v4 = *(void **)(a1 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v2 = v4;
  return a1;
}

uint64_t sub_244D6BB6C(uint64_t a1)
{
  sub_244D6BBFC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216));
  return a1;
}

uint64_t sub_244D6BBFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244D6BD20(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414F88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_244D6BD60(void *a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v33;
  objc_class *ObjectType;
  objc_super v35;

  v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_environment] = 5;
  v11 = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_discoveryCache;
  type metadata accessor for DiscoveryCache(0);
  v12 = swift_allocObject();
  v13 = v4;
  swift_defaultActor_initialize();
  *(_QWORD *)(v12 + 112) = 0x40AC200000000000;
  v14 = v12 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  v15 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(_QWORD *)&v4[v11] = v12;
  v16 = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_contentWebService;
  type metadata accessor for ContentWebService();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = 0;
  *(_QWORD *)&v13[v16] = v17;
  v18 = &v13[OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_bundleId];
  *(_QWORD *)v18 = a2;
  *((_QWORD *)v18 + 1) = a3;
  *(_QWORD *)&v13[OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_connection] = a1;
  type metadata accessor for DiscoveryAnalyticsManager();
  v19 = swift_allocObject();
  v20 = (_QWORD *)(v19 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_analyticsSessionID);
  *v20 = 0;
  v20[1] = 0;
  v21 = (_QWORD *)(v19 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_appId);
  *v21 = a2;
  v21[1] = a3;
  swift_bridgeObjectRetain();
  v22 = a1;
  sub_244E4CB1C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574150E8);
  *(_QWORD *)(v19 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_serializer) = sub_244E4CA38();
  *(_QWORD *)&v13[OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_analyticsManager] = v19;

  v35.receiver = v13;
  v35.super_class = ObjectType;
  v23 = objc_msgSendSuper2(&v35, sel_init);
  v24 = qword_257414430;
  v25 = v23;
  if (v24 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v8, (uint64_t)qword_257419E90);
  sub_244D640E4(v26, (uint64_t)v10);
  v27 = sub_244E4DCD4();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v10, 1, v27) == 1)
  {

    sub_244D66F54((uint64_t)v10, &qword_2574145A0);
  }
  else
  {
    v29 = sub_244E4DCBC();
    v30 = sub_244E4E688();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v31 = 0;
      _os_log_impl(&dword_244D61000, v29, v30, "created", v31, 2u);
      MEMORY[0x2495283BC](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v27);
  }
  return v25;
}

id sub_244D6C078()
{
  void *v0;
  void *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  objc_super v13;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414430 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v3, (uint64_t)qword_257419E90);
  sub_244D640E4(v6, (uint64_t)v5);
  v7 = sub_244E4DCD4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_244D66F54((uint64_t)v5, &qword_2574145A0);
  }
  else
  {
    v9 = sub_244E4DCBC();
    v10 = sub_244E4E688();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_244D61000, v9, v10, "DiscoveryService deinit", v11, 2u);
      MEMORY[0x2495283BC](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  v13.receiver = v1;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_dealloc);
}

uint64_t type metadata accessor for DiscoveryService()
{
  return objc_opt_self();
}

uint64_t sub_244D6C2E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574150E0);
  v5[7] = swift_task_alloc();
  v6 = sub_244E4CA68();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D6C3B8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_257414430 != -1)
    swift_once();
  v1 = v0[14];
  v2 = __swift_project_value_buffer(v0[11], (uint64_t)qword_257419E90);
  v0[15] = v2;
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  v0[16] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[17] = v4;
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[18] = (uint64_t)v5;
  if (v5(v1, 1, v3) == 1)
  {
    sub_244D66F54(v0[14], &qword_2574145A0);
  }
  else
  {
    v6 = sub_244E4DCBC();
    v7 = sub_244E4E688();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_244D61000, v6, v7, "DiscoveryService - get content", v8, 2u);
      MEMORY[0x2495283BC](v8, -1, -1);
    }
    v9 = v0[14];

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  v10 = (_QWORD *)swift_task_alloc();
  v0[19] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_244D6C52C;
  return sub_244D6CA2C();
}

uint64_t sub_244D6C52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;

  v6 = *v5;
  *(_QWORD *)(v6 + 160) = a2;
  *(_QWORD *)(v6 + 168) = a4;
  swift_task_dealloc();
  if (!v4)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v6 + 8))();
}

uint64_t sub_244D6C5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  unint64_t v29;
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(v1 + 96);
    while (1)
    {
      v4 = *(v3 - 1);
      v5 = *v3;
      v6 = *(v3 - 3) == *(_QWORD *)(v0 + 16) && *(v3 - 2) == *(_QWORD *)(v0 + 24);
      if (v6 || (sub_244E4EAC0() & 1) != 0)
      {
        v7 = v4 == *(_QWORD *)(v0 + 32) && v5 == *(_QWORD *)(v0 + 40);
        if (v7 || (sub_244E4EAC0() & 1) != 0)
          break;
      }
      v3 += 9;
      if (!--v2)
        goto LABEL_15;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244E4CA5C();
    v8 = 0;
  }
  else
  {
LABEL_15:
    v8 = 1;
  }
  v9 = *(_QWORD *)(v0 + 64);
  v10 = *(_QWORD *)(v0 + 72);
  v11 = *(_QWORD *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v8, 1, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    v13 = *(_QWORD *)(v0 + 120);
    v14 = *(_QWORD *)(v0 + 128);
    v15 = *(_QWORD *)(v0 + 96);
    sub_244D66F54(*(_QWORD *)(v0 + 56), &qword_2574150E0);
    sub_244D640E4(v13, v15);
    if (v12(v15, 1, v14) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 96), &qword_2574145A0);
    }
    else
    {
      v21 = sub_244E4DCBC();
      v22 = sub_244E4E67C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_244D61000, v21, v22, "DiscoveryService - content not found", v23, 2u);
        MEMORY[0x2495283BC](v23, -1, -1);
      }
      v24 = *(_QWORD *)(v0 + 128);
      v25 = *(_QWORD *)(v0 + 136);
      v26 = *(_QWORD *)(v0 + 96);

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v24);
    }
    sub_244D70240();
    swift_allocError();
    *v27 = 0;
    swift_willThrow();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 32))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
    v16 = sub_244E10020();
    if (v17 >> 60 != 15)
    {
      v28 = v16;
      v29 = v17;
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v28, v29);
    }
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    v19 = *(_QWORD *)(v0 + 128);
    v20 = *(_QWORD *)(v0 + 104);
    sub_244D640E4(*(_QWORD *)(v0 + 120), v20);
    if (v18(v20, 1, v19) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 104), &qword_2574145A0);
    }
    else
    {
      v31 = sub_244E4DCBC();
      v32 = sub_244E4E67C();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_244D61000, v31, v32, "DiscoveryService - content encoding error", v33, 2u);
        MEMORY[0x2495283BC](v33, -1, -1);
      }
      v34 = *(_QWORD *)(v0 + 128);
      v35 = *(_QWORD *)(v0 + 136);
      v36 = *(_QWORD *)(v0 + 104);

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v34);
    }
    v38 = *(_QWORD *)(v0 + 72);
    v37 = *(_QWORD *)(v0 + 80);
    v39 = *(_QWORD *)(v0 + 64);
    sub_244D70240();
    swift_allocError();
    *v40 = 6;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D6CA2C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[6] = v0;
  v2 = sub_244E4C384();
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v3 = sub_244E4C3FC();
  v1[10] = v3;
  v1[11] = *(_QWORD *)(v3 - 8);
  v1[12] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415068);
  v1[13] = swift_task_alloc();
  v1[14] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D6CB40()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (qword_257414430 != -1)
    swift_once();
  v1 = v0[20];
  v2 = __swift_project_value_buffer(v0[14], (uint64_t)qword_257419E90);
  v0[21] = v2;
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  v0[22] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[23] = v4;
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[24] = (uint64_t)v5;
  v6 = v5(v1, 1, v3);
  v7 = v0[20];
  if (v6 == 1)
  {
    sub_244D66F54(v0[20], &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v0[6], 0x66696E614D746567, 0xED00002928747365, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v8 = v0[12];
  v9 = v0[13];
  v10 = v0[10];
  v11 = v0[11];
  sub_244E4C3F0();
  sub_244E4C3E4();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v8, v10);
  v12 = sub_244E4C3D8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12);
  v15 = v0[13];
  if (v14 == 1)
  {
    sub_244D66F54(v0[13], &qword_257415068);
    v16 = sub_244E4D92C();
    v18 = v17;
  }
  else
  {
    v16 = sub_244E4C3CC();
    v18 = v19;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
  }
  v20 = v0[6];
  v0[25] = v18;
  v0[26] = v16;
  v21 = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_discoveryCache;
  v0[27] = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_discoveryCache;
  v0[28] = *(_QWORD *)(v20 + v21);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_244D6CD18()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = sub_244D90AFC(v0[26], v0[25]);
  v3 = v2;
  v5 = v4;
  v0[2] = v1;
  v0[3] = v2;
  v0[4] = v4;
  v0[5] = v6;
  swift_release();
  v0[29] = v1;
  v0[30] = v3;
  v0[31] = v5;
  return swift_task_switch();
}

uint64_t sub_244D6CD84()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unsigned int (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  _QWORD *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  if (*(_QWORD *)(v0 + 240))
  {
    v29 = *(_QWORD *)(v0 + 240);
    v28 = *(_QWORD *)(v0 + 40);
    v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
    v3 = *(_QWORD *)(v0 + 168);
    v2 = *(_QWORD *)(v0 + 176);
    v4 = *(_QWORD *)(v0 + 152);
    swift_bridgeObjectRelease();
    sub_244D640E4(v3, v4);
    if (v1(v4, 1, v2) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 152), &qword_2574145A0);
    }
    else
    {
      v10 = sub_244E4DCBC();
      v11 = sub_244E4E688();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_244D61000, v10, v11, "DiscoveryService - configuration read from cache", v12, 2u);
        MEMORY[0x2495283BC](v12, -1, -1);
      }
      v14 = *(_QWORD *)(v0 + 176);
      v13 = *(_QWORD *)(v0 + 184);
      v15 = *(_QWORD *)(v0 + 152);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
    }
    v27 = *(_QWORD *)(v0 + 248);
    v16 = *(_QWORD *)(v0 + 232);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v16, v29, v27, v28);
  }
  else
  {
    v5 = sub_244D6F144();
    if (v5 == 5)
    {
      v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
      v7 = *(_QWORD *)(v0 + 168);
      v8 = *(_QWORD *)(v0 + 176);
      v9 = *(_QWORD *)(v0 + 120);
      swift_bridgeObjectRelease();
      sub_244D640E4(v7, v9);
      if (v6(v9, 1, v8) == 1)
      {
        sub_244D66F54(*(_QWORD *)(v0 + 120), &qword_2574145A0);
      }
      else
      {
        v20 = sub_244E4DCBC();
        v21 = sub_244E4E67C();
        if (os_log_type_enabled(v20, v21))
        {
          v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v22 = 0;
          _os_log_impl(&dword_244D61000, v20, v21, "DiscoveryService - getManifest - unable to get environment", v22, 2u);
          MEMORY[0x2495283BC](v22, -1, -1);
        }
        v23 = *(_QWORD *)(v0 + 176);
        v24 = *(_QWORD *)(v0 + 184);
        v25 = *(_QWORD *)(v0 + 120);

        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
      }
      sub_244D70240();
      swift_allocError();
      *v26 = 6;
      swift_willThrow();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    else
    {
      v18 = v5;
      v19 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 256) = v19;
      *v19 = v0;
      v19[1] = sub_244D6D108;
      return sub_244D6F808(v18);
    }
  }
}

uint64_t sub_244D6D108(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 264) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 272) = a1;
  return swift_task_switch();
}

uint64_t sub_244D6D17C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;

  v1 = sub_244D70284(*(_QWORD *)(v0 + 272));
  v3 = v2;
  v5 = v4;
  v7 = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 280) = v3;
  *(_QWORD *)(v0 + 288) = v5;
  if (v3)
  {
    *(_QWORD *)(v0 + 296) = v7;
    swift_bridgeObjectRetain();
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 304) = v8;
    *v8 = v0;
    v8[1] = sub_244D6D3A4;
    return sub_244D70818(v1, v3);
  }
  else
  {
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
    v11 = *(_QWORD *)(v0 + 168);
    v12 = *(_QWORD *)(v0 + 176);
    v13 = *(_QWORD *)(v0 + 128);
    swift_bridgeObjectRelease();
    sub_244D640E4(v11, v13);
    if (v10(v13, 1, v12) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 128), &qword_2574145A0);
    }
    else
    {
      v14 = sub_244E4DCBC();
      v15 = sub_244E4E67C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_244D61000, v14, v15, "DiscoveryService - getManifest - unable to get region configuration", v16, 2u);
        MEMORY[0x2495283BC](v16, -1, -1);
      }
      v17 = *(_QWORD *)(v0 + 176);
      v18 = *(_QWORD *)(v0 + 184);
      v19 = *(_QWORD *)(v0 + 128);

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);
    }
    sub_244D70240();
    swift_allocError();
    *v20 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244D6D3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;

  v4 = (_QWORD *)*v3;
  v4[39] = a1;
  v4[40] = a2;
  v4[41] = v2;
  swift_task_dealloc();
  if (!v2)
    swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_244D6D41C()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  unsigned int (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 320) + 16))
  {
    v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
    v2 = *(_QWORD *)(v0 + 176);
    v3 = *(_QWORD *)(v0 + 144);
    sub_244D640E4(*(_QWORD *)(v0 + 168), v3);
    if (v1(v3, 1, v2) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 144), &qword_2574145A0);
    }
    else
    {
      v8 = sub_244E4DCBC();
      v9 = sub_244E4E688();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v10 = 0;
        _os_log_impl(&dword_244D61000, v8, v9, "DiscoveryService - configuration & manifest read from back-end", v10, 2u);
        MEMORY[0x2495283BC](v10, -1, -1);
      }
      v11 = *(_QWORD *)(v0 + 176);
      v12 = *(_QWORD *)(v0 + 184);
      v13 = *(_QWORD *)(v0 + 144);

      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v11);
    }
    *(_QWORD *)(v0 + 336) = *(_QWORD *)(*(_QWORD *)(v0 + 48) + *(_QWORD *)(v0 + 216));
    swift_retain();
    sub_244E4C378();
    return swift_task_switch();
  }
  else
  {
    v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 192);
    v6 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 176);
    v7 = *(_QWORD *)(v0 + 136);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_244D640E4(v6, v7);
    if (v4(v7, 1, v5) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 136), &qword_2574145A0);
    }
    else
    {
      v15 = sub_244E4DCBC();
      v16 = sub_244E4E67C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_244D61000, v15, v16, "DiscoveryService - getManifest - empty manifest", v17, 2u);
        MEMORY[0x2495283BC](v17, -1, -1);
      }
      v18 = *(_QWORD *)(v0 + 176);
      v19 = *(_QWORD *)(v0 + 184);
      v20 = *(_QWORD *)(v0 + 136);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);
    }
    sub_244D70240();
    swift_allocError();
    *v21 = 6;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244D6D70C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D6D7D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[8];
  v1 = v0[9];
  v3 = v0[7];
  sub_244D90734(v1, v0[26], v0[25], v0[39], v0[40], v0[36], v0[37]);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return swift_task_switch();
}

uint64_t sub_244D6D85C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(v0 + 312);
  v1 = *(_QWORD *)(v0 + 288);
  v4 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 320);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 8))(v3, v5, v1, v4);
}

uint64_t sub_244D6D928()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D6DB0C(int a1, int a2, void *aBlock, void *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;

  v4[2] = a4;
  v4[3] = _Block_copy(aBlock);
  v6 = sub_244E4E31C();
  v8 = v7;
  v4[4] = v7;
  v9 = sub_244E4E31C();
  v11 = v10;
  v4[5] = v10;
  a4;
  v12 = (_QWORD *)swift_task_alloc();
  v4[6] = v12;
  *v12 = v4;
  v12[1] = sub_244D6DBC0;
  return sub_244D6C2E8(v6, v8, v9, v11);
}

uint64_t sub_244D6DBC0(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void (**v13)(_QWORD, _QWORD, _QWORD);

  v4 = v2;
  v7 = *v3;
  v8 = *(void **)(*v3 + 16);
  v9 = *v3;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v4)
  {
    v10 = sub_244E4C1D4();

    v11 = 0;
    v12 = (void *)v10;
  }
  else
  {
    v11 = sub_244E4C30C();
    sub_244D651AC(a1, a2);
    v10 = 0;
    v12 = (void *)v11;
  }
  v13 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 24);
  v13[2](v13, v11, v10);

  _Block_release(v13);
  return (*(uint64_t (**)(void))(v9 + 8))();
}

uint64_t sub_244D6DCB0()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v1[4] = swift_task_alloc();
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D6DD20()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  _QWORD *v10;

  if (qword_257414430 != -1)
    swift_once();
  v1 = v0[5];
  v2 = __swift_project_value_buffer(v0[3], (uint64_t)qword_257419E90);
  v0[6] = v2;
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  v0[7] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[8] = v4;
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[9] = (uint64_t)v5;
  if (v5(v1, 1, v3) == 1)
  {
    sub_244D66F54(v0[5], &qword_2574145A0);
  }
  else
  {
    v6 = sub_244E4DCBC();
    v7 = sub_244E4E688();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_244D61000, v6, v7, "DiscoveryService - get content list", v8, 2u);
      MEMORY[0x2495283BC](v8, -1, -1);
    }
    v9 = v0[5];

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  v10 = (_QWORD *)swift_task_alloc();
  v0[10] = (uint64_t)v10;
  *v10 = v0;
  v10[1] = sub_244D6DE94;
  return sub_244D6CA2C();
}

uint64_t sub_244D6DE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v9;
  _QWORD *v10;

  v9 = (_QWORD *)*v5;
  v10 = (_QWORD *)*v5;
  swift_task_dealloc();
  if (v4)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return ((uint64_t (*)(void))v10[1])();
  }
  else
  {
    v9[11] = a4;
    v9[12] = a2;
    v9[13] = a1;
    return swift_task_switch();
  }
}

uint64_t sub_244D6DF38()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;

  v1 = sub_244D70DE8(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = sub_244E103A4(v1);
  v4 = v3;
  swift_bridgeObjectRelease();
  if (v4 >> 60 == 15)
  {
    v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 72);
    v6 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 32);
    sub_244D640E4(*(_QWORD *)(v0 + 48), v7);
    if (v5(v7, 1, v6) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 32), &qword_2574145A0);
    }
    else
    {
      v9 = sub_244E4DCBC();
      v10 = sub_244E4E67C();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v11 = 0;
        _os_log_impl(&dword_244D61000, v9, v10, "DiscoveryService - content list encoding error", v11, 2u);
        MEMORY[0x2495283BC](v11, -1, -1);
      }
      v12 = *(_QWORD *)(v0 + 56);
      v13 = *(_QWORD *)(v0 + 64);
      v14 = *(_QWORD *)(v0 + 32);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v12);
    }
    sub_244D70240();
    swift_allocError();
    *v15 = 6;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v2, v4);
  }
}

uint64_t sub_244D6E218(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_244D6E278;
  return sub_244D6DCB0();
}

uint64_t sub_244D6E278(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t *v3;
  void *v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void (**v13)(_QWORD, _QWORD, _QWORD);

  v4 = v2;
  v7 = *v3;
  v8 = *(void **)(*v3 + 16);
  v9 = *v3;
  swift_task_dealloc();

  if (v4)
  {
    v10 = sub_244E4C1D4();

    v11 = 0;
    v12 = (void *)v10;
  }
  else
  {
    v11 = sub_244E4C30C();
    sub_244D651AC(a1, a2);
    v10 = 0;
    v12 = (void *)v11;
  }
  v13 = *(void (***)(_QWORD, _QWORD, _QWORD))(v7 + 24);
  v13[2](v13, v11, v10);

  _Block_release(v13);
  return (*(uint64_t (**)(void))(v9 + 8))();
}

uint64_t sub_244D6E34C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[11] = a3;
  v4[12] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[13] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4[14] = swift_task_alloc();
  v4[15] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D6E3C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  char v11;
  id v12;
  void *v13;
  unsigned int v14;
  _QWORD *v15;
  _QWORD *v17;

  if (qword_257414430 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 104), (uint64_t)qword_257419E90);
  *(_QWORD *)(v0 + 128) = v2;
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  *(_QWORD *)(v0 + 136) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v0 + 144) = v4;
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v0 + 152) = v5;
  if (v5(v1, 1, v3) == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 120), &qword_2574145A0);
  }
  else
  {
    v6 = sub_244E4DCBC();
    v7 = sub_244E4E688();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_244D61000, v6, v7, "DiscoveryService - get layoutBundle", v8, 2u);
      MEMORY[0x2495283BC](v8, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 120);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  v10 = (uint64_t (*)(void))sub_244E4D86C();
  v11 = v10();
  swift_release();
  if ((v11 & 1) != 0
    && (v12 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v13 = (void *)sub_244E4E2F8(),
        v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v13,
        v12,
        v14))
  {
    sub_244D70240();
    swift_allocError();
    *v15 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v17 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v17;
    *v17 = v0;
    v17[1] = sub_244D6E610;
    return sub_244D6CA2C();
  }
}

uint64_t sub_244D6E610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;

  v6 = (_QWORD *)*v5;
  v6[2] = v5;
  v6[3] = a1;
  v6[4] = a2;
  v6[5] = a3;
  v6[6] = a4;
  v6[7] = v4;
  v7 = (_QWORD *)*v5;
  v6[21] = a2;
  v6[22] = a4;
  swift_task_dealloc();
  if (!v4)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v7[1])();
}

uint64_t sub_244D6E698()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t (*v18)(void);
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v1 = v0[21];
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = (uint64_t *)(v1 + 48);
    while (1)
    {
      v5 = *v3;
      v4 = v3[1];
      v6 = v3[2];
      v7 = *(v3 - 2) == v0[10] && *(v3 - 1) == v0[11];
      if (v7 || (sub_244E4EAC0() & 1) != 0)
        break;
      v3 += 9;
      if (!--v2)
        goto LABEL_9;
    }
    v24 = v0[5];
    v25 = v0[22];
    v19 = (_QWORD *)v0[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v0[8] = v6;
    swift_bridgeObjectRetain();
    v20 = sub_244E4EAA8();
    v22 = v21;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    *v19 = v24;
    v19[1] = v25;
    v19[2] = v5;
    v19[3] = v4;
    v19[4] = v20;
    v19[5] = v22;
    v18 = (uint64_t (*)(void))v0[1];
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[19];
    v9 = v0[17];
    v10 = v0[14];
    sub_244D640E4(v0[16], v10);
    if (v8(v10, 1, v9) == 1)
    {
      sub_244D66F54(v0[14], &qword_2574145A0);
    }
    else
    {
      v11 = sub_244E4DCBC();
      v12 = sub_244E4E67C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v13 = 0;
        _os_log_impl(&dword_244D61000, v11, v12, "DiscoveryService - get layoutBundle - content not found", v13, 2u);
        MEMORY[0x2495283BC](v13, -1, -1);
      }
      v14 = v0[17];
      v15 = v0[18];
      v16 = v0[14];

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
    }
    sub_244D70240();
    swift_allocError();
    *v17 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    v18 = (uint64_t (*)(void))v0[1];
  }
  return v18();
}

uint64_t sub_244D6EA40(int a1, void *aBlock, void *a3)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v3[8] = a3;
  v3[9] = _Block_copy(aBlock);
  v5 = sub_244E4E31C();
  v7 = v6;
  v3[10] = v6;
  a3;
  v8 = (_QWORD *)swift_task_alloc();
  v3[11] = v8;
  *v8 = v3;
  v8[1] = sub_244D6EAE0;
  return sub_244D6E34C((uint64_t)(v3 + 2), v5, v7);
}

uint64_t sub_244D6EAE0()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  void (**v5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v2 = v0;
  v3 = *(void **)(*v1 + 64);
  v4 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  v5 = *(void (***)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(v4 + 72);
  if (v2)
  {
    v6 = (void *)sub_244E4C1D4();

    ((void (**)(_QWORD, _QWORD, _QWORD, _QWORD, void *))v5)[2](v5, 0, 0, 0, v6);
    _Block_release(v5);
  }
  else
  {
    v7 = (void *)sub_244E4E2F8();
    v8 = (void *)sub_244E4E2F8();
    v9 = (void *)sub_244E4E2F8();
    ((void (**)(_QWORD, void *, void *, void *, _QWORD))v5)[2](v5, v7, v8, v9, 0);

    _Block_release(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_244D6EC2C()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D6EC8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  void *v7;

  if (qword_257414430 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 24), (uint64_t)qword_257419E90);
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 32);
  if (v5 == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 32), &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(*(_QWORD *)(v0 + 16), 0x65526C65636E6163, 0xEF29287473657571, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = *(void **)(*(_QWORD *)(*(_QWORD *)(v0 + 16)
                            + OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_contentWebService)
                + 16);
  if (v7)
    objc_msgSend(v7, sel_cancel);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D6EEC8(const void *a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v4;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  a2;
  v4 = (_QWORD *)swift_task_alloc();
  v2[4] = v4;
  *v4 = v2;
  v4[1] = sub_244D6EF28;
  return sub_244D6EC2C();
}

uint64_t sub_244D6EF28()
{
  uint64_t *v0;
  void (**v1)(_QWORD);
  void *v2;
  uint64_t v4;

  v1 = *(void (***)(_QWORD))(*v0 + 24);
  v2 = *(void **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_244D6EF8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414430 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E90);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D66F54((uint64_t)v4, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v1, 0xD00000000000001DLL, 0x8000000244E56FE0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return sub_244D75E90();
}

uint64_t sub_244D6F144()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t (*v16)(void);
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  unsigned __int8 v31;
  uint64_t v32;
  int v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  _DWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  id v44;
  id v45;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v1 = v0;
  v2 = sub_244E4CD20();
  v51 = *(_QWORD *)(v2 - 8);
  v52 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_244E4CB94();
  v5 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244E4CBC4();
  v54 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v47 - v14;
  v16 = (uint64_t (*)(void))sub_244E4D86C();
  v17 = v16();
  swift_release();
  if ((v17 & 1) != 0)
  {
    v48 = v7;
    v49 = v4;
    v18 = sub_244E4D968();
    v20 = v19;
    v21 = sub_244E4D8D8();
    v22 = sub_244D81000(v18, v20, v21);
    v24 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v59 = v22;
    v60 = v24;
    v57 = 45;
    v58 = 0xE100000000000000;
    v55 = 0;
    v56 = 0xE000000000000000;
    sub_244D70D08();
    sub_244E4E808();
    swift_bridgeObjectRelease();
    sub_244E4E37C();
    swift_bridgeObjectRelease();
    v25 = sub_244DCC4B0();
    if (v25 == 5)
    {
      if (qword_257414430 != -1)
        swift_once();
      v26 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E90);
      sub_244D640E4(v26, (uint64_t)v13);
      v27 = sub_244E4DCD4();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v13, 1, v27) == 1)
      {
        sub_244D66F54((uint64_t)v13, &qword_2574145A0);
      }
      else
      {
        v41 = sub_244E4DCBC();
        v42 = sub_244E4E67C();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v43 = 0;
          _os_log_impl(&dword_244D61000, v41, v42, "Content environment could not be loaded", v43, 2u);
          MEMORY[0x2495283BC](v43, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v27);
      }
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v53, *MEMORY[0x24BDE43D8], v50);
      (*(void (**)(char *, _QWORD, uint64_t))(v51 + 104))(v49, *MEMORY[0x24BDE45C0], v52);
      v44 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
      v45 = objc_msgSend(v44, sel_processName);

      sub_244E4E31C();
      sub_244E4CBB8();
      sub_244E4CD14();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v48);
      return 5;
    }
  }
  else
  {
    v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB4398]), sel_init);
    v30 = objc_msgSend(v29, sel_aa_primaryAppleAccount);

    if (v30 && (v31 = objc_msgSend(v30, sel_aa_isSandboxAccount), v30, (v31 & 1) != 0))
      v25 = 3;
    else
      v25 = 4;
  }
  v32 = OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_environment;
  v33 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_environment);
  if (v33 == 5 || (sub_244D80120(v33), (v34 & 1) == 0))
  {
    *(_BYTE *)(v1 + v32) = v25;
    if (qword_257414430 != -1)
      swift_once();
    v35 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E90);
    sub_244D640E4(v35, (uint64_t)v15);
    v36 = sub_244E4DCD4();
    v37 = *(_QWORD *)(v36 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v15, 1, v36) == 1)
    {
      sub_244D66F54((uint64_t)v15, &qword_2574145A0);
    }
    else
    {
      v38 = sub_244E4DCBC();
      v39 = sub_244E4E688();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (_DWORD *)swift_slowAlloc();
        v59 = swift_slowAlloc();
        *v40 = 136315138;
        __asm { BR              X10 }
      }

      (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v36);
    }
  }
  return v25;
}

uint64_t sub_244D6F808(char a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 120) = v1;
  *(_BYTE *)(v2 + 57) = a1;
  *(_QWORD *)(v2 + 128) = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  *(_QWORD *)(v2 + 136) = swift_task_alloc();
  *(_QWORD *)(v2 + 144) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D6F87C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  int v6;
  uint64_t v7;
  _QWORD *v8;

  if (qword_257414430 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 144);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 128), (uint64_t)qword_257419E90);
  *(_QWORD *)(v0 + 152) = v2;
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  *(_QWORD *)(v0 + 160) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v0 + 168) = v4;
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v0 + 176) = v5;
  v6 = v5(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 144);
  if (v6 == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 144), &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(*(_QWORD *)(v0 + 120), 0xD000000000000016, 0x8000000244E57020, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  *(_QWORD *)(v0 + 184) = *(_QWORD *)(*(_QWORD *)(v0 + 120)
                                    + OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_contentWebService);
  swift_retain();
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v8;
  *v8 = v0;
  v8[1] = sub_244D6F9CC;
  return sub_244DD0F3C(v0 + 64, *(_BYTE *)(v0 + 57));
}

uint64_t sub_244D6F9CC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244D6FA28()
{
  uint64_t v0;
  unsigned int (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;

  sub_244D70C60(v0 + 64, v0 + 16, &qword_257415088);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v1 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 176);
    v2 = *(_QWORD *)(v0 + 160);
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(unsigned __int8 *)(v0 + 16);
    v5 = 6;
    if (v4 == 3)
      v5 = 3;
    if (v4 == 5)
      v6 = 5;
    else
      v6 = v5;
    sub_244D640E4(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 136));
    if (v1(v3, 1, v2) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 136), &qword_2574145A0);
    }
    else
    {
      v9 = sub_244E4DCBC();
      v10 = sub_244E4E67C();
      if (os_log_type_enabled(v9, v10))
      {
        v11 = (uint8_t *)swift_slowAlloc();
        v12 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v11 = 138412290;
        sub_244D70240();
        swift_allocError();
        *v13 = v6;
        v14 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v0 + 112) = v14;
        sub_244E4E7E4();
        *v12 = v14;
        _os_log_impl(&dword_244D61000, v9, v10, "DiscoveryService - getConfiguration - %@", v11, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v12, -1, -1);
        MEMORY[0x2495283BC](v11, -1, -1);
      }
      v15 = *(_QWORD *)(v0 + 160);
      v16 = *(_QWORD *)(v0 + 168);
      v17 = *(_QWORD *)(v0 + 136);

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v15);
    }
    sub_244D70240();
    swift_allocError();
    *v18 = v6;
    swift_willThrow();
    sub_244D70CA4(v0 + 64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D70CDC);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
}

uint64_t sub_244D6FCAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_244D71068;
  return v6();
}

uint64_t sub_244D6FD00(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_244D71068;
  return v7();
}

uint64_t sub_244D6FD54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_244E4E55C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_244E4E550();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_244D66F54(a1, &qword_257415740);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_244E4E514();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_244D6FEA0(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_244D6FF04;
  return v6(a1);
}

uint64_t sub_244D6FF04()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_244D6FF54()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_244D71068;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_257414FE8 + dword_257414FE8))(v2, v3);
}

uint64_t sub_244D6FFBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_244D71068;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_257414FF8 + dword_257414FF8))(v2, v3, v4);
}

uint64_t sub_244D70038(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_244D71068;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_257415008 + dword_257415008))(a1, v4, v5, v6);
}

uint64_t sub_244D700BC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244D700E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244D70150;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257415018 + dword_257415018))(a1, v4);
}

uint64_t sub_244D70150()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_244D70198()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 24));
  return swift_deallocObject();
}

uint64_t sub_244D701CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = (void *)v0[3];
  v4 = (void *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_244D71068;
  return ((uint64_t (*)(int, void *, void *))((char *)&dword_257415030 + dword_257415030))(v2, v3, v4);
}

unint64_t sub_244D70240()
{
  unint64_t result;

  result = qword_257415060;
  if (!qword_257415060)
  {
    result = MEMORY[0x2495282F0](MEMORY[0x24BDE4680], MEMORY[0x24BDE4678]);
    atomic_store(result, (unint64_t *)&qword_257415060);
  }
  return result;
}

uint64_t sub_244D70284(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  unint64_t v35;
  unint64_t v36;
  int64_t v37;
  unint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;

  v2 = sub_244E4C3FC();
  v54 = *(_QWORD *)(v2 - 8);
  v55 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v53 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415068);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 64);
  v51 = a1 + 64;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & v7;
  v49 = (unint64_t)(v8 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v12 = 0;
  v50 = a1;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v12 << 6);
      goto LABEL_26;
    }
    v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v15 >= v49)
      goto LABEL_33;
    v16 = *(_QWORD *)(v51 + 8 * v15);
    ++v12;
    if (!v16)
    {
      v12 = v15 + 1;
      if (v15 + 1 >= v49)
        goto LABEL_33;
      v16 = *(_QWORD *)(v51 + 8 * v12);
      if (!v16)
      {
        v12 = v15 + 2;
        if (v15 + 2 >= v49)
          goto LABEL_33;
        v16 = *(_QWORD *)(v51 + 8 * v12);
        if (!v16)
        {
          v12 = v15 + 3;
          if (v15 + 3 >= v49)
            goto LABEL_33;
          v16 = *(_QWORD *)(v51 + 8 * v12);
          if (!v16)
          {
            v12 = v15 + 4;
            if (v15 + 4 >= v49)
              goto LABEL_33;
            v16 = *(_QWORD *)(v51 + 8 * v12);
            if (!v16)
              break;
          }
        }
      }
    }
LABEL_25:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_26:
    v18 = 16 * v14;
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v18);
    v21 = *v19;
    v20 = v19[1];
    v52 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v18);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v22 = v53;
    sub_244E4C3F0();
    sub_244E4C3E4();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
    v23 = sub_244E4C3D8();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v6, 1, v23) == 1)
    {
      sub_244D66F54((uint64_t)v6, &qword_257415068);
      swift_bridgeObjectRelease();
    }
    else
    {
      v25 = sub_244E4C3CC();
      v27 = v26;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v23);
      if (v21 == v25 && v20 == v27)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v52;
      }
      v29 = sub_244E4EAC0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) != 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v52;
      }
      a1 = v50;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v17 = v15 + 5;
  if (v17 < v49)
  {
    v16 = *(_QWORD *)(v51 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        v12 = v17 + 1;
        if (__OFADD__(v17, 1))
          break;
        if (v12 >= v49)
          goto LABEL_33;
        v16 = *(_QWORD *)(v51 + 8 * v12);
        ++v17;
        if (v16)
          goto LABEL_25;
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    v12 = v17;
    goto LABEL_25;
  }
LABEL_33:
  swift_release();
  swift_bridgeObjectRelease();
  v30 = 1 << *(_BYTE *)(a1 + 32);
  v31 = -1;
  if (v30 < 64)
    v31 = ~(-1 << v30);
  v32 = v31 & *(_QWORD *)(a1 + 64);
  v33 = (unint64_t)(v30 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v34 = 0;
  if (!v32)
    goto LABEL_37;
  while (2)
  {
    v35 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    v36 = v35 | (v34 << 6);
LABEL_55:
    v40 = 16 * v36;
    v41 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v40);
    v43 = *v41;
    v42 = v41[1];
    v44 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v43 == sub_244E4D92C() && v42 == v45)
    {
      swift_release();
      swift_bridgeObjectRelease();
LABEL_66:
      swift_bridgeObjectRelease();
      return v44;
    }
    v47 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v47 & 1) != 0)
    {
      swift_release();
      goto LABEL_66;
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    a1 = v50;
    if (v32)
      continue;
    break;
  }
LABEL_37:
  v37 = v34 + 1;
  if (__OFADD__(v34, 1))
    goto LABEL_70;
  if (v37 >= v33)
  {
LABEL_67:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  v38 = *(_QWORD *)(v51 + 8 * v37);
  ++v34;
  if (v38)
    goto LABEL_54;
  v34 = v37 + 1;
  if (v37 + 1 >= v33)
    goto LABEL_67;
  v38 = *(_QWORD *)(v51 + 8 * v34);
  if (v38)
    goto LABEL_54;
  v34 = v37 + 2;
  if (v37 + 2 >= v33)
    goto LABEL_67;
  v38 = *(_QWORD *)(v51 + 8 * v34);
  if (v38)
    goto LABEL_54;
  v34 = v37 + 3;
  if (v37 + 3 >= v33)
    goto LABEL_67;
  v38 = *(_QWORD *)(v51 + 8 * v34);
  if (v38)
    goto LABEL_54;
  v34 = v37 + 4;
  if (v37 + 4 >= v33)
    goto LABEL_67;
  v38 = *(_QWORD *)(v51 + 8 * v34);
  if (v38)
    goto LABEL_54;
  v39 = v37 + 5;
  if (v39 >= v33)
    goto LABEL_67;
  v38 = *(_QWORD *)(v51 + 8 * v39);
  if (v38)
  {
    v34 = v39;
LABEL_54:
    v32 = (v38 - 1) & v38;
    v36 = __clz(__rbit64(v38)) + (v34 << 6);
    goto LABEL_55;
  }
  while (1)
  {
    v34 = v39 + 1;
    if (__OFADD__(v39, 1))
      break;
    if (v34 >= v33)
      goto LABEL_67;
    v38 = *(_QWORD *)(v51 + 8 * v34);
    ++v39;
    if (v38)
      goto LABEL_54;
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_244D70818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  v3[18] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D7087C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  v0[20] = *(_QWORD *)(v0[17] + OBJC_IVAR____TtC21ProximityReaderDaemon16DiscoveryService_contentWebService);
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_257417ED0 + dword_257417ED0);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[21] = v1;
  *v1 = v0;
  v1[1] = sub_244D70910;
  return v3((uint64_t)(v0 + 8), v0[15], v0[16]);
}

uint64_t sub_244D70910()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244D7096C()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;

  sub_244D70C60(v0 + 64, v0 + 16, &qword_257415080);
  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    v1 = *(unsigned __int8 *)(v0 + 16);
    v2 = 6;
    if (v1 == 3)
      v2 = 3;
    if (v1 == 5)
      v3 = 5;
    else
      v3 = v2;
    if (qword_257414430 != -1)
      swift_once();
    v4 = *(_QWORD *)(v0 + 152);
    v5 = __swift_project_value_buffer(*(_QWORD *)(v0 + 144), (uint64_t)qword_257419E90);
    sub_244D640E4(v5, v4);
    v6 = sub_244E4DCD4();
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 152), &qword_2574145A0);
    }
    else
    {
      v11 = sub_244E4DCBC();
      v12 = sub_244E4E67C();
      if (os_log_type_enabled(v11, v12))
      {
        v13 = (uint8_t *)swift_slowAlloc();
        v20 = v3;
        v14 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v13 = 138412290;
        sub_244D70240();
        swift_allocError();
        *v15 = v20;
        v16 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v0 + 112) = v16;
        sub_244E4E7E4();
        *v14 = v16;
        _os_log_impl(&dword_244D61000, v11, v12, "DiscoveryService - getManifest - %@", v13, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
        swift_arrayDestroy();
        v17 = v14;
        v3 = v20;
        MEMORY[0x2495283BC](v17, -1, -1);
        MEMORY[0x2495283BC](v13, -1, -1);
      }
      v18 = *(_QWORD *)(v0 + 152);

      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v18, v6);
    }
    sub_244D70240();
    swift_allocError();
    *v19 = v3;
    swift_willThrow();
    sub_244D70CA4(v0 + 64, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D70C30);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v9 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)(v0 + 24);
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v9, v8);
  }
}

uint64_t sub_244D70C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D70C60(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_244D70CA4(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40));
  return a1;
}

uint64_t sub_244D70CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if ((a6 & 1) != 0)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_244D70D08()
{
  unint64_t result;

  result = qword_257418450;
  if (!qword_257418450)
  {
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_257418450);
  }
  return result;
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_244D70D7C()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_244D70150;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_257415090 + dword_257415090))(v2, v3);
}

unint64_t sub_244D70DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_244E4CA68();
  v14 = *(_QWORD *)(v3 - 8);
  v15 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a2 + 16);
  if (!v6)
    return MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v12 = a2;
  v7 = a2 + 96;
  v8 = MEMORY[0x24BEE4AF8];
  v13 = v5;
  do
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244E4CA5C();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v8 = sub_244DCB138(0, *(_QWORD *)(v8 + 16) + 1, 1, v8);
    v10 = *(_QWORD *)(v8 + 16);
    v9 = *(_QWORD *)(v8 + 24);
    if (v10 >= v9 >> 1)
      v8 = sub_244DCB138(v9 > 1, v10 + 1, 1, v8);
    *(_QWORD *)(v8 + 16) = v10 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v8+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * v10, v13, v15);
    v7 += 72;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_244D70F80()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 32));
  return swift_deallocObject();
}

uint64_t sub_244D70FBC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (void *)v0[4];
  v4 = (void *)v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_244D71068;
  return ((uint64_t (*)(int, int, void *, void *))((char *)&dword_2574150B8 + dword_2574150B8))(v2, v3, v5, v4);
}

uint64_t objectdestroy_3Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t (*sub_244D7106C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_244D710A8()
{
  uint64_t v0;
  _BYTE v2[344];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244D6B9EC(v0 + 48, (uint64_t)v2);
  sub_244D6BB6C((uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PINStore()
{
  return objc_opt_self();
}

uint64_t sub_244D7112C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  v1 = sub_244E4E274();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDC62F0];
  MEMORY[0x24BDAC7A8](v1);
  v9 = xmmword_244E50F50;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v0, v1);
  sub_244D65324(&qword_257415370, v2, MEMORY[0x24BDC6300]);
  sub_244E4E484();
  if (v8 != *(_QWORD *)(v7 + 16))
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v8 < *(_QWORD *)(v7 + 16))
    {
      __asm { BR              X11 }
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_244D71320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[55] = a4;
  v5[56] = v4;
  v5[53] = a2;
  v5[54] = a3;
  v5[52] = a1;
  v6 = sub_244E4E28C();
  v5[57] = v6;
  v5[58] = *(_QWORD *)(v6 - 8);
  v5[59] = swift_task_alloc();
  v7 = sub_244E4E274();
  v5[60] = v7;
  v5[61] = *(_QWORD *)(v7 - 8);
  v5[62] = swift_task_alloc();
  v5[63] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5[64] = swift_task_alloc();
  v5[65] = swift_task_alloc();
  v5[66] = swift_task_alloc();
  v5[67] = swift_task_alloc();
  v5[68] = swift_task_alloc();
  v5[69] = swift_task_alloc();
  v5[70] = swift_task_alloc();
  v5[71] = swift_task_alloc();
  v5[72] = swift_task_alloc();
  return swift_task_switch();
}

void sub_244D71468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  uint64_t v46;
  unsigned int (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int16 v101;
  uint64_t v102;

  v102 = *MEMORY[0x24BDAC8D0];
  if (qword_257414428 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 576);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 504), (uint64_t)qword_257419E78);
  *(_QWORD *)(v0 + 584) = v2;
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  *(_QWORD *)(v0 + 592) = v3;
  v4 = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v0 + 600) = v4;
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  *(_QWORD *)(v0 + 608) = v5;
  v86 = v2;
  if (v5(v1, 1, v3) == 1)
  {
    sub_244D6412C(*(_QWORD *)(v0 + 576));
  }
  else
  {
    v6 = sub_244E4DCBC();
    v7 = sub_244E4E670();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_244D61000, v6, v7, "handleReadResult", v8, 2u);
      MEMORY[0x2495283BC](v8, -1, -1);
    }
    v9 = *(_QWORD *)(v0 + 576);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v9, v3);
  }
  v10 = *(_QWORD *)(v0 + 424);
  v87 = *(_QWORD *)(v0 + 416);
  v88 = v10;
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  sub_244E14174(v87, v88, (uint64_t)&v87);
  swift_bridgeObjectRelease();
  v11 = v87;
  v12 = v88;
  *(_QWORD *)(v0 + 616) = v87;
  *(_QWORD *)(v0 + 624) = v12;
  v14 = v89;
  v13 = v90;
  *(_QWORD *)(v0 + 632) = v89;
  *(_QWORD *)(v0 + 640) = v13;
  v16 = v91;
  v15 = v92;
  *(_QWORD *)(v0 + 648) = v91;
  *(_QWORD *)(v0 + 656) = v15;
  v18 = v93;
  v17 = v94;
  *(_QWORD *)(v0 + 664) = v93;
  *(_QWORD *)(v0 + 672) = v17;
  v19 = v95;
  v20 = v96;
  *(_QWORD *)(v0 + 680) = v95;
  *(_QWORD *)(v0 + 688) = v20;
  v22 = v97;
  v21 = v98;
  *(_QWORD *)(v0 + 696) = v97;
  *(_QWORD *)(v0 + 704) = v21;
  v23 = v99;
  v24 = v100;
  *(_QWORD *)(v0 + 712) = v99;
  *(_QWORD *)(v0 + 720) = v24;
  v25 = v101;
  *(_WORD *)(v0 + 130) = v101;
  if (!v12)
  {
    v41 = *(_QWORD *)(v0 + 520);
    sub_244D640E4(v86, v41);
    v42 = v5(v41, 1, v3);
    v36 = *(_QWORD *)(v0 + 520);
    if (v42 == 1)
      goto LABEL_15;
    v51 = sub_244E4DCBC();
    v52 = sub_244E4E67C();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_244D61000, v51, v52, "Could not load SAF session", v53, 2u);
      MEMORY[0x2495283BC](v53, -1, -1);
    }
    v54 = *(_QWORD *)(v0 + 520);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v54, v3);
LABEL_35:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    __asm { BR              X2 }
  }
  v84 = v5;
  v75 = v4;
  v76 = v19;
  *(_QWORD *)(v0 + 160) = v11;
  *(_QWORD *)(v0 + 168) = v12;
  *(_QWORD *)(v0 + 176) = v14;
  *(_QWORD *)(v0 + 184) = v13;
  *(_QWORD *)(v0 + 192) = v16;
  *(_QWORD *)(v0 + 200) = v15;
  *(_QWORD *)(v0 + 208) = v18;
  *(_QWORD *)(v0 + 216) = v17;
  *(_QWORD *)(v0 + 224) = v19;
  *(_QWORD *)(v0 + 232) = v20;
  *(_QWORD *)(v0 + 240) = v22;
  *(_QWORD *)(v0 + 248) = v21;
  *(_DWORD *)(v0 + 256) = v23;
  *(_QWORD *)(v0 + 264) = v24;
  v73 = v25 & 1;
  *(_BYTE *)(v0 + 272) = v25 & 1;
  *(_BYTE *)(v0 + 273) = HIBYTE(v25) & 1;
  v82 = v13;
  v83 = v15;
  v80 = v12;
  v81 = v20;
  v26 = v21;
  v78 = v16;
  v79 = v18;
  v77 = v14;
  v27 = v11;
  v28 = v22;
  v29 = v23;
  v30 = v24;
  v85 = v17;
  sub_244E4C720();
  v31 = sub_244E4C2DC();
  v33 = v32;
  swift_bridgeObjectRelease();
  v74 = v31;
  *(_QWORD *)(v0 + 728) = v31;
  *(_QWORD *)(v0 + 736) = v33;
  if (v33 >> 60 == 15)
  {
    v34 = *(_QWORD *)(v0 + 528);
    sub_244D73F3C(v27, v80);
    sub_244D640E4(v86, v34);
    v35 = v84(v34, 1, v3);
    v36 = *(_QWORD *)(v0 + 528);
    if (v35 != 1)
    {
      v37 = sub_244E4DCBC();
      v38 = sub_244E4E67C();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v39 = 0;
        _os_log_impl(&dword_244D61000, v37, v38, "Could not generate SAF hash", v39, 2u);
        MEMORY[0x2495283BC](v39, -1, -1);
      }
      v40 = *(_QWORD *)(v0 + 528);

      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v40, v3);
      goto LABEL_35;
    }
LABEL_15:
    sub_244D6412C(v36);
    goto LABEL_35;
  }
  v43 = v85;
  v68 = v30;
  v69 = v29;
  v70 = v28;
  v71 = v27;
  v72 = v26;
  v44 = *(_QWORD *)(v0 + 432);
  v45 = sub_244D8BCC0();
  if ((*(_BYTE *)(v44 + 336) & 1) != 0)
  {
    v47 = v84;
    v46 = v3;
    v48 = v86;
    v49 = v33;
    v50 = v74;
    if ((v45 & 1) == 0)
    {
      sub_244D65324(&qword_257415360, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      sub_244E4E268();
      __asm { BR              X10 }
    }
  }
  else
  {
    v47 = v84;
    v46 = v3;
    v48 = v86;
    v49 = v33;
    v50 = v74;
    if ((v45 & 1) == 0)
    {
LABEL_29:
      v60 = *(_QWORD *)(v0 + 536);
      sub_244D640E4(v48, v60);
      if (v47(v60, 1, v46) == 1)
      {
        sub_244D6412C(*(_QWORD *)(v0 + 536));
      }
      else
      {
        v61 = v43;
        v62 = sub_244E4DCBC();
        v63 = sub_244E4E67C();
        if (os_log_type_enabled(v62, v63))
        {
          v64 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v64 = 0;
          _os_log_impl(&dword_244D61000, v62, v63, "Read was not executed in SAF mode, updating SAF session to force a new prepare", v64, 2u);
          MEMORY[0x2495283BC](v64, -1, -1);
        }
        v65 = *(_QWORD *)(v0 + 536);

        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v65, v46);
        v43 = v61;
      }
      v67 = *(_QWORD *)(v0 + 416);
      v66 = *(_QWORD *)(v0 + 424);
      *(_QWORD *)(v0 + 280) = v71;
      *(_QWORD *)(v0 + 288) = v80;
      *(_QWORD *)(v0 + 296) = v77;
      *(_QWORD *)(v0 + 304) = v82;
      *(_QWORD *)(v0 + 312) = v78;
      *(_QWORD *)(v0 + 320) = v83;
      *(_QWORD *)(v0 + 328) = v79;
      *(_QWORD *)(v0 + 336) = v43;
      *(_QWORD *)(v0 + 344) = v76;
      *(_QWORD *)(v0 + 352) = v81;
      *(_QWORD *)(v0 + 360) = v70;
      *(_QWORD *)(v0 + 368) = v72;
      *(_DWORD *)(v0 + 376) = v69;
      *(_QWORD *)(v0 + 384) = v68;
      *(_BYTE *)(v0 + 392) = v73;
      *(_BYTE *)(v0 + 393) = 1;
      v87 = v67;
      v88 = v66;
      swift_bridgeObjectRetain();
      sub_244E4E3F4();
      sub_244E05580(v87, v88, v0 + 280);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_244D65198(v50, v49);
      goto LABEL_35;
    }
  }
  v55 = *(_QWORD *)(v0 + 544);
  sub_244D640E4(v48, v55);
  if (v47(v55, 1, v46) == 1)
  {
    sub_244D6412C(*(_QWORD *)(v0 + 544));
  }
  else
  {
    v56 = sub_244E4DCBC();
    v57 = sub_244E4E670();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v58 = 0;
      _os_log_impl(&dword_244D61000, v56, v57, "Simulating SAF reader mode mismatch", v58, 2u);
      MEMORY[0x2495283BC](v58, -1, -1);
    }
    v59 = *(_QWORD *)(v0 + 544);

    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v59, v46);
    v43 = v85;
  }
  goto LABEL_29;
}

uint64_t sub_244D72218()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[96];
  v0[97] = sub_244D6A140(v0[52], v0[53]);
  v0[98] = v1;
  if (v1)
    sub_244D73F3C(v0[77], v0[78]);
  return swift_task_switch();
}

uint64_t sub_244D7230C()
{
  uint64_t *v0;
  uint64_t (*v1)(void);
  char v2;
  id v3;
  void *v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = (uint64_t (*)(void))sub_244E4D86C();
  v2 = v1();
  swift_release();
  if ((v2 & 1) != 0
    && (v3 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v4 = (void *)sub_244E4E2F8(),
        v5 = objc_msgSend(v3, sel_BOOLForKey_, v4),
        v4,
        v3,
        v5))
  {
    v6 = sub_244E4C72C();
    v8 = v7;
    v0[99] = v7;
    v9 = (_QWORD *)swift_task_alloc();
    v0[100] = (uint64_t)v9;
    *v9 = v0;
    v9[1] = sub_244D72494;
    return sub_244D74004(v0[95], (uint64_t)(v0 + 20), v0[52], v0[53], v0[97], v6, v8, v0[93]);
  }
  else
  {
    v0[102] = sub_244E4C72C();
    v0[103] = v11;
    return swift_task_switch();
  }
}

uint64_t sub_244D72494()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  *(_QWORD *)(*v1 + 808) = v0;
  swift_task_dealloc();
  v3 = *(_QWORD *)(v2 + 624);
  v4 = *(_QWORD *)(v2 + 616);
  swift_bridgeObjectRelease();
  sub_244D73F3C(v4, v3);
  return swift_task_switch();
}

uint64_t sub_244D725F0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 752);
  v2 = *(_QWORD *)(v0 + 744);
  sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));
  sub_244D651AC(v2, v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
}

uint64_t sub_244D7271C()
{
  uint64_t v0;
  void *v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;

  swift_release();
  v1 = *(void **)(v0 + 808);
  v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 608);
  v3 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 512);
  sub_244D640E4(*(_QWORD *)(v0 + 584), v4);
  if (v2(v4, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 752);
    v6 = *(_QWORD *)(v0 + 744);
    v7 = *(_QWORD *)(v0 + 512);
    sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));

    sub_244D651AC(v6, v5);
    sub_244D6412C(v7);
  }
  else
  {
    v8 = v1;
    v9 = v1;
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E67C();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 752);
    v14 = *(_QWORD *)(v0 + 744);
    v15 = *(_QWORD *)(v0 + 728);
    if (v12)
    {
      v21 = *(_QWORD *)(v0 + 736);
      v23 = *(_QWORD *)(v0 + 752);
      v22 = *(_QWORD *)(v0 + 744);
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v18 = v1;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 408) = v19;
      sub_244E4E7E4();
      *v17 = v19;

      _os_log_impl(&dword_244D61000, v10, v11, "Could not save SAF transaction due to: [ %@ ]", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v17, -1, -1);
      MEMORY[0x2495283BC](v16, -1, -1);
      sub_244D65198(v15, v21);

      sub_244D651AC(v22, v23);
    }
    else
    {
      sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));

      sub_244D651AC(v14, v13);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 600) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 592));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(24, 0);
}

uint64_t sub_244D72A24()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = v0[98];
  sub_244D69E08(v0[52], v0[53], v0[102], v0[103], v0[93], v0[94]);
  v0[104] = v1;
  if (v1)
    sub_244D73F3C(v0[77], v0[78]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_244D72B38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unsigned int (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v1 = *(_QWORD *)(v0 + 776);
  v2 = v1 + 1;
  if (__OFADD__(v1, 1))
    __break(1u);
  if (v2 >= sub_244E4D938())
  {
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 608);
    v11 = *(_QWORD *)(v0 + 592);
    v12 = *(_QWORD *)(v0 + 560);
    sub_244D640E4(*(_QWORD *)(v0 + 584), v12);
    if (v10(v12, 1, v11) == 1)
    {
      sub_244D6412C(*(_QWORD *)(v0 + 560));
    }
    else
    {
      v21 = sub_244E4DCBC();
      v22 = sub_244E4E688();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_244D61000, v21, v22, "SAF transactions limit reached", v23, 2u);
        MEMORY[0x2495283BC](v23, -1, -1);
      }
      v24 = *(_QWORD *)(v0 + 600);
      v25 = *(_QWORD *)(v0 + 592);
      v26 = *(_QWORD *)(v0 + 560);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v25);
    }
    v47 = *(_QWORD *)(v0 + 752);
    v46 = *(_QWORD *)(v0 + 744);
    v27 = *(_QWORD *)(v0 + 736);
    v28 = *(_QWORD *)(v0 + 728);
    v29 = *(_QWORD *)(v0 + 720);
    v30 = *(_QWORD *)(v0 + 712);
    v31 = *(_QWORD *)(v0 + 704);
    v32 = *(_QWORD *)(v0 + 696);
    v33 = *(_QWORD *)(v0 + 688);
    v34 = *(_QWORD *)(v0 + 680);
    v35 = *(_QWORD *)(v0 + 672);
    v36 = *(_QWORD *)(v0 + 664);
    v37 = *(_QWORD *)(v0 + 656);
    v38 = *(_QWORD *)(v0 + 648);
    v39 = *(_QWORD *)(v0 + 640);
    v40 = *(_QWORD *)(v0 + 632);
    v41 = *(_QWORD *)(v0 + 624);
    v43 = *(_QWORD *)(v0 + 416);
    v42 = *(_QWORD *)(v0 + 424);
    v44 = *(_BYTE *)(v0 + 131) & 1;
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 616);
    *(_QWORD *)(v0 + 24) = v41;
    *(_QWORD *)(v0 + 32) = v40;
    *(_QWORD *)(v0 + 40) = v39;
    *(_QWORD *)(v0 + 48) = v38;
    *(_QWORD *)(v0 + 56) = v37;
    *(_QWORD *)(v0 + 64) = v36;
    *(_QWORD *)(v0 + 72) = v35;
    *(_QWORD *)(v0 + 80) = v34;
    *(_QWORD *)(v0 + 88) = v33;
    *(_QWORD *)(v0 + 96) = v32;
    *(_QWORD *)(v0 + 104) = v31;
    *(_DWORD *)(v0 + 112) = v30;
    *(_QWORD *)(v0 + 120) = v29;
    *(_BYTE *)(v0 + 128) = 1;
    *(_BYTE *)(v0 + 129) = v44;
    v48 = v43;
    v49 = v42;
    swift_bridgeObjectRetain();
    sub_244E4E3F4();
    sub_244E05580(v48, v49, v0 + 16);
    swift_bridgeObjectRelease();
    sub_244D65198(v28, v27);
    sub_244D651AC(v46, v47);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 608);
    v4 = *(_QWORD *)(v0 + 592);
    v5 = *(_QWORD *)(v0 + 584);
    v6 = *(_QWORD *)(v0 + 552);
    sub_244D73F3C(*(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 624));
    sub_244D640E4(v5, v6);
    if (v3(v6, 1, v4) == 1)
    {
      v7 = *(_QWORD *)(v0 + 752);
      v8 = *(_QWORD *)(v0 + 744);
      v9 = *(_QWORD *)(v0 + 552);
      sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));
      sub_244D651AC(v8, v7);
      swift_release();
      sub_244D6412C(v9);
    }
    else
    {
      v13 = sub_244E4DCBC();
      v14 = sub_244E4E670();
      if (os_log_type_enabled(v13, v14))
      {
        v15 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v15 = 134217984;
        *(_QWORD *)(v0 + 400) = v2;
        sub_244E4E7E4();
        _os_log_impl(&dword_244D61000, v13, v14, "Number of transactions [%ld]", v15, 0xCu);
        MEMORY[0x2495283BC](v15, -1, -1);
      }
      v16 = *(_QWORD *)(v0 + 752);
      v17 = *(_QWORD *)(v0 + 744);
      v18 = *(_QWORD *)(v0 + 600);
      v19 = *(_QWORD *)(v0 + 592);
      v20 = *(_QWORD *)(v0 + 552);
      sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));

      sub_244D651AC(v17, v16);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(0, 1);
}

uint64_t sub_244D72FD4()
{
  uint64_t v0;
  void *v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;

  swift_release();
  v1 = *(void **)(v0 + 784);
  v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 608);
  v3 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 512);
  sub_244D640E4(*(_QWORD *)(v0 + 584), v4);
  if (v2(v4, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 752);
    v6 = *(_QWORD *)(v0 + 744);
    v7 = *(_QWORD *)(v0 + 512);
    sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));

    sub_244D651AC(v6, v5);
    sub_244D6412C(v7);
  }
  else
  {
    v8 = v1;
    v9 = v1;
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E67C();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 752);
    v14 = *(_QWORD *)(v0 + 744);
    v15 = *(_QWORD *)(v0 + 728);
    if (v12)
    {
      v21 = *(_QWORD *)(v0 + 736);
      v23 = *(_QWORD *)(v0 + 752);
      v22 = *(_QWORD *)(v0 + 744);
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v18 = v1;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 408) = v19;
      sub_244E4E7E4();
      *v17 = v19;

      _os_log_impl(&dword_244D61000, v10, v11, "Could not save SAF transaction due to: [ %@ ]", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v17, -1, -1);
      MEMORY[0x2495283BC](v16, -1, -1);
      sub_244D65198(v15, v21);

      sub_244D651AC(v22, v23);
    }
    else
    {
      sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));

      sub_244D651AC(v14, v13);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 600) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 592));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(24, 0);
}

uint64_t sub_244D732DC()
{
  uint64_t v0;
  void *v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  id v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;

  swift_release();
  v1 = *(void **)(v0 + 832);
  v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 608);
  v3 = *(_QWORD *)(v0 + 592);
  v4 = *(_QWORD *)(v0 + 512);
  sub_244D640E4(*(_QWORD *)(v0 + 584), v4);
  if (v2(v4, 1, v3) == 1)
  {
    v5 = *(_QWORD *)(v0 + 752);
    v6 = *(_QWORD *)(v0 + 744);
    v7 = *(_QWORD *)(v0 + 512);
    sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));

    sub_244D651AC(v6, v5);
    sub_244D6412C(v7);
  }
  else
  {
    v8 = v1;
    v9 = v1;
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E67C();
    v12 = os_log_type_enabled(v10, v11);
    v13 = *(_QWORD *)(v0 + 752);
    v14 = *(_QWORD *)(v0 + 744);
    v15 = *(_QWORD *)(v0 + 728);
    if (v12)
    {
      v21 = *(_QWORD *)(v0 + 736);
      v23 = *(_QWORD *)(v0 + 752);
      v22 = *(_QWORD *)(v0 + 744);
      v16 = (uint8_t *)swift_slowAlloc();
      v17 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v16 = 138412290;
      v18 = v1;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 408) = v19;
      sub_244E4E7E4();
      *v17 = v19;

      _os_log_impl(&dword_244D61000, v10, v11, "Could not save SAF transaction due to: [ %@ ]", v16, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v17, -1, -1);
      MEMORY[0x2495283BC](v16, -1, -1);
      sub_244D65198(v15, v21);

      sub_244D651AC(v22, v23);
    }
    else
    {
      sub_244D65198(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 736));

      sub_244D651AC(v14, v13);
    }
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 600) + 8))(*(_QWORD *)(v0 + 512), *(_QWORD *)(v0 + 592));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(24, 0);
}

uint64_t sub_244D735E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  char *v13;
  uint64_t v15;

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v2 + 16))
  {
    v6 = *(_QWORD *)(v2 + 16);
  }
  else
  {
    if (qword_257414428 != -1)
      swift_once();
    v7 = __swift_project_value_buffer(v3, (uint64_t)qword_257419E78);
    sub_244D640E4(v7, (uint64_t)v5);
    v8 = sub_244E4DCD4();
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) == 1)
    {
      sub_244D6412C((uint64_t)v5);
    }
    else
    {
      v10 = sub_244E4DCBC();
      v11 = sub_244E4E670();
      if (os_log_type_enabled(v10, v11))
      {
        v12 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v12 = 0;
        _os_log_impl(&dword_244D61000, v10, v11, "Initializing SAF storage", v12, 2u);
        MEMORY[0x2495283BC](v12, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v8);
    }
    type metadata accessor for StoreAndForwardStorage();
    v6 = swift_allocObject();
    swift_defaultActor_initialize();
    v13 = sub_244D6A950();
    if (v1)
    {
      swift_defaultActor_destroy();
      swift_deallocPartialClassInstance();
      return v6;
    }
    *(_QWORD *)(v6 + 112) = v13;
    *(_QWORD *)(v2 + 16) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_244D737DC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StoreAndForwardManager()
{
  return objc_opt_self();
}

uint64_t sub_244D73820()
{
  return 1;
}

uint64_t sub_244D73834()
{
  sub_244E4EB80();
  sub_244E4EB8C();
  return sub_244E4EBC8();
}

uint64_t sub_244D73874()
{
  return sub_244E4EB8C();
}

uint64_t sub_244D73898()
{
  sub_244E4EB80();
  sub_244E4EB8C();
  return sub_244E4EBC8();
}

unint64_t sub_244D738D4()
{
  return 0xD000000000000017;
}

uint64_t sub_244D738F0(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_244E4C0C0();
  if (!result || (result = sub_244E4C0E4(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_244E4C0D8();
      sub_244E4E28C();
      sub_244D65324(&qword_257415360, (uint64_t (*)(uint64_t))MEMORY[0x24BDC6AF8], MEMORY[0x24BDC6AE8]);
      return sub_244E4E250();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_244D739B4()
{
  char v0;

  sub_244E4C240();
  v0 = sub_244E4E454();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

id sub_244D73A00(os_log_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  objc_class *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  NSObject *v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint8_t *v32;
  NSObject *v33;
  uint64_t v34;
  unint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t inited;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint8_t *v43;
  uint8_t *v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint8_t *v48;
  uint64_t v49;
  uint64_t v50;

  v2 = sub_244E4CB64();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v43 - v10;
  v50 = (uint64_t)a1;
  v12 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
  v13 = (objc_class *)sub_244E4C4BC();
  if (swift_dynamicCast())
  {
    v14 = (id)v49;
    if (qword_257414428 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E78);
    sub_244D640E4(v15, (uint64_t)v11);
    v16 = sub_244E4DCD4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v11, 1, v16) == 1)
    {
      sub_244D6412C((uint64_t)v11);
    }
    else
    {
      v14 = v14;
      v21 = sub_244E4DCBC();
      v22 = sub_244E4E67C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = swift_slowAlloc();
        v50 = v24;
        *(_DWORD *)v23 = 136315138;
        v48 = v23 + 4;
        sub_244E4C4B0();
        v25 = sub_244E4C4D4();
        v49 = sub_244D9A70C(v25, v26, &v50);
        sub_244E4E7E4();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_244D61000, v21, v22, "[SAF] Returning error: [ %s ]", v23, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v24, -1, -1);
        MEMORY[0x2495283BC](v23, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v16);
    }
  }
  else
  {
    if (qword_257414428 != -1)
      swift_once();
    v18 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E78);
    sub_244D640E4(v18, (uint64_t)v9);
    v19 = sub_244E4DCD4();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v19) == 1)
    {
      sub_244D6412C((uint64_t)v9);
    }
    else
    {
      v27 = a1;
      v28 = a1;
      v29 = sub_244E4DCBC();
      v30 = sub_244E4E67C();
      LODWORD(v48) = v30;
      if (os_log_type_enabled(v29, v30))
      {
        v31 = swift_slowAlloc();
        v47 = v20;
        v32 = (uint8_t *)v31;
        v46 = swift_slowAlloc();
        v49 = (uint64_t)a1;
        v50 = v46;
        v44 = v32;
        v45 = v29;
        *(_DWORD *)v32 = 136315138;
        v43 = v32 + 4;
        v20 = v47;
        v33 = a1;
        v34 = sub_244E4E370();
        v49 = sub_244D9A70C(v34, v35, &v50);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();

        v36 = v44;
        a1 = v45;
        _os_log_impl(&dword_244D61000, v45, (os_log_type_t)v48, "[SAF] Unexpected error: [ %s ]", v44, 0xCu);
        v37 = v46;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v37, -1, -1);
        MEMORY[0x2495283BC](v36, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v19);
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDE4388], v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_244E50DA0;
    *(_QWORD *)(inited + 32) = sub_244E4C48C();
    *(_QWORD *)(inited + 40) = v39;
    v40 = sub_244E4CB58();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 48) = v40;
    sub_244DB2520(inited);
    v41 = objc_allocWithZone(v13);
    v14 = (id)sub_244E4C4C8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v14;
}

uint64_t sub_244D73F3C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244D73FAC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_244D73FC0(a1, a2);
  return a1;
}

uint64_t sub_244D73FC0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_244D74004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v10;

  v8[24] = a8;
  v8[25] = v10;
  v8[22] = a6;
  v8[23] = a7;
  v8[20] = a4;
  v8[21] = a5;
  v8[18] = a2;
  v8[19] = a3;
  v8[17] = a1;
  v8[26] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D74088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 168);
  v2 = sub_244E4D938();
  *(_QWORD *)(v0 + 232) = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v2 - v1 >= 1)
  {
    if (qword_257414428 == -1)
    {
LABEL_4:
      v3 = *(_QWORD *)(v0 + 224);
      v4 = __swift_project_value_buffer(*(_QWORD *)(v0 + 208), (uint64_t)qword_257419E78);
      sub_244D640E4(v4, v3);
      v5 = sub_244E4DCD4();
      v6 = *(_QWORD *)(v5 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
      {
        sub_244D6412C(*(_QWORD *)(v0 + 224));
      }
      else
      {
        v11 = sub_244E4DCBC();
        v12 = sub_244E4E670();
        if (os_log_type_enabled(v11, v12))
        {
          v13 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v13 = 0;
          _os_log_impl(&dword_244D61000, v11, v12, "Saving maximum number of transactions in SAF mode", v13, 2u);
          MEMORY[0x2495283BC](v13, -1, -1);
        }
        v14 = *(_QWORD *)(v0 + 224);

        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
      }
      return swift_task_switch();
    }
LABEL_19:
    swift_once();
    goto LABEL_4;
  }
  if (qword_257414428 != -1)
    swift_once();
  v7 = *(_QWORD *)(v0 + 216);
  v8 = __swift_project_value_buffer(*(_QWORD *)(v0 + 208), (uint64_t)qword_257419E78);
  sub_244D640E4(v8, v7);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_244D6412C(*(_QWORD *)(v0 + 216));
  }
  else
  {
    v16 = sub_244E4DCBC();
    v17 = sub_244E4E67C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v18 = 0;
      _os_log_impl(&dword_244D61000, v16, v17, "Max number of SAF transaction has already been reached", v18, 2u);
      MEMORY[0x2495283BC](v18, -1, -1);
    }
    v19 = *(_QWORD *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v19, v9);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D74318()
{
  uint64_t *v0;

  sub_244D6A2A8(v0[19], v0[20], v0[22], v0[23], v0[24], v0[25], v0[29]);
  return swift_task_switch();
}

uint64_t sub_244D743A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 144);
  v4 = *(_BYTE *)(v3 + 113);
  v5 = *(_DWORD *)(v3 + 96);
  v6 = *(_QWORD *)(v3 + 104);
  v7 = *(_QWORD *)(v3 + 80);
  v8 = *(_QWORD *)(v3 + 88);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(_QWORD *)(v3 + 72);
  v11 = *(_QWORD *)(v3 + 48);
  v12 = *(_QWORD *)(v3 + 56);
  v13 = *(_QWORD *)(v3 + 32);
  v14 = *(_QWORD *)(v3 + 40);
  v15 = *(_QWORD *)(v3 + 16);
  v16 = *(_QWORD *)(v3 + 24);
  v17 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)v3;
  *(_QWORD *)(v0 + 24) = v17;
  *(_QWORD *)(v0 + 32) = v15;
  *(_QWORD *)(v0 + 40) = v16;
  *(_QWORD *)(v0 + 48) = v13;
  *(_QWORD *)(v0 + 56) = v14;
  *(_QWORD *)(v0 + 64) = v11;
  *(_QWORD *)(v0 + 72) = v12;
  *(_QWORD *)(v0 + 80) = v9;
  *(_QWORD *)(v0 + 88) = v10;
  *(_QWORD *)(v0 + 96) = v7;
  *(_QWORD *)(v0 + 104) = v8;
  *(_DWORD *)(v0 + 112) = v5;
  *(_QWORD *)(v0 + 120) = v6;
  *(_BYTE *)(v0 + 128) = 1;
  *(_BYTE *)(v0 + 129) = v4;
  v19 = v1;
  sub_244D744C8(v3);
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  sub_244E05580(v19, v2, v0 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D744C8(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_244D7453C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257415380;
  if (!qword_257415380)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257415378);
    result = MEMORY[0x2495282F0](MEMORY[0x24BDD06A0], v1);
    atomic_store(result, (unint64_t *)&qword_257415380);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x2495282E4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StoreAndForwardError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for StoreAndForwardError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_244D74660 + 4 * byte_244E50F60[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_244D74680 + 4 * byte_244E50F65[v4]))();
}

_BYTE *sub_244D74660(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_244D74680(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244D74688(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244D74690(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244D74698(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244D746A0(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_244D746AC()
{
  return 0;
}

ValueMetadata *type metadata accessor for StoreAndForwardError()
{
  return &type metadata for StoreAndForwardError;
}

unint64_t sub_244D746C8()
{
  unint64_t result;

  result = qword_257415388;
  if (!qword_257415388)
  {
    result = MEMORY[0x2495282F0](&unk_244E51018, &type metadata for StoreAndForwardError);
    atomic_store(result, (unint64_t *)&qword_257415388);
  }
  return result;
}

uint64_t destroy for StoreAndForwardSession()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StoreAndForwardSession(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StoreAndForwardSession(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  return a1;
}

__n128 __swift_memcpy114_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for StoreAndForwardSession(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_BYTE *)(a1 + 113) = *(_BYTE *)(a2 + 113);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreAndForwardSession(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 114))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreAndForwardSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 114) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 114) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreAndForwardSession()
{
  return &type metadata for StoreAndForwardSession;
}

uint64_t sub_244D74A84()
{
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  sub_244E4EBB0();
  sub_244E4EBBC();
  sub_244E4EB98();
  return sub_244E4EB98();
}

uint64_t sub_244D74BB4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D74BDC + 4 * byte_244E51080[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_244D74BDC()
{
  return 0x496E6F6973736573;
}

unint64_t sub_244D74C28()
{
  return 0xD000000000000010;
}

uint64_t sub_244D74C44()
{
  return 0x4449746F6F62;
}

uint64_t sub_244D74C58()
{
  return 0x797269707865;
}

unint64_t sub_244D74C6C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_244D74CAC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  __int128 v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574153B0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D75B90();
  sub_244E4EBEC();
  LOBYTE(v11) = 0;
  sub_244E4EA60();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_244E4EA60();
    LOBYTE(v11) = 2;
    sub_244E4EA60();
    LOBYTE(v11) = 3;
    sub_244E4EA60();
    LOBYTE(v11) = 4;
    sub_244E4EA60();
    LOBYTE(v11) = 5;
    sub_244E4EA60();
    v11 = *(_OWORD *)(v3 + 96);
    v10[15] = 6;
    sub_244D75C18();
    sub_244E4EA90();
    LOBYTE(v11) = 7;
    sub_244E4EA6C();
    LOBYTE(v11) = 8;
    sub_244E4EA6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_244D74EF0()
{
  unsigned __int8 *v0;

  return sub_244D74BB4(*v0);
}

uint64_t sub_244D74EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D75298(a1, a2);
  *a3 = result;
  return result;
}

void sub_244D74F1C(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_244D74F28()
{
  sub_244D75B90();
  return sub_244E4EC04();
}

uint64_t sub_244D74F50()
{
  sub_244D75B90();
  return sub_244E4EC10();
}

double sub_244D74F78@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  _OWORD v8[2];
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int16 v14;

  sub_244D75620(a1, (uint64_t)v8);
  if (!v2)
  {
    v5 = v12;
    *(_OWORD *)(a2 + 64) = v11;
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v13;
    *(_WORD *)(a2 + 112) = v14;
    v6 = v8[1];
    *(_OWORD *)a2 = v8[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = *(double *)&v9;
    v7 = v10;
    *(_OWORD *)(a2 + 32) = v9;
    *(_OWORD *)(a2 + 48) = v7;
  }
  return result;
}

uint64_t sub_244D74FDC(_QWORD *a1)
{
  return sub_244D74CAC(a1);
}

uint64_t sub_244D74FF0()
{
  sub_244E4EB80();
  sub_244D74A84();
  return sub_244E4EBC8();
}

uint64_t sub_244D75030()
{
  sub_244E4EB80();
  sub_244D74A84();
  return sub_244E4EBC8();
}

uint64_t sub_244D75068@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_244D75074(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  _OWORD v12[7];
  __int16 v13;
  _OWORD v14[7];
  __int16 v15;

  v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  v13 = *(_WORD *)(a1 + 112);
  v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  v5 = *a2;
  v6 = a2[1];
  v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v15 = *((_WORD *)a2 + 56);
  v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return sub_244D7513C((uint64_t)v12, (uint64_t)v14) & 1;
}

unint64_t sub_244D750F8()
{
  unint64_t result;

  result = qword_257415390;
  if (!qword_257415390)
  {
    result = MEMORY[0x2495282F0](&unk_244E510B8, &type metadata for StoreAndForwardSession);
    atomic_store(result, (unint64_t *)&qword_257415390);
  }
  return result;
}

uint64_t sub_244D7513C(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  char v6;
  BOOL v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_244E4EAC0(), v6 = 0, (v5 & 1) != 0))
  {
    v7 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24);
    if (v7 || (v8 = sub_244E4EAC0(), v6 = 0, (v8 & 1) != 0))
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40)
        || (v9 = sub_244E4EAC0(), v6 = 0, (v9 & 1) != 0))
      {
        if (*(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48) && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
          || (v10 = sub_244E4EAC0(), v6 = 0, (v10 & 1) != 0))
        {
          if (*(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64) && *(_QWORD *)(a1 + 72) == *(_QWORD *)(a2 + 72)
            || (v11 = sub_244E4EAC0(), v6 = 0, (v11 & 1) != 0))
          {
            if (*(_QWORD *)(a1 + 80) == *(_QWORD *)(a2 + 80) && *(_QWORD *)(a1 + 88) == *(_QWORD *)(a2 + 88)
              || (v12 = sub_244E4EAC0(), v6 = 0, (v12 & 1) != 0))
            {
              if (*(_DWORD *)(a1 + 96) == *(_DWORD *)(a2 + 96)
                && *(double *)(a1 + 104) == *(double *)(a2 + 104)
                && ((*(unsigned __int8 *)(a1 + 112) ^ *(unsigned __int8 *)(a2 + 112)) & 1) == 0)
              {
                v6 = ((*(_BYTE *)(a1 + 113) & 1) == 0) ^ *(_BYTE *)(a2 + 113);
              }
              else
              {
                v6 = 0;
              }
            }
          }
        }
      }
    }
  }
  return v6 & 1;
}

uint64_t sub_244D75298(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000044 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000004449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000044 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000244E57210 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4449746F6F62 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x797269707865 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000244E57230 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000244E57250)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_244D75620@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  int v47;
  uint64_t v48;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415398);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D75B90();
  sub_244E4EBE0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v47) = 0;
  v9 = sub_244E4E9F4();
  v11 = v10;
  LOBYTE(v47) = 1;
  swift_bridgeObjectRetain();
  v42 = sub_244E4E9F4();
  v43 = v9;
  LOBYTE(v47) = 2;
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = sub_244E4E9F4();
  v45 = v13;
  v41 = v14;
  LOBYTE(v47) = 3;
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_244E4E9F4();
  v44 = v16;
  v40 = v17;
  LOBYTE(v47) = 4;
  v19 = v18;
  swift_bridgeObjectRetain();
  v38 = sub_244E4E9F4();
  v39 = v19;
  LOBYTE(v47) = 5;
  v21 = v20;
  swift_bridgeObjectRetain();
  v22 = sub_244E4E9F4();
  v24 = v23;
  v35 = v22;
  v46 = 6;
  sub_244D75BD4();
  v37 = v24;
  swift_bridgeObjectRetain();
  v36 = 0;
  sub_244E4EA24();
  v34 = v47;
  v25 = v48;
  LOBYTE(v47) = 7;
  v33 = sub_244E4EA00();
  LOBYTE(v47) = 8;
  LOBYTE(v24) = sub_244E4EA00();
  LODWORD(v36) = v33 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v26 = v37;
  swift_bridgeObjectRelease();
  v27 = v21;
  swift_bridgeObjectRelease();
  v28 = v39;
  swift_bridgeObjectRelease();
  v29 = v44;
  swift_bridgeObjectRelease();
  v30 = v45;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v43;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v42;
  *(_QWORD *)(a2 + 24) = v30;
  *(_QWORD *)(a2 + 32) = v41;
  *(_QWORD *)(a2 + 40) = v29;
  *(_QWORD *)(a2 + 48) = v40;
  *(_QWORD *)(a2 + 56) = v28;
  *(_QWORD *)(a2 + 64) = v38;
  *(_QWORD *)(a2 + 72) = v27;
  *(_QWORD *)(a2 + 80) = v35;
  *(_QWORD *)(a2 + 88) = v26;
  *(_DWORD *)(a2 + 96) = v34;
  *(_QWORD *)(a2 + 104) = v25;
  *(_BYTE *)(a2 + 112) = v36;
  *(_BYTE *)(a2 + 113) = v24 & 1;
  return result;
}

unint64_t sub_244D75B90()
{
  unint64_t result;

  result = qword_2574153A0;
  if (!qword_2574153A0)
  {
    result = MEMORY[0x2495282F0](&unk_244E5126C, &type metadata for StoreAndForwardSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574153A0);
  }
  return result;
}

unint64_t sub_244D75BD4()
{
  unint64_t result;

  result = qword_2574153A8;
  if (!qword_2574153A8)
  {
    result = MEMORY[0x2495282F0](&unk_244E55974, &type metadata for CPUTimestamp);
    atomic_store(result, (unint64_t *)&qword_2574153A8);
  }
  return result;
}

unint64_t sub_244D75C18()
{
  unint64_t result;

  result = qword_2574153B8;
  if (!qword_2574153B8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5599C, &type metadata for CPUTimestamp);
    atomic_store(result, (unint64_t *)&qword_2574153B8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TransactionData.OutcomeStatus(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreAndForwardSession.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_244D75D38 + 4 * byte_244E5108E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_244D75D6C + 4 * byte_244E51089[v4]))();
}

uint64_t sub_244D75D6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D75D74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D75D7CLL);
  return result;
}

uint64_t sub_244D75D88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D75D90);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_244D75D94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D75D9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreAndForwardSession.CodingKeys()
{
  return &type metadata for StoreAndForwardSession.CodingKeys;
}

unint64_t sub_244D75DBC()
{
  unint64_t result;

  result = qword_2574153C0;
  if (!qword_2574153C0)
  {
    result = MEMORY[0x2495282F0](&unk_244E51244, &type metadata for StoreAndForwardSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574153C0);
  }
  return result;
}

unint64_t sub_244D75E04()
{
  unint64_t result;

  result = qword_2574153C8;
  if (!qword_2574153C8)
  {
    result = MEMORY[0x2495282F0](&unk_244E511B4, &type metadata for StoreAndForwardSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574153C8);
  }
  return result;
}

unint64_t sub_244D75E4C()
{
  unint64_t result;

  result = qword_2574153D0;
  if (!qword_2574153D0)
  {
    result = MEMORY[0x2495282F0](&unk_244E511DC, &type metadata for StoreAndForwardSession.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574153D0);
  }
  return result;
}

uint64_t sub_244D75E90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v26 = (uint64_t)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574154C0);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244E4CDC8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v25 - v11;
  sub_244DC4FC0((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_244D66F54((uint64_t)v5, &qword_2574154C0);
    if (qword_257414430 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E90);
    v14 = v26;
    sub_244D640E4(v13, v26);
    v15 = sub_244E4DCD4();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
    {
      return sub_244D66F54(v14, &qword_2574145A0);
    }
    else
    {
      v22 = sub_244E4DCBC();
      v23 = sub_244E4E67C();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_244D61000, v22, v23, "DiscoveryAnalyticsManager - sendAnalytics - unable to decode analytics data", v24, 2u);
        MEMORY[0x2495283BC](v24, -1, -1);
      }

      return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    }
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v18(v12, v5, v6);
    v19 = sub_244E4E55C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v3, 1, 1, v19);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    v20 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v21 + 24) = 0;
    v18((char *)(v21 + v20), v10, v6);
    *(_QWORD *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v25;
    swift_retain();
    sub_244DB2DDC((uint64_t)v3, (uint64_t)&unk_2574154D0, v21);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t sub_244D761E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[86] = a5;
  v5[85] = a4;
  v5[87] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5[88] = swift_task_alloc();
  v6 = sub_244E4CDC8();
  v5[89] = v6;
  v5[90] = *(_QWORD *)(v6 - 8);
  v5[91] = swift_task_alloc();
  v5[92] = swift_task_alloc();
  v7 = sub_244E4CD98();
  v5[93] = v7;
  v5[94] = *(_QWORD *)(v7 - 8);
  v5[95] = swift_task_alloc();
  v5[96] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D762B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  void (*v81)(uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  void (*v92)(uint64_t, _QWORD, uint64_t);
  void (*v93)(uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  void (*v101)(uint64_t, _QWORD, uint64_t);
  void (*v102)(uint64_t, uint64_t);
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  unsigned int v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t);
  void (*v115)(uint64_t, uint64_t, uint64_t);
  unint64_t v116;

  v1 = *(_QWORD *)(v0 + 768);
  v2 = *(_QWORD *)(v0 + 752);
  v3 = *(_QWORD *)(v0 + 744);
  sub_244E4CD80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574154D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E512C0;
  *(_QWORD *)(inited + 32) = sub_244E4D5F0();
  *(_QWORD *)(inited + 40) = v5;
  sub_244E4CDBC();
  v6 = sub_244E4CD8C();
  v8 = v7;
  v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(_QWORD *)(v0 + 776) = v9;
  v114 = v9;
  v9(v1, v3);
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 80) = sub_244E4D584();
  *(_QWORD *)(inited + 88) = v11;
  v12 = sub_244E4CD74();
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 96) = v12;
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 128) = sub_244E4D5D8();
  *(_QWORD *)(inited + 136) = v14;
  v15 = sub_244E4CDA4();
  *(_QWORD *)(inited + 168) = v10;
  *(_QWORD *)(inited + 144) = v15;
  *(_QWORD *)(inited + 152) = v16;
  *(_QWORD *)(inited + 176) = sub_244E4D4D0();
  *(_QWORD *)(inited + 184) = v17;
  v18 = sub_244E4CD50();
  *(_QWORD *)(inited + 216) = v10;
  *(_QWORD *)(inited + 192) = v18;
  *(_QWORD *)(inited + 200) = v19;
  *(_QWORD *)(inited + 224) = sub_244E4D47C();
  *(_QWORD *)(inited + 232) = v20;
  v21 = sub_244E4CD44();
  *(_QWORD *)(inited + 264) = v10;
  *(_QWORD *)(inited + 240) = v21;
  *(_QWORD *)(inited + 248) = v22;
  *(_QWORD *)(inited + 272) = sub_244E4D470();
  *(_QWORD *)(inited + 280) = v23;
  v24 = sub_244E4CD38();
  *(_QWORD *)(inited + 312) = v10;
  *(_QWORD *)(inited + 288) = v24;
  *(_QWORD *)(inited + 296) = v25;
  v26 = sub_244DB2654(inited);
  if ((sub_244E4CD2C() & 1) != 0)
  {
    v27 = *(_QWORD *)(v0 + 688);
    v28 = sub_244E4D560();
    v30 = v29;
    v31 = *(_QWORD *)(v27 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_appId);
    v32 = *(_QWORD *)(v27 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_appId + 8);
    *(_QWORD *)(v0 + 424) = v10;
    *(_QWORD *)(v0 + 400) = v31;
    *(_QWORD *)(v0 + 408) = v32;
    sub_244D6B058((_OWORD *)(v0 + 400), (_OWORD *)(v0 + 336));
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v116 = v26;
    v34 = *(_QWORD *)(v0 + 360);
    v35 = __swift_mutable_project_boxed_opaque_existential_0(v0 + 336, v34);
    v36 = *(_QWORD *)(v34 - 8);
    v37 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v36 + 16))(v37, v35, v34);
    sub_244DC0218(*v37, v37[1], v28, v30, isUniquelyReferenced_nonNull_native, &v116);
    __swift_destroy_boxed_opaque_existential_1(v0 + 336);
    swift_task_dealloc();
    v26 = v116;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v38 = sub_244E4CD5C();
  if (v38 != 2)
  {
    v39 = v38 & 1;
    v40 = sub_244E4D500();
    v42 = v41;
    *(_QWORD *)(v0 + 488) = MEMORY[0x24BEE1328];
    *(_BYTE *)(v0 + 464) = v39;
    sub_244D6B058((_OWORD *)(v0 + 464), (_OWORD *)(v0 + 432));
    v43 = swift_isUniquelyReferenced_nonNull_native();
    v116 = v26;
    v44 = *(_QWORD *)(v0 + 456);
    v45 = __swift_mutable_project_boxed_opaque_existential_0(v0 + 432, v44);
    v46 = *(_QWORD *)(v44 - 8);
    v47 = (char *)swift_task_alloc();
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v47, v45, v44);
    sub_244DC0660(*v47, v40, v42, v43, &v116);
    __swift_destroy_boxed_opaque_existential_1(v0 + 432);
    swift_task_dealloc();
    v26 = v116;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v48 = sub_244E4CD68();
  if (v49)
  {
    v50 = v48;
    v51 = v49;
    v52 = sub_244E4D53C();
    v54 = v53;
    *(_QWORD *)(v0 + 552) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v0 + 528) = v50;
    *(_QWORD *)(v0 + 536) = v51;
    sub_244D6B058((_OWORD *)(v0 + 528), (_OWORD *)(v0 + 496));
    LOBYTE(v50) = swift_isUniquelyReferenced_nonNull_native();
    v116 = v26;
    v55 = *(_QWORD *)(v0 + 520);
    v56 = __swift_mutable_project_boxed_opaque_existential_0(v0 + 496, v55);
    v57 = *(_QWORD *)(v55 - 8);
    v58 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v57 + 16))(v58, v56, v55);
    sub_244DC0218(*v58, v58[1], v52, v54, v50, &v116);
    __swift_destroy_boxed_opaque_existential_1(v0 + 496);
    swift_task_dealloc();
    v26 = v116;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v59 = sub_244E4CDB0();
  if (v60)
  {
    v61 = v59;
    v62 = v60;
    v63 = sub_244E4D5E4();
    v65 = v64;
    *(_QWORD *)(v0 + 392) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v0 + 368) = v61;
    *(_QWORD *)(v0 + 376) = v62;
    sub_244D6B058((_OWORD *)(v0 + 368), (_OWORD *)(v0 + 560));
    LOBYTE(v61) = swift_isUniquelyReferenced_nonNull_native();
    v116 = v26;
    v66 = *(_QWORD *)(v0 + 584);
    v67 = __swift_mutable_project_boxed_opaque_existential_0(v0 + 560, v66);
    v68 = *(_QWORD *)(v66 - 8);
    v69 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v68 + 16))(v69, v67, v66);
    sub_244DC0218(*v69, v69[1], v63, v65, v61, &v116);
    __swift_destroy_boxed_opaque_existential_1(v0 + 560);
    swift_task_dealloc();
    v26 = v116;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 784) = v26;
  v70 = *(_QWORD *)(v0 + 768);
  v71 = *(_QWORD *)(v0 + 760);
  v72 = *(_QWORD *)(v0 + 752);
  v73 = *(_QWORD *)(v0 + 744);
  v74 = *(_QWORD *)(v0 + 720);
  v107 = *(_QWORD *)(v0 + 712);
  v109 = *(_QWORD *)(v0 + 736);
  v75 = *(_QWORD *)(v0 + 680);
  sub_244E4CDBC();
  v76 = *MEMORY[0x24BDE4628];
  v77 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 104);
  *(_QWORD *)(v0 + 792) = v77;
  v77(v71, v76, v73);
  *(_QWORD *)(v0 + 800) = sub_244D7768C();
  sub_244E4E49C();
  sub_244E4E49C();
  v78 = *(_QWORD *)(v0 + 624);
  v79 = *(_QWORD *)(v0 + 616);
  v114(v71, v73);
  v114(v70, v73);
  v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16);
  *(_QWORD *)(v0 + 808) = v80;
  v80(v109, v75, v107);
  if (v78 == v79)
  {
    v81 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 720) + 8);
    v81(*(_QWORD *)(v0 + 736), *(_QWORD *)(v0 + 712));
LABEL_12:
    *(_QWORD *)(v0 + 816) = v81;
    sub_244E4D644();
    *(_QWORD *)(v0 + 824) = v88;
    sub_244E4CD50();
    *(_QWORD *)(v0 + 832) = v89;
    v90 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 840) = v90;
    *v90 = v0;
    v90[1] = sub_244D76AFC;
    return sub_244E4CABC();
  }
  v82 = *(_QWORD *)(v0 + 768);
  v83 = *(_QWORD *)(v0 + 760);
  v84 = *(_QWORD *)(v0 + 744);
  v85 = *(_QWORD *)(v0 + 736);
  v110 = *(_QWORD *)(v0 + 720);
  v112 = *(_QWORD *)(v0 + 712);
  sub_244E4CDBC();
  v108 = *MEMORY[0x24BDE4630];
  ((void (*)(uint64_t))v77)(v83);
  sub_244E4E49C();
  sub_244E4E49C();
  v86 = *(_QWORD *)(v0 + 664);
  v87 = *(_QWORD *)(v0 + 656);
  v114(v83, v84);
  v114(v82, v84);
  v81 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
  v81(v85, v112);
  if (v86 == v87)
    goto LABEL_12;
  v92 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 792);
  v93 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
  v94 = *(_QWORD *)(v0 + 768);
  v95 = *(_QWORD *)(v0 + 760);
  v96 = *(_QWORD *)(v0 + 744);
  v111 = *(_QWORD *)(v0 + 728);
  v113 = *(_QWORD *)(v0 + 712);
  v115 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 808);
  v97 = *(_QWORD *)(v0 + 680);
  sub_244E4CDBC();
  v92(v95, *MEMORY[0x24BDE4620], v96);
  sub_244E4E49C();
  sub_244E4E49C();
  v98 = *(_QWORD *)(v0 + 648);
  v99 = *(_QWORD *)(v0 + 640);
  v93(v95, v96);
  v93(v94, v96);
  v115(v111, v97, v113);
  if (v98 == v99)
  {
    v100 = 1;
  }
  else
  {
    v101 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 792);
    v102 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
    v103 = *(_QWORD *)(v0 + 768);
    v104 = *(_QWORD *)(v0 + 760);
    v105 = *(_QWORD *)(v0 + 744);
    sub_244E4CDBC();
    v101(v104, v108, v105);
    sub_244E4E49C();
    sub_244E4E49C();
    v100 = *(_QWORD *)(v0 + 632) == *(_QWORD *)(v0 + 672);
    v102(v104, v105);
    v102(v103, v105);
  }
  v81(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 712));
  v106 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 856) = v106;
  *v106 = v0;
  v106[1] = sub_244D76EF0;
  return sub_244D776D4(*(_QWORD *)(v0 + 784), v100);
}

uint64_t sub_244D76AFC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3 = (_QWORD *)*v2;
  v3[74] = v2;
  v3[75] = a1;
  v3[76] = a2;
  v3[106] = a2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_244D76B74()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  void (*v3)(uint64_t, _QWORD, uint64_t);
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, _QWORD, uint64_t);
  void (*v17)(uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  void (*v30)(_QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 848);
  if (v1)
  {
    v2 = (_QWORD *)(*(_QWORD *)(v0 + 688)
                  + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_analyticsSessionID);
    *v2 = *(_QWORD *)(v0 + 600);
    v2[1] = v1;
    swift_bridgeObjectRelease();
    v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 808);
    v30 = *(void (**)(_QWORD, _QWORD))(v0 + 816);
    v3 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 792);
    v4 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
    v5 = *(_QWORD *)(v0 + 768);
    v6 = *(_QWORD *)(v0 + 760);
    v7 = *(_QWORD *)(v0 + 744);
    v27 = *(_QWORD *)(v0 + 728);
    v28 = *(_QWORD *)(v0 + 712);
    v8 = *(_QWORD *)(v0 + 680);
    sub_244E4CDBC();
    v3(v6, *MEMORY[0x24BDE4620], v7);
    sub_244E4E49C();
    sub_244E4E49C();
    v9 = *(_QWORD *)(v0 + 648);
    v10 = *(_QWORD *)(v0 + 640);
    v4(v6, v7);
    v4(v5, v7);
    v29(v27, v8, v28);
    if (v9 == v10)
    {
      v11 = 1;
    }
    else
    {
      v16 = *(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 792);
      v17 = *(void (**)(uint64_t, uint64_t))(v0 + 776);
      v18 = *(_QWORD *)(v0 + 768);
      v19 = *(_QWORD *)(v0 + 760);
      v20 = *(_QWORD *)(v0 + 744);
      sub_244E4CDBC();
      v16(v19, *MEMORY[0x24BDE4630], v20);
      sub_244E4E49C();
      sub_244E4E49C();
      v11 = *(_QWORD *)(v0 + 632) == *(_QWORD *)(v0 + 672);
      v17(v19, v20);
      v17(v18, v20);
    }
    v30(*(_QWORD *)(v0 + 728), *(_QWORD *)(v0 + 712));
    v21 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 856) = v21;
    *v21 = v0;
    v21[1] = sub_244D76EF0;
    return sub_244D776D4(*(_QWORD *)(v0 + 784), v11);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_257414430 != -1)
      swift_once();
    v12 = *(_QWORD *)(v0 + 704);
    v13 = __swift_project_value_buffer(*(_QWORD *)(v0 + 696), (uint64_t)qword_257419E90);
    sub_244D640E4(v13, v12);
    v14 = sub_244E4DCD4();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 704), &qword_2574145A0);
    }
    else
    {
      v23 = sub_244E4DCBC();
      v24 = sub_244E4E67C();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_244D61000, v23, v24, "DiscoveryAnalyticsManager - sendEvent - could not create analytics session", v25, 2u);
        MEMORY[0x2495283BC](v25, -1, -1);
      }
      v26 = *(_QWORD *)(v0 + 704);

      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v14);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244D76EF0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_244D76F50()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D76FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;

  *(_BYTE *)(v6 + 136) = a6;
  *(_QWORD *)(v6 + 96) = a4;
  *(_QWORD *)(v6 + 104) = a5;
  *(_QWORD *)(v6 + 80) = a2;
  *(_QWORD *)(v6 + 88) = a3;
  *(_QWORD *)(v6 + 112) = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  *(_QWORD *)(v6 + 120) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D77020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  _QWORD *v16;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  os_log_type_t type;
  uint64_t v26;
  uint64_t v27;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = sub_244E4D5F0();
  if (!*(_QWORD *)(v1 + 16) || (v4 = sub_244DC859C(v2, v3), (v5 & 1) == 0))
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  sub_244D66F18(*(_QWORD *)(*(_QWORD *)(v0 + 80) + 56) + 32 * v4, v0 + 16);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v0 + 40))
  {
LABEL_10:
    v14 = (uint64_t *)&unk_257415508;
    v15 = v0 + 16;
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415510);
  if ((swift_dynamicCast() & 1) != 0)
  {
    v7 = *(_QWORD *)(v0 + 48);
    v6 = *(_QWORD *)(v0 + 56);
    if (qword_257414430 != -1)
      swift_once();
    v8 = *(_QWORD *)(v0 + 120);
    v9 = __swift_project_value_buffer(*(_QWORD *)(v0 + 112), (uint64_t)qword_257419E90);
    sub_244D640E4(v9, v8);
    v10 = sub_244E4DCD4();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
    v13 = *(_QWORD *)(v0 + 120);
    if (v12 == 1)
    {
      swift_bridgeObjectRelease();
      v14 = &qword_2574145A0;
      v15 = v13;
LABEL_11:
      sub_244D66F54(v15, v14);
      goto LABEL_12;
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v18 = sub_244E4DCBC();
    v19 = sub_244E4E670();
    if (os_log_type_enabled(v18, v19))
    {
      type = v19;
      v20 = swift_slowAlloc();
      v24 = swift_slowAlloc();
      *(_DWORD *)v20 = 136315394;
      v26 = v11;
      v27 = v24;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 64) = sub_244D9A70C(v7, v6, &v27);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      swift_bridgeObjectRetain();
      v21 = sub_244E4E2B0();
      v23 = v22;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 72) = sub_244D9A70C(v21, v23, &v27);
      sub_244E4E7E4();
      v11 = v26;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v18, type, "Sending event: [%s] [%s]", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v24, -1, -1);
      MEMORY[0x2495283BC](v20, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, uint64_t))(v11 + 8))(*(_QWORD *)(v0 + 120), v10);
  }
LABEL_12:
  v16 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v16;
  *v16 = v0;
  v16[1] = sub_244D773AC;
  return sub_244E4CAF8();
}

uint64_t sub_244D773AC()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_244D77400()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_manager;
  v2 = sub_244E4CB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_244D77488()
{
  return type metadata accessor for DiscoveryAnalyticsManager();
}

uint64_t type metadata accessor for DiscoveryAnalyticsManager()
{
  uint64_t result;

  result = qword_257415420;
  if (!qword_257415420)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244D774CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244E4CB28();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_244D77558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244E4CDC8();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244D775E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(sub_244E4CDC8() - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_244D70150;
  return sub_244D761E0(a1, v6, v7, v8, v9);
}

unint64_t sub_244D7768C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2574154E0;
  if (!qword_2574154E0)
  {
    v1 = sub_244E4CD98();
    result = MEMORY[0x2495282F0](MEMORY[0x24BDE4640], v1);
    atomic_store(result, &qword_2574154E0);
  }
  return result;
}

uint64_t sub_244D776D4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v3 + 64) = a2;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = v2;
  *(_QWORD *)(v3 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  *(_QWORD *)(v3 + 40) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D77738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_analyticsSessionID + 8);
  if (v2)
  {
    v3 = *(_BYTE *)(v0 + 64);
    v4 = *(_QWORD *)(v0 + 16);
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_analyticsSessionID);
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon25DiscoveryAnalyticsManager_serializer);
    v6 = swift_allocObject();
    *(_QWORD *)(v0 + 56) = v6;
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v1;
    *(_QWORD *)(v6 + 32) = v5;
    *(_QWORD *)(v6 + 40) = v2;
    *(_BYTE *)(v6 + 48) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574150E8);
    sub_244D77A68();
    sub_244E4E514();
    return swift_task_switch();
  }
  else
  {
    if (qword_257414430 != -1)
      swift_once();
    v8 = *(_QWORD *)(v0 + 40);
    v9 = __swift_project_value_buffer(*(_QWORD *)(v0 + 32), (uint64_t)qword_257419E90);
    sub_244D640E4(v9, v8);
    v10 = sub_244E4DCD4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 40), &qword_2574145A0);
    }
    else
    {
      v12 = sub_244E4DCBC();
      v13 = sub_244E4E67C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_244D61000, v12, v13, "DiscoveryAnalyticsManager - sendEvent - analytics session not found", v14, 2u);
        MEMORY[0x2495283BC](v14, -1, -1);
      }
      v15 = *(_QWORD *)(v0 + 40);

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v10);
    }
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244D77940()
{
  uint64_t v0;

  sub_244E4CA2C();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_244D779B4()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244D779E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_244D70150;
  return sub_244D76FB8(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_244D77A68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257415500;
  if (!qword_257415500)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2574150E8);
    result = MEMORY[0x2495282F0](MEMORY[0x24BDE4140], v1);
    atomic_store(result, (unint64_t *)&qword_257415500);
  }
  return result;
}

uint64_t sub_244D77AB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 168);
  v4 = *(_QWORD *)(v1 + 176);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 96);
  v10 = *(_QWORD *)(v1 + 104);
  v11 = *(_QWORD *)(v1 + 64);
  v12 = *(_QWORD *)(v1 + 72);
  v13 = *(_QWORD *)(v1 + 80);
  v14 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v1 + 16);
  *(_BYTE *)(a1 + 32) = 4;
  v15 = *(_QWORD *)(v1 + 112);
  v16 = *(_QWORD *)(v1 + 120);
  *(_QWORD *)(a1 + 40) = v3;
  *(_BYTE *)(a1 + 56) = 8;
  *(_QWORD *)(a1 + 64) = v5;
  v17 = *(_QWORD *)(v1 + 128);
  v18 = *(_QWORD *)(v1 + 136);
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 96) = v9;
  v19 = *(_QWORD *)(v1 + 144);
  v20 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)(a1 + 112) = v11;
  LOBYTE(v7) = *(_BYTE *)(v1 + 160);
  *(_QWORD *)(a1 + 128) = v13;
  LOBYTE(v9) = *(_BYTE *)(v1 + 192);
  *(_QWORD *)(a1 + 144) = v15;
  LOBYTE(v15) = *(_BYTE *)(v1 + 193);
  *(_QWORD *)(a1 + 160) = v17;
  LOBYTE(v17) = *(_BYTE *)(v1 + 194);
  *(_QWORD *)(a1 + 176) = v19;
  *(_BYTE *)(a1 + 192) = v7;
  *(_BYTE *)(a1 + 193) = 1;
  v21 = *(_QWORD *)(v1 + 200);
  v28 = *(_QWORD *)(v1 + 208);
  *(_BYTE *)(a1 + 194) = v9;
  *(_BYTE *)(a1 + 195) = v15;
  v22 = *(_QWORD *)(v1 + 216);
  v23 = *(_QWORD *)(v1 + 224);
  *(_BYTE *)(a1 + 196) = v17;
  *(_QWORD *)(a1 + 200) = v21;
  *(_BYTE *)(a1 + 232) = -4;
  v24 = *(_QWORD *)(v1 + 264);
  v29 = *(_QWORD *)(v1 + 272);
  *(_QWORD *)(a1 + 240) = 0;
  *(_QWORD *)(a1 + 248) = v22;
  *(_QWORD *)(a1 + 272) = v24;
  *(_BYTE *)(a1 + 296) = 1;
  *(_BYTE *)(a1 + 312) = 1;
  v25 = *(_QWORD *)(v1 + 288);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(v1 + 280);
  v26 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v26;
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 104) = v10;
  *(_QWORD *)(a1 + 120) = v12;
  *(_QWORD *)(a1 + 136) = v14;
  *(_QWORD *)(a1 + 152) = v16;
  *(_QWORD *)(a1 + 168) = v18;
  *(_QWORD *)(a1 + 184) = v20;
  *(_QWORD *)(a1 + 208) = v28;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_QWORD *)(a1 + 256) = v23;
  *(_BYTE *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 280) = v29;
  *(_QWORD *)(a1 + 288) = 0;
  *(_QWORD *)(a1 + 304) = 0;
  *(_QWORD *)(a1 + 328) = v25;
  *(_BYTE *)(a1 + 336) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_244D77C88(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D77CC8 + 4 * byte_244E51330[a1]))(0x746361736E617274, 0xED000064496E6F69);
}

uint64_t sub_244D77CC8()
{
  return 0x6B726F7774656ELL;
}

unint64_t sub_244D77CE0()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_244D77EDC()
{
  return 0x7954707041796170;
}

uint64_t sub_244D77EF8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415738);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D7E4C0();
  sub_244E4EBEC();
  v9 = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v9 = 1;
    sub_244E4EA60();
    v9 = 2;
    sub_244E4EA60();
    v9 = 3;
    sub_244E4EA60();
    v9 = 4;
    sub_244E4EA60();
    v9 = 5;
    sub_244E4EA60();
    v9 = 6;
    sub_244E4EA60();
    v9 = 7;
    sub_244E4EA60();
    v9 = 8;
    sub_244E4EA60();
    v9 = 9;
    sub_244E4EA60();
    v9 = 10;
    sub_244E4EA6C();
    v9 = 11;
    sub_244E4EA60();
    v9 = 12;
    sub_244E4EA78();
    v9 = 13;
    sub_244E4EA6C();
    v9 = 14;
    sub_244E4EA6C();
    v9 = 15;
    sub_244E4EA6C();
    v9 = 16;
    sub_244E4EA60();
    v9 = 17;
    sub_244E4EA60();
    v9 = 18;
    sub_244E4EA3C();
    v9 = 19;
    sub_244E4EA3C();
    v9 = 20;
    sub_244E4EA60();
    v9 = 21;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D7832C()
{
  unsigned __int8 *v0;

  return sub_244D77C88(*v0);
}

uint64_t sub_244D78334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D7CBD8(a1, a2);
  *a3 = result;
  return result;
}

void sub_244D78358(_BYTE *a1@<X8>)
{
  *a1 = 22;
}

uint64_t sub_244D78364()
{
  sub_244D7E4C0();
  return sub_244E4EC04();
}

uint64_t sub_244D7838C()
{
  sub_244D7E4C0();
  return sub_244E4EC10();
}

void *sub_244D783B4@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE __src[296];

  result = sub_244D7D4C8(a1, __src);
  if (!v2)
    return memcpy(a2, __src, 0x128uLL);
  return result;
}

uint64_t sub_244D78404(_QWORD *a1)
{
  return sub_244D77EF8(a1);
}

uint64_t sub_244D78418(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint8_t *v19;
  os_log_t v20;
  uint64_t v21;
  uint8_t *v22;
  os_log_t v23;
  uint64_t v24;
  uint64_t v25[3];
  uint64_t v26;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_244D78B40((uint64_t *)a3);
  if (!v4)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_244D7E504(a3);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26 = *(_QWORD *)(v3 + 112);
    *(_QWORD *)(v3 + 112) = 0x8000000000000000;
    sub_244DE4BD8((const void *)a3, a1, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v3 + 112) = v26;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_244D7A3DC(a1, a2, *(double *)(a3 + 184));
    if (qword_2574143D8 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v8, (uint64_t)qword_257419D88);
    sub_244D640E4(v13, (uint64_t)v10);
    v14 = sub_244E4DCD4();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) == 1)
    {
      return sub_244D66F54((uint64_t)v10, &qword_2574145A0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v16 = sub_244E4DCBC();
      v17 = sub_244E4E670();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = swift_slowAlloc();
        v23 = v16;
        v19 = (uint8_t *)v18;
        v24 = swift_slowAlloc();
        v25[0] = v24;
        *(_DWORD *)v19 = 136315138;
        v22 = v19 + 4;
        swift_bridgeObjectRetain();
        v26 = sub_244D9A70C(a1, a2, v25);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        v20 = v23;
        _os_log_impl(&dword_244D61000, v23, v17, "Inserting: [ %s ] on cache", v19, 0xCu);
        v21 = v24;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v21, -1, -1);
        MEMORY[0x2495283BC](v19, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    }
  }
  return result;
}

uint64_t sub_244D78708(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  char v20;
  _QWORD v21[2];
  uint64_t v22;
  NSObject *v23;
  int v24;
  uint8_t *v25;
  _QWORD v26[40];
  uint64_t v27[40];
  uint64_t v28[38];
  uint64_t v29;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_beginAccess();
  v10 = *(_QWORD *)(v2 + 112);
  if (*(_QWORD *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_244DC859C(a1, a2);
    if ((v12 & 1) != 0)
    {
      memcpy(v28, (const void *)(*(_QWORD *)(v10 + 56) + 296 * v11), 0x128uLL);
      sub_244D7E504((uint64_t)v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_2574143D8 != -1)
        swift_once();
      v13 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D88);
      sub_244D640E4(v13, (uint64_t)v8);
      v14 = sub_244E4DCD4();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) == 1)
      {
        sub_244D66F54((uint64_t)v8, &qword_2574145A0);
      }
      else
      {
        v29 = v15;
        swift_bridgeObjectRetain_n();
        v16 = sub_244E4DCBC();
        v17 = sub_244E4E670();
        v24 = v17;
        if (os_log_type_enabled(v16, v17))
        {
          v25 = (uint8_t *)swift_slowAlloc();
          v22 = swift_slowAlloc();
          v27[0] = v22;
          v23 = v16;
          v18 = v25;
          *(_DWORD *)v25 = 136315138;
          v21[1] = v18 + 4;
          swift_bridgeObjectRetain();
          v26[0] = sub_244D9A70C(a1, a2, v27);
          sub_244E4E7E4();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_244D61000, v23, (os_log_type_t)v24, "Removing: [ %s ] from cache", v25, 0xCu);
          v19 = v22;
          swift_arrayDestroy();
          MEMORY[0x2495283BC](v19, -1, -1);
          MEMORY[0x2495283BC](v25, -1, -1);

        }
        else
        {
          swift_bridgeObjectRelease_n();

        }
        (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v14);
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_244DE1550(a1, a2, v26);
      swift_bridgeObjectRelease();
      sub_244D7EB38((uint64_t)v26, (uint64_t)v27);
      sub_244D7F37C((uint64_t)v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D7F258);
      swift_endAccess();
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)(v3 + 120) + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_244DC859C(a1, a2);
        if ((v20 & 1) != 0)
        {
          swift_unknownObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_getObjectType();
          sub_244E4E724();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_244DE1484(a1, a2);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      sub_244D793BC(v28);
      return sub_244D7E624((uint64_t)v28);
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_244D78B40(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(uint64_t, uint64_t, uint64_t);
  int v37;
  char *v38;
  void *v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint64_t v44;
  uint8_t *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  uint64_t v60;
  unsigned int (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint8_t *v71;
  char *v72;
  unint64_t v73;
  uint64_t v74[2];
  uint64_t v75;

  v3 = sub_244E4CA20();
  v69 = *(_QWORD *)(v3 - 8);
  v70 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v72 = (char *)v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v67 = (uint64_t)v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v59 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v71 = (uint8_t *)v59 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_244E4C2AC();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(v1 + 136);
  v74[0] = *(_QWORD *)(v1 + 128);
  v74[1] = v19;
  v20 = *a1;
  v21 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v68 = v20;
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244E4E3F4();
  sub_244E4C234();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_244D66F54((uint64_t)v14, &qword_257414B00);
LABEL_5:
    if (qword_2574143D8 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v5, (uint64_t)qword_257419D88);
    sub_244D640E4(v24, (uint64_t)v10);
    v25 = sub_244E4DCD4();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v10, 1, v25) == 1)
      return sub_244D66F54((uint64_t)v10, &qword_2574145A0);
    sub_244D7E504((uint64_t)a1);
    sub_244D7E504((uint64_t)a1);
    v28 = sub_244E4DCBC();
    v29 = sub_244E4E67C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      v72 = (char *)swift_slowAlloc();
      v74[0] = (uint64_t)v72;
      *(_DWORD *)v30 = 136315138;
      v71 = v30 + 4;
      swift_bridgeObjectRetain();
      v75 = sub_244D9A70C(v68, v21, v74);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      sub_244D7E624((uint64_t)a1);
      sub_244D7E624((uint64_t)a1);
      _os_log_impl(&dword_244D61000, v28, v29, "Could not save cache data: [%s]", v30, 0xCu);
      v31 = v72;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v31, -1, -1);
      MEMORY[0x2495283BC](v30, -1, -1);

    }
    else
    {

      sub_244D7E624((uint64_t)a1);
      sub_244D7E624((uint64_t)a1);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v10, v25);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  v22 = sub_244E10A78();
  if (v23 >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    goto LABEL_5;
  }
  v32 = v22;
  v33 = v23;
  v65 = v18;
  if (qword_2574143D8 != -1)
    swift_once();
  v62 = __swift_project_value_buffer(v5, (uint64_t)qword_257419D88);
  v34 = (uint64_t)v71;
  sub_244D640E4(v62, (uint64_t)v71);
  v35 = sub_244E4DCD4();
  v63 = *(_QWORD *)(v35 - 8);
  v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  v66 = v35;
  v61 = v36;
  v37 = ((uint64_t (*)(uint64_t, uint64_t))v36)(v34, 1);
  v38 = v72;
  v64 = v32;
  if (v37 == 1)
  {
    sub_244D66F54(v34, &qword_2574145A0);
    v39 = (void *)v73;
    v40 = v65;
  }
  else
  {
    sub_244D7E504((uint64_t)a1);
    sub_244D7E504((uint64_t)a1);
    v41 = sub_244E4DCBC();
    v42 = sub_244E4E670();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      v60 = swift_slowAlloc();
      v74[0] = v60;
      *(_DWORD *)v43 = 136315138;
      v59[1] = v43 + 4;
      swift_bridgeObjectRetain();
      v75 = sub_244D9A70C(v68, v21, v74);
      v38 = v72;
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      sub_244D7E624((uint64_t)a1);
      sub_244D7E624((uint64_t)a1);
      _os_log_impl(&dword_244D61000, v41, v42, "Saving cache data: [%s] to FS", v43, 0xCu);
      v44 = v60;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v44, -1, -1);
      v45 = v43;
      v34 = (uint64_t)v71;
      MEMORY[0x2495283BC](v45, -1, -1);

    }
    else
    {

      sub_244D7E624((uint64_t)a1);
      sub_244D7E624((uint64_t)a1);
    }
    v40 = v65;
    (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v34, v66);
    v39 = (void *)v73;
    v32 = v64;
  }
  sub_244E4CA14();
  v46 = v39;
  sub_244E4C9F0();
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v70);
    v47 = v67;
    sub_244D640E4(v62, v67);
    if (v61(v47, 1, v66) == 1)
    {
      sub_244D66F54(v47, &qword_2574145A0);
      v48 = v64;
    }
    else
    {
      v73 = v33;
      v49 = v46;
      v50 = v46;
      v51 = sub_244E4DCBC();
      v52 = sub_244E4E67C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        v54 = swift_slowAlloc();
        v74[0] = v54;
        *(_DWORD *)v53 = 136315138;
        v72 = (char *)(v53 + 4);
        v75 = (uint64_t)v46;
        v55 = v46;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
        v56 = sub_244E4E370();
        v75 = sub_244D9A70C(v56, v57, v74);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_244D61000, v51, v52, "Could not save cache data: [%s]", v53, 0xCu);
        swift_arrayDestroy();
        v58 = v54;
        v40 = v65;
        MEMORY[0x2495283BC](v58, -1, -1);
        MEMORY[0x2495283BC](v53, -1, -1);

      }
      else
      {

      }
      v33 = v73;
      v48 = v64;
      (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v67, v66);
    }
    swift_willThrow();
    sub_244D65198(v48, v33);
  }
  else
  {
    sub_244D65198(v32, v33);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v70);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v40, v15);
}

uint64_t sub_244D793BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  NSObject *v37;
  uint64_t v38;
  _QWORD v39[2];
  uint64_t v40;
  int v41;
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[4];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (uint64_t)v39 - v7;
  v8 = sub_244E4CA20();
  v47 = *(_QWORD *)(v8 - 8);
  v48 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_244E4C2AC();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v1 + 136);
  v50[0] = *(_QWORD *)(v1 + 128);
  v50[1] = v18;
  v45 = a1;
  v20 = *a1;
  v19 = a1[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44 = v20;
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244E4E3F4();
  sub_244E4C234();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v13, 0, 1, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_244D66F54((uint64_t)v13, &qword_257414B00);
    if (qword_2574143D8 != -1)
      swift_once();
    v21 = __swift_project_value_buffer(v3, (uint64_t)qword_257419D88);
    sub_244D640E4(v21, (uint64_t)v6);
    v22 = sub_244E4DCD4();
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v6, 1, v22) == 1)
    {
      return sub_244D66F54((uint64_t)v6, &qword_2574145A0);
    }
    else
    {
      v26 = sub_244E4DCBC();
      v27 = sub_244E4E67C();
      if (os_log_type_enabled(v26, v27))
      {
        v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v28 = 0;
        _os_log_impl(&dword_244D61000, v26, v27, "Cache data file does not exist, cannot be removed", v28, 2u);
        MEMORY[0x2495283BC](v28, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v6, v22);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v13, v14);
    sub_244E4CA14();
    if ((sub_244E4CA08() & 1) != 0 && (v25 = v49, sub_244E4C9FC(), !v25))
    {
      if (qword_2574143D8 != -1)
        swift_once();
      v29 = __swift_project_value_buffer(v3, (uint64_t)qword_257419D88);
      v30 = v46;
      sub_244D640E4(v29, v46);
      v31 = sub_244E4DCD4();
      v43 = *(_QWORD *)(v31 - 8);
      v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v30, 1, v31);
      v33 = (uint64_t)v45;
      if (v32 == 1)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        return sub_244D66F54(v30, &qword_2574145A0);
      }
      else
      {
        v49 = 0;
        sub_244D7E504((uint64_t)v45);
        sub_244D7E504(v33);
        v34 = sub_244E4DCBC();
        v35 = sub_244E4E670();
        v42 = v34;
        v41 = v35;
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          v40 = swift_slowAlloc();
          v50[0] = v40;
          *(_DWORD *)v36 = 136315138;
          v39[1] = v36 + 4;
          swift_bridgeObjectRetain();
          v50[3] = sub_244D9A70C(v44, v19, v50);
          v30 = v46;
          sub_244E4E7E4();
          swift_bridgeObjectRelease();
          sub_244D7E624(v33);
          sub_244D7E624(v33);
          v37 = v42;
          _os_log_impl(&dword_244D61000, v42, (os_log_type_t)v41, "Deleted cache data: [%s] from FS", v36, 0xCu);
          v38 = v40;
          swift_arrayDestroy();
          MEMORY[0x2495283BC](v38, -1, -1);
          MEMORY[0x2495283BC](v36, -1, -1);

        }
        else
        {

          sub_244D7E624(v33);
          sub_244D7E624(v33);
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 8))(v30, v31);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
}

uint64_t sub_244D79978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  char *v54;
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;

  v1 = v0;
  v2 = sub_244E4C384();
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v48 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v42 - v7;
  v9 = sub_244E4C2AC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v54 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v56 = (char *)&v42 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v42 - v15;
  v17 = sub_244E4CA20();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4CA14();
  sub_244E4C294();
  v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v53(v8, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    return sub_244D66F54((uint64_t)v8, &qword_257414B00);
  }
  v55 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v55(v16, v8, v9);
  if ((sub_244E4CA08() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  v51 = v16;
  v22 = sub_244E4C9D8();
  v23 = v22;
  v24 = v51;
  if (!v22)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v51, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  swift_retain();
  v25 = sub_244D7EB80(v23, v1);
  v42 = 0;
  v26 = v25;
  swift_bridgeObjectRelease();
  v45 = v1;
  result = swift_release();
  v57 = MEMORY[0x24BEE4AF8];
  v47 = *(_QWORD *)(v26 + 16);
  v43 = v18;
  v44 = v17;
  if (v47)
  {
    v27 = 0;
    v28 = (uint64_t)v52;
    v46 = v26;
    while (1)
    {
      if (v27 >= *(_QWORD *)(v26 + 16))
      {
        __break(1u);
        return result;
      }
      v29 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v30 = *(_QWORD *)(v10 + 72);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(v28, v26 + v29 + v30 * v27, v9);
      v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v31(v28, 0, 1, v9);
      if (v53((char *)v28, 1, v9) == 1)
        goto LABEL_26;
      v55(v56, (char *)v28, v9);
      if (sub_244E4C210() == 6513780 && v32 == 0xE300000000000000)
        break;
      v33 = sub_244E4EAC0();
      swift_bridgeObjectRelease();
      if ((v33 & 1) != 0)
        goto LABEL_19;
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v56, v9);
LABEL_12:
      ++v27;
      v26 = v46;
      v24 = v51;
      if (v47 == v27)
        goto LABEL_25;
    }
    swift_bridgeObjectRelease();
LABEL_19:
    v55(v54, v56, v9);
    v34 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_244DA9728(0, *(_QWORD *)(v34 + 16) + 1, 1);
      v34 = v57;
    }
    v36 = *(_QWORD *)(v34 + 16);
    v35 = *(_QWORD *)(v34 + 24);
    if (v36 >= v35 >> 1)
    {
      sub_244DA9728(v35 > 1, v36 + 1, 1);
      v34 = v57;
    }
    *(_QWORD *)(v34 + 16) = v36 + 1;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v55)(v34 + v29 + v36 * v30, v54, v9);
    v57 = v34;
    v28 = (uint64_t)v52;
    goto LABEL_12;
  }
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v28 = (uint64_t)v52;
LABEL_25:
  v31(v28, 1, 1, v9);
LABEL_26:
  swift_bridgeObjectRelease();
  sub_244D66F54(v28, &qword_257414B00);
  v37 = v57;
  v38 = v48;
  sub_244E4C378();
  sub_244E4C354();
  v40 = v39;
  v41 = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v38, v50);
  MEMORY[0x24BDAC7A8](v41);
  *(&v42 - 4) = (uint64_t)v20;
  *(&v42 - 3) = v40;
  *(&v42 - 2) = v45;
  sub_244D7EE0C(v37, (void (*)(char *))sub_244D7F248);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v24, v9);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v44);
  return swift_release();
}

uint64_t sub_244D79EB0(double a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v37[2];
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v42[37];
  _BYTE v43[296];
  _BYTE v44[296];
  _QWORD v45[38];
  _BYTE v46[296];
  _BYTE v47[304];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v37 - v10;
  v12 = sub_244E4C9E4();
  v14 = v13;
  sub_244DC5734((uint64_t)v46);
  sub_244D651AC(v12, v14);
  sub_244D7EB38((uint64_t)v46, (uint64_t)v44);
  sub_244D7EB38((uint64_t)v44, (uint64_t)v45);
  if (sub_244D6BA34((uint64_t)v45) != 1)
  {
    memcpy(v47, v45, 0x128uLL);
    v15 = *(double *)&v45[23];
    if (*(double *)&v45[23] + -0.5 > a1)
    {
      if (qword_2574143D8 != -1)
        swift_once();
      v16 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D88);
      sub_244D640E4(v16, (uint64_t)v11);
      v17 = sub_244E4DCD4();
      v18 = *(_QWORD *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17) == 1)
      {
        sub_244D66F54((uint64_t)v11, &qword_2574145A0);
      }
      else
      {
        sub_244D7EB38((uint64_t)v44, (uint64_t)v42);
        sub_244D7EB38((uint64_t)v44, (uint64_t)v43);
        sub_244D7E504((uint64_t)v43);
        sub_244D7E504((uint64_t)v42);
        v26 = sub_244E4DCBC();
        v27 = sub_244E4E670();
        if (os_log_type_enabled(v26, v27))
        {
          v28 = (uint8_t *)swift_slowAlloc();
          v39 = swift_slowAlloc();
          v41 = v39;
          v38 = v28;
          *(_DWORD *)v28 = 136315138;
          v37[1] = v28 + 4;
          v29 = v45[0];
          v30 = v45[1];
          swift_bridgeObjectRetain();
          v40 = sub_244D9A70C(v29, v30, &v41);
          sub_244E4E7E4();
          swift_bridgeObjectRelease();
          sub_244D7F37C((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D7F258);
          sub_244D7F37C((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D7F258);
          v31 = v27;
          v32 = v38;
          _os_log_impl(&dword_244D61000, v26, v31, "Loading cache data from FS: [%s]", v38, 0xCu);
          v33 = v39;
          swift_arrayDestroy();
          MEMORY[0x2495283BC](v33, -1, -1);
          MEMORY[0x2495283BC](v32, -1, -1);

        }
        else
        {

          sub_244D7F37C((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D7F258);
          sub_244D7F37C((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D7F258);
        }
        (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
      }
      v34 = v45[0];
      v35 = v45[1];
      swift_beginAccess();
      sub_244D7F37C((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D7F400);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v42[0] = *(_QWORD *)(a4 + 112);
      *(_QWORD *)(a4 + 112) = 0x8000000000000000;
      sub_244DE4BD8(v47, v34, v35, isUniquelyReferenced_nonNull_native);
      *(_QWORD *)(a4 + 112) = v42[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      sub_244D7A3DC(v34, v35, v15);
      return sub_244D7F37C((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D7F258);
    }
    sub_244D7F37C((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_244D7F258);
  }
  if (qword_2574143D8 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D88);
  sub_244D640E4(v19, (uint64_t)v9);
  v20 = sub_244E4DCD4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v20) == 1)
  {
    sub_244D66F54((uint64_t)v9, &qword_2574145A0);
  }
  else
  {
    v22 = sub_244E4DCBC();
    v23 = sub_244E4E688();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_244D61000, v22, v23, "Sanitizing previous cache data", v24, 2u);
      MEMORY[0x2495283BC](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  }
  return sub_244E4C9FC();
}

uint64_t sub_244D7A3DC(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t ObjectType;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  char *v40;
  char *v41;
  char *v42;
  double v43;
  double v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(_QWORD *, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  char isUniquelyReferenced_nonNull_native;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t aBlock[6];

  v7 = sub_244E4E1A8();
  v76 = *(_QWORD *)(v7 - 8);
  v77 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v75 = (uint8_t **)((char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v74 = (uint64_t)&v56 - v10;
  v73 = sub_244E4E1FC();
  v70 = *(_QWORD *)(v73 - 8);
  v11 = MEMORY[0x24BDAC7A8](v73);
  v69 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v72 = (char *)&v56 - v13;
  v68 = sub_244E4C384();
  v67 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v66 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_244E4E1B4();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v62 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_244E4E1E4();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v59 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_244E4E700();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = v3 + 120;
  swift_beginAccess();
  v71 = v3;
  if (*(_QWORD *)(*(_QWORD *)(v3 + 120) + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244DC859C(a1, a2);
    if ((v24 & 1) != 0)
    {
      swift_unknownObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_getObjectType();
      sub_244E4E724();
      swift_unknownObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  if (qword_2574143D8 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v21, (uint64_t)qword_257419D88);
  sub_244D640E4(v25, (uint64_t)v23);
  v26 = sub_244E4DCD4();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v23, 1, v26);
  v78 = a1;
  if (v28 == 1)
  {
    sub_244D66F54((uint64_t)v23, &qword_2574145A0);
  }
  else
  {
    v58 = v18;
    swift_bridgeObjectRetain_n();
    v29 = sub_244E4DCBC();
    v30 = sub_244E4E670();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v57 = swift_slowAlloc();
      aBlock[0] = v57;
      *(_DWORD *)v31 = 136315138;
      v56 = v31 + 4;
      swift_bridgeObjectRetain();
      v79 = sub_244D9A70C(v78, a2, aBlock);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v29, v30, "Scheduling timer to remove cache data: [%s]", v31, 0xCu);
      v32 = v57;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v32, -1, -1);
      v33 = v31;
      a1 = v78;
      MEMORY[0x2495283BC](v33, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    v18 = v58;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v23, v26);
  }
  sub_244D7F1BC();
  sub_244E4E6F4();
  v34 = sub_244E4E70C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  ObjectType = swift_getObjectType();
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = a1;
  v36[3] = a2;
  v37 = a2;
  v38 = v71;
  v36[4] = v71;
  aBlock[4] = (uint64_t)sub_244D7F224;
  aBlock[5] = (uint64_t)v36;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_244DB30BC;
  aBlock[3] = (uint64_t)&block_descriptor;
  v39 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  v40 = v59;
  sub_244E02950();
  v41 = v62;
  sub_244E02954();
  sub_244E4E718();
  _Block_release(v39);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v64);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v40, v61);
  swift_release();
  v42 = v66;
  sub_244E4C378();
  sub_244E4C354();
  v44 = v43;
  (*(void (**)(char *, uint64_t))(v67 + 8))(v42, v68);
  v45 = v69;
  sub_244E4E1F0();
  v46 = v72;
  MEMORY[0x2495274E0](v45, a3 - v44);
  v47 = *(void (**)(char *, uint64_t))(v70 + 8);
  v48 = v73;
  v47(v45, v73);
  v49 = v74;
  sub_244E029D0(v74);
  v50 = v75;
  sub_244E02A14(v75);
  MEMORY[0x2495279F0](v46, v49, v50, ObjectType);
  v51 = *(void (**)(_QWORD *, uint64_t))(v76 + 8);
  v52 = v50;
  v53 = v77;
  v51(v52, v77);
  v51((_QWORD *)v49, v53);
  v47(v46, v48);
  sub_244E4E730();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v79 = *(_QWORD *)(v38 + 120);
  *(_QWORD *)(v38 + 120) = 0x8000000000000000;
  sub_244DE4A7C(v34, v78, v37, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v38 + 120) = v79;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return swift_unknownObjectRelease();
}

uint64_t sub_244D7AB80(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v23 - v10;
  if (qword_2574143D8 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D88);
  sub_244D640E4(v12, (uint64_t)v11);
  v13 = sub_244E4DCD4();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    sub_244D66F54((uint64_t)v11, &qword_2574145A0);
  }
  else
  {
    v25 = a1;
    swift_bridgeObjectRetain_n();
    v15 = sub_244E4DCBC();
    v16 = sub_244E4E670();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v24 = v14;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc();
      v23[1] = a3;
      v20 = v19;
      v27 = v19;
      v23[2] = v9;
      *(_DWORD *)v18 = 136315138;
      v23[0] = v18 + 4;
      swift_bridgeObjectRetain();
      v26 = sub_244D9A70C(v25, a2, &v27);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v15, v16, "Timer expired, removing cache data: [%s]", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v20, -1, -1);
      v21 = v18;
      v14 = v24;
      MEMORY[0x2495283BC](v21, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    a1 = v25;
  }
  return sub_244D78708(a1, a2);
}

uint64_t sub_244D7AFC4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for TransactionContainerCache()
{
  return objc_opt_self();
}

uint64_t sub_244D7B018()
{
  uint64_t result;

  type metadata accessor for TransactionDataManager();
  swift_allocObject();
  result = sub_244D7B050();
  qword_257419D50 = result;
  return result;
}

uint64_t sub_244D7B050()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  sub_244E4DCB0();
  v5 = sub_244E4DC80();
  v7 = v6;
  type metadata accessor for TransactionContainerCache();
  v8 = (_QWORD *)swift_allocObject();
  swift_defaultActor_initialize();
  v8[16] = v5;
  v8[17] = v7;
  v9 = MEMORY[0x24BEE4B00];
  v8[14] = MEMORY[0x24BEE4B00];
  v8[15] = v9;
  *(_QWORD *)(v1 + 24) = v8;
  v10 = sub_244E4E55C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v4, 1, 1, v10);
  v11 = swift_allocObject();
  swift_weakInit();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v11;
  sub_244DB2F28((uint64_t)v4, (uint64_t)&unk_257415750, (uint64_t)v12);
  swift_release();
  return v1;
}

uint64_t sub_244D7B188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 40) = a1;
  *(_QWORD *)(v4 + 48) = a4;
  return swift_task_switch();
}

uint64_t sub_244D7B1A0()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 56) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 64) = *(_QWORD *)(Strong + 24);
    swift_retain();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244D7B23C()
{
  sub_244D79978();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244D7B280()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 56) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D7B29C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;

  v5 = v2 + 16;
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16) > 9uLL)
  {
    result = swift_beginAccess();
    if (!*(_QWORD *)(*(_QWORD *)v5 + 16))
    {
      __break(1u);
      return result;
    }
    swift_bridgeObjectRetain();
    sub_244D7F054(0, 1);
    swift_endAccess();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v7 = *(_QWORD **)v5;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)v5 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_244DCB464(0, v7[2] + 1, 1, v7);
    *(_QWORD *)v5 = v7;
  }
  v10 = v7[2];
  v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    v7 = sub_244DCB464((_QWORD *)(v9 > 1), v10 + 1, 1, v7);
    *(_QWORD *)v5 = v7;
  }
  v7[2] = v10 + 1;
  v11 = &v7[2 * v10];
  v11[4] = a1;
  v11[5] = a2;
  return swift_endAccess();
}

uint64_t sub_244D7B3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[194] = v3;
  v4[193] = a3;
  v4[192] = a2;
  v4[191] = a1;
  v4[195] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4[196] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D7B454()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  _BOOL4 v7;
  unint64_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  if (qword_2574143D8 != -1)
    swift_once();
  v1 = v0[196];
  v2 = __swift_project_value_buffer(v0[195], (uint64_t)qword_257419D88);
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    sub_244D66F54(v0[196], &qword_2574145A0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v5 = sub_244E4DCBC();
    v6 = sub_244E4E670();
    v7 = os_log_type_enabled(v5, v6);
    v8 = v0[193];
    if (v7)
    {
      v12 = v0[192];
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      v13 = v10;
      *(_DWORD *)v9 = 136315138;
      swift_bridgeObjectRetain();
      v0[190] = sub_244D9A70C(v12, v8, &v13);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v5, v6, "Retrieving: [%s] from cache", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v10, -1, -1);
      MEMORY[0x2495283BC](v9, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(v0[196], v3);
  }
  v0[197] = *(_QWORD *)(v0[194] + 24);
  return swift_task_switch();
}

uint64_t sub_244D7B670()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 1576);
  swift_beginAccess();
  v2 = *(_QWORD *)(v1 + 112);
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = *(_QWORD *)(v0 + 1544);
    v4 = *(_QWORD *)(v0 + 1536);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_244DC859C(v4, v3);
    if ((v6 & 1) != 0)
    {
      memcpy((void *)(v0 + 904), (const void *)(*(_QWORD *)(v2 + 56) + 296 * v5), 0x128uLL);
      sub_244D7E504(v0 + 904);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_task_switch();
    }
    v8 = v0 + 608;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = v0 + 312;
  }
  sub_244D7EB08(v8);
  sub_244D7EB38(v8, v0 + 16);
  sub_244D7EB38(v0 + 16, *(_QWORD *)(v0 + 1528));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D7B79C()
{
  uint64_t v0;

  sub_244D78708(*(_QWORD *)(v0 + 1536), *(_QWORD *)(v0 + 1544));
  memcpy((void *)(v0 + 1200), (const void *)(v0 + 904), 0x128uLL);
  nullsub_1(v0 + 1200);
  sub_244D7EB38(v0 + 1200, v0 + 16);
  sub_244D7EB38(v0 + 16, *(_QWORD *)(v0 + 1528));
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D7B830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v46;
  os_log_type_t v47;
  _BYTE *v48;
  uint8_t *v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _BYTE v54[12];
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint8_t *v75;
  uint64_t v76;
  _BYTE *v77;
  uint64_t v78;
  unsigned int (*v79)(_BYTE *, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int v90;
  char v91;
  _BYTE v92[7];
  uint64_t v93;
  int v94;
  char v95;

  v6 = v5;
  v83 = a4;
  v84 = a5;
  v88 = a3;
  v82 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v54[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_244E4C384();
  v80 = *(_QWORD *)(v11 - 8);
  v81 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = &v54[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v19 = &v54[-v18];
  if (qword_2574143D8 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v14, (uint64_t)qword_257419D88);
  sub_244D640E4(v20, (uint64_t)v19);
  v21 = sub_244E4DCD4();
  v87 = *(_QWORD *)(v21 - 8);
  v79 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v87 + 48);
  if (v79(v19, 1, v21) == 1)
  {
    sub_244D66F54((uint64_t)v19, &qword_2574145A0);
  }
  else
  {
    v78 = v20;
    sub_244D6BA4C(a1);
    sub_244D6BA4C(a1);
    v22 = sub_244E4DCBC();
    v23 = sub_244E4E670();
    if (os_log_type_enabled(v22, v23))
    {
      v86 = v6;
      v24 = swift_slowAlloc();
      v77 = v17;
      v25 = (uint8_t *)v24;
      v76 = swift_slowAlloc();
      v93 = v76;
      *(_DWORD *)v25 = 136315138;
      v75 = v25 + 4;
      v85 = v10;
      v26 = *(_QWORD *)a1;
      v27 = *(_QWORD *)(a1 + 8);
      swift_bridgeObjectRetain();
      v28 = v26;
      v6 = v86;
      v89 = sub_244D9A70C(v28, v27, &v93);
      sub_244E4E7E4();
      v10 = v85;
      swift_bridgeObjectRelease();
      sub_244D7E9EC(a1);
      sub_244D7E9EC(a1);
      _os_log_impl(&dword_244D61000, v22, v23, "Storing: [%s] in cache", v25, 0xCu);
      v29 = v76;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v29, -1, -1);
      v30 = v25;
      v17 = v77;
      MEMORY[0x2495283BC](v30, -1, -1);

    }
    else
    {

      sub_244D7E9EC(a1);
      sub_244D7E9EC(a1);
    }
    (*(void (**)(_BYTE *, uint64_t))(v87 + 8))(v19, v21);
    v20 = v78;
  }
  v32 = *(_QWORD *)a1;
  v31 = *(_QWORD *)(a1 + 8);
  swift_beginAccess();
  if ((sub_244D7C13C(v32, v31, *(_QWORD **)(v6 + 16)) & 1) != 0)
  {
    sub_244D640E4(v20, (uint64_t)v17);
    v33 = v79(v17, 1, v21);
    swift_bridgeObjectRetain();
    if (v33 == 1)
    {
      sub_244D66F54((uint64_t)v17, &qword_2574145A0);
    }
    else
    {
      v46 = sub_244E4DCBC();
      v47 = sub_244E4E670();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = v17;
        v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v49 = 0;
        _os_log_impl(&dword_244D61000, v46, v47, "Transaction ID already saved", v49, 2u);
        v50 = v49;
        v17 = v48;
        MEMORY[0x2495283BC](v50, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v87 + 8))(v17, v21);
    }
    v51 = sub_244E4E55C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56))(v10, 1, 1, v51);
    v52 = swift_allocObject();
    swift_weakInit();
    v53 = (_QWORD *)swift_allocObject();
    v53[2] = 0;
    v53[3] = 0;
    v53[4] = v52;
    v53[5] = v32;
    v53[6] = v31;
    sub_244E3778C((uint64_t)v10, (uint64_t)&unk_257415778, (uint64_t)v53);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_244E4C378();
    sub_244E4C354();
    v35 = v34;
    (*(void (**)(_BYTE *, uint64_t))(v80 + 8))(v13, v81);
    v36 = *(_QWORD *)(a1 + 16);
    v75 = *(uint8_t **)(a1 + 24);
    v37 = *(_QWORD *)(a1 + 64);
    v74 = *(_QWORD *)(a1 + 72);
    v86 = v6;
    v61 = *(_QWORD *)(a1 + 80);
    v73 = *(_QWORD *)(a1 + 88);
    v38 = *(_QWORD *)(a1 + 112);
    v72 = *(_QWORD *)(a1 + 120);
    v60 = *(_QWORD *)(a1 + 128);
    v71 = *(_QWORD *)(a1 + 136);
    v39 = *(_QWORD *)(a1 + 104);
    v59 = *(_QWORD *)(a1 + 96);
    v58 = *(_QWORD *)(a1 + 144);
    v79 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(a1 + 152);
    v57 = *(_QWORD *)(a1 + 160);
    v78 = v32;
    v76 = *(_QWORD *)(a1 + 168);
    v56 = *(_QWORD *)(a1 + 176);
    v77 = *(_BYTE **)(a1 + 184);
    v55 = *(unsigned __int8 *)(a1 + 192);
    v64 = *(_QWORD *)(a1 + 40);
    v80 = *(_QWORD *)(a1 + 48);
    v67 = *(unsigned __int8 *)(a1 + 194);
    v66 = *(unsigned __int8 *)(a1 + 195);
    v65 = *(unsigned __int8 *)(a1 + 196);
    v69 = *(_QWORD *)(a1 + 200);
    v81 = *(_QWORD *)(a1 + 208);
    v68 = *(_QWORD *)(a1 + 248);
    v87 = *(_QWORD *)(a1 + 256);
    LODWORD(v89) = *(_DWORD *)v92;
    *(_DWORD *)((char *)&v89 + 3) = *(_DWORD *)&v92[3];
    v94 = v90;
    v95 = v91;
    v40 = *(_QWORD *)(a1 + 280);
    v62 = *(_QWORD *)(a1 + 272);
    v63 = *(_QWORD *)(a1 + 320);
    v85 = v10;
    v70 = *(_QWORD *)(a1 + 328);
    v41 = sub_244E4E55C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v10, 1, 1, v41);
    v42 = swift_allocObject();
    swift_weakInit();
    v43 = swift_allocObject();
    *(_QWORD *)(v43 + 32) = v42;
    *(_QWORD *)(v43 + 72) = v36;
    *(_QWORD *)(v43 + 88) = v37;
    *(_QWORD *)(v43 + 104) = v61;
    *(_QWORD *)(v43 + 120) = v38;
    *(_QWORD *)(v43 + 136) = v60;
    *(_QWORD *)(v43 + 152) = v59;
    *(_QWORD *)(v43 + 168) = v58;
    *(_QWORD *)(v43 + 184) = v57;
    *(_QWORD *)(v43 + 200) = v56;
    *(_BYTE *)(v43 + 216) = v55;
    *(_DWORD *)(v43 + 220) = *(_DWORD *)((char *)&v89 + 3);
    *(_DWORD *)(v43 + 217) = v89;
    *(_QWORD *)(v43 + 224) = v64;
    *(_BYTE *)(v43 + 248) = v67;
    *(_BYTE *)(v43 + 249) = v66;
    *(_BYTE *)(v43 + 250) = v65;
    *(_DWORD *)(v43 + 251) = v94;
    *(_BYTE *)(v43 + 255) = v95;
    *(_QWORD *)(v43 + 256) = v69;
    *(_QWORD *)(v43 + 272) = v68;
    *(_QWORD *)(v43 + 288) = v82;
    *(_QWORD *)(v43 + 304) = v83;
    *(_QWORD *)(v43 + 320) = v62;
    *(_QWORD *)(v43 + 336) = v63;
    *(_QWORD *)(v43 + 64) = v31;
    *(_QWORD *)(v43 + 80) = v75;
    *(_QWORD *)(v43 + 96) = v74;
    *(_QWORD *)(v43 + 112) = v73;
    *(_QWORD *)(v43 + 128) = v72;
    *(_QWORD *)(v43 + 144) = v71;
    *(_QWORD *)(v43 + 160) = v39;
    *(_QWORD *)(v43 + 176) = v79;
    *(_QWORD *)(v43 + 192) = v76;
    *(_QWORD *)(v43 + 16) = 0;
    *(_QWORD *)(v43 + 24) = 0;
    v44 = v78;
    *(_QWORD *)(v43 + 40) = v78;
    *(_QWORD *)(v43 + 48) = v31;
    *(_QWORD *)(v43 + 56) = v44;
    *(_QWORD *)(v43 + 208) = v77;
    *(_QWORD *)(v43 + 232) = v80;
    *(double *)(v43 + 240) = v35 + 55.0;
    *(_QWORD *)(v43 + 264) = v81;
    *(_QWORD *)(v43 + 280) = v87;
    *(_QWORD *)(v43 + 296) = v88;
    *(_QWORD *)(v43 + 312) = v84;
    *(_QWORD *)(v43 + 328) = v40;
    *(_QWORD *)(v43 + 344) = v70;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244E3778C((uint64_t)v85, (uint64_t)&unk_257415768, v43);
    swift_release();
    sub_244D7B29C(v78, v31);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_244D7C13C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_244E4EAC0();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_244E4EAC0() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_244D7C200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[5] = a1;
  return swift_task_switch();
}

uint64_t sub_244D7C220()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 80) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 88) = *(_QWORD *)(Strong + 24);
    swift_retain();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244D7C2BC()
{
  uint64_t v0;

  sub_244D78418(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244D7C334()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 80) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D7C354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = a6;
  v6[5] = a1;
  v6[6] = a4;
  return swift_task_switch();
}

uint64_t sub_244D7C370()
{
  uint64_t v0;
  uint64_t Strong;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  *(_QWORD *)(v0 + 72) = Strong;
  if (Strong)
  {
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(Strong + 24);
    swift_retain();
    swift_release();
    return swift_task_switch();
  }
  else
  {
    **(_BYTE **)(v0 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244D7C40C()
{
  uint64_t v0;

  sub_244D78708(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  swift_release();
  return swift_task_switch();
}

uint64_t sub_244D7C480()
{
  uint64_t v0;

  **(_BYTE **)(v0 + 40) = *(_QWORD *)(v0 + 72) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D7C4A0()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TransactionDataManager()
{
  return objc_opt_self();
}

uint64_t destroy for TransactionContainer()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransactionContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  v9 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  v11 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v11;
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v13 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v13;
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_WORD *)(a1 + 193) = *(_WORD *)(a2 + 193);
  v14 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v14;
  v15 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v15;
  v16 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v16;
  v17 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v17;
  v18 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v18;
  v19 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransactionContainer(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy296_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x128uLL);
}

uint64_t assignWithTake for TransactionContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  v14 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v14;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  v15 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v17;
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionContainer(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 296))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionContainer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 296) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 296) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionContainer()
{
  return &type metadata for TransactionContainer;
}

uint64_t sub_244D7CBD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B726F7774656ELL && a2 == 0xE700000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000244E57420 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000244E57440 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000244E57460 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000244E57480 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000244E574A0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64496B656BLL && a2 == 0xE500000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x79636E6572727563 && a2 == 0xEC00000065646F43 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x69757165526E6970 && a2 == 0xEB00000000646572 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6C757365526D7663 && a2 == 0xEF34366573614274 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEA00000000006E6FLL || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000244E574C0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000244E574E0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x626C6C6146726F66 && a2 == 0xEB000000006B6361 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6B6361626C6C6166 && a2 == 0xEE00746E756F6D41 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000244E57500 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000244E57520 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000244E57540 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E57560 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x7954707041796170 && a2 == 0xEA00000000006570)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 21;
    else
      return 22;
  }
}

void *sub_244D7D4C8@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void *result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  void (*v52)(_QWORD, _QWORD);
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD v99[37];
  _QWORD v100[20];
  char v101;
  _BYTE v102[7];
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  char v108;
  int v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  int v124;
  char v125;
  _DWORD v126[3];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415728);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v98 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_244D7E4C0();
  sub_244E4EBE0();
  if (v2)
    return (void *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
  v88 = a2;
  LOBYTE(v100[0]) = 0;
  v11 = sub_244E4E9F4();
  LOBYTE(v100[0]) = 1;
  v13 = v12;
  swift_bridgeObjectRetain();
  v14 = sub_244E4E9F4();
  v97 = v13;
  v15 = v14;
  LOBYTE(v100[0]) = 2;
  v17 = v16;
  swift_bridgeObjectRetain();
  v18 = sub_244E4E9F4();
  v96 = v17;
  v87 = v18;
  LOBYTE(v100[0]) = 3;
  v20 = v19;
  swift_bridgeObjectRetain();
  v21 = sub_244E4E9F4();
  v95 = v20;
  v86 = v21;
  LOBYTE(v100[0]) = 4;
  v23 = v22;
  swift_bridgeObjectRetain();
  v24 = sub_244E4E9F4();
  v94 = v23;
  v85 = v24;
  LOBYTE(v100[0]) = 5;
  v26 = v25;
  swift_bridgeObjectRetain();
  v27 = sub_244E4E9F4();
  v93 = v26;
  v84 = v27;
  LOBYTE(v100[0]) = 6;
  v29 = v28;
  swift_bridgeObjectRetain();
  v30 = sub_244E4E9F4();
  v92 = v29;
  v83 = v30;
  LOBYTE(v100[0]) = 7;
  v32 = v31;
  swift_bridgeObjectRetain();
  v33 = sub_244E4E9F4();
  v91 = v32;
  v82 = v33;
  LOBYTE(v100[0]) = 8;
  v35 = v34;
  swift_bridgeObjectRetain();
  v81 = sub_244E4E9F4();
  v90 = v35;
  v79 = v15;
  LOBYTE(v100[0]) = 9;
  v89 = v36;
  swift_bridgeObjectRetain();
  v37 = sub_244E4E9F4();
  v80 = v38;
  v39 = v37;
  LOBYTE(v100[0]) = 10;
  swift_bridgeObjectRetain();
  v78 = sub_244E4EA00();
  LOBYTE(v100[0]) = 11;
  v76 = sub_244E4E9F4();
  v77 = v40;
  LOBYTE(v100[0]) = 12;
  swift_bridgeObjectRetain();
  sub_244E4EA0C();
  v42 = v41;
  LOBYTE(v100[0]) = 13;
  v75 = sub_244E4EA00();
  LOBYTE(v100[0]) = 14;
  v74 = sub_244E4EA00();
  LOBYTE(v100[0]) = 15;
  v73 = sub_244E4EA00();
  LOBYTE(v100[0]) = 16;
  v71 = sub_244E4E9F4();
  v72 = v43;
  LOBYTE(v100[0]) = 17;
  swift_bridgeObjectRetain();
  v68 = sub_244E4E9F4();
  v70 = v44;
  LOBYTE(v100[0]) = 18;
  swift_bridgeObjectRetain();
  v65 = sub_244E4E9D0();
  v67 = v45;
  v69 = 0;
  LOBYTE(v100[0]) = 19;
  swift_bridgeObjectRetain();
  v46 = v69;
  v64 = sub_244E4E9D0();
  v66 = v47;
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = (void *)swift_bridgeObjectRelease();
    if (!v69)
      return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v100[0]) = 20;
    swift_bridgeObjectRetain();
    v63 = sub_244E4E9F4();
    v49 = v48;
    v123 = 21;
    swift_bridgeObjectRetain();
    v61 = sub_244E4E9F4();
    v62 = v50;
    LODWORD(v69) = v78 & 1;
    v51 = v75 & 1;
    v60 = v75 & 1;
    v78 = v74 & 1;
    v52 = *(void (**)(_QWORD, _QWORD))(v6 + 8);
    v53 = v73 & 1;
    v75 = v73 & 1;
    v52(v8, v5);
    v99[0] = v11;
    v99[1] = v97;
    v99[2] = v79;
    v99[3] = v96;
    v99[4] = v87;
    v99[5] = v95;
    v99[6] = v86;
    v99[7] = v94;
    v99[8] = v85;
    v99[9] = v93;
    v99[10] = v84;
    v99[11] = v92;
    v99[12] = v83;
    v99[13] = v91;
    v99[14] = v82;
    v99[15] = v90;
    v99[16] = v81;
    v99[17] = v89;
    v59 = v39;
    v99[18] = v39;
    v99[19] = v80;
    LOBYTE(v99[20]) = v69;
    v99[21] = v76;
    v99[22] = v77;
    v99[23] = v42;
    LOBYTE(v99[24]) = v51;
    BYTE1(v99[24]) = v78;
    BYTE2(v99[24]) = v53;
    v99[25] = v71;
    v99[26] = v72;
    v99[27] = v68;
    v99[28] = v70;
    v99[29] = v65;
    v99[30] = v67;
    v99[31] = v64;
    v99[32] = v66;
    v99[33] = v63;
    v99[34] = v49;
    v99[35] = v61;
    v99[36] = v62;
    sub_244D7E504((uint64_t)v99);
    swift_bridgeObjectRelease();
    v54 = v96;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v55 = v90;
    swift_bridgeObjectRelease();
    v56 = v89;
    swift_bridgeObjectRelease();
    v57 = v80;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v58 = v67;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v98);
    v100[0] = v11;
    v100[1] = v97;
    v100[2] = v79;
    v100[3] = v54;
    v100[4] = v87;
    v100[5] = v95;
    v100[6] = v86;
    v100[7] = v94;
    v100[8] = v85;
    v100[9] = v93;
    v100[10] = v84;
    v100[11] = v92;
    v100[12] = v83;
    v100[13] = v91;
    v100[14] = v82;
    v100[15] = v55;
    v100[16] = v81;
    v100[17] = v56;
    v100[18] = v59;
    v100[19] = v57;
    v101 = v69;
    *(_DWORD *)&v102[3] = *(_DWORD *)((char *)v126 + 3);
    *(_DWORD *)v102 = v126[0];
    v103 = v76;
    v104 = v77;
    v105 = v42;
    v106 = v60;
    v107 = v78;
    v108 = v75;
    v110 = v125;
    v109 = v124;
    v111 = v71;
    v112 = v72;
    v113 = v68;
    v114 = v70;
    v115 = v65;
    v116 = v58;
    v117 = v64;
    v118 = v66;
    v119 = v63;
    v120 = v49;
    v121 = v61;
    v122 = v62;
    sub_244D7E624((uint64_t)v100);
    return memcpy(v88, v99, 0x128uLL);
  }
  return result;
}

unint64_t sub_244D7E4C0()
{
  unint64_t result;

  result = qword_257415730;
  if (!qword_257415730)
  {
    result = MEMORY[0x2495282F0](&unk_244E51524, &type metadata for TransactionContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415730);
  }
  return result;
}

uint64_t sub_244D7E504(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_244D7E624(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244D7E744()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_244D7E768()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244D7E794(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;

  v4 = *(_QWORD *)(v1 + 32);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244D70150;
  v5[5] = a1;
  v5[6] = v4;
  return swift_task_switch();
}

uint64_t sub_244D7E7F8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244D7E8B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_244D71068;
  *(_QWORD *)(v5 + 64) = v4;
  *(_QWORD *)(v5 + 72) = v1 + 56;
  *(_OWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_244D7E938()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244D7E96C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v7;

  v7 = *(_OWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = sub_244D70150;
  *(_QWORD *)(v5 + 64) = v4;
  *(_OWORD *)(v5 + 48) = v7;
  *(_QWORD *)(v5 + 40) = a1;
  return swift_task_switch();
}

uint64_t sub_244D7E9EC(uint64_t a1)
{
  void *v3;

  v3 = *(void **)(a1 + 216);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

double sub_244D7EB08(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 288) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_244D7EB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_244D7EB80(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  char *v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[3];
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244E4C2AC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v25 = (char *)v23 - v13;
  v14 = *(_QWORD *)(a1 + 16);
  if (!v14)
    return MEMORY[0x24BEE4AF8];
  v23[2] = v2;
  v29 = *(_QWORD *)(a2 + 128);
  v26 = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  v23[1] = a1;
  v15 = a1 + 40;
  v16 = MEMORY[0x24BEE4AF8];
  v24 = v12;
  do
  {
    v27 = v29;
    v28 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244E4E3F4();
    sub_244E4C234();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_244D66F54((uint64_t)v7, &qword_257414B00);
    }
    else
    {
      v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v18 = v25;
      v17(v25, v7, v8);
      v17(v12, v18, v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_244DCB244(0, *(_QWORD *)(v16 + 16) + 1, 1, v16);
      v20 = *(_QWORD *)(v16 + 16);
      v19 = *(_QWORD *)(v16 + 24);
      if (v20 >= v19 >> 1)
        v16 = sub_244DCB244(v19 > 1, v20 + 1, 1, v16);
      *(_QWORD *)(v16 + 16) = v20 + 1;
      v21 = v16
          + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
          + *(_QWORD *)(v9 + 72) * v20;
      v12 = v24;
      v17((char *)v21, v24, v8);
    }
    v15 += 16;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v16;
}

char *sub_244D7EE0C(uint64_t a1, void (*a2)(char *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  char *v22;
  _QWORD v24[3];
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *);
  char v28;

  v27 = a2;
  v4 = sub_244E4C2AC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1;
    v13 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v14 = *(_QWORD *)(v5 + 72);
    v24[2] = v2;
    v25 = v14;
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v24[1] = v12;
    swift_bridgeObjectRetain();
    v15 = (char *)MEMORY[0x24BEE4AF8];
    do
    {
      v26(v10, v13, v4);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v16(v10, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      {
        v22 = v15;
        goto LABEL_14;
      }
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      v27(v7);
      v28 = 0;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if ((v28 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v15 = sub_244DCB14C(0, *((_QWORD *)v15 + 2) + 1, 1, v15);
        v18 = *((_QWORD *)v15 + 2);
        v17 = *((_QWORD *)v15 + 3);
        v19 = v15;
        v20 = v18 + 1;
        if (v18 >= v17 >> 1)
          v19 = sub_244DCB14C((char *)(v17 > 1), v18 + 1, 1, v19);
        *((_QWORD *)v19 + 2) = v20;
        v15 = v19;
      }
      v13 += v25;
      --v11;
    }
    while (v11);
    v22 = v15;
    v16(v10, 1, 1, v4);
  }
  else
  {
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain();
    v22 = (char *)MEMORY[0x24BEE4AF8];
    v21(v10, 1, 1, v4);
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_244D7F054(uint64_t a1, int64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_244DCB464(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_20;
  v13 = v4[2];
  v14 = __OFSUB__(v13, a2);
  v15 = v13 - a2;
  if (v14)
    goto LABEL_26;
  if ((v15 & 0x8000000000000000) == 0)
  {
    v16 = (char *)&v4[2 * a2 + 4];
    if (a1 != a2 || &v4[2 * a1 + 4] >= (_QWORD *)&v16[16 * v15])
      result = (uint64_t)memmove(&v4[2 * a1 + 4], v16, 16 * v15);
    v17 = v4[2];
    v14 = __OFADD__(v17, v8);
    v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(_QWORD *)v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_244E4E994();
  __break(1u);
  return result;
}

unint64_t sub_244D7F1BC()
{
  unint64_t result;

  result = qword_257415788;
  if (!qword_257415788)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257415788);
  }
  return result;
}

uint64_t sub_244D7F1F8()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244D7F224()
{
  uint64_t v0;

  return sub_244D7AB80(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_244D7F248(uint64_t a1)
{
  uint64_t v1;

  return sub_244D79EB0(*(double *)(v1 + 24), a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 32));
}

uint64_t sub_244D7F258(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244D7F37C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;

  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    *(_QWORD *)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    *(_QWORD *)(a1 + 288));
  return a1;
}

uint64_t sub_244D7F400(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TransactionContainer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEB)
    goto LABEL_17;
  if (a2 + 21 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 21) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 21;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 21;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 21;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x16;
  v8 = v6 - 22;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionContainer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 21 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 21) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEA)
    return ((uint64_t (*)(void))((char *)&loc_244D7F600 + 4 * byte_244E5134B[v4]))();
  *a1 = a2 + 21;
  return ((uint64_t (*)(void))((char *)sub_244D7F634 + 4 * byte_244E51346[v4]))();
}

uint64_t sub_244D7F634(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D7F63C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D7F644);
  return result;
}

uint64_t sub_244D7F650(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D7F658);
  *(_BYTE *)result = a2 + 21;
  return result;
}

uint64_t sub_244D7F65C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D7F664(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransactionContainer.CodingKeys()
{
  return &type metadata for TransactionContainer.CodingKeys;
}

unint64_t sub_244D7F684()
{
  unint64_t result;

  result = qword_2574157A0;
  if (!qword_2574157A0)
  {
    result = MEMORY[0x2495282F0](&unk_244E514FC, &type metadata for TransactionContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574157A0);
  }
  return result;
}

unint64_t sub_244D7F6CC()
{
  unint64_t result;

  result = qword_2574157A8;
  if (!qword_2574157A8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5146C, &type metadata for TransactionContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574157A8);
  }
  return result;
}

unint64_t sub_244D7F714()
{
  unint64_t result;

  result = qword_2574157B0;
  if (!qword_2574157B0)
  {
    result = MEMORY[0x2495282F0](&unk_244E51494, &type metadata for TransactionContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574157B0);
  }
  return result;
}

uint64_t destroy for PaymentEntitlementVerifier()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PaymentEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_WORD *)(a1 + 84) = *(_WORD *)(a2 + 84);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PaymentEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 83) = *(_BYTE *)(a2 + 83);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_BYTE *)(a1 + 85) = *(_BYTE *)(a2 + 85);
  return a1;
}

__n128 __swift_memcpy86_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 78) = *(_QWORD *)(a2 + 78);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for PaymentEntitlementVerifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_BYTE *)(a1 + 81) = *(_BYTE *)(a2 + 81);
  *(_BYTE *)(a1 + 82) = *(_BYTE *)(a2 + 82);
  *(_BYTE *)(a1 + 83) = *(_BYTE *)(a2 + 83);
  *(_BYTE *)(a1 + 84) = *(_BYTE *)(a2 + 84);
  *(_BYTE *)(a1 + 85) = *(_BYTE *)(a2 + 85);
  return a1;
}

uint64_t getEnumTagSinglePayload for PaymentEntitlementVerifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 86))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PaymentEntitlementVerifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 84) = 0;
    *(_DWORD *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 86) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 86) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaymentEntitlementVerifier()
{
  return &type metadata for PaymentEntitlementVerifier;
}

uint64_t sub_244D7FA9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  char v12;
  void *v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  uint64_t result;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  __int128 v24;
  __int128 v25;
  _BYTE v26[24];
  uint64_t v27;

  v4 = (void *)sub_244E4E2F8();
  v5 = objc_msgSend(a1, sel_valueForEntitlement_, v4);

  if (v5)
  {
    sub_244E4E82C();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_244D7FF80((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      v22 = v23;
      goto LABEL_9;
    }
  }
  else
  {
    sub_244D7FFC8((uint64_t)v26);
  }
  v22 = 0;
LABEL_9:
  v6 = (void *)sub_244E4E2F8();
  v7 = objc_msgSend(a1, sel_valueForEntitlement_, v6);

  if (v7)
  {
    sub_244E4E82C();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_244D7FF80((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      v21 = v23;
      goto LABEL_17;
    }
  }
  else
  {
    sub_244D7FFC8((uint64_t)v26);
  }
  v21 = 0;
LABEL_17:
  v8 = (void *)sub_244E4E2F8();
  v9 = objc_msgSend(a1, sel_valueForEntitlement_, v8);

  if (v9)
  {
    sub_244E4E82C();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_244D7FF80((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      v20 = v23;
      goto LABEL_25;
    }
  }
  else
  {
    sub_244D7FFC8((uint64_t)v26);
  }
  v20 = 0;
LABEL_25:
  v10 = (void *)sub_244E4E2F8();
  v11 = objc_msgSend(a1, sel_valueForEntitlement_, v10);

  if (v11)
  {
    sub_244E4E82C();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_244D7FF80((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      v12 = v23;
      goto LABEL_33;
    }
  }
  else
  {
    sub_244D7FFC8((uint64_t)v26);
  }
  v12 = 0;
LABEL_33:
  v13 = (void *)sub_244E4E2F8();
  v14 = objc_msgSend(a1, sel_valueForEntitlement_, v13);

  if (v14)
  {
    sub_244E4E82C();
    swift_unknownObjectRelease();
  }
  else
  {
    v24 = 0u;
    v25 = 0u;
  }
  sub_244D7FF80((uint64_t)&v24, (uint64_t)v26);
  if (v27)
  {
    if (swift_dynamicCast())
    {
      v15 = v23;
      goto LABEL_41;
    }
  }
  else
  {
    sub_244D7FFC8((uint64_t)v26);
  }
  v15 = 0;
LABEL_41:
  v16 = (void *)sub_244E4E2F8();
  v17 = objc_msgSend(a1, (SEL)&stru_2515E63C0.name, v16);

  if (v17)
  {
    sub_244E4E82C();
    swift_unknownObjectRelease();

  }
  else
  {

    v24 = 0u;
    v25 = 0u;
  }
  sub_244D7FF80((uint64_t)&v24, (uint64_t)v26);
  if (!v27)
  {
    result = sub_244D7FFC8((uint64_t)v26);
    goto LABEL_48;
  }
  result = swift_dynamicCast();
  if (!(_DWORD)result)
  {
LABEL_48:
    v19 = 0;
    goto LABEL_49;
  }
  v19 = v23;
LABEL_49:
  *(_QWORD *)a2 = 0xD000000000000043;
  *(_QWORD *)(a2 + 8) = 0x8000000244E57580;
  *(_QWORD *)(a2 + 16) = 0xD00000000000002ALL;
  *(_QWORD *)(a2 + 24) = 0x8000000244E575D0;
  *(_QWORD *)(a2 + 32) = 0xD000000000000030;
  *(_QWORD *)(a2 + 40) = 0x8000000244E57600;
  *(_QWORD *)(a2 + 48) = 0xD000000000000030;
  *(_QWORD *)(a2 + 56) = 0x8000000244E57640;
  *(_QWORD *)(a2 + 64) = 0xD000000000000030;
  *(_QWORD *)(a2 + 72) = 0x8000000244E57680;
  *(_BYTE *)(a2 + 80) = v22;
  *(_BYTE *)(a2 + 81) = v21;
  *(_BYTE *)(a2 + 82) = v20;
  *(_BYTE *)(a2 + 83) = v12;
  *(_BYTE *)(a2 + 84) = v15;
  *(_BYTE *)(a2 + 85) = v19;
  return result;
}

uint64_t sub_244D7FF80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D7FFC8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414A38);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_244D80008(unsigned __int8 a1)
{
  unint64_t v2;

  if (a1 >= 6u)
  {
    v2 = 0xD00000000000001DLL;
    if (a1 == 7)
      v2 = 0xD000000000000022;
    if (a1 == 6)
      return 0xD000000000000022;
    else
      return v2;
  }
  else
  {
    sub_244E4E88C();
    sub_244E4E3F4();
    sub_244E4E934();
    sub_244E4E3F4();
    return 0;
  }
}

void sub_244D80120(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_244D80160(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_244D801CC + 4 * byte_244E515A5[a2]))(24945);
}

uint64_t sub_244D801CC(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 24945 && v1 == 0xE200000000000000)
    v2 = 1;
  else
    v2 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_244D80280(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_244D802C8(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_244D80368 + 4 * byte_244E515B0[a2]))(0x727574616E676953);
}

uint64_t sub_244D80368(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x727574616E676953 && v1 == 0xE900000000000065)
    v2 = 1;
  else
    v2 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

void sub_244D80458(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_244D804A0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_244D80590 + 4 * byte_244E515BF[a2]))(0x6465766F72707061);
}

uint64_t sub_244D80590(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6465766F72707061 && v1 == 0xE800000000000000)
    v2 = 1;
  else
    v2 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_244D806DC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEC0000006E656B6FLL;
  v3 = 0x546E6F6973736573;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0x6F546C656E72656BLL;
    else
      v5 = 0x746E61686372656DLL;
    if (v4 == 1)
      v6 = 0xEB000000006E656BLL;
    else
      v6 = 0xEC0000006F676F4CLL;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x546E6F6973736573;
  v6 = 0xEC0000006E656B6FLL;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0x6F546C656E72656BLL;
    else
      v3 = 0x746E61686372656DLL;
    if (v7 == 1)
      v2 = 0xEB000000006E656BLL;
    else
      v2 = 0xEC0000006F676F4CLL;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_244D8081C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_244D8085C(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_244D808D8 + 4 * byte_244E515D1[a2]))(a3 + 0x10000);
}

uint64_t sub_244D808D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  if (a1 == a3 + 0x10000 && v3 == v4)
    v5 = 1;
  else
    v5 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_244D809BC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  unint64_t v3;
  int v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  char v8;

  v2 = 0xEB00000000646574;
  v3 = 0x6164696C61766E69;
  v4 = a1;
  if (a1)
  {
    if (a1 == 1)
      v5 = 0xD000000000000018;
    else
      v5 = 0x6E776F6E6B6E75;
    if (v4 == 1)
      v6 = 0x8000000244E566C0;
    else
      v6 = 0xE700000000000000;
    v7 = a2;
    if (!a2)
      goto LABEL_15;
    goto LABEL_9;
  }
  v5 = 0x6164696C61766E69;
  v6 = 0xEB00000000646574;
  v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1)
      v3 = 0xD000000000000018;
    else
      v3 = 0x6E776F6E6B6E75;
    if (v7 == 1)
      v2 = 0x8000000244E566C0;
    else
      v2 = 0xE700000000000000;
  }
LABEL_15:
  if (v5 == v3 && v6 == v2)
    v8 = 1;
  else
    v8 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_244D80ADC(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_244D80B18()
{
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

void sub_244D80C00(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_244D80C38()
{
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for EnvironmentManager()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for SPSEnvironment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_244D80D18 + 4 * byte_244E515F1[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_244D80D4C + 4 * byte_244E515EC[v4]))();
}

uint64_t sub_244D80D4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D80D54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D80D5CLL);
  return result;
}

uint64_t sub_244D80D68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D80D70);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_244D80D74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D80D7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SPSEnvironment()
{
  return &type metadata for SPSEnvironment;
}

unint64_t sub_244D80D9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257415878;
  if (!qword_257415878)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257415880);
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257415878);
  }
  return result;
}

uint64_t sub_244D80DE8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D80E14 + 4 * byte_244E515F6[a1]))(3236209, 0xE300000000000000);
}

uint64_t sub_244D80E14(uint64_t a1)
{
  return a1 + 0x10000;
}

uint64_t sub_244D80E1C(uint64_t a1)
{
  return a1 + 0x20000;
}

uint64_t sub_244D80E24(uint64_t a1)
{
  return a1 + 196608;
}

uint64_t sub_244D80E2C(uint64_t a1)
{
  return a1 + 0x40000;
}

uint64_t sub_244D80E34(uint64_t a1)
{
  return a1 + 327680;
}

uint64_t sub_244D80E3C()
{
  return 1953654115;
}

uint64_t sub_244D80E4C()
{
  return 0x676E6967617473;
}

uint64_t sub_244D80E64()
{
  return 1685025392;
}

void sub_244D80E74(char *a1)
{
  sub_244D8081C(*a1);
}

uint64_t sub_244D80E80()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_244E4EB80();
  sub_244D80C00((uint64_t)v3, v1);
  return sub_244E4EBC8();
}

void sub_244D80EC4(uint64_t a1)
{
  char *v1;

  sub_244D80C00(a1, *v1);
}

uint64_t sub_244D80ECC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_244E4EB80();
  sub_244D80C00((uint64_t)v3, v1);
  return sub_244E4EBC8();
}

uint64_t sub_244D80F0C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244D80FB8();
  *a1 = result;
  return result;
}

uint64_t sub_244D80F38@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_244D80DE8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_244D80F60(_QWORD *a1@<X8>)
{
  *a1 = &unk_2515DA110;
}

unint64_t sub_244D80F74()
{
  unint64_t result;

  result = qword_257415888;
  if (!qword_257415888)
  {
    result = MEMORY[0x2495282F0](&unk_244E516D4, &type metadata for SPSEnvironment);
    atomic_store(result, (unint64_t *)&qword_257415888);
  }
  return result;
}

uint64_t sub_244D80FB8()
{
  unint64_t v0;

  v0 = sub_244E4E9C4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

uint64_t sub_244D81000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __CFString *v4;
  __CFString *v5;
  CFPropertyListRef v6;
  uint64_t v8;

  v4 = (__CFString *)sub_244E4E2F8();
  sub_244E4D908();
  v5 = (__CFString *)sub_244E4E2F8();
  swift_bridgeObjectRelease();
  v6 = CFPreferencesCopyAppValue(v4, v5);

  if (v6 && swift_dynamicCast())
    return v8;
  swift_bridgeObjectRetain();
  return a3;
}

uint64_t sub_244D810B8(char a1)
{
  uint64_t (*v2)(void);
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  id v10;
  void *v11;
  unsigned __int8 v12;

  v2 = (uint64_t (*)(void))sub_244E4D86C();
  v3 = v2();
  swift_release();
  if ((v3 & 1) == 0 && (a1 & 1) != 0)
  {
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB4398]), sel_init);
    v10 = objc_msgSend(v9, sel_aa_primaryAppleAccount);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, sel_aa_isSandboxAccount);

      if ((v12 & 1) != 0)
        return 6;
    }
    else
    {

    }
    return 8;
  }
  else
  {
    v4 = sub_244E4D95C();
    v6 = v5;
    v7 = sub_244E4D8CC();
    sub_244D81000(v4, v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_244D70D08();
    sub_244E4E808();
    swift_bridgeObjectRelease();
    sub_244E4E37C();
    swift_bridgeObjectRelease();
    return sub_244D80FB8();
  }
}

uint64_t sub_244D81234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 152);
  v3 = v2;
  if (v2 == 1)
  {
    type metadata accessor for SessionToken();
    swift_allocObject();
    swift_bridgeObjectRetain();
    v3 = sub_244D65C58();
    v4 = *(_QWORD *)(v1 + 152);
    *(_QWORD *)(v1 + 152) = v3;
    swift_retain();
    sub_244D82060(v4);
  }
  sub_244D82384(v2);
  return v3;
}

uint64_t sub_244D812C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, uint64_t a10, uint64_t a11, char a12)
{
  uint64_t v12;
  uint64_t v22;

  *(_QWORD *)(v12 + 80) = sub_244E4D890();
  *(_QWORD *)(v12 + 88) = 0;
  *(_BYTE *)(v12 + 96) = 1;
  *(_QWORD *)(v12 + 152) = 1;
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  *(_QWORD *)(v12 + 48) = a5;
  *(_QWORD *)(v12 + 56) = a6;
  *(_QWORD *)(v12 + 64) = a7;
  *(_QWORD *)(v12 + 72) = a8;
  *(_QWORD *)(v12 + 104) = sub_244D82070();
  *(_QWORD *)(v12 + 112) = v22;
  *(_QWORD *)(v12 + 120) = a10;
  *(_QWORD *)(v12 + 128) = a11;
  *(_BYTE *)(v12 + 136) = a12;
  *(double *)(v12 + 144) = a9;
  return v12;
}

uint64_t sub_244D8138C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D813CC + 4 * byte_244E51700[a1]))(0x5472656E74726170, 0xEF74774A6E656B6FLL);
}

uint64_t sub_244D813CC()
{
  return 0x546E6F6973736573;
}

uint64_t sub_244D813E0()
{
  return 0x6F546C656E72656BLL;
}

uint64_t sub_244D81404()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_244D81424()
{
  return 0x437972746E756F63;
}

unint64_t sub_244D81444()
{
  return 0xD000000000000012;
}

uint64_t sub_244D814C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D81500 + 4 * byte_244E5170A[a1]))(0x5472656E74726170, 0xEF74774A6E656B6FLL);
}

uint64_t sub_244D81500()
{
  return 0x546E6F6973736573;
}

uint64_t sub_244D81514()
{
  return 0x6F546C656E72656BLL;
}

uint64_t sub_244D81538()
{
  return 0x6D6E6F7269766E65;
}

uint64_t sub_244D81558()
{
  return 0x437972746E756F63;
}

unint64_t sub_244D81578()
{
  return 0xD000000000000012;
}

uint64_t sub_244D815F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_244D8138C(*a1);
  v5 = v4;
  if (v3 == sub_244D8138C(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_244D8167C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_244E4EB80();
  sub_244D8138C(v1);
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244D816DC()
{
  unsigned __int8 *v0;

  sub_244D8138C(*v0);
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D8171C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_244E4EB80();
  sub_244D8138C(v1);
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244D81778@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244D82538();
  *a1 = result;
  return result;
}

uint64_t sub_244D817A4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_244D8138C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_244D817CC()
{
  unsigned __int8 *v0;

  return sub_244D814C0(*v0);
}

uint64_t sub_244D817D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244D82538();
  *a1 = result;
  return result;
}

uint64_t sub_244D817F8()
{
  sub_244D8201C();
  return sub_244E4EC04();
}

uint64_t sub_244D81820()
{
  sub_244D8201C();
  return sub_244E4EC10();
}

uint64_t sub_244D81848()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244D82060(*(_QWORD *)(v0 + 152));
  return v0;
}

uint64_t sub_244D81894()
{
  sub_244D81848();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionStore()
{
  return objc_opt_self();
}

uint64_t sub_244D818D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415A50);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D8201C();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA84();
    v8[10] = 5;
    sub_244E4EA54();
    v8[9] = 6;
    swift_bridgeObjectRetain();
    sub_244E4EA60();
    swift_bridgeObjectRelease();
    v8[8] = 7;
    swift_bridgeObjectRetain();
    sub_244E4EA60();
    swift_bridgeObjectRelease();
    v8[7] = 8;
    sub_244E4EA6C();
    v8[6] = 9;
    sub_244E4EA78();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D81B7C()
{
  return MEMORY[0x24BEE0948];
}

uint64_t sub_244D81B88(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v18[16];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415A40);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v1 + 80) = sub_244E4D890();
  *(_QWORD *)(v1 + 88) = 0;
  *(_BYTE *)(v1 + 96) = 1;
  *(_QWORD *)(v1 + 152) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D8201C();
  sub_244E4EBE0();
  if (v2)
  {
    sub_244D82060(*(_QWORD *)(v1 + 152));
    type metadata accessor for SessionStore();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v18[15] = 0;
    *(_QWORD *)(v1 + 16) = sub_244E4E9F4();
    *(_QWORD *)(v1 + 24) = v8;
    v18[14] = 1;
    *(_QWORD *)(v1 + 32) = sub_244E4E9F4();
    *(_QWORD *)(v1 + 40) = v9;
    v18[13] = 2;
    *(_QWORD *)(v1 + 48) = sub_244E4E9F4();
    *(_QWORD *)(v1 + 56) = v10;
    v18[12] = 3;
    *(_QWORD *)(v1 + 64) = sub_244E4E9F4();
    *(_QWORD *)(v1 + 72) = v11;
    v18[11] = 4;
    *(_QWORD *)(v1 + 80) = sub_244E4EA18();
    v18[10] = 5;
    *(_QWORD *)(v1 + 88) = sub_244E4E9E8();
    *(_BYTE *)(v1 + 96) = v12 & 1;
    v18[9] = 6;
    *(_QWORD *)(v1 + 104) = sub_244E4E9F4();
    *(_QWORD *)(v1 + 112) = v14;
    v18[8] = 7;
    *(_QWORD *)(v1 + 120) = sub_244E4E9F4();
    *(_QWORD *)(v1 + 128) = v15;
    v18[7] = 8;
    *(_BYTE *)(v1 + 136) = sub_244E4EA00() & 1;
    v18[6] = 9;
    sub_244E4EA0C();
    v17 = v16;
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v1 + 144) = v17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_244D81F6C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for SessionStore();
  v5 = swift_allocObject();
  result = sub_244D81B88(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_244D81FC0(_QWORD *a1)
{
  return sub_244D818D4(a1);
}

uint64_t sub_244D81FE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for SessionStore();
  result = sub_244E4E8A4();
  *a1 = result;
  return result;
}

unint64_t sub_244D8201C()
{
  unint64_t result;

  result = qword_257415A48;
  if (!qword_257415A48)
  {
    result = MEMORY[0x2495282F0](&unk_244E51918, &type metadata for SessionStore.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415A48);
  }
  return result;
}

uint64_t sub_244D82060(uint64_t result)
{
  if (result != 1)
    return swift_release();
  return result;
}

uint64_t sub_244D82070()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t (*v3)(void);
  char v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  _QWORD v22[3];
  uint64_t v23;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = (uint64_t (*)(void))sub_244E4D86C();
  v4 = v3();
  swift_release();
  if ((v4 & 1) != 0
    && (v5 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v6 = (void *)sub_244E4E2F8(),
        v7 = objc_msgSend(v5, sel_stringForKey_, v6),
        v5,
        v6,
        v7))
  {
    v8 = sub_244E4E31C();
    v10 = v9;

  }
  else
  {
    v8 = 0;
    v10 = 0xE000000000000000;
  }
  v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0)
    v11 = v8 & 0xFFFFFFFFFFFFLL;
  if (!v11)
  {
    swift_bridgeObjectRelease();
    sub_244E4DCB0();
    v8 = sub_244E4DCA4();
    v13 = v12;
    if (qword_2574143D8 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v0, (uint64_t)qword_257419D88);
    sub_244D640E4(v14, (uint64_t)v2);
    v15 = sub_244E4DCD4();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v2, 1, v15) == 1)
    {
      sub_244D6412C((uint64_t)v2);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v17 = sub_244E4DCBC();
      v18 = sub_244E4E688();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        v20 = swift_slowAlloc();
        v23 = v20;
        *(_DWORD *)v19 = 136315138;
        v22[1] = v19 + 4;
        swift_bridgeObjectRetain();
        v22[2] = sub_244D9A70C(v8, v13, &v23);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244D61000, v17, v18, "os version: %s", v19, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v20, -1, -1);
        MEMORY[0x2495283BC](v19, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v15);
    }
  }
  return v8;
}

uint64_t sub_244D82384(uint64_t result)
{
  if (result != 1)
    return swift_retain();
  return result;
}

uint64_t storeEnumTagSinglePayload for SessionStore.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_244D823E0 + 4 * byte_244E51719[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_244D82414 + 4 * byte_244E51714[v4]))();
}

uint64_t sub_244D82414(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8241C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D82424);
  return result;
}

uint64_t sub_244D82430(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D82438);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_244D8243C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D82444(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionStore.CodingKeys()
{
  return &type metadata for SessionStore.CodingKeys;
}

unint64_t sub_244D82464()
{
  unint64_t result;

  result = qword_257415A58;
  if (!qword_257415A58)
  {
    result = MEMORY[0x2495282F0](&unk_244E518F0, &type metadata for SessionStore.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415A58);
  }
  return result;
}

unint64_t sub_244D824AC()
{
  unint64_t result;

  result = qword_257415A60;
  if (!qword_257415A60)
  {
    result = MEMORY[0x2495282F0](&unk_244E51828, &type metadata for SessionStore.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415A60);
  }
  return result;
}

unint64_t sub_244D824F4()
{
  unint64_t result;

  result = qword_257415A68;
  if (!qword_257415A68)
  {
    result = MEMORY[0x2495282F0](&unk_244E51850, &type metadata for SessionStore.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415A68);
  }
  return result;
}

uint64_t sub_244D82538()
{
  unint64_t v0;

  v0 = sub_244E4E9C4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

BOOL sub_244D82580(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_244D82598()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E6F73616572;
  else
    return 1701080931;
}

uint64_t sub_244D825C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D83A70(a1, a2);
  *a3 = result;
  return result;
}

void sub_244D825EC(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_244D825F8()
{
  sub_244D847AC();
  return sub_244E4EC04();
}

uint64_t sub_244D82620()
{
  sub_244D847AC();
  return sub_244E4EC10();
}

uint64_t sub_244D82648@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_244D83B48(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t type metadata accessor for APIServiceHelper()
{
  return objc_opt_self();
}

uint64_t sub_244D82694()
{
  sub_244E4E3F4();
  sub_244E4E934();
  sub_244E4E3F4();
  sub_244E4E934();
  sub_244E4E3F4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D8276C()
{
  sub_244E4E3F4();
  sub_244E4E934();
  sub_244E4E3F4();
  sub_244E4E934();
  sub_244E4E3F4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D8284C()
{
  sub_244E4E3F4();
  sub_244E4E934();
  sub_244E4E3F4();
  sub_244E4E934();
  sub_244E4E3F4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D82918()
{
  sub_244E4E3F4();
  sub_244E4E934();
  sub_244E4E3F4();
  sub_244E4E934();
  sub_244E4E3F4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D829E8(uint64_t a1, void (*a2)(_QWORD *, _QWORD *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD v23[2];
  _QWORD v24[2];

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v8)
      return swift_release();
    v21 = *(_QWORD *)(v4 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v8)
        return swift_release();
      v21 = *(_QWORD *)(v4 + 8 * v10);
      if (!v21)
      {
        v10 = v20 + 2;
        if (v20 + 2 >= v8)
          return swift_release();
        v21 = *(_QWORD *)(v4 + 8 * v10);
        if (!v21)
        {
          v10 = v20 + 3;
          if (v20 + 3 >= v8)
            return swift_release();
          v21 = *(_QWORD *)(v4 + 8 * v10);
          if (!v21)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v21 - 1) & v21;
    v12 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_5:
    v13 = 16 * v12;
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v13);
    v15 = *v14;
    v16 = v14[1];
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v13);
    v18 = *v17;
    v19 = v17[1];
    v24[0] = v15;
    v24[1] = v16;
    v23[0] = v18;
    v23[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v24, v23);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v22 = v20 + 4;
  if (v22 >= v8)
    return swift_release();
  v21 = *(_QWORD *)(v4 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v21 = *(_QWORD *)(v4 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_244D82B8C(uint64_t a1, void (*a2)(_QWORD *, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD v18[2];
  _BYTE v19[32];
  uint64_t v20;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    v15 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v15);
    ++v9;
    if (!v16)
    {
      v9 = v15 + 1;
      if (v15 + 1 >= v7)
        return swift_release();
      v16 = *(_QWORD *)(v20 + 8 * v9);
      if (!v16)
      {
        v9 = v15 + 2;
        if (v15 + 2 >= v7)
          return swift_release();
        v16 = *(_QWORD *)(v20 + 8 * v9);
        if (!v16)
        {
          v9 = v15 + 3;
          if (v15 + 3 >= v7)
            return swift_release();
          v16 = *(_QWORD *)(v20 + 8 * v9);
          if (!v16)
            break;
        }
      }
    }
LABEL_22:
    v6 = (v16 - 1) & v16;
    v11 = __clz(__rbit64(v16)) + (v9 << 6);
LABEL_5:
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v14 = *v12;
    v13 = v12[1];
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v11, (uint64_t)v19);
    v18[0] = v14;
    v18[1] = v13;
    swift_bridgeObjectRetain();
    a2(v18, v19);
    result = sub_244D66F54((uint64_t)v18, &qword_257415B10);
  }
  v17 = v15 + 4;
  if (v17 >= v7)
    return swift_release();
  v16 = *(_QWORD *)(v20 + 8 * v17);
  if (v16)
  {
    v9 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    v9 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v16 = *(_QWORD *)(v20 + 8 * v9);
    ++v17;
    if (v16)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_244D82D4C(uint64_t a1, void (*a2)(_QWORD *, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD v19[2];
  uint64_t v20;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v16 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v8)
      return swift_release();
    v17 = *(_QWORD *)(v4 + 8 * v16);
    ++v10;
    if (!v17)
    {
      v10 = v16 + 1;
      if (v16 + 1 >= v8)
        return swift_release();
      v17 = *(_QWORD *)(v4 + 8 * v10);
      if (!v17)
      {
        v10 = v16 + 2;
        if (v16 + 2 >= v8)
          return swift_release();
        v17 = *(_QWORD *)(v4 + 8 * v10);
        if (!v17)
        {
          v10 = v16 + 3;
          if (v16 + 3 >= v8)
            return swift_release();
          v17 = *(_QWORD *)(v4 + 8 * v10);
          if (!v17)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v10 << 6);
LABEL_5:
    v13 = (_QWORD *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = v13[1];
    v15 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    v19[0] = *v13;
    v19[1] = v14;
    v20 = v15;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    a2(v19, &v20);
    swift_unknownObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v18 = v16 + 4;
  if (v18 >= v8)
    return swift_release();
  v17 = *(_QWORD *)(v4 + 8 * v18);
  if (v17)
  {
    v10 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v17 = *(_QWORD *)(v4 + 8 * v10);
    ++v18;
    if (v17)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_244D82EF0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t result;
  void *v7;
  void *v8;
  id v9;
  id v10;
  unint64_t v11;
  id v12;
  void *v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char isUniquelyReferenced_nonNull_native;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  char v44;
  char v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  uint64_t *v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  _OWORD v64[2];
  __int128 v65;
  uint64_t ObjectType;
  uint64_t v67;

  v67 = *MEMORY[0x24BDAC8D0];
  if (a2 >> 60 == 15)
    return 0x3E7974706D653CLL;
  v7 = (void *)objc_opt_self();
  sub_244D73FC0(a1, a2);
  v8 = (void *)sub_244E4C30C();
  *(_QWORD *)&v65 = 0;
  v9 = objc_msgSend(v7, sel_JSONObjectWithData_options_error_, v8, 1, &v65);

  if (!v9)
  {
    v12 = (id)v65;
    v13 = (void *)sub_244E4C1E0();

    swift_willThrow();
    sub_244D65198(a1, a2);
    return 0x3E726F7272653CLL;
  }
  v10 = (id)v65;
  sub_244E4E82C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415B08);
  v11 = swift_dynamicCast();
  if ((_DWORD)v11)
  {
    v63 = *(_QWORD *)&v64[0];
    if ((a3 & 1) == 0)
      goto LABEL_6;
    goto LABEL_9;
  }
  v11 = sub_244DB253C(MEMORY[0x24BEE4AF8]);
  v63 = v11;
  if ((a3 & 1) != 0)
  {
LABEL_9:
    v59 = a1;
    v60 = a2;
    v14 = (_QWORD *)sub_244DB2520(MEMORY[0x24BEE4AF8]);
    v15 = 0;
    v61 = v63 + 64;
    v16 = 1 << *(_BYTE *)(v63 + 32);
    v17 = -1;
    if (v16 < 64)
      v17 = ~(-1 << v16);
    v18 = v17 & *(_QWORD *)(v63 + 64);
    v62 = (unint64_t)(v16 + 63) >> 6;
    v19 = MEMORY[0x24BEE0D00];
    while (1)
    {
      if (v18)
      {
        v21 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        v22 = v21 | (v15 << 6);
      }
      else
      {
        v23 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_54;
        if (v23 >= v62)
        {
LABEL_51:
          v58 = swift_release();
          *(_QWORD *)&v65 = 0;
          *((_QWORD *)&v65 + 1) = 0xE000000000000000;
          MEMORY[0x24BDAC7A8](v58);
          sub_244D82B8C((uint64_t)v14, (void (*)(_QWORD *, _BYTE *))sub_244D843B8);
          sub_244D65198(v59, v60);
          swift_bridgeObjectRelease();
          return v65;
        }
        v24 = *(_QWORD *)(v61 + 8 * v23);
        ++v15;
        if (!v24)
        {
          v15 = v23 + 1;
          if (v23 + 1 >= v62)
            goto LABEL_51;
          v24 = *(_QWORD *)(v61 + 8 * v15);
          if (!v24)
          {
            v15 = v23 + 2;
            if (v23 + 2 >= v62)
              goto LABEL_51;
            v24 = *(_QWORD *)(v61 + 8 * v15);
            if (!v24)
            {
              v25 = v23 + 3;
              if (v25 >= v62)
                goto LABEL_51;
              v24 = *(_QWORD *)(v61 + 8 * v25);
              if (!v24)
              {
                while (1)
                {
                  v15 = v25 + 1;
                  if (__OFADD__(v25, 1))
                    goto LABEL_58;
                  if (v15 >= v62)
                    goto LABEL_51;
                  v24 = *(_QWORD *)(v61 + 8 * v15);
                  ++v25;
                  if (v24)
                    goto LABEL_29;
                }
              }
              v15 = v25;
            }
          }
        }
LABEL_29:
        v18 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v15 << 6);
      }
      v26 = (uint64_t *)(*(_QWORD *)(v63 + 48) + 16 * v22);
      v28 = *v26;
      v27 = v26[1];
      v29 = *(_QWORD *)(*(_QWORD *)(v63 + 56) + 8 * v22);
      *(_QWORD *)&v65 = sub_244E4E37C();
      *((_QWORD *)&v65 + 1) = v30;
      *(_QWORD *)&v64[0] = 0x6E656B6F74;
      *((_QWORD *)&v64[0] + 1) = 0xE500000000000000;
      sub_244D70D08();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v31 = sub_244E4E820();
      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0 && (*(_QWORD *)&v64[0] = v29, swift_unknownObjectRetain(), (swift_dynamicCast() & 1) != 0))
      {
        v32 = sub_244E4DAB8();
        v34 = v33;
        swift_bridgeObjectRelease();
        ObjectType = v19;
        *(_QWORD *)&v65 = v32;
        *((_QWORD *)&v65 + 1) = v34;
        sub_244D6B058(&v65, v64);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v37 = sub_244DC859C(v28, v27);
        v38 = v14[2];
        v39 = (v36 & 1) == 0;
        v40 = v38 + v39;
        if (__OFADD__(v38, v39))
          goto LABEL_56;
        v41 = v36;
        if (v14[3] >= v40)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_244DE5580();
        }
        else
        {
          sub_244DE1858(v40, isUniquelyReferenced_nonNull_native);
          v42 = sub_244DC859C(v28, v27);
          if ((v41 & 1) != (v43 & 1))
            goto LABEL_59;
          v37 = v42;
        }
        v19 = MEMORY[0x24BEE0D00];
        if ((v41 & 1) != 0)
          goto LABEL_12;
        v14[(v37 >> 6) + 8] |= 1 << v37;
        v56 = (uint64_t *)(v14[6] + 16 * v37);
        *v56 = v28;
        v56[1] = v27;
        sub_244D6B058(v64, (_OWORD *)(v14[7] + 32 * v37));
        v57 = v14[2];
        v54 = __OFADD__(v57, 1);
        v55 = v57 + 1;
        if (v54)
          goto LABEL_57;
      }
      else
      {
        ObjectType = swift_getObjectType();
        *(_QWORD *)&v65 = v29;
        sub_244D6B058(&v65, v64);
        swift_unknownObjectRetain();
        v44 = swift_isUniquelyReferenced_nonNull_native();
        v37 = sub_244DC859C(v28, v27);
        v46 = v14[2];
        v47 = (v45 & 1) == 0;
        v48 = v46 + v47;
        if (__OFADD__(v46, v47))
        {
          __break(1u);
LABEL_54:
          __break(1u);
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
LABEL_57:
          __break(1u);
LABEL_58:
          __break(1u);
        }
        v49 = v45;
        if (v14[3] >= v48)
        {
          if ((v44 & 1) == 0)
            sub_244DE5580();
        }
        else
        {
          sub_244DE1858(v48, v44);
          v50 = sub_244DC859C(v28, v27);
          if ((v49 & 1) != (v51 & 1))
          {
LABEL_59:
            result = sub_244E4EAF0();
            __break(1u);
            return result;
          }
          v37 = v50;
        }
        v19 = MEMORY[0x24BEE0D00];
        if ((v49 & 1) != 0)
        {
LABEL_12:
          v20 = (_OWORD *)(v14[7] + 32 * v37);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
          sub_244D6B058(v64, v20);
          goto LABEL_13;
        }
        v14[(v37 >> 6) + 8] |= 1 << v37;
        v52 = (uint64_t *)(v14[6] + 16 * v37);
        *v52 = v28;
        v52[1] = v27;
        sub_244D6B058(v64, (_OWORD *)(v14[7] + 32 * v37));
        v53 = v14[2];
        v54 = __OFADD__(v53, 1);
        v55 = v53 + 1;
        if (v54)
          goto LABEL_55;
      }
      v14[2] = v55;
      swift_bridgeObjectRetain();
LABEL_13:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
LABEL_6:
  *(_QWORD *)&v65 = 0;
  *((_QWORD *)&v65 + 1) = 0xE000000000000000;
  MEMORY[0x24BDAC7A8](v11);
  sub_244D82D4C(v63, (void (*)(_QWORD *, uint64_t *))sub_244D843A0);
  swift_bridgeObjectRelease();
  sub_244D65198(a1, a2);
  return v65;
}

uint64_t sub_244D835D8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v23;
  int v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244E4C024();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244E4BFDC();
  v12 = 0xE000000000000000;
  if (v11)
  {
    v45 = 0;
    v46 = 0xE000000000000000;
    v13 = MEMORY[0x24BDAC7A8](v11);
    *(&v35 - 2) = (uint64_t)&v45;
    sub_244D829E8(v13, (void (*)(_QWORD *, _QWORD *))sub_244D843FC);
    swift_bridgeObjectRelease();
    v12 = v46;
    v42 = v45;
  }
  else
  {
    v42 = 0;
  }
  v14 = sub_244E4C00C();
  v16 = v15;
  v43 = sub_244D82EF0(v14, v15, 1);
  v18 = v17;
  sub_244D65198(v14, v16);
  if (qword_2574143E0 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v8, (uint64_t)qword_257419DA0);
  sub_244D640E4(v19, (uint64_t)v10);
  v20 = sub_244E4DCD4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v20) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_244D66F54((uint64_t)v10, &qword_2574145A0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_244E4DCBC();
    v24 = sub_244E4E670();
    if (os_log_type_enabled(v23, (os_log_type_t)v24))
    {
      v37 = v24;
      v38 = v23;
      v39 = v21;
      v40 = v5;
      v41 = v4;
      v25 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v45 = v36;
      *(_DWORD *)v25 = 136315650;
      v26 = v44;
      sub_244E4C000();
      v27 = (uint64_t)v26;
      v28 = sub_244E4C2AC();
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
      {
        sub_244D66F54(v27, &qword_257414B00);
        v30 = 0;
        v31 = 0xE000000000000000;
      }
      else
      {
        v35 = sub_244E4C21C();
        v31 = v32;
        (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
        v30 = v35;
      }
      v47 = sub_244D9A70C(v30, v31, &v45);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v47 = sub_244D9A70C(v42, v12, &v45);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 22) = 2080;
      swift_bridgeObjectRetain();
      v47 = sub_244D9A70C(v43, v18, &v45);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      v33 = v38;
      _os_log_impl(&dword_244D61000, v38, (os_log_type_t)v37, "----> %s\n%s\n%s", (uint8_t *)v25, 0x20u);
      v34 = v36;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v34, -1, -1);
      MEMORY[0x2495283BC](v25, -1, -1);

      v21 = v39;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v10, v20);
  }
}

uint64_t sub_244D83A70(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_244D83B48(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;
  char v10;
  char v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415B20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D847AC();
  sub_244E4EBE0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v11 = 0;
    v7 = sub_244E4E9F4();
    v10 = 1;
    swift_bridgeObjectRetain();
    sub_244E4E9F4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_244D83CF4(uint64_t a1, void (*a2)(_BYTE *, _BYTE *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  _BYTE v16[40];
  _BYTE v17[32];

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v13 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      v10 = v13 + 1;
      if (v13 + 1 >= v8)
        return swift_release();
      v14 = *(_QWORD *)(v4 + 8 * v10);
      if (!v14)
      {
        v10 = v13 + 2;
        if (v13 + 2 >= v8)
          return swift_release();
        v14 = *(_QWORD *)(v4 + 8 * v10);
        if (!v14)
        {
          v10 = v13 + 3;
          if (v13 + 3 >= v8)
            return swift_release();
          v14 = *(_QWORD *)(v4 + 8 * v10);
          if (!v14)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_5:
    sub_244D843C0(*(_QWORD *)(a1 + 48) + 40 * v12, (uint64_t)v16);
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v17);
    a2(v16, v17);
    result = sub_244D66F54((uint64_t)v16, &qword_257415B18);
  }
  v15 = v13 + 4;
  if (v15 >= v8)
    return swift_release();
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
    v10 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v14 = *(_QWORD *)(v4 + 8 * v10);
    ++v15;
    if (v14)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_244D83E9C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  id v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  unint64_t v37;
  os_log_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v47 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244E4C024();
  v48 = *(_QWORD *)(v10 - 8);
  v49 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(a4, sel_allHeaderFields);
  v17 = sub_244E4E2A4();

  v52 = 0;
  v53 = 0xE000000000000000;
  v50 = &v52;
  sub_244D83CF4(v17, (void (*)(_BYTE *, _BYTE *))sub_244D84398);
  swift_bridgeObjectRelease();
  v18 = v53;
  v46 = v52;
  v19 = sub_244D82EF0(a2, a3, 1);
  v21 = v20;
  if (qword_2574143E0 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v13, (uint64_t)qword_257419DA0);
  sub_244D640E4(v22, (uint64_t)v15);
  v23 = sub_244E4DCD4();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v15, 1, v23) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_244D66F54((uint64_t)v15, &qword_2574145A0);
  }
  else
  {
    v44 = v19;
    v45 = v23;
    v26 = v48;
    v27 = v49;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v12, v47, v49);
    v28 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = sub_244E4DCBC();
    LODWORD(v47) = sub_244E4E670();
    if (os_log_type_enabled(v29, (os_log_type_t)v47))
    {
      v41 = v29;
      v42 = v21;
      v43 = v24;
      v30 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v52 = v40;
      *(_DWORD *)v30 = 136315906;
      sub_244E4C000();
      v31 = sub_244E4C2AC();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v9, 1, v31) == 1)
      {
        sub_244D66F54((uint64_t)v9, &qword_257414B00);
        v33 = 0;
        v34 = 0xE000000000000000;
      }
      else
      {
        v33 = sub_244E4C21C();
        v34 = v35;
        (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v31);
      }
      v51 = sub_244D9A70C(v33, v34, &v52);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v49);
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      v51 = sub_244D9A70C(v46, v18, &v52);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 22) = 2048;
      v36 = objc_msgSend(v28, sel_statusCode);

      v51 = (uint64_t)v36;
      sub_244E4E7E4();

      *(_WORD *)(v30 + 32) = 2080;
      v37 = v42;
      swift_bridgeObjectRetain();
      v51 = sub_244D9A70C(v44, v37, &v52);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      v38 = v41;
      _os_log_impl(&dword_244D61000, v41, (os_log_type_t)v47, "<---- %s\"\n%s\n%ld {%s\n}", (uint8_t *)v30, 0x2Au);
      v39 = v40;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v39, -1, -1);
      MEMORY[0x2495283BC](v30, -1, -1);

      v24 = v43;
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v15, v45);
  }
}

uint64_t sub_244D84398()
{
  return sub_244D8284C();
}

uint64_t sub_244D843A0()
{
  return sub_244D82694();
}

uint64_t sub_244D843B8()
{
  return sub_244D82918();
}

uint64_t sub_244D843C0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_244D843FC()
{
  return sub_244D8276C();
}

uint64_t destroy for APIErrorResponse()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for APIErrorResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for APIErrorResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for APIErrorResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for APIErrorResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for APIErrorResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for APIErrorResponse()
{
  return &type metadata for APIErrorResponse;
}

uint64_t destroy for APIError()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for APIError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for APIError(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for APIError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for APIError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for APIError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for APIError()
{
  return &type metadata for APIError;
}

unint64_t sub_244D847AC()
{
  unint64_t result;

  result = qword_257415B28;
  if (!qword_257415B28)
  {
    result = MEMORY[0x2495282F0](&unk_244E51B7C, &type metadata for APIErrorResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415B28);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for APIErrorResponse.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for APIErrorResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244D848CC + 4 * byte_244E51985[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244D84900 + 4 * byte_244E51980[v4]))();
}

uint64_t sub_244D84900(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D84908(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D84910);
  return result;
}

uint64_t sub_244D8491C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D84924);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244D84928(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D84930(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_244D8493C(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for APIErrorResponse.CodingKeys()
{
  return &type metadata for APIErrorResponse.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TransactionData.CvmType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for APIErrorType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_244D84A34 + 4 * byte_244E5198F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_244D84A68 + 4 * byte_244E5198A[v4]))();
}

uint64_t sub_244D84A68(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D84A70(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D84A78);
  return result;
}

uint64_t sub_244D84A84(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D84A8CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_244D84A90(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D84A98(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for APIErrorType()
{
  return &type metadata for APIErrorType;
}

unint64_t sub_244D84AB8()
{
  unint64_t result;

  result = qword_257415B30;
  if (!qword_257415B30)
  {
    result = MEMORY[0x2495282F0](&unk_244E51A9C, &type metadata for APIErrorType);
    atomic_store(result, (unint64_t *)&qword_257415B30);
  }
  return result;
}

unint64_t sub_244D84B00()
{
  unint64_t result;

  result = qword_257415B38;
  if (!qword_257415B38)
  {
    result = MEMORY[0x2495282F0](&unk_244E51B54, &type metadata for APIErrorResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415B38);
  }
  return result;
}

unint64_t sub_244D84B48()
{
  unint64_t result;

  result = qword_257415B40;
  if (!qword_257415B40)
  {
    result = MEMORY[0x2495282F0](&unk_244E51AC4, &type metadata for APIErrorResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415B40);
  }
  return result;
}

unint64_t sub_244D84B90()
{
  unint64_t result;

  result = qword_257415B48;
  if (!qword_257415B48)
  {
    result = MEMORY[0x2495282F0](&unk_244E51AEC, &type metadata for APIErrorResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415B48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CancelationTrigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_244D84C20 + 4 * byte_244E51BD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_244D84C54 + 4 * byte_244E51BD0[v4]))();
}

uint64_t sub_244D84C54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D84C5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D84C64);
  return result;
}

uint64_t sub_244D84C70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D84C78);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_244D84C7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D84C84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CancelationTrigger()
{
  return &type metadata for CancelationTrigger;
}

unint64_t sub_244D84CA4()
{
  unint64_t result;

  result = qword_257415B50;
  if (!qword_257415B50)
  {
    result = MEMORY[0x2495282F0](&unk_244E51C34, &type metadata for CancelationTrigger);
    atomic_store(result, (unint64_t *)&qword_257415B50);
  }
  return result;
}

uint64_t sub_244D84CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(void);
  char v12;
  id v13;
  void *v14;
  unsigned int v15;
  void (*v17)(char *, uint64_t, uint64_t);
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[2];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v30 = a2;
  v32 = a1;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415C28);
  v2 = *(_QWORD *)(v33 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](v33);
  v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_244E4C024();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v29 - v9;
  v11 = (uint64_t (*)(void))sub_244E4D86C();
  v12 = v11();
  swift_release();
  if ((v12 & 1) != 0
    && (v13 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v14 = (void *)sub_244E4E2F8(),
        v15 = objc_msgSend(v13, sel_BOOLForKey_, v14),
        v13,
        v14,
        v15))
  {
    v34 = 0xD000000000000011;
    v35 = 0x8000000244E579D0;
    v37 = 0;
    v38 = 0;
    v36 = 1;
    v39 = 0;
    return sub_244E4E52C();
  }
  else
  {
    if (qword_257414450 != -1)
      swift_once();
    v29[1] = qword_257419EE0;
    v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v17(v10, v30, v5);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    v19 = v32;
    v32 = v5;
    v20 = v33;
    v18(v4, v19, v33);
    v21 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v22 + v21, v4, v20);
    v23 = swift_allocObject();
    swift_weakInit();
    v25 = v31;
    v24 = v32;
    v17(v31, (uint64_t)v10, v32);
    v26 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v27 = v26 + v7;
    v28 = (char *)swift_allocObject();
    *((_QWORD *)v28 + 2) = sub_244D897DC;
    *((_QWORD *)v28 + 3) = v22;
    *((_QWORD *)v28 + 4) = v23;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v28[v26], v25, v24);
    v28[v27] = 0;
    swift_retain();
    sub_244D87388((uint64_t)v10, 0, 0, (uint64_t)sub_244D89820, (uint64_t)v28);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v24);
  }
}

uint64_t sub_244D84FF8(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415C28);
  return sub_244E4E52C();
}

uint64_t sub_244D85084(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  char v13;
  id v14;
  void *v15;
  unsigned int v16;
  __int128 v17;
  id v18;
  void *v19;
  unsigned int v20;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v37 = a3;
  v40 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415C00);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v39 = sub_244E4C024();
  v7 = *(_QWORD *)(v39 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x24BDAC7A8](v39);
  v38 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v37 - v10;
  v12 = (uint64_t (*)(_QWORD))sub_244E4D86C();
  v13 = v12(v12);
  swift_release();
  if ((a2 & 1) != 0)
  {
    if ((v13 & 1) != 0)
    {
      v14 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults, v37);
      v15 = (void *)sub_244E4E2F8();
      v16 = objc_msgSend(v14, sel_BOOLForKey_, v15);

      if (v16)
      {
        v17 = xmmword_244E51C70;
LABEL_8:
        v41 = v17;
        v43 = 0;
        v44 = 0;
        v42 = 0;
        v45 = 0;
        return sub_244E4E52C();
      }
    }
    if (qword_257414450 != -1)
      swift_once();
    sub_244E4BFE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v4);
    v22 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v23 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    v24 = swift_allocObject();
    swift_weakInit();
    v26 = v38;
    v25 = v39;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v38, v11, v39);
    v27 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v28 = v27 + v8;
    v29 = (char *)swift_allocObject();
    *((_QWORD *)v29 + 2) = sub_244D895CC;
    *((_QWORD *)v29 + 3) = v23;
    *((_QWORD *)v29 + 4) = v24;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v29[v27], v26, v25);
    v29[v28] = 1;
    swift_retain();
    sub_244D87418((uint64_t)v11, 1, 0, (uint64_t)sub_244D89A80, (uint64_t)v29);
  }
  else
  {
    if ((v13 & 1) != 0)
    {
      v18 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults, v37);
      v19 = (void *)sub_244E4E2F8();
      v20 = objc_msgSend(v18, sel_BOOLForKey_, v19);

      if (v20)
      {
        v17 = xmmword_244E51C60;
        goto LABEL_8;
      }
    }
    if (qword_257414450 != -1)
      swift_once();
    sub_244E4BFE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v40, v4);
    v30 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v31 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v31 + v30, (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    v32 = swift_allocObject();
    swift_weakInit();
    v33 = v38;
    v25 = v39;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v38, v11, v39);
    v34 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v35 = v34 + v8;
    v36 = (char *)swift_allocObject();
    *((_QWORD *)v36 + 2) = sub_244D895CC;
    *((_QWORD *)v36 + 3) = v31;
    *((_QWORD *)v36 + 4) = v32;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v36[v34], v33, v25);
    v36[v35] = 1;
    swift_retain();
    sub_244D873D0((uint64_t)v11, 1, 0, (uint64_t)sub_244D89980, (uint64_t)v36);
  }
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v11, v25);
}

uint64_t sub_244D85534(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t (*v10)(_QWORD);
  char v11;
  id v12;
  void *v13;
  unsigned int v14;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v24 = a2;
  v27 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415C00);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v26 = sub_244E4C024();
  v5 = *(_QWORD *)(v26 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](v26);
  v25 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - v8;
  v10 = (uint64_t (*)(_QWORD))sub_244E4D86C();
  v11 = v10(v10);
  swift_release();
  if ((v11 & 1) != 0
    && (v12 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults, v24),
        v13 = (void *)sub_244E4E2F8(),
        v14 = objc_msgSend(v12, sel_BOOLForKey_, v13),
        v12,
        v13,
        v14))
  {
    v28 = 0xD000000000000019;
    v29 = 0x8000000244E57890;
    v31 = 0;
    v32 = 0;
    v30 = 0;
    v33 = 0;
    return sub_244E4E52C();
  }
  else
  {
    if (qword_257414450 != -1)
      swift_once();
    sub_244E4BFE8();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v27, v2);
    v16 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v17 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v17 + v16, (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
    v18 = swift_allocObject();
    swift_weakInit();
    v20 = v25;
    v19 = v26;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v25, v9, v26);
    v21 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v22 = v21 + v6;
    v23 = (char *)swift_allocObject();
    *((_QWORD *)v23 + 2) = sub_244D895CC;
    *((_QWORD *)v23 + 3) = v17;
    *((_QWORD *)v23 + 4) = v18;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v23[v21], v20, v19);
    v23[v22] = 1;
    swift_retain();
    sub_244D87460((uint64_t)v9, 1, 0, (uint64_t)sub_244D895F8, (uint64_t)v23);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v9, v19);
  }
}

uint64_t sub_244D85830(uint64_t a1)
{
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415C00);
  return sub_244E4E52C();
}

uint64_t type metadata accessor for MerchantService()
{
  return objc_opt_self();
}

uint64_t sub_244D858E0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415C78);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D8A990();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D85A1C(_QWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  int v12;
  char v13;
  char v14;

  v12 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415CC8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D8A94C();
  sub_244E4EBEC();
  v14 = 0;
  sub_244E4EA60();
  if (!v4)
  {
    v13 = 1;
    sub_244E4EA48();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_244D85B40(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D85B7C + 4 * byte_244E51D00[a1]))(0x5472656E74726170, 0xEC0000006E656B6FLL);
}

unint64_t sub_244D85B7C()
{
  return 0xD000000000000011;
}

uint64_t sub_244D85B98()
{
  return 0x6C646E7542707061;
}

uint64_t sub_244D85BB8()
{
  return 0x6564496E656B6F74;
}

uint64_t sub_244D85BDC()
{
  return 0x6F4C656369766564;
}

uint64_t sub_244D85BFC()
{
  return 0x6973726556736F74;
}

uint64_t sub_244D85C18()
{
  return 0x6F6973726556736FLL;
}

uint64_t sub_244D85C34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415CA8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D8AA5C();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA60();
    v8[10] = 5;
    sub_244E4EA60();
    v8[9] = 6;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D85E10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D85E4C + 4 * byte_244E51D07[a1]))(0x5472656E74726170, 0xEC0000006E656B6FLL);
}

unint64_t sub_244D85E4C()
{
  return 0xD000000000000011;
}

uint64_t sub_244D85E68()
{
  return 0x6C646E7542707061;
}

uint64_t sub_244D85E88()
{
  return 0x6564496E656B6F74;
}

uint64_t sub_244D85EAC()
{
  return 0x6F4C656369766564;
}

unint64_t sub_244D85ECC()
{
  return 0xD000000000000012;
}

uint64_t sub_244D85EEC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415C58);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D8A4E8();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA60();
    v8[10] = 5;
    sub_244E4EA6C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D860A8()
{
  _BYTE *v0;
  unint64_t v1;

  v1 = 0x6C646E7542707061;
  if (*v0 != 1)
    v1 = 0xD000000000000011;
  if (*v0)
    return v1;
  else
    return 0x5472656E74726170;
}

uint64_t sub_244D86118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D8A52C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D8613C()
{
  sub_244D8A990();
  return sub_244E4EC04();
}

uint64_t sub_244D86164()
{
  sub_244D8A990();
  return sub_244E4EC10();
}

uint64_t sub_244D8618C(_QWORD *a1)
{
  return sub_244D858E0(a1);
}

uint64_t sub_244D861A0()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C416B6E696C6572;
  else
    return 0xD00000000000001ALL;
}

uint64_t sub_244D861EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D8A6AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D86210()
{
  sub_244D8A94C();
  return sub_244E4EC04();
}

uint64_t sub_244D86238()
{
  sub_244D8A94C();
  return sub_244E4EC10();
}

uint64_t sub_244D86260@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;

  result = sub_244D8A7BC(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_QWORD *)(a2 + 8) = v5;
    *(_BYTE *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_244D8628C(_QWORD *a1)
{
  uint64_t v1;

  return sub_244D85A1C(a1, *(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

uint64_t sub_244D862A8()
{
  unsigned __int8 *v0;

  return sub_244D85B40(*v0);
}

uint64_t sub_244D862B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D8B50C(a1, a2);
  *a3 = result;
  return result;
}

void sub_244D862D4(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_244D862E0()
{
  sub_244D8AA5C();
  return sub_244E4EC04();
}

uint64_t sub_244D86308()
{
  sub_244D8AA5C();
  return sub_244E4EC10();
}

uint64_t sub_244D86330(_QWORD *a1)
{
  return sub_244D85C34(a1);
}

unint64_t sub_244D8634C()
{
  return 0xD000000000000012;
}

uint64_t sub_244D86368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D8B86C(a1, a2);
  *a3 = result & 1;
  return result;
}

void sub_244D86390(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_244D8639C()
{
  sub_244D8AA18();
  return sub_244E4EC04();
}

uint64_t sub_244D863C4()
{
  sub_244D8AA18();
  return sub_244E4EC10();
}

uint64_t sub_244D863EC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_244D86714(a1, &qword_257415C98, (void (*)(void))sub_244D8AA18, a2);
}

uint64_t sub_244D86418(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_244D86870(a1, a2, a3, &qword_257415CB8, (void (*)(void))sub_244D8AA18);
}

uint64_t sub_244D86444()
{
  return 0x7453657461647075;
}

uint64_t sub_244D86464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x7453657461647075 && a2 == 0xEC00000073757461)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_244E4EAC0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_244D86510()
{
  sub_244D8A9D4();
  return sub_244E4EC04();
}

uint64_t sub_244D86538()
{
  sub_244D8A9D4();
  return sub_244E4EC10();
}

uint64_t sub_244D86560@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_244D86714(a1, &qword_257415C88, (void (*)(void))sub_244D8A9D4, a2);
}

uint64_t sub_244D8658C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_244D86870(a1, a2, a3, &qword_257415CC0, (void (*)(void))sub_244D8A9D4);
}

uint64_t sub_244D865B8()
{
  unsigned __int8 *v0;

  return sub_244D85E10(*v0);
}

uint64_t sub_244D865C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D8B8F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_244D865E4(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_244D865F0()
{
  sub_244D8A4E8();
  return sub_244E4EC04();
}

uint64_t sub_244D86618()
{
  sub_244D8A4E8();
  return sub_244E4EC10();
}

uint64_t sub_244D86640(_QWORD *a1)
{
  return sub_244D85EEC(a1);
}

unint64_t sub_244D86654()
{
  return 0xD000000000000018;
}

uint64_t sub_244D86670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D8BBD0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_244D86698()
{
  sub_244D8A4A4();
  return sub_244E4EC04();
}

uint64_t sub_244D866C0()
{
  sub_244D8A4A4();
  return sub_244E4EC10();
}

uint64_t sub_244D866E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_244D86714(a1, &qword_257415C48, (void (*)(void))sub_244D8A4A4, a2);
}

uint64_t sub_244D86714@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;

  v17 = a4;
  v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_244E4EBE0();
  if (v4)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v10 = v17;
  v11 = v18;
  v12 = sub_244E4E9F4();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v11);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v12;
  v10[1] = v14;
  return result;
}

uint64_t sub_244D86844(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_244D86870(a1, a2, a3, &qword_257415CD0, (void (*)(void))sub_244D8A4A4);
}

uint64_t sub_244D86870(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t *v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  void (*v13)(void);

  v13 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13();
  sub_244E4EBEC();
  sub_244E4EA60();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_244D86968(uint64_t a1, uint64_t (*a2)(_BYTE *), uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v10;
  uint64_t result;
  _BYTE v13[56];
  _BYTE v14[8];
  _BYTE v15[64];

  sub_244D70C60(a1, (uint64_t)v14, &qword_257414B08);
  v10 = v14[0];
  sub_244D70C60(a1, (uint64_t)v13, &qword_257414B08);
  sub_244D70C60(a1, (uint64_t)v15, &qword_257414B08);
  if ((v15[48] & 1) != 0)
  {
    if (v10 == 2)
    {
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (result)
      {
        sub_244D86BB8(a5, a6 & 1, 0, (uint64_t)a2, a3);
        return swift_release();
      }
    }
    else
    {
      return a2(v13);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v13);
    return sub_244D89744(a1);
  }
  return result;
}

uint64_t sub_244D86AA0(uint64_t a1, uint64_t (*a2)(_BYTE *), uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t *a7, void (*a8)(uint64_t, _QWORD, _QWORD, uint64_t (*)(_QWORD), uint64_t))
{
  uint64_t v15;
  uint64_t result;
  _BYTE v17[48];
  _BYTE v18[8];
  _BYTE v19[56];

  sub_244D70C60(a1, (uint64_t)v18, a7);
  v15 = v18[0];
  sub_244D70C60(a1, (uint64_t)v17, a7);
  sub_244D70C60(a1, (uint64_t)v19, a7);
  if ((v19[40] & 1) != 0)
  {
    if (v15 == 2)
    {
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (result)
      {
        a8(a5, a6 & 1, 0, (uint64_t (*)(_QWORD))a2, a3);
        return swift_release();
      }
    }
    else
    {
      return a2(v17);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    a2(v17);
    return sub_244D898EC(a1);
  }
  return result;
}

uint64_t sub_244D86BB8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  id v21;
  void *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  _QWORD v29[3];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  _QWORD aBlock[6];

  v6 = v5;
  v34 = a5;
  v33 = a4;
  v32 = a3;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v9 = MEMORY[0x24BDAC7A8](v30);
  v29[1] = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)v29 - v11;
  v12 = sub_244E4C024();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v29 - v17;
  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEAE6B0]), sel_init);
  v35 = v19;
  v36 = a1;
  sub_244D87CB0((void (*)(uint64_t))sub_244D8BC80);
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 24;
  v21 = *(id *)(v6 + v20);
  sub_244D835D8((uint64_t)v18);
  v22 = (void *)sub_244E4BFD0();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  v23 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v24 = swift_allocObject();
  v25 = v34;
  *(_QWORD *)(v24 + 16) = v33;
  *(_QWORD *)(v24 + 24) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v24 + v23, v16, v12);
  aBlock[4] = sub_244D89650;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244D88614;
  aBlock[3] = &block_descriptor_17;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v27 = objc_msgSend(v21, sel_dataTaskWithRequest_completionHandler_, v22, v26);
  _Block_release(v26);

  objc_msgSend(v27, sel_resume);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

uint64_t sub_244D87388(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_244D874A8(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_244D8BC80, (uint64_t)&unk_2515DC228, (uint64_t)sub_244D898E0, block_descriptor_32);
}

uint64_t sub_244D873D0(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_244D874A8(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_244D8BC80, (uint64_t)&unk_2515DC368, (uint64_t)sub_244D89B90, block_descriptor_61);
}

uint64_t sub_244D87418(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_244D874A8(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_244D8BC80, (uint64_t)&unk_2515DC318, (uint64_t)sub_244D89A98, block_descriptor_54);
}

uint64_t sub_244D87460(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  return sub_244D874A8(a1, a2, a3, a4, a5, (void (*)(uint64_t))sub_244D8960C, (uint64_t)&unk_2515DC138, (uint64_t)sub_244D89628, block_descriptor_0);
}

uint64_t sub_244D874A8(uint64_t a1, char a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t a8, char *a9)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  id v24;
  uint64_t v25;
  void *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  id v31;
  id v32;
  char *v34;
  uint64_t v35;
  char *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  _QWORD aBlock[6];

  v39 = a8;
  v38 = a7;
  v11 = v9;
  v40 = a4;
  v41 = a5;
  v37 = a3;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v14 = MEMORY[0x24BDAC7A8](v35);
  v34 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v36 = (char *)&v34 - v16;
  v17 = sub_244E4C024();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(_QWORD *)(v18 + 64);
  v20 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v34 - v22;
  v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEAE6B0]), sel_init);
  v42 = v24;
  v43 = a1;
  sub_244D87CB0(a6);
  v36 = a9;
  v25 = 16;
  if ((a2 & 1) != 0)
    v25 = 24;
  v37 = *(id *)(v11 + v25);
  sub_244D835D8((uint64_t)v23);
  v26 = (void *)sub_244E4BFD0();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a1, v17);
  v27 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  v28 = swift_allocObject();
  v29 = v41;
  *(_QWORD *)(v28 + 16) = v40;
  *(_QWORD *)(v28 + 24) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v28 + v27, v21, v17);
  aBlock[4] = v39;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244D88614;
  aBlock[3] = v36;
  v30 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v31 = v37;
  v32 = objc_msgSend(v37, sel_dataTaskWithRequest_completionHandler_, v26, v30);
  _Block_release(v30);

  objc_msgSend(v32, sel_resume);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, v17);
}

void sub_244D87CB0(void (*a1)(uint64_t))
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD v16[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1(v4);
  if (v1)
  {
    _s3__C4CodeOMa_1(0);
    v16[1] = 14001;
    v7 = v1;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    v8 = sub_244E4C12C();

    if ((v8 & 1) != 0)
    {

      if (qword_257414400 != -1)
        swift_once();
      v9 = __swift_project_value_buffer(v3, (uint64_t)qword_257419E00);
      sub_244D640E4(v9, (uint64_t)v6);
      v10 = sub_244E4DCD4();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      {
        v12 = sub_244D66F54((uint64_t)v6, &qword_2574145A0);
      }
      else
      {
        v13 = sub_244E4DCBC();
        v14 = sub_244E4E67C();
        if (os_log_type_enabled(v13, v14))
        {
          v15 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v15 = 0;
          _os_log_impl(&dword_244D61000, v13, v14, "SPR XPC service disconnected, let's try one more time", v15, 2u);
          MEMORY[0x2495283BC](v15, -1, -1);
        }

        v12 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v6, v10);
      }
      a1(v12);
    }
  }
}

uint64_t *sub_244D87ED0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(__int128 *), uint64_t a6, uint64_t a7)
{
  const char *v8;
  uint64_t v13;
  void *v16;
  id v17;
  unint64_t v18;
  const char *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  __int128 v30;
  __int128 v31;
  unint64_t v32;
  uint64_t v33;
  char v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40[8];
  uint64_t v41;

  if (a4)
  {
    v30 = xmmword_244E51CC0;
    v31 = xmmword_244E51CD0;
    v8 = "Server not reachable";
  }
  else
  {
    if (a3)
    {
      objc_opt_self();
      v13 = swift_dynamicCastObjCClass();
      if (v13 && a2 >> 60 != 15)
      {
        v16 = (void *)v13;
        v17 = a3;
        sub_244D73FAC(a1, a2);
        sub_244D83E9C(a7, a1, a2, v16);
        v18 = (unint64_t)objc_msgSend(v16, sel_statusCode);
        if (v18 - 300 >= 0xFFFFFFFFFFFFFF9CLL)
        {
          v29 = v17;
          sub_244DC4128(&v35);
          v20 = v35;
          v22 = v36;
          v21 = v37;
          v23 = v38;
          v24 = v39;
          sub_244D70C60((uint64_t)&v35, (uint64_t)v40, &qword_257415C10);
          if (v41)
          {
            v30 = v20;
            *(_QWORD *)&v31 = v22;
            *((_QWORD *)&v31 + 1) = v21;
            v32 = v23;
            v33 = v24;
            v34 = 0;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            a5(&v30);

            sub_244D65198(a1, a2);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return sub_244D896D4((uint64_t *)&v35);
          }
          v30 = xmmword_244E51CE0;
          v31 = xmmword_244E51CF0;
          v32 = 0x8000000244E57950;
          v33 = 0;
          v34 = 1;
          a5(&v30);

        }
        else
        {
          if ((v18 | 2) == 0x193)
          {
            v30 = xmmword_244E51CA0;
            v31 = xmmword_244E51CB0;
            v19 = "Authentication error";
          }
          else
          {
            v25 = sub_244DC44BC();
            if (v26)
            {
              *(_QWORD *)&v30 = 4;
              *((_QWORD *)&v30 + 1) = v25;
              *(_QWORD *)&v31 = v26;
              *((_QWORD *)&v31 + 1) = v27;
              v32 = v28;
              v33 = 0;
              v34 = 1;
              a5(&v30);

              sub_244D65198(a1, a2);
              swift_bridgeObjectRelease();
              return (uint64_t *)swift_bridgeObjectRelease();
            }
            v30 = xmmword_244E51CE0;
            v31 = xmmword_244E51CF0;
            v19 = "Protocol build or parse error";
          }
          v32 = (unint64_t)(v19 - 32) | 0x8000000000000000;
          v33 = 0;
          v34 = 1;
          a5(&v30);

        }
        return (uint64_t *)sub_244D65198(a1, a2);
      }
    }
    v30 = xmmword_244E51C80;
    v31 = xmmword_244E51C90;
    v8 = "Channel failure, nil api service";
  }
  v32 = (unint64_t)(v8 - 32) | 0x8000000000000000;
  v33 = 0;
  v34 = 1;
  return (uint64_t *)((uint64_t (*)(__int128 *))a5)(&v30);
}

uint64_t sub_244D881B4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(__int128 *), uint64_t a6, uint64_t a7)
{
  __int128 v8;
  __int128 v9;
  const char *v10;
  uint64_t v15;
  BOOL v16;
  void *v18;
  id v19;
  unint64_t v20;
  __int128 v21;
  __int128 v22;
  const char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  unint64_t v33;
  char v34;

  if (!a4)
  {
    if (!a3 || ((objc_opt_self(), (v15 = swift_dynamicCastObjCClass()) != 0) ? (v16 = a2 >> 60 == 15) : (v16 = 1), v16))
    {
      v8 = xmmword_244E51C80;
      v9 = xmmword_244E51C90;
      v10 = "Channel failure, nil api service";
      goto LABEL_10;
    }
    v18 = (void *)v15;
    v19 = a3;
    sub_244D73FAC(a1, a2);
    sub_244D83E9C(a7, a1, a2, v18);
    v20 = (unint64_t)objc_msgSend(v18, sel_statusCode);
    if (v20 - 300 >= 0xFFFFFFFFFFFFFF9CLL)
    {
      v24 = sub_244DC5AD4();
      if (v25)
      {
        *(_QWORD *)&v31 = v24;
        *((_QWORD *)&v31 + 1) = v25;
        v33 = 0;
        v32 = v26;
        v34 = 0;
        a5(&v31);

        sub_244D65198(a1, a2);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      if ((v20 | 2) == 0x193)
      {
        v21 = xmmword_244E51CA0;
        v22 = xmmword_244E51CB0;
        v23 = "Authentication error";
LABEL_21:
        v31 = v21;
        v32 = v22;
        v33 = (unint64_t)(v23 - 32) | 0x8000000000000000;
        v34 = 1;
        a5(&v31);

        return sub_244D65198(a1, a2);
      }
      v27 = sub_244DC44BC();
      if (v28)
      {
        *(_QWORD *)&v31 = 4;
        *((_QWORD *)&v31 + 1) = v27;
        *(_QWORD *)&v32 = v28;
        *((_QWORD *)&v32 + 1) = v29;
        v33 = v30;
        v34 = 1;
        a5(&v31);

        sub_244D65198(a1, a2);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    v21 = xmmword_244E51CE0;
    v22 = xmmword_244E51CF0;
    v23 = "Protocol build or parse error";
    goto LABEL_21;
  }
  v8 = xmmword_244E51CC0;
  v9 = xmmword_244E51CD0;
  v10 = "Server not reachable";
LABEL_10:
  v31 = v8;
  v32 = v9;
  v33 = (unint64_t)(v10 - 32) | 0x8000000000000000;
  v34 = 1;
  return ((uint64_t (*)(__int128 *))a5)(&v31);
}

uint64_t sub_244D883E4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(__int128 *), uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, unint64_t))
{
  __int128 v9;
  __int128 v10;
  const char *v11;
  uint64_t v17;
  BOOL v18;
  void *v20;
  id v21;
  unint64_t v22;
  __int128 v23;
  __int128 v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  unint64_t v34;
  char v35;

  if (!a4)
  {
    if (!a3 || ((objc_opt_self(), (v17 = swift_dynamicCastObjCClass()) != 0) ? (v18 = a2 >> 60 == 15) : (v18 = 1), v18))
    {
      v9 = xmmword_244E51C80;
      v10 = xmmword_244E51C90;
      v11 = "Channel failure, nil api service";
      goto LABEL_10;
    }
    v20 = (void *)v17;
    v21 = a3;
    sub_244D73FAC(a1, a2);
    sub_244D83E9C(a7, a1, a2, v20);
    v22 = (unint64_t)objc_msgSend(v20, sel_statusCode);
    if (v22 - 300 >= 0xFFFFFFFFFFFFFF9CLL)
    {
      v26 = a8(a1, a2);
      if (v27)
      {
        *(_QWORD *)&v32 = v26;
        *((_QWORD *)&v32 + 1) = v27;
        v34 = 0;
        v33 = 0uLL;
        v35 = 0;
        a5(&v32);

        sub_244D65198(a1, a2);
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      if ((v22 | 2) == 0x193)
      {
        v23 = xmmword_244E51CA0;
        v24 = xmmword_244E51CB0;
        v25 = "Authentication error";
LABEL_21:
        v32 = v23;
        v33 = v24;
        v34 = (unint64_t)(v25 - 32) | 0x8000000000000000;
        v35 = 1;
        a5(&v32);

        return sub_244D65198(a1, a2);
      }
      v28 = sub_244DC44BC();
      if (v29)
      {
        *(_QWORD *)&v32 = 4;
        *((_QWORD *)&v32 + 1) = v28;
        *(_QWORD *)&v33 = v29;
        *((_QWORD *)&v33 + 1) = v30;
        v34 = v31;
        v35 = 1;
        a5(&v32);

        sub_244D65198(a1, a2);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
    v23 = xmmword_244E51CE0;
    v24 = xmmword_244E51CF0;
    v25 = "Protocol build or parse error";
    goto LABEL_21;
  }
  v9 = xmmword_244E51CC0;
  v10 = xmmword_244E51CD0;
  v11 = "Server not reachable";
LABEL_10:
  v32 = v9;
  v33 = v10;
  v34 = (unint64_t)(v11 - 32) | 0x8000000000000000;
  v35 = 1;
  return ((uint64_t (*)(__int128 *))a5)(&v32);
}

uint64_t sub_244D88614(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_244E4C324();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_244D65198((uint64_t)v6, v10);
  return swift_release();
}

uint64_t sub_244D886C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[16] = a3;
  v4[17] = a4;
  v4[14] = a1;
  v4[15] = a2;
  v5 = sub_244E4C024();
  v4[18] = v5;
  v4[19] = *(_QWORD *)(v5 - 8);
  v4[20] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  v4[21] = swift_task_alloc();
  v6 = sub_244E4C2AC();
  v4[22] = v6;
  v4[23] = *(_QWORD *)(v6 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D88784()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0[24];
  v2 = v0[25];
  v3 = v0[21];
  v14 = v0[23];
  v15 = v0[22];
  v4 = v0[20];
  v5 = v0[17];
  v16 = v0[16];
  v6 = v0[15];
  sub_244E4E88C();
  swift_bridgeObjectRelease();
  sub_244E4D1B8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244D80008(*(_BYTE *)(v6 + 96));
  sub_244E4C294();
  swift_bridgeObjectRelease();
  sub_244E4C228();
  swift_bridgeObjectRelease();
  sub_244D66F54(v3, &qword_257414B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v1, v2, v15);
  sub_244E4D1A0();
  sub_244E4BFF4();
  sub_244E4BFC4();
  v7 = *(_QWORD *)(v6 + 32);
  v8 = *(_QWORD *)(v6 + 40);
  v9 = *(_QWORD *)(v6 + 64);
  v10 = *(_QWORD *)(v6 + 72);
  v0[2] = v16;
  v0[3] = v5;
  v0[4] = v7;
  v0[5] = v8;
  v0[6] = v9;
  v0[7] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_244E10DD8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244E4C018();
  v11 = swift_task_alloc();
  v0[26] = v11;
  *(_QWORD *)(v11 + 16) = v4;
  v12 = (_QWORD *)swift_task_alloc();
  v0[27] = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415C20);
  *v12 = v0;
  v12[1] = sub_244D889CC;
  return sub_244E4EAB4();
}

uint64_t sub_244D889CC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244D88A28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 160);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 152);
  v4 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 184) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 176));
  v8 = *(_OWORD *)(v0 + 80);
  v9 = *(_OWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 96);
  v6 = *(_BYTE *)(v0 + 104);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)v4 = v9;
  *(_OWORD *)(v4 + 16) = v8;
  *(_QWORD *)(v4 + 32) = v5;
  *(_BYTE *)(v4 + 40) = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_244D88AE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;

  v8 = objc_allocWithZone(MEMORY[0x24BDD16B0]);
  v9 = (void *)sub_244E4C258();
  v10 = objc_msgSend(v8, sel_initWithURL_, v9);

  v11 = (void *)sub_244E4E2F8();
  objc_msgSend(v10, sel_setHTTPMethod_, v11);

  v12 = (void *)sub_244E4E2F8();
  v13 = (void *)sub_244E4E2F8();
  objc_msgSend(v10, sel_addValue_forHTTPHeaderField_, v12, v13);

  sub_244E4C780();
  v14 = (void *)sub_244E4E2F8();
  swift_bridgeObjectRelease();
  sub_244E4C774();
  v15 = (void *)sub_244E4E2F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_ak_addAuthorizationHeaderWithServiceToken_forAltDSID_, v14, v15);

  objc_msgSend(v10, sel_ak_addClientInfoHeader);
  objc_msgSend(v10, sel_ak_addDeviceUDIDHeader);
  objc_msgSend(v10, sel_ak_addDeviceSerialNumberHeader);
  objc_msgSend(v10, sel_ak_addInternalBuildHeader);
  objc_msgSend(v10, sel_ak_addFeatureMaskHeader);
  objc_msgSend(v10, sel_ak_addLocaleHeader);
  objc_msgSend(v10, sel_ak_addTimeZoneHeaders);
  objc_msgSend(v10, sel_ak_addDeviceMLBHeader);
  objc_msgSend(v10, sel_ak_addDeviceROMHeader);
  if (a6 >> 60 != 15)
  {
    sub_244D73FC0(a5, a6);
    v16 = (void *)sub_244E4C30C();
    objc_msgSend(v10, sel_setHTTPBody_, v16);

    sub_244D65198(a5, a6);
  }
  return v10;
}

uint64_t sub_244D88D28(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 + 169) = a4;
  *(_QWORD *)(v4 + 184) = a2;
  *(_QWORD *)(v4 + 192) = a3;
  *(_QWORD *)(v4 + 176) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  *(_QWORD *)(v4 + 200) = swift_task_alloc();
  v5 = sub_244E4C2AC();
  *(_QWORD *)(v4 + 208) = v5;
  *(_QWORD *)(v4 + 216) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v4 + 224) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D88DB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;

  v30 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v31 = *(unsigned __int8 *)(v0 + 169);
  v3 = *(_QWORD *)(v0 + 184);
  sub_244E4E88C();
  swift_bridgeObjectRelease();
  sub_244E4D1B8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244D80008(*(_BYTE *)(v3 + 96));
  sub_244E4C294();
  swift_bridgeObjectRelease();
  sub_244E4C228();
  swift_bridgeObjectRelease();
  sub_244D66F54(v1, &qword_257414B00);
  sub_244E4DCB0();
  sub_244E4DBFC();
  v29 = v2;
  v4 = sub_244E4C75C();
  v6 = v5;
  v7 = *(_QWORD *)(v3 + 72);
  v8 = *(_QWORD *)(v3 + 40);
  v27 = *(_QWORD *)(v3 + 32);
  v28 = *(_QWORD *)(v3 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_244E4D860();
  v10 = v9;
  v25 = sub_244E4C750();
  v12 = v11;
  v24 = sub_244E4D8FC();
  v14 = v13;
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v6;
  *(_QWORD *)(v0 + 32) = v28;
  *(_QWORD *)(v0 + 40) = v7;
  *(_QWORD *)(v0 + 48) = v27;
  *(_QWORD *)(v0 + 56) = v8;
  *(_QWORD *)(v0 + 64) = v26;
  *(_QWORD *)(v0 + 72) = v10;
  *(_QWORD *)(v0 + 80) = v25;
  *(_QWORD *)(v0 + 88) = v12;
  *(_QWORD *)(v0 + 96) = v24;
  *(_QWORD *)(v0 + 104) = v14;
  *(_QWORD *)(v0 + 112) = 0x4F20656E6F685069;
  *(_QWORD *)(v0 + 120) = 0xEA00000000003B53;
  v15 = sub_244E11158();
  v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31)
    v18 = 5526864;
  else
    v18 = 1414745936;
  if (v31)
    v19 = 0xE300000000000000;
  else
    v19 = 0xE400000000000000;
  *(_QWORD *)(v0 + 232) = v17;
  *(_QWORD *)(v0 + 240) = v15;
  v20 = sub_244D88AE8(v30, v29, v18, v19, v15, v17);
  *(_QWORD *)(v0 + 248) = v20;
  swift_bridgeObjectRelease();
  v21 = swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v21;
  *(_BYTE *)(v21 + 16) = v31;
  *(_QWORD *)(v21 + 24) = v20;
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 264) = v22;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415BF8);
  *v22 = v0;
  v22[1] = sub_244D890C8;
  return sub_244E4EAB4();
}

uint64_t sub_244D890C8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244D89124()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 240);
  v3 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v4 = *(_QWORD *)(v0 + 208);
  v5 = *(_QWORD *)(v0 + 216);
  v6 = *(_QWORD *)(v0 + 176);

  sub_244D65198(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v9 = *(_OWORD *)(v0 + 144);
  v10 = *(_OWORD *)(v0 + 128);
  v7 = *(_QWORD *)(v0 + 160);
  LOBYTE(v2) = *(_BYTE *)(v0 + 168);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)v6 = v10;
  *(_OWORD *)(v6 + 16) = v9;
  *(_QWORD *)(v6 + 32) = v7;
  *(_BYTE *)(v6 + 40) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D891D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[20] = a2;
  v3[21] = a3;
  v3[19] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  v3[22] = swift_task_alloc();
  v4 = sub_244E4C2AC();
  v3[23] = v4;
  v3[24] = *(_QWORD *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244D89258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *(_QWORD *)(v0 + 200);
  v1 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 160);
  sub_244E4E88C();
  swift_bridgeObjectRelease();
  sub_244E4D1B8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244D80008(*(_BYTE *)(v3 + 96));
  sub_244E4C294();
  swift_bridgeObjectRelease();
  sub_244E4C228();
  swift_bridgeObjectRelease();
  sub_244D66F54(v2, &qword_257414B00);
  v23 = v1;
  v4 = sub_244E4C75C();
  v6 = v5;
  v7 = *(_QWORD *)(v3 + 64);
  v8 = *(_QWORD *)(v3 + 72);
  v9 = *(_QWORD *)(v3 + 40);
  v22 = *(_QWORD *)(v3 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = sub_244E4D860();
  v12 = v11;
  v13 = sub_244E4C750();
  *(_QWORD *)(v0 + 16) = v4;
  *(_QWORD *)(v0 + 24) = v6;
  *(_QWORD *)(v0 + 32) = v7;
  *(_QWORD *)(v0 + 40) = v8;
  *(_QWORD *)(v0 + 48) = v22;
  *(_QWORD *)(v0 + 56) = v9;
  *(_QWORD *)(v0 + 64) = v10;
  *(_QWORD *)(v0 + 72) = v12;
  *(_QWORD *)(v0 + 80) = v13;
  *(_QWORD *)(v0 + 88) = v14;
  *(_BYTE *)(v0 + 96) = 1;
  v15 = sub_244E11500();
  v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 208) = v15;
  *(_QWORD *)(v0 + 216) = v17;
  v18 = sub_244D88AE8(v24, v23, 1414745936, 0xE400000000000000, v15, v17);
  *(_QWORD *)(v0 + 224) = v18;
  v19 = swift_task_alloc();
  *(_QWORD *)(v0 + 232) = v19;
  *(_QWORD *)(v19 + 16) = v18;
  v20 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415BF8);
  *v20 = v0;
  v20[1] = sub_244D894B0;
  return sub_244E4EAB4();
}

uint64_t sub_244D894B0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244D8950C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;

  v1 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 200);
  v2 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 184);
  v5 = *(_QWORD *)(v0 + 192);
  v6 = *(_QWORD *)(v0 + 152);

  sub_244D65198(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  v9 = *(_OWORD *)(v0 + 120);
  v10 = *(_OWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 136);
  LOBYTE(v2) = *(_BYTE *)(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)v6 = v10;
  *(_OWORD *)(v6 + 16) = v9;
  *(_QWORD *)(v6 + 32) = v7;
  *(_BYTE *)(v6 + 40) = v2;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244D895B8(uint64_t a1)
{
  uint64_t v1;

  return sub_244D85534(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244D895C0()
{
  return objectdestroyTm_0(&qword_257415C00);
}

uint64_t sub_244D895D0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_244D895F8(uint64_t a1)
{
  return sub_244D89834(a1, &qword_257415C08, (void (*)(uint64_t, _QWORD, _QWORD, uint64_t (*)(_QWORD), uint64_t))sub_244D87460);
}

void sub_244D8960C()
{
  uint64_t v0;

  sub_244D8FCBC(*(void **)(v0 + 16));
}

uint64_t sub_244D89628(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  return sub_244D89AA4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))sub_244DC6538);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t sub_244D89650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_244D8965C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_244D87ED0);
}

uint64_t sub_244D8965C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))
{
  uint64_t v5;
  uint64_t v10;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_244E4C024() - 8) + 80);
  return a5(a1, a2, a3, a4, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), v5 + ((v10 + 32) & ~v10));
}

uint64_t *sub_244D896D4(uint64_t *a1)
{
  sub_244D89708(*a1, a1[1]);
  return a1;
}

uint64_t sub_244D89708(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244D89744(uint64_t a1)
{
  sub_244D8977C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  return a1;
}

uint64_t sub_244D8977C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 1) == 0)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D897C8(uint64_t a1)
{
  uint64_t v1;

  return sub_244D84CE8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244D897D0()
{
  return objectdestroyTm_0(&qword_257415C28);
}

uint64_t sub_244D897DC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415C28);
  return sub_244D84FF8(a1);
}

uint64_t sub_244D89820(uint64_t a1)
{
  return sub_244D89834(a1, &qword_257415C20, (void (*)(uint64_t, _QWORD, _QWORD, uint64_t (*)(_QWORD), uint64_t))sub_244D87388);
}

uint64_t sub_244D89834(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, _QWORD, _QWORD, uint64_t (*)(_QWORD), uint64_t))
{
  _QWORD *v3;
  uint64_t v7;
  unint64_t v8;
  uint64_t (*v9)(_BYTE *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _BYTE v15[48];

  v7 = *(_QWORD *)(sub_244E4C024() - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (uint64_t (*)(_BYTE *))v3[2];
  v10 = v3[3];
  v11 = v3[4];
  v12 = (uint64_t)v3 + v8;
  v13 = *((_BYTE *)v3 + v8 + *(_QWORD *)(v7 + 64));
  sub_244D70C60(a1, (uint64_t)v15, a2);
  return sub_244D86AA0((uint64_t)v15, v9, v10, v11, v12, v13, a2, a3);
}

uint64_t sub_244D898E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_244D8965C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, uint64_t))sub_244D881B4);
}

uint64_t sub_244D898EC(uint64_t a1)
{
  sub_244D70C30(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
  return a1;
}

uint64_t sub_244D89920(uint64_t a1)
{
  uint64_t v1;

  return sub_244D85084(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_244D8992C()
{
  return objectdestroyTm_0(&qword_257415C00);
}

uint64_t sub_244D89938(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415C00);
  return sub_244D85830(a1);
}

uint64_t sub_244D89980(uint64_t a1)
{
  return sub_244D89834(a1, &qword_257415C40, (void (*)(uint64_t, _QWORD, _QWORD, uint64_t (*)(_QWORD), uint64_t))sub_244D873D0);
}

uint64_t sub_244D89994()
{
  return objectdestroyTm_0(&qword_257415C00);
}

uint64_t objectdestroyTm_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80)), v2);
  return swift_deallocObject();
}

uint64_t objectdestroy_6Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244E4C024();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_244D89A80(uint64_t a1)
{
  return sub_244D89834(a1, &qword_257415C38, (void (*)(uint64_t, _QWORD, _QWORD, uint64_t (*)(_QWORD), uint64_t))sub_244D87418);
}

uint64_t sub_244D89A98(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  return sub_244D89AA4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))sub_244DC61C4);
}

uint64_t sub_244D89AA4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t, unint64_t))
{
  uint64_t v5;
  uint64_t v11;

  v11 = *(unsigned __int8 *)(*(_QWORD *)(sub_244E4C024() - 8) + 80);
  return sub_244D883E4(a1, a2, a3, a4, *(void (**)(__int128 *))(v5 + 16), *(_QWORD *)(v5 + 24), v5 + ((v11 + 32) & ~v11), a5);
}

uint64_t objectdestroy_9Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244E4C024();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_244D89B90(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  return sub_244D89AA4(a1, a2, a3, a4, (uint64_t (*)(uint64_t, unint64_t))sub_244DC5E50);
}

uint64_t destroy for EnrollmentRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for EnrollmentRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for EnrollmentRequest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

_QWORD *assignWithTake for EnrollmentRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EnrollmentRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EnrollmentRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EnrollmentRequest()
{
  return &type metadata for EnrollmentRequest;
}

_QWORD *initializeBufferWithCopyOfBuffer for DiscoveryManifest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DiscoveryManifest()
{
  return swift_bridgeObjectRelease();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_QWORD *assignWithTake for DiscoveryManifest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for EnrollmentResponse()
{
  return &type metadata for EnrollmentResponse;
}

ValueMetadata *type metadata accessor for ReEnrollmentResponse()
{
  return &type metadata for ReEnrollmentResponse;
}

ValueMetadata *type metadata accessor for VerifyMerchantRequest()
{
  return &type metadata for VerifyMerchantRequest;
}

uint64_t sub_244D89FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VerifyMerchantResponse(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for VerifyMerchantResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for VerifyMerchantResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VerifyMerchantResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for VerifyMerchantResponse()
{
  return &type metadata for VerifyMerchantResponse;
}

uint64_t initializeWithCopy for SubscriptionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SubscriptionRequest(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SubscriptionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for SubscriptionRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 81))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SubscriptionRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 81) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionRequest()
{
  return &type metadata for SubscriptionRequest;
}

_QWORD *assignWithCopy for DiscoveryManifest(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryManifest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryManifest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResponse()
{
  return &type metadata for SubscriptionResponse;
}

unint64_t sub_244D8A4A4()
{
  unint64_t result;

  result = qword_257415C50;
  if (!qword_257415C50)
  {
    result = MEMORY[0x2495282F0](&unk_244E526E4, &type metadata for SubscriptionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415C50);
  }
  return result;
}

unint64_t sub_244D8A4E8()
{
  unint64_t result;

  result = qword_257415C60;
  if (!qword_257415C60)
  {
    result = MEMORY[0x2495282F0](&unk_244E52694, &type metadata for SubscriptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415C60);
  }
  return result;
}

uint64_t sub_244D8A52C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_244D8A6AC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000244E57A80 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C416B6E696C6572 && a2 == 0xED00006465776F6CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_244D8A7BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415C68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D8A94C();
  sub_244E4EBE0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v9[15] = 0;
    v7 = sub_244E4E9F4();
    v9[14] = 1;
    swift_bridgeObjectRetain();
    sub_244E4E9DC();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_244D8A94C()
{
  unint64_t result;

  result = qword_257415C70;
  if (!qword_257415C70)
  {
    result = MEMORY[0x2495282F0](&unk_244E52644, &type metadata for VerifyMerchantResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415C70);
  }
  return result;
}

unint64_t sub_244D8A990()
{
  unint64_t result;

  result = qword_257415C80;
  if (!qword_257415C80)
  {
    result = MEMORY[0x2495282F0](&unk_244E525F4, &type metadata for VerifyMerchantRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415C80);
  }
  return result;
}

unint64_t sub_244D8A9D4()
{
  unint64_t result;

  result = qword_257415C90;
  if (!qword_257415C90)
  {
    result = MEMORY[0x2495282F0](&unk_244E525A4, &type metadata for ReEnrollmentResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415C90);
  }
  return result;
}

unint64_t sub_244D8AA18()
{
  unint64_t result;

  result = qword_257415CA0;
  if (!qword_257415CA0)
  {
    result = MEMORY[0x2495282F0](&unk_244E52554, &type metadata for EnrollmentResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415CA0);
  }
  return result;
}

unint64_t sub_244D8AA5C()
{
  unint64_t result;

  result = qword_257415CB0;
  if (!qword_257415CB0)
  {
    result = MEMORY[0x2495282F0](&unk_244E52504, &type metadata for EnrollmentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415CB0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EnrollmentRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EnrollmentRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_244D8AB7C + 4 * byte_244E51D12[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_244D8ABB0 + 4 * byte_244E51D0D[v4]))();
}

uint64_t sub_244D8ABB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8ABB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D8ABC0);
  return result;
}

uint64_t sub_244D8ABCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D8ABD4);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_244D8ABD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8ABE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EnrollmentRequest.CodingKeys()
{
  return &type metadata for EnrollmentRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for EnrollmentResponse.CodingKeys()
{
  return &type metadata for EnrollmentResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for ReEnrollmentResponse.CodingKeys()
{
  return &type metadata for ReEnrollmentResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for VerifyMerchantRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_244D8AC70 + 4 * byte_244E51D1C[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_244D8ACA4 + 4 * byte_244E51D17[v4]))();
}

uint64_t sub_244D8ACA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8ACAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D8ACB4);
  return result;
}

uint64_t sub_244D8ACC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D8ACC8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_244D8ACCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8ACD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VerifyMerchantRequest.CodingKeys()
{
  return &type metadata for VerifyMerchantRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for VerifyMerchantResponse.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244D8AD3C + 4 * byte_244E51D26[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244D8AD70 + 4 * byte_244E51D21[v4]))();
}

uint64_t sub_244D8AD70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8AD78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D8AD80);
  return result;
}

uint64_t sub_244D8AD8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D8AD94);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244D8AD98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8ADA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VerifyMerchantResponse.CodingKeys()
{
  return &type metadata for VerifyMerchantResponse.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SubscriptionRequest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_244D8AE08 + 4 * byte_244E51D30[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_244D8AE3C + 4 * byte_244E51D2B[v4]))();
}

uint64_t sub_244D8AE3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8AE44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D8AE4CLL);
  return result;
}

uint64_t sub_244D8AE58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D8AE60);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_244D8AE64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8AE6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionRequest.CodingKeys()
{
  return &type metadata for SubscriptionRequest.CodingKeys;
}

uint64_t _s21ProximityReaderDaemon18EnrollmentResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_244D8AEC8 + 4 * byte_244E51D35[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_244D8AEE8 + 4 * byte_244E51D3A[v4]))();
}

_BYTE *sub_244D8AEC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_244D8AEE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244D8AEF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244D8AEF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244D8AF00(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244D8AF08(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SubscriptionResponse.CodingKeys()
{
  return &type metadata for SubscriptionResponse.CodingKeys;
}

unint64_t sub_244D8AF28()
{
  unint64_t result;

  result = qword_257415CD8;
  if (!qword_257415CD8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5208C, &type metadata for SubscriptionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415CD8);
  }
  return result;
}

unint64_t sub_244D8AF70()
{
  unint64_t result;

  result = qword_257415CE0;
  if (!qword_257415CE0)
  {
    result = MEMORY[0x2495282F0](&unk_244E52144, &type metadata for SubscriptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415CE0);
  }
  return result;
}

unint64_t sub_244D8AFB8()
{
  unint64_t result;

  result = qword_257415CE8;
  if (!qword_257415CE8)
  {
    result = MEMORY[0x2495282F0](&unk_244E521FC, &type metadata for VerifyMerchantResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415CE8);
  }
  return result;
}

unint64_t sub_244D8B000()
{
  unint64_t result;

  result = qword_257415CF0;
  if (!qword_257415CF0)
  {
    result = MEMORY[0x2495282F0](&unk_244E522B4, &type metadata for VerifyMerchantRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415CF0);
  }
  return result;
}

unint64_t sub_244D8B048()
{
  unint64_t result;

  result = qword_257415CF8;
  if (!qword_257415CF8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5236C, &type metadata for ReEnrollmentResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415CF8);
  }
  return result;
}

unint64_t sub_244D8B090()
{
  unint64_t result;

  result = qword_257415D00;
  if (!qword_257415D00)
  {
    result = MEMORY[0x2495282F0](&unk_244E52424, &type metadata for EnrollmentResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D00);
  }
  return result;
}

unint64_t sub_244D8B0D8()
{
  unint64_t result;

  result = qword_257415D08;
  if (!qword_257415D08)
  {
    result = MEMORY[0x2495282F0](&unk_244E524DC, &type metadata for EnrollmentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D08);
  }
  return result;
}

unint64_t sub_244D8B120()
{
  unint64_t result;

  result = qword_257415D10;
  if (!qword_257415D10)
  {
    result = MEMORY[0x2495282F0](&unk_244E5244C, &type metadata for EnrollmentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D10);
  }
  return result;
}

unint64_t sub_244D8B168()
{
  unint64_t result;

  result = qword_257415D18;
  if (!qword_257415D18)
  {
    result = MEMORY[0x2495282F0](&unk_244E52474, &type metadata for EnrollmentRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D18);
  }
  return result;
}

unint64_t sub_244D8B1B0()
{
  unint64_t result;

  result = qword_257415D20;
  if (!qword_257415D20)
  {
    result = MEMORY[0x2495282F0](&unk_244E52394, &type metadata for EnrollmentResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D20);
  }
  return result;
}

unint64_t sub_244D8B1F8()
{
  unint64_t result;

  result = qword_257415D28;
  if (!qword_257415D28)
  {
    result = MEMORY[0x2495282F0](&unk_244E523BC, &type metadata for EnrollmentResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D28);
  }
  return result;
}

unint64_t sub_244D8B240()
{
  unint64_t result;

  result = qword_257415D30;
  if (!qword_257415D30)
  {
    result = MEMORY[0x2495282F0](&unk_244E522DC, &type metadata for ReEnrollmentResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D30);
  }
  return result;
}

unint64_t sub_244D8B288()
{
  unint64_t result;

  result = qword_257415D38;
  if (!qword_257415D38)
  {
    result = MEMORY[0x2495282F0](&unk_244E52304, &type metadata for ReEnrollmentResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D38);
  }
  return result;
}

unint64_t sub_244D8B2D0()
{
  unint64_t result;

  result = qword_257415D40;
  if (!qword_257415D40)
  {
    result = MEMORY[0x2495282F0](&unk_244E52224, &type metadata for VerifyMerchantRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D40);
  }
  return result;
}

unint64_t sub_244D8B318()
{
  unint64_t result;

  result = qword_257415D48;
  if (!qword_257415D48)
  {
    result = MEMORY[0x2495282F0](&unk_244E5224C, &type metadata for VerifyMerchantRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D48);
  }
  return result;
}

unint64_t sub_244D8B360()
{
  unint64_t result;

  result = qword_257415D50;
  if (!qword_257415D50)
  {
    result = MEMORY[0x2495282F0](&unk_244E5216C, &type metadata for VerifyMerchantResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D50);
  }
  return result;
}

unint64_t sub_244D8B3A8()
{
  unint64_t result;

  result = qword_257415D58;
  if (!qword_257415D58)
  {
    result = MEMORY[0x2495282F0](&unk_244E52194, &type metadata for VerifyMerchantResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D58);
  }
  return result;
}

unint64_t sub_244D8B3F0()
{
  unint64_t result;

  result = qword_257415D60;
  if (!qword_257415D60)
  {
    result = MEMORY[0x2495282F0](&unk_244E520B4, &type metadata for SubscriptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D60);
  }
  return result;
}

unint64_t sub_244D8B438()
{
  unint64_t result;

  result = qword_257415D68;
  if (!qword_257415D68)
  {
    result = MEMORY[0x2495282F0](&unk_244E520DC, &type metadata for SubscriptionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D68);
  }
  return result;
}

unint64_t sub_244D8B480()
{
  unint64_t result;

  result = qword_257415D70;
  if (!qword_257415D70)
  {
    result = MEMORY[0x2495282F0](&unk_244E51FFC, &type metadata for SubscriptionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D70);
  }
  return result;
}

unint64_t sub_244D8B4C8()
{
  unint64_t result;

  result = qword_257415D78;
  if (!qword_257415D78)
  {
    result = MEMORY[0x2495282F0](&unk_244E52024, &type metadata for SubscriptionResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415D78);
  }
  return result;
}

uint64_t sub_244D8B50C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564496E656B6F74 && a2 == 0xEF7265696669746ELL || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4C656369766564 && a2 == 0xEC000000656C6163 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6973726556736F74 && a2 == 0xEA00000000006E6FLL || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F6973726556736FLL && a2 == 0xE90000000000006ELL)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_244D8B86C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000012 && a2 == 0x8000000244E57AA0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_244D8B8F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C646E7542707061 && a2 == 0xEB00000000644965 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564496E656B6F74 && a2 == 0xEF7265696669746ELL || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4C656369766564 && a2 == 0xEC000000656C6163 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000244E57A60)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

uint64_t sub_244D8BBD0(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x8000000244E57A40)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_244D8BC80()
{
  sub_244D8960C();
}

uint64_t type metadata accessor for Mock()
{
  return objc_opt_self();
}

id sub_244D8BCC0()
{
  uint64_t (*v0)(void);
  char v1;
  uint64_t (*v2)(void);
  char v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;

  v0 = (uint64_t (*)(void))sub_244E4D86C();
  v1 = v0();
  swift_release();
  if ((v1 & 1) == 0)
    return 0;
  v2 = (uint64_t (*)(void))sub_244E4D86C();
  v3 = v2();
  swift_release();
  if ((v3 & 1) != 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v5 = (void *)sub_244E4E2F8();
    v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v8 = (void *)sub_244E4E2F8();
  objc_msgSend(v7, sel_removeObjectForKey_, v8);

  return v6;
}

uint64_t sub_244D8BDE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419D58);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419D58);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8BE74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419D70);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419D70);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8BF1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419D88);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419D88);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8BFC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419DA0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419DA0);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419DB8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419DB8);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419DD0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419DD0);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C198()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419DE8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419DE8);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419E00);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E00);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419E18);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E18);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419E30);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E30);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419E48);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E48);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C4A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419E60);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E60);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C540()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419E78);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E78);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C5E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419E90);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E90);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C688()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419EA8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419EA8);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  __swift_allocate_value_buffer(v0, qword_257419EC0);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_257419EC0);
  sub_244E4DCC8();
  v2 = sub_244E4DCD4();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 0, 1, v2);
}

uint64_t sub_244D8C7CC()
{
  uint64_t result;

  result = MCGestaltIsInternalBuild();
  byte_257419ED8 = result;
  return result;
}

uint64_t type metadata accessor for PRLoggers()
{
  return objc_opt_self();
}

unint64_t sub_244D8C808(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_244E4E3DC();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_244E4E478();
  }
  __break(1u);
  return result;
}

void sub_244D8C8B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;

  if (qword_257414448 != -1)
    swift_once();
  if (byte_257419ED8 == 1)
  {
    v9 = HIBYTE(a5) & 0xF;
    if ((a5 & 0x2000000000000000) == 0)
      v9 = a4 & 0xFFFFFFFFFFFFLL;
    if (v9)
    {
      v30 = a2;
      v31 = a3;
      swift_bridgeObjectRetain();
      sub_244E4E3F4();
      sub_244E4E3F4();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    v30 = sub_244E4E2E0();
    v31 = v10;
    sub_244D70D08();
    v11 = sub_244E4E808();
    v13 = v12;
    swift_bridgeObjectRelease();
    v14 = sub_244D8C808(8uLL, v11, v13);
    v16 = v15;
    v29 = v17;
    v19 = v18;
    swift_bridgeObjectRelease();
    swift_unknownObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_244E4DCBC();
    v21 = sub_244E4E664();
    if (os_log_type_enabled(v20, v21))
    {
      v22 = swift_slowAlloc();
      v28 = swift_slowAlloc();
      v30 = v28;
      *(_DWORD *)v22 = 136381187;
      swift_getObjectType();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257415EB0);
      v23 = sub_244E4E370();
      sub_244D9A70C(v23, v24, &v30);
      sub_244E4E7E4();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2081;
      swift_bridgeObjectRetain();
      v25 = MEMORY[0x24952763C](v14, v16, v29, v19);
      v27 = v26;
      swift_bridgeObjectRelease();
      sub_244D9A70C(v25, v27, &v30);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 22) = 2081;
      swift_bridgeObjectRetain();
      sub_244D9A70C(a2, a3, &v30);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v20, v21, "(o)%{private}s-%{private}s.%{private}s", (uint8_t *)v22, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v28, -1, -1);
      MEMORY[0x2495283BC](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_unknownObjectRelease_n();
    }

  }
}

void sub_244D8CC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415EB8);
  MEMORY[0x24BDAC7A8](v1);
  v2 = sub_244E4C384();
  MEMORY[0x24BDAC7A8](v2);
  v3 = type metadata accessor for StoreAndForwardMonitorEvent();
  MEMORY[0x24BDAC7A8](v3);
  sub_244D8D3E4(v0, (uint64_t)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = (char *)sub_244D8CD5C + 4 * word_244E52760[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_OWORD *sub_244D8CD5C()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t *v2;
  _OWORD *v3;
  _OWORD *result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  sub_244D8DE00(*v2, v2[1], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], (uint64_t)(v0 + 11), v2[8], v9);
  *(_QWORD *)(v1 + 32) = &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
  *(_QWORD *)(v1 + 40) = sub_244D8DD58();
  result = (_OWORD *)swift_allocObject();
  *(_QWORD *)(v1 + 8) = result;
  v5 = v3[7];
  result[7] = v3[6];
  result[8] = v5;
  result[9] = v3[8];
  v6 = v0[14];
  result[3] = v0[13];
  result[4] = v6;
  v7 = v0[16];
  result[5] = v0[15];
  result[6] = v7;
  v8 = v0[12];
  result[1] = v0[11];
  result[2] = v8;
  *(_BYTE *)v1 = 17;
  return result;
}

uint64_t type metadata accessor for StoreAndForwardMonitorEvent()
{
  uint64_t result;

  result = qword_257415F50;
  if (!qword_257415F50)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244D8D3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for StoreAndForwardMonitorEvent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D8D428(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D8D470(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D8D4AC + 4 * byte_244E5276E[a1]))(0x6974617669746361, 0xEC00000064496E6FLL);
}

uint64_t sub_244D8D4AC()
{
  return 0x496E6F6973736573;
}

unint64_t sub_244D8D4F8()
{
  return 0xD000000000000011;
}

uint64_t sub_244D8D514()
{
  return 0x64697074666173;
}

uint64_t sub_244D8D52C()
{
  return 0x797269707865;
}

uint64_t sub_244D8D540()
{
  return 0x6E6F73616572;
}

uint64_t sub_244D8D554()
{
  return 0x6E756F4364616572;
}

uint64_t sub_244D8D574(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415F90);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D8F524();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA3C();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA60();
    v8[10] = 5;
    sub_244E4EA3C();
    v8[9] = 6;
    sub_244E4EA3C();
    v8[8] = 7;
    sub_244E4EA3C();
    v8[7] = 8;
    sub_244E4EA3C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D8D7A0()
{
  unsigned __int8 *v0;

  return sub_244D8D470(*v0);
}

uint64_t sub_244D8D7A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D8F70C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D8D7CC()
{
  sub_244D8F524();
  return sub_244E4EC04();
}

uint64_t sub_244D8D7F4()
{
  sub_244D8F524();
  return sub_244E4EC10();
}

uint64_t sub_244D8D81C(_QWORD *a1)
{
  return sub_244D8D574(a1);
}

uint64_t sub_244D8D86C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76[16];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v68 = a8;
  v67 = a7;
  v62 = a6;
  v56 = a5;
  v74 = a4;
  v66 = a3;
  v65 = a2;
  sub_244D8D428((uint64_t)a1, (uint64_t)v76);
  v73 = v77;
  v11 = v78;
  v72 = v79;
  v12 = v80;
  v71 = v81;
  v13 = v82;
  v70 = v83;
  v14 = v84;
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_257415ED8);
  MEMORY[0x24BDAC7A8](v15);
  v58 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_244E4C450();
  v57 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_244E4C384();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v69 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415EB8);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244D8D428((uint64_t)a1, (uint64_t)&v85);
  if (v86)
  {
    v60 = v85;
    v61 = v86;
    swift_bridgeObjectRetain();
    v64 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v63 = v14;
    swift_bridgeObjectRetain();
    sub_244D8DF8C(a1);
    v25 = v13;
  }
  else
  {
    v60 = sub_244E4D8E4();
    v61 = v26;
    v73 = sub_244E4D8E4();
    v64 = v27;
    v72 = sub_244E4D8E4();
    v12 = v28;
    v71 = sub_244E4D8E4();
    v25 = v29;
    v70 = sub_244E4D8E4();
    v63 = v30;
  }
  sub_244D8DF04(v74, (uint64_t)v24);
  v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19);
  v32 = v69;
  if (v31 == 1)
  {
    v33 = 0;
    v34 = 0;
  }
  else
  {
    v54 = v25;
    v55 = v12;
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v69, v24, v19);
    v35 = (void *)sub_244E4C33C();
    v36 = v58;
    sub_244E4C438();
    v37 = v57;
    v38 = v59;
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48))(v36, 1, v59);
    if ((_DWORD)result == 1)
    {
      __break(1u);
      return result;
    }
    v40 = (void *)objc_opt_self();
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v18, v36, v38);
    v41 = (void *)sub_244E4C444();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v38);
    v42 = objc_msgSend(v40, sel_stringFromDate_timeZone_formatOptions_, v35, v41, 3955);

    v33 = sub_244E4E31C();
    v34 = v43;

    (*(void (**)(char *, uint64_t))(v20 + 8))(v32, v19);
    v12 = v55;
    v25 = v54;
  }
  v44 = v64;
  v45 = v63;
  if ((v62 & 1) != 0)
  {
    v48 = 0;
    v49 = 0;
  }
  else
  {
    if (sub_244E4D920() == v56)
    {
      v46 = sub_244E4D8E4();
    }
    else
    {
      v75 = v56;
      v46 = sub_244E4EAA8();
    }
    v48 = v46;
    v49 = v47;
  }
  result = sub_244D8DF4C(v74);
  v50 = v61;
  *a9 = v60;
  a9[1] = v50;
  a9[2] = v73;
  a9[3] = v44;
  a9[4] = v72;
  a9[5] = v12;
  a9[6] = v71;
  a9[7] = v25;
  a9[8] = v70;
  a9[9] = v45;
  v51 = v66;
  a9[10] = v65;
  a9[11] = v51;
  a9[12] = v33;
  a9[13] = v34;
  v52 = v68;
  a9[14] = v67;
  a9[15] = v52;
  a9[16] = v48;
  a9[17] = v49;
  return result;
}

unint64_t sub_244D8DD58()
{
  unint64_t result;

  result = qword_257415EC8;
  if (!qword_257415EC8)
  {
    result = MEMORY[0x2495282F0](&unk_244E528A8, &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails);
    atomic_store(result, (unint64_t *)&qword_257415EC8);
  }
  return result;
}

uint64_t sub_244D8DD9C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

double sub_244D8DE00@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v14;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v14 = a4;
  if (a2)
  {
    v17 = a2;
    if (a4)
      goto LABEL_3;
  }
  else
  {
    v22 = a7;
    v23 = sub_244E4D8E4();
    a7 = v22;
    a1 = v23;
    v17 = v24;
    if (v14)
    {
LABEL_3:
      if (a6)
        goto LABEL_4;
LABEL_8:
      v28 = a7;
      v29 = sub_244E4D8E4();
      a7 = v28;
      a5 = v29;
      a6 = v30;
      v19 = a10;
      v20 = a11;
      if (a8)
        goto LABEL_5;
LABEL_9:
      a7 = sub_244E4D8E4();
      a8 = v31;
      goto LABEL_5;
    }
  }
  v25 = a7;
  v26 = sub_244E4D8E4();
  a7 = v25;
  a3 = v26;
  v14 = v27;
  if (!a6)
    goto LABEL_8;
LABEL_4:
  v19 = a10;
  v20 = a11;
  if (!a8)
    goto LABEL_9;
LABEL_5:
  *(_QWORD *)a9 = 0;
  *(_QWORD *)(a9 + 8) = 0;
  *(_QWORD *)(a9 + 16) = a1;
  *(_QWORD *)(a9 + 24) = v17;
  *(_QWORD *)(a9 + 32) = a3;
  *(_QWORD *)(a9 + 40) = v14;
  *(_QWORD *)(a9 + 48) = a5;
  *(_QWORD *)(a9 + 56) = a6;
  *(_QWORD *)(a9 + 64) = a7;
  *(_QWORD *)(a9 + 72) = a8;
  result = 0.0;
  *(_OWORD *)(a9 + 80) = 0u;
  *(_OWORD *)(a9 + 96) = 0u;
  *(_QWORD *)(a9 + 112) = v19;
  *(_QWORD *)(a9 + 120) = v20;
  *(_QWORD *)(a9 + 128) = 0;
  *(_QWORD *)(a9 + 136) = 0;
  return result;
}

uint64_t sub_244D8DEEC(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_244D8DF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415EB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D8DF4C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415EB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_244D8DF8C(uint64_t *a1)
{
  sub_244D73F3C(*a1, a1[1]);
  return a1;
}

uint64_t destroy for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

_QWORD *assignWithTake for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails()
{
  return &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails;
}

uint64_t sub_244D8E3F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_244D8E454 + 4 * byte_244E52777[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_244D8E8E0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257415ED0) + 64);
      v4 = sub_244E4C384();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 3:
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4:
    case 6:
      if (*(_QWORD *)(a1 + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_9:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_244D8EA68()
{
  char *v0;

  v0 = (char *)sub_244D8EABC + 4 * byte_244E52785[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_244D8EABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 24) = v3;
  v4 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)(v0 + 32) = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(v0 + 40) = v4;
  v5 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v0 + 56) = v5;
  v6 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v1 + 64);
  *(_QWORD *)(v0 + 72) = v6;
  v7 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(v0 + 88) = v7;
  *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 96);
  *(_WORD *)(v0 + 112) = *(_WORD *)(v1 + 112);
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v1 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_244D8ED94(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_244D8F1F0(result);
    v2 = (char *)&loc_244D8EDF8 + 4 * byte_244E5278C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_244D8F1F0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for StoreAndForwardMonitorEvent();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_244D8F22C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[5];
    a1[4] = a2[4];
    a1[5] = v6;
    a1[6] = a2[6];
    *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
    v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257415ED0) + 64);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_244E4C384();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_244D8F300(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_244D8F1F0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[5];
      a1[4] = a2[4];
      a1[5] = v6;
      a1[6] = a2[6];
      *((_WORD *)a1 + 56) = *((_WORD *)a2 + 56);
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_257415ED0) + 64);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_244E4C384();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_244D8F3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t sub_244D8F3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_244D8F400()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_244D8F410()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  const char *v3;
  char *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = "P";
  result = sub_244E4C384();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v4 = &v2;
    v5 = &unk_244E52838;
    v6 = &unk_244E52850;
    v7 = &unk_244E52868;
    v8 = &unk_244E52850;
    v9 = &unk_244E52868;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_244D8F4BC(uint64_t a1)
{
  unint64_t result;

  result = sub_244D8F4E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244D8F4E0()
{
  unint64_t result;

  result = qword_257415F88;
  if (!qword_257415F88)
  {
    result = MEMORY[0x2495282F0](&unk_244E52880, &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails);
    atomic_store(result, (unint64_t *)&qword_257415F88);
  }
  return result;
}

unint64_t sub_244D8F524()
{
  unint64_t result;

  result = qword_257415F98;
  if (!qword_257415F98)
  {
    result = MEMORY[0x2495282F0](&unk_244E52988, &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415F98);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_244D8F5B4 + 4 * byte_244E52798[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_244D8F5E8 + 4 * byte_244E52793[v4]))();
}

uint64_t sub_244D8F5E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8F5F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D8F5F8);
  return result;
}

uint64_t sub_244D8F604(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D8F60CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_244D8F610(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D8F618(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys()
{
  return &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys;
}

unint64_t sub_244D8F638()
{
  unint64_t result;

  result = qword_257415FA0;
  if (!qword_257415FA0)
  {
    result = MEMORY[0x2495282F0](&unk_244E52960, &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415FA0);
  }
  return result;
}

unint64_t sub_244D8F680()
{
  unint64_t result;

  result = qword_257415FA8;
  if (!qword_257415FA8)
  {
    result = MEMORY[0x2495282F0](&unk_244E528D0, &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415FA8);
  }
  return result;
}

unint64_t sub_244D8F6C8()
{
  unint64_t result;

  result = qword_257415FB0;
  if (!qword_257415FB0)
  {
    result = MEMORY[0x2495282F0](&unk_244E528F8, &type metadata for StoreAndForwardMonitorEvent.StoreAndForwardMonitorEventDetails.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257415FB0);
  }
  return result;
}

uint64_t sub_244D8F70C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6974617669746361 && a2 == 0xEC00000064496E6FLL;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64697074666173 && a2 == 0xE700000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x797269707865 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E756F4364616572 && a2 == 0xEB00000000726574)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

id sub_244D8FAF4()
{
  uint64_t v0;
  id v1;
  id v2;
  id result;

  type metadata accessor for SecureChannel();
  v0 = swift_allocObject();
  v1 = objc_msgSend((id)objc_opt_self(), sel_ephemeralSessionConfiguration);
  objc_msgSend(v1, sel_setTimeoutIntervalForResource_, 600.0);
  objc_msgSend(v1, sel_setTLSMinimumSupportedProtocolVersion_, 771);
  v2 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v1);

  *(_QWORD *)(v0 + 16) = v2;
  result = sub_244D8FBB8();
  *(_QWORD *)(v0 + 24) = result;
  qword_257419EE0 = v0;
  return result;
}

id sub_244D8FBB8()
{
  id v0;
  id v1;
  void *v2;
  id v3;
  id v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_ephemeralSessionConfiguration);
  objc_msgSend(v0, sel_setTimeoutIntervalForResource_, 600.0);
  objc_msgSend(v0, sel_setTLSMinimumSupportedProtocolVersion_, 771);
  v1 = objc_allocWithZone(MEMORY[0x24BE0ACD8]);
  v2 = (void *)sub_244E4E2F8();
  v3 = objc_msgSend(v1, sel_initWithIdentifier_, v2);

  objc_msgSend(v0, sel_set_appleIDContext_, v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_sessionWithConfiguration_, v0);

  return v4;
}

void sub_244D8FCBC(void *a1)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_244E4BFD0();
  v7[0] = 0;
  v3 = objc_msgSend(a1, sel_securingRequest_error_, v2, v7);

  v4 = v7[0];
  if (v3)
  {
    sub_244E4BFE8();
    v5 = v4;

  }
  else
  {
    v6 = v7[0];
    sub_244E4C1E0();

    swift_willThrow();
  }
}

uint64_t sub_244D8FDA0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SecureChannel()
{
  return objc_opt_self();
}

uint64_t sub_244D8FDEC(uint64_t a1)
{
  return sub_244D8FE50(a1, 0xD000000000000018, 0x8000000244E57C20, &qword_2574160A0);
}

id static Queues.main.getter()
{
  return sub_244D8FFF4(&qword_257414458, (id *)&qword_2574160A0);
}

uint64_t sub_244D8FE2C(uint64_t a1)
{
  return sub_244D8FE50(a1, 0xD000000000000026, 0x8000000244E57BF0, &qword_2574160A8);
}

uint64_t sub_244D8FE50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  _QWORD v12[2];

  v5 = sub_244E4E6A0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_244E4E1E4();
  MEMORY[0x24BDAC7A8](v6);
  v7 = sub_244E4E6C4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244D9003C();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BEE5758], v7);
  sub_244E4E1CC();
  v12[1] = MEMORY[0x24BEE4AF8];
  sub_244D90078();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574160C0);
  sub_244D900C0();
  sub_244E4E838();
  result = sub_244E4E6DC();
  *a4 = result;
  return result;
}

id static Queues.cleanupSerialQueue.getter()
{
  return sub_244D8FFF4(&qword_257414460, (id *)&qword_2574160A8);
}

id sub_244D8FFF4(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

ValueMetadata *type metadata accessor for Queues()
{
  return &type metadata for Queues;
}

unint64_t sub_244D9003C()
{
  unint64_t result;

  result = qword_2574160B0;
  if (!qword_2574160B0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2574160B0);
  }
  return result;
}

unint64_t sub_244D90078()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2574160B8;
  if (!qword_2574160B8)
  {
    v1 = sub_244E4E6A0();
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE5698], v1);
    atomic_store(result, (unint64_t *)&qword_2574160B8);
  }
  return result;
}

unint64_t sub_244D900C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2574160C8;
  if (!qword_2574160C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2574160C0);
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_2574160C8);
  }
  return result;
}

uint64_t sub_244D9010C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D91BDC();
  sub_244E4EBEC();
  LOBYTE(v15) = 0;
  sub_244E4C384();
  sub_244D91CE4(&qword_2574162C8, MEMORY[0x24BDCE920]);
  sub_244E4EA90();
  if (!v2)
  {
    v9 = type metadata accessor for DiscoveryCacheContent(0);
    LOBYTE(v15) = 1;
    sub_244E4EA60();
    v10 = (uint64_t *)(v3 + *(int *)(v9 + 24));
    v12 = *v10;
    v11 = v10[1];
    v15 = v12;
    v16 = v11;
    v14[15] = 2;
    sub_244D91D24();
    sub_244E4EA90();
    LOBYTE(v15) = 3;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_244D902D4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v25 = a2;
  v3 = sub_244E4C384();
  v26 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v28 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162A0);
  v5 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for DiscoveryCacheContent(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D91BDC();
  v29 = v7;
  v11 = (uint64_t)v30;
  sub_244E4EBE0();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v12 = v5;
  v30 = a1;
  v13 = v26;
  LOBYTE(v31) = 0;
  sub_244D91CE4(&qword_2574162B0, MEMORY[0x24BDCE960]);
  v14 = v27;
  sub_244E4EA24();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v28, v3);
  LOBYTE(v31) = 1;
  v15 = sub_244E4E9F4();
  v16 = (uint64_t *)&v10[v8[5]];
  *v16 = v15;
  v16[1] = v17;
  v33 = 2;
  sub_244D91C20();
  sub_244E4EA24();
  v18 = v32;
  v19 = &v10[v8[6]];
  *(_QWORD *)v19 = v31;
  *((_QWORD *)v19 + 1) = v18;
  LOBYTE(v31) = 3;
  v20 = sub_244E4E9F4();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v29, v14);
  v23 = (uint64_t *)&v10[v8[7]];
  *v23 = v20;
  v23[1] = v22;
  sub_244D91C64((uint64_t)v10, v25);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  return sub_244D91CA8((uint64_t)v10);
}

uint64_t sub_244D90630()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244D90658 + 4 * byte_244E52A10[*v0]))(1702125924, 0xE400000000000000);
}

uint64_t sub_244D90658()
{
  return 0x6E6F69676572;
}

uint64_t sub_244D9066C()
{
  return 0x74736566696E616DLL;
}

uint64_t sub_244D90698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D92628(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D906BC()
{
  sub_244D91BDC();
  return sub_244E4EC04();
}

uint64_t sub_244D906E4()
{
  sub_244D91BDC();
  return sub_244E4EC10();
}

uint64_t sub_244D9070C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_244D902D4(a1, a2);
}

uint64_t sub_244D90720(_QWORD *a1)
{
  return sub_244D9010C(a1);
}

uint64_t sub_244D90734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a7;
  v29 = a6;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162D8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v29 - v16;
  v18 = (int *)type metadata accessor for DiscoveryCacheContent(0);
  v19 = *((_QWORD *)v18 - 1);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_244E4C384();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v21, a1, v22);
  v23 = &v21[v18[5]];
  *(_QWORD *)v23 = a2;
  *((_QWORD *)v23 + 1) = a3;
  v24 = &v21[v18[6]];
  *(_QWORD *)v24 = a4;
  *((_QWORD *)v24 + 1) = a5;
  v25 = &v21[v18[7]];
  v26 = v30;
  *(_QWORD *)v25 = v29;
  *((_QWORD *)v25 + 1) = v26;
  sub_244D91C64((uint64_t)v21, (uint64_t)v17);
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v19 + 56))(v17, 0, 1, v18);
  sub_244D91DAC((uint64_t)v17, (uint64_t)v15);
  v27 = v31 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_244D91DF4((uint64_t)v15, v27);
  swift_endAccess();
  sub_244D92154();
  return sub_244D91CA8((uint64_t)v21);
}

uint64_t sub_244D908F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162D8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  v8 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  swift_beginAccess();
  sub_244D91DF4((uint64_t)v6, v8);
  swift_endAccess();
  sub_244D91E80();
  if (qword_257414430 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v1, (uint64_t)qword_257419E90);
  sub_244D91E3C(v9, (uint64_t)v3, &qword_2574145A0);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v3, 1, v10) == 1)
    return sub_244D66F54((uint64_t)v3, &qword_2574145A0);
  v13 = sub_244E4DCBC();
  v14 = sub_244E4E670();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_244D61000, v13, v14, "Discovery cache released", v15, 2u);
    MEMORY[0x2495283BC](v15, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v3, v10);
}

uint64_t sub_244D90AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  int v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414F88);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162D8);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v44 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v38 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v38 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v38 - v17;
  v19 = type metadata accessor for DiscoveryCacheContent(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v43 = (uint64_t)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v38 - v23;
  if (sub_244D90EEC())
    goto LABEL_14;
  v39 = a1;
  v40 = a2;
  v41 = v13;
  v25 = v2 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  swift_beginAccess();
  sub_244D91E3C(v25, (uint64_t)v16, &qword_2574162D8);
  v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v26 = v42(v16, 1, v19);
  sub_244D66F54((uint64_t)v16, &qword_2574162D8);
  if (v26 == 1 && (sub_244D910B8() & 1) == 0)
    goto LABEL_12;
  sub_244D91E3C(v25, (uint64_t)v18, &qword_2574162D8);
  if (v42(v18, 1, v19) == 1)
  {
LABEL_13:
    sub_244D66F54((uint64_t)v18, &qword_2574162D8);
    goto LABEL_14;
  }
  sub_244D91D68((uint64_t)v18, (uint64_t)v24);
  v27 = &v24[*(int *)(v19 + 20)];
  v28 = *((_QWORD *)v27 + 1);
  v47 = *(_QWORD *)v27;
  v48 = v28;
  v45 = v39;
  v46 = v40;
  v29 = sub_244E4C3FC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v7, 1, 1, v29);
  sub_244D70D08();
  swift_bridgeObjectRetain();
  v30 = sub_244E4E814();
  sub_244D66F54((uint64_t)v7, &qword_257414F88);
  swift_bridgeObjectRelease();
  sub_244D91CA8((uint64_t)v24);
  v31 = (uint64_t)v41;
  if (v30)
  {
LABEL_14:
    sub_244D908F4();
    return 0;
  }
  v32 = v44;
  sub_244D91E3C(v25, v44, &qword_2574162D8);
  v33 = v42((char *)v32, 1, v19);
  sub_244D66F54(v32, &qword_2574162D8);
  if (v33 == 1 && (sub_244D910B8() & 1) == 0)
  {
    v18 = (char *)v31;
LABEL_12:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    goto LABEL_13;
  }
  sub_244D91E3C(v25, v31, &qword_2574162D8);
  if (v42((char *)v31, 1, v19) == 1)
  {
    v18 = (char *)v31;
    goto LABEL_13;
  }
  v34 = v31;
  v35 = v43;
  sub_244D91D68(v34, v43);
  v36 = *(_QWORD *)(v35 + *(int *)(v19 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_244D91CA8(v35);
  return v36;
}

BOOL sub_244D90EEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  double v14;
  double v15;
  uint64_t v17;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162D8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v17 - v5;
  v7 = type metadata accessor for DiscoveryCacheContent(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
  swift_beginAccess();
  sub_244D91E3C(v11, (uint64_t)v4, &qword_2574162D8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v13 = v12(v4, 1, v7);
  sub_244D66F54((uint64_t)v4, &qword_2574162D8);
  if (v13 == 1 && (sub_244D910B8() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  else
  {
    sub_244D91E3C(v11, (uint64_t)v6, &qword_2574162D8);
    if (v12(v6, 1, v7) != 1)
    {
      sub_244D91D68((uint64_t)v6, (uint64_t)v10);
      sub_244E4C348();
      v15 = fabs(v14);
      sub_244D91CA8((uint64_t)v10);
      return v15 > 3600.0;
    }
  }
  sub_244D66F54((uint64_t)v6, &qword_2574162D8);
  return 1;
}

uint64_t sub_244D910B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[2];
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;

  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)v33 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162D8);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v33[0] = (uint64_t)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v34 = (char *)v33 - v5;
  MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)v33 - v6;
  v7 = type metadata accessor for DiscoveryCacheContent(0);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244E4C2AC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_244E4CA20();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4CA14();
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_244E4E88C();
  sub_244E4DCB0();
  v18 = sub_244E4DC50();
  v20 = v19;
  swift_bridgeObjectRelease();
  v40 = v18;
  v41 = v20;
  sub_244E4E3F4();
  sub_244E4C234();
  swift_bridgeObjectRelease();
  v21 = sub_244E4C9E4();
  v23 = v22;
  v24 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  v25 = v35;
  sub_244DC4BD4(v35);
  sub_244D651AC(v21, v23);
  v26 = v36;
  v27 = v37;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v25, 1, v37) == 1)
  {
    sub_244D66F54(v25, &qword_2574162D8);
    return 0;
  }
  else
  {
    sub_244D91D68(v25, (uint64_t)v9);
    sub_244D91D68((uint64_t)v9, v24);
    v30 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56);
    v28 = 1;
    v30(v24, 0, 1, v27);
    v31 = v33[0];
    sub_244D91DAC(v24, v33[0]);
    v32 = v33[1] + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache;
    swift_beginAccess();
    sub_244D91DF4(v31, v32);
    swift_endAccess();
  }
  return v28;
}

uint64_t sub_244D91530()
{
  uint64_t v0;

  sub_244D66F54(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon14DiscoveryCache_cache, &qword_2574162D8);
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t sub_244D91564()
{
  return type metadata accessor for DiscoveryCache(0);
}

uint64_t type metadata accessor for DiscoveryCache(uint64_t a1)
{
  return sub_244D9166C(a1, (uint64_t *)&unk_257416100);
}

void sub_244D91580()
{
  unint64_t v0;

  sub_244D91604();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_244D91604()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257416110)
  {
    type metadata accessor for DiscoveryCacheContent(255);
    v0 = sub_244E4E7C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257416110);
  }
}

uint64_t type metadata accessor for DiscoveryCacheContent(uint64_t a1)
{
  return sub_244D9166C(a1, qword_257416260);
}

uint64_t sub_244D9166C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *sub_244D916A0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_244E4C384();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[7];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_244D91768(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244E4C384();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244D917D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v6 = sub_244E4C384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_244D9186C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = sub_244E4C384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = a3[7];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244D91940(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_244E4C384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_244D919B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_244E4C384();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[7];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (uint64_t *)(a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244D91A54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244D91A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_244E4C384();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_244D91AE0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244D91AEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_244E4C384();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_244D91B68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244E4C384();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_244D91BDC()
{
  unint64_t result;

  result = qword_2574162A8;
  if (!qword_2574162A8)
  {
    result = MEMORY[0x2495282F0](&unk_244E52BCC, &type metadata for DiscoveryCacheContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574162A8);
  }
  return result;
}

unint64_t sub_244D91C20()
{
  unint64_t result;

  result = qword_2574162B8;
  if (!qword_2574162B8)
  {
    result = MEMORY[0x2495282F0](&unk_244E55B3C, &type metadata for DiscoveryManifest);
    atomic_store(result, (unint64_t *)&qword_2574162B8);
  }
  return result;
}

uint64_t sub_244D91C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D91CA8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244D91CE4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_244E4C384();
    result = MEMORY[0x2495282F0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_244D91D24()
{
  unint64_t result;

  result = qword_2574162D0;
  if (!qword_2574162D0)
  {
    result = MEMORY[0x2495282F0](&unk_244E55B14, &type metadata for DiscoveryManifest);
    atomic_store(result, (unint64_t *)&qword_2574162D0);
  }
  return result;
}

uint64_t sub_244D91D68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DiscoveryCacheContent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D91DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D91DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574162D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D91E3C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_244D91E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  unint64_t v14;

  v12[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v12[0]);
  v0 = sub_244E4C2AC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244E4CA20();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4CA14();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_244E4E88C();
  sub_244E4DCB0();
  v8 = sub_244E4DC50();
  v10 = v9;
  swift_bridgeObjectRelease();
  v13 = v8;
  v14 = v10;
  sub_244E4E3F4();
  sub_244E4C234();
  swift_bridgeObjectRelease();
  sub_244E4C9FC();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_244D92154()
{
  uint64_t v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v20);
  v1 = (char *)&v18 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = sub_244E4C2AC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244E4CA20();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_244E0FCA0();
  if (v11 >> 60 != 15)
  {
    v12 = result;
    v13 = v11;
    v18 = v1;
    sub_244E4CA14();
    v21 = 0;
    v22 = 0xE000000000000000;
    sub_244E4E88C();
    sub_244E4DCB0();
    v14 = sub_244E4DC50();
    v19 = v12;
    v16 = v15;
    swift_bridgeObjectRelease();
    v21 = v14;
    v22 = v16;
    v17 = v19;
    sub_244E4E3F4();
    sub_244E4C234();
    swift_bridgeObjectRelease();
    sub_244E4C9F0();
    sub_244D65198(v17, v13);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DiscoveryCacheContent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_244D924D0 + 4 * byte_244E52A19[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_244D92504 + 4 * byte_244E52A14[v4]))();
}

uint64_t sub_244D92504(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D9250C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D92514);
  return result;
}

uint64_t sub_244D92520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D92528);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_244D9252C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D92534(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryCacheContent.CodingKeys()
{
  return &type metadata for DiscoveryCacheContent.CodingKeys;
}

unint64_t sub_244D92554()
{
  unint64_t result;

  result = qword_2574162E0;
  if (!qword_2574162E0)
  {
    result = MEMORY[0x2495282F0](&unk_244E52BA4, &type metadata for DiscoveryCacheContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574162E0);
  }
  return result;
}

unint64_t sub_244D9259C()
{
  unint64_t result;

  result = qword_2574162E8;
  if (!qword_2574162E8)
  {
    result = MEMORY[0x2495282F0](&unk_244E52B14, &type metadata for DiscoveryCacheContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574162E8);
  }
  return result;
}

unint64_t sub_244D925E4()
{
  unint64_t result;

  result = qword_2574162F0;
  if (!qword_2574162F0)
  {
    result = MEMORY[0x2495282F0](&unk_244E52B3C, &type metadata for DiscoveryCacheContent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574162F0);
  }
  return result;
}

uint64_t sub_244D92628(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69676572 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74736566696E616DLL && a2 == 0xE800000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74736566696E616DLL && a2 == 0xEE006E6F69676552)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_244D927E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_QWORD, _QWORD, _QWORD);
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint8_t *v28;
  uint64_t v29;
  double v30;
  char *v31;
  double v32;
  double v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void);
  char v37;
  id v38;
  void *v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t (*v45)(void);
  char v46;
  id v47;
  void *v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t result;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unsigned int (*v73)(_QWORD, _QWORD, _QWORD);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  _OWORD *v77;
  uint64_t v78;
  _OWORD v79[2];
  __int128 v80;
  __int128 v81;
  unsigned __int8 v82;
  char v83;
  char v84;
  char v85;
  char v86;
  char v87;
  char v88;
  __int128 v89;

  v4 = v3;
  v77 = a3;
  v7 = sub_244E4C384();
  v75 = *(_QWORD *)(v7 - 8);
  v76 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v74 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v68 - v13;
  if (qword_257414400 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v9, (uint64_t)qword_257419E00);
  sub_244D640E4(v15, (uint64_t)v14);
  v16 = sub_244E4DCD4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v17 + 48);
  if (v18(v14, 1, v16) == 1)
  {
    sub_244D66F54((uint64_t)v14, &qword_2574145A0);
  }
  else
  {
    v73 = v18;
    swift_bridgeObjectRetain_n();
    v19 = sub_244E4DCBC();
    v20 = sub_244E4E670();
    if (os_log_type_enabled(v19, v20))
    {
      v72 = v16;
      v21 = swift_slowAlloc();
      v69 = v4;
      v22 = (uint8_t *)v21;
      v23 = swift_slowAlloc();
      v70 = v17;
      v24 = v23;
      *(_QWORD *)&v80 = v23;
      v68 = v15;
      *(_DWORD *)v22 = 136380675;
      v25 = sub_244E4DAB8();
      v71 = v12;
      *(_QWORD *)&v79[0] = sub_244D9A70C(v25, v26, (uint64_t *)&v80);
      v16 = v72;
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v19, v20, "status: %{private}s", v22, 0xCu);
      swift_arrayDestroy();
      v27 = v24;
      v17 = v70;
      MEMORY[0x2495283BC](v27, -1, -1);
      v28 = v22;
      v4 = v69;
      MEMORY[0x2495283BC](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  v29 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0)
    v29 = a1 & 0xFFFFFFFFFFFFLL;
  if (v29)
  {
    sub_244E4DAD0();
    if ((BYTE8(v80) & 1) != 0)
    {
      LODWORD(v29) = 0;
    }
    else
    {
      v30 = *(double *)&v80;
      v31 = v74;
      sub_244E4C378();
      sub_244E4C354();
      v33 = v32;
      (*(void (**)(char *, uint64_t))(v75 + 8))(v31, v76);
      LODWORD(v29) = v33 <= v30;
    }
  }
  v34 = qword_244E52D00[*(char *)(v4 + 24)];
  if ((_DWORD)v29)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = 0;
    a2 = 0xE000000000000000;
  }
  v35 = sub_244D93F84(a1, a2, v34);
  swift_bridgeObjectRelease();
  v36 = (uint64_t (*)(void))sub_244E4D86C();
  v37 = v36();
  swift_release();
  if ((v37 & 1) != 0)
  {
    v38 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v39 = (void *)sub_244E4E2F8();
    v40 = objc_msgSend(v38, sel_BOOLForKey_, v39);

    if (v40)
    {
      v41 = sub_244E4E31C();
      v43 = v42;
      *((_QWORD *)&v81 + 1) = MEMORY[0x24BEE1328];
      LOBYTE(v80) = 1;
      sub_244D6B058(&v80, v79);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v78 = v35;
      sub_244DE47E8(v79, v41, v43, isUniquelyReferenced_nonNull_native);
      v35 = v78;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  v45 = (uint64_t (*)(void))sub_244E4D86C();
  v46 = v45();
  swift_release();
  if ((v46 & 1) != 0)
  {
    v47 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v48 = (void *)sub_244E4E2F8();
    v49 = objc_msgSend(v47, sel_BOOLForKey_, v48);

    if (v49)
    {
      v50 = sub_244E4E31C();
      v52 = v51;
      *((_QWORD *)&v81 + 1) = MEMORY[0x24BEE1328];
      LOBYTE(v80) = 0;
      sub_244D6B058(&v80, v79);
      v53 = swift_isUniquelyReferenced_nonNull_native();
      v78 = v35;
      sub_244DE47E8(v79, v50, v52, v53);
      v35 = v78;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  result = sub_244D934A4(v35, (uint64_t)&v80);
  v55 = v81;
  v56 = v89;
  v57 = 256;
  if (!v83)
    v57 = 0;
  v58 = v57 | v82;
  v59 = 0x10000;
  if (!v84)
    v59 = 0;
  v60 = 0x1000000;
  if (!v85)
    v60 = 0;
  v61 = v58 | v59 | v60;
  v62 = 0x100000000;
  if (!v86)
    v62 = 0;
  v63 = 0x10000000000;
  if (!v87)
    v63 = 0;
  v64 = v62 | v63;
  v65 = 0x1000000000000;
  if (!v88)
    v65 = 0;
  v66 = v61 | v64 | v65;
  v67 = v77;
  *v77 = v80;
  v67[1] = v55;
  *((_QWORD *)v67 + 4) = v66;
  *(_OWORD *)((char *)v67 + 40) = v56;
  return result;
}

uint64_t sub_244D92FE8()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRStatusTask()
{
  return objc_opt_self();
}

uint64_t destroy for ReaderInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReaderInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_WORD *)(a1 + 37) = *(_WORD *)(a2 + 37);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReaderInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  *(_BYTE *)(a1 + 38) = *(_BYTE *)(a2 + 38);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ReaderInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  *(_BYTE *)(a1 + 34) = *(_BYTE *)(a2 + 34);
  *(_BYTE *)(a1 + 35) = *(_BYTE *)(a2 + 35);
  *(_BYTE *)(a1 + 36) = *(_BYTE *)(a2 + 36);
  *(_BYTE *)(a1 + 37) = *(_BYTE *)(a2 + 37);
  *(_BYTE *)(a1 + 38) = *(_BYTE *)(a2 + 38);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReaderInfo(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ReaderInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderInfo()
{
  return &type metadata for ReaderInfo;
}

uint64_t getEnumTagSinglePayload for ContentEnvironment(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SPRStatusTask.Mode(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_244D933DC + 4 * byte_244E52C55[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_244D93410 + 4 * byte_244E52C50[v4]))();
}

uint64_t sub_244D93410(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D93418(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D93420);
  return result;
}

uint64_t sub_244D9342C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D93434);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_244D93438(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D93440(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SPRStatusTask.Mode()
{
  return &type metadata for SPRStatusTask.Mode;
}

unint64_t sub_244D93460()
{
  unint64_t result;

  result = qword_2574163A8;
  if (!qword_2574163A8)
  {
    result = MEMORY[0x2495282F0](&unk_244E52CD4, &type metadata for SPRStatusTask.Mode);
    atomic_store(result, (unint64_t *)&qword_2574163A8);
  }
  return result;
}

uint64_t sub_244D934A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  int v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v30;
  uint64_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char v71;
  uint64_t result;
  uint64_t v73;
  uint8_t *v74;
  uint8_t *v75;
  uint8_t *v76;
  uint64_t v77;
  int v78;
  uint8_t *v79;
  uint64_t v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint8_t *v84;
  __int128 v85;
  __int128 v86;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D66F54((uint64_t)v6, &qword_2574145A0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E670();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v82 = swift_slowAlloc();
      *(_QWORD *)&v85 = v82;
      v81 = v12;
      *(_DWORD *)v12 = 136380675;
      v79 = v12 + 4;
      swift_bridgeObjectRetain();
      v80 = MEMORY[0x24BEE4AD8] + 8;
      v13 = sub_244E4E2B0();
      v15 = v14;
      swift_bridgeObjectRelease();
      v83 = sub_244D9A70C(v13, v15, (uint64_t *)&v85);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v16 = v11;
      v17 = v81;
      _os_log_impl(&dword_244D61000, v10, v16, "status result: %{private}s", v81, 0xCu);
      v18 = v82;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v18, -1, -1);
      MEMORY[0x2495283BC](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v19 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v21 = sub_244DC859C(v19, v20), (v22 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v86 + 1))
  {
    v23 = swift_dynamicCast();
    if (v23)
      v24 = v83;
    else
      v24 = 0;
    if (v23)
      v25 = v84;
    else
      v25 = 0;
    v81 = v25;
    v82 = v24;
  }
  else
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    v81 = 0;
    v82 = 0;
  }
  v26 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v28 = sub_244DC859C(v26, v27), (v29 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v28, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v86 + 1))
  {
    v30 = swift_dynamicCast();
    if (v30)
      v31 = v83;
    else
      v31 = 0;
    if (v30)
      v32 = v84;
    else
      v32 = 0;
    v79 = v32;
    v80 = v31;
  }
  else
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    v79 = 0;
    v80 = 0;
  }
  v33 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v35 = sub_244DC859C(v33, v34), (v36 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v35, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v86 + 1))
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    goto LABEL_43;
  }
  if (!swift_dynamicCast())
  {
LABEL_43:
    v37 = 1;
    goto LABEL_44;
  }
  v37 = v83;
LABEL_44:
  v78 = v37;
  v38 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v40 = sub_244DC859C(v38, v39), (v41 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v40, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v86 + 1))
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    goto LABEL_52;
  }
  if (!swift_dynamicCast())
  {
LABEL_52:
    v42 = 1;
    goto LABEL_53;
  }
  v42 = v83;
LABEL_53:
  v43 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v45 = sub_244DC859C(v43, v44), (v46 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v45, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v86 + 1))
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    goto LABEL_61;
  }
  if (!swift_dynamicCast())
  {
LABEL_61:
    v47 = 1;
    goto LABEL_62;
  }
  v47 = v83;
LABEL_62:
  v48 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v50 = sub_244DC859C(v48, v49), (v51 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v50, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v86 + 1))
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    goto LABEL_70;
  }
  if (!swift_dynamicCast())
  {
LABEL_70:
    v52 = 0;
    goto LABEL_71;
  }
  v52 = v83;
LABEL_71:
  v53 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v55 = sub_244DC859C(v53, v54), (v56 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v55, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v86 + 1))
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    goto LABEL_79;
  }
  if (!swift_dynamicCast())
  {
LABEL_79:
    v57 = 0;
    goto LABEL_80;
  }
  v57 = v83;
LABEL_80:
  v58 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v60 = sub_244DC859C(v58, v59), (v61 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v60, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v86 + 1))
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    goto LABEL_88;
  }
  if (!swift_dynamicCast())
  {
LABEL_88:
    v62 = 0;
    goto LABEL_89;
  }
  v62 = v83;
LABEL_89:
  v63 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v65 = sub_244DC859C(v63, v64), (v66 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v65, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v86 + 1))
  {
    sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    goto LABEL_97;
  }
  if (!swift_dynamicCast())
  {
LABEL_97:
    v67 = 0;
    goto LABEL_98;
  }
  v67 = v83;
LABEL_98:
  v68 = sub_244E4E31C();
  if (*(_QWORD *)(a1 + 16) && (v70 = sub_244DC859C(v68, v69), (v71 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v70, (uint64_t)&v85);
  }
  else
  {
    v85 = 0u;
    v86 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v86 + 1))
  {
    result = swift_dynamicCast();
    v73 = v83;
    v74 = v84;
    if (!(_DWORD)result)
    {
      v73 = 0;
      v74 = 0;
    }
  }
  else
  {
    result = sub_244D66F54((uint64_t)&v85, &qword_257414A38);
    v73 = 0;
    v74 = 0;
  }
  v75 = v81;
  *(_QWORD *)a2 = v82;
  *(_QWORD *)(a2 + 8) = v75;
  v76 = v79;
  *(_QWORD *)(a2 + 16) = v80;
  *(_QWORD *)(a2 + 24) = v76;
  *(_BYTE *)(a2 + 32) = v78;
  *(_BYTE *)(a2 + 33) = v42;
  *(_BYTE *)(a2 + 34) = v47;
  *(_BYTE *)(a2 + 35) = v52;
  *(_BYTE *)(a2 + 36) = v57;
  *(_BYTE *)(a2 + 37) = v62;
  *(_BYTE *)(a2 + 38) = v67;
  *(_QWORD *)(a2 + 40) = v73;
  *(_QWORD *)(a2 + 48) = v74;
  return result;
}

uint64_t sub_244D93D98(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v3 = sub_244E4E6A0();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v3);
  v5 = sub_244E4E1E4();
  MEMORY[0x24BDAC7A8](v5);
  v6 = sub_244E4E6C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MockSPRReader();
  *(_QWORD *)(v1 + 24) = swift_allocObject();
  sub_244D9003C();
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BEE5758], v6);
  sub_244E4E1CC();
  v11[1] = MEMORY[0x24BEE4AF8];
  sub_244D65324((unint64_t *)&qword_2574160B8, v4, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574160C0);
  sub_244D9BFAC((unint64_t *)&qword_2574160C8, &qword_2574160C0);
  sub_244E4E838();
  *(_QWORD *)(v1 + 32) = sub_244E4E6DC();
  *(_OWORD *)(v1 + 40) = 0u;
  *(_OWORD *)(v1 + 56) = 0u;
  *(_BYTE *)(v1 + 16) = a1;
  return v1;
}

uint64_t sub_244D93F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v3 + 16) == 1)
    return sub_244DB91D0();
  swift_bridgeObjectRetain();
  v11 = sub_244D9ADC8(0, v3, a1, a2, a3);
  if (v4)
  {
    swift_bridgeObjectRelease();
    if (qword_257414400 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v8, (uint64_t)qword_257419E00);
    sub_244D640E4(v12, (uint64_t)v10);
    v13 = sub_244E4DCD4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v13) == 1)
    {
      sub_244D6412C((uint64_t)v10);
    }
    else
    {
      v15 = v4;
      v16 = v4;
      v3 = (uint64_t)v10;
      v17 = sub_244E4DCBC();
      v18 = sub_244E4E67C();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        v26 = (uint64_t)v4;
        v27 = v25;
        *(_DWORD *)v19 = 136446210;
        v24[1] = v19 + 4;
        v20 = v4;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
        v21 = sub_244E4E370();
        v26 = sub_244D9A70C(v21, v22, &v27);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_244D61000, v17, v18, "Status error: [ %{public}s ]", v19, 0xCu);
        v3 = v25;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v3, -1, -1);
        MEMORY[0x2495283BC](v19, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
    }
    swift_willThrow();
  }
  else
  {
    v3 = v11;
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_244D94258(void *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint8_t *v16;
  void *v17;
  id v18;
  id v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  id v26;
  id v27[2];

  v26 = a1;
  v27[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E00);
  sub_244D640E4(v9, (uint64_t)v8);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_244D6412C((uint64_t)v8);
  }
  else
  {
    v24 = a3;
    v25 = v3;
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = a2;
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_244D61000, v12, v13, "Requesting status", v15, 2u);
      v16 = v15;
      a2 = v14;
      MEMORY[0x2495283BC](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    a3 = v24;
  }
  v17 = (void *)sub_244E4E2F8();
  v27[0] = 0;
  v18 = objc_msgSend(v26, sel_statusWithToken_options_error_, v17, a2, v27);

  v19 = v27[0];
  if (v18)
  {
    v20 = sub_244E4E2A4();
    v21 = v19;

    *a3 = v20;
  }
  else
  {
    v22 = v27[0];
    sub_244E4C1E0();

    swift_willThrow();
  }
}

uint64_t sub_244D944C0(uint8_t *a1, uint64_t a2, char a3, char a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v4 + 16) == 1)
  {
    v13 = sub_244DB27A8(MEMORY[0x24BEE4AF8]);
    return sub_244DC895C(v13);
  }
  else
  {
    swift_bridgeObjectRetain();
    v14 = sub_244D9B600(0, v4, (uint64_t)a1, a2, a3 & 1, a4 & 1);
    if (v5)
    {
      swift_bridgeObjectRelease();
      if (qword_257414400 != -1)
        swift_once();
      v15 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
      sub_244D640E4(v15, (uint64_t)v12);
      v16 = sub_244E4DCD4();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v16) == 1)
      {
        sub_244D6412C((uint64_t)v12);
      }
      else
      {
        v18 = v5;
        v19 = v5;
        v20 = sub_244E4DCBC();
        v21 = sub_244E4E67C();
        if (os_log_type_enabled(v20, v21))
        {
          a1 = (uint8_t *)swift_slowAlloc();
          v28 = swift_slowAlloc();
          v29 = (uint64_t)v5;
          v30 = v28;
          *(_DWORD *)a1 = 136446210;
          v27[1] = a1 + 4;
          v22 = v5;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
          v23 = sub_244E4E370();
          v29 = sub_244D9A70C(v23, v24, &v30);
          sub_244E4E7E4();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_244D61000, v20, v21, "Prepare error: [ %{public}s ]", a1, 0xCu);
          v25 = v28;
          swift_arrayDestroy();
          MEMORY[0x2495283BC](v25, -1, -1);
          MEMORY[0x2495283BC](a1, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v16);
      }
      swift_willThrow();
    }
    else
    {
      a1 = (uint8_t *)v14;
      swift_bridgeObjectRelease();
    }
  }
  return (uint64_t)a1;
}

uint64_t sub_244D947C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t (*v20)(void);
  char v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t (*v26)(void);
  char v27;
  id v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t result;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint64_t v46;
  uint8_t *v47;
  uint8_t *v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  int v56;
  int v57;
  id v58;
  id v59[2];

  v56 = a4;
  v57 = a5;
  v54 = a6;
  v55 = a3;
  v53 = a2;
  v58 = a1;
  v59[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v50 - v10;
  if (qword_257414400 != -1)
    swift_once();
  v52 = v9;
  v12 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E00);
  sub_244D640E4(v12, (uint64_t)v11);
  v13 = sub_244E4DCD4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v51 = v14;
  if (v16 == 1)
  {
    sub_244D6412C((uint64_t)v11);
  }
  else
  {
    v17 = sub_244E4DCBC();
    v18 = sub_244E4E688();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_244D61000, v17, v18, "Requesting prepare", v19, 2u);
      MEMORY[0x2495283BC](v19, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  v20 = (uint64_t (*)(void))sub_244E4D86C();
  v21 = v20();
  swift_release();
  if ((v21 & 1) != 0
    && (v22 = (void *)objc_opt_self(),
        v23 = objc_msgSend(v22, sel_standardUserDefaults),
        v24 = (void *)sub_244E4E2F8(),
        v25 = objc_msgSend(v23, sel_integerForKey_, v24),
        v23,
        v24,
        v25))
  {
    v26 = (uint64_t (*)(void))sub_244E4D86C();
    v27 = v26();
    swift_release();
    if ((v27 & 1) != 0)
    {
      v28 = objc_msgSend(v22, sel_standardUserDefaults);
      v29 = (void *)sub_244E4E2F8();
      v30 = objc_msgSend(v28, sel_integerForKey_, v29);

    }
    else
    {
      v30 = 0;
    }
    v41 = (uint64_t)v52;
    sub_244D640E4(v12, (uint64_t)v52);
    v42 = v15((char *)v41, 1, v13);
    v43 = v51;
    if (v42 == 1)
    {
      sub_244D6412C(v41);
    }
    else
    {
      v44 = sub_244E4DCBC();
      v45 = sub_244E4E688();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = v43;
        v47 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v47 = 134217984;
        v59[0] = v30;
        sub_244E4E7E4();
        _os_log_impl(&dword_244D61000, v44, v45, "mockSPRConfigError = %ld", v47, 0xCu);
        v48 = v47;
        v43 = v46;
        MEMORY[0x2495283BC](v48, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v41, v13);
    }
    v49 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v40 = (id)sub_244E4E2F8();
    objc_msgSend(v49, sel_initWithDomain_code_userInfo_, v40, v30, 0);
  }
  else
  {
    if (v55)
      v31 = (void *)sub_244E4E2F8();
    else
      v31 = 0;
    v59[0] = 0;
    v32 = objc_msgSend(v58, sel_prepareAndWarnWithToken_force_enableStoreAndForward_error_, v31, v56 & 1, v57 & 1, v59);

    v33 = v59[0];
    if (v32)
    {
      v34 = sub_244E4E2A4();
      v35 = v33;

      result = sub_244DC895C(v34);
      v37 = v54;
      *v54 = result;
      v37[1] = v38;
      v37[2] = v39;
      return result;
    }
    v40 = v59[0];
    sub_244E4C1E0();
  }

  return swift_willThrow();
}

uint64_t sub_244D94C98(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  id v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v4 + 16) == 1)
  {
    if ((a3 & 1) != 0)
    {
      v16 = sub_244E4E55C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
      v17 = (_QWORD *)swift_allocObject();
      v17[2] = 0;
      v17[3] = 0;
      v17[4] = a4;
      swift_retain();
      sub_244E378C0((uint64_t)v15, (uint64_t)&unk_257416580, (uint64_t)v17);
      return swift_release();
    }
    else
    {
      return sub_244DB610C(0, 0);
    }
  }
  else
  {
    swift_retain();
    swift_bridgeObjectRetain();
    result = sub_244D98DA8(0, (_QWORD *)v4, a1, a2, a3 & 1, a4, v19);
    if (v5)
    {
      if (qword_257414400 != -1)
        swift_once();
      v20 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
      sub_244D640E4(v20, (uint64_t)v12);
      v21 = sub_244E4DCD4();
      v22 = *(_QWORD *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21) == 1)
      {
        sub_244D6412C((uint64_t)v12);
      }
      else
      {
        v23 = v5;
        v24 = v5;
        v25 = sub_244E4DCBC();
        v26 = sub_244E4E67C();
        if (os_log_type_enabled(v25, v26))
        {
          v27 = (uint8_t *)swift_slowAlloc();
          v33 = swift_slowAlloc();
          v34 = (uint64_t)v5;
          v35 = v33;
          *(_DWORD *)v27 = 136446210;
          v32[1] = v27 + 4;
          v28 = v5;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
          v29 = sub_244E4E370();
          v34 = sub_244D9A70C(v29, v30, &v35);
          sub_244E4E7E4();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_244D61000, v25, v26, "Install error: [ %{public}s ]", v27, 0xCu);
          v31 = v33;
          swift_arrayDestroy();
          MEMORY[0x2495283BC](v31, -1, -1);
          MEMORY[0x2495283BC](v27, -1, -1);

        }
        else
        {

        }
        (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v21);
      }
      return swift_willThrow();
    }
  }
  return result;
}

void sub_244D95008(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint8_t *v15;
  void *v16;
  uint64_t v17;
  int v18;
  id v19;

  LODWORD(v6) = a4;
  v19 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v7, (uint64_t)qword_257419E00);
  sub_244D640E4(v10, (uint64_t)v9);
  v11 = sub_244E4DCD4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_244D6412C((uint64_t)v9);
  }
  else
  {
    v18 = v6;
    v6 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled((os_log_t)v6, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v17 = a5;
      v15 = v14;
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_244D61000, (os_log_t)v6, v13, "Requesting install", v14, 2u);
      a5 = v17;
      MEMORY[0x2495283BC](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    LOBYTE(v6) = v18;
  }
  v16 = (void *)sub_244E4E2F8();
  objc_msgSend(v19, sel_installAsyncWithToken_force_callback_, v16, v6 & 1, a5);

}

void sub_244D951DC(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t (*v13)(void);
  char v14;
  id v15;
  void *v16;
  unsigned int v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  uint64_t v25;
  id v26;
  char v27;
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E688();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "Requesting to validate read preconditions", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v13 = (uint64_t (*)(void))sub_244E4D86C();
  v14 = v13();
  swift_release();
  if ((v14 & 1) != 0
    && (v15 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v16 = (void *)sub_244E4E2F8(),
        v17 = objc_msgSend(v15, sel_BOOLForKey_, v16),
        v15,
        v16,
        v17))
  {
    sub_244D9BE68();
    swift_allocError();
    *(_QWORD *)v18 = 1;
    *(_BYTE *)(v18 + 8) = 64;
    swift_willThrow();
  }
  else
  {
    v19 = (void *)sub_244DABD48(a2);
    v21 = v19;
    v22 = v20;
    if ((v20 & 0x100) != 0)
    {
      v26 = v19;
      v27 = v20;
      sub_244D954D4((uint64_t *)&v26);
    }
    else
    {
      v26 = 0;
      if (objc_msgSend(a1, sel_validateWithReadParameters_error_, v19, &v26))
      {
        v23 = v26;
      }
      else
      {
        v24 = v26;
        sub_244E4C1E0();

        swift_willThrow();
      }
      sub_244D9BE5C(v21, v22, 0);
    }
  }
}

uint64_t sub_244D954D4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v21[2];
  int v22;
  uint64_t v23;
  uint64_t v24;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *a1;
  LODWORD(v6) = *((unsigned __int8 *)a1 + 8);
  if (qword_257414400 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E00);
  sub_244D640E4(v7, (uint64_t)v4);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E67C();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      v23 = v5;
      v13 = (uint8_t *)v12;
      v14 = swift_slowAlloc();
      v22 = (int)v6;
      v6 = (_QWORD *)v14;
      *(_DWORD *)v13 = 138412290;
      v21[1] = v13 + 4;
      sub_244D9BE68();
      swift_allocError();
      *(_QWORD *)v15 = v23;
      *(_BYTE *)(v15 + 8) = v22;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      v24 = v16;
      sub_244E4E7E4();
      *v6 = v16;
      _os_log_impl(&dword_244D61000, v10, v11, "Error validating read preconditions [ %@ ]", v13, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      v17 = v6;
      LOBYTE(v6) = v22;
      MEMORY[0x2495283BC](v17, -1, -1);
      v18 = v13;
      v5 = v23;
      MEMORY[0x2495283BC](v18, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
  }
  sub_244D9BE68();
  swift_allocError();
  *(_QWORD *)v19 = v5;
  *(_BYTE *)(v19 + 8) = (_BYTE)v6;
  return swift_willThrow();
}

uint64_t sub_244D9573C(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  id v11;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + 16) == 1)
  {
    v8 = *(_QWORD *)(v2 + 24);
    v9 = sub_244E4E55C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 1, 1, v9);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = 0;
    v10[3] = 0;
    v10[4] = a2;
    v10[5] = a1;
    v10[6] = v8;
    swift_retain();
    v11 = a1;
    swift_retain();
    sub_244E378C0((uint64_t)v7, (uint64_t)&unk_257416578, (uint64_t)v10);
    return swift_release();
  }
  else
  {
    swift_retain();
    v13 = a1;
    swift_retain();
    return sub_244D97530(0, v2, v13, a2, v2, v14);
  }
}

void sub_244D95898(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  _QWORD aBlock[6];
  uint64_t v22;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_257419E00);
  sub_244D640E4(v11, (uint64_t)v10);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_244D6412C((uint64_t)v10);
  }
  else
  {
    v20 = a1;
    v22 = a2;
    v14 = sub_244E4DCBC();
    v15 = sub_244E4E688();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_244D61000, v14, v15, "Requesting readCard", v16, 2u);
      MEMORY[0x2495283BC](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    a2 = v22;
    a1 = v20;
  }
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a3;
  aBlock[4] = sub_244D9CA0C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244D95CF8;
  aBlock[3] = &block_descriptor_13;
  v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_readCardWithParameter_delegate_completion_, a2, a3, v18);
  _Block_release(v18);
}

void sub_244D95AD4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  void *v19[2];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    _s3__C4CodeOMa_1(0);
    v19[1] = (void *)14001;
    v10 = a2;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    if ((sub_244E4C12C() & 1) != 0)
    {
      v11 = *(void **)(a3 + 40);
      *(_QWORD *)(a3 + 40) = 0;

    }
    sub_244DC25D4(a2, a1);

  }
  else if (a1)
  {
    v19[0] = a1;
    sub_244DC1AD4(v19[0]);

  }
  else
  {
    if (qword_257414400 != -1)
    {
      v18 = v7;
      swift_once();
      v7 = v18;
    }
    v12 = __swift_project_value_buffer(v7, (uint64_t)qword_257419E00);
    sub_244D640E4(v12, (uint64_t)v9);
    v13 = sub_244E4DCD4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    {
      sub_244D6412C((uint64_t)v9);
    }
    else
    {
      v15 = sub_244E4DCBC();
      v16 = sub_244E4E67C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v17 = 0;
        _os_log_impl(&dword_244D61000, v15, v16, "readCard did not return any error or transactionData", v17, 2u);
        MEMORY[0x2495283BC](v17, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    }
  }
}

void sub_244D95CF8(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_244D95D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v1);
  v2 = *(unsigned __int8 *)(v0 + 16);
  if ((v2 & 1) == 0)
    sub_244D97DCC(0, v0, v2);
}

id sub_244D95FF0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v12;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E00);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v8 = sub_244E4DCBC();
    v9 = sub_244E4E688();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_244D61000, v8, v9, "Cancelling current readCard", v10, 2u);
      MEMORY[0x2495283BC](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v13[0] = 0;
  if ((objc_msgSend(a1, sel_cancelReadAndReturnError_, v13) & 1) != 0)
    return v13[0];
  v12 = v13[0];
  sub_244E4C1E0();

  return (id)swift_willThrow();
}

unint64_t sub_244D961D8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  void *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v10);
  if ((*(_BYTE *)(v4 + 16) & 1) != 0)
    return 0xD000000000000013;
  v29 = (uint64_t)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244D73FC0(a1, a2);
  sub_244D73FAC(a3, a4);
  v13 = sub_244D9C038(0, v4, a1, a2, a3, a4);
  if (v5)
  {
    sub_244D65198(a3, a4);
    sub_244D651AC(a1, a2);
    if (qword_257414400 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
    v15 = v29;
    sub_244D640E4(v14, v29);
    v16 = sub_244E4DCD4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
    {

      sub_244D6412C(v15);
    }
    else
    {
      v18 = v5;
      v19 = v5;
      v20 = sub_244E4DCBC();
      v21 = sub_244E4E67C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v31 = v23;
        *(_DWORD *)v22 = 136446210;
        v28[1] = v22 + 4;
        v30 = (uint64_t)v5;
        v24 = v5;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
        v25 = sub_244E4E370();
        v30 = sub_244D9A70C(v25, v26, &v31);
        sub_244E4E7E4();
        v15 = v29;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_244D61000, v20, v21, "Secure reader blob error: [ %{public}s ]", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v23, -1, -1);
        MEMORY[0x2495283BC](v22, -1, -1);

      }
      else
      {

      }
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
    }
    return 0;
  }
  else
  {
    v12 = v13;
    sub_244D65198(a3, a4);
    sub_244D651AC(a1, a2);
  }
  return v12;
}

void sub_244D96518(void *a1@<X0>, uint64_t a2@<X3>, unint64_t a3@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t (*v14)(_QWORD);
  char v15;
  id v16;
  void *v17;
  unsigned int v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t *v27;
  id v28;
  uint64_t v29;
  uint64_t *v30;
  id v31;
  id v32[2];

  v31 = a1;
  v29 = a2;
  v30 = a4;
  v32[1] = *(id *)MEMORY[0x24BDAC8D0];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v5, (uint64_t)qword_257419E00);
  sub_244D640E4(v8, (uint64_t)v7);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v11 = sub_244E4DCBC();
    v12 = sub_244E4E688();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_244D61000, v11, v12, "Requesting secure reader blob", v13, 2u);
      MEMORY[0x2495283BC](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  v14 = (uint64_t (*)(_QWORD))sub_244E4D86C();
  v15 = v14(v14);
  swift_release();
  if ((v15 & 1) != 0)
  {
    v16 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults, v29);
    v17 = (void *)sub_244E4E2F8();
    v18 = objc_msgSend(v16, sel_BOOLForKey_, v17);

    if (v18)
      objc_msgSend((id)objc_opt_self(), sel_sleepForTimeInterval_, 3.0);
  }
  v19 = (void *)sub_244E4C30C();
  if (a3 >> 60 == 15)
    v20 = 0;
  else
    v20 = (void *)sub_244E4C30C();
  v32[0] = 0;
  v21 = objc_msgSend(v31, sel_generateSecureReaderBlobWithTrxBlob_pinBlob_error_, v19, v20, v32, v29);

  v22 = v32[0];
  if (v21)
  {
    v23 = sub_244E4E31C();
    v25 = v24;
    v26 = v22;

    v27 = v30;
    *v30 = v23;
    v27[1] = v25;
  }
  else
  {
    v28 = v32[0];
    sub_244E4C1E0();

    swift_willThrow();
  }
}

uint64_t sub_244D96820(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t result;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  uint64_t v11[3];

  v2 = v1;
  v4 = *(unsigned __int8 *)(v1 + 16);
  v5 = *(_QWORD *)(a1 + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(a1 + 8), v5);
  if (v4 == 1)
  {
    result = sub_244D633F4();
    if (v7 >> 60 != 15)
    {
      v8 = result;
      v9 = v7;
      v11[0] = result;
      v11[1] = v7;
      sub_244DB8B98(v11, a1, &v10);
      return sub_244D65198(v8, v9);
    }
  }
  else
  {
    result = sub_244D63764(v5);
    if (result)
    {
      v11[0] = result;
      sub_244D96904(v11, v2, a1);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_244D96904(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD aBlock[6];
  _OWORD v23[3];
  uint64_t v24;

  v6 = sub_244E4E1B4();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5458];
  v21 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_244E4E1E4();
  v10 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v19 = *(_QWORD *)(a2 + 32);
  v14 = swift_allocObject();
  swift_weakInit();
  sub_244D9BF14(a3, (uint64_t)v23);
  v15 = swift_allocObject();
  v16 = v23[1];
  *(_OWORD *)(v15 + 24) = v23[0];
  *(_QWORD *)(v15 + 16) = v14;
  *(_OWORD *)(v15 + 40) = v16;
  *(_OWORD *)(v15 + 56) = v23[2];
  *(_QWORD *)(v15 + 72) = v13;
  aBlock[4] = sub_244D9BF84;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244DB30BC;
  aBlock[3] = &block_descriptor_1;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_244E4E1CC();
  v24 = MEMORY[0x24BEE4AF8];
  sub_244D65324((unint64_t *)&qword_257418D20, v7, MEMORY[0x24BEE5468]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416570);
  sub_244D9BFAC((unint64_t *)&qword_257418D30, &qword_257416570);
  sub_244E4E838();
  MEMORY[0x24952796C](0, v12, v9, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_244D96B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_QWORD, _QWORD, _QWORD);
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD, _QWORD, _QWORD);
  uint64_t v34;
  _BYTE v35[48];
  uint64_t v36[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - v7;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_257414400 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v5, (uint64_t)qword_257419E00);
    sub_244D640E4(v10, (uint64_t)v8);
    v11 = sub_244E4DCD4();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v12 + 48);
    if (v13(v8, 1, v11) == 1)
    {
      v14 = sub_244D6412C((uint64_t)v8);
    }
    else
    {
      v33 = v13;
      sub_244D9BF14(a2, (uint64_t)v35);
      swift_bridgeObjectRetain_n();
      v15 = sub_244E4DCBC();
      v16 = sub_244E4E688();
      v17 = v16;
      if (os_log_type_enabled(v15, v16))
      {
        v18 = swift_slowAlloc();
        v32 = v12;
        v19 = v18;
        v29 = swift_slowAlloc();
        v36[0] = v29;
        *(_DWORD *)v19 = 136315394;
        v30 = v10;
        LOBYTE(v34) = v35[0];
        v28 = v17;
        v20 = sub_244E4E370();
        v31 = a2;
        v34 = sub_244D9A70C(v20, v21, v36);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();
        sub_244D9C004((uint64_t)v35);
        *(_WORD *)(v19 + 12) = 2080;
        v27 = v19 + 14;
        swift_bridgeObjectRetain();
        v22 = sub_244E4E2B0();
        v24 = v23;
        swift_bridgeObjectRelease();
        v34 = sub_244D9A70C(v22, v24, v36);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        a2 = v31;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_244D61000, v15, (os_log_type_t)v28, "Monitor Event Type: [%s] Details: [%s]", (uint8_t *)v19, 0x16u);
        v25 = v29;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v25, -1, -1);
        v26 = v19;
        v12 = v32;
        MEMORY[0x2495283BC](v26, -1, -1);

      }
      else
      {

        sub_244D9C004((uint64_t)v35);
        swift_bridgeObjectRelease_n();
      }
      v14 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    }
    MEMORY[0x24BDAC7A8](v14);
    *(&v27 - 2) = a2;
    *(&v27 - 1) = a3;
    sub_244D99630((void (*)(void))sub_244D9BFEC, (uint64_t)(&v27 - 4), 0, (uint64_t)&v27);
    return swift_release();
  }
  return result;
}

id sub_244D970B0(void *a1, unsigned __int8 *a2)
{
  uint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  void *v6;
  id v8;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x24BDAC8D0];
  v3 = *a2 + 1200;
  v4 = sub_244E4D8A8();
  v5 = sub_244E4D878();
  v6 = (void *)sub_244E4E298();
  v9[0] = 0;
  LODWORD(a1) = objc_msgSend(a1, sel_signalWithEvent_component_origin_details_error_, v3, v4, v5, v6, v9);

  if ((_DWORD)a1)
    return v9[0];
  v8 = v9[0];
  sub_244E4C1E0();

  return (id)swift_willThrow();
}

void sub_244D971B4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  unsigned __int8 v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  id v18;
  void *v19;
  _QWORD *v20;
  id v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  uint8_t *v25;
  _QWORD *v26;
  id v27[2];

  v27[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (void *)sub_244E4E2F8();
  v27[0] = 0;
  v6 = objc_msgSend(a1, sel_verifyWithPINToken_error_, v5, v27);

  if ((v6 & 1) != 0)
  {
    v7 = v27[0];
  }
  else
  {
    v8 = v27[0];
    v9 = (void *)sub_244E4C1E0();

    swift_willThrow();
    if (qword_257414400 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E00);
    sub_244D640E4(v10, (uint64_t)v4);
    v11 = sub_244E4DCD4();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v4, 1, v11) == 1)
    {
      sub_244D6412C((uint64_t)v4);
    }
    else
    {
      v13 = v9;
      v14 = v9;
      v15 = sub_244E4DCBC();
      v16 = sub_244E4E67C();
      if (os_log_type_enabled(v15, v16))
      {
        v17 = (uint8_t *)swift_slowAlloc();
        v26 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v17 = 138412290;
        v25 = v17 + 4;
        v18 = v9;
        v19 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v27[0] = v19;
        sub_244E4E7E4();
        v20 = v26;
        *v26 = v19;

        _os_log_impl(&dword_244D61000, v15, v16, "PIN token validation failed | error: %@", v17, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v20, -1, -1);
        MEMORY[0x2495283BC](v17, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v4, v11);
    }
    type metadata accessor for Code(0);
    v27[0] = (id)11004;
    v21 = v9;
    sub_244D65324(&qword_2574146C8, (uint64_t (*)(uint64_t))type metadata accessor for Code, (uint64_t)&unk_244E4FF70);
    v22 = sub_244E4C12C();

    sub_244D9BEAC();
    swift_allocError();
    v24 = 27;
    if ((v22 & 1) != 0)
      v24 = 30;
    *v23 = v24;
    swift_willThrow();

  }
}

uint64_t sub_244D97530@<X0>(int a1@<W0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  void *v6;
  void *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  _BYTE *v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  _BYTE *v49;
  id v50;
  uint64_t v52;
  uint8_t *v53;
  os_log_type_t v54;
  uint8_t *v55;
  uint8_t *v56;
  id v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  id v66;
  uint64_t v67;
  unint64_t v68;
  void *v69;
  uint8_t *v70;
  void *v71;
  NSObject *v72;
  NSObject *v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  id v82[2];

  v7 = v6;
  v78 = a1;
  v82[1] = *(id *)MEMORY[0x24BDAC8D0];
  v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v13 = MEMORY[0x24BDAC7A8](v79);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v70 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v70 - v17;
  if (*(_QWORD *)(a2 + 40))
  {
    v20 = a3;
    swift_retain();
    swift_retain();
    v21 = *(void **)(a2 + 40);
    if (v21)
      goto LABEL_3;
    goto LABEL_12;
  }
  v74 = v18;
  v76 = v6;
  v80 = (char *)&v70 - v17;
  v29 = objc_opt_self();
  v30 = a3;
  swift_retain();
  swift_retain();
  v31 = -[NSObject shared](v29, sel_shared);
  v82[0] = 0;
  v32 = objc_msgSend(v31, sel_makeReaderAndReturnError_, v82);

  v33 = v82[0];
  if (v32)
    goto LABEL_10;
  v73 = v29;
  v77 = a6;
  v37 = v82[0];
  v38 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v76 = 0;
  _s3__C4CodeOMa_1(0);
  v82[0] = (id)14001;
  v39 = v38;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v37) = sub_244E4C12C();

  if ((v37 & 1) != 0)
  {
    v75 = a5;

    if (qword_257414400 != -1)
      swift_once();
    v40 = __swift_project_value_buffer(v79, (uint64_t)qword_257419E00);
    sub_244D640E4(v40, (uint64_t)v16);
    v41 = sub_244E4DCD4();
    v42 = *(_QWORD *)(v41 - 8);
    v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v16, 1, v41);
    a6 = v77;
    if (v43 == 1)
    {
      sub_244D6412C((uint64_t)v16);
    }
    else
    {
      v53 = (uint8_t *)sub_244E4DCBC();
      v54 = sub_244E4E67C();
      v72 = v53;
      if (os_log_type_enabled((os_log_t)v53, v54))
      {
        v55 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v55 = 0;
        _os_log_impl(&dword_244D61000, v72, v54, "SPR XPC service disconnected, let's try one more time", v55, 2u);
        v56 = v55;
        a6 = v77;
        MEMORY[0x2495283BC](v56, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v41);
    }
    v57 = -[NSObject shared](v73, sel_shared);
    v82[0] = 0;
    v32 = objc_msgSend(v57, sel_makeReaderAndReturnError_, v82);

    v33 = v82[0];
    v52 = v74;
    a5 = v75;
    if (v32)
    {
LABEL_10:
      v34 = v33;
      v35 = *(void **)(a2 + 40);
      *(_QWORD *)(a2 + 40) = v32;

      v19 = v80;
      goto LABEL_11;
    }
    v58 = v82[0];
    v38 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v76 = 0;
  }
  else
  {
    a6 = v77;
    v52 = v74;
  }
  v19 = v80;
  if (qword_257414400 != -1)
    swift_once();
  v59 = __swift_project_value_buffer(v79, (uint64_t)qword_257419E00);
  sub_244D640E4(v59, v52);
  v60 = sub_244E4DCD4();
  v75 = *(_QWORD *)(v60 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v52, 1, v60) == 1)
  {

    sub_244D6412C(v52);
  }
  else
  {
    v61 = v38;
    v62 = v38;
    v63 = sub_244E4DCBC();
    v64 = sub_244E4E67C();
    LODWORD(v74) = v64;
    if (os_log_type_enabled(v63, v64))
    {
      v73 = v63;
      v65 = (uint8_t *)swift_slowAlloc();
      v71 = (void *)swift_slowAlloc();
      v81 = (uint64_t)v38;
      v82[0] = v71;
      v72 = v65;
      *(_DWORD *)v65 = 136446210;
      v70 = v65 + 4;
      v66 = v38;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v67 = sub_244E4E370();
      v81 = sub_244D9A70C(v67, v68, (uint64_t *)v82);
      a6 = v77;
      sub_244E4E7E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v73, (os_log_type_t)v74, "Could not make Reader module! Error: [ %{public}s ]", (uint8_t *)v72, 0xCu);
      v69 = v71;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v69, -1, -1);
      MEMORY[0x2495283BC](v72, -1, -1);

    }
    else
    {

    }
    v19 = v80;
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v52, v60);
  }
LABEL_11:
  v7 = v76;
  v21 = *(void **)(a2 + 40);
  if (v21)
  {
LABEL_3:
    v22 = v21;
    sub_244D95898(v22, (uint64_t)a3, a4, a5);
    if (v7)
    {
      v80 = v19;
      v77 = a6;
      _s3__C4CodeOMa_1(0);
      v82[0] = (id)14001;
      v23 = v7;
      sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
      v24 = sub_244E4C12C();

      if ((v24 & 1) == 0)
      {
LABEL_23:
        swift_release();

        goto LABEL_24;
      }
      v75 = a5;

      if (qword_257414400 != -1)
        swift_once();
      v25 = __swift_project_value_buffer(v79, (uint64_t)qword_257419E00);
      v26 = (uint64_t)v80;
      sub_244D640E4(v25, (uint64_t)v80);
      v27 = sub_244E4DCD4();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
      {
        sub_244D6412C(v26);
      }
      else
      {
        v44 = sub_244E4DCBC();
        v45 = sub_244E4E67C();
        if (os_log_type_enabled(v44, v45))
        {
          v46 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v46 = 0;
          _os_log_impl(&dword_244D61000, v44, v45, "XPC service disconnected, let's try one more time", v46, 2u);
          MEMORY[0x2495283BC](v46, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v28 + 8))(v80, v27);
      }
      v47 = *(void **)(a2 + 40);
      *(_QWORD *)(a2 + 40) = 0;

      v48 = v75;
      if ((v78 & 1) != 0)
      {
        sub_244D9A6A0();
        swift_allocError();
        *v49 = 1;
        swift_willThrow();
        goto LABEL_23;
      }
      v50 = a3;
      swift_retain();
      swift_retain();
      sub_244D97530(1, a2, v50, a4, v48);
    }

    swift_release_n();
    goto LABEL_27;
  }
LABEL_12:
  sub_244D9A6A0();
  swift_allocError();
  *v36 = 1;
  swift_willThrow();
  swift_release();
  v22 = a3;
LABEL_24:

  swift_release();
LABEL_27:

  return swift_release_n();
}

void sub_244D97DCC(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v3;
  void *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void *v16;
  NSObject *v17;
  id v18;
  id v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  void *v39;
  _BYTE *v40;
  NSObject *v41;
  os_log_type_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  os_log_type_t v46;
  uint8_t *v47;
  id v48;
  id v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  id v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  id v58;
  uint64_t v59;
  unint64_t v60;
  void *v61;
  _QWORD v62[2];
  void *v63;
  uint64_t v64;
  uint8_t *v65;
  NSObject *v66;
  NSObject *v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  id v71[2];

  v4 = v3;
  v69 = a1;
  v71[1] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v62 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v62 - v14;
  v16 = *(void **)(a2 + 40);
  if (v16)
    goto LABEL_5;
  v68 = a3;
  v17 = objc_opt_self();
  v18 = -[NSObject shared](v17, sel_shared);
  v71[0] = 0;
  v19 = objc_msgSend(v18, sel_makeReaderAndReturnError_, v71);

  v20 = v71[0];
  if (v19)
    goto LABEL_3;
  v67 = v17;
  v29 = v71[0];
  v30 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v4 = 0;
  _s3__C4CodeOMa_1(0);
  v71[0] = (id)14001;
  v31 = v30;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v29) = sub_244E4C12C();

  if ((v29 & 1) != 0)
  {

    if (qword_257414400 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v7, (uint64_t)qword_257419E00);
    sub_244D640E4(v32, (uint64_t)v13);
    v33 = sub_244E4DCD4();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v13, 1, v33) == 1)
    {
      sub_244D6412C((uint64_t)v13);
    }
    else
    {
      v41 = sub_244E4DCBC();
      v42 = sub_244E4E67C();
      v66 = v41;
      v43 = v41;
      v44 = v42;
      if (os_log_type_enabled(v43, v42))
      {
        v45 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v45 = 0;
        v46 = v44;
        v47 = v45;
        _os_log_impl(&dword_244D61000, v66, v46, "SPR XPC service disconnected, let's try one more time", v45, 2u);
        MEMORY[0x2495283BC](v47, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v33);
    }
    v48 = -[NSObject shared](v67, sel_shared);
    v71[0] = 0;
    v19 = objc_msgSend(v48, sel_makeReaderAndReturnError_, v71);

    v20 = v71[0];
    if (v19)
    {
LABEL_3:
      v21 = v20;
      v22 = *(void **)(a2 + 40);
      *(_QWORD *)(a2 + 40) = v19;

      goto LABEL_4;
    }
    v49 = v71[0];
    v30 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v4 = 0;
  }
  if (qword_257414400 != -1)
    swift_once();
  v50 = __swift_project_value_buffer(v7, (uint64_t)qword_257419E00);
  sub_244D640E4(v50, (uint64_t)v10);
  v51 = sub_244E4DCD4();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v10, 1, v51) == 1)
  {

    sub_244D6412C((uint64_t)v10);
  }
  else
  {
    v53 = v30;
    v54 = v30;
    v55 = sub_244E4DCBC();
    v56 = sub_244E4E67C();
    v67 = v55;
    LODWORD(v66) = v56;
    if (os_log_type_enabled(v55, v56))
    {
      v64 = v52;
      v57 = (uint8_t *)swift_slowAlloc();
      v63 = (void *)swift_slowAlloc();
      v70 = (uint64_t)v30;
      v71[0] = v63;
      v65 = v57;
      *(_DWORD *)v57 = 136446210;
      v62[1] = v57 + 4;
      v58 = v30;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v59 = sub_244E4E370();
      v70 = sub_244D9A70C(v59, v60, (uint64_t *)v71);
      sub_244E4E7E4();
      v52 = v64;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v67, (os_log_type_t)v66, "Could not make Reader module! Error: [ %{public}s ]", v65, 0xCu);
      v61 = v63;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v61, -1, -1);
      MEMORY[0x2495283BC](v65, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v10, v51);
  }
LABEL_4:
  v16 = *(void **)(a2 + 40);
  if (!v16)
  {
    sub_244D9A6A0();
    swift_allocError();
    *v35 = 1;
    swift_willThrow();
    return;
  }
LABEL_5:
  v23 = v16;
  sub_244D95FF0(v23);
  if (v4)
  {
    _s3__C4CodeOMa_1(0);
    v71[0] = (id)14001;
    v24 = v4;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    v25 = sub_244E4C12C();

    if ((v25 & 1) != 0)
    {

      if (qword_257414400 != -1)
        swift_once();
      v26 = __swift_project_value_buffer(v7, (uint64_t)qword_257419E00);
      sub_244D640E4(v26, (uint64_t)v15);
      v27 = sub_244E4DCD4();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v15, 1, v27) == 1)
      {
        sub_244D6412C((uint64_t)v15);
      }
      else
      {
        v36 = sub_244E4DCBC();
        v37 = sub_244E4E67C();
        if (os_log_type_enabled(v36, v37))
        {
          v38 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v38 = 0;
          _os_log_impl(&dword_244D61000, v36, v37, "XPC service disconnected, let's try one more time", v38, 2u);
          MEMORY[0x2495283BC](v38, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v27);
      }
      v39 = *(void **)(a2 + 40);
      *(_QWORD *)(a2 + 40) = 0;

      if ((v69 & 1) != 0)
      {
        sub_244D9A6A0();
        swift_allocError();
        *v40 = 1;
        swift_willThrow();
      }
      else
      {
        sub_244D97DCC(1, a2);
      }
    }
  }

}

void sub_244D9855C(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  void *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  void *v18;
  id v19;
  NSObject *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  void *v27;
  id v28;
  void *v29;
  id v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  _BYTE *v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  uint64_t v62;
  unint64_t v63;
  void *v64;
  _QWORD v65[2];
  void *v66;
  uint8_t *v67;
  NSObject *v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  id v78[2];

  v5 = v4;
  v73 = a1;
  v78[1] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v65 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v74 = (uint64_t)v65 - v16;
  v17 = *(_OWORD *)a3;
  v76 = *(_OWORD *)(a3 + 16);
  v77 = v17;
  v18 = *(void **)(a3 + 40);
  if (*(_QWORD *)(a2 + 40))
  {
    sub_244D9A678((uint64_t)&v77);
    sub_244D9A678((uint64_t)&v76);
    v19 = v18;
    goto LABEL_6;
  }
  v70 = v9;
  v72 = v4;
  v20 = objc_opt_self();
  sub_244D9A678((uint64_t)&v77);
  sub_244D9A678((uint64_t)&v76);
  v21 = v18;
  v22 = -[NSObject shared](v20, sel_shared);
  v78[0] = 0;
  v23 = objc_msgSend(v22, sel_makeReaderAndReturnError_, v78);

  v24 = v78[0];
  if (v23)
  {
    v9 = v70;
LABEL_5:
    v25 = v24;
    v26 = *(void **)(a2 + 40);
    *(_QWORD *)(a2 + 40) = v23;

    v5 = v72;
    goto LABEL_6;
  }
  v69 = v20;
  v71 = a4;
  v37 = v78[0];
  v38 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v72 = 0;
  _s3__C4CodeOMa_1(0);
  v78[0] = (id)14001;
  v39 = v38;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v37) = sub_244E4C12C();

  if ((v37 & 1) != 0)
  {

    if (qword_257414400 != -1)
      swift_once();
    v40 = __swift_project_value_buffer(v70, (uint64_t)qword_257419E00);
    sub_244D640E4(v40, (uint64_t)v15);
    v41 = sub_244E4DCD4();
    v42 = *(_QWORD *)(v41 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v15, 1, v41) == 1)
    {
      sub_244D6412C((uint64_t)v15);
    }
    else
    {
      v49 = sub_244E4DCBC();
      v50 = sub_244E4E67C();
      v68 = v49;
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        _os_log_impl(&dword_244D61000, v68, v50, "SPR XPC service disconnected, let's try one more time", v51, 2u);
        MEMORY[0x2495283BC](v51, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v41);
    }
    v52 = -[NSObject shared](v69, sel_shared);
    v78[0] = 0;
    v23 = objc_msgSend(v52, sel_makeReaderAndReturnError_, v78);

    v24 = v78[0];
    v9 = v70;
    a4 = v71;
    if (v23)
      goto LABEL_5;
    v53 = v78[0];
    v38 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v5 = 0;
  }
  else
  {
    a4 = v71;
    v5 = v72;
    v9 = v70;
  }
  if (qword_257414400 != -1)
    swift_once();
  v54 = __swift_project_value_buffer(v9, (uint64_t)qword_257419E00);
  sub_244D640E4(v54, (uint64_t)v12);
  v55 = sub_244E4DCD4();
  v70 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v12, 1, v55) == 1)
  {

    sub_244D6412C((uint64_t)v12);
  }
  else
  {
    v72 = v5;
    v56 = v38;
    v57 = v38;
    v58 = sub_244E4DCBC();
    v59 = sub_244E4E67C();
    v69 = v58;
    LODWORD(v68) = v59;
    if (os_log_type_enabled(v58, v59))
    {
      v60 = (uint8_t *)swift_slowAlloc();
      v66 = (void *)swift_slowAlloc();
      v78[0] = v66;
      v67 = v60;
      *(_DWORD *)v60 = 136446210;
      v65[1] = v60 + 4;
      v75 = (uint64_t)v38;
      v61 = v38;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v62 = sub_244E4E370();
      v75 = sub_244D9A70C(v62, v63, (uint64_t *)v78);
      sub_244E4E7E4();
      a4 = v71;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v69, (os_log_type_t)v68, "Could not make Reader module! Error: [ %{public}s ]", v67, 0xCu);
      v64 = v66;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v64, -1, -1);
      MEMORY[0x2495283BC](v67, -1, -1);

    }
    else
    {

    }
    v5 = v72;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v12, v55);
  }
LABEL_6:
  v27 = *(void **)(a2 + 40);
  if (v27)
  {
    v28 = v27;
    v29 = v5;
    sub_244D951DC(v28, a3);
    if (v5)
    {
      v71 = a4;
      _s3__C4CodeOMa_1(0);
      v78[0] = (id)14001;
      v30 = v5;
      sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
      v31 = sub_244E4C12C();

      if ((v31 & 1) != 0)
      {

        if (qword_257414400 != -1)
          swift_once();
        v32 = __swift_project_value_buffer(v9, (uint64_t)qword_257419E00);
        v33 = v74;
        sub_244D640E4(v32, v74);
        v34 = sub_244E4DCD4();
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
        {
          sub_244D6412C(v33);
        }
        else
        {
          v43 = sub_244E4DCBC();
          v44 = sub_244E4E67C();
          if (os_log_type_enabled(v43, v44))
          {
            v45 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v45 = 0;
            _os_log_impl(&dword_244D61000, v43, v44, "XPC service disconnected, let's try one more time", v45, 2u);
            MEMORY[0x2495283BC](v45, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v74, v34);
        }
        v46 = *(void **)(a2 + 40);
        *(_QWORD *)(a2 + 40) = 0;

        if ((v73 & 1) != 0)
        {
          sub_244D9A6A0();
          swift_allocError();
          *v47 = 1;
          swift_willThrow();
        }
        else
        {
          sub_244D9A678((uint64_t)&v77);
          sub_244D9A678((uint64_t)&v76);
          v48 = v18;
          sub_244D9855C(1, a2, a3);
        }
      }
    }

  }
  else
  {
    sub_244D9A6A0();
    swift_allocError();
    *v36 = 1;
    swift_willThrow();
  }
  sub_244D9A6E4((uint64_t)&v77);
  sub_244D9A6E4((uint64_t)&v76);

  sub_244D9A6E4((uint64_t)&v77);
  sub_244D9A6E4((uint64_t)&v76);

}

uint64_t sub_244D98DA8@<X0>(int a1@<W0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  _QWORD *v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  _BYTE *v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint8_t *v47;
  uint8_t *v48;
  _QWORD *v49;
  void *v50;
  char v51;
  _BYTE *v52;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint8_t *v57;
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  id v65;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  void *v72;
  _QWORD v73[2];
  void *v74;
  NSObject *v75;
  id v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86[2];

  v8 = v7;
  v82 = a1;
  v86[1] = *(id *)MEMORY[0x24BDAC8D0];
  v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v15 = MEMORY[0x24BDAC7A8](v84);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v73 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v83 = (uint64_t)v73 - v20;
  v21 = (void *)a2[6];
  if (v21)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    goto LABEL_7;
  }
  v78 = v19;
  v22 = a3;
  v80 = a7;
  v81 = v8;
  v23 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = objc_msgSend(v23, sel_shared);
  v86[0] = 0;
  v25 = objc_msgSend(v24, sel_makeConfiguratorAndReturnError_, v86);

  v26 = v86[0];
  if (v25)
  {
    a3 = v22;
LABEL_5:
    v27 = v26;
    v28 = (void *)a2[6];
    a2[6] = v25;

    goto LABEL_6;
  }
  v76 = v23;
  v77 = v22;
  v36 = v86[0];
  v37 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v81 = 0;
  _s3__C4CodeOMa_1(0);
  v86[0] = (id)14001;
  v38 = v37;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v36) = sub_244E4C12C();

  if ((v36 & 1) != 0)
  {
    LODWORD(v79) = a5;

    if (qword_257414400 != -1)
      swift_once();
    v39 = __swift_project_value_buffer(v84, (uint64_t)qword_257419E00);
    sub_244D640E4(v39, (uint64_t)v18);
    v40 = sub_244E4DCD4();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v18, 1, v40);
    a3 = v77;
    if (v42 == 1)
    {
      sub_244D6412C((uint64_t)v18);
    }
    else
    {
      v54 = sub_244E4DCBC();
      v55 = sub_244E4E67C();
      v75 = v54;
      if (os_log_type_enabled(v54, v55))
      {
        v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v56 = 0;
        _os_log_impl(&dword_244D61000, v75, v55, "SPR XPC service disconnected, let's try one more time", v56, 2u);
        v57 = v56;
        a3 = v77;
        MEMORY[0x2495283BC](v57, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v40);
    }
    v58 = objc_msgSend(v76, sel_shared);
    v86[0] = 0;
    v25 = objc_msgSend(v58, sel_makeConfiguratorAndReturnError_, v86);

    v26 = v86[0];
    a5 = v79;
    if (v25)
      goto LABEL_5;
    v59 = v86[0];
    v37 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v81 = 0;
  }
  else
  {
    a3 = v77;
  }
  if (qword_257414400 != -1)
    swift_once();
  v60 = __swift_project_value_buffer(v84, (uint64_t)qword_257419E00);
  v61 = v78;
  sub_244D640E4(v60, v78);
  v62 = sub_244E4DCD4();
  v63 = *(_QWORD *)(v62 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v61, 1, v62) == 1)
  {

    sub_244D6412C(v78);
  }
  else
  {
    v79 = v63;
    v64 = v37;
    v65 = v37;
    v66 = sub_244E4DCBC();
    v67 = sub_244E4E67C();
    LODWORD(v76) = v67;
    if (os_log_type_enabled(v66, v67))
    {
      v75 = v66;
      v68 = (uint8_t *)swift_slowAlloc();
      v74 = (void *)swift_slowAlloc();
      v85 = (uint64_t)v37;
      v86[0] = v74;
      *(_DWORD *)v68 = 136446210;
      v73[1] = v68 + 4;
      v69 = v37;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v70 = sub_244E4E370();
      v85 = sub_244D9A70C(v70, v71, (uint64_t *)v86);
      a3 = v77;
      sub_244E4E7E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v75, (os_log_type_t)v76, "Could not make Configurator module! Error: [ %{public}s ]", v68, 0xCu);
      v72 = v74;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v72, -1, -1);
      MEMORY[0x2495283BC](v68, -1, -1);

    }
    else
    {

    }
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v62);
  }
LABEL_6:
  v8 = v81;
  v21 = (void *)a2[6];
  if (!v21)
  {
    sub_244D9A6A0();
    swift_allocError();
    *v43 = 2;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
LABEL_26:
    swift_release();
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  v29 = v21;
  sub_244D95008(v29, a3, a4, a5 & 1, a6);
  if (v8)
  {
    v81 = a2;
    _s3__C4CodeOMa_1(0);
    v86[0] = (id)14001;
    v30 = v8;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    v31 = sub_244E4C12C();

    if ((v31 & 1) == 0)
    {
LABEL_25:
      swift_release();
      swift_bridgeObjectRelease();

      goto LABEL_26;
    }
    LODWORD(v79) = a5;

    if (qword_257414400 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v84, (uint64_t)qword_257419E00);
    v33 = v83;
    sub_244D640E4(v32, v83);
    v34 = sub_244E4DCD4();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34) == 1)
    {
      sub_244D6412C(v33);
    }
    else
    {
      v44 = sub_244E4DCBC();
      v45 = sub_244E4E67C();
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        v77 = a3;
        v47 = v46;
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_244D61000, v44, v45, "XPC service disconnected, let's try one more time", v46, 2u);
        v48 = v47;
        a3 = v77;
        MEMORY[0x2495283BC](v48, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v83, v34);
    }
    v49 = v81;
    v50 = (void *)v81[6];
    v81[6] = 0;

    v51 = v79;
    if ((v82 & 1) != 0)
    {
      sub_244D9A6A0();
      swift_allocError();
      *v52 = 2;
      swift_willThrow();
      goto LABEL_25;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    sub_244D98DA8(1, v49, a3, a4, v51 & 1, a6);
  }

  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

void sub_244D99630(void (*a1)(void)@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  NSObject *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  void *v44;
  _BYTE *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  id v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  uint8_t *v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint8_t *v64;
  _QWORD v65[2];
  void *v66;
  uint64_t v67;
  NSObject *v68;
  NSObject *v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  void (*v74)(void);
  uint64_t v75;
  id v76[2];

  v6 = v5;
  v7 = v4;
  v72 = a3;
  v74 = a1;
  v76[1] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v65 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v73 = (uint64_t)v65 - v17;
  v18 = *(void **)(v7 + 56);
  if (v18)
    goto LABEL_5;
  v71 = a4;
  v19 = objc_opt_self();
  v20 = -[NSObject shared](v19, sel_shared);
  v76[0] = 0;
  v21 = objc_msgSend(v20, sel_makeMonitorAndReturnError_, v76);

  v22 = v76[0];
  if (v21)
    goto LABEL_3;
  v69 = v19;
  v70 = a2;
  v34 = v76[0];
  v35 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v6 = 0;
  _s3__C4CodeOMa_1(0);
  v76[0] = (id)14001;
  v36 = v35;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v34) = sub_244E4C12C();

  if ((v34 & 1) != 0)
  {

    if (qword_257414400 != -1)
      swift_once();
    v37 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
    sub_244D640E4(v37, (uint64_t)v16);
    v38 = sub_244E4DCD4();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v16, 1, v38) == 1)
    {
      sub_244D6412C((uint64_t)v16);
    }
    else
    {
      v46 = sub_244E4DCBC();
      v47 = sub_244E4E67C();
      v68 = v46;
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v48 = 0;
        _os_log_impl(&dword_244D61000, v68, v47, "SPR XPC service disconnected, let's try one more time", v48, 2u);
        MEMORY[0x2495283BC](v48, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v38);
    }
    v49 = -[NSObject shared](v69, sel_shared);
    v76[0] = 0;
    v21 = objc_msgSend(v49, sel_makeMonitorAndReturnError_, v76);

    v22 = v76[0];
    a2 = v70;
    if (v21)
    {
LABEL_3:
      v23 = v22;
      v24 = *(void **)(v7 + 56);
      *(_QWORD *)(v7 + 56) = v21;

      goto LABEL_4;
    }
    v50 = v76[0];
    v35 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v6 = 0;
  }
  else
  {
    a2 = v70;
  }
  if (qword_257414400 != -1)
    swift_once();
  v51 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
  sub_244D640E4(v51, (uint64_t)v13);
  v52 = sub_244E4DCD4();
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v13, 1, v52) == 1)
  {

    sub_244D6412C((uint64_t)v13);
  }
  else
  {
    v54 = v35;
    v55 = v35;
    v56 = sub_244E4DCBC();
    v57 = sub_244E4E67C();
    v69 = v56;
    LODWORD(v68) = v57;
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (uint8_t *)swift_slowAlloc();
      v66 = (void *)swift_slowAlloc();
      v75 = (uint64_t)v35;
      v76[0] = v66;
      *(_DWORD *)v58 = 136446210;
      v65[1] = v58 + 4;
      v67 = v53;
      v59 = v58;
      v60 = v35;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v61 = sub_244E4E370();
      v75 = sub_244D9A70C(v61, v62, (uint64_t *)v76);
      sub_244E4E7E4();
      a2 = v70;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v69, (os_log_type_t)v68, "Could not make Monitor module! Error: [ %{public}s ]", v58, 0xCu);
      v63 = v66;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v63, -1, -1);
      v64 = v59;
      v53 = v67;
      MEMORY[0x2495283BC](v64, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v13, v52);
  }
LABEL_4:
  v18 = *(void **)(v7 + 56);
  if (!v18)
  {
    sub_244D9A6A0();
    swift_allocError();
    *v40 = 3;
    swift_willThrow();
    return;
  }
LABEL_5:
  v25 = v18;
  v26 = v6;
  v74();
  if (v6)
  {
    v27 = a2;
    _s3__C4CodeOMa_1(0);
    v76[0] = (id)14001;
    v28 = v26;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    v29 = sub_244E4C12C();

    if ((v29 & 1) != 0)
    {

      if (qword_257414400 != -1)
        swift_once();
      v30 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
      v31 = v73;
      sub_244D640E4(v30, v73);
      v32 = sub_244E4DCD4();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
      {
        sub_244D6412C(v31);
      }
      else
      {
        v41 = sub_244E4DCBC();
        v42 = sub_244E4E67C();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v43 = 0;
          _os_log_impl(&dword_244D61000, v41, v42, "XPC service disconnected, let's try one more time", v43, 2u);
          MEMORY[0x2495283BC](v43, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v73, v32);
      }
      v44 = *(void **)(v7 + 56);
      *(_QWORD *)(v7 + 56) = 0;

      if ((v72 & 1) != 0)
      {
        sub_244D9A6A0();
        swift_allocError();
        *v45 = 3;
        swift_willThrow();
      }
      else
      {
        sub_244D99630(v74, v27, 1);
      }
    }
  }

}

void sub_244D99DFC(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void *v5;
  void *v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  uint8_t *v44;
  void *v45;
  uint64_t v46;
  _QWORD *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  void *v63;
  uint8_t *v64;
  void *v65;
  uint8_t *v66;
  NSObject *v67;
  NSObject *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  id v76[2];

  v6 = v5;
  v76[1] = *(id *)MEMORY[0x24BDAC8D0];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v64 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v74 = (uint64_t)&v64 - v19;
  v20 = *(void **)(a2 + 64);
  v73 = a1;
  if (v20)
  {
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v72 = v6;
  v70 = a5;
  v21 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v22 = objc_msgSend(v21, sel_shared);
  v76[0] = 0;
  v23 = objc_msgSend(v22, sel_makePINControllerAndReturnError_, v76);

  v24 = v76[0];
  if (v23)
    goto LABEL_4;
  v69 = v21;
  v71 = a3;
  v34 = v76[0];
  v35 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v72 = 0;
  _s3__C4CodeOMa_1(0);
  v76[0] = (id)14001;
  v36 = v35;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v34) = sub_244E4C12C();

  if ((v34 & 1) != 0)
  {

    if (qword_257414400 != -1)
      swift_once();
    v37 = __swift_project_value_buffer(v12, (uint64_t)qword_257419E00);
    sub_244D640E4(v37, (uint64_t)v18);
    v38 = sub_244E4DCD4();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v18, 1, v38) == 1)
    {
      sub_244D6412C((uint64_t)v18);
    }
    else
    {
      v48 = sub_244E4DCBC();
      v49 = sub_244E4E67C();
      v68 = v48;
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_244D61000, v68, v49, "SPR XPC service disconnected, let's try one more time", v50, 2u);
        MEMORY[0x2495283BC](v50, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v38);
    }
    v51 = objc_msgSend(v69, sel_shared);
    v76[0] = 0;
    v23 = objc_msgSend(v51, sel_makePINControllerAndReturnError_, v76);

    v24 = v76[0];
    a3 = v71;
    if (v23)
    {
LABEL_4:
      v25 = v24;
      v26 = *(void **)(a2 + 64);
      *(_QWORD *)(a2 + 64) = v23;

      goto LABEL_5;
    }
    v52 = v76[0];
    v35 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v72 = 0;
  }
  else
  {
    a3 = v71;
  }
  if (qword_257414400 != -1)
    swift_once();
  v53 = __swift_project_value_buffer(v12, (uint64_t)qword_257419E00);
  sub_244D640E4(v53, (uint64_t)v15);
  v54 = sub_244E4DCD4();
  v69 = *(id *)(v54 - 8);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v69 + 6))(v15, 1, v54) == 1)
  {

    sub_244D6412C((uint64_t)v15);
  }
  else
  {
    v55 = v35;
    v56 = v35;
    v57 = sub_244E4DCBC();
    v58 = sub_244E4E67C();
    LODWORD(v68) = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v67 = v57;
      v59 = (uint8_t *)swift_slowAlloc();
      v65 = (void *)swift_slowAlloc();
      v75 = (uint64_t)v35;
      v76[0] = v65;
      v66 = v59;
      *(_DWORD *)v59 = 136446210;
      v64 = v59 + 4;
      v60 = v35;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v61 = sub_244E4E370();
      v75 = sub_244D9A70C(v61, v62, (uint64_t *)v76);
      a3 = v71;
      sub_244E4E7E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v67, (os_log_type_t)v68, "Could not make PIN Controller module! Error: [ %{public}s ]", v66, 0xCu);
      v63 = v65;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v63, -1, -1);
      MEMORY[0x2495283BC](v66, -1, -1);

    }
    else
    {

    }
    (*((void (**)(char *, uint64_t))v69 + 1))(v15, v54);
  }
LABEL_5:
  v6 = v72;
  v20 = *(void **)(a2 + 64);
  if (!v20)
  {
    sub_244D9BEAC();
    swift_allocError();
    *v40 = 25;
    swift_willThrow();
    swift_bridgeObjectRelease_n();
    return;
  }
LABEL_6:
  v27 = v20;
  sub_244D971B4(v27);
  if (v6)
  {
    _s3__C4CodeOMa_1(0);
    v76[0] = (id)14001;
    v28 = v6;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    v29 = sub_244E4C12C();

    if ((v29 & 1) != 0)
    {
      v71 = a3;

      if (qword_257414400 != -1)
        swift_once();
      v30 = __swift_project_value_buffer(v12, (uint64_t)qword_257419E00);
      v31 = v74;
      sub_244D640E4(v30, v74);
      v32 = sub_244E4DCD4();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
      {
        sub_244D6412C(v31);
      }
      else
      {
        v41 = sub_244E4DCBC();
        v42 = sub_244E4E67C();
        if (os_log_type_enabled(v41, v42))
        {
          v43 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v43 = 0;
          _os_log_impl(&dword_244D61000, v41, v42, "XPC service disconnected, let's try one more time", v43, 2u);
          v44 = v43;
          v31 = v74;
          MEMORY[0x2495283BC](v44, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
      v45 = *(void **)(a2 + 64);
      *(_QWORD *)(a2 + 64) = 0;

      v46 = v71;
      if ((v73 & 1) != 0)
      {
        sub_244D9BEAC();
        swift_allocError();
        *v47 = 25;
        swift_willThrow();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_244D99DFC(1, a2, v46, a4);
      }
    }
  }
  swift_bridgeObjectRelease_n();

}

uint64_t sub_244D9A60C()
{
  id *v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRReaderProxy()
{
  return objc_opt_self();
}

uint64_t sub_244D9A678(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_244D9A6A0()
{
  unint64_t result;

  result = qword_257416558;
  if (!qword_257416558)
  {
    result = MEMORY[0x2495282F0](&unk_244E52E3C, &type metadata for InternalError);
    atomic_store(result, (unint64_t *)&qword_257416558);
  }
  return result;
}

uint64_t sub_244D9A6E4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244D9A70C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_244D9A7DC(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_244D66F18((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_244D66F18((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_244D9A7DC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_244E4E7F0();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_244D9A994(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_244E4E8C8();
  if (!v8)
  {
    sub_244E4E940();
    __break(1u);
LABEL_17:
    result = sub_244E4E994();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_244D9A994(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_244D9AA28(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_244D9AC78(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_244D9AC78(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_244D9AA28(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_244D9AB9C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_244E4E898();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_244E4E940();
      __break(1u);
LABEL_10:
      v2 = sub_244E4E40C();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_244E4E994();
    __break(1u);
LABEL_14:
    result = sub_244E4E940();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_244D9AB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416560);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_244D9AC00(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_244E4E448();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x2495276C0](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_244D9AC78(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416560);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244D9ADC8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint8_t *v42;
  void *v43;
  uint64_t v44;
  _BYTE *v45;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  id v50;
  id v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  id v55;
  NSObject *v56;
  os_log_type_t v57;
  uint8_t *v58;
  id v59;
  uint64_t v60;
  unint64_t v61;
  void *v62;
  _QWORD v63[2];
  void *v64;
  uint8_t *v65;
  NSObject *v66;
  NSObject *v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  id v76[2];

  v76[1] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)v63 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v72 = (uint64_t)v63 - v17;
  v18 = *(void **)(a2 + 48);
  v71 = a1;
  if (v18)
  {
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v69 = a3;
  v19 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v20 = objc_msgSend(v19, sel_shared);
  v76[0] = 0;
  v21 = objc_msgSend(v20, sel_makeConfiguratorAndReturnError_, v76);

  v22 = v76[0];
  if (v21)
    goto LABEL_4;
  v68 = v19;
  v70 = a5;
  v33 = v76[0];
  v34 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v73 = 0;
  _s3__C4CodeOMa_1(0);
  v76[0] = (id)14001;
  v35 = v34;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v33) = sub_244E4C12C();

  if ((v33 & 1) != 0)
  {

    if (qword_257414400 != -1)
      swift_once();
    v36 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
    sub_244D640E4(v36, (uint64_t)v16);
    v37 = sub_244E4DCD4();
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v16, 1, v37) == 1)
    {
      sub_244D6412C((uint64_t)v16);
    }
    else
    {
      v47 = sub_244E4DCBC();
      v48 = sub_244E4E67C();
      v67 = v47;
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v49 = 0;
        _os_log_impl(&dword_244D61000, v67, v48, "SPR XPC service disconnected, let's try one more time", v49, 2u);
        MEMORY[0x2495283BC](v49, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v37);
    }
    v50 = objc_msgSend(v68, sel_shared);
    v76[0] = 0;
    v21 = objc_msgSend(v50, sel_makeConfiguratorAndReturnError_, v76);

    v22 = v76[0];
    a5 = v70;
    if (v21)
    {
LABEL_4:
      v23 = v22;
      v24 = *(void **)(a2 + 48);
      *(_QWORD *)(a2 + 48) = v21;

      a3 = v69;
      goto LABEL_5;
    }
    v51 = v76[0];
    v34 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v73 = 0;
  }
  else
  {
    a5 = v70;
  }
  a3 = v69;
  if (qword_257414400 != -1)
    swift_once();
  v52 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
  sub_244D640E4(v52, (uint64_t)v13);
  v53 = sub_244E4DCD4();
  v68 = *(id *)(v53 - 8);
  if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v68 + 6))(v13, 1, v53) == 1)
  {

    sub_244D6412C((uint64_t)v13);
  }
  else
  {
    v54 = v34;
    v55 = v34;
    v56 = sub_244E4DCBC();
    v57 = sub_244E4E67C();
    LODWORD(v67) = v57;
    if (os_log_type_enabled(v56, v57))
    {
      v66 = v56;
      v58 = (uint8_t *)swift_slowAlloc();
      v64 = (void *)swift_slowAlloc();
      v76[0] = v64;
      v65 = v58;
      *(_DWORD *)v58 = 136446210;
      v63[1] = v58 + 4;
      v74 = (uint64_t)v34;
      v59 = v34;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v60 = sub_244E4E370();
      v74 = sub_244D9A70C(v60, v61, (uint64_t *)v76);
      a5 = v70;
      sub_244E4E7E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v66, (os_log_type_t)v67, "Could not make Configurator module! Error: [ %{public}s ]", v65, 0xCu);
      v62 = v64;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v62, -1, -1);
      MEMORY[0x2495283BC](v65, -1, -1);

    }
    else
    {

    }
    a3 = v69;
    (*((void (**)(char *, uint64_t))v68 + 1))(v13, v53);
  }
LABEL_5:
  v18 = *(void **)(a2 + 48);
  if (!v18)
  {
    sub_244D9A6A0();
    swift_allocError();
    *v39 = 2;
    swift_willThrow();
    swift_bridgeObjectRelease();
    return a3;
  }
LABEL_6:
  v25 = v18;
  v26 = v73;
  sub_244D94258(v25, a5, &v75);
  if (v26)
  {
    v27 = a3;
    _s3__C4CodeOMa_1(0);
    v76[0] = (id)14001;
    v28 = v26;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    a3 = sub_244E4C12C();

    if ((a3 & 1) != 0)
    {
      v70 = a5;

      if (qword_257414400 != -1)
        swift_once();
      v29 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
      v30 = v72;
      sub_244D640E4(v29, v72);
      v31 = sub_244E4DCD4();
      v32 = *(_QWORD *)(v31 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
      {
        sub_244D6412C(v30);
      }
      else
      {
        a3 = sub_244E4DCBC();
        v40 = sub_244E4E67C();
        if (os_log_type_enabled((os_log_t)a3, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v41 = 0;
          _os_log_impl(&dword_244D61000, (os_log_t)a3, v40, "XPC service disconnected, let's try one more time", v41, 2u);
          v42 = v41;
          v30 = v72;
          MEMORY[0x2495283BC](v42, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
      v43 = *(void **)(a2 + 48);
      *(_QWORD *)(a2 + 48) = 0;

      v44 = v70;
      if ((v71 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        a3 = sub_244D9ADC8(1, a2, v27, a4, v44);

        swift_bridgeObjectRelease_n();
        return a3;
      }
      sub_244D9A6A0();
      swift_allocError();
      *v45 = 2;
      swift_willThrow();
    }
    swift_bridgeObjectRelease();

  }
  else
  {
    swift_bridgeObjectRelease();

    return v75;
  }
  return a3;
}

uint64_t sub_244D9B600(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  void *v22;
  id v23;
  id v24;
  id v25;
  id v26;
  void *v27;
  id v28;
  char v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint8_t *v43;
  uint8_t *v44;
  void *v45;
  _BYTE *v46;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  id v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  id v56;
  NSObject *v57;
  os_log_type_t v58;
  uint8_t *v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  uint64_t v65;
  uint8_t *v66;
  NSObject *v67;
  id v68;
  uint64_t v69;
  unsigned int v70;
  uint64_t v71;
  void *v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77[4];

  v7 = v6;
  LODWORD(v8) = a6;
  v73 = a1;
  v77[3] = *MEMORY[0x24BDAC8D0];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v64 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v74 = (uint64_t)v64 - v20;
  v21 = *(void **)(a2 + 48);
  if (v21)
  {
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  v71 = v13;
  v72 = v7;
  v70 = v8;
  v22 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v23 = objc_msgSend(v22, sel_shared);
  v76 = 0;
  v24 = objc_msgSend(v23, sel_makeConfiguratorAndReturnError_, &v76);

  v25 = (id)v76;
  if (v24)
  {
    v13 = v71;
LABEL_5:
    v26 = v25;
    v27 = *(void **)(a2 + 48);
    *(_QWORD *)(a2 + 48) = v24;

    v8 = v70;
    goto LABEL_6;
  }
  v68 = v22;
  v69 = a3;
  v34 = (id)v76;
  v35 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v72 = 0;
  _s3__C4CodeOMa_1(0);
  v76 = 14001;
  v36 = v35;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v34) = sub_244E4C12C();

  if ((v34 & 1) != 0)
  {

    if (qword_257414400 != -1)
      swift_once();
    v37 = __swift_project_value_buffer(v71, (uint64_t)qword_257419E00);
    sub_244D640E4(v37, (uint64_t)v19);
    v38 = sub_244E4DCD4();
    v39 = *(_QWORD *)(v38 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v19, 1, v38) == 1)
    {
      sub_244D6412C((uint64_t)v19);
    }
    else
    {
      v48 = sub_244E4DCBC();
      v49 = sub_244E4E67C();
      v67 = v48;
      if (os_log_type_enabled(v48, v49))
      {
        v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v50 = 0;
        _os_log_impl(&dword_244D61000, v67, v49, "SPR XPC service disconnected, let's try one more time", v50, 2u);
        MEMORY[0x2495283BC](v50, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v38);
    }
    v51 = objc_msgSend(v68, sel_shared);
    v76 = 0;
    v24 = objc_msgSend(v51, sel_makeConfiguratorAndReturnError_, &v76);

    v25 = (id)v76;
    a3 = v69;
    v13 = v71;
    if (v24)
      goto LABEL_5;
    v52 = (id)v76;
    v35 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v72 = 0;
  }
  else
  {
    a3 = v69;
    v13 = v71;
  }
  v8 = v70;
  if (qword_257414400 != -1)
    swift_once();
  v53 = __swift_project_value_buffer(v13, (uint64_t)qword_257419E00);
  sub_244D640E4(v53, (uint64_t)v16);
  v54 = sub_244E4DCD4();
  v71 = *(_QWORD *)(v54 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v16, 1, v54) == 1)
  {

    sub_244D6412C((uint64_t)v16);
  }
  else
  {
    v55 = v35;
    v56 = v35;
    v57 = sub_244E4DCBC();
    v58 = sub_244E4E67C();
    LODWORD(v68) = v58;
    if (os_log_type_enabled(v57, v58))
    {
      v67 = v57;
      v59 = (uint8_t *)swift_slowAlloc();
      v65 = swift_slowAlloc();
      v75 = (uint64_t)v35;
      v76 = v65;
      v66 = v59;
      *(_DWORD *)v59 = 136446210;
      v64[1] = v59 + 4;
      v60 = v35;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v61 = sub_244E4E370();
      v75 = sub_244D9A70C(v61, v62, &v76);
      a3 = v69;
      sub_244E4E7E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v67, (os_log_type_t)v68, "Could not make Configurator module! Error: [ %{public}s ]", v66, 0xCu);
      v63 = v65;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v63, -1, -1);
      MEMORY[0x2495283BC](v66, -1, -1);

    }
    else
    {

    }
    v8 = v70;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v16, v54);
  }
LABEL_6:
  v7 = v72;
  v21 = *(void **)(a2 + 48);
  if (!v21)
  {
    sub_244D9A6A0();
    swift_allocError();
    *v40 = 2;
    swift_willThrow();
LABEL_26:
    swift_bridgeObjectRelease();
    return v8;
  }
LABEL_7:
  v28 = v21;
  sub_244D947C0(v28, a3, a4, a5 & 1, v8 & 1, v77);
  if (v7)
  {
    LODWORD(v72) = a5;
    v29 = v8;
    _s3__C4CodeOMa_1(0);
    v76 = 14001;
    v30 = v7;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    v8 = sub_244E4C12C();

    if ((v8 & 1) != 0)
    {

      if (qword_257414400 != -1)
        swift_once();
      v31 = __swift_project_value_buffer(v13, (uint64_t)qword_257419E00);
      v8 = v74;
      sub_244D640E4(v31, v74);
      v32 = sub_244E4DCD4();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v8, 1, v32) == 1)
      {
        sub_244D6412C(v8);
      }
      else
      {
        v8 = sub_244E4DCBC();
        v41 = sub_244E4E67C();
        if (os_log_type_enabled((os_log_t)v8, v41))
        {
          v42 = (uint8_t *)swift_slowAlloc();
          v69 = a3;
          v43 = v42;
          *(_WORD *)v42 = 0;
          _os_log_impl(&dword_244D61000, (os_log_t)v8, v41, "XPC service disconnected, let's try one more time", v42, 2u);
          v44 = v43;
          a3 = v69;
          MEMORY[0x2495283BC](v44, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v74, v32);
      }
      v45 = *(void **)(a2 + 48);
      *(_QWORD *)(a2 + 48) = 0;

      if ((v73 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v8 = sub_244D9B600(1, a2, a3, a4, v72 & 1, v29 & 1);

        swift_bridgeObjectRelease_n();
        return v8;
      }
      sub_244D9A6A0();
      swift_allocError();
      *v46 = 2;
      swift_willThrow();
    }

    goto LABEL_26;
  }

  swift_bridgeObjectRelease();
  return v77[0];
}

void sub_244D9BE5C(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)

}

unint64_t sub_244D9BE68()
{
  unint64_t result;

  result = qword_257416568;
  if (!qword_257416568)
  {
    result = MEMORY[0x2495282F0](&unk_244E546E0, &type metadata for CardReaderAdapterError);
    atomic_store(result, (unint64_t *)&qword_257416568);
  }
  return result;
}

unint64_t sub_244D9BEAC()
{
  unint64_t result;

  result = qword_257418D10;
  if (!qword_257418D10)
  {
    result = MEMORY[0x2495282F0](MEMORY[0x24BDE43D0], MEMORY[0x24BDE43C8]);
    atomic_store(result, (unint64_t *)&qword_257418D10);
  }
  return result;
}

uint64_t sub_244D9BEF0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_244D9BF14(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for MonitorEvent(a2, a1);
  return a2;
}

uint64_t sub_244D9BF50()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244D9BF84()
{
  uint64_t v0;

  return sub_244D96B60(*(_QWORD *)(v0 + 16), v0 + 24, *(_QWORD *)(v0 + 72));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_244D9BFAC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE12C8], v4);
    atomic_store(result, a1);
  }
  return result;
}

id sub_244D9BFEC(void *a1)
{
  uint64_t v1;

  return sub_244D970B0(a1, *(unsigned __int8 **)(v1 + 16));
}

uint64_t sub_244D9C004(uint64_t a1)
{
  destroy for MonitorEvent(a1);
  return a1;
}

uint64_t sub_244D9C038(int a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  void *v6;
  void *v7;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  _BYTE *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint8_t *v45;
  uint8_t *v46;
  void *v47;
  _BYTE *v48;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  id v58;
  id v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  id v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint8_t *v69;
  NSObject *v70;
  id v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  void *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[3];

  v7 = v6;
  v76 = a1;
  v81[2] = *MEMORY[0x24BDAC8D0];
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v13 = MEMORY[0x24BDAC7A8](v77);
  v15 = (char *)v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v67 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (uint64_t)v67 - v19;
  if (*(_QWORD *)(a2 + 40))
  {
    sub_244D73FC0(a3, a4);
    sub_244D73FAC(a5, a6);
    v21 = *(void **)(a2 + 40);
    if (v21)
      goto LABEL_3;
LABEL_13:
    sub_244D9A6A0();
    swift_allocError();
    *v35 = 1;
    swift_willThrow();
LABEL_27:
    sub_244D651AC(a3, a4);
    sub_244D65198(a5, a6);
    return v20;
  }
  v75 = v6;
  v78 = (uint64_t)v67 - v19;
  v27 = objc_opt_self();
  v28 = a4;
  v29 = (void *)v27;
  v74 = v28;
  sub_244D73FC0(a3, v28);
  sub_244D73FAC(a5, a6);
  v30 = objc_msgSend(v29, sel_shared);
  v80 = 0;
  v31 = objc_msgSend(v30, sel_makeReaderAndReturnError_, &v80);

  v32 = (id)v80;
  if (v31)
  {
    a4 = v74;
LABEL_11:
    v33 = v32;
    v34 = *(void **)(a2 + 40);
    *(_QWORD *)(a2 + 40) = v31;

    goto LABEL_12;
  }
  v71 = v29;
  v36 = (id)v80;
  v37 = (void *)sub_244E4C1E0();

  swift_willThrow();
  v75 = 0;
  _s3__C4CodeOMa_1(0);
  v80 = 14001;
  v38 = v37;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  LOBYTE(v36) = sub_244E4C12C();

  if ((v36 & 1) != 0)
  {
    v73 = a5;

    if (qword_257414400 != -1)
      swift_once();
    v39 = __swift_project_value_buffer(v77, (uint64_t)qword_257419E00);
    sub_244D640E4(v39, (uint64_t)v18);
    v40 = sub_244E4DCD4();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v18, 1, v40);
    v72 = a6;
    if (v42 == 1)
    {
      sub_244D6412C((uint64_t)v18);
    }
    else
    {
      v50 = sub_244E4DCBC();
      v51 = sub_244E4E67C();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v52 = 0;
        _os_log_impl(&dword_244D61000, v50, v51, "SPR XPC service disconnected, let's try one more time", v52, 2u);
        MEMORY[0x2495283BC](v52, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v40);
    }
    v53 = objc_msgSend(v71, sel_shared);
    v80 = 0;
    v31 = objc_msgSend(v53, sel_makeReaderAndReturnError_, &v80);

    v32 = (id)v80;
    a5 = v73;
    a4 = v74;
    if (v31)
    {
      a6 = v72;
      goto LABEL_11;
    }
    v54 = (id)v80;
    v37 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v75 = 0;
    a6 = v72;
  }
  else
  {
    a4 = v74;
  }
  if (qword_257414400 != -1)
    swift_once();
  v55 = __swift_project_value_buffer(v77, (uint64_t)qword_257419E00);
  sub_244D640E4(v55, (uint64_t)v15);
  v56 = sub_244E4DCD4();
  v57 = *(_QWORD *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v15, 1, v56) == 1)
  {

    sub_244D6412C((uint64_t)v15);
  }
  else
  {
    v74 = v57;
    v58 = v37;
    v59 = v37;
    v60 = sub_244E4DCBC();
    v61 = sub_244E4E67C();
    LODWORD(v71) = v61;
    if (os_log_type_enabled(v60, v61))
    {
      v70 = v60;
      v62 = (uint8_t *)swift_slowAlloc();
      v68 = swift_slowAlloc();
      v79 = (uint64_t)v37;
      v80 = v68;
      v73 = a5;
      v69 = v62;
      *(_DWORD *)v62 = 136446210;
      v67[1] = v62 + 4;
      v63 = v37;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
      v64 = sub_244E4E370();
      v79 = sub_244D9A70C(v64, v65, &v80);
      a5 = v73;
      sub_244E4E7E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v70, (os_log_type_t)v71, "Could not make Reader module! Error: [ %{public}s ]", v69, 0xCu);
      v66 = v68;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v66, -1, -1);
      MEMORY[0x2495283BC](v69, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v74 + 8))(v15, v56);
  }
LABEL_12:
  v20 = v78;
  v7 = v75;
  v21 = *(void **)(a2 + 40);
  if (!v21)
    goto LABEL_13;
LABEL_3:
  v22 = v21;
  sub_244D96518(v22, a5, a6, v81);
  if (v7)
  {
    v78 = v20;
    _s3__C4CodeOMa_1(0);
    v80 = 14001;
    v23 = v7;
    sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
    v20 = sub_244E4C12C();

    if ((v20 & 1) == 0)
    {
LABEL_26:

      goto LABEL_27;
    }
    v73 = a5;

    if (qword_257414400 != -1)
      swift_once();
    v24 = __swift_project_value_buffer(v77, (uint64_t)qword_257419E00);
    v20 = v78;
    sub_244D640E4(v24, v78);
    v25 = sub_244E4DCD4();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v20, 1, v25) == 1)
    {
      sub_244D6412C(v20);
    }
    else
    {
      v20 = sub_244E4DCBC();
      v43 = sub_244E4E67C();
      if (os_log_type_enabled((os_log_t)v20, v43))
      {
        v44 = (uint8_t *)swift_slowAlloc();
        v72 = a6;
        v45 = v44;
        *(_WORD *)v44 = 0;
        _os_log_impl(&dword_244D61000, (os_log_t)v20, v43, "XPC service disconnected, let's try one more time", v44, 2u);
        v46 = v45;
        a6 = v72;
        MEMORY[0x2495283BC](v46, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v78, v25);
    }
    v47 = *(void **)(a2 + 40);
    *(_QWORD *)(a2 + 40) = 0;

    a5 = v73;
    if ((v76 & 1) != 0)
    {
      sub_244D9A6A0();
      swift_allocError();
      *v48 = 1;
      swift_willThrow();
      goto LABEL_26;
    }
    sub_244D73FC0(a3, a4);
    sub_244D73FAC(a5, a6);
    v20 = sub_244D9C038(1, a2, a3, a4, a5, a6);
    sub_244D65198(a5, a6);
    sub_244D651AC(a3, a4);

    sub_244D651AC(a3, a4);
    sub_244D65198(a5, a6);
  }
  else
  {

    sub_244D651AC(a3, a4);
    sub_244D65198(a5, a6);
    return v81[0];
  }
  return v20;
}

uint64_t sub_244D9C924()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244D9C960(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_244D71068;
  return sub_244DB7F94(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_244D9C9E0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_244D9CA0C(void *a1, void *a2)
{
  uint64_t v2;

  sub_244D95AD4(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_244D9CA14()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244D9CA40(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_244D70150;
  return sub_244DB6BEC(a1, v4, v5, v6);
}

double sub_244D9CAB4()
{
  uint64_t v0;
  double result;

  type metadata accessor for TaskManager();
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  qword_257419EE8 = v0;
  return result;
}

uint64_t sub_244D9CAE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  _BYTE *v19;
  _BYTE v20[24];
  _BYTE v21[40];
  _BYTE v22[24];
  uint64_t v23;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v3);
  v5 = &v20[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_244D91E3C(v1 + 16, (uint64_t)v22, &qword_257416650);
  v9 = v23;
  sub_244D66F54((uint64_t)v22, &qword_257416650);
  if (v9)
  {
    if (qword_257414408 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E18);
    sub_244D91E3C(v10, (uint64_t)v8, &qword_2574145A0);
    v11 = sub_244E4DCD4();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
    {
      sub_244D66F54((uint64_t)v8, &qword_2574145A0);
    }
    else
    {
      v16 = sub_244E4DCBC();
      v17 = sub_244E4E67C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_244D61000, v16, v17, "TaskManager is busy", v18, 2u);
        MEMORY[0x2495283BC](v18, -1, -1);
      }

      (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v8, v11);
    }
    sub_244D9A6A0();
    swift_allocError();
    *v19 = 0;
    return swift_willThrow();
  }
  else
  {
    sub_244D9D224(a1, (uint64_t)v22);
    sub_244D9D268((uint64_t)v22, (uint64_t)v21);
    swift_beginAccess();
    sub_244D9D2B0((uint64_t)v21, v1 + 16);
    swift_endAccess();
    v13 = sub_244E4E55C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v5, 1, 1, v13);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = 0;
    v14[3] = 0;
    v14[4] = v1;
    swift_retain();
    sub_244DB2DDC((uint64_t)v5, (uint64_t)&unk_257416660, (uint64_t)v14);
    return swift_release();
  }
}

uint64_t sub_244D9CDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 184) = a4;
  return swift_task_switch();
}

uint64_t sub_244D9CDE0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 184) + 16;
  swift_beginAccess();
  sub_244D91E3C(v1, v0 + 16, &qword_257416650);
  if (*(_QWORD *)(v0 + 40))
  {
    sub_244D9D224(v0 + 16, v0 + 96);
    sub_244D66F54(v0 + 16, &qword_257416650);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 120));
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v2;
    *v2 = v0;
    v2[1] = sub_244D9CF08;
    return sub_244E06574();
  }
  else
  {
    sub_244D66F54(v0 + 16, &qword_257416650);
    v4 = *(_QWORD *)(v0 + 184) + 16;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_QWORD *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    swift_beginAccess();
    sub_244D9D2B0(v0 + 56, v4);
    swift_endAccess();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_244D9CF08()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244D9CF5C()
{
  uint64_t v0;
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  v1 = *(_QWORD *)(v0 + 184) + 16;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_QWORD *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  swift_beginAccess();
  sub_244D9D2B0(v0 + 56, v1);
  swift_endAccess();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_244D9CFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _BYTE v12[24];
  _DWORD v13[6];
  uint64_t v14;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  sub_244D91E3C(v0 + 16, (uint64_t)v13, &qword_257416650);
  v4 = v14;
  sub_244D66F54((uint64_t)v13, &qword_257416650);
  if (qword_257414408 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v1, (uint64_t)qword_257419E18);
  sub_244D91E3C(v5, (uint64_t)v3, &qword_2574145A0);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v6) == 1)
  {
    sub_244D66F54((uint64_t)v3, &qword_2574145A0);
  }
  else
  {
    v8 = sub_244E4DCBC();
    v9 = sub_244E4E688();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 67109120;
      v13[0] = v4 != 0;
      sub_244E4E7E4();
      _os_log_impl(&dword_244D61000, v8, v9, "checking TaskManager busy: %{BOOL}d", v10, 8u);
      MEMORY[0x2495283BC](v10, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v3, v6);
  }
  return v4 != 0;
}

uint64_t sub_244D9D1D8()
{
  uint64_t v0;

  sub_244D66F54(v0 + 16, &qword_257416650);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TaskManager()
{
  return objc_opt_self();
}

uint64_t sub_244D9D224(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_244D9D268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D9D2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416650);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D9D2F8()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244D9D324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_244D70150;
  v3[23] = v2;
  return swift_task_switch();
}

uint64_t storeEnumTagSinglePayload for InternalError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_244D9D3D0 + 4 * byte_244E52D95[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_244D9D404 + 4 * byte_244E52D90[v4]))();
}

uint64_t sub_244D9D404(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D9D40C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244D9D414);
  return result;
}

uint64_t sub_244D9D420(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244D9D428);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_244D9D42C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244D9D434(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalError()
{
  return &type metadata for InternalError;
}

unint64_t sub_244D9D454()
{
  unint64_t result;

  result = qword_257416668;
  if (!qword_257416668)
  {
    result = MEMORY[0x2495282F0](&unk_244E52E14, &type metadata for InternalError);
    atomic_store(result, (unint64_t *)&qword_257416668);
  }
  return result;
}

uint64_t sub_244D9D498()
{
  sub_244E4EB80();
  sub_244E4EBA4();
  return sub_244E4EBC8();
}

uint64_t sub_244D9D4DC()
{
  return sub_244E4EBA4();
}

uint64_t sub_244D9D508()
{
  sub_244E4EB80();
  sub_244E4EBA4();
  return sub_244E4EBC8();
}

uint64_t sub_244D9D548@<X0>(__int16 *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_244D9F5EC(*a1);
  *a2 = result;
  return result;
}

void sub_244D9D570(_WORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1200;
}

uint64_t sub_244D9D580()
{
  sub_244DA2B58();
  return sub_244E4E4A8();
}

unint64_t sub_244D9D5CC()
{
  return 0xD000000000000011;
}

uint64_t sub_244D9D5E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D9F604(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_244D9D610()
{
  sub_244DA2C24();
  return sub_244E4EC04();
}

uint64_t sub_244D9D638()
{
  sub_244DA2C24();
  return sub_244E4EC10();
}

uint64_t sub_244D9D660(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_244D86870(a1, a2, a3, &qword_257416720, (void (*)(void))sub_244DA2C24);
}

uint64_t sub_244D9D68C()
{
  sub_244DA2B9C();
  return sub_244E4EC04();
}

uint64_t sub_244D9D6B4()
{
  sub_244DA2B9C();
  return sub_244E4EC10();
}

uint64_t sub_244D9D6DC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_244D86870(a1, a2, a3, &qword_257416700, (void (*)(void))sub_244DA2B9C);
}

uint64_t sub_244D9D708()
{
  sub_244DA2E00();
  return sub_244E4EC04();
}

uint64_t sub_244D9D730()
{
  sub_244DA2E00();
  return sub_244E4EC10();
}

uint64_t sub_244D9D758(_QWORD *a1)
{
  return sub_244D9ED54(a1, &qword_257416790, (void (*)(void))sub_244DA2E00);
}

uint64_t sub_244D9D784()
{
  sub_244DA2D78();
  return sub_244E4EC04();
}

uint64_t sub_244D9D7AC()
{
  sub_244DA2D78();
  return sub_244E4EC10();
}

uint64_t sub_244D9D7D4(_QWORD *a1)
{
  return sub_244D9ED54(a1, &qword_257416770, (void (*)(void))sub_244DA2D78);
}

uint64_t sub_244D9D800(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_244D9D838 + 4 * byte_244E52E80[a1]))(0xD000000000000011, 0x8000000244E56AF0);
}

uint64_t sub_244D9D838()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_244D9D854()
{
  return 0x496E6F6973736573;
}

uint64_t sub_244D9D870()
{
  return 0x746E756F6D61;
}

uint64_t sub_244D9D884()
{
  return 0x746361736E617274;
}

uint64_t sub_244D9D8D0()
{
  return 0x644964616572;
}

uint64_t sub_244D9D8E4()
{
  return 0x6974617669746361;
}

uint64_t sub_244D9D904()
{
  unsigned __int8 *v0;

  return sub_244D9D800(*v0);
}

uint64_t sub_244D9D90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D9F8BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D9D930()
{
  sub_244DA2E88();
  return sub_244E4EC04();
}

uint64_t sub_244D9D958()
{
  sub_244DA2E88();
  return sub_244E4EC10();
}

uint64_t sub_244D9D980(_QWORD *a1)
{
  return sub_244D9E2D4(a1, &qword_2574167B0, (void (*)(void))sub_244DA2E88, (uint64_t)&type metadata for ReadStarted.CodingKeys, (void (*)(uint64_t, uint64_t, _BYTE *, uint64_t))MEMORY[0x24BEE34A0]);
}

uint64_t sub_244D9D9B4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_244D9D9EC + 4 * byte_244E52E89[a1]))(0xD000000000000011, 0x8000000244E56AF0);
}

uint64_t sub_244D9D9EC()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_244D9DA08()
{
  return 0x496E6F6973736573;
}

uint64_t sub_244D9DA38()
{
  return 0x746E756F6D61;
}

uint64_t sub_244D9DA4C()
{
  return 0x656D65686373;
}

uint64_t sub_244D9DA60()
{
  return 0x746361736E617274;
}

uint64_t sub_244D9DAAC()
{
  return 0x644964616572;
}

uint64_t sub_244D9DAC0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574167E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DA2F54();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA60();
    v8[10] = 5;
    sub_244E4EA60();
    v8[9] = 6;
    sub_244E4EA60();
    v8[8] = 7;
    sub_244E4EA60();
    v8[7] = 8;
    sub_244E4EA60();
    v8[6] = 9;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D9DD14()
{
  unsigned __int8 *v0;

  return sub_244D9D9B4(*v0);
}

uint64_t sub_244D9DD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244D9FFA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D9DD40()
{
  sub_244DA2F54();
  return sub_244E4EC04();
}

uint64_t sub_244D9DD68()
{
  sub_244DA2F54();
  return sub_244E4EC10();
}

uint64_t sub_244D9DD90(_QWORD *a1)
{
  return sub_244D9DAC0(a1);
}

uint64_t sub_244D9DDA4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_244D9DDDC + 4 * byte_244E52E93[a1]))(0xD000000000000011, 0x8000000244E56AF0);
}

uint64_t sub_244D9DDDC()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_244D9DDF8()
{
  return 0x496E6F6973736573;
}

uint64_t sub_244D9DE28()
{
  return 0x746E756F6D61;
}

uint64_t sub_244D9DE3C()
{
  return 0x656D65686373;
}

uint64_t sub_244D9DE50()
{
  return 0x746361736E617274;
}

uint64_t sub_244D9DE88()
{
  return 0x6E6F73616572;
}

uint64_t sub_244D9DE9C()
{
  return 0x644964616572;
}

uint64_t sub_244D9DEC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574167D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DA2F10();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA60();
    v8[10] = 5;
    sub_244E4EA60();
    v8[9] = 6;
    sub_244E4EA60();
    v8[8] = 7;
    sub_244E4EA60();
    v8[7] = 8;
    sub_244E4EA60();
    v8[6] = 9;
    sub_244E4EA60();
    v8[5] = 10;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D9E140()
{
  unsigned __int8 *v0;

  return sub_244D9DDA4(*v0);
}

uint64_t sub_244D9E148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DA0664(a1, a2);
  *a3 = result;
  return result;
}

void sub_244D9E16C(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_244D9E178()
{
  sub_244DA2F10();
  return sub_244E4EC04();
}

uint64_t sub_244D9E1A0()
{
  sub_244DA2F10();
  return sub_244E4EC10();
}

uint64_t sub_244D9E1C8(_QWORD *a1)
{
  return sub_244D9DEC4(a1);
}

uint64_t sub_244D9E1DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_244D9E214 + 4 * byte_244E52E9E[a1]))(0xD000000000000011, 0x8000000244E56AF0);
}

uint64_t sub_244D9E214()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_244D9E230()
{
  return 0x496E6F6973736573;
}

uint64_t sub_244D9E260()
{
  return 0x746E756F6D61;
}

uint64_t sub_244D9E274()
{
  return 0x746361736E617274;
}

uint64_t sub_244D9E2C0()
{
  return 0x644964616572;
}

uint64_t sub_244D9E2D4(_QWORD *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t, _BYTE *, uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, _BYTE *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, _BYTE *, uint64_t);
  uint64_t v20;
  _BYTE v21[17];

  v19 = a5;
  v7 = v5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_244E4EBEC();
  v21[16] = 0;
  v13 = v20;
  sub_244E4EA60();
  if (!v13)
  {
    v14 = v19;
    v21[15] = 1;
    sub_244E4EA60();
    v21[14] = 2;
    sub_244E4EA60();
    v21[13] = 3;
    sub_244E4EA60();
    v21[12] = 4;
    sub_244E4EA60();
    v21[11] = 5;
    sub_244E4EA60();
    v21[10] = 6;
    sub_244E4EA60();
    v21[9] = 7;
    sub_244E4EA60();
    v15 = *(_QWORD *)(v7 + 128);
    v16 = *(_QWORD *)(v7 + 136);
    v21[0] = 8;
    v14(v15, v16, v21, v9);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_244D9E50C()
{
  unsigned __int8 *v0;

  return sub_244D9E1DC(*v0);
}

uint64_t sub_244D9E514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DA0D40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D9E538()
{
  sub_244DA2ECC();
  return sub_244E4EC04();
}

uint64_t sub_244D9E560()
{
  sub_244DA2ECC();
  return sub_244E4EC10();
}

uint64_t sub_244D9E588(_QWORD *a1)
{
  return sub_244D9E2D4(a1, &qword_2574167C0, (void (*)(void))sub_244DA2ECC, (uint64_t)&type metadata for ReadCanceled.CodingKeys, (void (*)(uint64_t, uint64_t, _BYTE *, uint64_t))MEMORY[0x24BEE3428]);
}

uint64_t sub_244D9E5BC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_244D9E5F4 + 4 * byte_244E52EA7[a1]))(0xD000000000000011, 0x8000000244E56AF0);
}

uint64_t sub_244D9E5F4()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_244D9E610()
{
  return 0x496E6F6973736573;
}

uint64_t sub_244D9E640()
{
  return 0x746E756F6D61;
}

uint64_t sub_244D9E654()
{
  return 0x746361736E617274;
}

uint64_t sub_244D9E6A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574167A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DA2E44();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA60();
    v8[10] = 5;
    sub_244E4EA60();
    v8[9] = 6;
    sub_244E4EA60();
    v8[8] = 7;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D9E8A4()
{
  unsigned __int8 *v0;

  return sub_244D9E5BC(*v0);
}

uint64_t sub_244D9E8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DA4414(a1, a2);
  *a3 = result;
  return result;
}

void sub_244D9E8D0(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_244D9E8DC()
{
  sub_244DA2E44();
  return sub_244E4EC04();
}

uint64_t sub_244D9E904()
{
  sub_244DA2E44();
  return sub_244E4EC10();
}

uint64_t sub_244D9E92C(_QWORD *a1)
{
  return sub_244D9E6A0(a1);
}

uint64_t sub_244D9E940(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];
  char v13;
  char v14;

  v12[0] = a4;
  v12[1] = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416740);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DA2CAC();
  sub_244E4EBEC();
  v14 = 0;
  sub_244E4EA60();
  if (!v5)
  {
    v13 = 1;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_244D9EA68()
{
  _BYTE *v0;

  if (*v0)
    return 0x5472656E74726170;
  else
    return 0xD000000000000011;
}

uint64_t sub_244D9EAB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DA479C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D9EAD4()
{
  sub_244DA2CAC();
  return sub_244E4EC04();
}

uint64_t sub_244D9EAFC()
{
  sub_244DA2CAC();
  return sub_244E4EC10();
}

uint64_t sub_244D9EB24(_QWORD *a1)
{
  uint64_t *v1;

  return sub_244D9E940(a1, *v1, v1[1], v1[2], v1[3]);
}

unint64_t sub_244D9EB40()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746E61686372656DLL;
  if (*v0 != 1)
    v1 = 0x546E6F6973736573;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_244D9EBAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DA48A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D9EBD0()
{
  sub_244DA2D34();
  return sub_244E4EC04();
}

uint64_t sub_244D9EBF8()
{
  sub_244DA2D34();
  return sub_244E4EC10();
}

uint64_t sub_244D9EC20(_QWORD *a1)
{
  return sub_244D9ED54(a1, &qword_257416760, (void (*)(void))sub_244DA2D34);
}

unint64_t sub_244D9EC4C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746E61686372656DLL;
  if (*v0 != 1)
    v1 = 0x496E6F6973736573;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_244D9ECB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DA4A14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D9ECD8()
{
  sub_244DA2BE0();
  return sub_244E4EC04();
}

uint64_t sub_244D9ED00()
{
  sub_244DA2BE0();
  return sub_244E4EC10();
}

uint64_t sub_244D9ED28(_QWORD *a1)
{
  return sub_244D9ED54(a1, &qword_257416710, (void (*)(void))sub_244DA2BE0);
}

uint64_t sub_244D9ED54(_QWORD *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_244E4EBEC();
  v14 = 0;
  v9 = v11[1];
  sub_244E4EA60();
  if (!v9)
  {
    v13 = 1;
    sub_244E4EA60();
    v12 = 2;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_244D9EE98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416750);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DA2CF0();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA60();
    v8[12] = 3;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244D9EFFC()
{
  sub_244DA2C68();
  return sub_244E4EC04();
}

uint64_t sub_244D9F024()
{
  sub_244DA2C68();
  return sub_244E4EC10();
}

uint64_t sub_244D9F04C(_QWORD *a1)
{
  return sub_244D9ED54(a1, &qword_257416730, (void (*)(void))sub_244DA2C68);
}

unint64_t sub_244D9F078()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746E61686372656DLL;
  if (*v0 != 1)
    v1 = 0x646F43726F727265;
  if (*v0)
    return v1;
  else
    return 0xD000000000000011;
}

uint64_t sub_244D9F0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DA4B7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D9F104()
{
  sub_244DA2DBC();
  return sub_244E4EC04();
}

uint64_t sub_244D9F12C()
{
  sub_244DA2DBC();
  return sub_244E4EC10();
}

uint64_t sub_244D9F154(_QWORD *a1)
{
  return sub_244D9ED54(a1, &qword_257416780, (void (*)(void))sub_244DA2DBC);
}

uint64_t sub_244D9F180()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_244D9F1B4 + 4 * byte_244E52EAF[*v0]))(0xD000000000000011, 0x8000000244E56AF0);
}

uint64_t sub_244D9F1B4()
{
  return 0x746E61686372656DLL;
}

uint64_t sub_244D9F1D0()
{
  return 0x496E6F6973736573;
}

uint64_t sub_244D9F1EC()
{
  return 0x646F43726F727265;
}

uint64_t sub_244D9F20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DA4CE4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244D9F230()
{
  sub_244DA2CF0();
  return sub_244E4EC04();
}

uint64_t sub_244D9F258()
{
  sub_244DA2CF0();
  return sub_244E4EC10();
}

uint64_t sub_244D9F280(_QWORD *a1)
{
  return sub_244D9EE98(a1);
}

uint64_t sub_244D9F294(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  int v6;
  uint64_t v8;
  char v11;
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  _BYTE v18[344];
  _BYTE v19[344];
  _BYTE v20[264];
  char v21;
  _BYTE v22[344];

  sub_244D6B9EC(a3, (uint64_t)v19);
  sub_244D6B9EC((uint64_t)v19, (uint64_t)v22);
  v6 = a2 >> 6;
  if (v6 == 1)
    return 0x6461655264726163;
  if (v6 == 2)
  {
    if (a2 == 128 && a1 == 5)
    {
      v8 = 0x4164616552797274;
      sub_244D6B9EC(a3, (uint64_t)v20);
      if (sub_244D6BA34((uint64_t)v20) == 1)
        return v8;
      v11 = v21;
      sub_244E4E37C();
      sub_244D6B9EC((uint64_t)v22, (uint64_t)v18);
      sub_244D6BA4C((uint64_t)v18);
      sub_244D70D08();
      v12 = sub_244E4E820();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        sub_244E4E37C();
        v13 = sub_244E4E820();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
          goto LABEL_31;
      }
      if ((v11 & 1) == 0)
        goto LABEL_31;
    }
    else
    {
      v8 = 0xD000000000000010;
      if (a2 == 128 && a1 == 11)
        return 0xD000000000000013;
      if (a2 != 128 || a1 != 10)
        return sub_244DB0EDC(a1, a2);
      sub_244D6B9EC(a3, (uint64_t)v20);
      if (sub_244D6BA34((uint64_t)v20) == 1)
        return v8;
      v14 = v21;
      sub_244E4E37C();
      sub_244D6B9EC((uint64_t)v22, (uint64_t)v18);
      sub_244D6BA4C((uint64_t)v18);
      sub_244D70D08();
      v15 = sub_244E4E820();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0 && (sub_244E4E37C(), v16 = sub_244E4E820(), swift_bridgeObjectRelease(), (v16 & 1) == 0)
        || (v14 & 1) == 0)
      {
LABEL_31:
        sub_244D6BB6C(a3);
        return v8;
      }
    }
    v8 = sub_244E4D2D8();
    goto LABEL_31;
  }
  return sub_244DB0EDC(a1, a2);
}

uint64_t sub_244D9F5EC(__int16 a1)
{
  if ((unsigned __int16)(a1 - 1200) >= 0x17u)
    return 23;
  else
    return (unsigned __int16)(a1 - 1200);
}

uint64_t sub_244D9F604(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_244D9F688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  v54 = a1;
  v55 = a2;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416670);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a3[6];
  v18 = a3[7];
  v19 = a3[5];
  v61 = a3[4];
  v62 = v17;
  swift_bridgeObjectRetain();
  v63 = v19;
  swift_bridgeObjectRetain();
  v20 = (void *)sub_244E4CC9C();
  v21 = objc_msgSend(v20, sel_description);
  v22 = sub_244E4E31C();
  v59 = v23;
  v60 = v22;

  v24 = *(void **)(a4 + 16);
  sub_244E4CC54();
  v25 = sub_244E4CE28();
  v64 = v18;
  v65 = a6;
  v57 = v26;
  v58 = v25;
  if (!a7)
  {
    v28 = a3[15];
    v27 = a3[16];
    goto LABEL_5;
  }
  v27 = a3[18];
  if (v27)
  {
    v28 = a3[17];
LABEL_5:
    v53 = v28;
    v52 = v27;
    goto LABEL_7;
  }
  v29 = sub_244E4D8E4();
  v52 = v30;
  v53 = v29;
LABEL_7:
  swift_bridgeObjectRetain();
  v31 = v24;
  v56 = sub_244E4CC84();
  v33 = v32;

  v34 = a5;
  sub_244D9FF18(a5, (uint64_t)v16);
  v35 = sub_244E4C3A8();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v16, 1, v35) == 1)
  {
    sub_244D9FF60((uint64_t)v16);
    v37 = sub_244E4D8E4();
    v39 = v38;
  }
  else
  {
    v37 = sub_244E4C390();
    v39 = v40;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v35);
  }
  v42 = v64;
  v41 = v65;
  v43 = v34;
  if (!a7)
  {
    v41 = sub_244E4D8E4();
    a7 = v44;
  }
  swift_release();
  v45 = v54;
  v46 = v55;
  result = sub_244D9FF60(v43);
  *a8 = v45;
  a8[1] = v46;
  a8[2] = v62;
  a8[3] = v42;
  v48 = v63;
  a8[4] = v61;
  a8[5] = v48;
  v49 = v59;
  a8[6] = v60;
  a8[7] = v49;
  v50 = v57;
  a8[8] = v58;
  a8[9] = v50;
  v51 = v52;
  a8[10] = v53;
  a8[11] = v51;
  a8[12] = v56;
  a8[13] = v33;
  a8[14] = v37;
  a8[15] = v39;
  a8[16] = v41;
  a8[17] = a7;
  return result;
}

uint64_t sub_244D9F8BC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56A20 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x644964616572 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6974617669746361 && a2 == 0xEC00000064496E6FLL)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_244D9FCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v69 = a1;
  v70 = a2;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416670);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a3[6];
  v17 = a3[7];
  v19 = a3[5];
  v62 = a3[4];
  v63 = v18;
  v20 = a3[14];
  v61 = a3[13];
  v66 = v17;
  swift_bridgeObjectRetain();
  v65 = v19;
  swift_bridgeObjectRetain();
  v64 = v20;
  swift_bridgeObjectRetain();
  v21 = (void *)sub_244E4CC9C();
  v22 = objc_msgSend(v21, sel_description);
  v23 = sub_244E4E31C();
  v59 = v24;
  v60 = v23;

  v25 = *(_QWORD *)(a5 + 24);
  v57 = *(_QWORD *)(a5 + 16);
  v58 = v25;
  v67 = a5;
  v68 = a4;
  v26 = *(void **)(a4 + 16);
  swift_bridgeObjectRetain();
  sub_244E4CC54();
  v27 = sub_244E4CE28();
  v55 = v28;
  v56 = v27;
  if ((a6 & 1) == 0)
  {
    v30 = a3[15];
    v29 = a3[16];
    goto LABEL_5;
  }
  v29 = a3[18];
  if (v29)
  {
    v30 = a3[17];
LABEL_5:
    v54 = v30;
    v53 = v29;
    goto LABEL_7;
  }
  v31 = sub_244E4D8E4();
  v53 = v32;
  v54 = v31;
LABEL_7:
  swift_bridgeObjectRetain();
  v33 = v26;
  v34 = sub_244E4CC84();
  v36 = v35;

  v37 = a7;
  sub_244D9FF18(a7, (uint64_t)v16);
  v38 = sub_244E4C3A8();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v16, 1, v38) == 1)
  {
    sub_244D9FF60((uint64_t)v16);
    v40 = sub_244E4D8E4();
    v42 = v41;
  }
  else
  {
    v40 = sub_244E4C390();
    v42 = v43;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v38);
  }
  sub_244D7E9EC(v67);
  swift_release();
  swift_release();
  result = sub_244D9FF60(v37);
  v45 = v70;
  *a8 = v69;
  a8[1] = v45;
  v46 = v66;
  a8[2] = v63;
  a8[3] = v46;
  v47 = v65;
  a8[4] = v62;
  a8[5] = v47;
  v48 = v64;
  a8[6] = v61;
  a8[7] = v48;
  v49 = v59;
  a8[8] = v60;
  a8[9] = v49;
  v50 = v58;
  a8[10] = v57;
  a8[11] = v50;
  v51 = v55;
  a8[12] = v56;
  a8[13] = v51;
  v52 = v53;
  a8[14] = v54;
  a8[15] = v52;
  a8[16] = v34;
  a8[17] = v36;
  a8[18] = v40;
  a8[19] = v42;
  return result;
}

uint64_t sub_244D9FF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_244D9FF60(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416670);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244D9FFA0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D65686373 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56A20 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x644964616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_244DA03F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t result;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;

  v71 = a5;
  v72 = a6;
  v68 = a1;
  v69 = a2;
  v16 = a11;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416670);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a3[6];
  v20 = a3[7];
  v22 = a3[5];
  v63 = a3[4];
  v64 = v21;
  v23 = a3[14];
  v62 = a3[13];
  v67 = v20;
  swift_bridgeObjectRetain();
  v66 = v22;
  swift_bridgeObjectRetain();
  v65 = v23;
  swift_bridgeObjectRetain();
  v24 = (void *)sub_244E4CC9C();
  v25 = objc_msgSend(v24, sel_description);
  v26 = sub_244E4E31C();
  v60 = v27;
  v61 = v26;

  if (a11)
  {
    v54 = a10;
  }
  else
  {
    v54 = sub_244E4D8E4();
    v16 = v28;
  }
  sub_244E4CC54();
  v29 = sub_244E4CE28();
  v58 = v30;
  v59 = v29;
  v70 = v16;
  if ((a7 & 1) == 0)
  {
    v32 = a3[15];
    v31 = a3[16];
    goto LABEL_8;
  }
  v31 = a3[18];
  if (v31)
  {
    v32 = a3[17];
LABEL_8:
    v57 = v32;
    v56 = v31;
    goto LABEL_10;
  }
  v33 = sub_244E4D8E4();
  v56 = v34;
  v57 = v33;
LABEL_10:
  swift_bridgeObjectRetain();
  v55 = sub_244E4CC84();
  v36 = v35;
  v37 = a8;
  sub_244D9FF18(a8, (uint64_t)v19);
  v38 = sub_244E4C3A8();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v19, 1, v38) == 1)
  {
    sub_244D9FF60((uint64_t)v19);
    v40 = sub_244E4D8E4();
    v42 = v41;
  }
  else
  {
    v40 = sub_244E4C390();
    v42 = v43;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v19, v38);
  }
  swift_release();

  result = sub_244D9FF60(v37);
  v45 = v69;
  *a9 = v68;
  a9[1] = v45;
  v46 = v67;
  a9[2] = v64;
  a9[3] = v46;
  v47 = v66;
  a9[4] = v63;
  a9[5] = v47;
  v48 = v65;
  a9[6] = v62;
  a9[7] = v48;
  v49 = v60;
  a9[8] = v61;
  a9[9] = v49;
  v50 = v70;
  a9[10] = v54;
  a9[11] = v50;
  v51 = v58;
  a9[12] = v59;
  a9[13] = v51;
  a9[14] = v55;
  a9[15] = v36;
  v52 = v56;
  a9[16] = v57;
  a9[17] = v52;
  v53 = v72;
  a9[18] = v71;
  a9[19] = v53;
  a9[20] = v40;
  a9[21] = v42;
  return result;
}

uint64_t sub_244DA0664(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D65686373 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56A20 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x644964616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

uint64_t sub_244DA0B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v63 = a1;
  v64 = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416670);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a3[6];
  v15 = a3[7];
  v17 = a3[5];
  v57 = a3[4];
  v58 = v16;
  v18 = a3[14];
  v56 = a3[13];
  v61 = v15;
  swift_bridgeObjectRetain();
  v60 = v17;
  swift_bridgeObjectRetain();
  v59 = v18;
  swift_bridgeObjectRetain();
  v19 = (void *)sub_244E4CC9C();
  v20 = objc_msgSend(v19, sel_description);
  v21 = sub_244E4E31C();
  v54 = v22;
  v55 = v21;

  v62 = a4;
  v23 = *(void **)(a4 + 16);
  sub_244E4CC54();
  v24 = sub_244E4CE28();
  v52 = v25;
  v53 = v24;
  if ((a5 & 1) == 0)
  {
    v27 = a3[15];
    v26 = a3[16];
    goto LABEL_5;
  }
  v26 = a3[18];
  if (v26)
  {
    v27 = a3[17];
LABEL_5:
    v51 = v27;
    v50 = v26;
    goto LABEL_7;
  }
  v28 = sub_244E4D8E4();
  v50 = v29;
  v51 = v28;
LABEL_7:
  swift_bridgeObjectRetain();
  v30 = v23;
  v31 = sub_244E4CC84();
  v33 = v32;

  v34 = a6;
  sub_244D9FF18(a6, (uint64_t)v14);
  v35 = sub_244E4C3A8();
  v36 = *(_QWORD *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v14, 1, v35) == 1)
  {
    sub_244D9FF60((uint64_t)v14);
    v37 = sub_244E4D8E4();
    v39 = v38;
  }
  else
  {
    v37 = sub_244E4C390();
    v39 = v40;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v35);
  }
  swift_release();
  swift_release();
  result = sub_244D9FF60(v34);
  v42 = v64;
  *a7 = v63;
  a7[1] = v42;
  v43 = v61;
  a7[2] = v58;
  a7[3] = v43;
  v44 = v60;
  a7[4] = v57;
  a7[5] = v44;
  v45 = v59;
  a7[6] = v56;
  a7[7] = v45;
  v46 = v54;
  a7[8] = v55;
  a7[9] = v46;
  v47 = v52;
  a7[10] = v53;
  a7[11] = v47;
  v48 = v50;
  a7[12] = v51;
  a7[13] = v48;
  a7[14] = v31;
  a7[15] = v33;
  a7[16] = v37;
  a7[17] = v39;
  return result;
}

uint64_t sub_244DA0D40(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56A20 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x644964616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_244DA1124@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, char a4@<W4>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v8 = a3[7];
  v9 = a3[5];
  v26 = a3[4];
  v27 = a3[6];
  v10 = a3[14];
  v25 = a3[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = (void *)sub_244E4CC9C();
  v12 = objc_msgSend(v11, sel_description);
  v24 = sub_244E4E31C();
  v14 = v13;

  sub_244E4CC54();
  v15 = sub_244E4CE28();
  v17 = v16;
  if ((a4 & 1) != 0)
  {
    v18 = a3[18];
    if (!v18)
    {
      v19 = sub_244E4D8E4();
      v20 = v21;
      goto LABEL_7;
    }
    v19 = a3[17];
  }
  else
  {
    v19 = a3[15];
    v18 = a3[16];
  }
  v20 = v18;
LABEL_7:
  swift_bridgeObjectRetain();
  result = sub_244E4CC84();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = v27;
  a5[3] = v8;
  a5[4] = v26;
  a5[5] = v9;
  a5[6] = v25;
  a5[7] = v10;
  a5[8] = v24;
  a5[9] = v14;
  a5[10] = v15;
  a5[11] = v17;
  a5[12] = v19;
  a5[13] = v20;
  a5[14] = result;
  a5[15] = v23;
  return result;
}

uint64_t getEnumTagSinglePayload for MonitorEventType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEA)
    goto LABEL_17;
  if (a2 + 22 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 22) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 22;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 22;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 22;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x17;
  v8 = v6 - 23;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MonitorEventType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 22 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 22) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE9)
    return ((uint64_t (*)(void))((char *)&loc_244DA1334 + 4 * byte_244E52EB8[v4]))();
  *a1 = a2 + 22;
  return ((uint64_t (*)(void))((char *)sub_244DA1368 + 4 * byte_244E52EB3[v4]))();
}

uint64_t sub_244DA1368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA1370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DA1378);
  return result;
}

uint64_t sub_244DA1384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DA138CLL);
  *(_BYTE *)result = a2 + 22;
  return result;
}

uint64_t sub_244DA1390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA1398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MonitorEventType()
{
  return &type metadata for MonitorEventType;
}

ValueMetadata *type metadata accessor for ReaderInactive()
{
  return &type metadata for ReaderInactive;
}

ValueMetadata *type metadata accessor for SessionCreated()
{
  return &type metadata for SessionCreated;
}

ValueMetadata *type metadata accessor for ReaderActive()
{
  return &type metadata for ReaderActive;
}

ValueMetadata *type metadata accessor for SessionDeleted()
{
  return &type metadata for SessionDeleted;
}

ValueMetadata *type metadata accessor for InvalidPartnerToken()
{
  return &type metadata for InvalidPartnerToken;
}

ValueMetadata *type metadata accessor for InternalSessionError()
{
  return &type metadata for InternalSessionError;
}

ValueMetadata *type metadata accessor for InvalidSessionToken()
{
  return &type metadata for InvalidSessionToken;
}

ValueMetadata *type metadata accessor for SessionRefreshed()
{
  return &type metadata for SessionRefreshed;
}

ValueMetadata *type metadata accessor for OpenSessionFailed()
{
  return &type metadata for OpenSessionFailed;
}

ValueMetadata *type metadata accessor for SessionTokenExpired()
{
  return &type metadata for SessionTokenExpired;
}

uint64_t destroy for CancelRequested()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CancelRequested(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CancelRequested(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

_QWORD *assignWithTake for CancelRequested(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CancelRequested(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CancelRequested(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for CancelRequested()
{
  return &type metadata for CancelRequested;
}

ValueMetadata *type metadata accessor for ReadStarted()
{
  return &type metadata for ReadStarted;
}

uint64_t _s21ProximityReaderDaemon11ReadStartedVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_244DA1894(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadCanceled()
{
  return &type metadata for ReadCanceled;
}

uint64_t destroy for ReadFailed()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ReadFailed(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ReadFailed(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy176_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

_QWORD *assignWithTake for ReadFailed(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadFailed(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 176))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadFailed(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 176) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 176) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadFailed()
{
  return &type metadata for ReadFailed;
}

uint64_t destroy for MonitorEvent(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 8);
}

uint64_t initializeWithCopy for MonitorEvent(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a1 + 8, a2 + 8);
  return a1;
}

uint64_t assignWithCopy for MonitorEvent(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for MonitorEvent(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for MonitorEvent(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MonitorEvent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for MonitorEvent()
{
  return &type metadata for MonitorEvent;
}

uint64_t destroy for ReadCompleted()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ReadCompleted(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ReadCompleted(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

_QWORD *assignWithTake for ReadCompleted(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ReadCompleted(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 160))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadCompleted(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 160) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 160) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReadCompleted()
{
  return &type metadata for ReadCompleted;
}

unint64_t sub_244DA24FC()
{
  unint64_t result;

  result = qword_257416678;
  if (!qword_257416678)
  {
    result = MEMORY[0x2495282F0](&unk_244E5337C, &type metadata for MonitorEventType);
    atomic_store(result, (unint64_t *)&qword_257416678);
  }
  return result;
}

unint64_t sub_244DA2540(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA2564();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA2564()
{
  unint64_t result;

  result = qword_257416680;
  if (!qword_257416680)
  {
    result = MEMORY[0x2495282F0](&unk_244E532B4, &type metadata for ReaderInactive);
    atomic_store(result, (unint64_t *)&qword_257416680);
  }
  return result;
}

unint64_t sub_244DA25A8(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA25CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA25CC()
{
  unint64_t result;

  result = qword_257416688;
  if (!qword_257416688)
  {
    result = MEMORY[0x2495282F0](&unk_244E5328C, &type metadata for SessionCreated);
    atomic_store(result, (unint64_t *)&qword_257416688);
  }
  return result;
}

unint64_t sub_244DA2610(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA2634();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA2634()
{
  unint64_t result;

  result = qword_257416690;
  if (!qword_257416690)
  {
    result = MEMORY[0x2495282F0](&unk_244E53264, &type metadata for ReaderActive);
    atomic_store(result, (unint64_t *)&qword_257416690);
  }
  return result;
}

unint64_t sub_244DA2678(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA269C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA269C()
{
  unint64_t result;

  result = qword_257416698;
  if (!qword_257416698)
  {
    result = MEMORY[0x2495282F0](&unk_244E5323C, &type metadata for SessionDeleted);
    atomic_store(result, (unint64_t *)&qword_257416698);
  }
  return result;
}

unint64_t sub_244DA26E0(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA2704();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA2704()
{
  unint64_t result;

  result = qword_2574166A0;
  if (!qword_2574166A0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53214, &type metadata for InvalidPartnerToken);
    atomic_store(result, (unint64_t *)&qword_2574166A0);
  }
  return result;
}

unint64_t sub_244DA2748(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA276C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA276C()
{
  unint64_t result;

  result = qword_2574166A8;
  if (!qword_2574166A8)
  {
    result = MEMORY[0x2495282F0](&unk_244E531EC, &type metadata for InternalSessionError);
    atomic_store(result, (unint64_t *)&qword_2574166A8);
  }
  return result;
}

unint64_t sub_244DA27B0(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA27D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA27D4()
{
  unint64_t result;

  result = qword_2574166B0;
  if (!qword_2574166B0)
  {
    result = MEMORY[0x2495282F0](&unk_244E531C4, &type metadata for InvalidSessionToken);
    atomic_store(result, (unint64_t *)&qword_2574166B0);
  }
  return result;
}

unint64_t sub_244DA2818(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA283C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA283C()
{
  unint64_t result;

  result = qword_2574166B8;
  if (!qword_2574166B8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5319C, &type metadata for SessionRefreshed);
    atomic_store(result, (unint64_t *)&qword_2574166B8);
  }
  return result;
}

unint64_t sub_244DA2880(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA28A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA28A4()
{
  unint64_t result;

  result = qword_2574166C0;
  if (!qword_2574166C0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53174, &type metadata for OpenSessionFailed);
    atomic_store(result, (unint64_t *)&qword_2574166C0);
  }
  return result;
}

unint64_t sub_244DA28E8(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA290C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA290C()
{
  unint64_t result;

  result = qword_2574166C8;
  if (!qword_2574166C8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5314C, &type metadata for SessionTokenExpired);
    atomic_store(result, (unint64_t *)&qword_2574166C8);
  }
  return result;
}

unint64_t sub_244DA2950(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA2974();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA2974()
{
  unint64_t result;

  result = qword_2574166D0;
  if (!qword_2574166D0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53124, &type metadata for CancelRequested);
    atomic_store(result, (unint64_t *)&qword_2574166D0);
  }
  return result;
}

unint64_t sub_244DA29B8(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA29DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA29DC()
{
  unint64_t result;

  result = qword_2574166D8;
  if (!qword_2574166D8)
  {
    result = MEMORY[0x2495282F0](&unk_244E530FC, &type metadata for ReadStarted);
    atomic_store(result, (unint64_t *)&qword_2574166D8);
  }
  return result;
}

unint64_t sub_244DA2A20(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA2A44();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA2A44()
{
  unint64_t result;

  result = qword_2574166E0;
  if (!qword_2574166E0)
  {
    result = MEMORY[0x2495282F0](&unk_244E530D4, &type metadata for ReadCanceled);
    atomic_store(result, (unint64_t *)&qword_2574166E0);
  }
  return result;
}

unint64_t sub_244DA2A88(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA2AAC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA2AAC()
{
  unint64_t result;

  result = qword_2574166E8;
  if (!qword_2574166E8)
  {
    result = MEMORY[0x2495282F0](&unk_244E530AC, &type metadata for ReadFailed);
    atomic_store(result, (unint64_t *)&qword_2574166E8);
  }
  return result;
}

unint64_t sub_244DA2AF0(uint64_t a1)
{
  unint64_t result;

  result = sub_244DA2B14();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_244DA2B14()
{
  unint64_t result;

  result = qword_2574166F0;
  if (!qword_2574166F0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53084, &type metadata for ReadCompleted);
    atomic_store(result, (unint64_t *)&qword_2574166F0);
  }
  return result;
}

unint64_t sub_244DA2B58()
{
  unint64_t result;

  result = qword_2574166F8;
  if (!qword_2574166F8)
  {
    result = MEMORY[0x2495282F0](&unk_244E53304, &type metadata for MonitorEventType);
    atomic_store(result, (unint64_t *)&qword_2574166F8);
  }
  return result;
}

unint64_t sub_244DA2B9C()
{
  unint64_t result;

  result = qword_257416708;
  if (!qword_257416708)
  {
    result = MEMORY[0x2495282F0](&unk_244E5447C, &type metadata for ReaderInactive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416708);
  }
  return result;
}

unint64_t sub_244DA2BE0()
{
  unint64_t result;

  result = qword_257416718;
  if (!qword_257416718)
  {
    result = MEMORY[0x2495282F0](&unk_244E5442C, &type metadata for SessionCreated.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416718);
  }
  return result;
}

unint64_t sub_244DA2C24()
{
  unint64_t result;

  result = qword_257416728;
  if (!qword_257416728)
  {
    result = MEMORY[0x2495282F0](&unk_244E543DC, &type metadata for ReaderActive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416728);
  }
  return result;
}

unint64_t sub_244DA2C68()
{
  unint64_t result;

  result = qword_257416738;
  if (!qword_257416738)
  {
    result = MEMORY[0x2495282F0](&unk_244E5438C, &type metadata for SessionDeleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416738);
  }
  return result;
}

unint64_t sub_244DA2CAC()
{
  unint64_t result;

  result = qword_257416748;
  if (!qword_257416748)
  {
    result = MEMORY[0x2495282F0](&unk_244E5433C, &type metadata for InvalidPartnerToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416748);
  }
  return result;
}

unint64_t sub_244DA2CF0()
{
  unint64_t result;

  result = qword_257416758;
  if (!qword_257416758)
  {
    result = MEMORY[0x2495282F0](&unk_244E542EC, &type metadata for InternalSessionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416758);
  }
  return result;
}

unint64_t sub_244DA2D34()
{
  unint64_t result;

  result = qword_257416768;
  if (!qword_257416768)
  {
    result = MEMORY[0x2495282F0](&unk_244E5429C, &type metadata for InvalidSessionToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416768);
  }
  return result;
}

unint64_t sub_244DA2D78()
{
  unint64_t result;

  result = qword_257416778;
  if (!qword_257416778)
  {
    result = MEMORY[0x2495282F0](&unk_244E5424C, &type metadata for SessionRefreshed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416778);
  }
  return result;
}

unint64_t sub_244DA2DBC()
{
  unint64_t result;

  result = qword_257416788;
  if (!qword_257416788)
  {
    result = MEMORY[0x2495282F0](&unk_244E541FC, &type metadata for OpenSessionFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416788);
  }
  return result;
}

unint64_t sub_244DA2E00()
{
  unint64_t result;

  result = qword_257416798;
  if (!qword_257416798)
  {
    result = MEMORY[0x2495282F0](&unk_244E541AC, &type metadata for SessionTokenExpired.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416798);
  }
  return result;
}

unint64_t sub_244DA2E44()
{
  unint64_t result;

  result = qword_2574167A8;
  if (!qword_2574167A8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5415C, &type metadata for CancelRequested.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574167A8);
  }
  return result;
}

unint64_t sub_244DA2E88()
{
  unint64_t result;

  result = qword_2574167B8;
  if (!qword_2574167B8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5410C, &type metadata for ReadStarted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574167B8);
  }
  return result;
}

unint64_t sub_244DA2ECC()
{
  unint64_t result;

  result = qword_2574167C8;
  if (!qword_2574167C8)
  {
    result = MEMORY[0x2495282F0](&unk_244E540BC, &type metadata for ReadCanceled.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574167C8);
  }
  return result;
}

unint64_t sub_244DA2F10()
{
  unint64_t result;

  result = qword_2574167D8;
  if (!qword_2574167D8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5406C, &type metadata for ReadFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574167D8);
  }
  return result;
}

unint64_t sub_244DA2F54()
{
  unint64_t result;

  result = qword_2574167E8;
  if (!qword_2574167E8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5401C, &type metadata for ReadCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574167E8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReadCompleted.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_244DA2FE4 + 4 * byte_244E52EC2[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_244DA3018 + 4 * byte_244E52EBD[v4]))();
}

uint64_t sub_244DA3018(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA3020(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DA3028);
  return result;
}

uint64_t sub_244DA3034(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DA303CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_244DA3040(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA3048(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadCompleted.CodingKeys()
{
  return &type metadata for ReadCompleted.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ReadFailed.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for ReadFailed.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_244DA3140 + 4 * byte_244E52ECC[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_244DA3174 + 4 * byte_244E52EC7[v4]))();
}

uint64_t sub_244DA3174(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA317C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DA3184);
  return result;
}

uint64_t sub_244DA3190(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DA3198);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_244DA319C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA31A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadFailed.CodingKeys()
{
  return &type metadata for ReadFailed.CodingKeys;
}

ValueMetadata *type metadata accessor for ReadCanceled.CodingKeys()
{
  return &type metadata for ReadCanceled.CodingKeys;
}

uint64_t _s21ProximityReaderDaemon12ReadCanceledV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_244DA3224 + 4 * byte_244E52ED6[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_244DA3258 + 4 * byte_244E52ED1[v4]))();
}

uint64_t sub_244DA3258(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA3260(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DA3268);
  return result;
}

uint64_t sub_244DA3274(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DA327CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_244DA3280(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA3288(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReadStarted.CodingKeys()
{
  return &type metadata for ReadStarted.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CancelRequested.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for CancelRequested.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_244DA3380 + 4 * byte_244E52EE0[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_244DA33B4 + 4 * byte_244E52EDB[v4]))();
}

uint64_t sub_244DA33B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA33BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DA33C4);
  return result;
}

uint64_t sub_244DA33D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DA33D8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_244DA33DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA33E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CancelRequested.CodingKeys()
{
  return &type metadata for CancelRequested.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionTokenExpired.CodingKeys()
{
  return &type metadata for SessionTokenExpired.CodingKeys;
}

ValueMetadata *type metadata accessor for OpenSessionFailed.CodingKeys()
{
  return &type metadata for OpenSessionFailed.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionRefreshed.CodingKeys()
{
  return &type metadata for SessionRefreshed.CodingKeys;
}

ValueMetadata *type metadata accessor for InvalidSessionToken.CodingKeys()
{
  return &type metadata for InvalidSessionToken.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for InternalSessionError.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_244DA3494 + 4 * byte_244E52EEA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_244DA34C8 + 4 * byte_244E52EE5[v4]))();
}

uint64_t sub_244DA34C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA34D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DA34D8);
  return result;
}

uint64_t sub_244DA34E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DA34ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_244DA34F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA34F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InternalSessionError.CodingKeys()
{
  return &type metadata for InternalSessionError.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for InvalidPartnerToken.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244DA3560 + 4 * byte_244E52EF4[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244DA3594 + 4 * byte_244E52EEF[v4]))();
}

uint64_t sub_244DA3594(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA359C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DA35A4);
  return result;
}

uint64_t sub_244DA35B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DA35B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244DA35BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA35C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InvalidPartnerToken.CodingKeys()
{
  return &type metadata for InvalidPartnerToken.CodingKeys;
}

ValueMetadata *type metadata accessor for SessionDeleted.CodingKeys()
{
  return &type metadata for SessionDeleted.CodingKeys;
}

ValueMetadata *type metadata accessor for ReaderActive.CodingKeys()
{
  return &type metadata for ReaderActive.CodingKeys;
}

uint64_t _s21ProximityReaderDaemon19SessionTokenExpiredV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_244DA3650 + 4 * byte_244E52EFE[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_244DA3684 + 4 * byte_244E52EF9[v4]))();
}

uint64_t sub_244DA3684(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA368C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DA3694);
  return result;
}

uint64_t sub_244DA36A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DA36A8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_244DA36AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DA36B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionCreated.CodingKeys()
{
  return &type metadata for SessionCreated.CodingKeys;
}

uint64_t _s21ProximityReaderDaemon12ReaderActiveV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_244DA3710 + 4 * byte_244E52F03[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_244DA3730 + 4 * byte_244E52F08[v4]))();
}

_BYTE *sub_244DA3710(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_244DA3730(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244DA3738(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244DA3740(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244DA3748(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244DA3750(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ReaderInactive.CodingKeys()
{
  return &type metadata for ReaderInactive.CodingKeys;
}

unint64_t sub_244DA3770()
{
  unint64_t result;

  result = qword_2574167F0;
  if (!qword_2574167F0)
  {
    result = MEMORY[0x2495282F0](&unk_244E535E4, &type metadata for ReaderInactive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574167F0);
  }
  return result;
}

unint64_t sub_244DA37B8()
{
  unint64_t result;

  result = qword_2574167F8;
  if (!qword_2574167F8)
  {
    result = MEMORY[0x2495282F0](&unk_244E5369C, &type metadata for SessionCreated.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574167F8);
  }
  return result;
}

unint64_t sub_244DA3800()
{
  unint64_t result;

  result = qword_257416800;
  if (!qword_257416800)
  {
    result = MEMORY[0x2495282F0](&unk_244E53754, &type metadata for ReaderActive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416800);
  }
  return result;
}

unint64_t sub_244DA3848()
{
  unint64_t result;

  result = qword_257416808;
  if (!qword_257416808)
  {
    result = MEMORY[0x2495282F0](&unk_244E5380C, &type metadata for SessionDeleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416808);
  }
  return result;
}

unint64_t sub_244DA3890()
{
  unint64_t result;

  result = qword_257416810;
  if (!qword_257416810)
  {
    result = MEMORY[0x2495282F0](&unk_244E538C4, &type metadata for InvalidPartnerToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416810);
  }
  return result;
}

unint64_t sub_244DA38D8()
{
  unint64_t result;

  result = qword_257416818;
  if (!qword_257416818)
  {
    result = MEMORY[0x2495282F0](&unk_244E5397C, &type metadata for InternalSessionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416818);
  }
  return result;
}

unint64_t sub_244DA3920()
{
  unint64_t result;

  result = qword_257416820;
  if (!qword_257416820)
  {
    result = MEMORY[0x2495282F0](&unk_244E53A34, &type metadata for InvalidSessionToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416820);
  }
  return result;
}

unint64_t sub_244DA3968()
{
  unint64_t result;

  result = qword_257416828;
  if (!qword_257416828)
  {
    result = MEMORY[0x2495282F0](&unk_244E53AEC, &type metadata for SessionRefreshed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416828);
  }
  return result;
}

unint64_t sub_244DA39B0()
{
  unint64_t result;

  result = qword_257416830;
  if (!qword_257416830)
  {
    result = MEMORY[0x2495282F0](&unk_244E53BA4, &type metadata for OpenSessionFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416830);
  }
  return result;
}

unint64_t sub_244DA39F8()
{
  unint64_t result;

  result = qword_257416838;
  if (!qword_257416838)
  {
    result = MEMORY[0x2495282F0](&unk_244E53C5C, &type metadata for SessionTokenExpired.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416838);
  }
  return result;
}

unint64_t sub_244DA3A40()
{
  unint64_t result;

  result = qword_257416840;
  if (!qword_257416840)
  {
    result = MEMORY[0x2495282F0](&unk_244E53D14, &type metadata for CancelRequested.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416840);
  }
  return result;
}

unint64_t sub_244DA3A88()
{
  unint64_t result;

  result = qword_257416848;
  if (!qword_257416848)
  {
    result = MEMORY[0x2495282F0](&unk_244E53DCC, &type metadata for ReadStarted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416848);
  }
  return result;
}

unint64_t sub_244DA3AD0()
{
  unint64_t result;

  result = qword_257416850;
  if (!qword_257416850)
  {
    result = MEMORY[0x2495282F0](&unk_244E53E84, &type metadata for ReadCanceled.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416850);
  }
  return result;
}

unint64_t sub_244DA3B18()
{
  unint64_t result;

  result = qword_257416858;
  if (!qword_257416858)
  {
    result = MEMORY[0x2495282F0](&unk_244E53F3C, &type metadata for ReadFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416858);
  }
  return result;
}

unint64_t sub_244DA3B60()
{
  unint64_t result;

  result = qword_257416860;
  if (!qword_257416860)
  {
    result = MEMORY[0x2495282F0](&unk_244E53FF4, &type metadata for ReadCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416860);
  }
  return result;
}

unint64_t sub_244DA3BA8()
{
  unint64_t result;

  result = qword_257416868;
  if (!qword_257416868)
  {
    result = MEMORY[0x2495282F0](&unk_244E53F64, &type metadata for ReadCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416868);
  }
  return result;
}

unint64_t sub_244DA3BF0()
{
  unint64_t result;

  result = qword_257416870;
  if (!qword_257416870)
  {
    result = MEMORY[0x2495282F0](&unk_244E53F8C, &type metadata for ReadCompleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416870);
  }
  return result;
}

unint64_t sub_244DA3C38()
{
  unint64_t result;

  result = qword_257416878;
  if (!qword_257416878)
  {
    result = MEMORY[0x2495282F0](&unk_244E53EAC, &type metadata for ReadFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416878);
  }
  return result;
}

unint64_t sub_244DA3C80()
{
  unint64_t result;

  result = qword_257416880;
  if (!qword_257416880)
  {
    result = MEMORY[0x2495282F0](&unk_244E53ED4, &type metadata for ReadFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416880);
  }
  return result;
}

unint64_t sub_244DA3CC8()
{
  unint64_t result;

  result = qword_257416888;
  if (!qword_257416888)
  {
    result = MEMORY[0x2495282F0](&unk_244E53DF4, &type metadata for ReadCanceled.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416888);
  }
  return result;
}

unint64_t sub_244DA3D10()
{
  unint64_t result;

  result = qword_257416890;
  if (!qword_257416890)
  {
    result = MEMORY[0x2495282F0](&unk_244E53E1C, &type metadata for ReadCanceled.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416890);
  }
  return result;
}

unint64_t sub_244DA3D58()
{
  unint64_t result;

  result = qword_257416898;
  if (!qword_257416898)
  {
    result = MEMORY[0x2495282F0](&unk_244E53D3C, &type metadata for ReadStarted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416898);
  }
  return result;
}

unint64_t sub_244DA3DA0()
{
  unint64_t result;

  result = qword_2574168A0;
  if (!qword_2574168A0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53D64, &type metadata for ReadStarted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168A0);
  }
  return result;
}

unint64_t sub_244DA3DE8()
{
  unint64_t result;

  result = qword_2574168A8;
  if (!qword_2574168A8)
  {
    result = MEMORY[0x2495282F0](&unk_244E53C84, &type metadata for CancelRequested.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168A8);
  }
  return result;
}

unint64_t sub_244DA3E30()
{
  unint64_t result;

  result = qword_2574168B0;
  if (!qword_2574168B0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53CAC, &type metadata for CancelRequested.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168B0);
  }
  return result;
}

unint64_t sub_244DA3E78()
{
  unint64_t result;

  result = qword_2574168B8;
  if (!qword_2574168B8)
  {
    result = MEMORY[0x2495282F0](&unk_244E53BCC, &type metadata for SessionTokenExpired.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168B8);
  }
  return result;
}

unint64_t sub_244DA3EC0()
{
  unint64_t result;

  result = qword_2574168C0;
  if (!qword_2574168C0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53BF4, &type metadata for SessionTokenExpired.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168C0);
  }
  return result;
}

unint64_t sub_244DA3F08()
{
  unint64_t result;

  result = qword_2574168C8;
  if (!qword_2574168C8)
  {
    result = MEMORY[0x2495282F0](&unk_244E53B14, &type metadata for OpenSessionFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168C8);
  }
  return result;
}

unint64_t sub_244DA3F50()
{
  unint64_t result;

  result = qword_2574168D0;
  if (!qword_2574168D0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53B3C, &type metadata for OpenSessionFailed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168D0);
  }
  return result;
}

unint64_t sub_244DA3F98()
{
  unint64_t result;

  result = qword_2574168D8;
  if (!qword_2574168D8)
  {
    result = MEMORY[0x2495282F0](&unk_244E53A5C, &type metadata for SessionRefreshed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168D8);
  }
  return result;
}

unint64_t sub_244DA3FE0()
{
  unint64_t result;

  result = qword_2574168E0;
  if (!qword_2574168E0)
  {
    result = MEMORY[0x2495282F0](&unk_244E53A84, &type metadata for SessionRefreshed.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168E0);
  }
  return result;
}

unint64_t sub_244DA4028()
{
  unint64_t result;

  result = qword_2574168E8;
  if (!qword_2574168E8)
  {
    result = MEMORY[0x2495282F0](&unk_244E539A4, &type metadata for InvalidSessionToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168E8);
  }
  return result;
}

unint64_t sub_244DA4070()
{
  unint64_t result;

  result = qword_2574168F0;
  if (!qword_2574168F0)
  {
    result = MEMORY[0x2495282F0](&unk_244E539CC, &type metadata for InvalidSessionToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168F0);
  }
  return result;
}

unint64_t sub_244DA40B8()
{
  unint64_t result;

  result = qword_2574168F8;
  if (!qword_2574168F8)
  {
    result = MEMORY[0x2495282F0](&unk_244E538EC, &type metadata for InternalSessionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574168F8);
  }
  return result;
}

unint64_t sub_244DA4100()
{
  unint64_t result;

  result = qword_257416900;
  if (!qword_257416900)
  {
    result = MEMORY[0x2495282F0](&unk_244E53914, &type metadata for InternalSessionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416900);
  }
  return result;
}

unint64_t sub_244DA4148()
{
  unint64_t result;

  result = qword_257416908;
  if (!qword_257416908)
  {
    result = MEMORY[0x2495282F0](&unk_244E53834, &type metadata for InvalidPartnerToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416908);
  }
  return result;
}

unint64_t sub_244DA4190()
{
  unint64_t result;

  result = qword_257416910;
  if (!qword_257416910)
  {
    result = MEMORY[0x2495282F0](&unk_244E5385C, &type metadata for InvalidPartnerToken.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416910);
  }
  return result;
}

unint64_t sub_244DA41D8()
{
  unint64_t result;

  result = qword_257416918;
  if (!qword_257416918)
  {
    result = MEMORY[0x2495282F0](&unk_244E5377C, &type metadata for SessionDeleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416918);
  }
  return result;
}

unint64_t sub_244DA4220()
{
  unint64_t result;

  result = qword_257416920;
  if (!qword_257416920)
  {
    result = MEMORY[0x2495282F0](&unk_244E537A4, &type metadata for SessionDeleted.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416920);
  }
  return result;
}

unint64_t sub_244DA4268()
{
  unint64_t result;

  result = qword_257416928;
  if (!qword_257416928)
  {
    result = MEMORY[0x2495282F0](&unk_244E536C4, &type metadata for ReaderActive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416928);
  }
  return result;
}

unint64_t sub_244DA42B0()
{
  unint64_t result;

  result = qword_257416930;
  if (!qword_257416930)
  {
    result = MEMORY[0x2495282F0](&unk_244E536EC, &type metadata for ReaderActive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416930);
  }
  return result;
}

unint64_t sub_244DA42F8()
{
  unint64_t result;

  result = qword_257416938;
  if (!qword_257416938)
  {
    result = MEMORY[0x2495282F0](&unk_244E5360C, &type metadata for SessionCreated.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416938);
  }
  return result;
}

unint64_t sub_244DA4340()
{
  unint64_t result;

  result = qword_257416940;
  if (!qword_257416940)
  {
    result = MEMORY[0x2495282F0](&unk_244E53634, &type metadata for SessionCreated.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416940);
  }
  return result;
}

unint64_t sub_244DA4388()
{
  unint64_t result;

  result = qword_257416948;
  if (!qword_257416948)
  {
    result = MEMORY[0x2495282F0](&unk_244E53554, &type metadata for ReaderInactive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416948);
  }
  return result;
}

unint64_t sub_244DA43D0()
{
  unint64_t result;

  result = qword_257416950;
  if (!qword_257416950)
  {
    result = MEMORY[0x2495282F0](&unk_244E5357C, &type metadata for ReaderInactive.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257416950);
  }
  return result;
}

uint64_t sub_244DA4414(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4972656E74726170 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746E756F6D61 && a2 == 0xE600000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xEF657079546E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56A20 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746361736E617274 && a2 == 0xED000064496E6F69)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_244DA479C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5472656E74726170 && a2 == 0xEC0000006E656B6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_244DA48A0(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546E6F6973736573 && a2 == 0xEC0000006E656B6FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_244DA4A14(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_244DA4B7C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_244DA4CE4(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000244E56AF0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E61686372656DLL && a2 == 0xEA00000000006449 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x496E6F6973736573 && a2 == 0xE900000000000064 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

double sub_244DA4EC0()
{
  uint64_t v0;
  double result;

  type metadata accessor for CardReaderAdapterFactory();
  v0 = swift_allocObject();
  result = 0.0;
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_QWORD *)(v0 + 48) = 0;
  qword_257419EF0 = v0;
  return result;
}

uint64_t sub_244DA4EF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 (*v5)(void);
  uint64_t v6;
  id v7;
  void *v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  _UNKNOWN **v12;
  uint64_t result;
  _BYTE v14[40];
  __int128 v15;
  uint64_t v16;
  _UNKNOWN **v17;

  v3 = v1 + 16;
  swift_beginAccess();
  sub_244D91E3C(v1 + 16, (uint64_t)&v15, &qword_257416C08);
  v4 = v16;
  sub_244D66F54((uint64_t)&v15, &qword_257416C08);
  if (!v4)
  {
    v5 = (unsigned __int8 (*)(void))sub_244E4D86C();
    v6 = v5();
    swift_release();
    if ((v6 & 1) != 0
      && (v7 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
          v8 = (void *)sub_244E4E2F8(),
          v9 = objc_msgSend(v7, sel_BOOLForKey_, v8),
          v7,
          v8,
          v9))
    {
      v10 = type metadata accessor for SimulatedCardReader();
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 24) = 0;
      *(_QWORD *)(v11 + 32) = 0;
      *(_QWORD *)(v11 + 16) = 0;
      v12 = &off_2515DEBA0;
    }
    else
    {
      v10 = type metadata accessor for SPRAdapter();
      v11 = swift_allocObject();
      *(_QWORD *)(v11 + 16) = 0;
      *(_QWORD *)(v11 + 24) = 0;
      *(_QWORD *)(v11 + 32) = 1;
      *(_QWORD *)(v11 + 88) = 0;
      *(_OWORD *)(v11 + 40) = 0u;
      *(_OWORD *)(v11 + 56) = 0u;
      *(_OWORD *)(v11 + 65) = 0u;
      v12 = &off_2515DE698;
    }
    v16 = v10;
    v17 = v12;
    *(_QWORD *)&v15 = v11;
    sub_244D70C60((uint64_t)&v15, (uint64_t)v14, &qword_257416C08);
    swift_beginAccess();
    sub_244DA86E8((uint64_t)v14, v3);
    swift_endAccess();
  }
  result = sub_244D91E3C(v3, (uint64_t)&v15, &qword_257416C08);
  if (v16)
    return sub_244D8DEEC(&v15, a1);
  __break(1u);
  return result;
}

uint64_t sub_244DA50CC()
{
  uint64_t v0;

  sub_244D66F54(v0 + 16, &qword_257416C08);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CardReaderAdapterFactory()
{
  return objc_opt_self();
}

uint64_t sub_244DA5118@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t result;
  uint64_t *v44;
  _QWORD v45[2];
  _OWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63[8];
  uint64_t v64;

  v2 = v1;
  v56 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v45 - v7;
  v9 = v1[3];
  v10 = v1[4];
  v11 = (uint64_t)(v1 + 3);
  v13 = v1 + 5;
  v12 = v1[5];
  v14 = v1[6];
  v15 = v1[7];
  v16 = v9;
  v17 = v10;
  v18 = v12;
  v19 = v14;
  v20 = *(_QWORD *)(v11 + 40);
  v21 = *(_QWORD *)(v11 + 48);
  v22 = v15;
  v23 = v20;
  v24 = v21;
  if (v10 == 1)
  {
    v48 = v6;
    v47 = v5;
    v46 = v13;
    v49 = v20;
    v50 = v21;
    v51 = v15;
    v52 = v14;
    v53 = v12;
    v54 = 1;
    v55 = v9;
    if ((sub_244DA7E04() & 1) != 0)
    {
      if (qword_257414400 != -1)
        swift_once();
      v25 = __swift_project_value_buffer(v48, (uint64_t)qword_257419E00);
      sub_244D91E3C(v25, (uint64_t)v8, &qword_2574145A0);
      v26 = sub_244E4DCD4();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v8, 1, v26) == 1)
      {
        sub_244D66F54((uint64_t)v8, &qword_2574145A0);
      }
      else
      {
        v34 = sub_244E4DCBC();
        v35 = sub_244E4E67C();
        if (os_log_type_enabled(v34, v35))
        {
          v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v36 = 0;
          _os_log_impl(&dword_244D61000, v34, v35, "get readerInfo failed, reader is busy", v36, 2u);
          MEMORY[0x2495283BC](v36, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v26);
      }
    }
    else
    {
      *((_BYTE *)v2 + 80) = 1;
      v28 = sub_244DA8480();
      type metadata accessor for SPRStatusTask();
      inited = swift_initStackObject();
      *(_BYTE *)(inited + 24) = 0;
      *(_QWORD *)(inited + 16) = v28;
      swift_retain();
      sub_244D927E4(0, 0xE000000000000000, &v57);
      v17 = *((_QWORD *)&v57 + 1);
      v16 = v57;
      v18 = v58;
      v19 = v59;
      v22 = v60;
      v23 = v61;
      v24 = v62;
      swift_release();
      sub_244D70C60((uint64_t)&v57, (uint64_t)v63, &qword_257416BF0);
      if (v64 != 1)
      {
        *((_BYTE *)v2 + 80) = 0;
        v48 = v2[3];
        v47 = v2[4];
        v46 = (_OWORD *)v2[6];
        v45[1] = v2[7];
        v45[0] = v2[8];
        sub_244D70C60((uint64_t)&v57, v11, &qword_257416BF0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_244DA85AC(v48, v47);
LABEL_21:
        v10 = v54;
        v9 = v55;
        goto LABEL_22;
      }
      if (qword_257414400 != -1)
        swift_once();
      v30 = __swift_project_value_buffer(v48, (uint64_t)qword_257419E00);
      v31 = v47;
      sub_244D91E3C(v30, v47, &qword_2574145A0);
      v32 = sub_244E4DCD4();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
      {
        sub_244D66F54(v31, &qword_2574145A0);
      }
      else
      {
        v37 = sub_244E4DCBC();
        v38 = sub_244E4E67C();
        if (os_log_type_enabled(v37, v38))
        {
          v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v39 = 0;
          _os_log_impl(&dword_244D61000, v37, v38, "nil status, clear cache", v39, 2u);
          MEMORY[0x2495283BC](v39, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v47, v32);
      }
      *((_BYTE *)v2 + 80) = 0;
      v40 = v2[3];
      v41 = v2[4];
      *(_OWORD *)(v2 + 3) = xmmword_244E52C40;
      v42 = v46;
      *v46 = 0u;
      v42[1] = 0u;
      *((_QWORD *)v42 + 4) = 0;
      sub_244DA85AC(v40, v41);
    }
    v16 = 0;
    v18 = 0;
    v19 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v17 = 1;
    goto LABEL_21;
  }
LABEL_22:
  result = sub_244DA86A8(v9, v10);
  v44 = v56;
  *v56 = v16;
  v44[1] = v17;
  v44[2] = v18;
  v44[3] = v19;
  v44[4] = v22;
  v44[5] = v23;
  v44[6] = v24;
  return result;
}

uint64_t sub_244DA5624@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  unint64_t v27;
  __int128 v28;
  char v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  char v35;
  __int128 v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  unint64_t v41;
  uint64_t v42;
  _OWORD v43[3];
  _QWORD v44[2];
  __int128 v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  __int128 v64;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v42 - v12;
  if ((sub_244DA7E04() & 1) != 0)
  {
    if (qword_257414400 != -1)
      swift_once();
    v14 = __swift_project_value_buffer(v8, (uint64_t)qword_257419E00);
    sub_244D91E3C(v14, (uint64_t)v13, &qword_2574145A0);
    v15 = sub_244E4DCD4();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
    {
      sub_244D66F54((uint64_t)v13, &qword_2574145A0);
    }
    else
    {
      v24 = sub_244E4DCBC();
      v25 = sub_244E4E67C();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_244D61000, v24, v25, "get allStatus failed, reader is busy", v26, 2u);
        MEMORY[0x2495283BC](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    }
    v27 = sub_244DB2520(MEMORY[0x24BEE4AF8]);
    result = sub_244D934A4(v27, (uint64_t)&v54);
    v28 = v64;
    v29 = v63;
    v30 = v62;
    v31 = v61;
    v32 = v60;
    v33 = v59;
    v34 = v58;
    v35 = v57;
    v36 = v56;
    v37 = v54;
    v20 = v55;
  }
  else
  {
    *(_BYTE *)(v3 + 80) = 1;
    v17 = sub_244DA8480();
    type metadata accessor for SPRStatusTask();
    inited = swift_initStackObject();
    *(_BYTE *)(inited + 24) = 4;
    *(_QWORD *)(inited + 16) = v17;
    swift_retain();
    sub_244D927E4(a1, a2, v43);
    swift_release();
    result = sub_244D70C60((uint64_t)v43, (uint64_t)&v54, &qword_257416BF0);
    v20 = v55;
    if (v55 == 1)
    {
      if (qword_257414400 != -1)
        swift_once();
      v21 = __swift_project_value_buffer(v8, (uint64_t)qword_257419E00);
      sub_244D91E3C(v21, (uint64_t)v11, &qword_2574145A0);
      v22 = sub_244E4DCD4();
      v23 = *(_QWORD *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v11, 1, v22) == 1)
      {
        sub_244D66F54((uint64_t)v11, &qword_2574145A0);
      }
      else
      {
        v38 = sub_244E4DCBC();
        v39 = sub_244E4E67C();
        if (os_log_type_enabled(v38, v39))
        {
          v40 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v40 = 0;
          _os_log_impl(&dword_244D61000, v38, v39, "nil status, returning default", v40, 2u);
          MEMORY[0x2495283BC](v40, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
      }
      *(_BYTE *)(v4 + 80) = 0;
      v41 = sub_244DB2520(MEMORY[0x24BEE4AF8]);
      result = sub_244D934A4(v41, (uint64_t)v44);
      v28 = v53;
      v29 = v52;
      v30 = v51;
      v31 = v50;
      v32 = v49;
      v33 = v48;
      v34 = v47;
      v35 = v46;
      v36 = v45;
      v37 = v44[0];
      v20 = v44[1];
    }
    else
    {
      v37 = v54;
      v36 = v56;
      v29 = v63 & 1;
      v30 = v62 & 1;
      v31 = v61 & 1;
      v28 = v64;
      v32 = v60 & 1;
      v33 = v59 & 1;
      v34 = v58 & 1;
      v35 = v57 & 1;
      *(_BYTE *)(v3 + 80) = 0;
    }
  }
  *(_QWORD *)a3 = v37;
  *(_QWORD *)(a3 + 8) = v20;
  *(_OWORD *)(a3 + 16) = v36;
  *(_BYTE *)(a3 + 32) = v35;
  *(_BYTE *)(a3 + 33) = v34;
  *(_BYTE *)(a3 + 34) = v33;
  *(_BYTE *)(a3 + 35) = v32;
  *(_BYTE *)(a3 + 36) = v31;
  *(_BYTE *)(a3 + 37) = v30;
  *(_BYTE *)(a3 + 38) = v29;
  *(_OWORD *)(a3 + 40) = v28;
  return result;
}

uint64_t sub_244DA5A50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t inited;
  uint64_t result;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  _BYTE *v22;
  char v23;
  char v24;
  id v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  objc_class *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t *v36;
  uint64_t v38[7];
  _BYTE v39[8];
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 104;
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)v38 - v8 + 104;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v38 - v10 + 104;
  if (qword_257414400 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v3, (uint64_t)qword_257419E00);
  sub_244D91E3C(v12, (uint64_t)v11, &qword_2574145A0);
  v13 = sub_244E4DCD4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v11, 1, v13) == 1)
  {
    sub_244D66F54((uint64_t)v11, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v2, 0xD000000000000018, 0x8000000244E58330, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
  }
  if ((sub_244DA7E04() & 1) != 0)
  {
    sub_244D91E3C(v12, (uint64_t)v9, &qword_2574145A0);
    if (v15(v9, 1, v13) == 1)
    {
      sub_244D66F54((uint64_t)v9, &qword_2574145A0);
    }
    else
    {
      v19 = sub_244E4DCBC();
      v20 = sub_244E4E67C();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_244D61000, v19, v20, "isSEValid check failed, reader is busy", v21, 2u);
        MEMORY[0x2495283BC](v21, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
    }
    sub_244D9A6A0();
    swift_allocError();
    *v22 = 0;
    return swift_willThrow();
  }
  v43 = v1;
  *(_BYTE *)(v2 + 80) = 1;
  v16 = sub_244DA8480();
  type metadata accessor for SPRStatusTask();
  inited = swift_initStackObject();
  *(_BYTE *)(inited + 24) = 1;
  *(_QWORD *)(inited + 16) = v16;
  swift_retain();
  sub_244D927E4(0, 0xE000000000000000, v38);
  swift_release();
  sub_244D70C60((uint64_t)v38, (uint64_t)v39, &qword_257416BF0);
  if (v40 != 1)
  {
    v23 = v41;
    v24 = v42;
    *(_BYTE *)(v2 + 80) = 0;
    result = (uint64_t)sub_244DA8578(v38);
    if ((v24 & 1) != 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
      v30 = swift_initStackObject();
      *(_OWORD *)(v30 + 16) = xmmword_244E50DA0;
      v31 = (objc_class *)sub_244E4C4BC();
      *(_QWORD *)(v30 + 32) = sub_244E4C498();
      *(_QWORD *)(v30 + 40) = v32;
      v33 = sub_244E4C96C();
      *(_QWORD *)(v30 + 72) = MEMORY[0x24BEE0D00];
      *(_QWORD *)(v30 + 48) = v33;
      *(_QWORD *)(v30 + 56) = v34;
      sub_244DB2520(v30);
      v35 = objc_allocWithZone(v31);
      v26 = sub_244E4C4C8();
      sub_244DA8618();
    }
    else
    {
      if ((v23 & 1) != 0)
        return result;
      v25 = objc_allocWithZone((Class)sub_244E4C4BC());
      v26 = sub_244E4C4C8();
      sub_244DA8618();
    }
    swift_allocError();
    *v36 = v26;
    return swift_willThrow();
  }
  sub_244D91E3C(v12, (uint64_t)v6, &qword_2574145A0);
  if (v15(v6, 1, v13) == 1)
  {
    result = sub_244D66F54((uint64_t)v6, &qword_2574145A0);
    *(_BYTE *)(v2 + 80) = 0;
  }
  else
  {
    v27 = sub_244E4DCBC();
    v28 = sub_244E4E67C();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v29 = 0;
      _os_log_impl(&dword_244D61000, v27, v28, "nil status, ignore", v29, 2u);
      MEMORY[0x2495283BC](v29, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v6, v13);
    *(_BYTE *)(v2 + 80) = 0;
  }
  return result;
}

uint64_t sub_244DA5F04(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(char *, uint64_t, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t inited;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  _BYTE *v26;
  char v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  unint64_t v33;
  BOOL v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  _QWORD v39[2];
  uint64_t v40;
  unint64_t v41;
  __int128 v42;
  unint64_t v43;
  _BYTE v44[56];
  _BYTE v45[8];
  uint64_t v46;
  unsigned __int8 v47;
  unsigned __int8 v48;
  _BOOL4 v49;

  v3 = v2;
  v41 = a2;
  v40 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)v39 - v9;
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)v39 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v39 - v14;
  if (qword_257414400 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
  sub_244D91E3C(v16, (uint64_t)v15, &qword_2574145A0);
  v17 = sub_244E4DCD4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v39[0] = v18;
  if (v20 == 1)
  {
    sub_244D66F54((uint64_t)v15, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v3, 0xD000000000000011, 0x8000000244E58310, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  }
  if ((sub_244DA7E04() & 1) != 0)
  {
    sub_244D91E3C(v16, (uint64_t)v13, &qword_2574145A0);
    if (v19(v13, 1, v17) == 1)
    {
      sub_244D66F54((uint64_t)v13, &qword_2574145A0);
    }
    else
    {
      v23 = sub_244E4DCBC();
      v24 = sub_244E4E67C();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_244D61000, v23, v24, "isReaderValid check failed, reader is busy", v25, 2u);
        MEMORY[0x2495283BC](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v39[0] + 8))(v13, v17);
    }
    sub_244D9A6A0();
    swift_allocError();
    *v26 = 0;
    swift_willThrow();
    return v27 & 1;
  }
  *(_BYTE *)(v3 + 80) = 1;
  v21 = sub_244DA8480();
  type metadata accessor for SPRStatusTask();
  inited = swift_initStackObject();
  *(_BYTE *)(inited + 24) = 2;
  *(_QWORD *)(inited + 16) = v21;
  swift_retain();
  sub_244D927E4(v40, v41, &v42);
  v41 = v43;
  swift_release();
  sub_244D70C60((uint64_t)&v42, (uint64_t)v45, &qword_257416BF0);
  if (v46 != 1)
  {
    v28 = v47;
    v29 = v48;
    *(_BYTE *)(v3 + 80) = 0;
    sub_244D91E3C(v16, (uint64_t)v10, &qword_2574145A0);
    if (v19(v10, 1, v17) == 1)
    {
      sub_244D66F54((uint64_t)v10, &qword_2574145A0);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35 = sub_244E4DCBC();
      v36 = sub_244E4E67C();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v37 = 67109120;
        v49 = ((v29 | v28) & 1) == 0;
        sub_244E4E7E4();
        sub_244DA8578((uint64_t *)&v42);
        _os_log_impl(&dword_244D61000, v35, v36, "isReaderValid: %{BOOL}d", v37, 8u);
        MEMORY[0x2495283BC](v37, -1, -1);

      }
      else
      {

        sub_244DA8578((uint64_t *)&v42);
      }
      (*(void (**)(char *, uint64_t))(v39[0] + 8))(v10, v17);
    }
    sub_244DA8578((uint64_t *)&v42);
    if ((v29 & 1) != 0)
    {
      v27 = 0;
      return v27 & 1;
    }
    v34 = (v28 & 1) == 0;
    goto LABEL_29;
  }
  sub_244D91E3C(v16, (uint64_t)v7, &qword_2574145A0);
  if (v19(v7, 1, v17) == 1)
  {
    sub_244D66F54((uint64_t)v7, &qword_2574145A0);
  }
  else
  {
    v30 = sub_244E4DCBC();
    v31 = sub_244E4E67C();
    if (os_log_type_enabled(v30, v31))
    {
      v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v32 = 0;
      _os_log_impl(&dword_244D61000, v30, v31, "nil status, using default ReaderInfo value", v32, 2u);
      MEMORY[0x2495283BC](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v39[0] + 8))(v7, v17);
  }
  *(_BYTE *)(v3 + 80) = 0;
  v33 = sub_244DB2520(MEMORY[0x24BEE4AF8]);
  sub_244D934A4(v33, (uint64_t)v44);
  sub_244DA8660((uint64_t)v44);
  v27 = 0;
  if ((v44[37] & 1) == 0)
  {
    v34 = (v44[36] & 1) == 0;
LABEL_29:
    v27 = v34;
  }
  return v27 & 1;
}

uint64_t sub_244DA64C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E00);
  sub_244D91E3C(v9, (uint64_t)v8, &qword_2574145A0);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_244D66F54((uint64_t)v8, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v3, 0xD000000000000014, 0x8000000244E582F0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  result = sub_244DA8480();
  if ((*(_BYTE *)(result + 16) & 1) == 0)
  {
    v13 = result;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_244D99DFC(0, v13, a1, a2, v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_244DA6650(uint8_t *a1, uint64_t a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  void *v20;
  _BYTE *v21;
  void *v22;
  void *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  _QWORD *v35;
  uint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  int v40;
  uint8_t *v41;
  void *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v41 = (uint8_t *)a2;
  v5 = v4;
  v40 = a4;
  v39 = a1;
  v45 = sub_244E4C714();
  v7 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v44 = (uint64_t)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - v13;
  if (qword_257414400 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
  sub_244D91E3C(v15, (uint64_t)v14, &qword_2574145A0);
  v16 = sub_244E4DCD4();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v38 = v17;
  if (v19 == 1)
  {
    sub_244D66F54((uint64_t)v14, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v5, 0xD00000000000003DLL, 0x8000000244E582B0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
  }
  sub_244E4C5C4();
  sub_244E4C6C0();
  v43 = *(void (**)(char *, uint64_t))(v7 + 8);
  v43(v9, v45);
  if ((sub_244DA7E04() & 1) != 0)
  {
    sub_244D9A6A0();
    v20 = (void *)swift_allocError();
    *v21 = 0;
  }
  else
  {
    v37 = v16;
    *(_BYTE *)(v5 + 80) = 1;
    sub_244DA8480();
    swift_retain();
    v22 = v42;
    v17 = sub_244D944C0(v39, (uint64_t)v41, a3 & 1, v40 & 1);
    swift_release();
    if (!v22)
    {
      *(_BYTE *)(v5 + 80) = 0;
      sub_244E4C5C4();
      sub_244E4C6A8();
      v43(v9, v45);
      return v17;
    }
    *(_BYTE *)(v5 + 80) = 0;
    v20 = v22;
    v16 = v37;
  }
  swift_willThrow();
  v23 = (void *)sub_244DAEB80(v20);
  v24 = v44;
  sub_244D91E3C(v15, v44, &qword_2574145A0);
  if (v18((char *)v24, 1, v16) == 1)
  {
    sub_244D66F54(v24, &qword_2574145A0);
    v25 = v43;
  }
  else
  {
    v42 = v23;
    v26 = v23;
    v27 = sub_244E4DCBC();
    v28 = sub_244E4E67C();
    v17 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v37 = v16;
      v30 = (uint8_t *)v29;
      v31 = swift_slowAlloc();
      v47 = v31;
      *(_DWORD *)v30 = 136446210;
      v41 = v30 + 4;
      sub_244E4C4B0();
      v32 = sub_244E4C4D4();
      v46 = sub_244D9A70C(v32, v33, &v47);
      v24 = v44;
      sub_244E4E7E4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v27, (os_log_type_t)v17, "error preparing read session: [ %{public}s ]", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v31, -1, -1);
      v34 = v30;
      v16 = v37;
      MEMORY[0x2495283BC](v34, -1, -1);
    }
    else
    {

    }
    v25 = v43;
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v24, v16);
    v23 = v42;
  }
  sub_244E4C4BC();
  sub_244DA8618();
  swift_allocError();
  *v35 = v23;
  swift_willThrow();

  sub_244E4C5C4();
  sub_244E4C6A8();
  v25(v9, v45);
  return v17;
}

uint64_t sub_244DA6AEC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 64) = v5;
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = a4;
  *(_BYTE *)(v6 + 104) = a3;
  *(_QWORD *)(v6 + 32) = a1;
  *(_QWORD *)(v6 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DA6B58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BYTE *v7;
  _QWORD *v9;

  if (qword_257414400 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 80);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 72), (uint64_t)qword_257419E00);
  sub_244D91E3C(v2, v1, &qword_2574145A0);
  v3 = sub_244E4DCD4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 80);
  if (v5 == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 80), &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(*(_QWORD *)(v0 + 64), 0xD00000000000002BLL, 0x8000000244E58280, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  if ((sub_244DA7E04() & 1) != 0)
  {
    sub_244D9A6A0();
    swift_allocError();
    *v7 = 0;
    swift_willThrow();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    *(_BYTE *)(*(_QWORD *)(v0 + 64) + 80) = 1;
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v9;
    *v9 = v0;
    v9[1] = sub_244DA6CEC;
    return sub_244DA6DE8(v0 + 16, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 104), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  }
}

uint64_t sub_244DA6CEC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DA6D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(v0 + 64) + 80) = 0;
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_244DA6D98()
{
  uint64_t v0;

  *(_BYTE *)(*(_QWORD *)(v0 + 64) + 80) = 0;
  swift_willThrow();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DA6DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  *(_QWORD *)(v7 + 80) = a6;
  *(_QWORD *)(v7 + 88) = a7;
  *(_BYTE *)(v7 + 160) = a5;
  *(_QWORD *)(v7 + 64) = a3;
  *(_QWORD *)(v7 + 72) = a4;
  *(_QWORD *)(v7 + 48) = a1;
  *(_QWORD *)(v7 + 56) = a2;
  *(_QWORD *)(v7 + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  *(_QWORD *)(v7 + 104) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DA6E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t inited;
  _QWORD *v13;
  uint64_t v15;

  if (qword_257414400 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 104);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 96), (uint64_t)qword_257419E00);
  sub_244D91E3C(v2, v1, &qword_2574145A0);
  v3 = sub_244E4DCD4();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 104), &qword_2574145A0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v5 = sub_244E4DCBC();
    v6 = sub_244E4E688();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v15 = v8;
      *(_DWORD *)v7 = 136315138;
      v9 = sub_244E4DAB8();
      *(_QWORD *)(v0 + 40) = sub_244D9A70C(v9, v10, &v15);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v5, v6, "Installing kernel: [ %s ]", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v8, -1, -1);
      MEMORY[0x2495283BC](v7, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(*(_QWORD *)(v0 + 104), v3);
  }
  v11 = sub_244DA8480();
  *(_QWORD *)(v0 + 112) = v11;
  type metadata accessor for SPRConfigTask();
  inited = swift_initStackObject();
  *(_QWORD *)(v0 + 120) = inited;
  *(_QWORD *)(inited + 16) = v11;
  swift_retain();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 128) = v13;
  *v13 = v0;
  v13[1] = sub_244DA70D4;
  return sub_244DB5C60(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_BYTE *)(v0 + 160), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88));
}

uint64_t sub_244DA70D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;

  v6 = *v3;
  *(_QWORD *)(*v3 + 136) = v2;
  swift_task_dealloc();
  if (!v2)
  {
    *(_QWORD *)(v6 + 144) = a2;
    *(_QWORD *)(v6 + 152) = a1;
    swift_release();
  }
  return swift_task_switch();
}

uint64_t sub_244DA7154()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 144);
  v1 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD **)(v0 + 48);
  if (!v2)
  {
    v1 = 0;
    v2 = 0xE000000000000000;
  }
  *v3 = v1;
  v3[1] = v2;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DA71A4()
{
  uint64_t v0;

  swift_setDeallocating();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DA71F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_257419E00);
  sub_244D91E3C(v11, (uint64_t)v10, &qword_2574145A0);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    sub_244D8C8B0(v4, 0xD000000000000027, 0x8000000244E58250, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    if (!*(_QWORD *)(v4 + 88))
      goto LABEL_8;
    goto LABEL_7;
  }
  sub_244D66F54((uint64_t)v10, &qword_2574145A0);
  if (*(_QWORD *)(v4 + 88))
  {
LABEL_7:
    swift_retain();
    sub_244DC1544(2);
    swift_release();
    *(_QWORD *)(v4 + 88) = 0;
    swift_release();
  }
LABEL_8:
  v14 = swift_allocObject();
  swift_weakInit();
  v23 = *(_OWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 32);
  sub_244D9A678((uint64_t)&v23);
  v16 = sub_244DA8480();
  v17 = *(void **)(a1 + 40);
  type metadata accessor for SPRReadTask();
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 16) = 0;
  *(_OWORD *)(v18 + 48) = v23;
  *(_QWORD *)(v18 + 32) = v14;
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 64) = v15;
  *(_QWORD *)(v18 + 72) = v17;
  *(_QWORD *)(v18 + 24) = sub_244DA8610;
  *(_QWORD *)(v18 + 80) = a2;
  *(_QWORD *)(v18 + 88) = a3;
  *(_QWORD *)(v4 + 88) = v18;
  swift_retain();
  v19 = v17;
  swift_retain();
  swift_retain();
  swift_release();
  if (*(_QWORD *)(v4 + 88))
  {
    v21 = *(_QWORD *)a1;
    v20 = *(_QWORD *)(a1 + 8);
    swift_retain();
    sub_244DC1008(v21, v20);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_244DA7444()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    *(_QWORD *)(result + 88) = 0;
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_244DA749C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(_BYTE *, uint64_t, uint64_t);
  char v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  _BYTE v19[16];
  uint64_t v20;
  unint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v9 = &v19[-v8];
  if (qword_257414400 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
  sub_244D91E3C(v10, (uint64_t)v9, &qword_2574145A0);
  v11 = sub_244E4DCD4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    sub_244D66F54((uint64_t)v9, &qword_2574145A0);
    if (*(_QWORD *)(v2 + 88))
    {
LABEL_5:
      swift_retain();
      v14 = sub_244DC1544(a1);
      swift_release();
      *(_QWORD *)(v2 + 88) = 0;
      swift_release();
      return v14 & 1;
    }
  }
  else
  {
    v20 = 0;
    v21 = 0xE000000000000000;
    v19[15] = a1;
    sub_244E4E934();
    sub_244D8C8B0(v2, 0xD000000000000018, 0x8000000244E58230, v20, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v9, v11);
    if (*(_QWORD *)(v2 + 88))
      goto LABEL_5;
  }
  sub_244D91E3C(v10, (uint64_t)v7, &qword_2574145A0);
  if (v13(v7, 1, v11) == 1)
  {
    sub_244D66F54((uint64_t)v7, &qword_2574145A0);
  }
  else
  {
    v15 = sub_244E4DCBC();
    v16 = sub_244E4E688();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_244D61000, v15, v16, "No active adapter read", v17, 2u);
      MEMORY[0x2495283BC](v17, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v7, v11);
  }
  v14 = 0;
  return v14 & 1;
}

unint64_t sub_244DA7738(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  void *v22;
  void *v23;
  id v24;
  id v25;
  unint64_t v26;
  void *v27;
  id v28;
  id v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  void *v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  void *v45;
  _BYTE *v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char *v64;
  id v65[2];

  v5 = v4;
  v63 = a4;
  v65[1] = *(id *)MEMORY[0x24BDAC8D0];
  v62 = sub_244E4C714();
  v59 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v64 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v61 = (uint64_t)&v56 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v56 - v16;
  if (qword_257414400 != -1)
    swift_once();
  v18 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E00);
  sub_244D91E3C(v18, (uint64_t)v17, &qword_2574145A0);
  v19 = sub_244E4DCD4();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v21(v17, 1, v19) == 1)
  {
    sub_244D66F54((uint64_t)v17, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v5, 0xD000000000000031, 0x8000000244E581F0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
  }
  if (!sub_244DB11F4(a1, a2))
    goto LABEL_13;
  v58 = v20;
  v60 = v5;
  v22 = (void *)objc_opt_self();
  v23 = (void *)sub_244E4E298();
  swift_bridgeObjectRelease();
  v65[0] = 0;
  v24 = objc_msgSend(v22, sel_dataWithJSONObject_options_error_, v23, 0, v65);

  v25 = v65[0];
  if (!v24)
  {
    v35 = v25;
    v36 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v20 = v58;
LABEL_13:
    sub_244D91E3C(v18, (uint64_t)v13, &qword_2574145A0);
    if (v21(v13, 1, v19) != 1)
    {
      v38 = v20;
      v39 = sub_244E4DCBC();
      v40 = sub_244E4E67C();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_244D61000, v39, v40, "trxBlob cannot be serialized", v41, 2u);
        MEMORY[0x2495283BC](v41, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v38 + 8))(v13, v19);
      return 0;
    }
    v37 = (uint64_t)v13;
    goto LABEL_24;
  }
  v56 = sub_244E4C324();
  v57 = v26;

  if (sub_244DB1424(a1, a2, v63 & 1))
  {
    v27 = (void *)sub_244E4E298();
    swift_bridgeObjectRelease();
    v65[0] = 0;
    v28 = objc_msgSend(v22, sel_dataWithJSONObject_options_error_, v27, 0, v65);

    v29 = v65[0];
    v30 = v60;
    v31 = v64;
    if (v28)
    {
      v32 = sub_244E4C324();
      v34 = v33;

      if ((*(_BYTE *)(a3 + 192) & 1) == 0)
        goto LABEL_25;
    }
    else
    {
      v42 = v29;
      v43 = (void *)sub_244E4C1E0();

      swift_willThrow();
      v32 = 0;
      v34 = 0xF000000000000000;
      if ((*(_BYTE *)(a3 + 192) & 1) == 0)
        goto LABEL_25;
    }
    goto LABEL_21;
  }
  v32 = 0;
  v34 = 0xF000000000000000;
  v30 = v60;
  v31 = v64;
  if ((*(_BYTE *)(a3 + 192) & 1) != 0)
  {
LABEL_21:
    if (v34 >> 60 != 15)
      goto LABEL_25;
    v44 = v61;
    sub_244D91E3C(v18, v61, &qword_2574145A0);
    if (v21((char *)v44, 1, v19) != 1)
    {
      v51 = sub_244E4DCBC();
      v52 = sub_244E4E67C();
      if (os_log_type_enabled(v51, v52))
      {
        v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v53 = 0;
        _os_log_impl(&dword_244D61000, v51, v52, "pinBlob cannot be serialized", v53, 2u);
        MEMORY[0x2495283BC](v53, -1, -1);
      }
      sub_244D651AC(v56, v57);

      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v44, v19);
      return 0;
    }
    sub_244D651AC(v56, v57);
    v37 = v44;
LABEL_24:
    sub_244D66F54(v37, &qword_2574145A0);
    return 0;
  }
LABEL_25:
  if ((sub_244DA7E04() & 1) != 0)
  {
    sub_244D9A6A0();
    v45 = (void *)swift_allocError();
    *v46 = 0;
    v48 = v56;
    v47 = v57;
    swift_willThrow();
    sub_244D651AC(v48, v47);
    sub_244D65198(v32, v34);

    return 0;
  }
  *(_BYTE *)(v30 + 80) = 1;
  sub_244E4C528();
  sub_244E4C6C0();
  v64 = *(char **)(v59 + 8);
  ((void (*)(char *, uint64_t))v64)(v31, v62);
  sub_244DA8480();
  swift_retain();
  v50 = v56;
  v49 = v57;
  v55 = sub_244D961D8(v56, v57, v32, v34);
  swift_release();
  sub_244E4C528();
  sub_244E4C6A8();
  ((void (*)(char *, uint64_t))v64)(v31, v62);
  *(_BYTE *)(v60 + 80) = 0;
  sub_244D651AC(v50, v49);
  sub_244D65198(v32, v34);
  return v55;
}

uint64_t sub_244DA7E04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _DWORD v12[4];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E00);
  sub_244D91E3C(v5, (uint64_t)v4, &qword_2574145A0);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D66F54((uint64_t)v4, &qword_2574145A0);
  }
  else
  {
    swift_retain();
    v8 = sub_244E4DCBC();
    v9 = sub_244E4E670();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v10 = 67109120;
      v12[3] = *(unsigned __int8 *)(v1 + 80);
      sub_244E4E7E4();
      swift_release();
      _os_log_impl(&dword_244D61000, v8, v9, "checking SPR busy: %{BOOL}d", v10, 8u);
      MEMORY[0x2495283BC](v10, -1, -1);
    }
    else
    {
      swift_release();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return *(unsigned __int8 *)(v1 + 80);
}

uint64_t sub_244DA7FCC()
{
  uint64_t v0;

  swift_release();
  sub_244DA85AC(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRAdapter()
{
  return objc_opt_self();
}

uint64_t sub_244DA802C()
{
  char v0;
  uint64_t v2[4];
  uint64_t v3;
  _BYTE v4[8];
  uint64_t v5;

  sub_244DA5118(v2);
  v0 = v3;
  sub_244D70C60((uint64_t)v2, (uint64_t)v4, &qword_257416BF0);
  if (v5 == 1)
    return 1;
  sub_244DA8578(v2);
  return v0 & 1;
}

uint64_t sub_244DA8090()
{
  uint64_t v0;
  uint64_t v2[7];
  _QWORD v3[7];

  sub_244DA5118(v2);
  sub_244D70C60((uint64_t)v2, (uint64_t)v3, &qword_257416BF0);
  if (v3[1] == 1)
    return 0;
  v0 = v3[0];
  swift_bridgeObjectRetain();
  sub_244DA8578(v2);
  return v0;
}

uint64_t sub_244DA8104()
{
  uint64_t v0;
  uint64_t v2[7];
  _BYTE v3[8];
  uint64_t v4;
  uint64_t v5;

  sub_244DA5118(v2);
  sub_244D70C60((uint64_t)v2, (uint64_t)v3, &qword_257416BF0);
  if (v4 == 1)
    return 0;
  v0 = v5;
  swift_bridgeObjectRetain();
  sub_244DA8578(v2);
  return v0;
}

uint64_t sub_244DA8178(uint64_t a1, uint64_t a2)
{
  return sub_244DA64C8(a1, a2);
}

double sub_244DA8198@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __int128 v4;
  double result;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_244DA5624(a1, a2, (uint64_t)v6);
  v4 = v6[1];
  *(_OWORD *)a3 = v6[0];
  *(_OWORD *)(a3 + 16) = v4;
  result = *(double *)&v7;
  *(_OWORD *)(a3 + 32) = v7;
  *(_QWORD *)(a3 + 48) = v8;
  return result;
}

uint64_t sub_244DA81E4()
{
  return sub_244DA5A50();
}

uint64_t sub_244DA8204(uint64_t a1, unint64_t a2)
{
  return sub_244DA5F04(a1, a2) & 1;
}

uint64_t sub_244DA8228(uint8_t *a1, uint64_t a2, char a3, int a4)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  result = sub_244DA6650(a1, a2, a3, a4);
  if (v4)
    return v6;
  return result;
}

uint64_t sub_244DA8258(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;

  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_244DA82D8;
  return sub_244DA6AEC(a1, a2, a3, a4, a5);
}

uint64_t sub_244DA82D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *v3;
  v7 = swift_task_dealloc();
  if (!v2)
  {
    v7 = a1;
    v8 = a2;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
}

uint64_t sub_244DA833C(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  void *v4;
  id v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;

  v2 = sub_244DA8480();
  v3 = *(_OWORD *)a1;
  v8 = *(_OWORD *)(a1 + 16);
  v9 = v3;
  v4 = *(void **)(a1 + 40);
  swift_retain();
  sub_244D9A678((uint64_t)&v9);
  sub_244D9A678((uint64_t)&v8);
  v5 = v4;
  sub_244D9855C(0, v2, a1, v6);
  swift_release();
  return 0;
}

uint64_t sub_244DA83E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244DA71F0(a1, a2, a3);
}

uint64_t sub_244DA8404(uint64_t a1)
{
  return sub_244DA749C(a1) & 1;
}

unint64_t sub_244DA8428(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_244DA7738(a1, a2, a3, a4);
}

uint64_t sub_244DA8448(uint64_t a1)
{
  sub_244DA8480();
  swift_retain();
  sub_244D96820(a1);
  return swift_release();
}

uint64_t sub_244DA8480()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t (*v3)(void);
  char v4;
  id v5;
  void *v6;
  char v7;

  result = *(_QWORD *)(v0 + 16);
  if (!result)
  {
    v2 = v0;
    v3 = (uint64_t (*)(void))sub_244E4D86C();
    v4 = v3();
    swift_release();
    if ((v4 & 1) != 0)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      v6 = (void *)sub_244E4E2F8();
      v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

    }
    else
    {
      v7 = 0;
    }
    type metadata accessor for SPRReaderProxy();
    swift_allocObject();
    *(_QWORD *)(v2 + 16) = sub_244D93D98(v7);
    swift_release();
    result = *(_QWORD *)(v2 + 16);
    if (!result)
      __break(1u);
  }
  return result;
}

uint64_t *sub_244DA8578(uint64_t *a1)
{
  sub_244DA85AC(*a1, a1[1]);
  return a1;
}

uint64_t sub_244DA85AC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244DA85EC()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_244DA8610()
{
  return sub_244DA7444();
}

unint64_t sub_244DA8618()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257416C00;
  if (!qword_257416C00)
  {
    v1 = sub_244E4C4BC();
    result = MEMORY[0x2495282F0](MEMORY[0x24BDE3BE0], v1);
    atomic_store(result, (unint64_t *)&qword_257416C00);
  }
  return result;
}

uint64_t sub_244DA8660(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244DA86A8(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_244DA86E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_244DA8730(uint64_t a1)
{
  uint64_t v1;
  __int128 v4;
  __int128 v5[2];
  uint64_t v6;
  _QWORD v7[6];

  v7[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v4 = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416CE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416CD0);
  if (!swift_dynamicCast())
  {
    v6 = 0;
    memset(v5, 0, sizeof(v5));
    sub_244D66F54((uint64_t)v5, &qword_257416CD8);
    *(_QWORD *)&v5[0] = sub_244DABC24(*(_QWORD *)(a1 + 16));
    *((_QWORD *)&v5[0] + 1) = v1;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v5[0]);
    sub_244DA9DC4();
    __asm { BR              X12 }
  }
  sub_244D8DEEC(v5, (uint64_t)v7);
  __swift_project_boxed_opaque_existential_1(v7, v7[3]);
  sub_244E4C0FC();
  swift_bridgeObjectRelease();
  v5[0] = v4;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return *(_QWORD *)&v5[0];
}

uint64_t sub_244DA8A58(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16[2];
  uint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v18 = a1;
  *((_QWORD *)&v18 + 1) = a2;
  v19 = a3;
  v20 = a4;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416CD0);
  if (swift_dynamicCast())
  {
    sub_244D8DEEC(v16, (uint64_t)&v13);
    __swift_project_boxed_opaque_existential_1(&v13, v15);
    sub_244E4C0FC();
    swift_bridgeObjectRelease();
    v16[0] = v18;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v13);
  }
  else
  {
    v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_244D66F54((uint64_t)v16, &qword_257416CD8);
    sub_244DAADC8(a1, a2, a3, a4, &v13);
    v5 = v13;
    v4 = v14;
    if (v14 >> 60 == 15)
    {
      v6 = sub_244DA9410(a1, a2, a3, a4);
      *(_QWORD *)&v16[0] = sub_244DABC24(v6);
      *((_QWORD *)&v16[0] + 1) = v7;
      MEMORY[0x24BDAC7A8](*(_QWORD *)&v16[0]);
      sub_244DAA0B0();
      __asm { BR              X12 }
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)&v16[0] = v5;
    *((_QWORD *)&v16[0] + 1) = v4;
  }
  return *(_QWORD *)&v16[0];
}

uint64_t sub_244DA8EA8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416CD0);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_244D66F54((uint64_t)v14, &qword_257416CD8);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_244E4E8C8();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_244DAF3F0(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_244E4E40C();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_244DABC24(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_244DAA3CC();
    __asm { BR              X12 }
  }
  sub_244D8DEEC(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_244E4C0FC();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

int64_t sub_244DA93AC(int64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(a2 + 16);
    if ((uint64_t)v2 >= result)
      v3 = result;
    else
      v3 = *(_QWORD *)(a2 + 16);
    if (!result)
      v3 = 0;
    if (v2 >= v3)
      return a2;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SPRUtils()
{
  return objc_opt_self();
}

unint64_t sub_244DA9410(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_244D9AC00(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_244D9AC00(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_244E4E430();
  }
  __break(1u);
  return result;
}

unint64_t sub_244DA94FC(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_244D9AC00(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_244E4E43C();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_244E4E8C8();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_244D9AC00(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_244E4E418();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_244DA970C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_244DA984C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_244DA9728(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_244DA9B1C(a1, a2, a3, (_QWORD *)*v3, &qword_257416CF8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
  *v3 = result;
  return result;
}

uint64_t sub_244DA9754(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_244DA99B4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_244DA9770(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_244DA9B1C(a1, a2, a3, (_QWORD *)*v3, &qword_257416D18, (uint64_t (*)(_QWORD))MEMORY[0x24BDE4AC8]);
  *v3 = result;
  return result;
}

uint64_t sub_244DA979C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_244DA9B1C(a1, a2, a3, (_QWORD *)*v3, &qword_257416D28, (uint64_t (*)(_QWORD))MEMORY[0x24BDE4A30]);
  *v3 = result;
  return result;
}

uint64_t sub_244DA97C8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_244DA9B1C(a1, a2, a3, (_QWORD *)*v3, &qword_257416D08, (uint64_t (*)(_QWORD))MEMORY[0x24BDE4AA0]);
  *v3 = result;
  return result;
}

uint64_t sub_244DA97F4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_244DA9B1C(a1, a2, a3, (_QWORD *)*v3, &qword_257416D10, (uint64_t (*)(_QWORD))MEMORY[0x24BDE4AB8]);
  *v3 = result;
  return result;
}

uint64_t sub_244DA9820(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_244DA9B1C(a1, a2, a3, (_QWORD *)*v3, &qword_257416D20, (uint64_t (*)(_QWORD))MEMORY[0x24BDE4A20]);
  *v3 = result;
  return result;
}

uint64_t sub_244DA984C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416CC8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244DA99B4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416D00);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244DA9B1C(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244DA9CFC@<X0>(uint64_t __src@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!__src)
    goto LABEL_7;
  if (!a2)
  {
    __src = 0;
LABEL_7:
    v6 = 0xC000000000000000;
    goto LABEL_10;
  }
  if (a2 <= 14)
  {
    __src = sub_244DAB728((_BYTE *)__src, (_BYTE *)(__src + a2));
    v6 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else
  {
    sub_244E4C0F0();
    swift_allocObject();
    v5 = sub_244E4C0B4();
    if ((unint64_t)a2 >= 0x7FFFFFFF)
    {
      sub_244E4C2E8();
      __src = swift_allocObject();
      *(_QWORD *)(__src + 16) = 0;
      *(_QWORD *)(__src + 24) = a2;
      v6 = v5 | 0x8000000000000000;
    }
    else
    {
      __src = a2 << 32;
      v6 = v5 | 0x4000000000000000;
    }
  }
LABEL_10:
  *a3 = __src;
  a3[1] = v6;
  return __src;
}

void sub_244DA9DC4()
{
  __asm { BR              X11 }
}

_QWORD *sub_244DA9E24@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

void sub_244DAA0B0()
{
  __asm { BR              X11 }
}

_QWORD *sub_244DAA114@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(__int128 *__return_ptr, uint64_t *, char *);
  uint64_t v4;
  uint64_t v5;
  _QWORD *result;
  unint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  unsigned int v18;
  unsigned __int8 v19;
  unsigned __int8 v20;
  unsigned __int8 v21;

  v17 = v5;
  LOWORD(v18) = a1;
  BYTE2(v18) = BYTE2(a1);
  HIBYTE(v18) = BYTE3(a1);
  v19 = BYTE4(a1);
  v20 = BYTE5(a1);
  v21 = BYTE6(a1);
  result = v3(&v13, &v17, (char *)&v17 + BYTE6(a1));
  if (v2)
  {
    v7 = v18 | ((unint64_t)v19 << 32) | ((unint64_t)v20 << 40) | ((unint64_t)v21 << 48);
    *v1 = v17;
    v1[1] = v7;
  }
  else
  {
    v8 = v13;
    v9 = v14;
    v10 = v15;
    v11 = v16;
    v12 = v18 | ((unint64_t)v19 << 32) | ((unint64_t)v20 << 40) | ((unint64_t)v21 << 48);
    *v1 = v17;
    v1[1] = v12;
    *(_OWORD *)v4 = v8;
    *(_QWORD *)(v4 + 16) = v9;
    *(_QWORD *)(v4 + 24) = v10;
    *(_OWORD *)(v4 + 32) = v11;
  }
  return result;
}

void sub_244DAA3CC()
{
  __asm { BR              X11 }
}

_QWORD *sub_244DAA42C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_244DAA6BC@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_244DAB728(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_244DAB7E8((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_244DAB860((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_244DAA730(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

double sub_244DAA794@<D0>(void (*a1)(__int128 *__return_ptr, uint64_t, uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  double result;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  if (a2)
  {
    a1(&v10, a2, a3 - a2);
    if (v4)
      return result;
LABEL_5:
    v7 = v11;
    v8 = v12;
    result = *(double *)&v10;
    v9 = v13;
    *(_OWORD *)a4 = v10;
    *(_QWORD *)(a4 + 16) = v7;
    *(_QWORD *)(a4 + 24) = v8;
    *(_OWORD *)(a4 + 32) = v9;
    return result;
  }
  a1(&v10, 0, 0);
  if (!v4)
    goto LABEL_5;
  return result;
}

_QWORD *sub_244DAA80C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_244DAA870(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_244E4C0C0();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_244E4C0E4();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_244E4C0D8();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

char *sub_244DAA91C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *(*a3)(__int128 *__return_ptr, char *, char *)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  char *result;
  char *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;

  result = (char *)sub_244E4C0C0();
  if (!result)
    goto LABEL_12;
  v10 = result;
  result = (char *)sub_244E4C0E4();
  v11 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v14 = sub_244E4C0D8();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  result = (char *)a3(&v19, &v10[v11], &v10[v11 + v15]);
  if (!v4)
  {
    v16 = v20;
    v17 = v21;
    v18 = v22;
    *(_OWORD *)a4 = v19;
    *(_QWORD *)(a4 + 16) = v16;
    *(_QWORD *)(a4 + 24) = v17;
    *(_OWORD *)(a4 + 32) = v18;
  }
  return result;
}

char *sub_244DAA9E0(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_244E4C0C0();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_244E4C0E4();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_244E4C0D8();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_244DAAA8C(uint64_t a1, char a2)
{
  uint64_t *v2;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *v2;
  result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v5;
  v7 = 0;
  if ((result & 1) != 0 && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    if (a1 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x18) >> 1)
      return result;
    v7 = 1;
  }
  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_244E4E964();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v8 <= a1)
    v9 = a1;
  else
    v9 = v8;
  result = MEMORY[0x249527B58](v7, v9, a2 & 1, v5);
  *v2 = result;
  return result;
}

uint64_t sub_244DAAB48(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_244D73FC0(a1, a2);
  sub_244DAB160(a1, a2);
  sub_244D651AC(a1, a2);
  v4 = sub_244E4E3AC();
  swift_release();
  return v4;
}

uint64_t sub_244DAABBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_244E4E3AC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_244DAABF4(_QWORD *a1, _BYTE *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int8x16_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int8x16_t *v13;
  int8x16_t v14;
  int8x16_t v15;
  _BYTE *v16;
  uint64_t v17;

  v4 = *(_QWORD *)(a4 + 16);
  if (!a2)
  {
    v5 = *(_QWORD *)(a4 + 16);
    v4 = 0;
    goto LABEL_26;
  }
  if (!a3)
  {
    v5 = *(_QWORD *)(a4 + 16);
    goto LABEL_18;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (!v4)
  {
LABEL_29:
    v5 = 0;
    goto LABEL_26;
  }
  v5 = v4 - 1;
  *a2 = *(_BYTE *)(a4 + v4 - 1 + 32);
  if (a3 == 1)
  {
LABEL_18:
    v4 = a3;
    goto LABEL_26;
  }
  if (v4 != 1)
  {
    v6 = v4 - 2;
    if (v4 - 2 >= (unint64_t)(a3 - 2))
      v7 = a3 - 2;
    else
      v7 = v4 - 2;
    v8 = v7 + 1;
    if (v8 < 0x11)
      goto LABEL_15;
    v9 = (int8x16_t *)(a2 + 1);
    if (v6 >= a3 - 2)
      v6 = a3 - 2;
    if ((unint64_t)v9 >= v4 + a4 + 31 || v4 - v6 + a4 + 30 >= (unint64_t)&a2[v6 + 2])
    {
      v11 = v8 & 0xF;
      if ((v8 & 0xF) == 0)
        v11 = 16;
      v12 = v8 - v11;
      v5 -= v12;
      a2 += v12;
      v10 = v12 + 2;
      v13 = (int8x16_t *)(v4 + a4 + 15);
      do
      {
        v14 = *v13--;
        v15 = vrev64q_s8(v14);
        *v9++ = vextq_s8(v15, v15, 8uLL);
        v12 -= 16;
      }
      while (v12);
    }
    else
    {
LABEL_15:
      v10 = 2;
    }
    v16 = a2 + 1;
    while (1)
    {
      v17 = v5 - 1;
      *v16 = *(_BYTE *)(a4 + 31 + v5);
      if (a3 == v10)
        break;
      ++v10;
      ++v16;
      --v5;
      if (!v17)
        goto LABEL_26;
    }
    --v5;
    goto LABEL_18;
  }
LABEL_26:
  *a1 = a4;
  a1[1] = v5;
  return v4;
}

uint64_t sub_244DAAD1C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_244E4C0C0();
  v9 = result;
  if (result)
  {
    result = sub_244E4C0E4();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_244E4C0D8();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_244DAB114(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

uint64_t sub_244DAADC8@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  unint64_t v9;
  _QWORD *v10;
  _QWORD v11[2];

  if ((a4 & 0x1000000000000000) != 0)
  {
    *(_OWORD *)a5 = xmmword_244E54550;
  }
  else
  {
    v9 = result;
    if ((a4 & 0x2000000000000000) != 0)
    {
      v11[0] = a3;
      v11[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      v10 = v11;
    }
    else if ((a3 & 0x1000000000000000) != 0)
    {
      v10 = (_QWORD *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else
    {
      v10 = (_QWORD *)sub_244E4E8C8();
    }
    return sub_244DAAE80((uint64_t)v10, v9, a2, a3, a4, a5);
  }
  return result;
}

uint64_t sub_244DAAE80@<X0>(uint64_t result@<X0>, unint64_t a2@<X2>, unint64_t a3@<X3>, unint64_t a4@<X4>, unint64_t a5@<X5>, _QWORD *a6@<X8>)
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v9 = a2;
  v10 = result;
  v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0)
    LOBYTE(v12) = 1;
  v13 = 4 << v12;
  v14 = a2 & 0xC;
  v15 = a2;
  if (v14 == 4 << v12)
  {
    result = sub_244D9AC00(a2, a4, a5);
    v15 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      v16 = v15 >> 16;
      if (v14 != v13)
        goto LABEL_6;
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  v17 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0)
    v17 = HIBYTE(a5) & 0xF;
  if (v17 < v15 >> 16)
    goto LABEL_31;
  result = sub_244E4E430();
  v16 = result;
  if (v14 == v13)
  {
LABEL_14:
    result = sub_244D9AC00(v9, a4, a5);
    v9 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    result = sub_244D9AC00(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0)
      goto LABEL_8;
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    result = (a3 >> 16) - (v9 >> 16);
    goto LABEL_21;
  }
  v18 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0)
    v18 = a4 & 0xFFFFFFFFFFFFLL;
  if (v18 < v9 >> 16)
    goto LABEL_29;
  if (v18 < a3 >> 16)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
    return result;
  }
  result = sub_244E4E430();
LABEL_21:
  if (__OFADD__(v16, result))
  {
    __break(1u);
    goto LABEL_28;
  }
  v19 = result;
  if (v16 + result < v16)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v10)
    v20 = v10 + v16;
  else
    v20 = 0;
  return sub_244DA9CFC(v20, v19, a6);
}

double sub_244DAB030@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *((_QWORD *)a3 + 2);
  v6 = *((_QWORD *)a3 + 3);
  v15 = *a3;
  v16 = v5;
  v17 = v6;
  sub_244DAA794((void (*)(__int128 *__return_ptr, uint64_t, uint64_t))sub_244DAF278, a1, a2, (uint64_t)&v11);
  v7 = v12;
  v8 = v13;
  result = *(double *)&v11;
  v10 = v14;
  *(_OWORD *)a4 = v11;
  *(_QWORD *)(a4 + 16) = v7;
  *(_QWORD *)(a4 + 24) = v8;
  *(_OWORD *)(a4 + 32) = v10;
  return result;
}

uint64_t sub_244DAB0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v5;
  uint64_t v6;
  __int128 v7;
  _OWORD v9[2];
  uint64_t v10;

  v5 = sub_244DA94FC((unint64_t)v9, a1, a2, *a3, a3[1], a3[2], a3[3]);
  v6 = v10;
  v7 = v9[1];
  *(_OWORD *)a4 = v9[0];
  *(_OWORD *)(a4 + 16) = v7;
  *(_QWORD *)(a4 + 32) = v6;
  *(_QWORD *)(a4 + 40) = v5;
  return swift_bridgeObjectRetain();
}

_QWORD *sub_244DAB114(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

void sub_244DAB160(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_244E4C330();
  MEMORY[0x24BDAC7A8](v3);
  __asm { BR              X10 }
}

_QWORD *sub_244DAB1DC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416560);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_244D73FC0(v2, v0);
    v7 = sub_244E4C2D0();
    sub_244D651AC(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x244DAB2B0);
    }
  }
  return v4;
}

uint64_t sub_244DAB2C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_244E4E3AC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_244DAB2FC@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_244E4E898();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_244DAB384(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_244DAB3E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int16 v23;
  char v24;
  char v25;
  char v26;
  char v27;
  unsigned __int8 v28;

  v4 = v28;
  if (v28)
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = v28;
    sub_244DA970C(0, v28, 0);
    v6 = a1;
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v7 = (int)a1;
      else
        v7 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v7 = 0;
    }
    *(_QWORD *)(v3 - 144) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v7 < (int)a1 || v7 >= a1 >> 32)
            goto LABEL_29;
          v8 = sub_244E4C0C0();
          if (!v8)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v9 = v8;
          v10 = sub_244E4C0E4();
          v11 = v7 - v10;
          if (__OFSUB__(v7, v10))
            goto LABEL_32;
        }
        else
        {
          if (v7 < *(_QWORD *)(v6 + 16))
            goto LABEL_31;
          if (v7 >= *(_QWORD *)(v6 + 24))
            goto LABEL_33;
          v13 = sub_244E4C0C0();
          if (!v13)
            goto LABEL_36;
          v9 = v13;
          v14 = sub_244E4C0E4();
          v11 = v7 - v14;
          if (__OFSUB__(v7, v14))
            goto LABEL_34;
        }
        v12 = *(_BYTE *)(v9 + v11);
        v6 = a1;
      }
      else
      {
        if (v7 >= v28)
          goto LABEL_30;
        *(_BYTE *)(v3 - 118) = v6;
        *(_DWORD *)(v3 - 117) = *(_DWORD *)((char *)&a1 + 1);
        *(_WORD *)(v3 - 113) = *(_WORD *)((char *)&a1 + 5);
        *(_BYTE *)(v3 - 111) = HIBYTE(a1);
        *(_WORD *)(v3 - 110) = v23;
        *(_BYTE *)(v3 - 108) = v24;
        *(_BYTE *)(v3 - 107) = v25;
        *(_BYTE *)(v3 - 106) = v26;
        *(_BYTE *)(v3 - 105) = v27;
        v12 = *(_BYTE *)(v3 - 118 + v7);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_257414CB8);
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_244E50DA0;
      *(_QWORD *)(v15 + 56) = MEMORY[0x24BEE4260];
      *(_QWORD *)(v15 + 64) = MEMORY[0x24BEE42B0];
      *(_BYTE *)(v15 + 32) = v12;
      v16 = sub_244E4E328();
      v18 = v17;
      *(_QWORD *)(v3 - 104) = v2;
      v20 = *(_QWORD *)(v2 + 16);
      v19 = *(_QWORD *)(v2 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_244DA970C(v19 > 1, v20 + 1, 1);
        v6 = a1;
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v20 + 1;
      v21 = v2 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v16;
      *(_QWORD *)(v21 + 40) = v18;
      ++v7;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 144);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x244DAB700);
  }
  return v2;
}

uint64_t sub_244DAB728(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_244DAB7E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_244E4C0F0();
  swift_allocObject();
  result = sub_244E4C0B4();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_244E4C2E8();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_244DAB860(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_244E4C0F0();
  swift_allocObject();
  result = sub_244E4C0B4();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_244DAB8E0(uint64_t a1)
{
  _QWORD *v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416CE8);
  v10 = sub_244DAF354(&qword_257416CF0, &qword_257416CE8, MEMORY[0x24BDCFBE0]);
  v8[0] = a1;
  v2 = __swift_project_boxed_opaque_existential_1(v8, v9);
  v3 = (_BYTE *)(*v2 + 32);
  v4 = &v3[*(_QWORD *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_244DAA6BC(v3, v4, &v7);
  v5 = v7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v5;
}

uint64_t sub_244DAB990(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  id v9;
  void *v10;
  char v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  unint64_t v22;
  uint64_t v23;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BEE4AF8];
  if (!(a1 >> 62))
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  result = sub_244E4E964();
  v5 = result;
  if (!result)
    goto LABEL_17;
LABEL_3:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    v7 = 0;
    v22 = a1 & 0xC000000000000001;
    v21 = (void *)*MEMORY[0x24BEAE788];
    v20 = (void *)*MEMORY[0x24BEAE790];
    v8 = a1;
    do
    {
      if (v22)
        v9 = (id)MEMORY[0x249527B4C](v7, a1);
      else
        v9 = *(id *)(a1 + 8 * v7 + 32);
      v10 = v9;
      v11 = sub_244E4CCCC();
      v12 = v21;
      if ((v11 & 1) != 0)
        v12 = v20;
      v13 = v12;
      sub_244E4CCE4();
      sub_244E4CCF0();
      sub_244E4C294();
      swift_bridgeObjectRelease();
      v14 = (void *)sub_244E4E2F8();
      swift_bridgeObjectRelease();
      v15 = sub_244E4C2AC();
      v16 = *(_QWORD *)(v15 - 8);
      v17 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v4, 1, v15) != 1)
      {
        v17 = (void *)sub_244E4C258();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v4, v15);
      }
      v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEAE6B8]), sel_initWithVasTerminalProtocol_merchantId_vasUrl_vasFilter_, v13, v14, v17, 0);

      v19 = v18;
      MEMORY[0x249527750]();
      if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_244E4E4F0();
      ++v7;
      sub_244E4E508();
      sub_244E4E4E4();

      a1 = v8;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    return v23;
  }
  return result;
}

uint64_t sub_244DABC24(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_244E4C0F0();
      swift_allocObject();
      sub_244E4C0CC();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_244E4C2E8();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t sub_244DABCC0(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_244E4E3DC();
    return sub_244E4E478();
  }
  return result;
}

uint64_t sub_244DABD48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  id v40;
  id v41;
  NSObject *v42;
  int v43;
  uint8_t *v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char *v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  void *v75;
  void *v76;
  void *v77;
  void *v78;
  void *v79;
  void *v80;
  id v81;
  __int128 v83;
  id v84;
  id v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD v93[6];
  uint64_t v94;
  int v95;
  int64_t v96;
  char *v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  char *v113;
  uint64_t v114;
  __int128 v115;
  _BYTE v116[20];
  int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __int128 v121;
  uint64_t v122;
  uint64_t v123;

  v122 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v97 = (char *)v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v113 = (char *)v93 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416CA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244E4C7A4();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = sub_244DAB8E0((uint64_t)&unk_2515DA250);
  v98 = v13;
  v99 = a1;
  v14 = *(void **)(a1 + 40);
  v15 = (void *)sub_244E4CC9C();
  v16 = MEMORY[0x249527A50]();
  v18 = v17;
  v20 = v19;

  v117 = v16;
  LOWORD(v118) = WORD2(v16);
  WORD1(v118) = HIWORD(v16);
  HIDWORD(v118) = v18;
  LOWORD(v119) = WORD2(v18);
  WORD1(v119) = HIWORD(v18);
  HIDWORD(v119) = v20;
  v103 = v14;
  sub_244E4CCA8();
  v21 = sub_244E4D260();
  v23 = v22;
  if (v21 == sub_244E4D260() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
LABEL_11:
    v35 = (uint64_t)v97;
    if (qword_257414408 != -1)
      swift_once();
    v36 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E18);
    sub_244D640E4(v36, v35);
    v37 = sub_244E4DCD4();
    v38 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v35, 1, v37) == 1)
    {
      sub_244D66F54(v35, &qword_2574145A0);
    }
    else
    {
      v39 = *(_OWORD *)(v99 + 16);
      v115 = *(_OWORD *)v99;
      v121 = v39;
      v40 = v103;
      sub_244D9A678((uint64_t)&v115);
      sub_244D9A678((uint64_t)&v121);
      v41 = v40;
      sub_244D9A678((uint64_t)&v115);
      sub_244D9A678((uint64_t)&v121);
      v42 = sub_244E4DCBC();
      v43 = sub_244E4E688();
      if (os_log_type_enabled(v42, (os_log_type_t)v43))
      {
        v95 = v43;
        v44 = (uint8_t *)swift_slowAlloc();
        v94 = swift_slowAlloc();
        v120 = v94;
        *(_DWORD *)v44 = 136380675;
        v45 = sub_244E4CC60();
        v46 = *(_QWORD *)(v45 + 16);
        if (v46)
        {
          v93[1] = v44;
          v93[2] = v42;
          v93[5] = v41;
          v93[3] = v38;
          v93[4] = v37;
          v114 = MEMORY[0x24BEE4AF8];
          v47 = v45;
          sub_244DA970C(0, v46, 0);
          v93[0] = v47;
          v101 = v47 + 32;
          v112 = xmmword_244E50DA0;
          v96 = v46;
          v48 = *(_QWORD *)(v47 + 32);
          v110 = *(_QWORD *)(v47 + 40) >> 62;
          v49 = (char *)&loc_244DAC2C4 + *((int *)qword_244DACDD0 + v110);
          v108 = HIDWORD(v48);
          v104 = 1;
          __asm { BR              X8 }
        }
        swift_bridgeObjectRelease();
        v50 = MEMORY[0x249527774](MEMORY[0x24BEE4AF8], MEMORY[0x24BEE0D00]);
        v52 = v51;
        swift_bridgeObjectRelease();
        *(_QWORD *)v116 = sub_244D9A70C(v50, v52, &v120);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();
        sub_244D9A6E4((uint64_t)&v115);
        sub_244D9A6E4((uint64_t)&v121);

        sub_244D9A6E4((uint64_t)&v115);
        sub_244D9A6E4((uint64_t)&v121);

        _os_log_impl(&dword_244D61000, v42, (os_log_type_t)v95, "preferredAIDList: %{private}s", v44, 0xCu);
        v53 = v94;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v53, -1, -1);
        MEMORY[0x2495283BC](v44, -1, -1);

      }
      else
      {

        sub_244D9A6E4((uint64_t)&v115);
        sub_244D9A6E4((uint64_t)&v121);

        sub_244D9A6E4((uint64_t)&v115);
        sub_244D9A6E4((uint64_t)&v121);

      }
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v35, v37);
    }
    v54 = (char *)qword_244E545D8[(char)sub_244E4CCA8()];
    v55 = sub_244E4CC48();
    sub_244DAB990(v55);
    swift_bridgeObjectRelease();
    v56 = v117;
    v57 = v118;
    v58 = v119;
    v59 = sub_244E4CC54();
    v113 = v54;
    LODWORD(v111) = v56;
    if (v59)
    {
      if (v59 != 1)
      {
        *(_QWORD *)v116 = v59;
        sub_244E4EAE4();
        __break(1u);
        JUMPOUT(0x244DACDD0);
      }
      LODWORD(v112) = 32;
    }
    else
    {
      LODWORD(v112) = 0;
    }
    v108 = sub_244DCADAC(2, *(_QWORD *)(v99 + 32), v60, (unint64_t)&v123);
    v107 = v61;
    swift_bridgeObjectRetain();
    v62 = sub_244E4D89C();
    v63 = sub_244DABCC0(v62);
    v65 = v64;
    v67 = v66;
    v69 = v68;
    swift_bridgeObjectRelease();
    v101 = sub_244DA8A58(v63, v65, v67, v69);
    v100 = v70;
    swift_bridgeObjectRetain();
    v110 = sub_244E4D8C0();
    v109 = sub_244E4D884();
    v99 = sub_244E4CC84();
    sub_244E4CC60();
    v106 = objc_allocWithZone(MEMORY[0x24BEAE6A8]);
    sub_244DAF224();
    v105 = sub_244E4E4C0();
    swift_bridgeObjectRelease();
    v71 = v98;
    v104 = sub_244E4C30C();
    v72 = v108;
    v73 = v107;
    v103 = (id)sub_244E4C30C();
    v74 = sub_244E4C30C();
    v75 = (void *)sub_244E4E2F8();
    swift_bridgeObjectRelease();
    v76 = (void *)sub_244E4E2F8();
    swift_bridgeObjectRelease();
    v77 = (void *)sub_244E4E4C0();
    swift_bridgeObjectRelease();
    *(_DWORD *)v116 = v111;
    *(_QWORD *)&v116[4] = v57;
    *(_QWORD *)&v116[12] = v58;
    v92 = v74;
    v78 = (void *)v74;
    v79 = (void *)v105;
    v80 = (void *)v104;
    v81 = v103;
    v113 = (char *)objc_msgSend(v106, sel_initWithMode_vasRequests_amount_currencyCode_transactionType_merchantCategoryCode_interfaceDeviceSerial_kernelToken_timeoutReadPay_timeoutReadVas_transactionId_preferredSchemes_, v113, v105, v116, v104, v112, v103, v92, v75, v110, v109, v76, v77);
    sub_244D651AC(v101, v100);
    sub_244D651AC(v72, v73);
    sub_244D651AC(v102, v71);

    return (uint64_t)v113;
  }
  v25 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v25 & 1) != 0)
    goto LABEL_11;
  sub_244E4CC00();
  sub_244E4CC3C();
  sub_244E4D890();
  sub_244E4CBF4();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    v113 = (char *)sub_244E4C78C();
    v31 = v30;
    sub_244D651AC(v102, v98);
    sub_244E4E790();
    sub_244E4C798();
    v32 = sub_244E4C2B8();
    MEMORY[0x249527A44](&v117, v32, v33, v34);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v102 = (uint64_t)v113;
    v98 = v31;
    goto LABEL_11;
  }
  sub_244D66F54((uint64_t)v8, &qword_257416CA8);
  if (qword_257414408 != -1)
    swift_once();
  v26 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E18);
  v27 = v113;
  sub_244D640E4(v26, (uint64_t)v113);
  v28 = sub_244E4DCD4();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_244D651AC(v102, v98);
    sub_244D66F54((uint64_t)v27, &qword_2574145A0);
  }
  else
  {
    v83 = *(_OWORD *)v99;
    v115 = *(_OWORD *)(v99 + 16);
    *(_OWORD *)v116 = v83;
    sub_244D9A678((uint64_t)v116);
    sub_244D9A678((uint64_t)&v115);
    v84 = v103;
    sub_244D9A678((uint64_t)v116);
    sub_244D9A678((uint64_t)&v115);
    v85 = v84;
    v86 = sub_244E4DCBC();
    v87 = sub_244E4E67C();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      *(_QWORD *)&v112 = swift_slowAlloc();
      *(_QWORD *)&v121 = v112;
      *(_DWORD *)v88 = 136315138;
      v89 = sub_244E4CC3C();
      v120 = sub_244D9A70C(v89, v90, (uint64_t *)&v121);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      sub_244D9A6E4((uint64_t)v116);
      sub_244D9A6E4((uint64_t)&v115);

      sub_244D9A6E4((uint64_t)v116);
      sub_244D9A6E4((uint64_t)&v115);

      _os_log_impl(&dword_244D61000, v86, v87, "Invalid currency code [ %s ], could not load currency definition", v88, 0xCu);
      v91 = v112;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v91, -1, -1);
      MEMORY[0x2495283BC](v88, -1, -1);
      sub_244D651AC(v102, v98);

    }
    else
    {
      sub_244D651AC(v102, v98);

      sub_244D9A6E4((uint64_t)v116);
      sub_244D9A6E4((uint64_t)&v115);

      sub_244D9A6E4((uint64_t)v116);
      sub_244D9A6E4((uint64_t)&v115);

    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
  }
  return 1;
}

uint64_t sub_244DACDE0(unint64_t a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v3 = a1;
  v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_244E4E964();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v5 != *(_QWORD *)(a2 + 16))
    return 0;
  v19 = MEMORY[0x24BEE4AF8];
  sub_244DAAA8C(v5, 0);
  sub_244E4E4E4();
  if (v4)
  {
    swift_bridgeObjectRetain();
    result = sub_244E4E964();
    v6 = result;
    if (!result)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      return v19;
    }
  }
  else
  {
    v6 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v6)
      goto LABEL_23;
  }
  if (v6 < 1)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (!v5)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v6 - 1 < v5)
  {
    v8 = 0;
    v17 = v3 & 0xC000000000000001;
    v9 = a2 + 40;
    v18 = v3;
    do
    {
      if (v17)
        v10 = (id)MEMORY[0x249527B4C](v8, v3);
      else
        v10 = *(id *)(v3 + 8 * v8 + 32);
      v11 = v10;
      v12 = objc_msgSend(v10, sel_vasData, v17);
      if (v12)
      {
        v13 = v12;
        sub_244E4C324();

      }
      v14 = objc_msgSend(v11, sel_mobileToken);
      if (v14)
      {
        v15 = v14;
        sub_244E4C324();

      }
      swift_bridgeObjectRetain();
      objc_msgSend(v11, sel_status);
      v16 = objc_allocWithZone((Class)sub_244E4C9CC());
      sub_244E4C9B4();
      MEMORY[0x249527750]();
      if (*(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_244E4E4F0();
      ++v8;
      sub_244E4E508();
      sub_244E4E4E4();

      v9 += 16;
      v3 = v18;
    }
    while (v6 != v8);
    goto LABEL_23;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_244DAD07C(int a1)
{
  unsigned __int8 v1;
  unint64_t v2;
  uint64_t result;

  HIDWORD(v2) = a1;
  LODWORD(v2) = (a1 << 24) + 0x10000000;
  v1 = v2 >> 28;
  if (v1 < 9u)
    return byte_244E545F8[(char)v1];
  type metadata accessor for SPRTransactionOutcomeStatus(0);
  result = sub_244E4EAE4();
  __break(1u);
  return result;
}

uint64_t sub_244DAD0EC(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(void);
  char v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t result;

  LOBYTE(v1) = a1;
  v2 = (uint64_t (*)(void))sub_244E4D86C();
  v3 = v2();
  swift_release();
  if ((v3 & 1) != 0
    && (v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v5 = (void *)sub_244E4E2F8(),
        v6 = objc_msgSend(v4, sel_stringForKey_, v5),
        v4,
        v5,
        v6))
  {
    v7 = sub_244E4E31C();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0xE000000000000000;
  }
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    v11 = sub_244E4CE4C();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      v13 = 0;
      while (1)
      {
        v1 = *(_QWORD *)(v11 + 8 * v13 + 32);
        if (sub_244E4CE40() == v7 && v14 == v9)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_27;
        }
        v16 = sub_244E4EAC0();
        swift_bridgeObjectRelease();
        if ((v16 & 1) != 0)
          break;
        if (v12 == ++v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_27:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    return v1;
  }
  swift_bridgeObjectRelease();
  if (v1 <= 0x1Fu)
  {
    if (!(_BYTE)v1)
      return v1;
    if (v1 == 16)
      return 0;
  }
  else
  {
    switch(v1)
    {
      case 0x20u:
        return 1;
      case 0x40u:
        return 2;
      case 0x80u:
        return 3;
    }
  }
  type metadata accessor for SPRCardEffectiveState(0);
  result = sub_244E4EAE4();
  __break(1u);
  return result;
}

uint64_t sub_244DAD34C(unsigned __int8 a1)
{
  uint64_t (*v2)(void);
  char v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;

  v2 = (uint64_t (*)(void))sub_244E4D86C();
  v3 = v2();
  swift_release();
  if ((v3 & 1) != 0
    && (v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v5 = (void *)sub_244E4E2F8(),
        v6 = objc_msgSend(v4, sel_stringForKey_, v5),
        v4,
        v5,
        v6))
  {
    v7 = sub_244E4E31C();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0xE000000000000000;
  }
  v10 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  if (v10)
  {
    v11 = sub_244E4CE64();
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      v13 = 0;
      while (1)
      {
        v14 = *(_QWORD *)(v11 + 8 * v13 + 32);
        if (sub_244E4CE58() == v7 && v15 == v9)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        v17 = sub_244E4EAC0();
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
          break;
        if (v12 == ++v13)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_23:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = a1;
    switch(a1)
    {
      case 0u:
        return v14;
      case 1u:
        v14 = 0;
        break;
      case 2u:
        v14 = 1;
        break;
      case 4u:
        v14 = 2;
        break;
      case 8u:
        v14 = 3;
        break;
      default:
        type metadata accessor for SPRCardExpirationState(0);
        sub_244E4EAE4();
        __break(1u);
        JUMPOUT(0x244DAD5A0);
    }
  }
  return v14;
}

void sub_244DAD5C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t (*v7)(void);
  char v8;
  id v9;
  void *v10;
  unsigned int v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  _DWORD v15[64];
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v16 = a3;
  v18 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v17 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_pinRequired);
  v7 = (uint64_t (*)(void))sub_244E4D86C();
  v8 = v7();
  swift_release();
  if ((v8 & 1) != 0)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v10 = (void *)sub_244E4E2F8();
    v11 = objc_msgSend(v9, sel_BOOLForKey_, v10);

    v6 |= v11;
  }
  v15[63] = v6;
  v12 = objc_msgSend(a1, sel_languagePreference);
  sub_244E4C324();
  v14 = v13;

  __asm { BR              X10 }
}

id sub_244DAD73C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  char v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  _DWORD *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  NSObject *v35;
  uint8_t *v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  int v51;
  char v52;
  unint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  id v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  id v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  id v88;
  uint64_t v89;
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  char v106;
  id v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  id result;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;

  *(_QWORD *)(v6 - 136) = v4;
  *(_WORD *)(v6 - 128) = v2;
  *(_BYTE *)(v6 - 126) = BYTE2(v2);
  *(_BYTE *)(v6 - 125) = BYTE3(v2);
  *(_BYTE *)(v6 - 124) = BYTE4(v2);
  *(_BYTE *)(v6 - 123) = BYTE5(v2);
  v7 = sub_244E4E3AC();
  *(_QWORD *)(v6 - 256) = v8;
  sub_244D651AC(v4, v2);
  v9 = (uint64_t (*)(void))sub_244E4D86C();
  v10 = v9();
  swift_release();
  if ((v10 & 1) != 0
    && (v11 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v12 = (void *)sub_244E4E2F8(),
        v13 = objc_msgSend(v11, sel_stringForKey_, v12),
        v11,
        v12,
        v13))
  {
    v14 = sub_244E4E31C();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0xE000000000000000;
  }
  v17 = *(_QWORD *)(v6 - 264);
  *(_QWORD *)(v6 - 288) = v7;
  v18 = HIBYTE(v16) & 0xF;
  *(_QWORD *)(v6 - 320) = v14;
  if ((v16 & 0x2000000000000000) == 0)
    v18 = v14 & 0xFFFFFFFFFFFFLL;
  *(_QWORD *)(v6 - 328) = v18;
  swift_bridgeObjectRelease();
  if (qword_257414400 != -1)
    swift_once();
  v19 = __swift_project_value_buffer(v1, (uint64_t)qword_257419E00);
  sub_244D640E4(v19, v17);
  v20 = sub_244E4DCD4();
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v17, 1, v20) == 1)
  {
    sub_244D66F54(v17, &qword_2574145A0);
  }
  else
  {
    *(_QWORD *)(v6 - 296) = v5;
    v22 = v3;
    v23 = sub_244E4DCBC();
    v24 = sub_244E4E688();
    *(_QWORD *)(v6 - 304) = v23;
    *(_DWORD *)(v6 - 312) = v24;
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (_DWORD *)swift_slowAlloc();
      v26 = swift_slowAlloc();
      *(_QWORD *)(v6 - 336) = v26;
      *(_QWORD *)(v6 - 136) = v26;
      *(_QWORD *)(v6 - 344) = v25;
      *v25 = 136380675;
      *(_QWORD *)(v6 - 352) = v25 + 3;
      *(_QWORD *)(v6 - 360) = v25 + 1;
      v27 = objc_msgSend(v22, sel_transactionResultData);
      v28 = sub_244E4C324();
      *(_QWORD *)(v6 - 376) = v28;
      v30 = v29;
      *(_QWORD *)(v6 - 368) = v29;

      sub_244DAB384(v28, v30);
      *(_QWORD *)(v6 - 192) = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_257416CB8);
      sub_244DAF354((unint64_t *)&qword_257416CC0, &qword_257416CB8, MEMORY[0x24BEE12B0]);
      v32 = sub_244E4E2D4();
      v34 = v33;
      swift_bridgeObjectRelease();
      sub_244D651AC(*(_QWORD *)(v6 - 376), *(_QWORD *)(v6 - 368));
      *(_QWORD *)(v6 - 192) = sub_244D9A70C(v32, v34, (uint64_t *)(v6 - 136));
      sub_244E4E7E4();

      v17 = *(_QWORD *)(v6 - 264);
      swift_bridgeObjectRelease();
      v35 = *(NSObject **)(v6 - 304);
      v36 = *(uint8_t **)(v6 - 344);
      _os_log_impl(&dword_244D61000, v35, (os_log_type_t)*(_DWORD *)(v6 - 312), "GeneralCardData: %{private}s", v36, 0xCu);
      v37 = *(_QWORD *)(v6 - 336);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v37, -1, -1);
      MEMORY[0x2495283BC](v36, -1, -1);

    }
    else
    {

    }
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v17, v20);
  }
  v38 = objc_msgSend(v3, sel_network);
  v39 = sub_244E4E31C();
  v41 = v40;

  swift_bridgeObjectRelease();
  v42 = HIBYTE(v41) & 0xF;
  if ((v41 & 0x2000000000000000) == 0)
    v42 = v39 & 0xFFFFFFFFFFFFLL;
  if (v42)
  {
    v43 = objc_msgSend(v3, sel_network);
    v44 = sub_244E4E31C();
    v46 = v45;

  }
  else
  {
    v44 = sub_244E4D8E4();
    v46 = v47;
  }
  v48 = *(_QWORD *)(v6 - 288);
  v49 = objc_msgSend(v3, sel_transactionId);
  *(_QWORD *)(v6 - 304) = sub_244E4E31C();
  *(_QWORD *)(v6 - 312) = v50;

  v51 = objc_msgSend(v3, sel_cvmType);
  v52 = v51;
  *(_QWORD *)(v6 - 288) = v44;
  *(_QWORD *)(v6 - 296) = v46;
  if (v51 > 47)
  {
    v53 = *(_QWORD *)(v6 - 256);
    switch(v51)
    {
      case 48:
        v54 = 2;
        goto LABEL_33;
      case 240:
        v54 = 4;
        goto LABEL_33;
      case 255:
        v54 = 5;
        goto LABEL_33;
    }
LABEL_39:
    type metadata accessor for SPRTransactionCVMType(0);
    *(_BYTE *)(v6 - 136) = v52;
    sub_244E4EAE4();
    __break(1u);
    JUMPOUT(0x244DAE60CLL);
  }
  v53 = *(_QWORD *)(v6 - 256);
  if (!v51)
  {
    *(_DWORD *)(v6 - 264) = 0;
    goto LABEL_34;
  }
  if (v51 != 16)
  {
    if (v51 == 32)
    {
      v54 = 3;
      goto LABEL_33;
    }
    goto LABEL_39;
  }
  v54 = 1;
LABEL_33:
  *(_DWORD *)(v6 - 264) = v54;
LABEL_34:
  v55 = *(_QWORD *)(v6 - 328);
  if (v55)
    v53 = v16;
  *(_QWORD *)(v6 - 256) = v53;
  v56 = *(_QWORD *)(v6 - 320);
  if (!v55)
    v56 = v48;
  *(_QWORD *)(v6 - 320) = v56;
  v57 = objc_msgSend(v3, sel_cvmResult);
  v58 = sub_244E4C324();
  v60 = v59;

  *(_QWORD *)(v6 - 328) = sub_244E4C318();
  *(_QWORD *)(v6 - 336) = v61;
  sub_244D651AC(v58, v60);
  *(_DWORD *)(v6 - 344) = sub_244DAD07C((int)objc_msgSend(v3, sel_outcomeStatus));
  v62 = objc_msgSend(v3, sel_transactionCipherBlob);
  v63 = sub_244E4C324();
  v65 = v64;

  *(_QWORD *)(v6 - 352) = sub_244E4C318();
  *(_QWORD *)(v6 - 360) = v66;
  sub_244D651AC(v63, v65);
  v67 = objc_msgSend(v3, sel_transactionKeyBlob);
  v68 = sub_244E4C324();
  v70 = v69;

  *(_QWORD *)(v6 - 368) = sub_244E4C318();
  *(_QWORD *)(v6 - 376) = v71;
  sub_244D651AC(v68, v70);
  v72 = objc_msgSend(v3, sel_transactionResultData);
  v73 = sub_244E4C324();
  v75 = v74;

  *(_QWORD *)(v6 - 384) = sub_244E4C318();
  *(_QWORD *)(v6 - 392) = v76;
  sub_244D651AC(v73, v75);
  v77 = objc_msgSend(v3, sel_kernelIdentityKeyAttestation);
  v78 = sub_244E4C324();
  v80 = v79;

  *(_QWORD *)(v6 - 400) = sub_244E4C318();
  *(_QWORD *)(v6 - 408) = v81;
  sub_244D651AC(v78, v80);
  v82 = objc_msgSend(v3, sel_ecdsaCertificate);
  v83 = sub_244E4C324();
  v85 = v84;

  sub_244DAB384(v83, v85);
  *(_QWORD *)(v6 - 136) = v86;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416CB8);
  sub_244DAF354((unint64_t *)&qword_257416CC0, &qword_257416CB8, MEMORY[0x24BEE12B0]);
  *(_QWORD *)(v6 - 416) = sub_244E4E2D4();
  *(_QWORD *)(v6 - 424) = v87;
  swift_bridgeObjectRelease();
  sub_244D651AC(v83, v85);
  v88 = objc_msgSend(v3, sel_kekId);
  *(_QWORD *)(v6 - 432) = sub_244E4E31C();
  *(_QWORD *)(v6 - 440) = v89;

  v90 = (void *)sub_244E4CC9C();
  v91 = objc_msgSend(v90, sel_stringValue);

  *(_QWORD *)(v6 - 448) = sub_244E4E31C();
  *(_QWORD *)(v6 - 456) = v92;

  *(_QWORD *)(v6 - 464) = sub_244E4CC3C();
  *(_QWORD *)(v6 - 472) = v93;
  *(_DWORD *)(v6 - 476) = objc_msgSend(v3, sel_isPinSupported);
  *(_DWORD *)(v6 - 480) = objc_msgSend(v3, sel_isPINBypassEnabled);
  *(_DWORD *)(v6 - 484) = objc_msgSend(v3, sel_isPINBypassAllowed);
  *(_DWORD *)(v6 - 488) = objc_msgSend(v3, sel_forFallback);
  v94 = objc_msgSend(v3, sel_fallbackAmount);
  *(_QWORD *)(v6 - 496) = sub_244E4E31C();
  *(_QWORD *)(v6 - 504) = v95;

  v96 = *(_QWORD *)(v6 - 272);
  swift_bridgeObjectRetain();
  *(_DWORD *)(v6 - 508) = objc_msgSend(v3, sel_switchInterfaceOrNoCVMSuccess);
  v97 = objc_msgSend(v3, sel_fingerprint);
  v98 = sub_244E4C324();
  v100 = v99;

  *(_QWORD *)(v6 - 520) = sub_244E4C318();
  *(_QWORD *)(v6 - 528) = v101;
  sub_244D651AC(v98, v100);
  v102 = sub_244DAD0EC((char)objc_msgSend(v3, sel_cardEffectiveState));
  v104 = v103;
  v105 = sub_244DAD34C(objc_msgSend(v3, sel_cardExpirationState));
  LOBYTE(v91) = v106;
  v107 = objc_msgSend(v3, sel_payAppType);
  v108 = sub_244E4E31C();
  v110 = v109;

  result = objc_msgSend(v3, sel_isSAF);
  v112 = *(_QWORD *)(v6 - 312);
  *(_QWORD *)v0 = *(_QWORD *)(v6 - 304);
  *(_QWORD *)(v0 + 8) = v112;
  v113 = *(_QWORD *)(v6 - 296);
  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v6 - 288);
  *(_QWORD *)(v0 + 24) = v113;
  *(_BYTE *)(v0 + 32) = *(_DWORD *)(v6 - 264);
  v114 = *(_QWORD *)(v6 - 336);
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(v6 - 328);
  *(_QWORD *)(v0 + 48) = v114;
  *(_BYTE *)(v0 + 56) = *(_DWORD *)(v6 - 344);
  v115 = *(_QWORD *)(v6 - 360);
  *(_QWORD *)(v0 + 64) = *(_QWORD *)(v6 - 352);
  *(_QWORD *)(v0 + 72) = v115;
  v116 = *(_QWORD *)(v6 - 376);
  *(_QWORD *)(v0 + 80) = *(_QWORD *)(v6 - 368);
  *(_QWORD *)(v0 + 88) = v116;
  v117 = *(_QWORD *)(v6 - 392);
  *(_QWORD *)(v0 + 96) = *(_QWORD *)(v6 - 384);
  *(_QWORD *)(v0 + 104) = v117;
  *(_BYTE *)(v6 - 240) = v104 & 1;
  *(_BYTE *)(v6 - 248) = v91 & 1;
  v118 = *(_QWORD *)(v6 - 408);
  *(_QWORD *)(v0 + 112) = *(_QWORD *)(v6 - 400);
  *(_QWORD *)(v0 + 120) = v118;
  v119 = *(_QWORD *)(v6 - 424);
  *(_QWORD *)(v0 + 128) = *(_QWORD *)(v6 - 416);
  *(_QWORD *)(v0 + 136) = v119;
  v120 = *(_QWORD *)(v6 - 440);
  *(_QWORD *)(v0 + 144) = *(_QWORD *)(v6 - 432);
  *(_QWORD *)(v0 + 152) = v120;
  v121 = *(_QWORD *)(v6 - 456);
  *(_QWORD *)(v0 + 160) = *(_QWORD *)(v6 - 448);
  *(_QWORD *)(v0 + 168) = v121;
  v122 = *(_QWORD *)(v6 - 472);
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v6 - 464);
  *(_QWORD *)(v0 + 184) = v122;
  *(_BYTE *)(v0 + 192) = *(_DWORD *)(v6 - 276);
  *(_BYTE *)(v0 + 193) = *(_DWORD *)(v6 - 476);
  *(_BYTE *)(v0 + 194) = *(_DWORD *)(v6 - 480);
  *(_BYTE *)(v0 + 195) = *(_DWORD *)(v6 - 484);
  *(_BYTE *)(v0 + 196) = *(_DWORD *)(v6 - 488);
  *(_BYTE *)(v0 + 199) = *(_BYTE *)(v6 - 193);
  *(_WORD *)(v0 + 197) = *(_WORD *)(v6 - 195);
  v123 = *(_QWORD *)(v6 - 504);
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v6 - 496);
  *(_QWORD *)(v0 + 208) = v123;
  *(_QWORD *)(v0 + 216) = 0;
  *(_QWORD *)(v0 + 224) = 0;
  *(_BYTE *)(v0 + 232) = -4;
  *(_DWORD *)(v0 + 236) = *(_DWORD *)(v6 - 133);
  *(_DWORD *)(v0 + 233) = *(_DWORD *)(v6 - 136);
  v124 = *(_QWORD *)(v6 - 320);
  *(_QWORD *)(v0 + 240) = v96;
  *(_QWORD *)(v0 + 248) = v124;
  *(_QWORD *)(v0 + 256) = *(_QWORD *)(v6 - 256);
  *(_BYTE *)(v0 + 264) = *(_DWORD *)(v6 - 508);
  *(_DWORD *)(v0 + 268) = *(_DWORD *)(v6 - 189);
  *(_DWORD *)(v0 + 265) = *(_DWORD *)(v6 - 192);
  v125 = *(_QWORD *)(v6 - 528);
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v6 - 520);
  *(_QWORD *)(v0 + 280) = v125;
  *(_QWORD *)(v0 + 288) = v102;
  *(_BYTE *)(v0 + 296) = *(_BYTE *)(v6 - 240);
  *(_DWORD *)(v0 + 300) = *(_DWORD *)(v6 - 149);
  *(_DWORD *)(v0 + 297) = *(_DWORD *)(v6 - 152);
  *(_QWORD *)(v0 + 304) = v105;
  *(_BYTE *)(v0 + 312) = *(_BYTE *)(v6 - 248);
  v126 = *(_DWORD *)(v6 - 202);
  *(_DWORD *)(v0 + 316) = *(_DWORD *)(v6 - 199);
  *(_DWORD *)(v0 + 313) = v126;
  *(_QWORD *)(v0 + 320) = v108;
  *(_QWORD *)(v0 + 328) = v110;
  *(_BYTE *)(v0 + 336) = (_BYTE)result;
  return result;
}

uint64_t sub_244DAE61C(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;

  v2 = a1 - 4000;
  result = 1;
  switch(v2)
  {
    case 0:
    case 3:
    case 4:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 23:
    case 24:
    case 28:
    case 29:
    case 31:
    case 32:
    case 34:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
      return a1;
    case 1:
    case 33:
      return 0;
    case 2:
      return result;
    case 5:
      return 6;
    case 6:
    case 30:
    case 35:
    case 46:
      return 10;
    case 13:
      return 2;
    case 21:
      return 8;
    case 22:
      return 9;
    case 25:
      return 3;
    case 26:
      return 5;
    case 27:
      return 7;
    case 36:
      return 4;
    case 37:
    case 38:
    case 39:
      return 2;
    default:
      if (a1 == 4999)
        return 10;
      else
        return a1;
  }
}

uint64_t sub_244DAE6D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  id v5;
  uint64_t inited;
  objc_class *v7;
  uint64_t v8;
  id v9;

  v3 = a2;
  v4 = a1;
  if (a3)
  {
    v5 = a3;
    swift_bridgeObjectRetain();
    sub_244E4E3F4();
    type metadata accessor for ConfigurationError(0);
    sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
    sub_244E4C198();
    sub_244E4EAA8();
    sub_244E4E3F4();
    swift_bridgeObjectRelease();
    sub_244E4E3F4();

    v4 = a1;
    v3 = a2;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E50DA0;
  v7 = (objc_class *)sub_244E4C4BC();
  *(_QWORD *)(inited + 32) = sub_244E4C498();
  *(_QWORD *)(inited + 40) = v8;
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v4;
  *(_QWORD *)(inited + 56) = v3;
  sub_244DB2520(inited);
  v9 = objc_allocWithZone(v7);
  return sub_244E4C4C8();
}

uint64_t sub_244DAE834(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t inited;
  uint64_t v15;
  id v16;
  void *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;

  *(_QWORD *)&v18 = a1;
  type metadata accessor for ConfigurationError(0);
  sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
  sub_244E4C198();
  switch(v20)
  {
    case 2000:
    case 2004:
    case 2019:
    case 2021:
    case 2022:
    case 2028:
    case 2035:
    case 2036:
    case 2037:
      v10 = objc_allocWithZone((Class)sub_244E4C4BC());
      return sub_244E4C4C8();
    case 2007:
      v2 = sub_244E4C87C();
      goto LABEL_30;
    case 2008:
      v2 = sub_244E4C8AC();
      goto LABEL_30;
    case 2009:
      v2 = sub_244E4C93C();
      goto LABEL_30;
    case 2010:
      v2 = sub_244E4C948();
      goto LABEL_30;
    case 2011:
      v2 = sub_244E4C900();
      goto LABEL_30;
    case 2012:
      v2 = sub_244E4C8E8();
      goto LABEL_30;
    case 2015:
      v2 = sub_244E4C960();
      goto LABEL_30;
    case 2016:
      v2 = sub_244E4C810();
      goto LABEL_30;
    case 2017:
      v2 = sub_244E4C918();
      goto LABEL_30;
    case 2018:
      v17 = a1;
      v4 = sub_244E4C1B0();
      v5 = (objc_class *)sub_244E4C4BC();
      v6 = sub_244E4C4A4();
      if (*(_QWORD *)(v4 + 16) && (v8 = sub_244DC859C(v6, v7), (v9 & 1) != 0))
      {
        sub_244D66F18(*(_QWORD *)(v4 + 56) + 32 * v8, (uint64_t)&v18);
      }
      else
      {
        v18 = 0u;
        v19 = 0u;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)&v19 + 1))
      {
        v13 = MEMORY[0x24BEE13C8];
        if ((swift_dynamicCast() & 1) != 0)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
          inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_244E50DA0;
          *(_QWORD *)(inited + 32) = sub_244E4C4A4();
          *(_QWORD *)(inited + 40) = v15;
          *(_QWORD *)(inited + 72) = v13;
          *(_QWORD *)(inited + 48) = v17;
          sub_244DB2520(inited);
        }
      }
      else
      {
        sub_244D66F54((uint64_t)&v18, &qword_257414A38);
      }
      v16 = objc_allocWithZone(v5);
      return sub_244E4C4C8();
    case 2020:
      v2 = sub_244E4C8C4();
      goto LABEL_30;
    case 2023:
      v2 = sub_244E4C858();
      goto LABEL_30;
    case 2024:
      v2 = sub_244E4C930();
      goto LABEL_30;
    case 2025:
      v2 = sub_244E4C924();
      goto LABEL_30;
    case 2026:
      v2 = sub_244E4C870();
      goto LABEL_30;
    case 2027:
      v2 = sub_244E4C864();
      goto LABEL_30;
    case 2029:
      v2 = sub_244E4C888();
      goto LABEL_30;
    case 2030:
      v2 = sub_244E4C8D0();
      goto LABEL_30;
    case 2031:
      v2 = sub_244E4C8B8();
      goto LABEL_30;
    case 2032:
      v2 = sub_244E4C8A0();
      goto LABEL_30;
    case 2033:
      v2 = sub_244E4C8F4();
      goto LABEL_30;
    case 2038:
      v2 = sub_244E4C8DC();
      goto LABEL_30;
    case 2039:
      v2 = sub_244E4C894();
      goto LABEL_30;
    default:
      v2 = sub_244E4C84C();
LABEL_30:
      v11 = sub_244DAE6D8(v2, v3, a1);
      swift_bridgeObjectRelease();
      return v11;
  }
}

uint64_t sub_244DAEB80(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t inited;
  objc_class *v7;
  uint64_t v8;
  id v9;
  void *v11;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
  type metadata accessor for ConfigurationError(0);
  if (swift_dynamicCast())
  {
    sub_244D65324(&qword_257414720, (uint64_t (*)(uint64_t))type metadata accessor for ConfigurationError, (uint64_t)&unk_244E50144);
    sub_244E4C198();
    if (a1 == (void *)2031 || (sub_244E4C198(), a1 == (void *)2022) || (sub_244E4C198(), a1 == (void *)2036))
    {
      sub_244E4CBE8();
      swift_allocObject();
      sub_244E4CBD0();
      sub_244E4CBDC();
      swift_release();
    }
    v2 = sub_244DAE834(v11);

  }
  else
  {
    v3 = sub_244E4C90C();
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_244E50DA0;
    v7 = (objc_class *)sub_244E4C4BC();
    swift_bridgeObjectRetain();
    *(_QWORD *)(inited + 32) = sub_244E4C498();
    *(_QWORD *)(inited + 40) = v8;
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = v3;
    *(_QWORD *)(inited + 56) = v5;
    sub_244DB2520(inited);
    v9 = objc_allocWithZone(v7);
    v2 = sub_244E4C4C8();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_244DAED48(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  id v8;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  uint64_t v23;
  _QWORD *v24;
  id v25;
  id v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  id v30;
  uint64_t v31;
  NSObject *v32;
  uint8_t *v33;
  _QWORD *v34;
  NSObject *v35;
  uint64_t v36;
  void *v37;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v33 - v6;
  v37 = a1;
  v8 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
  if (swift_dynamicCast())
    return v36;
  v36 = (uint64_t)a1;
  v10 = a1;
  type metadata accessor for ReadError(0);
  if (swift_dynamicCast())
  {
    v11 = v37;
    if (qword_257414408 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E18);
    sub_244D640E4(v12, (uint64_t)v7);
    v13 = sub_244E4DCD4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
    {
      sub_244D66F54((uint64_t)v7, &qword_2574145A0);
    }
    else
    {
      v18 = v11;
      v19 = sub_244E4DCBC();
      v20 = sub_244E4E67C();
      if (os_log_type_enabled(v19, v20))
      {
        v35 = v19;
        v21 = (uint8_t *)swift_slowAlloc();
        v34 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v21 = 138412290;
        v33 = v21 + 4;
        v22 = v18;
        v23 = _swift_stdlib_bridgeErrorToNSError();
        v36 = v23;
        sub_244E4E7E4();
        v24 = v34;
        *v34 = v23;
        v19 = v35;

        _os_log_impl(&dword_244D61000, v19, v20, "Mapping SPR read error: [ %@ ]", v21, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v24, -1, -1);
        MEMORY[0x2495283BC](v21, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v7, v13);
    }
    v37 = v11;
    sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
    sub_244E4C198();

    return sub_244DAE61C(v36);
  }
  else
  {
    if (qword_257414408 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E18);
    sub_244D640E4(v15, (uint64_t)v5);
    v16 = sub_244E4DCD4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
    {
      sub_244D66F54((uint64_t)v5, &qword_2574145A0);
    }
    else
    {
      v25 = a1;
      v26 = a1;
      v27 = sub_244E4DCBC();
      v28 = sub_244E4E67C();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        *(_DWORD *)v29 = 138412290;
        v30 = a1;
        v31 = _swift_stdlib_bridgeErrorToNSError();
        v36 = v31;
        sub_244E4E7E4();
        v32 = v35;
        v35->isa = (Class)v31;

        _os_log_impl(&dword_244D61000, v27, v28, "Unexpected error received from SPR : Error: [ %@ ]", v29, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v32, -1, -1);
        MEMORY[0x2495283BC](v29, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
    }
    return 2;
  }
}

unint64_t sub_244DAF224()
{
  unint64_t result;

  result = qword_257416CB0;
  if (!qword_257416CB0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257416CB0);
  }
  return result;
}

double sub_244DAF260@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_244DAB030(a1, a2, *(__int128 **)(v3 + 16), a3);
}

uint64_t sub_244DAF278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_244DAB0A8(a1, a2, *(unint64_t **)(v3 + 16), a3);
}

_QWORD *sub_244DAF294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;

  v9 = **(_QWORD **)(v3 + 16);
  v8[2] = &v9;
  result = sub_244DAA730((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_244DAF2F0, (uint64_t)v8, a1, a2);
  *a3 = result;
  a3[1] = v6;
  a3[2] = v7;
  return result;
}

uint64_t sub_244DAF2F0@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v5 = sub_244DAABF4(v8, a1, a2, **(_QWORD **)(v3 + 16));
  v6 = v8[1];
  *a3 = v8[0];
  a3[1] = v6;
  a3[2] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_244DAF354(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x2495282F0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_244DAF394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_244DAA80C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_244DAF454, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

_BYTE *sub_244DAF3F0(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_244DAB728(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_244DAB7E8((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_244DAB860((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_244DAF454@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_244DAB2FC(a1, a2);
}

id sub_244DAF470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,char a44)
{
  id result;

  if ((a44 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a28;
  }
  return result;
}

uint64_t destroy for ReaderEvent(uint64_t result)
{
  unsigned int v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v1 = *(unsigned __int8 *)(result + 337);
  if (v1 <= 1)
  {
    v6 = *(_OWORD *)(result + 288);
    v7 = *(_OWORD *)(result + 304);
    v4 = *(_OWORD *)(result + 256);
    v5 = *(_OWORD *)(result + 272);
    v2 = *(_OWORD *)(result + 224);
    v3 = *(_OWORD *)(result + 240);
    return sub_244DAF654(*(_QWORD *)result, *(_QWORD *)(result + 8), *(_QWORD *)(result + 16), *(_QWORD *)(result + 24), *(_QWORD *)(result + 32), *(_QWORD *)(result + 40), *(_QWORD *)(result + 48), *(_QWORD *)(result + 56), *(_QWORD *)(result + 64), *(_QWORD *)(result + 72), *(_QWORD *)(result + 80), *(_QWORD *)(result + 88), *(_QWORD *)(result + 96), *(_QWORD *)(result + 104), *(_QWORD *)(result + 112), *(_QWORD *)(result + 120), *(_QWORD *)(result + 128), *(_QWORD *)(result + 136), *(_QWORD *)(result + 144),
             *(_QWORD *)(result + 152),
             *(_QWORD *)(result + 160),
             *(_QWORD *)(result + 168),
             *(_QWORD *)(result + 176),
             *(_QWORD *)(result + 184),
             *(_QWORD *)(result + 192),
             *(_QWORD *)(result + 200),
             *(_QWORD *)(result + 208),
             *(void **)(result + 216),
             v2,
             *((uint64_t *)&v2 + 1),
             v3,
             *((uint64_t *)&v3 + 1),
             v4,
             *((uint64_t *)&v4 + 1),
             v5,
             *((uint64_t *)&v5 + 1),
             v6,
             *((uint64_t *)&v6 + 1),
             v7,
             *((uint64_t *)&v7 + 1),
             *(_QWORD *)(result + 320),
             *(_QWORD *)(result + 328),
             *(_BYTE *)(result + 336),
             v1 != 0);
  }
  return result;
}

uint64_t sub_244DAF654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43,char a44)
{
  uint64_t result;

  if ((a44 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *initializeWithCopy for ReaderEvent(uint64_t *__dst, char *a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v3 = a2[337];
  if (v3 > 1)
  {
    memcpy(__dst, a2, 0x152uLL);
  }
  else
  {
    v35 = *((_QWORD *)a2 + 1);
    v36 = *(_QWORD *)a2;
    v33 = *((_QWORD *)a2 + 3);
    v34 = *((_QWORD *)a2 + 2);
    v31 = *((_QWORD *)a2 + 5);
    v32 = *((_QWORD *)a2 + 4);
    v29 = *((_QWORD *)a2 + 7);
    v30 = *((_QWORD *)a2 + 6);
    v47 = *((_QWORD *)a2 + 9);
    v48 = *((_QWORD *)a2 + 8);
    v45 = *((_QWORD *)a2 + 11);
    v46 = *((_QWORD *)a2 + 10);
    v43 = *((_QWORD *)a2 + 13);
    v44 = *((_QWORD *)a2 + 12);
    v41 = *((_QWORD *)a2 + 15);
    v42 = *((_QWORD *)a2 + 14);
    v6 = *((_QWORD *)a2 + 16);
    v7 = *((_QWORD *)a2 + 17);
    v8 = *((_QWORD *)a2 + 18);
    v9 = *((_QWORD *)a2 + 19);
    v10 = *((_QWORD *)a2 + 20);
    v11 = *((_QWORD *)a2 + 21);
    v4 = *((_QWORD *)a2 + 24);
    v12 = *((_QWORD *)a2 + 22);
    v13 = *((_QWORD *)a2 + 23);
    v14 = *((_QWORD *)a2 + 25);
    v15 = *((_QWORD *)a2 + 26);
    v16 = (void *)*((_QWORD *)a2 + 27);
    v17 = *((_QWORD *)a2 + 28);
    v18 = *((_QWORD *)a2 + 29);
    v19 = *((_QWORD *)a2 + 30);
    v20 = *((_QWORD *)a2 + 31);
    v21 = *((_QWORD *)a2 + 32);
    v22 = *((_QWORD *)a2 + 33);
    v23 = *((_QWORD *)a2 + 34);
    v24 = *((_QWORD *)a2 + 35);
    v25 = *((_QWORD *)a2 + 36);
    v26 = *((_QWORD *)a2 + 37);
    v27 = *((_QWORD *)a2 + 38);
    v28 = *((_QWORD *)a2 + 39);
    v37 = *((_QWORD *)a2 + 40);
    v38 = *((_QWORD *)a2 + 41);
    v39 = a2[336];
    v40 = v3 != 0;
    sub_244DAF470(*(_QWORD *)a2, v35, v34, v33, v32, v31, v30, v29, v48, v47, v46, v45, v44, v43, v42, v41, v6, v7, v8,
      v9,
      v10,
      v11,
      v12,
      v13,
      v4,
      v14,
      v15,
      v16,
      v17,
      v18,
      v19,
      v20,
      v21,
      v22,
      v23,
      v24,
      v25,
      v26,
      v27,
      v28,
      v37,
      v38,
      v39,
      v3 != 0);
    *__dst = v36;
    __dst[1] = v35;
    __dst[2] = v34;
    __dst[3] = v33;
    __dst[4] = v32;
    __dst[5] = v31;
    __dst[6] = v30;
    __dst[7] = v29;
    __dst[8] = v48;
    __dst[9] = v47;
    __dst[10] = v46;
    __dst[11] = v45;
    __dst[12] = v44;
    __dst[13] = v43;
    __dst[14] = v42;
    __dst[15] = v41;
    __dst[16] = v6;
    __dst[17] = v7;
    __dst[18] = v8;
    __dst[19] = v9;
    __dst[20] = v10;
    __dst[21] = v11;
    __dst[22] = v12;
    __dst[23] = v13;
    __dst[24] = v4;
    __dst[25] = v14;
    __dst[26] = v15;
    __dst[27] = (uint64_t)v16;
    __dst[28] = v17;
    __dst[29] = v18;
    __dst[30] = v19;
    __dst[31] = v20;
    __dst[32] = v21;
    __dst[33] = v22;
    __dst[34] = v23;
    __dst[35] = v24;
    __dst[36] = v25;
    __dst[37] = v26;
    __dst[38] = v27;
    __dst[39] = v28;
    __dst[40] = v37;
    __dst[41] = v38;
    *((_BYTE *)__dst + 336) = v39;
    *((_BYTE *)__dst + 337) = v40;
  }
  return __dst;
}

char *assignWithCopy for ReaderEvent(char *__dst, _QWORD *__src)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  char v70;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  BOOL v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;

  v148 = __dst + 337;
  v4 = __dst[337];
  v5 = *((unsigned __int8 *)__src + 337);
  if (v4 <= 1)
  {
    if (v5 <= 1)
    {
      v144 = __src[1];
      v146 = *__src;
      v140 = __src[3];
      v142 = __src[2];
      v136 = __src[5];
      v138 = __src[4];
      v132 = __src[7];
      v134 = __src[6];
      v129 = __src[9];
      v131 = __src[8];
      v125 = __src[11];
      v127 = __src[10];
      v121 = __src[13];
      v123 = __src[12];
      v117 = __src[15];
      v119 = __src[14];
      v6 = __src[17];
      v115 = __src[16];
      v7 = __src[18];
      v8 = __src[19];
      v9 = __src[20];
      v11 = __src[22];
      v10 = __src[23];
      v13 = __src[24];
      v12 = __src[25];
      v79 = __src[21];
      v80 = __src[26];
      v82 = (void *)__src[27];
      v84 = __src[28];
      v85 = __src[29];
      v87 = __src[30];
      v89 = __src[31];
      v91 = __src[32];
      v93 = __src[33];
      v95 = __src[34];
      v97 = __src[35];
      v99 = __src[36];
      v101 = __src[37];
      v103 = __src[38];
      v105 = __src[39];
      v107 = __src[40];
      v109 = __src[41];
      v113 = *((_BYTE *)__src + 336);
      v111 = v5 != 0;
      sub_244DAF470(*__src, v144, v142, v140, v138, v136, v134, v132, v131, v129, v127, v125, v123, v121, v119, v117, v115, v6, v7,
        v8,
        v9,
        v79,
        v11,
        v10,
        v13,
        v12,
        v80,
        v82,
        v84,
        v85,
        v87,
        v89,
        v91,
        v93,
        v95,
        v97,
        v99,
        v101,
        v103,
        v105,
        v107,
        v109,
        v113,
        v5 != 0);
      v14 = *(_QWORD *)__dst;
      v15 = *((_QWORD *)__dst + 1);
      *(_QWORD *)__dst = v146;
      *((_QWORD *)__dst + 1) = v144;
      v16 = *((_QWORD *)__dst + 2);
      v17 = *((_QWORD *)__dst + 3);
      *((_QWORD *)__dst + 2) = v142;
      *((_QWORD *)__dst + 3) = v140;
      v18 = *((_QWORD *)__dst + 4);
      v19 = *((_QWORD *)__dst + 5);
      *((_QWORD *)__dst + 4) = v138;
      *((_QWORD *)__dst + 5) = v136;
      v20 = *((_QWORD *)__dst + 6);
      v21 = *((_QWORD *)__dst + 7);
      *((_QWORD *)__dst + 6) = v134;
      *((_QWORD *)__dst + 7) = v132;
      v22 = *((_OWORD *)__dst + 4);
      v23 = *((_OWORD *)__dst + 5);
      *((_QWORD *)__dst + 8) = v131;
      *((_QWORD *)__dst + 9) = v129;
      *((_QWORD *)__dst + 10) = v127;
      *((_QWORD *)__dst + 11) = v125;
      v24 = *((_OWORD *)__dst + 6);
      v25 = *((_OWORD *)__dst + 7);
      *((_QWORD *)__dst + 12) = v123;
      *((_QWORD *)__dst + 13) = v121;
      *((_QWORD *)__dst + 14) = v119;
      *((_QWORD *)__dst + 15) = v117;
      v26 = *((_OWORD *)__dst + 8);
      v27 = *((_OWORD *)__dst + 9);
      *((_QWORD *)__dst + 16) = v115;
      *((_QWORD *)__dst + 17) = v6;
      *((_QWORD *)__dst + 18) = v7;
      *((_QWORD *)__dst + 19) = v8;
      v28 = *((_OWORD *)__dst + 10);
      v29 = *((_OWORD *)__dst + 11);
      *((_QWORD *)__dst + 20) = v9;
      *((_QWORD *)__dst + 21) = v79;
      *((_QWORD *)__dst + 22) = v11;
      *((_QWORD *)__dst + 23) = v10;
      v30 = *((_OWORD *)__dst + 12);
      v31 = *((_OWORD *)__dst + 13);
      *((_QWORD *)__dst + 24) = v13;
      *((_QWORD *)__dst + 25) = v12;
      *((_QWORD *)__dst + 26) = v80;
      *((_QWORD *)__dst + 27) = v82;
      v32 = *((_OWORD *)__dst + 14);
      v33 = *((_OWORD *)__dst + 15);
      *((_QWORD *)__dst + 28) = v84;
      *((_QWORD *)__dst + 29) = v85;
      *((_QWORD *)__dst + 30) = v87;
      *((_QWORD *)__dst + 31) = v89;
      v34 = *((_OWORD *)__dst + 16);
      v35 = *((_OWORD *)__dst + 17);
      *((_QWORD *)__dst + 32) = v91;
      *((_QWORD *)__dst + 33) = v93;
      *((_QWORD *)__dst + 34) = v95;
      *((_QWORD *)__dst + 35) = v97;
      v36 = *((_OWORD *)__dst + 18);
      v37 = *((_OWORD *)__dst + 19);
      *((_QWORD *)__dst + 36) = v99;
      *((_QWORD *)__dst + 37) = v101;
      *((_QWORD *)__dst + 38) = v103;
      *((_QWORD *)__dst + 39) = v105;
      v38 = *v148;
      *v148 = v111;
      v39 = *((_QWORD *)__dst + 40);
      v40 = *((_QWORD *)__dst + 41);
      *((_QWORD *)__dst + 40) = v107;
      *((_QWORD *)__dst + 41) = v109;
      v41 = __dst[336];
      __dst[336] = v113;
      sub_244DAF654(v14, v15, v16, v17, v18, v19, v20, v21, v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, *((uint64_t *)&v25 + 1), v26, *((uint64_t *)&v26 + 1), v27,
        *((uint64_t *)&v27 + 1),
        v28,
        *((uint64_t *)&v28 + 1),
        v29,
        *((uint64_t *)&v29 + 1),
        v30,
        *((uint64_t *)&v30 + 1),
        v31,
        *((void **)&v31 + 1),
        v32,
        *((uint64_t *)&v32 + 1),
        v33,
        *((uint64_t *)&v33 + 1),
        v34,
        *((uint64_t *)&v34 + 1),
        v35,
        *((uint64_t *)&v35 + 1),
        v36,
        *((uint64_t *)&v36 + 1),
        v37,
        *((uint64_t *)&v37 + 1),
        v39,
        v40,
        v41,
        v38);
      return __dst;
    }
    v76 = *((_OWORD *)__dst + 18);
    v77 = *((_OWORD *)__dst + 19);
    v74 = *((_OWORD *)__dst + 16);
    v75 = *((_OWORD *)__dst + 17);
    v72 = *((_OWORD *)__dst + 14);
    v73 = *((_OWORD *)__dst + 15);
    sub_244DAF654(*(_QWORD *)__dst, *((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), *((_QWORD *)__dst + 3), *((_QWORD *)__dst + 4), *((_QWORD *)__dst + 5), *((_QWORD *)__dst + 6), *((_QWORD *)__dst + 7), *((_QWORD *)__dst + 8), *((_QWORD *)__dst + 9), *((_QWORD *)__dst + 10), *((_QWORD *)__dst + 11), *((_QWORD *)__dst + 12), *((_QWORD *)__dst + 13), *((_QWORD *)__dst + 14), *((_QWORD *)__dst + 15), *((_QWORD *)__dst + 16), *((_QWORD *)__dst + 17), *((_QWORD *)__dst + 18),
      *((_QWORD *)__dst + 19),
      *((_QWORD *)__dst + 20),
      *((_QWORD *)__dst + 21),
      *((_QWORD *)__dst + 22),
      *((_QWORD *)__dst + 23),
      *((_QWORD *)__dst + 24),
      *((_QWORD *)__dst + 25),
      *((_QWORD *)__dst + 26),
      *((void **)__dst + 27),
      v72,
      *((uint64_t *)&v72 + 1),
      v73,
      *((uint64_t *)&v73 + 1),
      v74,
      *((uint64_t *)&v74 + 1),
      v75,
      *((uint64_t *)&v75 + 1),
      v76,
      *((uint64_t *)&v76 + 1),
      v77,
      *((uint64_t *)&v77 + 1),
      *((_QWORD *)__dst + 40),
      *((_QWORD *)__dst + 41),
      __dst[336],
      v4 & 1);
LABEL_10:
    memcpy(__dst, __src, 0x152uLL);
    return __dst;
  }
  if (v5 > 1)
    goto LABEL_10;
  v42 = v5 == 0;
  v124 = __src[1];
  v126 = *__src;
  v120 = __src[3];
  v122 = __src[2];
  v116 = __src[5];
  v118 = __src[4];
  v112 = __src[7];
  v114 = __src[6];
  v145 = __src[9];
  v147 = __src[8];
  v141 = __src[11];
  v143 = __src[10];
  v137 = __src[13];
  v139 = __src[12];
  v43 = __src[16];
  v133 = __src[15];
  v135 = __src[14];
  v45 = __src[17];
  v44 = __src[18];
  v47 = __src[19];
  v46 = __src[20];
  v49 = __src[21];
  v48 = __src[22];
  v50 = __src[23];
  v51 = __src[24];
  v81 = v50;
  v52 = __src[25];
  v53 = __src[26];
  v83 = v51;
  v55 = (void *)__src[27];
  v54 = __src[28];
  v86 = v55;
  v88 = v54;
  v57 = __src[29];
  v56 = __src[30];
  v90 = v57;
  v92 = v56;
  v59 = __src[31];
  v58 = __src[32];
  v94 = __src[31];
  v96 = v58;
  v61 = __src[33];
  v60 = __src[34];
  v98 = v61;
  v100 = v60;
  v63 = __src[35];
  v62 = __src[36];
  v102 = v63;
  v104 = v62;
  v65 = __src[37];
  v64 = __src[38];
  v106 = v65;
  v108 = v64;
  v67 = __src[39];
  v66 = __src[40];
  v110 = v67;
  v68 = __src[41];
  v128 = v66;
  v130 = v68;
  v69 = *((_BYTE *)__src + 336);
  v70 = !v42;
  v78 = v70;
  sub_244DAF470(v126, v124, v122, v120, v118, v116, v114, v112, v147, v145, v143, v141, v139, v137, v135, v133, v43, v45, v44,
    v47,
    v46,
    v49,
    v48,
    v50,
    v51,
    v52,
    v53,
    v55,
    v54,
    v57,
    v56,
    v59,
    v58,
    v61,
    v60,
    v63,
    v62,
    v65,
    v64,
    v67,
    v66,
    v68,
    v69,
    v70);
  *v148 = v78;
  *(_QWORD *)__dst = v126;
  *((_QWORD *)__dst + 1) = v124;
  *((_QWORD *)__dst + 2) = v122;
  *((_QWORD *)__dst + 3) = v120;
  *((_QWORD *)__dst + 4) = v118;
  *((_QWORD *)__dst + 5) = v116;
  *((_QWORD *)__dst + 6) = v114;
  *((_QWORD *)__dst + 7) = v112;
  *((_QWORD *)__dst + 8) = v147;
  *((_QWORD *)__dst + 9) = v145;
  *((_QWORD *)__dst + 10) = v143;
  *((_QWORD *)__dst + 11) = v141;
  *((_QWORD *)__dst + 12) = v139;
  *((_QWORD *)__dst + 13) = v137;
  *((_QWORD *)__dst + 14) = v135;
  *((_QWORD *)__dst + 15) = v133;
  *((_QWORD *)__dst + 16) = v43;
  *((_QWORD *)__dst + 17) = v45;
  *((_QWORD *)__dst + 18) = v44;
  *((_QWORD *)__dst + 19) = v47;
  *((_QWORD *)__dst + 20) = v46;
  *((_QWORD *)__dst + 21) = v49;
  *((_QWORD *)__dst + 22) = v48;
  *((_QWORD *)__dst + 23) = v81;
  *((_QWORD *)__dst + 24) = v83;
  *((_QWORD *)__dst + 25) = v52;
  *((_QWORD *)__dst + 26) = v53;
  *((_QWORD *)__dst + 27) = v86;
  *((_QWORD *)__dst + 28) = v88;
  *((_QWORD *)__dst + 29) = v90;
  *((_QWORD *)__dst + 30) = v92;
  *((_QWORD *)__dst + 31) = v94;
  *((_QWORD *)__dst + 32) = v96;
  *((_QWORD *)__dst + 33) = v98;
  *((_QWORD *)__dst + 34) = v100;
  *((_QWORD *)__dst + 35) = v102;
  *((_QWORD *)__dst + 36) = v104;
  *((_QWORD *)__dst + 37) = v106;
  *((_QWORD *)__dst + 38) = v108;
  *((_QWORD *)__dst + 39) = v110;
  *((_QWORD *)__dst + 40) = v128;
  *((_QWORD *)__dst + 41) = v130;
  __dst[336] = v69;
  return __dst;
}

void *__swift_memcpy338_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x152uLL);
}

unsigned __int8 *assignWithTake for ReaderEvent(unsigned __int8 *__dst, unsigned __int8 *__src)
{
  unsigned int v4;
  unsigned int v5;
  char *v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  v4 = __dst[337];
  if (v4 > 1)
    goto LABEL_5;
  v5 = __src[337];
  if (v5 > 1)
  {
    v52 = *((_OWORD *)__dst + 18);
    v53 = *((_OWORD *)__dst + 19);
    v50 = *((_OWORD *)__dst + 16);
    v51 = *((_OWORD *)__dst + 17);
    v48 = *((_OWORD *)__dst + 14);
    v49 = *((_OWORD *)__dst + 15);
    sub_244DAF654(*(_QWORD *)__dst, *((_QWORD *)__dst + 1), *((_QWORD *)__dst + 2), *((_QWORD *)__dst + 3), *((_QWORD *)__dst + 4), *((_QWORD *)__dst + 5), *((_QWORD *)__dst + 6), *((_QWORD *)__dst + 7), *((_QWORD *)__dst + 8), *((_QWORD *)__dst + 9), *((_QWORD *)__dst + 10), *((_QWORD *)__dst + 11), *((_QWORD *)__dst + 12), *((_QWORD *)__dst + 13), *((_QWORD *)__dst + 14), *((_QWORD *)__dst + 15), *((_QWORD *)__dst + 16), *((_QWORD *)__dst + 17), *((_QWORD *)__dst + 18),
      *((_QWORD *)__dst + 19),
      *((_QWORD *)__dst + 20),
      *((_QWORD *)__dst + 21),
      *((_QWORD *)__dst + 22),
      *((_QWORD *)__dst + 23),
      *((_QWORD *)__dst + 24),
      *((_QWORD *)__dst + 25),
      *((_QWORD *)__dst + 26),
      *((void **)__dst + 27),
      v48,
      *((uint64_t *)&v48 + 1),
      v49,
      *((uint64_t *)&v49 + 1),
      v50,
      *((uint64_t *)&v50 + 1),
      v51,
      *((uint64_t *)&v51 + 1),
      v52,
      *((uint64_t *)&v52 + 1),
      v53,
      *((uint64_t *)&v53 + 1),
      *((_QWORD *)__dst + 40),
      *((_QWORD *)__dst + 41),
      __dst[336],
      v4 & 1);
LABEL_5:
    memcpy(__dst, __src, 0x152uLL);
    return __dst;
  }
  v6 = (char *)(__dst + 337);
  v7 = __src[336];
  v8 = *(_QWORD *)__dst;
  v9 = *((_QWORD *)__dst + 1);
  v10 = *((_QWORD *)__dst + 2);
  v11 = *((_QWORD *)__dst + 3);
  v12 = *((_QWORD *)__dst + 4);
  v13 = *((_QWORD *)__dst + 5);
  v14 = *((_QWORD *)__dst + 6);
  v15 = *((_QWORD *)__dst + 7);
  v16 = *((_OWORD *)__dst + 4);
  v17 = *((_OWORD *)__dst + 5);
  v18 = *((_OWORD *)__dst + 6);
  v19 = *((_OWORD *)__dst + 7);
  v20 = *((_OWORD *)__dst + 8);
  v21 = *((_OWORD *)__dst + 9);
  v22 = *((_OWORD *)__dst + 10);
  v23 = *((_OWORD *)__dst + 11);
  v24 = *((_OWORD *)__dst + 12);
  v25 = *((_OWORD *)__dst + 13);
  v26 = *((_OWORD *)__dst + 14);
  v27 = *((_OWORD *)__dst + 15);
  v28 = *((_OWORD *)__dst + 16);
  v29 = *((_OWORD *)__dst + 17);
  v30 = *((_OWORD *)__dst + 18);
  v31 = *((_OWORD *)__dst + 19);
  v32 = *((_QWORD *)__dst + 40);
  v33 = *((_QWORD *)__dst + 41);
  v34 = __dst[336];
  v35 = *v6;
  v36 = *((_OWORD *)__src + 1);
  *(_OWORD *)__dst = *(_OWORD *)__src;
  *((_OWORD *)__dst + 1) = v36;
  v37 = *((_OWORD *)__src + 3);
  *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
  *((_OWORD *)__dst + 3) = v37;
  v38 = *((_OWORD *)__src + 5);
  *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
  *((_OWORD *)__dst + 5) = v38;
  v39 = *((_OWORD *)__src + 7);
  *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
  *((_OWORD *)__dst + 7) = v39;
  v40 = *((_OWORD *)__src + 9);
  *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
  *((_OWORD *)__dst + 9) = v40;
  v41 = *((_OWORD *)__src + 11);
  *((_OWORD *)__dst + 10) = *((_OWORD *)__src + 10);
  *((_OWORD *)__dst + 11) = v41;
  v42 = *((_OWORD *)__src + 13);
  *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
  *((_OWORD *)__dst + 13) = v42;
  v43 = *((_OWORD *)__src + 15);
  *((_OWORD *)__dst + 14) = *((_OWORD *)__src + 14);
  *((_OWORD *)__dst + 15) = v43;
  v44 = *((_OWORD *)__src + 17);
  *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
  *((_OWORD *)__dst + 17) = v44;
  v45 = *((_OWORD *)__src + 19);
  v46 = *((_OWORD *)__src + 20);
  *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
  *((_OWORD *)__dst + 19) = v45;
  *((_OWORD *)__dst + 20) = v46;
  __dst[336] = v7;
  *v6 = v5 != 0;
  sub_244DAF654(v8, v9, v10, v11, v12, v13, v14, v15, v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, *((uint64_t *)&v19 + 1), v20, *((uint64_t *)&v20 + 1), v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((void **)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    v33,
    v34,
    v35);
  return __dst;
}

uint64_t getEnumTagSinglePayload for ReaderEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  unsigned int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xF5 && *(_BYTE *)(a1 + 338))
    return (*(_DWORD *)a1 + 245);
  v3 = *(unsigned __int8 *)(a1 + 337);
  if (v3 > 1)
    v4 = (v3 ^ 0xFF) + 1;
  else
    v4 = 0;
  if (v4 >= 0xB)
    return v4 - 10;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ReaderEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(_WORD *)(result + 336) = 0;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_DWORD *)result = a2 - 245;
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 338) = 1;
  }
  else
  {
    if (a3 >= 0xF5)
      *(_BYTE *)(result + 338) = 0;
    if (a2)
      *(_BYTE *)(result + 337) = -10 - a2;
  }
  return result;
}

uint64_t sub_244DB0354(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 337);
  if (v1 > 1)
    return (v1 ^ 0xFF) + 1;
  else
    return 0;
}

double sub_244DB0368(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0xFE)
  {
    *(_QWORD *)(a1 + 328) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 336) = 0;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)(a1 + 337) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReaderEvent()
{
  return &type metadata for ReaderEvent;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CardReaderAdapterError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3E && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 62);
  v3 = (*(_BYTE *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for CardReaderAdapterError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 62;
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x3E)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_244DB04B4(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 8);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_244DB04D4(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_244DB04E4(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 3 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_BYTE *)(result + 8) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for CardReaderAdapterError()
{
  return &type metadata for CardReaderAdapterError;
}

uint64_t destroy for TransactionData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TransactionData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v23;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  v7 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v7;
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  v10 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v10;
  v11 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v11;
  v12 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v12;
  v13 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v13;
  *(_DWORD *)(a1 + 192) = *(_DWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  v14 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v14;
  v15 = *(_QWORD *)(a2 + 224);
  v23 = *(void **)(a2 + 216);
  *(_QWORD *)(a1 + 216) = v23;
  *(_QWORD *)(a1 + 224) = v15;
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  v16 = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = v16;
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v17 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v17;
  v18 = *(_QWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = v18;
  v19 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v19;
  v20 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v20;
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TransactionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2 + 264;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_BYTE *)(a1 + 195) = *(_BYTE *)(a2 + 195);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 216);
  v6 = *(void **)(a2 + 216);
  *(_QWORD *)(a1 + 216) = v6;
  v7 = v6;

  v8 = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = v8;
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = v9;
  v10 = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = v10;
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(v4 + 72);
  return a1;
}

void *__swift_memcpy337_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x151uLL);
}

uint64_t assignWithTake for TransactionData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2 + 264;
  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v15;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_BYTE *)(a1 + 193) = *(_BYTE *)(a2 + 193);
  *(_BYTE *)(a1 + 194) = *(_BYTE *)(a2 + 194);
  *(_BYTE *)(a1 + 195) = *(_BYTE *)(a2 + 195);
  *(_BYTE *)(a1 + 196) = *(_BYTE *)(a2 + 196);
  v16 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v16;
  swift_bridgeObjectRelease();
  v17 = *(void **)(a1 + 216);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);

  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_BYTE *)(a1 + 232) = *(_BYTE *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRelease();
  v18 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v18;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
  v19 = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
  v20 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v20;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(v4 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 337))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TransactionData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 336) = 0;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 337) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 337) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TransactionData()
{
  return &type metadata for TransactionData;
}

void sub_244DB0CF0(char a1)
{
  sub_244E4EB80();
  __asm { BR              X10 }
}

uint64_t sub_244DB0D3C()
{
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

void sub_244DB0DE8(uint64_t a1, char a2)
{
  sub_244E4EB80();
  __asm { BR              X10 }
}

uint64_t sub_244DB0E30()
{
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

unint64_t sub_244DB0EDC(uint64_t a1, unsigned __int8 a2)
{
  unint64_t v3;
  unint64_t v4;

  if (a2 >> 6)
  {
    if (a2 >> 6 != 1)
      __asm { BR              X9 }
    if ((a2 & 0x3F) == 0)
    {
      sub_244E4E88C();
      swift_bridgeObjectRelease();
      v4 = 0xD000000000000023;
      goto LABEL_11;
    }
    if ((a2 & 0x3F) == 1)
    {
      sub_244E4E88C();
      swift_bridgeObjectRelease();
      v4 = 0xD000000000000010;
LABEL_11:
      sub_244E4EAA8();
      sub_244E4E3F4();
      swift_bridgeObjectRelease();
      sub_244E4E3F4();
      return v4;
    }
    v3 = 0xD000000000000019;
    if (a1 != 1)
      v3 = 0x6461655264726163;
    if (a1)
      return v3;
    else
      return 0xD000000000000024;
  }
  else if ((_BYTE)a1)
  {
    if (a1 == 1)
      return sub_244E4D3EC();
    else
      return sub_244E4D3F8();
  }
  else
  {
    return sub_244E4D404();
  }
}

void sub_244DB11D0()
{
  JUMPOUT(0x244DB11C0);
}

unint64_t sub_244DB11F4(uint64_t a1, uint64_t a2)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  if ((*((_BYTE *)v2 + 196) & 1) != 0)
  {
    v5 = *((_QWORD *)v2 + 25);
    v6 = *((_QWORD *)v2 + 26);
    swift_bridgeObjectRetain();
  }
  else
  {
    v5 = 0;
    v6 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E54970;
  *(_QWORD *)(inited + 32) = sub_244E4E31C();
  *(_QWORD *)(inited + 40) = v8;
  v9 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  *(_QWORD *)(inited + 80) = sub_244E4E31C();
  *(_QWORD *)(inited + 88) = v10;
  v34 = *v2;
  v11 = v34;
  *(_QWORD *)(inited + 120) = v9;
  *(_OWORD *)(inited + 96) = v11;
  *(_QWORD *)(inited + 128) = sub_244E4E31C();
  *(_QWORD *)(inited + 136) = v12;
  v33 = v2[8];
  v13 = v33;
  *(_QWORD *)(inited + 168) = v9;
  *(_OWORD *)(inited + 144) = v13;
  *(_QWORD *)(inited + 176) = sub_244E4E31C();
  *(_QWORD *)(inited + 184) = v14;
  v32 = v2[7];
  v15 = v32;
  *(_QWORD *)(inited + 216) = v9;
  *(_OWORD *)(inited + 192) = v15;
  *(_QWORD *)(inited + 224) = sub_244E4E31C();
  *(_QWORD *)(inited + 232) = v16;
  v31 = v2[9];
  v17 = v31;
  *(_QWORD *)(inited + 264) = v9;
  *(_OWORD *)(inited + 240) = v17;
  *(_QWORD *)(inited + 272) = sub_244E4E31C();
  *(_QWORD *)(inited + 280) = v18;
  v30 = v2[4];
  v19 = v30;
  *(_QWORD *)(inited + 312) = v9;
  *(_OWORD *)(inited + 288) = v19;
  *(_QWORD *)(inited + 320) = sub_244E4E31C();
  *(_QWORD *)(inited + 328) = v20;
  v29 = v2[5];
  v21 = v29;
  *(_QWORD *)(inited + 360) = v9;
  *(_OWORD *)(inited + 336) = v21;
  *(_QWORD *)(inited + 368) = sub_244E4E31C();
  *(_QWORD *)(inited + 376) = v22;
  v23 = MEMORY[0x24BEE1328];
  v24 = *((_BYTE *)v2 + 193);
  *(_QWORD *)(inited + 408) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 384) = v24;
  *(_QWORD *)(inited + 416) = sub_244E4E31C();
  *(_QWORD *)(inited + 424) = v25;
  *(_QWORD *)(inited + 456) = __swift_instantiateConcreteTypeFromMangledName(&qword_257416D50);
  *(_QWORD *)(inited + 432) = v5;
  *(_QWORD *)(inited + 440) = v6;
  *(_QWORD *)(inited + 464) = sub_244E4E31C();
  *(_QWORD *)(inited + 472) = v26;
  v27 = *((_BYTE *)v2 + 194);
  *(_QWORD *)(inited + 504) = v23;
  *(_BYTE *)(inited + 480) = v27;
  swift_bridgeObjectRetain();
  sub_244D9A678((uint64_t)&v34);
  sub_244D9A678((uint64_t)&v33);
  sub_244D9A678((uint64_t)&v32);
  sub_244D9A678((uint64_t)&v31);
  sub_244D9A678((uint64_t)&v30);
  sub_244D9A678((uint64_t)&v29);
  return sub_244DB2520(inited);
}

unint64_t sub_244DB1424(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t inited;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v41;
  __int128 v42;
  id v43;
  uint64_t v44;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244D70C60(v3 + 216, (uint64_t)&v43, &qword_257416D48);
  sub_244D70C60((uint64_t)&v43, (uint64_t)&v44, &qword_257416D48);
  if (v44 && ((*(_BYTE *)(v3 + 192) & 1) != 0 || (a3 & 1) != 0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_244E54980;
    *(_QWORD *)(inited + 32) = sub_244E4E31C();
    *(_QWORD *)(inited + 40) = v18;
    v19 = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 48) = a1;
    *(_QWORD *)(inited + 56) = a2;
    *(_QWORD *)(inited + 80) = sub_244E4E31C();
    *(_QWORD *)(inited + 88) = v20;
    v42 = *(_OWORD *)v3;
    v21 = v42;
    *(_QWORD *)(inited + 120) = v19;
    *(_OWORD *)(inited + 96) = v21;
    *(_QWORD *)(inited + 128) = sub_244E4E31C();
    *(_QWORD *)(inited + 136) = v22;
    sub_244DB214C(&v43);
    swift_bridgeObjectRetain();
    sub_244D9A678((uint64_t)&v42);
    v23 = sub_244E4D1F4();
    *(_QWORD *)(inited + 168) = v19;
    *(_QWORD *)(inited + 144) = v23;
    *(_QWORD *)(inited + 152) = v24;
    *(_QWORD *)(inited + 176) = sub_244E4E31C();
    *(_QWORD *)(inited + 184) = v25;
    v26 = sub_244E4D20C();
    *(_QWORD *)(inited + 216) = v19;
    *(_QWORD *)(inited + 192) = v26;
    *(_QWORD *)(inited + 200) = v27;
    *(_QWORD *)(inited + 224) = sub_244E4E31C();
    *(_QWORD *)(inited + 232) = v28;
    v29 = sub_244E4D218();
    *(_QWORD *)(inited + 264) = v19;
    *(_QWORD *)(inited + 240) = v29;
    *(_QWORD *)(inited + 248) = v30;
    *(_QWORD *)(inited + 272) = sub_244E4E31C();
    *(_QWORD *)(inited + 280) = v31;
    v32 = sub_244E4D1D0();
    *(_QWORD *)(inited + 312) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 288) = v32 & 1;
    *(_QWORD *)(inited + 320) = sub_244E4E31C();
    *(_QWORD *)(inited + 328) = v33;
    v34 = sub_244E4D200();
    *(_QWORD *)(inited + 360) = v19;
    *(_QWORD *)(inited + 336) = v34;
    *(_QWORD *)(inited + 344) = v35;
    *(_QWORD *)(inited + 368) = sub_244E4E31C();
    *(_QWORD *)(inited + 376) = v36;
    v37 = sub_244E4D1E8();
    *(_QWORD *)(inited + 408) = v19;
    *(_QWORD *)(inited + 384) = v37;
    *(_QWORD *)(inited + 392) = v38;
    v39 = sub_244DB2520(inited);
    sub_244DB2174(&v43);
  }
  else
  {
    if (qword_257414400 != -1)
      swift_once();
    v11 = __swift_project_value_buffer(v8, (uint64_t)qword_257419E00);
    sub_244D640E4(v11, (uint64_t)v10);
    v12 = sub_244E4DCD4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
    {
      sub_244D6412C((uint64_t)v10);
    }
    else
    {
      sub_244D6BA4C(v3);
      v14 = sub_244E4DCBC();
      v15 = sub_244E4E67C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v16 = 67109120;
        LODWORD(v42) = *(_BYTE *)(v4 + 192) & 1;
        sub_244E4E7E4();
        sub_244D7E9EC(v4);
        _os_log_impl(&dword_244D61000, v14, v15, "txnData.pinData is nil or pinRequired %{BOOL}d", v16, 8u);
        MEMORY[0x2495283BC](v16, -1, -1);

      }
      else
      {

        sub_244D7E9EC(v4);
      }
      (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    }
    return 0;
  }
  return v39;
}

uint64_t sub_244DB17A8(uint64_t a1, uint64_t a2)
{
  return sub_244DB1EB8(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_244DB17C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = *a2;
  v4 = *((unsigned __int8 *)a2 + 8);
  if (!*((_BYTE *)a1 + 8))
  {
    if (!*((_BYTE *)a2 + 8))
      return v2 == v3;
    return 0;
  }
  if (*((_BYTE *)a1 + 8) == 1)
  {
    if (v4 == 1)
      return v2 == v3;
    return 0;
  }
  if (v2)
  {
    if (v2 == 1)
    {
      if (v4 != 2 || v3 != 1)
        return 0;
    }
    else if (v4 != 2 || v3 != 2)
    {
      return 0;
    }
  }
  else if (v4 != 2 || v3 != 0)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_244DB1848(uint64_t a1, unsigned __int8 a2)
{
  if (!(a2 >> 6))
    return 10;
  if (a2 >> 6 == 1)
    return 16;
  return qword_244E54908[a1];
}

unint64_t sub_244DB1878()
{
  uint64_t v0;

  return sub_244DB0EDC(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

void sub_244DB1884()
{
  void *v0;
  char *v1;
  _BYTE __dst[344];

  sub_244DB1BD4(v0, __dst);
  v1 = (char *)sub_244DB18E0 + 4 * byte_244E54628[sub_244DB0354((uint64_t)__dst)];
  __asm { BR              X10 }
}

unint64_t sub_244DB18E0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  unsigned __int8 v3;
  _BYTE v5[344];
  _BYTE v6[344];
  _BYTE v7[338];

  memcpy(v5, v7, 0x152uLL);
  sub_244D70C60((uint64_t)v5, (uint64_t)v6, &qword_257416D40);
  v0 = sub_244DB1BE8((uint64_t)v6);
  v1 = nullsub_1(v6);
  if (v0 != 1)
    return 0xD000000000000016;
  v2 = *(_QWORD *)v1;
  v3 = *(_BYTE *)(v1 + 8);
  sub_244E4E88C();
  swift_bridgeObjectRelease();
  sub_244DB0EDC(v2, v3);
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  return 0xD000000000000018;
}

uint64_t sub_244DB1A9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244DB1ACC + 4 * byte_244E54633[a1]))(0x7974706D65, 0xE500000000000000);
}

uint64_t sub_244DB1ACC()
{
  return 0x6465766F72707061;
}

uint64_t sub_244DB1AE4()
{
  return 0x64656E696C636564;
}

uint64_t sub_244DB1AFC()
{
  return 0x6552656E696C6E6FLL;
}

uint64_t sub_244DB1B20()
{
  return 0x696C707041646E65;
}

uint64_t sub_244DB1B44()
{
  return 0x654E7463656C6573;
}

unint64_t sub_244DB1B60()
{
  return 0xD000000000000013;
}

uint64_t sub_244DB1B7C()
{
  return 0x6E69616741797274;
}

uint64_t sub_244DB1B94()
{
  return 16718;
}

void sub_244DB1BA0()
{
  void *v0;
  _BYTE __dst[344];

  sub_244DB1BD4(v0, __dst);
  sub_244DB1884();
}

void *sub_244DB1BD4(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x152uLL);
}

uint64_t sub_244DB1BE8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 337);
}

void sub_244DB1BF0(char *a1)
{
  sub_244D80280(*a1);
}

void sub_244DB1BFC()
{
  char *v0;

  sub_244DB0CF0(*v0);
}

void sub_244DB1C04()
{
  __asm { BR              X10 }
}

uint64_t sub_244DB1C3C()
{
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

void sub_244DB1CD4(uint64_t a1)
{
  char *v1;

  sub_244DB0DE8(a1, *v1);
}

uint64_t sub_244DB1CDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244DB2490();
  *a1 = result;
  return result;
}

uint64_t sub_244DB1D08()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_244DB1D34 + 4 * byte_244E54642[*v0]))();
}

void sub_244DB1D34(_QWORD *a1@<X8>)
{
  *a1 = 0x727574616E676953;
  a1[1] = 0xE900000000000065;
}

void sub_244DB1D54(_QWORD *a1@<X8>)
{
  *a1 = 0x4D5643444FLL;
  a1[1] = 0xE500000000000000;
}

void sub_244DB1D6C(_QWORD *a1@<X8>)
{
  *a1 = 0x5020656E696C6E4FLL;
  a1[1] = 0xEA00000000004E49;
}

void sub_244DB1D8C(char *a1@<X8>)
{
  strcpy(a1, "Not Applicable");
  a1[15] = -18;
}

void sub_244DB1DB4(_QWORD *a1@<X8>)
{
  *a1 = 0x7974706D45;
  a1[1] = 0xE500000000000000;
}

void sub_244DB1DCC(char *a1)
{
  sub_244D80458(*a1);
}

uint64_t sub_244DB1DD8()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_244E4EB80();
  sub_244D80ADC((uint64_t)v3, v1);
  return sub_244E4EBC8();
}

void sub_244DB1E1C(uint64_t a1)
{
  char *v1;

  sub_244D80ADC(a1, *v1);
}

uint64_t sub_244DB1E24()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_244E4EB80();
  sub_244D80ADC((uint64_t)v3, v1);
  return sub_244E4EBC8();
}

uint64_t sub_244DB1E64@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244DB24D8();
  *a1 = result;
  return result;
}

uint64_t sub_244DB1E90@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_244DB1A9C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_244DB1EB8(uint64_t a1, unsigned __int8 a2, uint64_t a3, unsigned __int8 a4)
{
  int v4;

  if (a2 >> 6)
  {
    if (a2 >> 6 != 1)
      return ((uint64_t (*)(void))((char *)&loc_244DB1F34 + 4 * byte_244E54648[a1]))();
    if ((a4 & 0xC0) == 0x40)
    {
      v4 = a4 & 0x3F;
      if ((a2 & 0x3F) != 0)
      {
        if ((a2 & 0x3F) == 1)
        {
          if (v4 == 1 && a1 == a3)
            return 1;
        }
        else if (a1)
        {
          if (a1 == 1)
          {
            if (v4 == 2 && a3 == 1)
              return 1;
          }
          else if (v4 == 2 && a3 == 2)
          {
            return 1;
          }
        }
        else if (v4 == 2 && !a3)
        {
          return 1;
        }
      }
      else if ((a4 & 0x3F) == 0 && a1 == a3)
      {
        return 1;
      }
    }
  }
  else if (a4 < 0x40u)
  {
    return a3 == a1;
  }
  return 0;
}

id *sub_244DB214C(id *a1)
{
  id v2;

  v2 = *a1;
  return a1;
}

id *sub_244DB2174(id *a1)
{

  return a1;
}

uint64_t getEnumTagSinglePayload for CardReadFailedReason(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CardReadFailedReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_244DB2228(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_244DB2240(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CardReadFailedReason()
{
  return &type metadata for CardReadFailedReason;
}

uint64_t storeEnumTagSinglePayload for TransactionData.OutcomeStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_244DB22B4 + 4 * byte_244E54659[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_244DB22E8 + 4 * byte_244E54654[v4]))();
}

uint64_t sub_244DB22E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DB22F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DB22F8);
  return result;
}

uint64_t sub_244DB2304(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DB230CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_244DB2310(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DB2318(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransactionData.OutcomeStatus()
{
  return &type metadata for TransactionData.OutcomeStatus;
}

uint64_t storeEnumTagSinglePayload for TransactionData.CvmType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_244DB2380 + 4 * byte_244E54663[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_244DB23B4 + 4 * byte_244E5465E[v4]))();
}

uint64_t sub_244DB23B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DB23BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DB23C4);
  return result;
}

uint64_t sub_244DB23D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DB23D8);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_244DB23DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DB23E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TransactionData.CvmType()
{
  return &type metadata for TransactionData.CvmType;
}

unint64_t sub_244DB2404()
{
  unint64_t result;

  result = qword_257416D58;
  if (!qword_257416D58)
  {
    result = MEMORY[0x2495282F0](&unk_244E54814, &type metadata for TransactionData.CvmType);
    atomic_store(result, (unint64_t *)&qword_257416D58);
  }
  return result;
}

unint64_t sub_244DB244C()
{
  unint64_t result;

  result = qword_257416D60;
  if (!qword_257416D60)
  {
    result = MEMORY[0x2495282F0](&unk_244E548B4, &type metadata for TransactionData.OutcomeStatus);
    atomic_store(result, (unint64_t *)&qword_257416D60);
  }
  return result;
}

uint64_t sub_244DB2490()
{
  unint64_t v0;

  v0 = sub_244E4E9C4();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_244DB24D8()
{
  unint64_t v0;

  v0 = sub_244E4E9C4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

unint64_t sub_244DB2520(uint64_t a1)
{
  return sub_244DB2670(a1, (uint64_t *)&unk_257418440, &qword_257416F40, (uint64_t (*)(uint64_t *, unint64_t))sub_244D6B058);
}

unint64_t sub_244DB253C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F48);
  v2 = (_QWORD *)sub_244E4E988();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    result = sub_244DC859C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244DB2654(uint64_t a1)
{
  return sub_244DB2670(a1, (uint64_t *)&unk_257418430, &qword_257416F18, (uint64_t (*)(uint64_t *, unint64_t))sub_244D6B058);
}

unint64_t sub_244DB2670(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (!*(_QWORD *)(a1 + 16))
  {
    v8 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = sub_244E4E988();
  v8 = (_QWORD *)v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  v10 = v7 + 64;
  v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_244D91E3C(v11, (uint64_t)&v20, a3);
    v12 = v20;
    v13 = v21;
    result = sub_244DC859C(v20, v21);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v8[6] + 16 * result);
    *v16 = v12;
    v16[1] = v13;
    result = a4(&v22, v8[7] + 32 * result);
    v17 = v8[2];
    v18 = __OFADD__(v17, 1);
    v19 = v17 + 1;
    if (v18)
      goto LABEL_11;
    v8[2] = v19;
    v11 += 48;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244DB27A8(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F10);
  v2 = (_QWORD *)sub_244E4E988();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_244DC859C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244DB28C8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F90);
  v2 = sub_244E4E988();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v21 = v2 + 64;
  swift_retain();
  v5 = (uint64_t *)(a1 + 136);
  while (1)
  {
    v22 = v4;
    v6 = *(v5 - 13);
    v7 = *(v5 - 12);
    v8 = *(v5 - 10);
    v9 = *(v5 - 8);
    v27 = *(v5 - 9);
    v28 = *(v5 - 11);
    v10 = *(v5 - 6);
    v11 = *(v5 - 4);
    v25 = *(v5 - 5);
    v26 = *(v5 - 7);
    v12 = *(v5 - 2);
    v13 = *v5;
    v23 = *(v5 - 1);
    v24 = *(v5 - 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_244DC859C(v6, v7);
    if ((v15 & 1) != 0)
      break;
    *(_QWORD *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v16 = (uint64_t *)(v3[6] + 16 * result);
    *v16 = v6;
    v16[1] = v7;
    v17 = (_QWORD *)(v3[7] + 96 * result);
    *v17 = v28;
    v17[1] = v8;
    v17[2] = v27;
    v17[3] = v9;
    v17[4] = v26;
    v17[5] = v10;
    v17[6] = v25;
    v17[7] = v11;
    v17[8] = v24;
    v17[9] = v12;
    v17[10] = v23;
    v17[11] = v13;
    v18 = v3[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_11;
    v5 += 14;
    v3[2] = v20;
    v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244DB2A7C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F50);
  v2 = sub_244E4E988();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_244D91E3C(v6, (uint64_t)v15, &qword_257416F58);
    result = sub_244DC8600((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_244D6B058(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244DB2BBC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F88);
  v2 = (_QWORD *)sub_244E4E988();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_244DC859C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244DB2CCC(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F38);
  v2 = (_QWORD *)sub_244E4E988();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 48);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 2);
    v6 = *((_QWORD *)v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    result = sub_244DC859C(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_BYTE *)(v2[7] + result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_244DB2DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_244E4E55C();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_244E4E550();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_244D66F54(a1, &qword_257415740);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_244E4E514();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_244DB2F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244DB2F60(a1, a2, a3, (uint64_t)&unk_2515DECD8, &qword_257416F30);
}

uint64_t sub_244DB2F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_244DB2F60(a1, a2, a3, (uint64_t)&unk_2515DED00, &qword_257416F70);
}

uint64_t sub_244DB2F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = sub_244E4E55C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_244E4E550();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_244D66F54(a1, &qword_257415740);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_244E4E514();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t sub_244DB30BC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_244DB30E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5[9] = a4;
  v5[10] = a5;
  v6 = sub_244E4E1B4();
  v5[11] = v6;
  v5[12] = *(_QWORD *)(v6 - 8);
  v5[13] = swift_task_alloc();
  v7 = sub_244E4E1E4();
  v5[14] = v7;
  v5[15] = *(_QWORD *)(v7 - 8);
  v5[16] = swift_task_alloc();
  v8 = sub_244E4E1A8();
  v5[17] = v8;
  v5[18] = *(_QWORD *)(v8 - 8);
  v5[19] = swift_task_alloc();
  v9 = sub_244E4E1FC();
  v5[20] = v9;
  v5[21] = *(_QWORD *)(v9 - 8);
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v10 = sub_244E4E1C0();
  v5[24] = v10;
  v5[25] = *(_QWORD *)(v10 - 8);
  v5[26] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DB31F8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t i;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  _QWORD *v10;
  void *v11;
  unsigned int v13;
  void (*v14)(uint64_t, _QWORD, uint64_t);
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0[25];
  v18 = v0[18];
  v19 = v0[21];
  v16 = v0[12];
  v17 = v0[15];
  sub_244D9003C();
  v15 = *MEMORY[0x24BEE5490];
  v14 = *(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104);
  v13 = *MEMORY[0x24BEE5420];
  for (i = 1; i != 11; ++i)
  {
    v3 = v0[26];
    v4 = v0[24];
    v5 = v0[22];
    v6 = (_QWORD *)v0[19];
    v20 = v0[20];
    v7 = v0[17];
    v22 = v0[23];
    v23 = v0[16];
    v25 = v0[13];
    v8 = v0[10];
    v26 = v0[11];
    v27 = v0[14];
    v21 = v0[9];
    v14(v3, v15, v4);
    v24 = (void *)sub_244E4E6E8();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v3, v4);
    sub_244E4E1F0();
    *v6 = 1;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v18 + 104))(v6, v13, v7);
    MEMORY[0x2495274D4](v5, v6);
    (*(void (**)(_QWORD *, uint64_t))(v18 + 8))(v6, v7);
    v9 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v9(v5, v20);
    v10 = (_QWORD *)swift_allocObject();
    v10[2] = v21;
    v10[3] = v8;
    v10[4] = i;
    v0[6] = sub_244DB4FB4;
    v0[7] = v10;
    v0[2] = MEMORY[0x24BDAC760];
    v0[3] = 1107296256;
    v0[4] = sub_244DB30BC;
    v0[5] = &block_descriptor_2;
    v11 = _Block_copy(v0 + 2);
    swift_retain();
    sub_244E4E1CC();
    v0[8] = MEMORY[0x24BEE4AF8];
    sub_244DB5010();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416570);
    sub_244DAF354((unint64_t *)&qword_257418D30, &qword_257416570, MEMORY[0x24BEE12C8]);
    sub_244E4E838();
    MEMORY[0x249527948](v22, v23, v25, v11);
    _Block_release(v11);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v23, v27);
    v9(v22, v20);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(void))v0[1])();
}

void sub_244DB3508(uint64_t a1, int a2)
{
  __asm { BR              X10 }
}

uint64_t sub_244DB3534(uint64_t a1, unsigned __int8 a2)
{
  sub_244DB0EDC(a1, a2);
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  return 0x6E6964616F4C6E6FLL;
}

uint64_t sub_244DB3624(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  void *v15;
  id v16;
  __int128 v18;
  __int128 v19;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  swift_retain();
  sub_244DB4E08(v10);
  v11 = sub_244E4E55C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 1, 1, v11);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0;
  *(_QWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 32) = v3;
  v13 = *a1;
  v14 = a1[1];
  *(_OWORD *)(v12 + 40) = *a1;
  *(_OWORD *)(v12 + 56) = v14;
  *(_OWORD *)(v12 + 72) = a1[2];
  *(_QWORD *)(v12 + 88) = a2;
  *(_QWORD *)(v12 + 96) = a3;
  v18 = v14;
  v19 = v13;
  v15 = (void *)*((_QWORD *)a1 + 5);
  swift_retain();
  swift_retain();
  sub_244D9A678((uint64_t)&v19);
  sub_244D9A678((uint64_t)&v18);
  v16 = v15;
  sub_244E378C0((uint64_t)v9, (uint64_t)&unk_257416F80, v12);
  return swift_release();
}

uint64_t sub_244DB375C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;

  v7[1770] = a7;
  v7[1769] = a6;
  v7[1768] = a5;
  v7[1767] = a4;
  v8 = sub_244E4E91C();
  v7[1771] = v8;
  v7[1772] = *(_QWORD *)(v8 - 8);
  v7[1773] = swift_task_alloc();
  v7[1774] = swift_task_alloc();
  v7[1775] = swift_task_alloc();
  v7[1776] = swift_task_alloc();
  v7[1777] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7[1778] = swift_task_alloc();
  v7[1779] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DB3828()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v22;

  *(_QWORD *)(v0 + 14240) = *(_QWORD *)(*(_QWORD *)(v0 + 14144) + 40);
  v1 = (void *)sub_244E4CC9C();
  v2 = sub_244DB52F0((uint64_t)v1);
  v4 = v3;

  *(_QWORD *)(v0 + 14248) = v2;
  *(_BYTE *)(v0 + 354) = v4;
  if (qword_257414400 != -1)
    swift_once();
  v5 = *(_QWORD *)(v0 + 14232);
  v6 = __swift_project_value_buffer(*(_QWORD *)(v0 + 14216), (uint64_t)qword_257419E00);
  *(_QWORD *)(v0 + 14256) = v6;
  sub_244D91E3C(v6, v5, &qword_2574145A0);
  v7 = sub_244E4DCD4();
  *(_QWORD *)(v0 + 14264) = v7;
  v8 = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v0 + 14272) = v8;
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  *(_QWORD *)(v0 + 14280) = v9;
  if (v9(v5, 1, v7) == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 14232), &qword_2574145A0);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E688();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v22 = v13;
      *(_DWORD *)v12 = 136315138;
      sub_244DB3508(v2, v4);
      *(_QWORD *)(v0 + 14128) = sub_244D9A70C(v14, v15, &v22);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v10, v11, "mockAction - %s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v13, -1, -1);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(_QWORD, uint64_t))(v8 + 8))(*(_QWORD *)(v0 + 14232), v7);
  }
  v16 = sub_244E4EBF8();
  v18 = v17;
  sub_244E4E910();
  v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2574199C0 + dword_2574199C0);
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 14288) = v19;
  *v19 = v0;
  v19[1] = sub_244DB3AB8;
  return v21(v16, v18, 0, 0, 1);
}

uint64_t sub_244DB3AB8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 14208);
  v4 = *(_QWORD *)(*v1 + 14176);
  v5 = *(_QWORD *)(*v1 + 14168);
  *(_QWORD *)(*v1 + 14296) = v0;
  swift_task_dealloc();
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v2 + 14304) = v6;
  v6(v3, v5);
  return swift_task_switch();
}

uint64_t sub_244DB3B4C()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t (*v8)(void);
  char v9;
  id v10;
  void *v11;
  uint64_t v12;
  unsigned int (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v24;
  void (*v25)(uint64_t);
  uint64_t v26;
  void (*v27)(uint64_t);
  uint64_t v28;
  void (*v29)(uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t);
  uint64_t v32;
  void (*v33)(uint64_t);
  uint64_t v34;
  uint64_t (*v35)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(unsigned __int8 *)(v0 + 354);
  v2 = (v1 >> 4) & 3;
  if (v2 - 1 < 2)
  {
LABEL_5:
    v7 = *(void (**)(uint64_t))(v0 + 14152);
    sub_244DB56F0(v0 + 4144);
    sub_244DB1BD4((void *)(v0 + 4144), (void *)(v0 + 1736));
    v7(v0 + 1736);
    v8 = (uint64_t (*)(void))sub_244E4D86C();
    v9 = v8();
    swift_release();
    if ((v9 & 1) != 0)
    {
      v10 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      v11 = (void *)sub_244E4E2F8();
      v12 = (uint64_t)objc_msgSend(v10, sel_integerForKey_, v11);

    }
    else
    {
      v12 = 0;
    }
    v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 14280);
    v14 = *(_QWORD *)(v0 + 14264);
    v15 = *(_QWORD *)(v0 + 14224);
    sub_244D91E3C(*(_QWORD *)(v0 + 14256), v15, &qword_2574145A0);
    if (v13(v15, 1, v14) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 14224), &qword_2574145A0);
    }
    else
    {
      v16 = sub_244E4DCBC();
      v17 = sub_244E4E688();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v18 = 134217984;
        *(_QWORD *)(v0 + 14120) = v12;
        sub_244E4E7E4();
        _os_log_impl(&dword_244D61000, v16, v17, "mockTapDelay %ld", v18, 0xCu);
        MEMORY[0x2495283BC](v18, -1, -1);
      }
      v19 = *(_QWORD *)(v0 + 14272);
      v20 = *(_QWORD *)(v0 + 14264);
      v21 = *(_QWORD *)(v0 + 14224);

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v20);
    }
    sub_244E4E910();
    v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2574199C0 + dword_2574199C0);
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 14312) = v22;
    *v22 = v0;
    v22[1] = sub_244DB42B0;
    return v35(1000000000000000000 * v12, ((v12 >> 63) & 0xF21F494C589C0000)+ (((unint64_t)v12 * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64), 0, 0, 1);
  }
  if (v2)
  {
    if (*(_QWORD *)(v0 + 14248) & 0xFFFFFFFFFFFFFFFELL | v1 ^ 0x30)
    {
      v24 = *(_QWORD **)(v0 + 14136);
      switch(v24[4])
      {
        case 0:
          v25 = *(void (**)(uint64_t))(v0 + 14152);
          v26 = v24[2];
          v24[2] = 0;
          v24[3] = 0;
          v24[4] = 1;
          sub_244DB4E08(v26);
          *(_QWORD *)(v0 + 13088) = 0;
          *(_BYTE *)(v0 + 13096) = 66;
          sub_244DB4DB4(v0 + 13088);
          sub_244DB4DC0(v0 + 13088, v0 + 12744);
          memcpy((void *)(v0 + 12400), (const void *)(v0 + 12744), 0x152uLL);
          nullsub_1(v0 + 12400);
          sub_244DB1BD4((void *)(v0 + 12400), (void *)(v0 + 1392));
          v25(v0 + 1392);
          goto LABEL_22;
        case 1:
          v27 = *(void (**)(uint64_t))(v0 + 14152);
          v28 = v24[2];
          v24[2] = 0;
          v24[3] = 0;
          v24[4] = 2;
          sub_244DB4E08(v28);
          *(_QWORD *)(v0 + 12056) = 4;
          *(_BYTE *)(v0 + 12064) = 0x80;
          sub_244DB4DB4(v0 + 12056);
          sub_244DB4DC0(v0 + 12056, v0 + 11712);
          memcpy((void *)(v0 + 11368), (const void *)(v0 + 11712), 0x152uLL);
          nullsub_1(v0 + 11368);
          sub_244DB1BD4((void *)(v0 + 11368), (void *)(v0 + 1048));
          v27(v0 + 1048);
          goto LABEL_22;
        case 2:
          v29 = *(void (**)(uint64_t))(v0 + 14152);
          v30 = v24[2];
          v24[2] = 0;
          v24[3] = 0;
          v24[4] = 3;
          sub_244DB4E08(v30);
          *(_QWORD *)(v0 + 11024) = 4;
          *(_BYTE *)(v0 + 11032) = 0x80;
          sub_244DB4DB4(v0 + 11024);
          sub_244DB4DC0(v0 + 11024, v0 + 10680);
          memcpy((void *)(v0 + 10336), (const void *)(v0 + 10680), 0x152uLL);
          nullsub_1(v0 + 10336);
          sub_244DB1BD4((void *)(v0 + 10336), (void *)(v0 + 704));
          v29(v0 + 704);
          goto LABEL_22;
        case 3:
          v31 = *(void (**)(uint64_t))(v0 + 14152);
          v32 = v24[2];
          v24[2] = 0;
          v24[3] = 0;
          v24[4] = 4;
          sub_244DB4E08(v32);
          *(_QWORD *)(v0 + 9992) = 4;
          *(_BYTE *)(v0 + 10000) = 0x80;
          sub_244DB4DB4(v0 + 9992);
          sub_244DB4DC0(v0 + 9992, v0 + 9648);
          memcpy((void *)(v0 + 9304), (const void *)(v0 + 9648), 0x152uLL);
          nullsub_1(v0 + 9304);
          sub_244DB1BD4((void *)(v0 + 9304), (void *)(v0 + 360));
          v31(v0 + 360);
          goto LABEL_22;
        case 4:
          v33 = *(void (**)(uint64_t))(v0 + 14152);
          v34 = v24[2];
          v24[2] = 0;
          v24[3] = 0;
          v24[4] = 5;
          sub_244DB4E08(v34);
          *(_QWORD *)(v0 + 8960) = 666;
          *(_BYTE *)(v0 + 8968) = 64;
          sub_244DB4DB4(v0 + 8960);
          sub_244DB4DC0(v0 + 8960, v0 + 8616);
          memcpy((void *)(v0 + 8272), (const void *)(v0 + 8616), 0x152uLL);
          nullsub_1(v0 + 8272);
          sub_244DB1BD4((void *)(v0 + 8272), (void *)(v0 + 16));
          v33(v0 + 16);
          goto LABEL_22;
        default:
          v24[4] = 0;
          goto LABEL_5;
      }
    }
    goto LABEL_5;
  }
  v3 = *(_QWORD *)(v0 + 14248);
  v4 = *(void (**)(uint64_t))(v0 + 14152);
  v5 = *(_QWORD *)(v0 + 14136);
  v6 = *(_QWORD *)(v5 + 16);
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)(v5 + 24) = 0;
  sub_244DB4E08(v6);
  *(_QWORD *)(v0 + 3800) = v3;
  *(_BYTE *)(v0 + 3808) = v1;
  sub_244DB4DB4(v0 + 3800);
  sub_244DB4DC0(v0 + 3800, v0 + 7928);
  memcpy((void *)(v0 + 13432), (const void *)(v0 + 7928), 0x152uLL);
  nullsub_1(v0 + 13432);
  sub_244DB1BD4((void *)(v0 + 13432), (void *)(v0 + 3456));
  v4(v0 + 3456);
LABEL_22:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB4230()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB42B0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 14304);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 14200);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 14168);
  *(_QWORD *)(*(_QWORD *)v1 + 14320) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB4334()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  void (*v3)(uint64_t);
  _QWORD *v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  _QWORD *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;

  v1 = *(char *)(v0 + 354);
  v2 = (v1 >> 4) & 3;
  if (v2 == 1)
  {
    v7 = v1 & 0xCF;
    v8 = *(_QWORD *)(v0 + 14248);
    if ((v1 & 0x80000000) != 0 && (v1 & 0xCF) == 0x80 && v8 == 6)
    {
      sub_244E4E910();
      v14 = (char *)&dword_2574199C0 + dword_2574199C0;
      v10 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 14344) = v10;
      *v10 = v0;
      v10[1] = sub_244DB48C8;
      v5 = 5000000000000000000;
      return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v14)(v5, 0, 0, 0, 1);
    }
    v11 = *(void (**)(uint64_t))(v0 + 14152);
    v12 = *(_QWORD *)(v0 + 14136);
    v13 = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(v12 + 16) = 0;
    *(_QWORD *)(v12 + 24) = 0;
    sub_244DB4E08(v13);
    *(_QWORD *)(v0 + 7584) = v8;
    *(_BYTE *)(v0 + 7592) = v7;
    sub_244DB4DB4(v0 + 7584);
    sub_244DB4DC0(v0 + 7584, v0 + 7240);
    memcpy((void *)(v0 + 6896), (const void *)(v0 + 7240), 0x152uLL);
    nullsub_1(v0 + 6896);
    sub_244DB1BD4((void *)(v0 + 6896), (void *)(v0 + 2080));
    v11(v0 + 2080);
  }
  else if (v2 == 2 || *(_QWORD *)(v0 + 14248) | *(unsigned __int8 *)(v0 + 354) ^ 0x30)
  {
    v3 = *(void (**)(uint64_t))(v0 + 14152);
    sub_244DB572C(v0 + 4488);
    sub_244DB1BD4((void *)(v0 + 4488), (void *)(v0 + 2424));
    v3(v0 + 2424);
    sub_244E4E910();
    v14 = (char *)&dword_2574199C0 + dword_2574199C0;
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 14328) = v4;
    *v4 = v0;
    v4[1] = sub_244DB4604;
    v5 = 2000000000000000000;
    return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v14)(v5, 0, 0, 0, 1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB4584()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB4604()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 14304);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 14192);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 14168);
  *(_QWORD *)(*(_QWORD *)v1 + 14336) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB4688()
{
  uint64_t v0;
  char v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v1 = *(_BYTE *)(v0 + 354);
  v2 = *(void (**)(uint64_t))(v0 + 14152);
  v3 = *(_QWORD *)(v0 + 14136);
  if ((v1 & 0x30) == 0x20)
  {
    v4 = *(_QWORD *)(v0 + 14248);
    v5 = *(_QWORD *)(v3 + 16);
    v6 = v1 & 0xCF;
    *(_QWORD *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = 0;
    sub_244DB4E08(v5);
    *(_QWORD *)(v0 + 6552) = v4;
    *(_BYTE *)(v0 + 6560) = v6;
    sub_244DB4DB4(v0 + 6552);
    sub_244DB4DC0(v0 + 6552, v0 + 6208);
    memcpy((void *)(v0 + 5864), (const void *)(v0 + 6208), 0x152uLL);
    nullsub_1(v0 + 5864);
    sub_244DB1BD4((void *)(v0 + 5864), (void *)(v0 + 3112));
    v2(v0 + 3112);
  }
  else
  {
    sub_244DB5768(v0 + 13776);
    memcpy((void *)(v0 + 5520), (const void *)(v0 + 13776), 0x151uLL);
    sub_244DB5C4C(v0 + 5520);
    sub_244DB4DC0(v0 + 5520, v0 + 5176);
    memcpy((void *)(v0 + 4832), (const void *)(v0 + 5176), 0x152uLL);
    nullsub_1(v0 + 4832);
    sub_244DB1BD4((void *)(v0 + 4832), (void *)(v0 + 2768));
    v2(v0 + 2768);
    sub_244D7E9EC(v0 + 13776);
    v7 = *(_QWORD *)(v3 + 16);
    *(_QWORD *)(v3 + 16) = 0;
    *(_QWORD *)(v3 + 24) = 0;
    sub_244DB4E08(v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB4848()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB48C8()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 14304);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 14184);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 14168);
  *(_QWORD *)(*(_QWORD *)v1 + 14352) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB494C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;
  char v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 14248);
  v2 = *(void (**)(uint64_t))(v0 + 14152);
  v3 = *(_QWORD *)(v0 + 14136);
  v4 = *(_BYTE *)(v0 + 354) & 0xCF;
  v5 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0;
  sub_244DB4E08(v5);
  *(_QWORD *)(v0 + 7584) = v1;
  *(_BYTE *)(v0 + 7592) = v4;
  sub_244DB4DB4(v0 + 7584);
  sub_244DB4DC0(v0 + 7584, v0 + 7240);
  memcpy((void *)(v0 + 6896), (const void *)(v0 + 7240), 0x152uLL);
  nullsub_1(v0 + 6896);
  sub_244DB1BD4((void *)(v0 + 6896), (void *)(v0 + 2080));
  v2(v0 + 2080);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB4A60()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB4AE0()
{
  uint64_t v0;

  sub_244DB4E08(*(_QWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SimulatedCardReader()
{
  return objc_opt_self();
}

uint64_t sub_244DB4B24()
{
  return 0x302E31206D6973;
}

uint64_t sub_244DB4B3C()
{
  return 0x65732D6D6973;
}

double sub_244DB4B50@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_OWORD *)a1 = xmmword_244E549F0;
  *(_OWORD *)(a1 + 16) = xmmword_244E54A00;
  *(_WORD *)(a1 + 32) = 257;
  *(_BYTE *)(a1 + 34) = 1;
  *(_DWORD *)(a1 + 35) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 40) = xmmword_244E50A40;
  return result;
}

uint64_t sub_244DB4B88()
{
  unint64_t v0;

  v0 = sub_244DB27A8(MEMORY[0x24BEE4AF8]);
  return sub_244DC895C(v0);
}

uint64_t sub_244DB4BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[2] = a4;
  v6[3] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  v7 = swift_task_alloc();
  v8 = *v5;
  v6[4] = v7;
  v6[5] = v8;
  return swift_task_switch();
}

uint64_t sub_244DB4C18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(*(_QWORD *)(v0 + 40) + 32) = 0;
  v4 = sub_244E4E55C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v1, 1, 1, v4);
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v3;
  v5[5] = v2;
  swift_retain();
  sub_244DB2DDC(v1, (uint64_t)&unk_257416EF8, (uint64_t)v5);
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD, unint64_t))(v0 + 8))(0, 0xE000000000000000);
}

uint64_t sub_244DB4CCC()
{
  return 0;
}

uint64_t sub_244DB4CD8(__int128 *a1, uint64_t a2, uint64_t a3)
{
  return sub_244DB3624(a1, a2, a3);
}

BOOL sub_244DB4CF8(unsigned __int8 a1)
{
  uint64_t v1;
  void (*v2)(_BYTE *);
  uint64_t v4;
  char v5;
  _BYTE __src[344];
  _BYTE __dst[344];
  _BYTE v8[344];

  v2 = *(void (**)(_BYTE *))(*(_QWORD *)v1 + 16);
  if (v2)
  {
    v4 = a1;
    v5 = 0;
    sub_244DB4DB4((uint64_t)&v4);
    sub_244DB4DC0((uint64_t)&v4, (uint64_t)__src);
    memcpy(__dst, __src, 0x152uLL);
    nullsub_1(__dst);
    sub_244DB1BD4(__dst, v8);
    swift_retain();
    v2(v8);
    sub_244DB4E08((uint64_t)v2);
  }
  return v2 != 0;
}

unint64_t sub_244DB4D98()
{
  return 0xD000000000000013;
}

uint64_t sub_244DB4DB4(uint64_t result)
{
  *(_BYTE *)(result + 337) = 1;
  return result;
}

uint64_t sub_244DB4DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416D40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_244DB4E08(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_244DB4E18()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244DB4E44(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244D70150;
  return sub_244DB30E8(a1, v4, v5, v7, v6);
}

uint64_t sub_244DB4EBC(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_244DB5C54;
  return v6(a1);
}

uint64_t sub_244DB4F20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244D71068;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257416F00 + dword_257416F00))(a1, v4);
}

uint64_t sub_244DB4F90()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244DB4FB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 32);
  result = 10 * v1;
  if ((unsigned __int128)(v1 * (__int128)10) >> 64 == (10 * v1) >> 63)
    return (*(uint64_t (**)(void))(v0 + 16))();
  __break(1u);
  return result;
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

unint64_t sub_244DB5010()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257418D20;
  if (!qword_257418D20)
  {
    v1 = sub_244E4E1B4();
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_257418D20);
  }
  return result;
}

uint64_t sub_244DB5058(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t);

  *(_QWORD *)(v2 + 16) = a1;
  v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v3;
  *v3 = v2;
  v3[1] = sub_244DB50C0;
  return v5(v2 + 32);
}

uint64_t sub_244DB50C0()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v4;

  v1 = *v0;
  v2 = *(_BYTE **)(*v0 + 16);
  v4 = *v0;
  swift_task_dealloc();
  *v2 = *(_BYTE *)(v1 + 32);
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_244DB5110()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244DB5134(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244D71068;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257416F20 + dword_257416F20))(a1, v4);
}

uint64_t sub_244DB51A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_244D71068;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_257416F60 + dword_257416F60))(a1, v4);
}

uint64_t sub_244DB5214()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_244DB5260(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (uint64_t)(v1 + 5);
  v9 = v1[11];
  v8 = v1[12];
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_244D70150;
  return sub_244DB375C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_244DB52F0(uint64_t a1)
{
  id v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  BOOL v10;
  uint64_t (*v11)(void);
  char v12;
  char v13;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
  objc_msgSend(v2, sel_setGeneratesDecimalNumbers_, 1);
  objc_msgSend(v2, sel_setMinimumFractionDigits_, 2);
  objc_msgSend(v2, sel_setMaximumFractionDigits_, 2);
  v3 = objc_msgSend(v2, sel_stringFromNumber_, a1);
  if (!v3)
  {

    return 1;
  }
  v4 = v3;
  v5 = sub_244E4E31C();
  v7 = v6;

  v8 = v5 == 0x31302E3833 && v7 == 0xE500000000000000;
  if (v8 || (sub_244E4EAC0() & 1) != 0)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  v10 = v5 == 0x32302E3833 && v7 == 0xE500000000000000;
  if (v10 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 2;
  }
  if (v5 == 0x33302E3833 && v7 == 0xE500000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 10;
  }
  if (v5 == 0x35302E3833 && v7 == 0xE500000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 3;
  }
  if (v5 == 0x36302E3833 && v7 == 0xE500000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 6;
  }
  if (v5 == 0x34302E3733 && v7 == 0xE500000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 8;
  }
  if (v5 == 0x35302E3733 && v7 == 0xE500000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();

    return 7;
  }
  v11 = (uint64_t (*)(void))sub_244E4D86C();
  v12 = v11();
  swift_release();
  if ((v12 & 1) == 0)
  {

    swift_bridgeObjectRelease();
    return 1;
  }
  if (v5 == 0x31302E3633 && v7 == 0xE500000000000000)
  {

    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v13 = sub_244E4EAC0();

    swift_bridgeObjectRelease();
    if ((v13 & 1) != 0)
      return 2;
    else
      return 1;
  }
}

double sub_244DB56F0(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -256;
  return result;
}

double sub_244DB572C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -512;
  return result;
}

uint64_t sub_244DB5768@<X0>(uint64_t a1@<X8>)
{
  uint64_t (*v2)(void);
  char v3;
  id v4;
  void *v5;
  unsigned __int8 v6;
  uint64_t (*v7)(void);
  char v8;
  id v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;

  v2 = (uint64_t (*)(void))sub_244E4D86C();
  v3 = v2();
  swift_release();
  if ((v3 & 1) != 0)
  {
    v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v5 = (void *)sub_244E4E2F8();
    v6 = objc_msgSend(v4, sel_BOOLForKey_, v5);

  }
  else
  {
    v6 = 0;
  }
  v7 = (uint64_t (*)(void))sub_244E4D86C();
  v8 = v7();
  swift_release();
  if ((v8 & 1) != 0
    && (v9 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v10 = (void *)sub_244E4E2F8(),
        v11 = objc_msgSend(v9, sel_stringForKey_, v10),
        v9,
        v10,
        v11))
  {
    v12 = sub_244E4E31C();
    v14 = v13;

  }
  else
  {
    v12 = 0;
    v14 = 0xE000000000000000;
  }
  v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0)
    v15 = v12 & 0xFFFFFFFFFFFFLL;
  v62 = v6;
  if (v15)
  {
    v51 = v12;
  }
  else
  {
    swift_bridgeObjectRelease();
    v51 = 0;
    v14 = 0xE000000000000000;
  }
  v16 = sub_244E4CC84();
  v60 = v17;
  v61 = v16;
  v18 = sub_244DAB8E0((uint64_t)&unk_2515DA490);
  v20 = v19;
  v21 = sub_244E4C318();
  v58 = v22;
  v59 = v21;
  sub_244D651AC(v18, v20);
  v23 = sub_244DA8EA8(0x617461642D6D6973, 0xE800000000000000);
  v25 = v24;
  v26 = sub_244E4C318();
  v56 = v27;
  v57 = v26;
  sub_244D651AC(v23, v25);
  v28 = sub_244DA8EA8(0x617461642D6D6973, 0xE800000000000000);
  v30 = v29;
  v31 = sub_244E4C318();
  v54 = v32;
  v55 = v31;
  sub_244D651AC(v28, v30);
  v33 = sub_244DA8EA8(0x6463672D6D6973, 0xE700000000000000);
  v35 = v34;
  v36 = sub_244E4C318();
  v52 = v37;
  v53 = v36;
  sub_244D651AC(v33, v35);
  v38 = sub_244DA8EA8(0x657474612D6D6973, 0xEA00000000007473);
  v40 = v39;
  v41 = sub_244E4C318();
  v43 = v42;
  sub_244D651AC(v38, v40);
  v44 = sub_244DA8EA8(0x647361632D6D6973, 0xE800000000000000);
  v46 = v45;
  sub_244DAB384(v44, v45);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416CB8);
  sub_244DAF354((unint64_t *)&qword_257416CC0, &qword_257416CB8, MEMORY[0x24BEE12B0]);
  v47 = sub_244E4E2D4();
  v49 = v48;
  swift_bridgeObjectRelease();
  result = sub_244D651AC(v44, v46);
  *(_QWORD *)a1 = v61;
  *(_QWORD *)(a1 + 8) = v60;
  *(_QWORD *)(a1 + 16) = 1634953558;
  *(_QWORD *)(a1 + 24) = 0xE400000000000000;
  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v59;
  *(_QWORD *)(a1 + 48) = v58;
  *(_BYTE *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = v57;
  *(_QWORD *)(a1 + 72) = v56;
  *(_QWORD *)(a1 + 80) = v55;
  *(_QWORD *)(a1 + 88) = v54;
  *(_QWORD *)(a1 + 96) = v53;
  *(_QWORD *)(a1 + 104) = v52;
  *(_QWORD *)(a1 + 112) = v41;
  *(_QWORD *)(a1 + 120) = v43;
  *(_QWORD *)(a1 + 128) = v47;
  *(_QWORD *)(a1 + 136) = v49;
  *(_QWORD *)(a1 + 144) = 0x6B656B2D6D6973;
  *(_QWORD *)(a1 + 152) = 0xE700000000000000;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0xE000000000000000;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0xE000000000000000;
  *(_BYTE *)(a1 + 192) = v62;
  *(_DWORD *)(a1 + 193) = 65793;
  strcpy((char *)(a1 + 200), "000000000000");
  *(_BYTE *)(a1 + 213) = 0;
  *(_WORD *)(a1 + 214) = -5120;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_BYTE *)(a1 + 232) = -4;
  *(_QWORD *)(a1 + 240) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 248) = v51;
  *(_QWORD *)(a1 + 256) = v14;
  *(_BYTE *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0x676E69662D6D6973;
  *(_QWORD *)(a1 + 280) = 0xEF746E6972707265;
  *(_QWORD *)(a1 + 288) = 0;
  *(_BYTE *)(a1 + 296) = 1;
  *(_QWORD *)(a1 + 304) = 0;
  *(_BYTE *)(a1 + 312) = 1;
  *(_QWORD *)(a1 + 320) = 0x417961702D6D6973;
  *(_QWORD *)(a1 + 328) = 0xEA00000000007070;
  *(_BYTE *)(a1 + 336) = 0;
  return result;
}

uint64_t sub_244DB5C4C(uint64_t result)
{
  *(_BYTE *)(result + 337) = 0;
  return result;
}

uint64_t sub_244DB5C60(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 64) = v5;
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = a4;
  *(_BYTE *)(v6 + 120) = a3;
  *(_QWORD *)(v6 + 32) = a1;
  v7 = sub_244E4C714();
  *(_QWORD *)(v6 + 72) = v7;
  *(_QWORD *)(v6 + 80) = *(_QWORD *)(v7 - 8);
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DB5CCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  __int128 v11;

  v2 = *(_QWORD *)(v0 + 80);
  v1 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v5 = *(_BYTE *)(v0 + 120);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  v11 = *(_OWORD *)(v0 + 48);
  sub_244E4C5A0();
  sub_244E4C6C0();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v8 = swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v8;
  *(_OWORD *)(v8 + 16) = v11;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v7;
  *(_QWORD *)(v8 + 48) = v6;
  *(_BYTE *)(v8 + 56) = v5;
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416D50);
  *v9 = v0;
  v9[1] = sub_244DB5DD4;
  return sub_244E4EAD8();
}

uint64_t sub_244DB5DD4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 112) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DB5E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_244DB5E80()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB5EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;

  v21 = a7;
  v19 = a5;
  v20 = a6;
  v10 = sub_244E4C714();
  MEMORY[0x24BDAC7A8](v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417198);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v18 = a1;
  v15(v14, a1, v11);
  type metadata accessor for SPRInstallDelegate();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v16 + OBJC_IVAR____TtC21ProximityReaderDaemon18SPRInstallDelegate_continuation, v14, v11);
  swift_retain();
  sub_244D94C98(v19, v20, v21, v16);
  return swift_release();
}

uint64_t type metadata accessor for SPRConfigTask()
{
  return objc_opt_self();
}

uint64_t sub_244DB610C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD v18[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244E4C714();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C5A0();
  sub_244E4C6A8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (qword_257414400 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
  sub_244D640E4(v11, (uint64_t)v6);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v14 = sub_244E4DCBC();
    v15 = sub_244E4E688();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_244D61000, v14, v15, "Kernel installed successfully", v16, 2u);
      MEMORY[0x2495283BC](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
  }
  v18[0] = a1;
  v18[1] = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417198);
  return sub_244E4E52C();
}

uint64_t sub_244DB6310(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char **p_type;
  id v11;
  NSObject *v12;
  int v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  int v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  p_type = (char **)(&stru_2515E5FF0 + 16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v11 = a1;
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled(v12, (os_log_type_t)v13))
    {
      v34 = v13;
      v35 = a1;
      v36 = v2;
      v14 = swift_slowAlloc();
      v33 = swift_slowAlloc();
      v38 = v33;
      *(_DWORD *)v14 = 136315394;
      v15 = objc_msgSend(v11, sel_kernelsInstalled);
      v16 = MEMORY[0x24BEE0D00];
      v17 = sub_244E4E4CC();

      v18 = MEMORY[0x249527774](v17, v16);
      v20 = v19;
      swift_bridgeObjectRelease();
      v37 = sub_244D9A70C(v18, v20, &v38);
      sub_244E4E7E4();

      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      v21 = objc_msgSend(v11, sel_countryCode);
      if (v21)
      {
        v22 = v21;
        v23 = sub_244E4E31C();
        v25 = v24;

      }
      else
      {
        v25 = 0xE500000000000000;
        v23 = 0x7974706D65;
      }
      v37 = sub_244D9A70C(v23, v25, &v38);
      sub_244E4E7E4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v12, (os_log_type_t)v34, "installData - kernelsInstalled: %s, countryCode: %s", (uint8_t *)v14, 0x16u);
      v26 = v33;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v26, -1, -1);
      MEMORY[0x2495283BC](v14, -1, -1);

      a1 = v35;
      p_type = &stru_2515E5FF0.type;
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v27 = objc_msgSend(a1, p_type[397]);
  if (v27)
  {
    v28 = v27;
    v29 = sub_244E4E31C();
    v31 = v30;

  }
  else
  {
    v29 = 0;
    v31 = 0;
  }
  sub_244DB610C(v29, v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DB66BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  id v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244E4C714();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C5A0();
  sub_244E4C6A8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (qword_257414400 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
  sub_244D640E4(v11, (uint64_t)v6);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v6, 1, v12) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v14 = a1;
    v15 = a1;
    v16 = sub_244E4DCBC();
    v17 = sub_244E4E67C();
    if (os_log_type_enabled(v16, v17))
    {
      v18 = (uint8_t *)swift_slowAlloc();
      v27 = (_QWORD *)swift_slowAlloc();
      v28 = v2;
      *(_DWORD *)v18 = 138543362;
      v19 = a1;
      v20 = _swift_stdlib_bridgeErrorToNSError();
      v29 = v20;
      sub_244E4E7E4();
      v21 = v27;
      *v27 = v20;

      _os_log_impl(&dword_244D61000, v16, v17, "Kernel install failed with error: [ %{public}@ ]", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v21, -1, -1);
      MEMORY[0x2495283BC](v18, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v12);
  }
  v22 = sub_244DAEB80(a1);
  sub_244E4C4BC();
  sub_244DA8618();
  v23 = swift_allocError();
  *v24 = v22;
  v29 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417198);
  return sub_244E4E520();
}

uint64_t sub_244DB6A48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC21ProximityReaderDaemon18SPRInstallDelegate_continuation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417198);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_244DB6AA4()
{
  return type metadata accessor for SPRInstallDelegate();
}

uint64_t type metadata accessor for SPRInstallDelegate()
{
  uint64_t result;

  result = qword_2574170D8;
  if (!qword_2574170D8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_244DB6AE8()
{
  unint64_t v0;

  sub_244DB6B64();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_244DB6B64()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2574170E8[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257416D50);
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_257415790);
    v0 = sub_244E4E538();
    if (!v1)
      atomic_store(v0, qword_2574170E8);
  }
}

uint64_t sub_244DB6BD8(uint64_t a1)
{
  uint64_t v1;

  return sub_244DB5EBC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

uint64_t sub_244DB6BEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_244E4E91C();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  v4[11] = swift_task_alloc();
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DB6CBC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_244E4E910();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2574199C0 + dword_2574199C0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v1;
  *v1 = v0;
  v1[1] = sub_244DB6D3C;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB6D3C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 112);
  v4 = *(_QWORD *)(*v1 + 24);
  v5 = *(_QWORD *)(*v1 + 32);
  *(_QWORD *)(*v1 + 128) = v0;
  swift_task_dealloc();
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  *(_QWORD *)(v2 + 136) = v6;
  v6(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB6DC8()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  _QWORD *v3;
  char *v5;

  v1 = v0[2];
  v2 = *(void (**)(uint64_t))(v1 + 16);
  v0[18] = v2;
  v0[19] = *(_QWORD *)(v1 + 24);
  v2(10);
  sub_244E4E910();
  v5 = (char *)&dword_2574199C0 + dword_2574199C0;
  v3 = (_QWORD *)swift_task_alloc();
  v0[20] = v3;
  *v3 = v0;
  v3[1] = sub_244DB6E6C;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v5)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB6E6C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 168) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB6EF0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB6FA4()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(uint64_t))(v0 + 144))(20);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 176) = v1;
  *v1 = v0;
  v1[1] = sub_244DB7038;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB7038()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 184) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB70BC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB7170()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(uint64_t))(v0 + 144))(30);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 192) = v1;
  *v1 = v0;
  v1[1] = sub_244DB7204;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB7204()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB7288()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB733C()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(uint64_t))(v0 + 144))(40);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v1;
  *v1 = v0;
  v1[1] = sub_244DB73D0;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB73D0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB7454()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB7508()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(uint64_t))(v0 + 144))(50);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 224) = v1;
  *v1 = v0;
  v1[1] = sub_244DB759C;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB759C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 72);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 232) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB7620()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB76D4()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(uint64_t))(v0 + 144))(60);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v1;
  *v1 = v0;
  v1[1] = sub_244DB7768;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB7768()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 64);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB77EC()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB78A0()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(uint64_t))(v0 + 144))(70);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 256) = v1;
  *v1 = v0;
  v1[1] = sub_244DB7934;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB7934()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB79B8()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB7A6C()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(uint64_t))(v0 + 144))(80);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 272) = v1;
  *v1 = v0;
  v1[1] = sub_244DB7B00;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB7B00()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 280) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB7B84()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB7C38()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  (*(void (**)(uint64_t))(v0 + 144))(90);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 288) = v1;
  *v1 = v0;
  v1[1] = sub_244DB7CCC;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB7CCC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 136);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 40);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *(_QWORD *)(*(_QWORD *)v1 + 296) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB7D50()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB7E04()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(v0 + 144))(100);
  sub_244DB610C(0, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB7EE0()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB7F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v7;

  v6[219] = a6;
  v6[218] = a5;
  v6[217] = a4;
  v7 = sub_244E4E91C();
  v6[220] = v7;
  v6[221] = *(_QWORD *)(v7 - 8);
  v6[222] = swift_task_alloc();
  v6[223] = swift_task_alloc();
  v6[224] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DB8018()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  sub_244E4E910();
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2574199C0 + dword_2574199C0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1800) = v1;
  *v1 = v0;
  v1[1] = sub_244DB8098;
  return v3(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB8098()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 1792);
  v4 = *(_QWORD *)(*v1 + 1768);
  v5 = *(_QWORD *)(*v1 + 1760);
  *(_QWORD *)(*v1 + 1808) = v0;
  swift_task_dealloc();
  v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(_QWORD *)(v2 + 1816) = v6;
  v6(v3, v5);
  return swift_task_switch();
}

uint64_t sub_244DB812C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, char);
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v1 = *(void **)(v0 + 1744);
  objc_msgSend(v1, sel_mode);
  sub_244DC35D4(0);
  objc_msgSend(v1, sel_amount);
  v2 = sub_244E4E790();
  if ((MEMORY[0x249527A38](v8, v9, v10, v2, v3, v4) & 1) != 0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    sub_244E4E910();
    v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_2574199C0 + dword_2574199C0);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 1824) = v6;
    *v6 = v0;
    v6[1] = sub_244DB82AC;
    return v7(1000000000000000000, 0, 0, 0, 1);
  }
}

uint64_t sub_244DB8258()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB82AC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  v2 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)v1 + 1816);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 1784);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1760);
  *(_QWORD *)(*(_QWORD *)v1 + 1832) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  return swift_task_switch();
}

uint64_t sub_244DB8330()
{
  uint64_t v0;
  _QWORD *v1;
  char *v3;

  objc_msgSend(*(id *)(v0 + 1744), sel_mode);
  sub_244DC35D4(1uLL);
  sub_244E4E910();
  v3 = (char *)&dword_2574199C0 + dword_2574199C0;
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1840) = v1;
  *v1 = v0;
  v1[1] = sub_244DB83D4;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, uint64_t))v3)(1000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_244DB83D4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 1848) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2 + 1816))(*(_QWORD *)(v2 + 1776), *(_QWORD *)(v2 + 1760));
  return swift_task_switch();
}

uint64_t sub_244DB8458()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB84AC()
{
  uint64_t (**v0)(void);

  sub_244DB85E4((uint64_t)(v0 + 174));
  memcpy(v0 + 131, v0 + 174, 0x151uLL);
  sub_244DB5C4C((uint64_t)(v0 + 131));
  sub_244DB4DC0((uint64_t)(v0 + 131), (uint64_t)(v0 + 88));
  memcpy(v0 + 45, v0 + 88, 0x152uLL);
  nullsub_1(v0 + 45);
  sub_244DB1BD4(v0 + 45, v0 + 2);
  sub_244DC193C((uint64_t)(v0 + 2));
  sub_244D7E9EC((uint64_t)(v0 + 174));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return v0[1]();
}

uint64_t sub_244DB8590()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB85E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  char v10;
  id v11;
  void *v12;
  uint64_t (*v13)(void);
  char v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t result;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unsigned int v72;
  uint64_t v73;
  char v74;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143D8 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v3, (uint64_t)qword_257419D88);
  sub_244D640E4(v6, (uint64_t)v5);
  v7 = sub_244E4DCD4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_244D66F54((uint64_t)v5, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v1, 0xD00000000000001ALL, 0x8000000244E58720, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
  }
  v9 = (uint64_t (*)(void))sub_244E4D86C();
  v10 = v9();
  swift_release();
  if ((v10 & 1) != 0)
  {
    v11 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v12 = (void *)sub_244E4E2F8();
    v72 = objc_msgSend(v11, sel_BOOLForKey_, v12);

  }
  else
  {
    v72 = 0;
  }
  v13 = (uint64_t (*)(void))sub_244E4D86C();
  v14 = v13();
  swift_release();
  if ((v14 & 1) != 0
    && (v15 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v16 = (void *)sub_244E4E2F8(),
        v17 = objc_msgSend(v15, sel_stringForKey_, v16),
        v15,
        v16,
        v17))
  {
    v18 = sub_244E4E31C();
    v20 = v19;

  }
  else
  {
    v18 = 0;
    v20 = 0xE000000000000000;
  }
  v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v21 = v18 & 0xFFFFFFFFFFFFLL;
  if (v21)
  {
    v70 = v18;
    v71 = v20;
  }
  else
  {
    swift_bridgeObjectRelease();
    v70 = 0;
    v71 = 0xE000000000000000;
  }
  v22 = sub_244DAB8E0((uint64_t)&unk_2515DA4B8);
  v24 = v23;
  v25 = sub_244E4C318();
  v68 = v26;
  v69 = v25;
  sub_244D651AC(v22, v24);
  v27 = sub_244DA8EA8(0x687069632D6D6973, 0xEA00000000007265);
  v29 = v28;
  v30 = sub_244E4C318();
  v66 = v31;
  v67 = v30;
  sub_244D651AC(v27, v29);
  v32 = sub_244DA8EA8(0x79656B2D6D6973, 0xE700000000000000);
  v34 = v33;
  v35 = sub_244E4C318();
  v64 = v36;
  v65 = v35;
  sub_244D651AC(v32, v34);
  v37 = sub_244DA8EA8(0x6463672D6D6973, 0xE700000000000000);
  v39 = v38;
  v40 = sub_244E4C318();
  v62 = v41;
  v63 = v40;
  sub_244D651AC(v37, v39);
  v42 = sub_244DA8EA8(0x657474612D6D6973, 0xEA00000000007473);
  v44 = v43;
  v45 = sub_244E4C318();
  v47 = v46;
  sub_244D651AC(v42, v44);
  v48 = sub_244DA8EA8(0x647361632D6D6973, 0xE800000000000000);
  v50 = v49;
  sub_244DAB384(v48, v49);
  v73 = v51;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416CB8);
  sub_244DB9490();
  v52 = sub_244E4E2D4();
  v54 = v53;
  swift_bridgeObjectRelease();
  result = sub_244D651AC(v48, v50);
  LOBYTE(v73) = 1;
  v74 = 1;
  *(_QWORD *)a1 = 808464432;
  *(_QWORD *)(a1 + 8) = 0xE400000000000000;
  *(_QWORD *)(a1 + 16) = 1634953558;
  *(_QWORD *)(a1 + 24) = 0xE400000000000000;
  *(_BYTE *)(a1 + 32) = 0;
  v56 = v68;
  *(_QWORD *)(a1 + 40) = v69;
  *(_QWORD *)(a1 + 48) = v56;
  *(_BYTE *)(a1 + 56) = 1;
  v57 = v66;
  *(_QWORD *)(a1 + 64) = v67;
  *(_QWORD *)(a1 + 72) = v57;
  v58 = v64;
  *(_QWORD *)(a1 + 80) = v65;
  *(_QWORD *)(a1 + 88) = v58;
  v59 = v62;
  *(_QWORD *)(a1 + 96) = v63;
  *(_QWORD *)(a1 + 104) = v59;
  *(_QWORD *)(a1 + 112) = v45;
  *(_QWORD *)(a1 + 120) = v47;
  *(_QWORD *)(a1 + 128) = v52;
  *(_QWORD *)(a1 + 136) = v54;
  *(_QWORD *)(a1 + 144) = 0x6B656B2D6D6973;
  *(_QWORD *)(a1 + 152) = 0xE700000000000000;
  *(_QWORD *)(a1 + 160) = 0;
  *(_QWORD *)(a1 + 168) = 0xE000000000000000;
  *(_QWORD *)(a1 + 176) = 0;
  *(_QWORD *)(a1 + 184) = 0xE000000000000000;
  LOBYTE(v59) = v72;
  *(_BYTE *)(a1 + 192) = v72;
  *(_BYTE *)(a1 + 193) = v59;
  *(_WORD *)(a1 + 194) = 257;
  *(_BYTE *)(a1 + 196) = 0;
  strcpy((char *)(a1 + 200), "000000000000");
  *(_BYTE *)(a1 + 213) = 0;
  *(_WORD *)(a1 + 214) = -5120;
  *(_QWORD *)(a1 + 216) = 0;
  *(_QWORD *)(a1 + 224) = 0;
  *(_BYTE *)(a1 + 232) = -4;
  v60 = v70;
  *(_QWORD *)(a1 + 240) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 248) = v60;
  *(_QWORD *)(a1 + 256) = v71;
  *(_BYTE *)(a1 + 264) = 0;
  *(_QWORD *)(a1 + 272) = 0x676E69662D6D6973;
  *(_QWORD *)(a1 + 280) = 0xEF746E6972707265;
  *(_QWORD *)(a1 + 288) = 0;
  *(_BYTE *)(a1 + 296) = v73;
  *(_QWORD *)(a1 + 304) = 0;
  *(_BYTE *)(a1 + 312) = v74;
  *(_QWORD *)(a1 + 320) = 0x417961702D6D6973;
  *(_QWORD *)(a1 + 328) = 0xEA00000000007070;
  *(_BYTE *)(a1 + 336) = 0;
  return result;
}

uint64_t sub_244DB8B98@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  NSObject *v16;
  int v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  int v21;
  NSObject *v22;
  BOOL *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[48];
  uint64_t v28;

  v28 = *MEMORY[0x24BDAC8D0];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v10 = a1[1];
  if (qword_257414400 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E00);
  sub_244D640E4(v11, (uint64_t)v8);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12);
  if (v14 == 1)
  {
    result = sub_244D66F54((uint64_t)v8, &qword_2574145A0);
  }
  else
  {
    v24 = v13;
    sub_244D9BF14(a2, (uint64_t)v27);
    sub_244D73FC0(v9, v10);
    sub_244D73FC0(v9, v10);
    v16 = sub_244E4DCBC();
    v17 = sub_244E4E688();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      v21 = v17;
      v22 = v16;
      v23 = a3;
      v18 = swift_slowAlloc();
      v20 = swift_slowAlloc();
      v26 = v20;
      *(_DWORD *)v18 = 33554946;
      v19 = v27[0] + 1200;
      sub_244D9C004((uint64_t)v27);
      LOWORD(v25) = v19;
      sub_244E4E7E4();
      *(_WORD *)(v18 + 6) = 2080;
      __asm { BR              X9 }
    }
    sub_244D9C004((uint64_t)v27);

    sub_244D651AC(v9, v10);
    sub_244D651AC(v9, v10);
    result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v12);
  }
  *a3 = v14 == 1;
  return result;
}

uint64_t type metadata accessor for MockSPRReader()
{
  return objc_opt_self();
}

uint64_t sub_244DB91D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _OWORD v28[2];
  __int128 v29;
  uint64_t v30;

  v0 = sub_244E4E31C();
  v2 = v1;
  v3 = MEMORY[0x24BEE0D00];
  v30 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v29 = 1801678701;
  *((_QWORD *)&v29 + 1) = 0xE400000000000000;
  sub_244D6B058(&v29, v28);
  v4 = MEMORY[0x24BEE4B00];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_244DE47E8(v28, v0, v2, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = sub_244E4E31C();
  v8 = v7;
  v30 = v3;
  *(_QWORD *)&v29 = 0x343332314553;
  *((_QWORD *)&v29 + 1) = 0xE600000000000000;
  sub_244D6B058(&v29, v28);
  v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_244DE47E8(v28, v6, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10 = sub_244E4E31C();
  v12 = v11;
  v13 = MEMORY[0x24BEE1328];
  v30 = MEMORY[0x24BEE1328];
  LOBYTE(v29) = 0;
  sub_244D6B058(&v29, v28);
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_244DE47E8(v28, v10, v12, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = sub_244E4E31C();
  v17 = v16;
  v30 = v13;
  LOBYTE(v29) = 0;
  sub_244D6B058(&v29, v28);
  v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_244DE47E8(v28, v15, v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = sub_244E4E31C();
  v21 = v20;
  v30 = v13;
  LOBYTE(v29) = 0;
  sub_244D6B058(&v29, v28);
  v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_244DE47E8(v28, v19, v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = sub_244E4E31C();
  v25 = v24;
  v30 = v13;
  LOBYTE(v29) = 0;
  sub_244D6B058(&v29, v28);
  v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_244DE47E8(v28, v23, v25, v26);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t sub_244DB9490()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257416CC0;
  if (!qword_257416CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257416CB8);
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_257416CC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityTerminalContext()
{
  return &type metadata for IdentityTerminalContext;
}

uint64_t sub_244DB94EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  char *v8;
  uint64_t State;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v1);
  v47 = (uint64_t)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v41 - v7;
  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  v51 = *(_QWORD *)(State - 8);
  v10 = MEMORY[0x24BDAC7A8](State);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v50 = (uint64_t)&v41 - v13;
  swift_beginAccess();
  v41 = v0;
  v14 = *(_QWORD *)(v0 + 112);
  v15 = *(_QWORD *)(v14 + 64);
  v48 = v14 + 64;
  v16 = 1 << *(_BYTE *)(v14 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & v15;
  v49 = (unint64_t)(v16 + 63) >> 6;
  v52 = v14;
  result = swift_bridgeObjectRetain();
  v20 = 0;
  v44 = v3;
  v45 = MEMORY[0x24BEE4AE0] + 8;
  v42 = v8;
  v43 = v6;
  v46 = State;
  while (v18)
  {
    v21 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    v22 = v21 | (v20 << 6);
LABEL_23:
    v26 = v50;
    sub_244DC0B1C(*(_QWORD *)(v52 + 56) + *(_QWORD *)(v51 + 72) * v22, v50, type metadata accessor for IdentityAnalyticsManager.LoadState);
    sub_244DC0EA0(v26, (uint64_t)v12, type metadata accessor for IdentityAnalyticsManager.LoadState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_244DC0EE4((uint64_t)v12, (uint64_t)v8);
      sub_244D91E3C((uint64_t)v8, (uint64_t)v6, &qword_257416F70);
      v27 = type metadata accessor for IdentityAnalyticsReporter(0);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v6, 1, v27) == 1)
      {
        sub_244D66F54((uint64_t)v6, &qword_257416F70);
        result = sub_244D66F54((uint64_t)v8, &qword_257416F70);
      }
      else
      {
        v28 = v47;
        v30 = *v6;
        v29 = v6[1];
        swift_bridgeObjectRetain();
        sub_244DC0B60((uint64_t)v6, type metadata accessor for IdentityAnalyticsReporter);
        v31 = sub_244E4E55C();
        v32 = *(_QWORD *)(v31 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v28, 1, 1, v31);
        v33 = (_QWORD *)swift_allocObject();
        v33[2] = 0;
        v34 = v33 + 2;
        v33[3] = 0;
        v33[4] = v30;
        v33[5] = v29;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v28, 1, v31) == 1)
        {
          sub_244D66F54(v47, &qword_257415740);
          if (*v34)
            goto LABEL_28;
        }
        else
        {
          v38 = v47;
          sub_244E4E550();
          (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v38, v31);
          if (*v34)
          {
LABEL_28:
            swift_getObjectType();
            swift_unknownObjectRetain();
            v35 = sub_244E4E514();
            v37 = v36;
            swift_unknownObjectRelease();
            goto LABEL_31;
          }
        }
        v35 = 0;
        v37 = 0;
LABEL_31:
        v39 = swift_allocObject();
        *(_QWORD *)(v39 + 16) = &unk_257417650;
        *(_QWORD *)(v39 + 24) = v33;
        if (v37 | v35)
        {
          v53 = 0;
          v54 = 0;
          v55 = v35;
          v56 = v37;
        }
        v6 = v43;
        v8 = v42;
        swift_task_create();
        swift_release();
        result = sub_244D66F54((uint64_t)v8, &qword_257416F70);
      }
    }
    else
    {
      sub_244E4E5BC();
      result = swift_release();
    }
  }
  v23 = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v23 >= v49)
    goto LABEL_34;
  v24 = *(_QWORD *)(v48 + 8 * v23);
  ++v20;
  if (v24)
    goto LABEL_22;
  v20 = v23 + 1;
  if (v23 + 1 >= v49)
    goto LABEL_34;
  v24 = *(_QWORD *)(v48 + 8 * v20);
  if (v24)
    goto LABEL_22;
  v20 = v23 + 2;
  if (v23 + 2 >= v49)
    goto LABEL_34;
  v24 = *(_QWORD *)(v48 + 8 * v20);
  if (v24)
    goto LABEL_22;
  v20 = v23 + 3;
  if (v23 + 3 >= v49)
    goto LABEL_34;
  v24 = *(_QWORD *)(v48 + 8 * v20);
  if (v24)
  {
LABEL_22:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_23;
  }
  v25 = v23 + 4;
  if (v25 >= v49)
  {
LABEL_34:
    swift_release();
    v40 = v41;
    swift_bridgeObjectRelease();
    swift_defaultActor_destroy();
    return v40;
  }
  v24 = *(_QWORD *)(v48 + 8 * v25);
  if (v24)
  {
    v20 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v20 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v20 >= v49)
      goto LABEL_34;
    v24 = *(_QWORD *)(v48 + 8 * v20);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_244DB9A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[2] = a4;
  v5[3] = a5;
  v6 = sub_244E4CB28();
  v5[4] = v6;
  v5[5] = *(_QWORD *)(v6 - 8);
  v5[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DB9A78()
{
  uint64_t v0;
  _QWORD *v1;

  sub_244E4CB1C();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  *v1 = v0;
  v1[1] = sub_244DB9AD4;
  return sub_244E4CAD4();
}

uint64_t sub_244DB9AD4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(*v0 + 48);
  v2 = *(_QWORD *)(*v0 + 32);
  v3 = *(_QWORD *)(*v0 + 40);
  v5 = *v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_244DB9B40()
{
  sub_244DB94EC();
  return swift_defaultActor_deallocate();
}

uint64_t type metadata accessor for IdentityAnalyticsManager()
{
  return objc_opt_self();
}

uint64_t sub_244DB9B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t State;

  v4[13] = a3;
  v4[14] = v3;
  v4[11] = a1;
  v4[12] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  v4[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417630);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  v4[18] = State;
  v4[19] = *(_QWORD *)(State - 8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DB9C44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  char v9;
  void (*v10)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;

  v1 = *(_QWORD *)(v0 + 112) + 112;
  swift_beginAccess();
  v2 = *(_QWORD *)v1;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 152) + 56);
    v10(*(uint64_t **)(v0 + 136), 1, 1, *(_QWORD *)(v0 + 144));
LABEL_7:
    *(_QWORD *)(v0 + 192) = v10;
    v14 = *(_QWORD *)(v0 + 144);
    v16 = *(_QWORD *)(v0 + 120);
    v15 = *(uint64_t **)(v0 + 128);
    v18 = *(_QWORD *)(v0 + 96);
    v17 = *(_QWORD *)(v0 + 104);
    sub_244D66F54(*(_QWORD *)(v0 + 136), &qword_257417630);
    v19 = sub_244E4E55C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 1, 1, v19);
    v20 = (_QWORD *)swift_allocObject();
    v20[2] = 0;
    v20[3] = 0;
    v20[4] = v18;
    v20[5] = v17;
    swift_bridgeObjectRetain();
    v21 = sub_244DB2F44(v16, (uint64_t)&unk_257417640, (uint64_t)v20);
    *(_QWORD *)(v0 + 200) = v21;
    *v15 = v21;
    swift_storeEnumTagMultiPayload();
    v10(v15, 0, 1, v14);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_244DE0C94((uint64_t)v15, v18, v17);
    swift_endAccess();
    v22 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
    *v22 = v0;
    v22[1] = sub_244DBA074;
    return sub_244E4E5D4();
  }
  v4 = *(_QWORD *)(v0 + 96);
  v3 = *(_QWORD *)(v0 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v5 = sub_244DC859C(v4, v3);
  v6 = *(_QWORD *)(v0 + 144);
  v7 = *(_QWORD *)(v0 + 152);
  v8 = *(uint64_t **)(v0 + 136);
  if ((v9 & 1) != 0)
  {
    sub_244DC0B1C(*(_QWORD *)(v2 + 56) + *(_QWORD *)(v7 + 72) * v5, *(_QWORD *)(v0 + 136), type metadata accessor for IdentityAnalyticsManager.LoadState);
    v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v10(v8, 0, 1, v6);
  }
  else
  {
    v10 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v10(*(uint64_t **)(v0 + 136), 1, 1, v6);
  }
  v11 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) == 1)
    goto LABEL_7;
  v24 = *(_QWORD *)(v0 + 160);
  v25 = *(_QWORD *)(v0 + 168);
  sub_244DC0EA0(*(_QWORD *)(v0 + 136), v25, type metadata accessor for IdentityAnalyticsManager.LoadState);
  sub_244DC0B1C(v25, v24, type metadata accessor for IdentityAnalyticsManager.LoadState);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    *(_QWORD *)(v0 + 176) = **(_QWORD **)(v0 + 160);
    v28 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 184) = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
    *v28 = v0;
    v28[1] = sub_244DB9FA4;
    return sub_244E4E5D4();
  }
  v26 = *(_QWORD *)(v0 + 160);
  v27 = *(_QWORD *)(v0 + 88);
  sub_244DC0B60(*(_QWORD *)(v0 + 168), type metadata accessor for IdentityAnalyticsManager.LoadState);
  sub_244DC0EE4(v26, v27);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DB9FA4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DB9FFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 168);
  swift_release();
  sub_244DC0B60(v1, type metadata accessor for IdentityAnalyticsManager.LoadState);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DBA074()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DBA0CC()
{
  uint64_t v0;
  void (*v1)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v0 + 192);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 104);
  v5 = *(_QWORD *)(v0 + 96);
  sub_244D91E3C(*(_QWORD *)(v0 + 88), v3, &qword_257416F70);
  swift_storeEnumTagMultiPayload();
  v1(v3, 0, 1, v2);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_244DE0C94(v3, v5, v4);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

_QWORD *initializeWithCopy for IdentityAnalyticsSession(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for IdentityAnalyticsSession(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

_QWORD *assignWithTake for IdentityAnalyticsSession(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityAnalyticsSession(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 96))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityAnalyticsSession(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 96) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityAnalyticsSession()
{
  return &type metadata for IdentityAnalyticsSession;
}

_QWORD *sub_244DBA494(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v48)(char *, char *, uint64_t);
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  char *v52;
  char *v53;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v46 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v46 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    v10 = a3[5];
    v11 = (_QWORD *)((char *)a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = *(_QWORD *)((char *)a2 + v10 + 8);
    *v11 = *(_QWORD *)((char *)a2 + v10);
    v11[1] = v13;
    v14 = *(_QWORD *)((char *)a2 + v10 + 24);
    v11[2] = *(_QWORD *)((char *)a2 + v10 + 16);
    v11[3] = v14;
    v15 = type metadata accessor for IdentityAnalyticsReporter(0);
    v16 = *(int *)(v15 + 24);
    v49 = &v12[v16];
    v50 = (char *)v11 + v16;
    v17 = sub_244E4CB28();
    v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v48(v50, v49, v17);
    *(_QWORD *)((char *)v11 + *(int *)(v15 + 28)) = *(_QWORD *)&v12[*(int *)(v15 + 28)];
    v18 = a3[6];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    *v19 = *((_BYTE *)a2 + v18);
    v21 = *(_QWORD *)((char *)a2 + v18 + 16);
    *((_QWORD *)v19 + 1) = *(_QWORD *)((char *)a2 + v18 + 8);
    *((_QWORD *)v19 + 2) = v21;
    v22 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
    v23 = *(int *)(v22 + 28);
    v52 = &v20[v23];
    v53 = &v19[v23];
    v24 = sub_244E4CEE8();
    v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51(v53, v52, v24);
    v25 = *(int *)(v22 + 32);
    v26 = &v19[v25];
    v27 = &v20[v25];
    v28 = sub_244E4CCFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
    v29 = a3[7];
    v30 = a3[8];
    v31 = (_QWORD *)((char *)v4 + v29);
    v32 = (_QWORD *)((char *)a2 + v29);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = v32[3];
    v31[2] = v32[2];
    v31[3] = v34;
    v35 = (_QWORD *)((char *)v4 + v30);
    v36 = (_QWORD *)((char *)a2 + v30);
    v37 = v36[1];
    *v35 = *v36;
    v35[1] = v37;
    v38 = a3[9];
    v39 = a3[10];
    v40 = (_QWORD *)((char *)v4 + v38);
    v41 = (_QWORD *)((char *)a2 + v38);
    v42 = v41[1];
    *v40 = *v41;
    v40[1] = v42;
    v43 = (_QWORD *)((char *)v4 + v39);
    v44 = (_QWORD *)((char *)a2 + v39);
    v45 = v44[1];
    *v43 = *v44;
    v43[1] = v45;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t type metadata accessor for IdentityAnalyticsReporter(uint64_t a1)
{
  return sub_244D9166C(a1, qword_2574174F8);
}

uint64_t type metadata accessor for IdentityAnalyticsRequestInformation(uint64_t a1)
{
  return sub_244D9166C(a1, qword_257417458);
}

uint64_t sub_244DBA704(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for IdentityAnalyticsReporter(0) + 24);
  v6 = sub_244E4CB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  v7 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  v9 = v7 + *(int *)(v8 + 28);
  v10 = sub_244E4CEE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v7 + *(int *)(v8 + 32);
  v12 = sub_244E4CCFC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_244DBA850(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  char *v50;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a3[5];
  v9 = (_QWORD *)((char *)a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = *(_QWORD *)((char *)a2 + v8 + 8);
  *v9 = *(_QWORD *)((char *)a2 + v8);
  v9[1] = v11;
  v12 = *(_QWORD *)((char *)a2 + v8 + 24);
  v9[2] = *(_QWORD *)((char *)a2 + v8 + 16);
  v9[3] = v12;
  v13 = type metadata accessor for IdentityAnalyticsReporter(0);
  v14 = *(int *)(v13 + 24);
  v47 = &v10[v14];
  v48 = (char *)v9 + v14;
  v15 = sub_244E4CB28();
  v46 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v46(v48, v47, v15);
  *(_QWORD *)((char *)v9 + *(int *)(v13 + 28)) = *(_QWORD *)&v10[*(int *)(v13 + 28)];
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *v17 = *((_BYTE *)a2 + v16);
  v19 = *(_QWORD *)((char *)a2 + v16 + 16);
  *((_QWORD *)v17 + 1) = *(_QWORD *)((char *)a2 + v16 + 8);
  *((_QWORD *)v17 + 2) = v19;
  v20 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  v21 = *(int *)(v20 + 28);
  v49 = &v18[v21];
  v50 = &v17[v21];
  v22 = sub_244E4CEE8();
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v50, v49, v22);
  v24 = *(int *)(v20 + 32);
  v25 = &v17[v24];
  v26 = &v18[v24];
  v27 = sub_244E4CCFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
  v28 = a3[7];
  v29 = a3[8];
  v30 = (_QWORD *)((char *)a1 + v28);
  v31 = (_QWORD *)((char *)a2 + v28);
  v32 = v31[1];
  *v30 = *v31;
  v30[1] = v32;
  v33 = v31[3];
  v30[2] = v31[2];
  v30[3] = v33;
  v34 = (_QWORD *)((char *)a1 + v29);
  v35 = (_QWORD *)((char *)a2 + v29);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = a3[9];
  v38 = a3[10];
  v39 = (_QWORD *)((char *)a1 + v37);
  v40 = (_QWORD *)((char *)a2 + v37);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = (_QWORD *)((char *)a1 + v38);
  v43 = (_QWORD *)((char *)a2 + v38);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_244DBAA64(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for IdentityAnalyticsReporter(0);
  v10 = *(int *)(v9 + 24);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = sub_244E4CB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)((char *)v7 + *(int *)(v9 + 28)) = *(_QWORD *)&v8[*(int *)(v9 + 28)];
  swift_retain();
  swift_release();
  v14 = a3[6];
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *v15 = *((_BYTE *)a2 + v14);
  *((_QWORD *)v15 + 1) = *(_QWORD *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  v18 = *(int *)(v17 + 28);
  v19 = &v15[v18];
  v20 = &v16[v18];
  v21 = sub_244E4CEE8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  v22 = *(int *)(v17 + 32);
  v23 = &v15[v22];
  v24 = &v16[v22];
  v25 = sub_244E4CCFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  v26 = a3[7];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (char *)a2 + v26;
  *v27 = *(_QWORD *)((char *)a2 + v26);
  v27[1] = *(_QWORD *)((char *)a2 + v26 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27[2] = *((_QWORD *)v28 + 2);
  v27[3] = *((_QWORD *)v28 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[8];
  v30 = (_QWORD *)((char *)a1 + v29);
  v31 = (_QWORD *)((char *)a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[9];
  v33 = (_QWORD *)((char *)a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[10];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (_QWORD *)((char *)a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_244DBAD1C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  _OWORD *v32;
  uint64_t v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  v7 = a3[5];
  v8 = (_OWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_OWORD *)((char *)a2 + v7 + 16);
  *v8 = *(_OWORD *)((char *)a2 + v7);
  v8[1] = v10;
  v11 = type metadata accessor for IdentityAnalyticsReporter(0);
  v12 = *(int *)(v11 + 24);
  v13 = (char *)v8 + v12;
  v14 = &v9[v12];
  v15 = sub_244E4CB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  *(_QWORD *)((char *)v8 + *(int *)(v11 + 28)) = *(_QWORD *)&v9[*(int *)(v11 + 28)];
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  *v17 = *((_BYTE *)a2 + v16);
  *(_OWORD *)(v17 + 8) = *(_OWORD *)((char *)a2 + v16 + 8);
  v19 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  v20 = *(int *)(v19 + 28);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v23 = sub_244E4CEE8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
  v24 = *(int *)(v19 + 32);
  v25 = &v17[v24];
  v26 = &v18[v24];
  v27 = sub_244E4CCFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
  v28 = a3[7];
  v29 = a3[8];
  v30 = *(_OWORD *)((char *)a2 + v28);
  v31 = *(_OWORD *)((char *)a2 + v28 + 16);
  v32 = (_OWORD *)((char *)a1 + v28);
  *v32 = v30;
  v32[1] = v31;
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  v33 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  *(_OWORD *)((char *)a1 + v33) = *(_OWORD *)((char *)a2 + v33);
  return a1;
}

_QWORD *sub_244DBAE74(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a3[5];
  v10 = (_QWORD *)((char *)a1 + v9);
  v11 = (char *)a2 + v9;
  v12 = *(_QWORD *)((char *)a2 + v9 + 8);
  *v10 = *(_QWORD *)((char *)a2 + v9);
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v13 = *((_QWORD *)v11 + 3);
  v10[2] = *((_QWORD *)v11 + 2);
  v10[3] = v13;
  swift_bridgeObjectRelease();
  v14 = type metadata accessor for IdentityAnalyticsReporter(0);
  v15 = *(int *)(v14 + 24);
  v16 = (char *)v10 + v15;
  v17 = &v11[v15];
  v18 = sub_244E4CB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  *(_QWORD *)((char *)v10 + *(int *)(v14 + 28)) = *(_QWORD *)&v11[*(int *)(v14 + 28)];
  swift_release();
  v19 = a3[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  *v20 = *((_BYTE *)a2 + v19);
  *((_QWORD *)v20 + 1) = *(_QWORD *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  swift_bridgeObjectRelease();
  v22 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  v23 = *(int *)(v22 + 28);
  v24 = &v20[v23];
  v25 = &v21[v23];
  v26 = sub_244E4CEE8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = *(int *)(v22 + 32);
  v28 = &v20[v27];
  v29 = &v21[v27];
  v30 = sub_244E4CCFC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  v31 = a3[7];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (char *)a2 + v31;
  v34 = *(_QWORD *)((char *)a2 + v31 + 8);
  *v32 = *(_QWORD *)((char *)a2 + v31);
  v32[1] = v34;
  swift_bridgeObjectRelease();
  v35 = *((_QWORD *)v33 + 3);
  v32[2] = *((_QWORD *)v33 + 2);
  v32[3] = v35;
  swift_bridgeObjectRelease();
  v36 = a3[8];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  v40 = *v38;
  v39 = v38[1];
  *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  v41 = a3[9];
  v42 = (_QWORD *)((char *)a1 + v41);
  v43 = (_QWORD *)((char *)a2 + v41);
  v45 = *v43;
  v44 = v43[1];
  *v42 = v45;
  v42[1] = v44;
  swift_bridgeObjectRelease();
  v46 = a3[10];
  v47 = (_QWORD *)((char *)a1 + v46);
  v48 = (_QWORD *)((char *)a2 + v46);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244DBB074()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244DBB080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for IdentityAnalyticsReporter(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_244DBB120()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244DBB12C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for IdentityAnalyticsReporter(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for IdentityAnalyticsTransaction(uint64_t a1)
{
  return sub_244D9166C(a1, qword_2574173B0);
}

uint64_t sub_244DBB1DC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for IdentityAnalyticsReporter(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for IdentityAnalyticsRequestInformation(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_244DBB284(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = *(int *)(a3 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_244E4CEE8();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(a3 + 32);
    v14 = (char *)v4 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_244E4CCFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v4;
}

uint64_t sub_244DBB374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_244E4CEE8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 32);
  v7 = sub_244E4CCFC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_244DBB3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_244E4CEE8();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(a3 + 32);
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_244E4CCFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t sub_244DBB4B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_244E4CEE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_244E4CCFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_244DBB57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_244E4CEE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_244E4CCFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t sub_244DBB61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_244E4CEE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = *(int *)(a3 + 32);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_244E4CCFC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_244DBB6D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244DBB6E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244E4CEE8();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_244E4CCFC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_244DBB780()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244DBB78C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_244E4CEE8();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_244E4CCFC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_244DBB828()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_244E4CEE8();
  if (v1 <= 0x3F)
  {
    result = sub_244E4CCFC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_244DBB8C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_244E4CB28();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  swift_retain();
  return v4;
}

uint64_t sub_244DBB998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_244E4CB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_release();
}

_QWORD *sub_244DBB9FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_244E4CB28();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_retain();
  return a1;
}

_QWORD *sub_244DBBAA4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_244E4CB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_244DBBB64(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_244E4CB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_QWORD *sub_244DBBBDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_244E4CB28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 28));
  swift_release();
  return a1;
}

uint64_t sub_244DBBC74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_244DBBC80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_244E4CB28();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_244DBBCFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_244DBBD08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_244E4CB28();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_244DBBD7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_244E4CB28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_244DBBDFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  void (*v16)(uint64_t *, _QWORD, uint64_t, uint64_t);
  char *v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for IdentityAnalyticsReporter(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        v11 = a2[3];
        a1[2] = a2[2];
        a1[3] = v11;
        v12 = *(int *)(v6 + 24);
        v18 = (char *)a1 + v12;
        v13 = (char *)a2 + v12;
        v14 = sub_244E4CB28();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v15(v18, v13, v14);
        *(uint64_t *)((char *)a1 + *(int *)(v6 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 28));
        v16 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v7 + 56);
        swift_retain();
        v16(a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_244DBBF80(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = type metadata accessor for IdentityAnalyticsReporter(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
    if ((_DWORD)result)
      return result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = a1 + *(int *)(v2 + 24);
    v5 = sub_244E4CB28();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return swift_release();
}

_QWORD *sub_244DBC028(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  void (*v13)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v15;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = type metadata accessor for IdentityAnalyticsReporter(0);
    v5 = *(_QWORD *)(v4 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    else
    {
      v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      v9 = *(int *)(v4 + 24);
      v15 = (char *)a1 + v9;
      v10 = (char *)a2 + v9;
      v11 = sub_244E4CB28();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12(v15, v10, v11);
      *(_QWORD *)((char *)a1 + *(int *)(v4 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v4 + 28));
      v13 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56);
      swift_retain();
      v13(a1, 0, 1, v4);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_244DBC180(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  void (*v11)(_QWORD *, _QWORD, uint64_t, uint64_t);
  char *v13;

  if (a1 != a2)
  {
    sub_244DC0B60((uint64_t)a1, type metadata accessor for IdentityAnalyticsManager.LoadState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = type metadata accessor for IdentityAnalyticsReporter(0);
      v5 = *(_QWORD *)(v4 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        v7 = *(int *)(v4 + 24);
        v13 = (char *)a1 + v7;
        v8 = (char *)a2 + v7;
        v9 = sub_244E4CB28();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v10(v13, v8, v9);
        *(_QWORD *)((char *)a1 + *(int *)(v4 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v4 + 28));
        v11 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v5 + 56);
        swift_retain();
        v11(a1, 0, 1, v4);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for IdentityAnalyticsManager.LoadState(uint64_t a1)
{
  return sub_244D9166C(a1, (uint64_t *)&unk_2574175A8);
}

_OWORD *sub_244DBC314(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = type metadata accessor for IdentityAnalyticsReporter(0);
    v7 = *(_QWORD *)(v6 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      v10 = *(int *)(v6 + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_244E4CB28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_QWORD *)((char *)a1 + *(int *)(v6 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_244DBC434(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_244DC0B60((uint64_t)a1, type metadata accessor for IdentityAnalyticsManager.LoadState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = type metadata accessor for IdentityAnalyticsReporter(0);
      v7 = *(_QWORD *)(v6 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        v10 = *(int *)(v6 + 24);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_244E4CB28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        *(_QWORD *)((char *)a1 + *(int *)(v6 + 28)) = *(_QWORD *)((char *)a2 + *(int *)(v6 + 28));
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_244DBC56C()
{
  unint64_t v0;

  sub_244DBC5E0();
  if (v0 <= 0x3F)
    swift_initEnumMetadataMultiPayload();
}

void sub_244DBC5E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2574175B8[0])
  {
    type metadata accessor for IdentityAnalyticsReporter(255);
    v0 = sub_244E4E7C0();
    if (!v1)
      atomic_store(v0, qword_2574175B8);
  }
}

uint64_t sub_244DBC634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;

  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  v6 = sub_244E4CB28();
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v5[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  v5[14] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DBC6DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int (*v5)(uint64_t, uint64_t, uint64_t);
  NSObject *v6;
  os_log_type_t v7;
  _BOOL4 v8;
  unint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t v15;

  if (qword_257414418 != -1)
    swift_once();
  v1 = v0[14];
  v2 = __swift_project_value_buffer(v0[11], (uint64_t)qword_257419E48);
  v0[15] = v2;
  sub_244D91E3C(v2, v1, &qword_2574145A0);
  v3 = sub_244E4DCD4();
  v0[16] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v0[17] = v4;
  v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v0[18] = v5;
  if (v5(v1, 1, v3) == 1)
  {
    sub_244D66F54(v0[14], &qword_2574145A0);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v6 = sub_244E4DCBC();
    v7 = sub_244E4E688();
    v8 = os_log_type_enabled(v6, v7);
    v9 = v0[7];
    if (v8)
    {
      v14 = v0[6];
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v15 = v11;
      *(_DWORD *)v10 = 136315138;
      swift_bridgeObjectRetain();
      v0[4] = sub_244D9A70C(v14, v9, &v15);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v6, v7, "Creating identity analytics reporter for [%s]", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v11, -1, -1);
      MEMORY[0x2495283BC](v10, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(_QWORD, uint64_t))(v4 + 8))(v0[14], v3);
  }
  sub_244E4CB1C();
  v12 = (_QWORD *)swift_task_alloc();
  v0[19] = v12;
  *v12 = v0;
  v12[1] = sub_244DBC938;
  return sub_244E4CABC();
}

uint64_t sub_244DBC938(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 160) = a1;
  *(_QWORD *)(v3 + 168) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DBC994()
{
  uint64_t v0;
  uint64_t v1;
  unsigned int (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  _BOOL4 v12;
  unint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  _BOOL4 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = *(_QWORD *)(v0 + 168);
  if (v1)
  {
    v2 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    v3 = *(_QWORD *)(v0 + 128);
    v4 = *(_QWORD *)(v0 + 96);
    sub_244D91E3C(*(_QWORD *)(v0 + 120), v4, &qword_2574145A0);
    v40 = v1;
    if (v2(v4, 1, v3) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 96), &qword_2574145A0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v10 = sub_244E4DCBC();
      v11 = sub_244E4E670();
      v12 = os_log_type_enabled(v10, v11);
      v13 = *(_QWORD *)(v0 + 56);
      if (v12)
      {
        v14 = *(_QWORD *)(v0 + 48);
        v15 = (uint8_t *)swift_slowAlloc();
        v16 = swift_slowAlloc();
        v42 = v16;
        *(_DWORD *)v15 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 24) = sub_244D9A70C(v14, v13, &v42);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244D61000, v10, v11, "Returning identity analytics reporter for [%s]", v15, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v16, -1, -1);
        MEMORY[0x2495283BC](v15, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 128));
    }
    v39 = *(_QWORD *)(v0 + 160);
    v28 = *(_QWORD *)(v0 + 72);
    v27 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 56);
    v29 = *(_QWORD *)(v0 + 64);
    v31 = *(char **)(v0 + 40);
    v32 = *(_QWORD *)(v0 + 48);
    v33 = type metadata accessor for IdentityAnalyticsReporter(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(&v31[*(int *)(v33 + 24)], v27, v29);
    v34 = *(int *)(v33 + 28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574150E8);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v31[v34] = sub_244E4CA38();
    *((_QWORD *)v31 + 2) = v32;
    *((_QWORD *)v31 + 3) = v30;
    *(_QWORD *)v31 = v39;
    *((_QWORD *)v31 + 1) = v40;
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v27, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v31, 0, 1, v33);
  }
  else
  {
    v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    v6 = *(_QWORD *)(v0 + 128);
    v7 = *(_QWORD *)(v0 + 104);
    sub_244D91E3C(*(_QWORD *)(v0 + 120), v7, &qword_2574145A0);
    v8 = v5(v7, 1, v6);
    v9 = *(_QWORD *)(v0 + 104);
    if (v8 == 1)
    {
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 72) + 8))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 64));
      sub_244D66F54(v9, &qword_2574145A0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v17 = sub_244E4DCBC();
      v18 = sub_244E4E67C();
      v19 = os_log_type_enabled(v17, v18);
      v21 = *(_QWORD *)(v0 + 72);
      v20 = *(_QWORD *)(v0 + 80);
      v23 = *(_QWORD *)(v0 + 56);
      v22 = *(_QWORD *)(v0 + 64);
      if (v19)
      {
        v24 = *(_QWORD *)(v0 + 48);
        v41 = *(_QWORD *)(v0 + 64);
        v25 = (uint8_t *)swift_slowAlloc();
        v38 = v20;
        v26 = swift_slowAlloc();
        v42 = v26;
        *(_DWORD *)v25 = 136315138;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v0 + 16) = sub_244D9A70C(v24, v23, &v42);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244D61000, v17, v18, "Could not create identity analytics reporter for [%s]", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v26, -1, -1);
        MEMORY[0x2495283BC](v25, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v38, v41);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      }
      (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 128));
    }
    v35 = *(_QWORD *)(v0 + 40);
    v36 = type metadata accessor for IdentityAnalyticsReporter(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 1, 1, v36);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DBCE10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  __int128 v53;
  __int128 v54;

  v47 = 0x6E776F6E6B6E75;
  v2 = type metadata accessor for IdentityAnalyticsReporter(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_244E4D5F0();
  v14 = *(_QWORD *)(a1 + 16);
  v48 = v3;
  if (!v14 || (v15 = sub_244DC859C(v12, v13), (v16 & 1) == 0))
  {
    v53 = 0u;
    v54 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v15, (uint64_t)&v53);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v54 + 1))
  {
LABEL_7:
    sub_244D66F54((uint64_t)&v53, &qword_257415508);
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415510);
  if (!swift_dynamicCast())
  {
LABEL_8:
    v18 = 0xE700000000000000;
    v17 = 0x6E776F6E6B6E75;
    goto LABEL_9;
  }
  v17 = v51;
  v18 = v52;
LABEL_9:
  v46 = v17;
  v19 = sub_244E4D488();
  if (*(_QWORD *)(a1 + 16) && (v21 = sub_244DC859C(v19, v20), (v22 & 1) != 0))
  {
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v21, (uint64_t)&v53);
  }
  else
  {
    v53 = 0u;
    v54 = 0u;
  }
  swift_bridgeObjectRelease();
  v49 = v4;
  if (*((_QWORD *)&v54 + 1))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415510);
    if (swift_dynamicCast())
    {
      v23 = v52;
      v47 = v51;
      goto LABEL_18;
    }
  }
  else
  {
    sub_244D66F54((uint64_t)&v53, &qword_257415508);
  }
  v23 = 0xE700000000000000;
LABEL_18:
  if (qword_257414418 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v9, (uint64_t)qword_257419E48);
  sub_244D91E3C(v24, (uint64_t)v11, &qword_2574145A0);
  v25 = sub_244E4DCD4();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v11, 1, v25) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_244D66F54((uint64_t)v11, &qword_2574145A0);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v27 = sub_244E4DCBC();
    v28 = sub_244E4E688();
    v45 = v27;
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v43 = v8;
      v30 = v29;
      v42 = swift_slowAlloc();
      *(_QWORD *)&v53 = v42;
      *(_DWORD *)v30 = 136315394;
      v44 = v5;
      swift_bridgeObjectRetain();
      v51 = sub_244D9A70C(v46, v18, (uint64_t *)&v53);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      swift_bridgeObjectRetain();
      v51 = sub_244D9A70C(v47, v23, (uint64_t *)&v53);
      v5 = v44;
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      v31 = v45;
      _os_log_impl(&dword_244D61000, v45, v28, "Sending identity analytics event [ %s ] with hierarchyToken [ %s ]", (uint8_t *)v30, 0x16u);
      v32 = v42;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v32, -1, -1);
      v33 = v30;
      v8 = v43;
      MEMORY[0x2495283BC](v33, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v25);
  }
  v35 = v48;
  v34 = v49;
  v36 = sub_244E4E55C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v8, 1, 1, v36);
  sub_244DC0B1C(v50, (uint64_t)v5, type metadata accessor for IdentityAnalyticsReporter);
  v37 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  v38 = (v34 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = 0;
  *(_QWORD *)(v39 + 24) = 0;
  sub_244DC0EA0((uint64_t)v5, v39 + v37, type metadata accessor for IdentityAnalyticsReporter);
  *(_QWORD *)(v39 + v38) = a1;
  swift_bridgeObjectRetain();
  sub_244DB2DDC((uint64_t)v8, (uint64_t)&unk_2574175F0, v39);
  return swift_release();
}

uint64_t sub_244DBD344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[2] = a4;
  v5[3] = a5;
  v6 = type metadata accessor for IdentityAnalyticsReporter(0);
  v5[4] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[5] = v7;
  v5[6] = *(_QWORD *)(v7 + 64);
  v5[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DBD3A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = v0[6];
  v1 = v0[7];
  v3 = v0[5];
  v4 = v0[2];
  v5 = v0[3];
  v0[8] = *(_QWORD *)(v4 + *(int *)(v0[4] + 28));
  sub_244DC0B1C(v4, v1, type metadata accessor for IdentityAnalyticsReporter);
  v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v7 = (v2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = swift_allocObject();
  v0[9] = v8;
  sub_244DC0EA0(v1, v8 + v6, type metadata accessor for IdentityAnalyticsReporter);
  *(_QWORD *)(v8 + v7) = v5;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574150E8);
  sub_244DAF354((unint64_t *)&qword_257415500, &qword_2574150E8, MEMORY[0x24BDE4140]);
  sub_244E4E514();
  return swift_task_switch();
}

uint64_t sub_244DBD4B0()
{
  uint64_t v0;

  sub_244E4CA2C();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DBD508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a2;
  *(_QWORD *)(v3 + 24) = a3;
  return swift_task_switch();
}

uint64_t sub_244DBD520()
{
  uint64_t v0;
  _QWORD *v1;

  type metadata accessor for IdentityAnalyticsReporter(0);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v1;
  *v1 = v0;
  v1[1] = sub_244DBD598;
  return sub_244E4CAF8();
}

uint64_t sub_244DBD598()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_244DBD5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t inited;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257417628);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E512C0;
  *(_QWORD *)(inited + 32) = sub_244E4D5F0();
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = sub_244E4D728();
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 64) = sub_244E4D5B4();
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = sub_244E4D620();
  *(_QWORD *)(inited + 88) = v10;
  *(_QWORD *)(inited + 96) = sub_244E4D5E4();
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 112) = a2;
  *(_QWORD *)(inited + 120) = a3;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 128) = sub_244E4D440();
  *(_QWORD *)(inited + 136) = v12;
  *(_QWORD *)(inited + 144) = sub_244E4D284();
  *(_QWORD *)(inited + 152) = v13;
  *(_QWORD *)(inited + 160) = sub_244E4D488();
  *(_QWORD *)(inited + 168) = v14;
  v15 = v3[9];
  *(_QWORD *)(inited + 176) = v3[8];
  *(_QWORD *)(inited + 184) = v15;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 192) = sub_244E4D584();
  *(_QWORD *)(inited + 200) = v16;
  v17 = v3[11];
  *(_QWORD *)(inited + 208) = v3[10];
  *(_QWORD *)(inited + 216) = v17;
  swift_bridgeObjectRetain();
  v18 = sub_244DB27A8(inited);
  v19 = sub_244DBD6E0(v18);
  swift_bridgeObjectRelease();
  sub_244DBCE10(v19);
  return swift_bridgeObjectRelease();
}

unint64_t sub_244DBD6E0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  unint64_t result;
  int64_t i;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _OWORD *v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t *v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  _OWORD v38[2];

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257418430);
    v2 = (_QWORD *)sub_244E4E988();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v31 = v1 + 64;
  v3 = -1 << *(_BYTE *)(v1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(v1 + 64);
  v30 = (unint64_t)(63 - v3) >> 6;
  v6 = &v35;
  v7 = &v37;
  result = swift_bridgeObjectRetain();
  i = 0;
  v10 = MEMORY[0x24BEE0D00];
  if (v5)
    goto LABEL_10;
LABEL_11:
  v19 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v19 >= v30)
    goto LABEL_32;
  v20 = *(_QWORD *)(v31 + 8 * v19);
  v21 = i + 1;
  if (!v20)
  {
    v21 = i + 2;
    if (i + 2 >= v30)
      goto LABEL_32;
    v20 = *(_QWORD *)(v31 + 8 * v21);
    if (!v20)
    {
      v21 = i + 3;
      if (i + 3 >= v30)
        goto LABEL_32;
      v20 = *(_QWORD *)(v31 + 8 * v21);
      if (!v20)
      {
        v21 = i + 4;
        if (i + 4 >= v30)
          goto LABEL_32;
        v20 = *(_QWORD *)(v31 + 8 * v21);
        if (!v20)
        {
          v22 = i + 5;
          if (i + 5 < v30)
          {
            v20 = *(_QWORD *)(v31 + 8 * v22);
            if (v20)
            {
              v21 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v21 = v22 + 1;
              if (__OFADD__(v22, 1))
                goto LABEL_36;
              if (v21 >= v30)
                break;
              v20 = *(_QWORD *)(v31 + 8 * v21);
              ++v22;
              if (v20)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_244DC0E1C();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v32 = (v20 - 1) & v20;
  v18 = __clz(__rbit64(v20)) + (v21 << 6);
  for (i = v21; ; v18 = __clz(__rbit64(v5)) | (i << 6))
  {
    v23 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v18);
    v33 = *v23;
    v34 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415510);
    swift_dynamicCast();
    sub_244D6B058(v6, v7);
    sub_244D6B058(v7, v38);
    sub_244D6B058(v38, &v36);
    result = sub_244DC859C(v33, v34);
    v24 = result;
    if ((v25 & 1) != 0)
    {
      v11 = v7;
      v12 = v6;
      v13 = v1;
      v14 = i;
      v15 = v10;
      v16 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v16 = v33;
      v16[1] = v34;
      v10 = v15;
      i = v14;
      v1 = v13;
      v6 = v12;
      v7 = v11;
      v17 = (_OWORD *)(v2[7] + 32 * v24);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      result = (unint64_t)sub_244D6B058(&v36, v17);
      v5 = v32;
      if (!v32)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v26 = (uint64_t *)(v2[6] + 16 * result);
    *v26 = v33;
    v26[1] = v34;
    result = (unint64_t)sub_244D6B058(&v36, (_OWORD *)(v2[7] + 32 * result));
    v27 = v2[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_34;
    v2[2] = v29;
    v5 = v32;
    if (!v32)
      goto LABEL_11;
LABEL_10:
    v32 = (v5 - 1) & v5;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_244DBDA4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416F50);
    v2 = sub_244E4E988();
  }
  else
  {
    v2 = MEMORY[0x24BEE4B00];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_244D66F18(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_244D6B058(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_244D6B058(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_244D6B058(v36, v37);
    sub_244D6B058(v37, &v33);
    result = sub_244E4E850();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_244D6B058(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_244DC0E1C();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_244DBDE10@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _OWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  int *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v41 = a8;
  v42 = a2;
  v43 = a13;
  v44 = a14;
  v39 = a7;
  v40 = a12;
  v37 = a10;
  v38 = a11;
  v21 = sub_244E4C3A8();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = a1[1];
  *a9 = *a1;
  a9[1] = v25;
  a9[2] = a1[2];
  v26 = (int *)type metadata accessor for IdentityAnalyticsTransaction(0);
  sub_244DC0B1C(a2, (uint64_t)a9 + v26[5], type metadata accessor for IdentityAnalyticsReporter);
  v27 = (_QWORD *)((char *)a9 + v26[7]);
  *v27 = a3;
  v27[1] = a4;
  v27[2] = a5;
  v27[3] = a6;
  v28 = v39;
  sub_244DC0B1C(v39, (uint64_t)a9 + v26[6], type metadata accessor for IdentityAnalyticsRequestInformation);
  v29 = (_QWORD *)((char *)a9 + v26[8]);
  v30 = v37;
  *v29 = v41;
  v29[1] = v30;
  v45 = v38;
  v46 = v40;
  sub_244E4E3F4();
  sub_244E4C39C();
  sub_244E4C390();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  v31 = v45;
  v32 = v46;
  sub_244DC0B60(v28, type metadata accessor for IdentityAnalyticsRequestInformation);
  result = sub_244DC0B60(v42, type metadata accessor for IdentityAnalyticsReporter);
  v34 = (_QWORD *)((char *)a9 + v26[9]);
  *v34 = v31;
  v34[1] = v32;
  v35 = (_QWORD *)((char *)a9 + v26[10]);
  v36 = v44;
  *v35 = v43;
  v35[1] = v36;
  return result;
}

uint64_t sub_244DBDFDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  swift_bridgeObjectRetain();
  v3 = sub_244E4D488();
  v5 = v4;
  v6 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IdentityAnalyticsTransaction(0) + 36));
  v7 = *v6;
  v8 = v6[1];
  v20 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v19 = v7;
  *((_QWORD *)&v19 + 1) = v8;
  sub_244D6B058(&v19, &v17);
  swift_bridgeObjectRetain();
  LOBYTE(v8) = swift_isUniquelyReferenced_nonNull_native();
  v16 = a1;
  v9 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v17, v18);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  sub_244DC0218(*v11, v11[1], v3, v5, v8, &v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
  v13 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244DBCE10(v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DBE110()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  char *v101;
  void (*v102)(char *, uint64_t);
  NSObject *v103;
  os_log_type_t v104;
  int v105;
  uint64_t v106;
  uint8_t *v107;
  uint64_t v108;
  unint64_t v109;
  os_log_t v110;
  uint8_t *v111;
  uint64_t v112;
  _QWORD v113[2];
  uint8_t *v114;
  os_log_t v115;
  int v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v113 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244E4CEE8();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v113 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v113 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v113 - v12;
  v14 = (char *)(v0 + *(int *)(type metadata accessor for IdentityAnalyticsTransaction(0) + 24));
  v15 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v13, &v14[*(int *)(v15 + 28)], v4);
  v16(v11, v13, v4);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v11, v4);
  v18 = *MEMORY[0x24BDE4850];
  v118 = v13;
  if (v17 == v18)
  {
    v19 = sub_244E4D4DC();
    v21 = v20;
    v22 = sub_244E4D3B0();
    v23 = MEMORY[0x24BEE0D00];
    v123 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v122 = v22;
    *((_QWORD *)&v122 + 1) = v24;
    sub_244D6B058(&v122, &v120);
    v25 = MEMORY[0x24BEE4B00];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v119 = v25;
    v27 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v120, v121);
    MEMORY[0x24BDAC7A8](v27);
    v29 = (_QWORD *)((char *)v113 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v30 + 16))(v29);
    sub_244DC0218(*v29, v29[1], v19, v21, isUniquelyReferenced_nonNull_native, &v119);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    v31 = v119;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v32 = sub_244E4D530();
    v34 = v33;
    v123 = v23;
    *(_QWORD *)&v122 = 0;
    *((_QWORD *)&v122 + 1) = 0xE000000000000000;
    sub_244D6B058(&v122, &v120);
    v35 = swift_isUniquelyReferenced_nonNull_native();
    v119 = v31;
    v36 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v120, v121);
    MEMORY[0x24BDAC7A8](v36);
    v38 = (_QWORD *)((char *)v113 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v39 + 16))(v38);
    sub_244DC0218(*v38, v38[1], v32, v34, v35, &v119);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    v40 = v119;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = sub_244E4D410();
    v43 = v42;
    v44 = *v14;
    v123 = MEMORY[0x24BEE1328];
    LOBYTE(v122) = v44;
    sub_244D6B058(&v122, &v120);
    v45 = swift_isUniquelyReferenced_nonNull_native();
    v119 = v40;
    v46 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v120, v121);
    MEMORY[0x24BDAC7A8](v46);
    v48 = (char *)v113 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v49 + 16))(v48);
    sub_244DC0660(*v48, v41, v43, v45, &v119);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    v50 = v119;
LABEL_8:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v118, v4);
    return v50;
  }
  if (v17 == *MEMORY[0x24BDE4860])
  {
    v51 = sub_244E4D4DC();
    v53 = v52;
    v54 = sub_244E4D398();
    v123 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v122 = v54;
    *((_QWORD *)&v122 + 1) = v55;
    sub_244D6B058(&v122, &v120);
    v56 = MEMORY[0x24BEE4B00];
    v57 = swift_isUniquelyReferenced_nonNull_native();
    v119 = v56;
    v58 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v120, v121);
    MEMORY[0x24BDAC7A8](v58);
    v60 = (_QWORD *)((char *)v113 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v61 + 16))(v60);
    sub_244DC0218(*v60, v60[1], v51, v53, v57, &v119);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    v62 = v119;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v63 = sub_244E4D530();
    v65 = v64;
    v66 = sub_244E4D38C();
LABEL_7:
    v123 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v122 = v66;
    *((_QWORD *)&v122 + 1) = v67;
    sub_244D6B058(&v122, &v120);
    v80 = swift_isUniquelyReferenced_nonNull_native();
    v119 = v62;
    v81 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v120, v121);
    MEMORY[0x24BDAC7A8](v81);
    v83 = (_QWORD *)((char *)v113 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v84 + 16))(v83);
    sub_244DC0218(*v83, v83[1], v63, v65, v80, &v119);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    v85 = v119;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v86 = sub_244E4D458();
    v88 = v87;
    v89 = sub_244DBEA60(*((_QWORD *)v14 + 2));
    v123 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v122 = v89;
    *((_QWORD *)&v122 + 1) = v90;
    sub_244D6B058(&v122, &v120);
    v91 = swift_isUniquelyReferenced_nonNull_native();
    v119 = v85;
    v92 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v120, v121);
    MEMORY[0x24BDAC7A8](v92);
    v94 = (_QWORD *)((char *)v113 - ((v93 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v95 + 16))(v94);
    sub_244DC0218(*v94, v94[1], v86, v88, v91, &v119);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    v50 = v119;
    goto LABEL_8;
  }
  if (v17 == *MEMORY[0x24BDE4858])
  {
    v68 = sub_244E4D4DC();
    v70 = v69;
    v71 = sub_244E4D398();
    v123 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v122 = v71;
    *((_QWORD *)&v122 + 1) = v72;
    sub_244D6B058(&v122, &v120);
    v73 = MEMORY[0x24BEE4B00];
    v74 = swift_isUniquelyReferenced_nonNull_native();
    v119 = v73;
    v75 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v120, v121);
    MEMORY[0x24BDAC7A8](v75);
    v77 = (_QWORD *)((char *)v113 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v78 + 16))(v77);
    sub_244DC0218(*v77, v77[1], v68, v70, v74, &v119);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v120);
    v62 = v119;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v63 = sub_244E4D530();
    v65 = v79;
    v66 = sub_244E4D3A4();
    goto LABEL_7;
  }
  if (qword_257414418 != -1)
    swift_once();
  v97 = __swift_project_value_buffer(v1, (uint64_t)qword_257419E48);
  sub_244D91E3C(v97, (uint64_t)v3, &qword_2574145A0);
  v98 = sub_244E4DCD4();
  v99 = *(_QWORD *)(v98 - 8);
  v100 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v99 + 48))(v3, 1, v98);
  v101 = v118;
  if (v100 == 1)
  {
    v102 = *(void (**)(char *, uint64_t))(v5 + 8);
    v102(v118, v4);
    sub_244D66F54((uint64_t)v3, &qword_2574145A0);
  }
  else
  {
    v16(v8, v118, v4);
    v103 = sub_244E4DCBC();
    v104 = sub_244E4E67C();
    v105 = v104;
    if (os_log_type_enabled(v103, v104))
    {
      v106 = swift_slowAlloc();
      v116 = v105;
      v107 = (uint8_t *)v106;
      v117 = swift_slowAlloc();
      *(_QWORD *)&v122 = v117;
      v114 = v107;
      v115 = v103;
      *(_DWORD *)v107 = 136315138;
      v113[1] = v107 + 4;
      sub_244DC0AD4();
      v108 = sub_244E4EAA8();
      *(_QWORD *)&v120 = sub_244D9A70C(v108, v109, (uint64_t *)&v122);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      v102 = *(void (**)(char *, uint64_t))(v5 + 8);
      v102(v8, v4);
      v111 = v114;
      v110 = v115;
      _os_log_impl(&dword_244D61000, v115, (os_log_type_t)v116, "Unknown Identity analytics data transfer type: [ %s ]", v114, 0xCu);
      v112 = v117;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v112, -1, -1);
      MEMORY[0x2495283BC](v111, -1, -1);

    }
    else
    {
      v102 = *(void (**)(char *, uint64_t))(v5 + 8);
      v102(v8, v4);

    }
    v102(v101, v4);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v3, v98);
  }
  v102(v11, v4);
  return MEMORY[0x24BEE4B00];
}

uint64_t sub_244DBEA60(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v23 = MEMORY[0x24BEE4AF8];
    sub_244DA9754(0, v1, 0);
    v3 = 0;
    v22 = a1 + 32;
    do
    {
      v4 = (_QWORD *)(v22 + 16 * v3);
      v5 = v4[1];
      if ((v5 & 0x2000000000000000) != 0)
        v6 = HIBYTE(v5) & 0xF;
      else
        v6 = *v4 & 0xFFFFFFFFFFFFLL;
      swift_bridgeObjectRetain_n();
      if (v6)
      {
        while (1)
        {
          swift_bridgeObjectRetain();
          v7 = sub_244E4E460();
          v9 = v8;
          swift_bridgeObjectRelease();
          if (v7 == 40 && v9 == 0xE100000000000000)
            break;
          v10 = sub_244E4EAC0();
          swift_bridgeObjectRelease();
          if ((v10 & 1) != 0 || 4 * v6 == (unint64_t)sub_244E4E3D0() >> 14)
            goto LABEL_14;
        }
        swift_bridgeObjectRelease();
      }
LABEL_14:
      v11 = sub_244E4E478();
      v13 = v12;
      v15 = v14;
      v17 = v16;
      swift_bridgeObjectRelease_n();
      v19 = *(_QWORD *)(v23 + 16);
      v18 = *(_QWORD *)(v23 + 24);
      if (v19 >= v18 >> 1)
        sub_244DA9754(v18 > 1, v19 + 1, 1);
      ++v3;
      *(_QWORD *)(v23 + 16) = v19 + 1;
      v20 = (_QWORD *)(v23 + 32 * v19);
      v20[4] = v11;
      v20[5] = v13;
      v20[6] = v15;
      v20[7] = v17;
    }
    while (v3 != v1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417608);
  sub_244DAF354(&qword_257417610, &qword_257417608, MEMORY[0x24BEE12C8]);
  sub_244DC0A90();
  sub_244E4E490();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  return 123;
}

uint64_t sub_244DBECC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244E4CCFC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v0 + *(int *)(type metadata accessor for IdentityAnalyticsTransaction(0) + 24);
  v9 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8 + *(int *)(v9 + 32), v4);
  v10 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
  if (v10 == *MEMORY[0x24BDE4560])
  {
    v11 = sub_244E4D2C0();
LABEL_13:
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v12;
  }
  if (v10 != *MEMORY[0x24BDE4558])
  {
    if (qword_257414418 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v1, (uint64_t)qword_257419E48);
    sub_244D91E3C(v13, (uint64_t)v3, &qword_2574145A0);
    v14 = sub_244E4DCD4();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v3, 1, v14) == 1)
    {
      sub_244D66F54((uint64_t)v3, &qword_2574145A0);
    }
    else
    {
      v16 = sub_244E4DCBC();
      v17 = sub_244E4E67C();
      if (os_log_type_enabled(v16, v17))
      {
        v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v18 = 0;
        _os_log_impl(&dword_244D61000, v16, v17, "Unknown Identity analytics documentSubType", v18, 2u);
        MEMORY[0x2495283BC](v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v3, v14);
    }
    v11 = sub_244E4D2CC();
    goto LABEL_13;
  }
  return sub_244E4D2CC();
}

uint64_t sub_244DBEF20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  __int128 v104;
  uint64_t v105;

  v1 = sub_244DBE110();
  v2 = sub_244E4D440();
  v4 = v3;
  v5 = sub_244E4D284();
  v6 = MEMORY[0x24BEE0D00];
  v105 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v104 = v5;
  *((_QWORD *)&v104 + 1) = v7;
  sub_244D6B058(&v104, &v102);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v101 = v1;
  v9 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  sub_244DC0218(*v11, v11[1], v2, v4, isUniquelyReferenced_nonNull_native, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v13 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = sub_244E4D4A0();
  v16 = v15;
  v17 = sub_244DBECC4();
  v105 = v6;
  *(_QWORD *)&v104 = v17;
  *((_QWORD *)&v104 + 1) = v18;
  sub_244D6B058(&v104, &v102);
  v19 = swift_isUniquelyReferenced_nonNull_native();
  v101 = v13;
  v20 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (uint64_t *)((char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v23 + 16))(v22);
  sub_244DC0218(*v22, v22[1], v14, v16, v19, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v24 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = sub_244E4D4AC();
  v27 = v26;
  v28 = (int *)type metadata accessor for IdentityAnalyticsTransaction(0);
  v29 = (_QWORD *)((char *)v0 + v28[7]);
  v30 = *v29;
  v31 = v29[1];
  v105 = v6;
  *(_QWORD *)&v104 = v30;
  *((_QWORD *)&v104 + 1) = v31;
  sub_244D6B058(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v31) = swift_isUniquelyReferenced_nonNull_native();
  v101 = v24;
  v32 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (uint64_t *)((char *)&v100 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v35 + 16))(v34);
  sub_244DC0218(*v34, v34[1], v25, v27, v31, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v36 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v37 = sub_244E4D4F4();
  v39 = v38;
  v40 = v29[2];
  v41 = v29[3];
  v105 = v6;
  *(_QWORD *)&v104 = v40;
  *((_QWORD *)&v104 + 1) = v41;
  sub_244D6B058(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v41) = swift_isUniquelyReferenced_nonNull_native();
  v101 = v36;
  v42 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (uint64_t *)((char *)&v100 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v45 + 16))(v44);
  sub_244DC0218(*v44, v44[1], v37, v39, v41, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v46 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v47 = sub_244E4D560();
  v49 = v48;
  v50 = v0[4];
  v51 = v0[5];
  v105 = v6;
  *(_QWORD *)&v104 = v50;
  *((_QWORD *)&v104 + 1) = v51;
  sub_244D6B058(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v51) = swift_isUniquelyReferenced_nonNull_native();
  v101 = v46;
  v52 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v52);
  v54 = (uint64_t *)((char *)&v100 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v55 + 16))(v54);
  sub_244DC0218(*v54, v54[1], v47, v49, v51, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v56 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v57 = sub_244E4D59C();
  v59 = v58;
  v60 = (_QWORD *)((char *)v0 + v28[8]);
  v61 = *v60;
  v62 = v60[1];
  v105 = v6;
  *(_QWORD *)&v104 = v61;
  *((_QWORD *)&v104 + 1) = v62;
  sub_244D6B058(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v62) = swift_isUniquelyReferenced_nonNull_native();
  v101 = v56;
  v63 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v63);
  v65 = (uint64_t *)((char *)&v100 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v66 + 16))(v65);
  sub_244DC0218(*v65, v65[1], v57, v59, v62, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v67 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v68 = sub_244E4D590();
  v70 = v69;
  v71 = v0[2];
  v72 = v0[3];
  v105 = v6;
  *(_QWORD *)&v104 = v71;
  *((_QWORD *)&v104 + 1) = v72;
  sub_244D6B058(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v72) = swift_isUniquelyReferenced_nonNull_native();
  v101 = v67;
  v73 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v73);
  v75 = (uint64_t *)((char *)&v100 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v76 + 16))(v75);
  sub_244DC0218(*v75, v75[1], v68, v70, v72, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v77 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v78 = sub_244E4D4B8();
  v80 = v79;
  v81 = sub_244DBEA60(*(_QWORD *)((char *)v0 + v28[6] + 8));
  v105 = v6;
  *(_QWORD *)&v104 = v81;
  *((_QWORD *)&v104 + 1) = v82;
  sub_244D6B058(&v104, &v102);
  LOBYTE(v72) = swift_isUniquelyReferenced_nonNull_native();
  v101 = v77;
  v83 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v83);
  v85 = (uint64_t *)((char *)&v100 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v86 + 16))(v85);
  sub_244DC0218(*v85, v85[1], v78, v80, v72, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v87 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v88 = sub_244E4D584();
  v90 = v89;
  v91 = (_QWORD *)((char *)v0 + v28[10]);
  v92 = *v91;
  v93 = v91[1];
  v105 = v6;
  *(_QWORD *)&v104 = v92;
  *((_QWORD *)&v104 + 1) = v93;
  sub_244D6B058(&v104, &v102);
  swift_bridgeObjectRetain();
  LOBYTE(v93) = swift_isUniquelyReferenced_nonNull_native();
  v101 = v87;
  v94 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v102, v103);
  MEMORY[0x24BDAC7A8](v94);
  v96 = (uint64_t *)((char *)&v100 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v97 + 16))(v96);
  sub_244DC0218(*v96, v96[1], v88, v90, v93, &v101);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v102);
  v98 = v101;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v98;
}

uint64_t sub_244DBF64C@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  _OWORD *v44;
  _OWORD v45[2];
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  v44 = a1;
  v2 = type metadata accessor for IdentityAnalyticsRequestInformation(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for IdentityAnalyticsReporter(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v45[0] = *v1;
  v45[1] = v8;
  v46 = v1[2];
  v47 = v45[0];
  v48 = v8;
  v49 = v46;
  v9 = (int *)type metadata accessor for IdentityAnalyticsTransaction(0);
  sub_244DC0B1C((uint64_t)v1 + v9[5], (uint64_t)v7, type metadata accessor for IdentityAnalyticsReporter);
  v10 = v9[6];
  v11 = (uint64_t *)((char *)v1 + v9[7]);
  v12 = v11[1];
  v42 = *v11;
  v43 = v4;
  v13 = v11[3];
  v40 = v11[2];
  sub_244DC0B1C((uint64_t)v1 + v10, (uint64_t)v4, type metadata accessor for IdentityAnalyticsRequestInformation);
  v14 = v9[9];
  v15 = (uint64_t *)((char *)v1 + v9[8]);
  v16 = v15[1];
  v38 = *v15;
  v18 = *(_QWORD *)((char *)v1 + v14);
  v17 = *(_QWORD *)((char *)v1 + v14 + 8);
  sub_244D9A678((uint64_t)&v47);
  sub_244D9A678((uint64_t)&v48);
  sub_244D9A678((uint64_t)&v49);
  if ((v17 & 0x2000000000000000) != 0)
    v19 = HIBYTE(v17) & 0xF;
  else
    v19 = v18 & 0xFFFFFFFFFFFFLL;
  v41 = v12;
  swift_bridgeObjectRetain();
  v39 = v13;
  swift_bridgeObjectRetain();
  v37 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19)
  {
    while (1)
    {
      swift_bridgeObjectRetain();
      v20 = sub_244E4E460();
      v22 = v21;
      swift_bridgeObjectRelease();
      if (v20 == 46 && v22 == 0xE100000000000000)
        break;
      v23 = sub_244E4EAC0();
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0 || 4 * v19 == (unint64_t)sub_244E4E3D0() >> 14)
        goto LABEL_12;
    }
    swift_bridgeObjectRelease();
  }
LABEL_12:
  v24 = sub_244E4E478();
  v26 = v25;
  v28 = v27;
  v30 = v29;
  swift_bridgeObjectRelease();
  v31 = MEMORY[0x24952763C](v24, v26, v28, v30);
  v33 = v32;
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)((char *)v1 + v9[10]);
  v35 = swift_bridgeObjectRetain();
  return sub_244DBDE10(v45, (uint64_t)v7, v42, v41, v40, v39, (uint64_t)v43, v38, v44, v37, v31, v33, v34, v35);
}

uint64_t sub_244DBF904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;

  v4 = sub_244DBEF20();
  v5 = sub_244E4D5F0();
  v7 = v6;
  v8 = sub_244E4D728();
  v9 = MEMORY[0x24BEE0D00];
  v42 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v41 = v8;
  *((_QWORD *)&v41 + 1) = v10;
  sub_244D6B058(&v41, &v39);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v38 = v4;
  v12 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v39, v40);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v15 + 16))(v14);
  sub_244DC0218(*v14, v14[1], v5, v7, isUniquelyReferenced_nonNull_native, &v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  v16 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v17 = sub_244E4D5B4();
  v19 = v18;
  v20 = sub_244E4D620();
  v42 = v9;
  *(_QWORD *)&v41 = v20;
  *((_QWORD *)&v41 + 1) = v21;
  sub_244D6B058(&v41, &v39);
  v22 = swift_isUniquelyReferenced_nonNull_native();
  v38 = v16;
  v23 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v39, v40);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t *)((char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_244DC0218(*v25, v25[1], v17, v19, v22, &v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  v27 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v28 = sub_244E4D5E4();
  v30 = v29;
  v42 = v9;
  *(_QWORD *)&v41 = a1;
  *((_QWORD *)&v41 + 1) = a2;
  sub_244D6B058(&v41, &v39);
  swift_bridgeObjectRetain();
  LOBYTE(a2) = swift_isUniquelyReferenced_nonNull_native();
  v38 = v27;
  v31 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v39, v40);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (uint64_t *)((char *)&v37 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v34 + 16))(v33);
  sub_244DC0218(*v33, v33[1], v28, v30, a2, &v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  v35 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244DBDFDC(v35);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DBFB98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;

  v0 = sub_244DBEF20();
  v1 = sub_244E4D5F0();
  v3 = v2;
  v4 = sub_244E4D764();
  v5 = MEMORY[0x24BEE0D00];
  v30 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v29 = v4;
  *((_QWORD *)&v29 + 1) = v6;
  sub_244D6B058(&v29, &v27);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v26 = v0;
  v8 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v27, v28);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v11 + 16))(v10);
  sub_244DC0218(*v10, v10[1], v1, v3, isUniquelyReferenced_nonNull_native, &v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  v12 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = sub_244E4D5B4();
  v15 = v14;
  v16 = sub_244E4D608();
  v30 = v5;
  *(_QWORD *)&v29 = v16;
  *((_QWORD *)&v29 + 1) = v17;
  sub_244D6B058(&v29, &v27);
  v18 = swift_isUniquelyReferenced_nonNull_native();
  v26 = v12;
  v19 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v27, v28);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  sub_244DC0218(*v21, v21[1], v13, v15, v18, &v26);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  v23 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244DBDFDC(v23);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DBFD60(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574154D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E54AB0;
  *(_QWORD *)(inited + 32) = sub_244E4D5F0();
  *(_QWORD *)(inited + 40) = v5;
  v6 = sub_244E4D764();
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 80) = sub_244E4D440();
  *(_QWORD *)(inited + 88) = v9;
  v10 = sub_244E4D284();
  *(_QWORD *)(inited + 120) = v7;
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 128) = sub_244E4D5B4();
  *(_QWORD *)(inited + 136) = v12;
  v13 = sub_244E4D614();
  *(_QWORD *)(inited + 168) = v7;
  *(_QWORD *)(inited + 144) = v13;
  *(_QWORD *)(inited + 152) = v14;
  *(_QWORD *)(inited + 176) = sub_244E4D578();
  *(_QWORD *)(inited + 184) = v15;
  *(_QWORD *)(inited + 216) = v7;
  *(_QWORD *)(inited + 192) = a1;
  *(_QWORD *)(inited + 200) = a2;
  swift_bridgeObjectRetain();
  v16 = sub_244DB2654(inited);
  sub_244DBDFDC(v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DBFE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574154D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E54AC0;
  *(_QWORD *)(inited + 32) = sub_244E4D5F0();
  *(_QWORD *)(inited + 40) = v9;
  v10 = sub_244E4D80C();
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v12;
  *(_QWORD *)(inited + 80) = sub_244E4D5B4();
  *(_QWORD *)(inited + 88) = v13;
  *(_QWORD *)(inited + 120) = v11;
  *(_QWORD *)(inited + 96) = a3;
  *(_QWORD *)(inited + 104) = a4;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 128) = sub_244E4D5CC();
  *(_QWORD *)(inited + 136) = v14;
  *(_QWORD *)(inited + 168) = v11;
  *(_QWORD *)(inited + 144) = a1;
  *(_QWORD *)(inited + 152) = a2;
  swift_bridgeObjectRetain();
  v15 = sub_244DB2654(inited);
  sub_244DBDFDC(v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DBFF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574154D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E54AC0;
  *(_QWORD *)(inited + 32) = sub_244E4D5F0();
  *(_QWORD *)(inited + 40) = v9;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 80) = sub_244E4D5B4();
  *(_QWORD *)(inited + 88) = v11;
  v12 = sub_244E4D608();
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 96) = v12;
  *(_QWORD *)(inited + 104) = v13;
  *(_QWORD *)(inited + 128) = sub_244E4D5E4();
  *(_QWORD *)(inited + 136) = v14;
  *(_QWORD *)(inited + 168) = v10;
  *(_QWORD *)(inited + 144) = a3;
  *(_QWORD *)(inited + 152) = a4;
  swift_bridgeObjectRetain();
  v15 = sub_244DB2654(inited);
  sub_244DBDFDC(v15);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DBFFD0(uint64_t a1, uint64_t a2)
{
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574154D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E54AC0;
  *(_QWORD *)(inited + 32) = sub_244E4D5F0();
  *(_QWORD *)(inited + 40) = v5;
  v6 = sub_244E4D734();
  v7 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = v6;
  *(_QWORD *)(inited + 56) = v8;
  *(_QWORD *)(inited + 80) = sub_244E4D5B4();
  *(_QWORD *)(inited + 88) = v9;
  v10 = sub_244E4D608();
  *(_QWORD *)(inited + 120) = v7;
  *(_QWORD *)(inited + 96) = v10;
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 128) = sub_244E4D578();
  *(_QWORD *)(inited + 136) = v12;
  *(_QWORD *)(inited + 168) = v7;
  *(_QWORD *)(inited + 144) = a1;
  *(_QWORD *)(inited + 152) = a2;
  swift_bridgeObjectRetain();
  v13 = sub_244DB2654(inited);
  sub_244DBDFDC(v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DC008C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;
  unint64_t v25;
  __int128 v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574154D8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E54AD0;
  *(_QWORD *)(inited + 32) = sub_244E4D5F0();
  *(_QWORD *)(inited + 40) = v9;
  v10 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  *(_QWORD *)(inited + 80) = sub_244E4D5B4();
  *(_QWORD *)(inited + 88) = v11;
  v12 = sub_244E4D614();
  *(_QWORD *)(inited + 120) = v10;
  *(_QWORD *)(inited + 96) = v12;
  *(_QWORD *)(inited + 104) = v13;
  v14 = sub_244DB2654(inited);
  if (a4)
  {
    swift_bridgeObjectRetain();
    v15 = sub_244E4D5CC();
    v17 = v16;
    v29 = v10;
    *(_QWORD *)&v28 = a3;
    *((_QWORD *)&v28 + 1) = a4;
    sub_244D6B058(&v28, &v26);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v14;
    v19 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v26, v27);
    MEMORY[0x24BDAC7A8](v19);
    v21 = (uint64_t *)((char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v22 + 16))(v21);
    sub_244DC0218(*v21, v21[1], v15, v17, isUniquelyReferenced_nonNull_native, &v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v26);
    v14 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_244DBDFDC(v14);
  return swift_bridgeObjectRelease();
}

_OWORD *sub_244DC0218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, _QWORD *a6)
{
  uint64_t v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  _OWORD *v20;
  _OWORD *result;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v10 = MEMORY[0x24BEE0D00];
  v29 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v28 = a1;
  *((_QWORD *)&v28 + 1) = a2;
  v11 = (_QWORD *)*a6;
  v13 = sub_244DC859C(a3, a4);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  v17 = v12;
  v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    v19 = (_QWORD *)*a6;
    if ((v17 & 1) != 0)
    {
LABEL_8:
      v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_244D6B058(&v28, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_244DE5784();
    goto LABEL_7;
  }
  sub_244DE1B98(v16, a5 & 1);
  v22 = sub_244DC859C(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    result = (_OWORD *)sub_244E4EAF0();
    __break(1u);
    return result;
  }
  v13 = v22;
  v19 = (_QWORD *)*a6;
  if ((v17 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v24 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v28, v10);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_244DC0A10(v13, a3, a4, *v26, v26[1], v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t sub_244DC03B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for IdentityAnalyticsReporter(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v0 + v3 + *(int *)(v1 + 24);
  v5 = sub_244E4CB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244DC0474(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v4 = *(_QWORD *)(type metadata accessor for IdentityAnalyticsReporter(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(_QWORD *)(v1 + 24);
  v8 = v1 + v5;
  v9 = *(_QWORD *)(v1 + ((*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFF8));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_244D71068;
  return sub_244DBD344(a1, v6, v7, v8, v9);
}

uint64_t sub_244DC0518()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for IdentityAnalyticsReporter(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_244E4CB28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244DC05D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v2 = *(_QWORD *)(type metadata accessor for IdentityAnalyticsReporter(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = v0 + v3;
  v5 = *(_QWORD *)(v0 + ((*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFF8));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_244D70150;
  v6[2] = v4;
  v6[3] = v5;
  return swift_task_switch();
}

_OWORD *sub_244DC0660(char a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  LOBYTE(v27) = a1;
  v9 = MEMORY[0x24BEE1328];
  v28 = MEMORY[0x24BEE1328];
  v10 = (_QWORD *)*a5;
  v12 = sub_244DC859C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  v16 = v11;
  v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    v18 = (_QWORD *)*a5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_OWORD *)(v18[7] + 32 * v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return sub_244D6B058(&v27, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_244DE5784();
    goto LABEL_7;
  }
  sub_244DE1B98(v15, a4 & 1);
  v21 = sub_244DC859C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    result = (_OWORD *)sub_244E4EAF0();
    __break(1u);
    return result;
  }
  v12 = v21;
  v18 = (_QWORD *)*a5;
  if ((v16 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v23 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v27, v9);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v25);
  sub_244DC0990(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_244DC07F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v9;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  *(_QWORD *)&v27 = a1;
  v9 = MEMORY[0x24BEE1768];
  v28 = MEMORY[0x24BEE1768];
  v10 = (_QWORD *)*a5;
  v12 = sub_244DC859C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  v16 = v11;
  v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    v18 = (_QWORD *)*a5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = (_OWORD *)(v18[7] + 32 * v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return sub_244D6B058(&v27, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_244DE5784();
    goto LABEL_7;
  }
  sub_244DE1B98(v15, a4 & 1);
  v21 = sub_244DC859C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    result = (_OWORD *)sub_244E4EAF0();
    __break(1u);
    return result;
  }
  v12 = v21;
  v18 = (_QWORD *)*a5;
  if ((v16 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  v23 = __swift_mutable_project_boxed_opaque_existential_0((uint64_t)&v27, v9);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (uint64_t *)((char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_244DC0B9C(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_244DC0990(unint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  LOBYTE(v11) = a4;
  v12 = MEMORY[0x24BEE1328];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_244D6B058(&v11, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_244DC0A10(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v7;
  _OWORD *result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v13 = MEMORY[0x24BEE0D00];
  *(_QWORD *)&v12 = a4;
  *((_QWORD *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  v7 = (_QWORD *)(a6[6] + 16 * a1);
  *v7 = a2;
  v7[1] = a3;
  result = sub_244D6B058(&v12, (_OWORD *)(a6[7] + 32 * a1));
  v9 = a6[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a6[2] = v11;
  return result;
}

unint64_t sub_244DC0A90()
{
  unint64_t result;

  result = qword_257417618;
  if (!qword_257417618)
  {
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE1E38], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_257417618);
  }
  return result;
}

unint64_t sub_244DC0AD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257417620;
  if (!qword_257417620)
  {
    v1 = sub_244E4CEE8();
    result = MEMORY[0x2495282F0](MEMORY[0x24BDE4878], v1);
    atomic_store(result, (unint64_t *)&qword_257417620);
  }
  return result;
}

uint64_t sub_244DC0B1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_244DC0B60(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *sub_244DC0B9C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  *(_QWORD *)&v11 = a4;
  v12 = MEMORY[0x24BEE1768];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_244D6B058(&v11, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_244DC0C1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = a2;
  v40 = a3;
  v6 = sub_244E4C3FC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415068);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_244E4C3A8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *a1;
  v37 = a1[1];
  v38 = v17;
  v18 = a1[2];
  v35 = a1[3];
  v36 = v18;
  v19 = a1[4];
  v33 = a1[5];
  v34 = v19;
  sub_244E4C39C();
  v20 = sub_244E4C390();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_244E4C3F0();
  sub_244E4C3E4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23 = sub_244E4C3D8();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v12, 1, v23) == 1)
  {
    result = sub_244D66F54((uint64_t)v12, &qword_257415068);
    v26 = 0;
    v27 = 0xE000000000000000;
  }
  else
  {
    v26 = sub_244E4C3CC();
    v27 = v28;
    result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v12, v23);
  }
  v29 = v37;
  *a4 = v38;
  a4[1] = v29;
  v30 = v35;
  a4[2] = v36;
  a4[3] = v30;
  v31 = v33;
  a4[4] = v34;
  a4[5] = v31;
  v32 = v40;
  a4[6] = v39;
  a4[7] = v32;
  a4[8] = v20;
  a4[9] = v22;
  a4[10] = v26;
  a4[11] = v27;
  return result;
}

uint64_t sub_244DC0E1C()
{
  return swift_release();
}

uint64_t sub_244DC0E28(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244D70150;
  return sub_244DBC634(a1, v4, v5, v7, v6);
}

uint64_t sub_244DC0EA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_244DC0EE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257416F70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_12Tm()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_244DC0F5C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244D71068;
  return sub_244DB9A18(a1, v4, v5, v7, v6);
}

uint64_t sub_244DC0FD4()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for IdentityAnalyticsMerchantInformation()
{
  return &type metadata for IdentityAnalyticsMerchantInformation;
}

void sub_244DC1008(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_BYTE *);
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  char v23;
  _BYTE v24[344];
  _BYTE v25[344];
  _BYTE v26[344];
  _QWORD v27[6];

  v3 = v2;
  v6 = sub_244E4C714();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C570();
  sub_244E4C6C0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v10 = *(_QWORD *)(v3 + 48);
  v11 = *(_QWORD *)(v3 + 56);
  v12 = *(_QWORD *)(v3 + 64);
  v13 = *(void **)(v3 + 72);
  v27[0] = a1;
  v27[1] = a2;
  v27[2] = v10;
  v27[3] = v11;
  v27[4] = v12;
  v27[5] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = v13;
  v15 = (void *)sub_244DABD48((uint64_t)v27);
  v17 = v16;
  if ((v16 & 0x100) != 0)
  {
    (*(void (**)(void))(v3 + 24))();
    v18 = *(void (**)(_BYTE *))(v3 + 80);
    v22 = v15;
    v23 = v17;
    sub_244DB4DB4((uint64_t)&v22);
    sub_244D70C60((uint64_t)&v22, (uint64_t)v24, &qword_257416D40);
    memcpy(v25, v24, 0x152uLL);
    nullsub_1(v25);
    sub_244DB1BD4(v25, v26);
    v18(v26);
  }
  else
  {
    type metadata accessor for SPRReaderDelegate();
    v19 = swift_allocObject();
    *(_BYTE *)(v19 + 48) = 0;
    *(_QWORD *)(v19 + 56) = v14;
    *(_QWORD *)(v19 + 16) = sub_244DC40FC;
    *(_QWORD *)(v19 + 24) = v3;
    *(_QWORD *)(v19 + 32) = sub_244DC4100;
    *(_QWORD *)(v19 + 40) = v3;
    swift_retain_n();
    v20 = v14;
    sub_244D9573C(v15, v19);
    swift_release();
    v21 = v15;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_244D9BE5C(v15, v17, BYTE1(v17) & 1);
  sub_244D9BE5C(v15, v17, BYTE1(v17) & 1);
}

uint64_t sub_244DC11E4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t result;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[44];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v22 - v8;
  if (qword_257414400 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
  sub_244D91E3C(v10, (uint64_t)v9, &qword_2574145A0);
  v11 = sub_244E4DCD4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v9, 1, v11) == 1)
  {
    sub_244D6412C((uint64_t)v9);
    if ((*(_BYTE *)(v2 + 16) & 1) == 0)
    {
LABEL_5:
      sub_244D91E3C(v10, (uint64_t)v7, &qword_2574145A0);
      if (v13(v7, 1, v11) == 1)
      {
        sub_244D6412C((uint64_t)v7);
      }
      else
      {
        sub_244DC3CD4((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244DAF470);
        sub_244DC3CD4((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244DAF470);
        v15 = sub_244E4DCBC();
        v16 = sub_244E4E670();
        if (os_log_type_enabled(v15, v16))
        {
          v17 = (uint8_t *)swift_slowAlloc();
          v24 = swift_slowAlloc();
          v26[0] = v24;
          v23 = v17;
          *(_DWORD *)v17 = 136315138;
          v22 = v17 + 4;
          sub_244DB1884();
          v25 = sub_244D9A70C(v18, v19, v26);
          sub_244E4E7E4();
          swift_bridgeObjectRelease();
          sub_244DC3CD4((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244DAF654);
          sub_244DC3CD4((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244DAF654);
          v20 = v23;
          _os_log_impl(&dword_244D61000, v15, v16, "%s", v23, 0xCu);
          v21 = v24;
          swift_arrayDestroy();
          MEMORY[0x2495283BC](v21, -1, -1);
          MEMORY[0x2495283BC](v20, -1, -1);

        }
        else
        {

          sub_244DC3CD4((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244DAF654);
          sub_244DC3CD4((uint64_t)a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244DAF654);
        }
        (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
      }
      return (*(uint64_t (**)(void *))(v2 + 80))(a1);
    }
  }
  else
  {
    sub_244D8C8B0(v2, 0xD000000000000015, 0x8000000244E588E0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
    if ((*(_BYTE *)(v2 + 16) & 1) == 0)
      goto LABEL_5;
  }
  sub_244DB1BD4(a1, v26);
  result = sub_244DB0354((uint64_t)v26);
  if ((_DWORD)result == 1)
  {
    *(_BYTE *)(v2 + 16) = 0;
    return sub_244DC1544(2);
  }
  return result;
}

uint64_t sub_244DC1544(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  int v16;
  void (*v17)(_BYTE *);
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE v30[344];
  uint64_t v31;
  char v32;
  _BYTE v33[344];
  _BYTE v34[344];
  _BYTE v35[344];
  _BYTE v36[352];

  v2 = v1;
  v29 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v9 = (char *)&v27 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v27 - v10;
  if (qword_257414400 != -1)
    swift_once();
  v12 = __swift_project_value_buffer(v3, (uint64_t)qword_257419E00);
  sub_244D91E3C(v12, (uint64_t)v11, &qword_2574145A0);
  v13 = sub_244E4DCD4();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v11, 1, v13) == 1)
  {
    sub_244D6412C((uint64_t)v11);
    v16 = *(unsigned __int8 *)(v2 + 16);
    if ((v16 & 1) == 0)
    {
LABEL_5:
      v28 = v14;
      *(_BYTE *)(v2 + 16) = 1;
      v17 = *(void (**)(_BYTE *))(v2 + 80);
      sub_244DC4088((uint64_t)v30);
      sub_244DB1BD4(v30, v36);
      v17(v36);
      sub_244D95D6C();
      v31 = v29;
      v32 = 0;
      sub_244DB4DB4((uint64_t)&v31);
      sub_244D70C60((uint64_t)&v31, (uint64_t)v33, &qword_257416D40);
      memcpy(v34, v33, 0x152uLL);
      nullsub_1(v34);
      sub_244DB1BD4(v34, v35);
      v18 = ((uint64_t (*)(_BYTE *))v17)(v35);
      (*(void (**)(uint64_t))(v2 + 24))(v18);
      sub_244D91E3C(v12, (uint64_t)v9, &qword_2574145A0);
      if (v15(v9, 1, v13) == 1)
      {
        v19 = (uint64_t)v9;
LABEL_10:
        sub_244D6412C(v19);
        return v16 ^ 1u;
      }
      v20 = sub_244E4DCBC();
      v21 = sub_244E4E688();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_244D61000, v20, v21, "readTask cancelled", v22, 2u);
        MEMORY[0x2495283BC](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v13);
      return v16 ^ 1u;
    }
  }
  else
  {
    sub_244D8C8B0(v2, 0xD000000000000014, 0x8000000244E588C0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    v16 = *(unsigned __int8 *)(v2 + 16);
    if ((v16 & 1) == 0)
      goto LABEL_5;
  }
  sub_244D91E3C(v12, (uint64_t)v6, &qword_2574145A0);
  if (v15(v6, 1, v13) == 1)
  {
    v19 = (uint64_t)v6;
    goto LABEL_10;
  }
  v23 = sub_244E4DCBC();
  v24 = sub_244E4E67C();
  if (os_log_type_enabled(v23, v24))
  {
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_244D61000, v23, v24, "readTask already cancelled", v25, 2u);
    MEMORY[0x2495283BC](v25, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
  return v16 ^ 1u;
}

uint64_t sub_244DC18D8()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRReadTask()
{
  return objc_opt_self();
}

uint64_t sub_244DC193C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v2 + 48) == 1)
  {
    if (qword_257414400 != -1)
      swift_once();
    v8 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
    sub_244D91E3C(v8, (uint64_t)v7, &qword_2574145A0);
    v9 = sub_244E4DCD4();
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
    {
      return sub_244D6412C((uint64_t)v7);
    }
    else
    {
      v12 = sub_244E4DCBC();
      v13 = sub_244E4E688();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v14 = 0;
        _os_log_impl(&dword_244D61000, v12, v13, "Abort returning result, read has already completed", v14, 2u);
        MEMORY[0x2495283BC](v14, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    }
  }
  else
  {
    *(_BYTE *)(v2 + 48) = 1;
    (*(void (**)(uint64_t))(v2 + 32))(v5);
    return (*(uint64_t (**)(uint64_t))(v2 + 16))(a1);
  }
}

uint64_t sub_244DC1AD4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  uint64_t v15;
  char v16;
  _BYTE v18[344];
  _BYTE v19[344];
  _BYTE v20[344];
  _BYTE v21[344];
  _BYTE v22[344];
  _BYTE v23[337];

  v2 = v1;
  v4 = sub_244E4C714();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_244E4C708();
  sub_244E4C6A8();
  (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
  v8 = objc_msgSend(a1, sel_vasResponses);
  sub_244DC40C4(0, &qword_2574178D8);
  v9 = sub_244E4E4CC();

  v10 = *(_QWORD *)(v2 + 56);
  v11 = sub_244E4CCC0();
  v12 = sub_244DACDE0(v9, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244DAD5C4(a1, v10, v12);
  memcpy(v23, v21, sizeof(v23));
  swift_bridgeObjectRelease();
  v13 = sub_244DC1CEC(a1);
  if (v14 <= 0xFBu)
  {
    v15 = v13;
    v16 = v14;
    memcpy(v20, v23, 0x151uLL);
    nullsub_1(v20);
    sub_244D70C60((uint64_t)v20, (uint64_t)v22, &qword_257414F80);
    sub_244D6BA4C((uint64_t)v21);
    sub_244DC2C88(v15, v16, (uint64_t)v22);
  }
  else
  {
    memcpy(v18, v23, 0x151uLL);
    sub_244DB5C4C((uint64_t)v18);
    sub_244D70C60((uint64_t)v18, (uint64_t)v19, &qword_257416D40);
    memcpy(v20, v19, 0x152uLL);
    nullsub_1(v20);
    sub_244DB1BD4(v20, v22);
    sub_244D6BA4C((uint64_t)v21);
    sub_244DC193C((uint64_t)v22);
  }
  sub_244D7E9EC((uint64_t)v21);
  return sub_244D7E9EC((uint64_t)v21);
}

uint64_t sub_244DC1CEC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_QWORD, _QWORD, _QWORD);
  uint64_t v18;
  void *v19;
  unsigned int (*v20)(_QWORD, _QWORD, _QWORD);
  char *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  void *v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(uint64_t, uint64_t, uint64_t);
  unsigned int v36;
  uint64_t v37;
  void *v38;
  void *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  _QWORD *v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  id v61;
  NSObject *v62;
  os_log_type_t v63;
  char *v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint8_t *v69;
  _QWORD v70[2];
  uint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  id v75;
  void *v76;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v4);
  v72 = (uint8_t *)v70 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v71 = (uint64_t)v70 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v73 = (uint64_t)v70 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v70 - v13;
  if (qword_257414400 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v3, (uint64_t)qword_257419E00);
  sub_244D91E3C(v15, (uint64_t)v14, &qword_2574145A0);
  v16 = sub_244E4DCD4();
  v74 = *(_QWORD *)(v16 - 8);
  v17 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v74 + 48);
  if (v17(v14, 1, v16) == 1)
  {
    sub_244D6412C((uint64_t)v14);
  }
  else
  {
    v70[1] = v1;
    v18 = v15;
    v19 = a1;
    v20 = v17;
    v21 = v6;
    v22 = v16;
    v23 = sub_244E4DCBC();
    v24 = sub_244E4E670();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_244D61000, v23, v24, "checkSuccessExceptions", v25, 2u);
      MEMORY[0x2495283BC](v25, -1, -1);
    }

    v16 = v22;
    (*(void (**)(char *, uint64_t))(v74 + 8))(v14, v22);
    v6 = v21;
    v17 = v20;
    a1 = v19;
    v15 = v18;
  }
  if (objc_msgSend(a1, sel_payAppletFinalStatus) == 7)
  {
    type metadata accessor for ReadError(0);
    v75 = objc_msgSend(a1, sel_readError);
    sub_244DC32F8(MEMORY[0x24BEE4AF8]);
    sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
    sub_244E4C1C8();
    v26 = v76;
    v27 = v73;
    sub_244D91E3C(v15, v73, &qword_2574145A0);
    if (v17(v27, 1, v16) == 1)
    {
      sub_244D6412C(v27);
    }
    else
    {
      v45 = v26;
      v46 = sub_244E4DCBC();
      v47 = sub_244E4E670();
      if (os_log_type_enabled(v46, v47))
      {
        v48 = (uint8_t *)swift_slowAlloc();
        v49 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v48 = 138412290;
        v72 = v48 + 4;
        v50 = v45;
        v51 = v16;
        v52 = _swift_stdlib_bridgeErrorToNSError();
        v76 = (void *)v52;
        v27 = v73;
        sub_244E4E7E4();
        *v49 = v52;
        v16 = v51;

        _os_log_impl(&dword_244D61000, v46, v47, "Applet has error: %@", v48, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v49, -1, -1);
        MEMORY[0x2495283BC](v48, -1, -1);
      }
      else
      {

      }
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v27, v16);
    }
    v53 = objc_msgSend(a1, sel_readError);

    return sub_244DAE61C((uint64_t)v53);
  }
  v73 = v16;
  v28 = objc_msgSend(a1, sel_outcomeStatus);
  sub_244E4CC54();
  v29 = sub_244E4CE34();
  if (v29 == sub_244E4CE34())
  {
    v30 = (void *)sub_244E4CC9C();
    sub_244DC40C4(0, (unint64_t *)&qword_2574178E0);
    v31 = (void *)sub_244E4E76C();
    v32 = sub_244E4E778();

    if ((v32 & 1) == 0 && v28 == 32 && objc_msgSend(a1, sel_forFallback))
    {
      v33 = v71;
      sub_244D91E3C(v15, v71, &qword_2574145A0);
      v34 = v73;
      if (v17(v33, 1, v73) == 1)
      {
        sub_244D6412C(v33);
      }
      else
      {
        v58 = sub_244E4DCBC();
        v59 = sub_244E4E670();
        if (os_log_type_enabled(v58, v59))
        {
          v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v60 = 0;
          _os_log_impl(&dword_244D61000, v58, v59, "Fallback and outcome is decline, ignore decline", v60, 2u);
          MEMORY[0x2495283BC](v60, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v33, v34);
      }
      return 0;
    }
  }
  v35 = v17;
  v36 = objc_msgSend(a1, sel_outcomeStatus);
  sub_244E4CC54();
  v37 = sub_244E4CE34();
  if (v37 == sub_244E4CE34()
    && (v38 = (void *)sub_244E4CC9C(),
        sub_244DC40C4(0, (unint64_t *)&qword_2574178E0),
        v39 = (void *)sub_244E4E76C(),
        v40 = sub_244E4E778(),
        v38,
        v39,
        (v40 & 1) == 0)
    && v36 == 32)
  {
    v41 = (uint64_t)v72;
    sub_244D91E3C(v15, (uint64_t)v72, &qword_2574145A0);
    v42 = v73;
    if (v35(v41, 1, v73) == 1)
    {
      sub_244D6412C(v41);
    }
    else
    {
      v55 = sub_244E4DCBC();
      v56 = sub_244E4E670();
      if (os_log_type_enabled(v55, v56))
      {
        v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v57 = 0;
        _os_log_impl(&dword_244D61000, v55, v56, "Outcome is declined for purchase", v57, 2u);
        MEMORY[0x2495283BC](v57, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v41, v42);
    }
    return 11;
  }
  else
  {
    sub_244E4CC54();
    v43 = sub_244E4CE34();
    if (v43 != sub_244E4CE34())
      return 0;
    v44 = objc_msgSend(a1, sel_outcomeStatus);
    if (v44 <= 0x30 && ((1 << v44) & 0x1000000010001) != 0)
      return 0;
    sub_244D91E3C(v15, (uint64_t)v6, &qword_2574145A0);
    if (v35((uint64_t)v6, 1, v73) == 1)
    {
      sub_244D6412C((uint64_t)v6);
    }
    else
    {
      v61 = a1;
      v62 = sub_244E4DCBC();
      v63 = sub_244E4E670();
      if (os_log_type_enabled(v62, v63))
      {
        v64 = v6;
        v65 = (uint8_t *)swift_slowAlloc();
        v66 = swift_slowAlloc();
        v76 = (void *)v66;
        *(_DWORD *)v65 = 136315138;
        objc_msgSend(v61, sel_outcomeStatus);
        v67 = sub_244E4E760();
        v75 = (id)sub_244D9A70C(v67, v68, (uint64_t *)&v76);
        sub_244E4E7E4();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_244D61000, v62, v63, "Outcome has exceptions %s", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v66, -1, -1);
        v69 = v65;
        v6 = v64;
        MEMORY[0x2495283BC](v69, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v74 + 8))(v6, v73);
    }
    return 10;
  }
}

void sub_244DC25D4(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  _QWORD v46[2];
  uint8_t *v47;
  uint64_t v48;
  _QWORD v49[44];
  uint64_t v50;
  _BYTE v51[344];
  _QWORD v52[49];
  _QWORD v53[43];
  uint64_t v54[44];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v46 - v10;
  v12 = sub_244E4C714();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C708();
  sub_244E4C6A8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  _s3__C4CodeOMa_1(0);
  v54[0] = 14001;
  sub_244D65324(&qword_257414798, (uint64_t (*)(uint64_t))_s3__C4CodeOMa_1, (uint64_t)&unk_244E50428);
  if ((sub_244E4C12C() & 1) != 0)
  {
    if (qword_257414400 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E00);
    sub_244D91E3C(v16, (uint64_t)v11, &qword_2574145A0);
    v17 = sub_244E4DCD4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17) == 1)
    {
      sub_244D6412C((uint64_t)v11);
    }
    else
    {
      v28 = sub_244E4DCBC();
      v29 = sub_244E4E67C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_244D61000, v28, v29, "Read Error: [ service disconnected ]", v30, 2u);
        MEMORY[0x2495283BC](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
    }
    sub_244D6B9B4((uint64_t)v53);
    sub_244D70C60((uint64_t)v53, (uint64_t)v54, &qword_257414F80);
    v31 = 0;
LABEL_28:
    sub_244DC2C88(v31, 66, (uint64_t)v54);
    return;
  }
  v52[48] = a1;
  v19 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
  type metadata accessor for ReadError(0);
  if (!swift_dynamicCast())
  {
    if (qword_257414400 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E00);
    sub_244D91E3C(v32, (uint64_t)v9, &qword_2574145A0);
    v33 = sub_244E4DCD4();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v9, 1, v33) == 1)
    {
      sub_244D6412C((uint64_t)v9);
    }
    else
    {
      v35 = a1;
      v36 = a1;
      v37 = sub_244E4DCBC();
      v38 = sub_244E4E67C();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = (uint8_t *)swift_slowAlloc();
        v48 = swift_slowAlloc();
        v54[0] = v48;
        v47 = v39;
        *(_DWORD *)v39 = 136446210;
        v46[1] = v39 + 4;
        swift_getErrorValue();
        v40 = sub_244E4EB2C();
        v53[0] = sub_244D9A70C(v40, v41, v54);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();

        v42 = v47;
        _os_log_impl(&dword_244D61000, v37, v38, "Unknown readCard error. Error: [%{public}s]", v47, 0xCu);
        v43 = v48;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v43, -1, -1);
        MEMORY[0x2495283BC](v42, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v9, v33);
    }
    sub_244D6B9B4((uint64_t)v53);
    sub_244D70C60((uint64_t)v53, (uint64_t)v54, &qword_257414F80);
    v31 = 2;
    goto LABEL_28;
  }
  v20 = (void *)v52[47];
  sub_244D6B9B4((uint64_t)v52);
  sub_244D70C60((uint64_t)v52, (uint64_t)v53, &qword_257414F80);
  if (a2)
  {
    v21 = a2;
    v22 = objc_msgSend(v21, sel_vasResponses);
    sub_244DC40C4(0, &qword_2574178D8);
    v23 = sub_244E4E4CC();

    v24 = *(_QWORD *)(v3 + 56);
    v25 = sub_244E4CCC0();
    v26 = sub_244DACDE0(v23, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_244DAD5C4(v21, v24, v26);

    swift_bridgeObjectRelease();
    memcpy(v54, v49, 0x151uLL);
    nullsub_1(v54);
    v27 = v54;
  }
  else
  {
    v27 = v52;
  }
  sub_244D70C60((uint64_t)v27, (uint64_t)v51, &qword_257414F80);
  sub_244D70C60((uint64_t)v51, (uint64_t)v54, &qword_257414F80);
  v50 = (uint64_t)v20;
  sub_244D65324(&qword_2574147E8, (uint64_t (*)(uint64_t))type metadata accessor for ReadError, (uint64_t)&unk_244E505FC);
  sub_244E4C198();
  if (v49[0] == 4020 || v49[0] == 4042)
  {
LABEL_24:
    sub_244DC2C88(1, 66, (uint64_t)v53);
    sub_244DC3C04((uint64_t)v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);

    return;
  }
  if (v49[0] == 4029)
  {
    sub_244DC35D4(5uLL);
    goto LABEL_24;
  }
  v49[43] = v20;
  sub_244E4C198();
  v44 = sub_244DAE61C(v50);
  sub_244DC2C88(v44, v45, (uint64_t)v54);

  sub_244DC3C04((uint64_t)v51, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
}

uint64_t sub_244DC2C88(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint8_t *v21;
  int16x8_t v22;
  _QWORD v24[2];
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[344];
  _BYTE v30[344];
  _BYTE v31[344];
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  char v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  char v54;
  __int128 v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int32 v79;
  char v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  __int128 v85;
  uint64_t v86;
  char v87;
  __int128 v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  char v95;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414400 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_257419E00);
  sub_244D91E3C(v11, (uint64_t)v10, &qword_2574145A0);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    sub_244D6412C((uint64_t)v10);
  }
  else
  {
    v28 = a1;
    v14 = sub_244E4DCBC();
    v15 = sub_244E4E67C();
    if (os_log_type_enabled(v14, v15))
    {
      v27 = v4;
      v16 = swift_slowAlloc();
      v26 = a3;
      v17 = (uint8_t *)v16;
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v17 = 138543362;
      v24[1] = v17 + 4;
      sub_244D9BE68();
      swift_allocError();
      *(_QWORD *)v18 = v28;
      *(_BYTE *)(v18 + 8) = a2;
      v19 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v63 = v19;
      sub_244E4E7E4();
      v20 = v25;
      *v25 = v19;
      _os_log_impl(&dword_244D61000, v14, v15, "Read Error: [ %{public}@ ]", v17, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v20, -1, -1);
      v21 = v17;
      a3 = v26;
      MEMORY[0x2495283BC](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    a1 = v28;
  }
  sub_244D70C60(a3, (uint64_t)&v32, &qword_257414F80);
  if (sub_244D6BA34((uint64_t)&v32) == 1)
  {
    *(_QWORD *)&v63 = a1;
    BYTE8(v63) = a2;
    sub_244DB4DB4((uint64_t)&v63);
  }
  else
  {
    v30[0] = v57 & 1;
    v29[0] = v59 & 1;
    v63 = v32;
    v64 = v33;
    v65 = v34;
    v66 = v35;
    v67 = v36;
    v68 = v37;
    v69 = v38;
    v70 = v39;
    v71 = v40;
    v72 = v41;
    v73 = v42;
    v74 = v43;
    v75 = v44;
    v76 = v45;
    v77 = v46;
    v78 = v47;
    v22 = (int16x8_t)vmovl_u8((uint8x8_t)__PAIR64__(DWORD1(v32), v48));
    v22.i64[0] &= 0xFF01FF01FF01FF01;
    v79 = vmovn_s16(v22).u32[0];
    v80 = v49 & 1;
    v81 = v50;
    v82 = v51;
    v83 = a1;
    v84 = a2;
    v85 = v52;
    v86 = v53;
    v87 = v54 & 1;
    v88 = v55;
    v89 = v56;
    v90 = v57 & 1;
    v91 = v58;
    v92 = v59 & 1;
    v93 = v60;
    v94 = v61;
    v95 = v62 & 1;
    sub_244DB5C4C((uint64_t)&v63);
  }
  sub_244D70C60((uint64_t)&v63, (uint64_t)v31, &qword_257416D40);
  sub_244D70C60((uint64_t)v31, (uint64_t)v29, &qword_257416D40);
  memcpy(v30, v29, 0x152uLL);
  nullsub_1(v30);
  sub_244DB1BD4(v30, &v63);
  sub_244DC3C04(a3, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244DC313C);
  sub_244DC193C((uint64_t)&v63);
  return sub_244DC3260((uint64_t)v31);
}

uint64_t sub_244DC30E8()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SPRReaderDelegate()
{
  return objc_opt_self();
}

id sub_244DC313C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  id result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a28;
  }
  return result;
}

uint64_t sub_244DC3260(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v7 = *(_OWORD *)(a1 + 288);
  v8 = *(_OWORD *)(a1 + 304);
  v5 = *(_OWORD *)(a1 + 256);
  v6 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  v4 = *(_OWORD *)(a1 + 240);
  sub_244DAF654(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(void **)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    *(_QWORD *)(a1 + 320),
    *(_QWORD *)(a1 + 328),
    *(_BYTE *)(a1 + 336),
    *(_BYTE *)(a1 + 337));
  return a1;
}

unint64_t sub_244DC32F8(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257418440);
  v2 = sub_244E4E988();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_244D91E3C(v6, (uint64_t)&v15, &qword_257416F40);
    v7 = v15;
    v8 = v16;
    result = sub_244DC342C(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_244D6B058(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_244DC342C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_244E4EB80();
  sub_244E4E3C4();
  v4 = sub_244E4EBC8();
  return sub_244DC3490(a1, a2, v4);
}

unint64_t sub_244DC3490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_244E4EAC0() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_244E4EAC0() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_244E4EAC0() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_244DC35D4(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v18[6];
  unint64_t v19;
  uint64_t v20;
  uint64_t v21[44];

  v2 = v1;
  v19 = a1;
  v3 = sub_244E4C714();
  MEMORY[0x24BDAC7A8](v3);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v5);
  if ((*(_BYTE *)(v2 + 48) & 1) == 0)
  {
    if (v19 <= 9)
      __asm { BR              X9 }
    if (qword_257414400 != -1)
      swift_once();
    v9 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E00);
    sub_244D91E3C(v9, (uint64_t)v7, &qword_2574145A0);
    v10 = sub_244E4DCD4();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
    {
      return sub_244D6412C((uint64_t)v7);
    }
    else
    {
      v12 = sub_244E4DCBC();
      v13 = sub_244E4E67C();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v21[0] = v15;
        *(_DWORD *)v14 = 136446210;
        v18[5] = v14 + 4;
        v16 = sub_244E4E658();
        v20 = sub_244D9A70C(v16, v17, v21);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_244D61000, v12, v13, "onUpdate: failed to parse [ %{public}s ]", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v15, -1, -1);
        MEMORY[0x2495283BC](v14, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    }
  }
  return result;
}

uint64_t sub_244DC3C04(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  char v10;

  v10 = *(_BYTE *)(a1 + 336);
  v8 = *(_OWORD *)(a1 + 288);
  v9 = *(_OWORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((_QWORD *)&v4 + 1),
    v5,
    *((_QWORD *)&v5 + 1),
    v6,
    *((_QWORD *)&v6 + 1),
    v7,
    *((_QWORD *)&v7 + 1),
    v8,
    *((_QWORD *)&v8 + 1),
    v9,
    *((_QWORD *)&v9 + 1),
    *(_QWORD *)(a1 + 320),
    *(_QWORD *)(a1 + 328),
    v10);
  return a1;
}

double sub_244DC3C98(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -2560;
  return result;
}

uint64_t sub_244DC3CD4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = *(_OWORD *)(a1 + 288);
  v9 = *(_OWORD *)(a1 + 304);
  v6 = *(_OWORD *)(a1 + 256);
  v7 = *(_OWORD *)(a1 + 272);
  v4 = *(_OWORD *)(a1 + 224);
  v5 = *(_OWORD *)(a1 + 240);
  sub_244DC3D6C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    *(_QWORD *)(a1 + 320),
    *(_QWORD *)(a1 + 328),
    *(_WORD *)(a1 + 336),
    a2);
  return a1;
}

uint64_t sub_244DC3D6C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,unsigned __int16 a43,uint64_t (*a44)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  int v44;

  v44 = a43 & 0xFE00;
  if (v44 != 62976 && (a43 & 0xFC00) != 0xF800 && v44 != 64512 && HIBYTE(a43) <= 0xFEu && (a43 & 0xFF00) != 0xFE00)
    return a44(result, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  return result;
}

double sub_244DC3F20(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -2304;
  return result;
}

double sub_244DC3F5C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -2048;
  return result;
}

double sub_244DC3F98(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -1792;
  return result;
}

double sub_244DC3FD4(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -1536;
  return result;
}

double sub_244DC4010(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -1280;
  return result;
}

double sub_244DC404C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -1024;
  return result;
}

double sub_244DC4088(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_WORD *)(a1 + 336) = -768;
  return result;
}

uint64_t sub_244DC40C4(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_244DC4100()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 16) & 1) == 0)
    return (*(uint64_t (**)(void))(v0 + 24))();
  return result;
}

uint64_t sub_244DC4128@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;
  _OWORD v10[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_244E4C030();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCB1D8], v3);
  sub_244E4C03C();
  sub_244DC8CC4();
  sub_244E4C048();
  result = swift_release();
  v8 = v10[4];
  v9 = v10[5];
  *a1 = v10[3];
  a1[1] = v8;
  a1[2] = v9;
  return result;
}

uint64_t sub_244DC44BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244DC8C3C();
  sub_244E4C048();
  swift_release();
  return v6[4];
}

uint64_t sub_244DC483C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[6];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SessionStore();
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244D65324(&qword_257417910, (uint64_t (*)(uint64_t))type metadata accessor for SessionStore, (uint64_t)&unk_244E517F4);
  sub_244E4C048();
  swift_release();
  return v6[5];
}

uint64_t sub_244DC4BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v10[4] = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244E4C030();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DiscoveryCacheContent(0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCB1D8], v4);
  sub_244E4C03C();
  sub_244D65324(&qword_257417948, type metadata accessor for DiscoveryCacheContent, (uint64_t)&unk_244E52AB8);
  sub_244E4C048();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  return swift_release();
}

uint64_t sub_244DC4FC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  _QWORD v10[5];

  __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8]();
  v10[4] = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_244E4C030();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244E4CDC8();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDE4660];
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCB1D8], v3);
  sub_244E4C03C();
  sub_244D65324(&qword_257417958, v8, MEMORY[0x24BDE4670]);
  sub_244E4C048();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a1, 0, 1, v7);
  return swift_release();
}

uint64_t sub_244DC53AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244DC8D08();
  sub_244E4C048();
  return swift_release();
}

uint64_t sub_244DC5734@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_244E4C030();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCB1D8], v3);
  sub_244E4C03C();
  sub_244DC8E90();
  sub_244E4C048();
  nullsub_1(a1);
  return swift_release();
}

uint64_t sub_244DC5AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[6];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244DC8D4C();
  sub_244E4C048();
  swift_release();
  return v6[5];
}

uint64_t sub_244DC5E50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244DC8E08();
  sub_244E4C048();
  swift_release();
  return v6[4];
}

uint64_t sub_244DC61C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244DC8DC4();
  sub_244E4C048();
  swift_release();
  return v6[4];
}

uint64_t sub_244DC6538()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244DC8C80();
  sub_244E4C048();
  swift_release();
  return v6[4];
}

uint64_t sub_244DC68AC@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  __int128 v8;
  __int128 v9;
  _OWORD v10[6];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_244E4C030();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDCB1D8], v3);
  sub_244E4C03C();
  sub_244DC8BF8();
  sub_244E4C048();
  result = swift_release();
  v8 = v10[4];
  v9 = v10[5];
  *a1 = v10[3];
  a1[1] = v8;
  a1[2] = v9;
  return result;
}

uint64_t sub_244DC6C38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  _QWORD v11[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v11[4] = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_244E4C030();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244E4CEF4();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x24BDE48B8];
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BDCB1D8], v4);
  sub_244E4C03C();
  sub_244D65324(&qword_257417908, v9, MEMORY[0x24BDE48C8]);
  sub_244E4C048();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 0, 1, v8);
  return swift_release();
}

uint64_t sub_244DC7024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[6];
  char v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244D75BD4();
  sub_244E4C048();
  v7 = 0;
  swift_release();
  return v6[5];
}

uint64_t sub_244DC73AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[6];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244DC8E4C();
  sub_244E4C048();
  swift_release();
  return v6[5];
}

uint64_t sub_244DC771C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  _QWORD v6[5];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_244E4C030();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C060();
  swift_allocObject();
  sub_244E4C054();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BDCB1D8], v1);
  sub_244E4C03C();
  sub_244D91C20();
  sub_244E4C048();
  swift_release();
  return v6[4];
}

uint64_t sub_244DC7A90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_244E4EB80();
  sub_244E4EB98();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_244E4E3C4();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_244DC87D4((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244DC7B2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v1 + 8))
  {
    sub_244E4EB98();
    swift_bridgeObjectRetain();
    sub_244E4E3C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_244E4EB98();
  }
  swift_bridgeObjectRetain();
  sub_244DC87D4(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DC7BB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  sub_244E4EB80();
  sub_244E4EB98();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_244E4E3C4();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_244DC87D4((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244DC7C50(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a2[1];
  v6 = a2[2];
  if (v3)
  {
    if (v5)
    {
      v7 = *a1 == *a2 && v3 == v5;
      if (v7 || (sub_244E4EAC0() & 1) != 0)
        return sub_244DC848C(v4, v6);
    }
  }
  else if (!v5)
  {
    return sub_244DC848C(v4, v6);
  }
  return 0;
}

uint64_t sub_244DC7CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_244E4E88C();
  swift_bridgeObjectRelease();
  if (a2)
    sub_244E4DAB8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244DC7D9C(a3);
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  return 0x205B203A747441;
}

uint64_t sub_244DC7D9C(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    sub_244DA970C(0, v1, 0);
    v3 = a1 + 72;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_244E4E88C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_244E4E3F4();
      swift_bridgeObjectRelease();
      sub_244E4E3F4();
      swift_bridgeObjectRetain();
      sub_244E4E3F4();
      swift_bridgeObjectRelease();
      sub_244E4E3F4();
      swift_bridgeObjectRetain();
      sub_244E4E3F4();
      swift_bridgeObjectRelease();
      sub_244E4E3F4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = *(_QWORD *)(v8 + 16);
      v4 = *(_QWORD *)(v8 + 24);
      if (v5 >= v4 >> 1)
        sub_244DA970C(v4 > 1, v5 + 1, 1);
      v3 += 48;
      *(_QWORD *)(v8 + 16) = v5 + 1;
      v6 = v8 + 16 * v5;
      *(_QWORD *)(v6 + 32) = 0x205B203A65707974;
      *(_QWORD *)(v6 + 40) = 0xE800000000000000;
      --v1;
    }
    while (v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416CB8);
    sub_244DB9490();
    sub_244E4E2D4();
    swift_release();
  }
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_244DC8004()
{
  uint64_t *v0;

  return sub_244DC7CB8(*v0, v0[1], v0[2]);
}

uint64_t sub_244DC8010()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 == 1)
    v1 = 0x7461636572706564;
  if (*v0)
    return v1;
  else
    return 0x7461636572706564;
}

uint64_t sub_244DC8070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DC9130(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244DC8094()
{
  sub_244DC94F0();
  return sub_244E4EC04();
}

uint64_t sub_244DC80BC()
{
  sub_244DC94F0();
  return sub_244E4EC10();
}

uint64_t sub_244DC80E4()
{
  sub_244E4EB80();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244DC8194()
{
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DC8230()
{
  sub_244E4EB80();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

double sub_244DC82DC@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;

  sub_244DC92BC(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[1];
    *a2 = v6[0];
    a2[1] = v5;
    result = *(double *)&v7;
    a2[2] = v7;
  }
  return result;
}

uint64_t sub_244DC831C(_OWORD *a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  _OWORD v7[3];
  _OWORD v8[3];

  v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  v3 = *a2;
  v4 = a2[1];
  v7[2] = a1[2];
  v8[0] = v3;
  v5 = a2[2];
  v8[1] = v4;
  v8[2] = v5;
  return sub_244DC88BC(v7, v8) & 1;
}

uint64_t sub_244DC8360()
{
  sub_244E4E88C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  return 0x205B203A65707974;
}

uint64_t sub_244DC848C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (v2)
  {
    v3 = a2;
    if (a1 != a2)
    {
      v4 = 0;
      v17 = a1;
      while (1)
      {
        v5 = *(_QWORD *)(a1 + v4 + 48);
        v6 = *(_QWORD *)(a1 + v4 + 56);
        v7 = *(_QWORD *)(a1 + v4 + 64);
        v8 = *(_QWORD *)(a1 + v4 + 72);
        v9 = *(_QWORD *)(v3 + v4 + 48);
        v10 = *(_QWORD *)(v3 + v4 + 56);
        v11 = *(_QWORD *)(v3 + v4 + 64);
        v12 = *(_QWORD *)(v3 + v4 + 72);
        v13 = *(_QWORD *)(a1 + v4 + 32) == *(_QWORD *)(v3 + v4 + 32)
           && *(_QWORD *)(a1 + v4 + 40) == *(_QWORD *)(v3 + v4 + 40);
        if (!v13 && (sub_244E4EAC0() & 1) == 0)
          break;
        v14 = v5 == v9 && v6 == v10;
        if (!v14 && (sub_244E4EAC0() & 1) == 0)
          break;
        v15 = v7 == v11 && v8 == v12;
        if (!v15 && (sub_244E4EAC0() & 1) == 0)
          break;
        v4 += 48;
        --v2;
        a1 = v17;
        v3 = a2;
        if (!v2)
          return 1;
      }
      return 0;
    }
  }
  return 1;
}

unint64_t sub_244DC859C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_244E4EB80();
  sub_244E4E3C4();
  v4 = sub_244E4EBC8();
  return sub_244DC8630(a1, a2, v4);
}

unint64_t sub_244DC8600(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_244E4E850();
  return sub_244DC8710(a1, v2);
}

unint64_t sub_244DC8630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_244E4EAC0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_244E4EAC0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_244DC8710(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_244D843C0(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x249527AF8](v9, a1);
      sub_244DC8D90((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_244DC87D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_244E4EB8C();
  if (v3)
  {
    v5 = a2 + 72;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_244E4E3C4();
      swift_bridgeObjectRetain();
      sub_244E4E3C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_244E4E3C4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease_n();
      v5 += 48;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_244DC88BC(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  uint64_t result;
  BOOL v7;
  char v8;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_244E4EAC0(), result = 0, (v5 & 1) != 0))
  {
    v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (v8 = sub_244E4EAC0(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
        return 1;
      else
        return sub_244E4EAC0();
    }
  }
  return result;
}

uint64_t sub_244DC895C(uint64_t a1)
{
  unint64_t v2;
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  if (!*(_QWORD *)(a1 + 16))
  {
    v4 = 0;
    goto LABEL_19;
  }
  v2 = sub_244DC859C(0x6E656B6F74, 0xE500000000000000);
  if ((v3 & 1) == 0)
  {
    v4 = 0;
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_7;
LABEL_19:
    swift_bridgeObjectRelease();
    return v4;
  }
  v4 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 16 * v2);
  swift_bridgeObjectRetain();
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_19;
LABEL_7:
  v5 = sub_244DC859C(0xD000000000000013, 0x8000000244E58900);
  if ((v6 & 1) == 0)
    goto LABEL_19;
  v7 = (uint64_t *)(*(_QWORD *)(a1 + 56) + 16 * v5);
  v8 = *v7;
  v9 = v7[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = v8;
  v35 = v9;
  *(_QWORD *)&v29 = 44;
  *((_QWORD *)&v29 + 1) = 0xE100000000000000;
  sub_244D70D08();
  v10 = sub_244E4E7FC();
  v11 = *(_QWORD *)(v10 + 16);
  if (!v11)
  {
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  v25 = v4;
  swift_bridgeObjectRetain();
  v12 = v10 + 40;
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    swift_bridgeObjectRetain();
    v14 = sub_244E4C2DC();
    if (v15 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = v14;
      v17 = v15;
      sub_244DC68AC(&v29);
      v18 = *((_QWORD *)&v29 + 1);
      v19 = v30;
      v20 = v31;
      v27 = v32;
      v28 = v29;
      v26 = v33;
      sub_244D65198(v16, v17);
      swift_bridgeObjectRelease();
      sub_244D70C60((uint64_t)&v29, (uint64_t)&v34, &qword_2574178E8);
      if (v35)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v13 = sub_244DCB570(0, v13[2] + 1, 1, v13);
        v22 = v13[2];
        v21 = v13[3];
        if (v22 >= v21 >> 1)
          v13 = sub_244DCB570((_QWORD *)(v21 > 1), v22 + 1, 1, v13);
        v13[2] = v22 + 1;
        v23 = &v13[6 * v22];
        v23[4] = v28;
        v23[5] = v18;
        v23[6] = v19;
        v23[7] = v20;
        v23[8] = v27;
        v23[9] = v26;
      }
    }
    v12 += 16;
    --v11;
  }
  while (v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v25;
}

unint64_t sub_244DC8BF8()
{
  unint64_t result;

  result = qword_2574178F0;
  if (!qword_2574178F0)
  {
    result = MEMORY[0x2495282F0](&unk_244E54E74, &type metadata for DeprecationWarning);
    atomic_store(result, (unint64_t *)&qword_2574178F0);
  }
  return result;
}

unint64_t sub_244DC8C3C()
{
  unint64_t result;

  result = qword_2574178F8;
  if (!qword_2574178F8)
  {
    result = MEMORY[0x2495282F0](&unk_244E51A1C, &type metadata for APIErrorResponse);
    atomic_store(result, (unint64_t *)&qword_2574178F8);
  }
  return result;
}

unint64_t sub_244DC8C80()
{
  unint64_t result;

  result = qword_257417900;
  if (!qword_257417900)
  {
    result = MEMORY[0x2495282F0](&unk_244E51FC8, &type metadata for SubscriptionResponse);
    atomic_store(result, (unint64_t *)&qword_257417900);
  }
  return result;
}

unint64_t sub_244DC8CC4()
{
  unint64_t result;

  result = qword_257417918;
  if (!qword_257417918)
  {
    result = MEMORY[0x2495282F0](&unk_244E50AF4, &type metadata for SessionResponse);
    atomic_store(result, (unint64_t *)&qword_257417918);
  }
  return result;
}

unint64_t sub_244DC8D08()
{
  unint64_t result;

  result = qword_257417920;
  if (!qword_257417920)
  {
    result = MEMORY[0x2495282F0](&unk_244E51180, &type metadata for StoreAndForwardSession);
    atomic_store(result, (unint64_t *)&qword_257417920);
  }
  return result;
}

unint64_t sub_244DC8D4C()
{
  unint64_t result;

  result = qword_257417928;
  if (!qword_257417928)
  {
    result = MEMORY[0x2495282F0](&unk_244E51F78, &type metadata for VerifyMerchantResponse);
    atomic_store(result, (unint64_t *)&qword_257417928);
  }
  return result;
}

uint64_t sub_244DC8D90(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

unint64_t sub_244DC8DC4()
{
  unint64_t result;

  result = qword_257417930;
  if (!qword_257417930)
  {
    result = MEMORY[0x2495282F0](&unk_244E51F28, &type metadata for ReEnrollmentResponse);
    atomic_store(result, (unint64_t *)&qword_257417930);
  }
  return result;
}

unint64_t sub_244DC8E08()
{
  unint64_t result;

  result = qword_257417938;
  if (!qword_257417938)
  {
    result = MEMORY[0x2495282F0](&unk_244E51F00, &type metadata for EnrollmentResponse);
    atomic_store(result, (unint64_t *)&qword_257417938);
  }
  return result;
}

unint64_t sub_244DC8E4C()
{
  unint64_t result;

  result = qword_257417940;
  if (!qword_257417940)
  {
    result = MEMORY[0x2495282F0](&unk_244E55528, &type metadata for ProximityReaderConfiguration);
    atomic_store(result, (unint64_t *)&qword_257417940);
  }
  return result;
}

unint64_t sub_244DC8E90()
{
  unint64_t result;

  result = qword_257417950;
  if (!qword_257417950)
  {
    result = MEMORY[0x2495282F0](&unk_244E51410, &type metadata for TransactionContainer);
    atomic_store(result, (unint64_t *)&qword_257417950);
  }
  return result;
}

uint64_t destroy for PrepareResult()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s21ProximityReaderDaemon13PrepareResultVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PrepareResult(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for PrepareResult(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrepareResult(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrepareResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrepareResult()
{
  return &type metadata for PrepareResult;
}

ValueMetadata *type metadata accessor for DeprecationWarning()
{
  return &type metadata for DeprecationWarning;
}

unint64_t sub_244DC90A4()
{
  unint64_t result;

  result = qword_257417960;
  if (!qword_257417960)
  {
    result = MEMORY[0x2495282F0](&unk_244E54DA4, &type metadata for DeprecationWarning);
    atomic_store(result, (unint64_t *)&qword_257417960);
  }
  return result;
}

unint64_t sub_244DC90EC()
{
  unint64_t result;

  result = qword_257417968;
  if (!qword_257417968)
  {
    result = MEMORY[0x2495282F0](&unk_244E54E0C, &type metadata for PrepareResult);
    atomic_store(result, (unint64_t *)&qword_257417968);
  }
  return result;
}

uint64_t sub_244DC9130(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7461636572706564 && a2 == 0xEF657079546E6F69;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461636572706564 && a2 == 0xEF657461446E6F69 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_244DC92BC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417970);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DC94F0();
  sub_244E4EBE0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_244E4E9F4();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_244E4E9F4();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_244E4E9F4();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v19 = v23;
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  return result;
}

unint64_t sub_244DC94F0()
{
  unint64_t result;

  result = qword_257417978;
  if (!qword_257417978)
  {
    result = MEMORY[0x2495282F0](&unk_244E54F60, &type metadata for DeprecationWarning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257417978);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DeprecationWarning.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_244DC9580 + 4 * byte_244E54D15[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_244DC95B4 + 4 * asc_244E54D10[v4]))();
}

uint64_t sub_244DC95B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DC95BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DC95C4);
  return result;
}

uint64_t sub_244DC95D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DC95D8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_244DC95DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DC95E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeprecationWarning.CodingKeys()
{
  return &type metadata for DeprecationWarning.CodingKeys;
}

unint64_t sub_244DC9604()
{
  unint64_t result;

  result = qword_257417980;
  if (!qword_257417980)
  {
    result = MEMORY[0x2495282F0](&unk_244E54F38, &type metadata for DeprecationWarning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257417980);
  }
  return result;
}

unint64_t sub_244DC964C()
{
  unint64_t result;

  result = qword_257417988;
  if (!qword_257417988)
  {
    result = MEMORY[0x2495282F0](&unk_244E54EA8, &type metadata for DeprecationWarning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257417988);
  }
  return result;
}

unint64_t sub_244DC9694()
{
  unint64_t result;

  result = qword_257417990;
  if (!qword_257417990)
  {
    result = MEMORY[0x2495282F0](&unk_244E54ED0, &type metadata for DeprecationWarning.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257417990);
  }
  return result;
}

uint64_t sub_244DC96D8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  void *v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  id v15;
  id v16;
  void *v17;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  _QWORD *v22;
  id v23;
  void *v24;
  id v25;
  _QWORD *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  void *v32;
  unsigned __int8 v33;
  void *v34;
  id v35;
  id v36;
  id v37;
  uint64_t v38;
  _QWORD v40[3];
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  id v45;
  id v46[2];

  v46[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = sub_244E4C2AC();
  v42 = *(_QWORD *)(v2 - 8);
  v3 = v42;
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = (void *)sub_244DC9B20((uint64_t)v8);
  v10 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D6AFD8((uint64_t)v10, (uint64_t)v7);
  swift_bridgeObjectRelease();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v12 = &v7[*(int *)(v11 + 64)];
  v13 = &v7[*(int *)(v11 + 80)];
  v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v43 = v14;
  v41 = v2;
  v14(v13, v2);
  v14(v12, v2);
  v15 = objc_allocWithZone(MEMORY[0x24BDBB700]);
  v16 = v9;
  v17 = (void *)sub_244E4E2F8();
  swift_bridgeObjectRelease();
  v18 = v15;
  v19 = v40[2];
  v20 = objc_msgSend(v18, sel_initWithName_managedObjectModel_, v17, v16);

  v45 = v16;
  *(_QWORD *)(v19 + 16) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417A38);
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_244E54FB0;
  v22 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v23 = v20;
  *(_QWORD *)(v21 + 32) = sub_244DC9CE8((uint64_t)v22);
  v46[0] = (id)v21;
  sub_244E4E4E4();
  sub_244DC9F40();
  v24 = (void *)sub_244E4E4C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setPersistentStoreDescriptions_, v24);

  v25 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v26 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D6AFD8((uint64_t)v26, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = &v7[*(int *)(v11 + 64)];
  v28 = &v7[*(int *)(v11 + 80)];
  v29 = v41;
  v30 = v44;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v44, v27, v41);
  v31 = v43;
  v43(v28, v29);
  sub_244E4C21C();
  v31(v30, v29);
  v32 = (void *)sub_244E4E2F8();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v25, sel_fileExistsAtPath_, v32);

  v34 = *(void **)(v19 + 16);
  v46[0] = 0;
  if (objc_msgSend(v34, sel_load_, v46))
  {
    v35 = v45;
    v36 = v46[0];
    if ((v33 & 1) != 0)
    {

    }
    else
    {
      v38 = v40[1];
      sub_244DC9F7C(a1);

      if (v38)
        swift_release();
    }
  }
  else
  {
    v37 = v46[0];
    swift_release();
    sub_244E4C1E0();

    swift_willThrow();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v19;
}

uint64_t sub_244DC9AA0()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoreDataStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for CoreDataStoreConfiguration()
{
  uint64_t result;

  result = qword_257417AB8;
  if (!qword_257417AB8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_244DC9B20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  id v14;
  void *v15;
  id v16;
  uint64_t result;
  uint64_t v19[3];
  uint64_t v20;
  _UNKNOWN **v21;

  v2 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v19[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_244E4C2AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v19[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2;
  v21 = &off_2515DF210;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v19);
  sub_244D6AFD8(a1, (uint64_t)boxed_opaque_existential_1);
  v10 = __swift_project_boxed_opaque_existential_1(v19, v20);
  sub_244D6AFD8((uint64_t)v10, (uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v12 = &v4[*(int *)(v11 + 64)];
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v4[*(int *)(v11 + 80)], v5);
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v12, v5);
  v14 = objc_allocWithZone(MEMORY[0x24BDBB6B0]);
  v15 = (void *)sub_244E4C258();
  v16 = objc_msgSend(v14, sel_initWithContentsOfURL_, v15);

  v13(v8, v5);
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return (uint64_t)v16;
  }
  else
  {
    result = sub_244E4E94C();
    __break(1u);
  }
  return result;
}

id sub_244DC9CE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *boxed_opaque_existential_1;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t);
  id v14;
  void *v15;
  id v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  uint64_t v23[3];
  uint64_t v24;
  _UNKNOWN **v25;

  v2 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v23[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_244E4C2AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v23[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v2;
  v25 = &off_2515DF210;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v23);
  sub_244D6AFD8(a1, (uint64_t)boxed_opaque_existential_1);
  v10 = __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_244D6AFD8((uint64_t)v10, (uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v12 = &v4[*(int *)(v11 + 80)];
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, &v4[*(int *)(v11 + 64)], v5);
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v12, v5);
  v14 = objc_allocWithZone(MEMORY[0x24BDBB740]);
  v15 = (void *)sub_244E4C258();
  v16 = objc_msgSend(v14, sel_initWithURL_, v15);

  v13(v8, v5);
  v17 = __swift_project_boxed_opaque_existential_1(v23, v24);
  sub_244D6AFD8((uint64_t)v17, (uint64_t)v4);
  v18 = *((_QWORD *)v4 + 1);
  swift_bridgeObjectRelease();
  v19 = &v4[*(int *)(v11 + 64)];
  v13(&v4[*(int *)(v11 + 80)], v5);
  v13(v19, v5);
  if (v18)
  {
    v20 = (void *)sub_244E4E2F8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v20 = 0;
  }
  objc_msgSend(v16, sel_setConfiguration_, v20);

  objc_msgSend(v16, sel_setType_, *MEMORY[0x24BDBB580]);
  objc_msgSend(v16, sel_setShouldInferMappingModelAutomatically_, 1);
  objc_msgSend(v16, sel_setShouldMigrateStoreAutomatically_, 1);
  objc_msgSend(v16, sel_setTimeout_, 10.0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v16;
}

unint64_t sub_244DC9F40()
{
  unint64_t result;

  result = qword_257417A40;
  if (!qword_257417A40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257417A40);
  }
  return result;
}

uint64_t sub_244DC9F7C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  void *v18;
  _QWORD *v19;
  char *v20;
  char *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  void *v27;
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  id v31[2];

  v31[1] = *(id *)MEMORY[0x24BDAC8D0];
  v30 = sub_244E4C120();
  v2 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for CoreDataStoreConfiguration();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_244E4C2AC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244D6AFD8((uint64_t)v12, (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v14 = &v7[*(int *)(v13 + 80)];
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, &v7[*(int *)(v13 + 64)], v8);
  v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v14, v8);
  sub_244E4C114();
  sub_244E4C108();
  v16 = v29;
  sub_244E4C24C();
  v17 = v30;
  if (!v16)
  {
    v28[1] = 0;
    v29 = v2;
    v18 = (void *)sub_244E4C258();
    v19 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_244D6AFD8((uint64_t)v19, (uint64_t)v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = &v7[*(int *)(v13 + 64)];
    v21 = &v7[*(int *)(v13 + 80)];
    v22 = (id)*MEMORY[0x24BDBCC08];
    v15(v21, v8);
    v15(v20, v8);
    sub_244E4E31C();
    v23 = (void *)sub_244E4E2F8();

    swift_bridgeObjectRelease();
    v24 = *MEMORY[0x24BDBCC20];
    v31[0] = 0;
    LOBYTE(v20) = objc_msgSend(v18, sel_setResourceValue_forKey_error_, v23, v24, v31);

    v25 = v31[0];
    if ((v20 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v4, v30);
      return ((uint64_t (*)(char *, uint64_t))v15)(v11, v8);
    }
    v27 = v25;
    sub_244E4C1E0();

    swift_willThrow();
    v2 = v29;
    v17 = v30;
  }
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v17);
  return ((uint64_t (*)(char *, uint64_t))v15)(v11, v8);
}

char *sub_244DCA258(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *((_QWORD *)a1 + 1) = v6;
    v7 = a2[3];
    *((_QWORD *)a1 + 2) = a2[2];
    *((_QWORD *)a1 + 3) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
    v9 = *(int *)(v8 + 64);
    v10 = &a1[v9];
    v11 = (char *)a2 + v9;
    v12 = sub_244E4C2AC();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[*(int *)(v8 + 80)], (char *)a2 + *(int *)(v8 + 80), v12);
  }
  return a1;
}

uint64_t sub_244DCA330(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v6)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v3 = a1 + *(int *)(v2 + 64);
  v4 = sub_244E4C2AC();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v6(v3, v4);
  return ((uint64_t (*)(uint64_t, uint64_t))v6)(a1 + *(int *)(v2 + 80), v4);
}

char *sub_244DCA3BC(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v4;
  v5 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v7 = *(int *)(v6 + 64);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_244E4C2AC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 80)], &a2[*(int *)(v6 + 80)], v10);
  return a1;
}

char *sub_244DCA468(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v5 = *(int *)(v4 + 64);
  v6 = &a1[v5];
  v7 = &a2[v5];
  v8 = sub_244E4C2AC();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24);
  v9(v6, v7, v8);
  v9(&a1[*(int *)(v4 + 80)], &a2[*(int *)(v4 + 80)], v8);
  return a1;
}

char *sub_244DCA538(char *a1, char *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v6 = *(int *)(v5 + 64);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_244E4C2AC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(v5 + 80)], &a2[*(int *)(v5 + 80)], v9);
  return a1;
}

char *sub_244DCA5D0(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v4;
  swift_bridgeObjectRelease();
  v5 = *((_QWORD *)a2 + 3);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = v5;
  swift_bridgeObjectRelease();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  v7 = *(int *)(v6 + 64);
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_244E4C2AC();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[*(int *)(v6 + 80)], &a2[*(int *)(v6 + 80)], v10);
  return a1;
}

uint64_t sub_244DCA680(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_244DCA6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414CA8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_244DCA710(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  int v4;

  result = sub_244E4C2AC();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t type metadata accessor for MockUtils()
{
  return objc_opt_self();
}

uint64_t sub_244DCA7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;

  v32 = a2;
  v33 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417B60);
  MEMORY[0x24BDAC7A8](v4);
  v34 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_244E4C3A8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E54AC0;
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 32) = 7371124;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = 5527370;
  *(_QWORD *)(inited + 56) = 0xE300000000000000;
  *(_QWORD *)(inited + 72) = v11;
  *(_QWORD *)(inited + 80) = 6580587;
  *(_QWORD *)(inited + 88) = 0xE300000000000000;
  *(_QWORD *)(inited + 96) = 0xD000000000000024;
  v30 = 0x8000000244E58BB0;
  *(_QWORD *)(inited + 104) = 0x8000000244E58BB0;
  *(_QWORD *)(inited + 120) = v11;
  *(_QWORD *)(inited + 128) = 6777953;
  *(_QWORD *)(inited + 168) = v11;
  *(_QWORD *)(inited + 136) = 0xE300000000000000;
  *(_QWORD *)(inited + 144) = 0x3635325345;
  *(_QWORD *)(inited + 152) = 0xE500000000000000;
  v31 = sub_244DB2520(inited);
  v12 = swift_initStackObject();
  *(_OWORD *)(v12 + 16) = xmmword_244E55070;
  *(_QWORD *)(v12 + 32) = 7566185;
  *(_QWORD *)(v12 + 40) = 0xE300000000000000;
  strcpy((char *)(v12 + 48), "authorization");
  *(_WORD *)(v12 + 62) = -4864;
  *(_QWORD *)(v12 + 72) = v11;
  *(_QWORD *)(v12 + 80) = 6583649;
  *(_QWORD *)(v12 + 88) = 0xE300000000000000;
  *(_QWORD *)(v12 + 96) = 0x746361736E617274;
  *(_QWORD *)(v12 + 104) = 0xEB000000006E6F69;
  *(_QWORD *)(v12 + 120) = v11;
  *(_QWORD *)(v12 + 128) = 1684628851;
  *(_QWORD *)(v12 + 136) = 0xE400000000000000;
  v29 = a1;
  v13 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(v12 + 144) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v12 + 152) = v13;
  *(_QWORD *)(v12 + 168) = v11;
  *(_QWORD *)(v12 + 176) = 6911082;
  *(_QWORD *)(v12 + 184) = 0xE300000000000000;
  swift_bridgeObjectRetain();
  sub_244E4C39C();
  sub_244E4C390();
  v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  v15 = sub_244E4E37C();
  v17 = v16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 192) = v15;
  *(_QWORD *)(v12 + 200) = v17;
  *(_QWORD *)(v12 + 216) = v11;
  *(_QWORD *)(v12 + 224) = 7234157;
  *(_QWORD *)(v12 + 232) = 0xE300000000000000;
  *(_QWORD *)(v12 + 240) = 0xD000000000000010;
  *(_QWORD *)(v12 + 248) = 0x8000000244E58BE0;
  *(_QWORD *)(v12 + 264) = v11;
  *(_QWORD *)(v12 + 272) = 6513517;
  *(_QWORD *)(v12 + 280) = 0xE300000000000000;
  *(_QWORD *)(v12 + 288) = 825308213;
  *(_QWORD *)(v12 + 296) = 0xE400000000000000;
  *(_QWORD *)(v12 + 312) = v11;
  *(_QWORD *)(v12 + 320) = 6580589;
  *(_QWORD *)(v12 + 328) = 0xE300000000000000;
  *(_QWORD *)(v12 + 336) = 808464432;
  *(_QWORD *)(v12 + 344) = 0xE400000000000000;
  *(_QWORD *)(v12 + 360) = v11;
  *(_QWORD *)(v12 + 368) = 6580592;
  *(_QWORD *)(v12 + 376) = 0xE300000000000000;
  sub_244E4C39C();
  sub_244E4C390();
  v14(v9, v6);
  v18 = sub_244E4E37C();
  v20 = v19;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + 384) = v18;
  *(_QWORD *)(v12 + 392) = v20;
  *(_QWORD *)(v12 + 408) = v11;
  *(_QWORD *)(v12 + 416) = 1684631668;
  *(_QWORD *)(v12 + 424) = 0xE400000000000000;
  *(_QWORD *)(v12 + 432) = 0xD000000000000024;
  *(_QWORD *)(v12 + 440) = v30;
  *(_QWORD *)(v12 + 456) = v11;
  *(_QWORD *)(v12 + 464) = 1684632694;
  *(_QWORD *)(v12 + 472) = 0xE400000000000000;
  v21 = *(_QWORD *)(v29 + 72);
  *(_QWORD *)(v12 + 480) = *(_QWORD *)(v29 + 64);
  *(_QWORD *)(v12 + 488) = v21;
  *(_QWORD *)(v12 + 504) = v11;
  *(_QWORD *)(v12 + 512) = 1953526640;
  *(_QWORD *)(v12 + 520) = 0xE400000000000000;
  *(_QWORD *)(v12 + 552) = v11;
  v22 = v33;
  *(_QWORD *)(v12 + 528) = v32;
  *(_QWORD *)(v12 + 536) = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_244DB2520(v12);
  v24 = sub_244E4E280();
  v25 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v34, 1, 1, v24);
  v26 = MEMORY[0x249526D9C](v31, v23, 1, 900, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244DCAD6C(v25);
  return v26;
}

uint64_t sub_244DCABB8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t inited;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417B60);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_244E54AC0;
  v4 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 32) = 7371124;
  *(_QWORD *)(inited + 40) = 0xE300000000000000;
  *(_QWORD *)(inited + 48) = 5527370;
  *(_QWORD *)(inited + 56) = 0xE300000000000000;
  *(_QWORD *)(inited + 72) = v4;
  *(_QWORD *)(inited + 80) = 6580587;
  *(_QWORD *)(inited + 88) = 0xE300000000000000;
  *(_QWORD *)(inited + 96) = 0xD000000000000024;
  *(_QWORD *)(inited + 104) = 0x8000000244E58BB0;
  *(_QWORD *)(inited + 120) = v4;
  *(_QWORD *)(inited + 128) = 6777953;
  *(_QWORD *)(inited + 168) = v4;
  *(_QWORD *)(inited + 136) = 0xE300000000000000;
  *(_QWORD *)(inited + 144) = 0x3635325345;
  *(_QWORD *)(inited + 152) = 0xE500000000000000;
  v5 = sub_244DB2520(inited);
  v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_244E50DA0;
  *(_QWORD *)(v6 + 32) = 1684631668;
  *(_QWORD *)(v6 + 40) = 0xE400000000000000;
  *(_QWORD *)(v6 + 72) = v4;
  *(_QWORD *)(v6 + 48) = 0xD000000000000024;
  *(_QWORD *)(v6 + 56) = 0x8000000244E58BB0;
  v7 = sub_244DB2520(v6);
  v8 = sub_244E4E280();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v2, 1, 1, v8);
  v9 = MEMORY[0x249526D9C](v5, v7, 1, 900, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_244DCAD6C((uint64_t)v2);
  return v9;
}

uint64_t sub_244DCAD6C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417B60);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_244DCADAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X3>, unint64_t a4@<X8>)
{
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  if (a1 < 1)
    goto LABEL_16;
  v6 = a2;
  v8 = (a2 % 10) | (16 * (a2 / 10 % 10));
  if ((v8 & 0x8000000000000000) != 0 || v8 > 0xFF)
  {
LABEL_18:
    result = sub_244E4E940();
    __break(1u);
  }
  else
  {
    v4 = a1;
    a3 = sub_244DCB694(0, 1, 1, MEMORY[0x24BEE4AF8], &qword_257416560);
    v7 = *((_QWORD *)a3 + 2);
    a4 = *((_QWORD *)a3 + 3);
    v5 = v7 + 1;
    if (v7 >= a4 >> 1)
      goto LABEL_17;
    while (1)
    {
      *((_QWORD *)a3 + 2) = v5;
      a3[v7 + 32] = v8;
      if (v4 == 1)
        return sub_244DA8730((uint64_t)a3);
      v8 = 0;
      while (1)
      {
        a4 = v8 + 1;
        v10 = v8 + 2;
        if (__OFADD__(v8 + 1, 1))
          break;
        v5 = v6 / 100;
        v11 = (v6 / 100 % 10) | (16 * (v6 / 1000 % 10));
        if ((v11 & 0x8000000000000000) != 0 || v11 > 0xFF)
          goto LABEL_18;
        v12 = a4 + v7;
        v13 = *((_QWORD *)a3 + 3);
        if (v12 >= v13 >> 1)
          a3 = sub_244DCB694((char *)(v13 > 1), v7 + v8 + 2, 1, a3, &qword_257416560);
        *((_QWORD *)a3 + 2) = v7 + v8 + 2;
        a3[v7 + 33 + v8++] = v11;
        v6 /= 100;
        if (v10 == v4)
          return sub_244DA8730((uint64_t)a3);
      }
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      a3 = sub_244DCB694((char *)(a4 > 1), v5, 1, a3, &qword_257416560);
    }
  }
  return result;
}

_QWORD *sub_244DCB02C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257417B90);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_244DCB8C0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_244DCB138(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_244DCB258(a1, a2, a3, a4, &qword_257417B88, (uint64_t (*)(_QWORD))MEMORY[0x24BDE41B0]);
}

char *sub_244DCB14C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257417B80);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_244DCB9B4(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_244DCB244(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_244DCB258(a1, a2, a3, a4, &qword_257416CF8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_244DCB258(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_244E4E940();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_244DCBB88(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_244DCB464(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257416CC8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_244DCBA98(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244DCB570(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257417B68);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_244DCBCA0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_244DCB694(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_244DCB9B4(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_244DCB788(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_257417B78);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_244DCBD94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_244DCB8AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_244DCB258(a1, a2, a3, a4, &qword_257417B70, (uint64_t (*)(_QWORD))MEMORY[0x24BE1BEE0]);
}

uint64_t sub_244DCB8C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244E4E994();
  __break(1u);
  return result;
}

char *sub_244DCB9B4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244DCBA98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244DCBB88(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244DCBCA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244DCBD94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ContentEnvironmentManager()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for ContentEnvironment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_244DCBEF4 + 4 * byte_244E55095[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_244DCBF28 + 4 * asc_244E55090[v4]))();
}

uint64_t sub_244DCBF28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DCBF30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DCBF38);
  return result;
}

uint64_t sub_244DCBF44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DCBF4CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_244DCBF50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DCBF58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentEnvironment()
{
  return &type metadata for ContentEnvironment;
}

unint64_t sub_244DCBF78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257417C50;
  if (!qword_257417C50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257417C58);
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_257417C50);
  }
  return result;
}

void sub_244DCBFC4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_244DCC004()
{
  char v1;

  v1 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
    __asm { BR              X10 }
  return 0x74666172642FLL;
}

void sub_244DCC18C(char *a1)
{
  sub_244D80120(*a1);
}

void sub_244DCC198()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_244E4EB80();
  __asm { BR              X9 }
}

uint64_t sub_244DCC1DC()
{
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

void sub_244DCC254()
{
  __asm { BR              X10 }
}

uint64_t sub_244DCC288()
{
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

void sub_244DCC2EC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_244E4EB80();
  __asm { BR              X9 }
}

uint64_t sub_244DCC32C()
{
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244DCC3A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244DCC4B0();
  *a1 = result;
  return result;
}

uint64_t sub_244DCC3D0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_244DCC3F8 + 4 * byte_244E550B3[*v0]))();
}

void sub_244DCC3F8(_QWORD *a1@<X8>)
{
  *a1 = 24945;
  a1[1] = 0xE200000000000000;
}

void sub_244DCC408(_QWORD *a1@<X8>)
{
  *a1 = 0x74656B72616D6171;
  a1[1] = 0xEB00000000676E69;
}

void sub_244DCC42C(_QWORD *a1@<X8>)
{
  *a1 = 0x7466617264;
  a1[1] = 0xE500000000000000;
}

void sub_244DCC444(_QWORD *a1@<X8>)
{
  *a1 = 1685025392;
  a1[1] = 0xE400000000000000;
}

void sub_244DCC458(_QWORD *a1@<X8>)
{
  *a1 = &unk_2515DA4E0;
}

unint64_t sub_244DCC46C()
{
  unint64_t result;

  result = qword_257417C60;
  if (!qword_257417C60)
  {
    result = MEMORY[0x2495282F0](&unk_244E551A4, &type metadata for ContentEnvironment);
    atomic_store(result, (unint64_t *)&qword_257417C60);
  }
  return result;
}

uint64_t sub_244DCC4B0()
{
  unint64_t v0;

  v0 = sub_244E4E9C4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

id sub_244DCC4F8()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for Daemon()), sel_init);
  qword_257417C70 = (uint64_t)result;
  return result;
}

id static Daemon.shared.getter()
{
  if (qword_257414478 != -1)
    swift_once();
  return (id)qword_257417C70;
}

Swift::Void __swiftcall Daemon.registerServiceListeners()()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v0 = sub_244E4C804();
  sub_244DCC620(v0, v1);
  swift_bridgeObjectRelease();
  v2 = sub_244E4C7F8();
  sub_244DCC620(v2, v3);
  swift_bridgeObjectRelease();
  v4 = sub_244E4C7E0();
  sub_244DCC620(v4, v5);
  swift_bridgeObjectRelease();
  v6 = sub_244E4C7EC();
  sub_244DCC620(v6, v7);
  swift_bridgeObjectRelease();
}

void sub_244DCC620(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint8_t *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143C8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D58);
  sub_244D640E4(v9, (uint64_t)v8);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_244D6412C((uint64_t)v8);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = swift_slowAlloc();
      v22 = v3;
      v15 = (uint8_t *)v14;
      v16 = swift_slowAlloc();
      v23 = a1;
      v17 = v16;
      v25 = v16;
      *(_DWORD *)v15 = 136315138;
      swift_bridgeObjectRetain();
      v24 = sub_244D9A70C(v23, a2, &v25);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v12, v13, "Registering service: [ %s ]", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v17, -1, -1);
      v18 = v15;
      v3 = v22;
      MEMORY[0x2495283BC](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  v19 = objc_allocWithZone(MEMORY[0x24BDD1998]);
  swift_bridgeObjectRetain();
  v20 = (void *)sub_244E4E2F8();
  swift_bridgeObjectRelease();
  v21 = objc_msgSend(v19, sel_initWithMachServiceName_, v20);

  objc_msgSend(v21, sel_setDelegate_, v3);
  objc_msgSend(v21, sel_resume);

}

Swift::Bool __swiftcall Daemon.listener(_:shouldAcceptNewConnection:)(NSXPCListener _, NSXPCConnection shouldAcceptNewConnection)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  objc_class *v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  void (*v44)(Class);
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57[3];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -[objc_class serviceName](shouldAcceptNewConnection.super.isa, sel_serviceName);
  if (v8)
  {
    v9 = v8;
    v10 = sub_244E4E31C();
    v12 = v11;

    v57[0] = v10;
    v57[1] = v12;
    sub_244DCCDD8(v57, &v56);
    swift_bridgeObjectRelease();
  }
  v13 = -[objc_class serviceName](shouldAcceptNewConnection.super.isa, sel_serviceName);
  if (!v13)
  {
    sub_244E4C804();
    goto LABEL_12;
  }
  v14 = v13;
  v15 = sub_244E4E31C();
  v17 = v16;

  v18 = sub_244E4C804();
  if (!v17)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (v15 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n();
    return sub_244DCDED0(shouldAcceptNewConnection.super.isa);
  }
  v21 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v21 & 1) != 0)
    return sub_244DCDED0(shouldAcceptNewConnection.super.isa);
LABEL_13:
  v22 = -[objc_class serviceName](shouldAcceptNewConnection.super.isa, sel_serviceName);
  if (!v22)
  {
    sub_244E4C7E0();
    goto LABEL_19;
  }
  v23 = v22;
  v24 = sub_244E4E31C();
  v26 = v25;

  v27 = sub_244E4C7E0();
  if (!v26)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  if (v24 == v27 && v26 == v28)
  {
    swift_bridgeObjectRelease_n();
    return sub_244DCE5BC(shouldAcceptNewConnection.super.isa);
  }
  v50 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v50 & 1) != 0)
    return sub_244DCE5BC(shouldAcceptNewConnection.super.isa);
LABEL_20:
  v29 = -[objc_class serviceName](shouldAcceptNewConnection.super.isa, sel_serviceName);
  if (!v29)
  {
    sub_244E4C7EC();
    goto LABEL_28;
  }
  v30 = v29;
  v31 = sub_244E4E31C();
  v33 = v32;

  v34 = sub_244E4C7EC();
  if (!v33)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  if (v31 == v34 && v33 == v35)
  {
    swift_bridgeObjectRelease_n();
    return sub_244DCEB00(shouldAcceptNewConnection.super.isa);
  }
  v51 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v51 & 1) != 0)
    return sub_244DCEB00(shouldAcceptNewConnection.super.isa);
LABEL_29:
  v37 = v2 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners;
  swift_beginAccess();
  v38 = _.super.isa;
  v39 = swift_bridgeObjectRetain();
  v40 = sub_244DCEEE4(v39);
  v42 = v41;
  swift_bridgeObjectRelease();

  if ((v42 & 1) == 0)
  {
    if ((v40 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v40 < *(_QWORD *)(*(_QWORD *)v37 + 16))
    {
      v43 = *(_QWORD *)v37 + 24 * v40;
      v44 = *(void (**)(Class))(v43 + 40);
      v45 = *(id *)(v43 + 32);
      swift_retain();
      v44(shouldAcceptNewConnection.super.isa);
      -[objc_class suspend](v38, sel_suspend);
      -[objc_class setDelegate:](v38, sel_setDelegate_, 0);
      swift_beginAccess();
      v46 = (void *)sub_244DCD034(v40);
      swift_endAccess();
      swift_release();

      swift_release();
      return 1;
    }
    __break(1u);
    goto LABEL_46;
  }
  if (qword_2574143C8 != -1)
LABEL_46:
    swift_once();
  v47 = __swift_project_value_buffer(v5, (uint64_t)qword_257419D58);
  sub_244D640E4(v47, (uint64_t)v7);
  v48 = sub_244E4DCD4();
  v49 = *(_QWORD *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v7, 1, v48) == 1)
  {
    sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v52 = sub_244E4DCBC();
    v53 = sub_244E4E67C();
    if (os_log_type_enabled(v52, v53))
    {
      v54 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v54 = 0;
      _os_log_impl(&dword_244D61000, v52, v53, "Service not found", v54, 2u);
      MEMORY[0x2495283BC](v54, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v49 + 8))(v7, v48);
  }
  return 0;
}

uint64_t sub_244DCCDD8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  BOOL *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  if (qword_2574143C8 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v5, (uint64_t)qword_257419D58);
  sub_244D640E4(v10, (uint64_t)v7);
  v11 = sub_244E4DCD4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  if (v13 == 1)
  {
    result = sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v24 = v9;
    swift_bridgeObjectRetain_n();
    v15 = sub_244E4DCBC();
    v16 = sub_244E4E670();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v23 = v2;
      v18 = (uint8_t *)v17;
      v21 = swift_slowAlloc();
      v26 = v21;
      v22 = a2;
      *(_DWORD *)v18 = 136315138;
      v20 = v18 + 4;
      swift_bridgeObjectRetain();
      v25 = sub_244D9A70C(v24, v8, &v26);
      a2 = v22;
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v15, v16, "Connecting to: [ %s ]", v18, 0xCu);
      v19 = v21;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v19, -1, -1);
      MEMORY[0x2495283BC](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  *a2 = v13 == 1;
  return result;
}

uint64_t sub_244DCD034(unint64_t a1)
{
  _QWORD **v1;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_244DCDC74(v3);
  v4 = v3[2];
  if (v4 <= a1)
  {
    __break(1u);
  }
  else
  {
    v5 = v4 - 1;
    v6 = v4 - 1 - a1;
    if (v6 >= 0)
    {
      v7 = &v3[3 * a1];
      v8 = v7[4];
      memmove(v7 + 4, v7 + 7, 24 * v6);
      v3[2] = v5;
      *v1 = v3;
      return v8;
    }
  }
  result = sub_244E4E994();
  __break(1u);
  return result;
}

uint64_t sub_244DCD180(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD v17[3];
  uint64_t v18;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143D8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    return sub_244D6412C((uint64_t)v4);
  v9 = a1;
  v10 = a1;
  v11 = sub_244E4DCBC();
  v12 = sub_244E4E670();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136446210;
    v17[1] = v13 + 4;
    swift_getErrorValue();
    v15 = sub_244E4EB2C();
    v17[2] = sub_244D9A70C(v15, v16, &v18);
    sub_244E4E7E4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_244D61000, v11, v12, "client creation error: %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495283BC](v14, -1, -1);
    MEMORY[0x2495283BC](v13, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

id sub_244DCD3D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  _QWORD v16[3];
  uint64_t v17;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143C8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v8 = sub_244E4DCBC();
    v9 = sub_244E4E688();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v16[1] = a1;
      v11 = (uint8_t *)v10;
      v12 = swift_slowAlloc();
      v17 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = sub_244E4C804();
      v16[2] = sub_244D9A70C(v13, v14, &v17);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v8, v9, "[%s] Connection was interrupted", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v12, -1, -1);
      MEMORY[0x2495283BC](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return sub_244DF1AB8();
}

id sub_244DCD5D8(uint64_t a1, void *a2, uint64_t (*a3)(void), void (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  _QWORD v24[2];
  void (*v25)(_QWORD);
  void *v26;
  uint64_t v27;
  uint64_t v28;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143C8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, (uint64_t)qword_257419D58);
  sub_244D640E4(v11, (uint64_t)v10);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
  {
    v14 = sub_244D6412C((uint64_t)v10);
  }
  else
  {
    v15 = sub_244E4DCBC();
    v16 = sub_244E4E688();
    if (os_log_type_enabled(v15, v16))
    {
      v25 = a4;
      v17 = swift_slowAlloc();
      v26 = a2;
      v18 = (uint8_t *)v17;
      v19 = swift_slowAlloc();
      v28 = v19;
      v24[1] = a1;
      *(_DWORD *)v18 = 136315138;
      v20 = a3();
      v27 = sub_244D9A70C(v20, v21, &v28);
      a4 = v25;
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v15, v16, "[%s] Connection was invalidated", v18, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v19, -1, -1);
      v22 = v18;
      a2 = v26;
      MEMORY[0x2495283BC](v22, -1, -1);
    }

    v14 = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  a4(v14);
  return objc_msgSend(a2, sel_setExportedObject_, 0);
}

uint64_t sub_244DCD80C()
{
  return sub_244DCDA38(MEMORY[0x24BDE3F88]);
}

id sub_244DCD818(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint8_t *v15;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143C8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v8 = sub_244E4DCBC();
    v9 = sub_244E4E688();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = swift_slowAlloc();
      v18 = a1;
      v11 = (uint8_t *)v10;
      v12 = swift_slowAlloc();
      v20 = v12;
      *(_DWORD *)v11 = 136315138;
      v13 = sub_244E4C7EC();
      v19 = sub_244D9A70C(v13, v14, &v20);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v8, v9, "[%s] Connection was invalidated", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v12, -1, -1);
      v15 = v11;
      a1 = v18;
      MEMORY[0x2495283BC](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return objc_msgSend(a1, sel_setExportedObject_, 0);
}

uint64_t sub_244DCDA2C()
{
  return sub_244DCDA38(MEMORY[0x24BDE3F90]);
}

uint64_t sub_244DCDA38(uint64_t (*a1)(void))
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143C8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
    return sub_244D6412C((uint64_t)v4);
  v9 = sub_244E4DCBC();
  v10 = sub_244E4E688();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v16 = v12;
    *(_DWORD *)v11 = 136315138;
    v13 = a1();
    v15 = sub_244D9A70C(v13, v14, &v16);
    sub_244E4E7E4();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_244D61000, v9, v10, "[%s] Connection was interrupted", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495283BC](v12, -1, -1);
    MEMORY[0x2495283BC](v11, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
}

id Daemon.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

_QWORD *sub_244DCDC74(_QWORD *a1)
{
  return sub_244DCB788(0, a1[2], 0, a1);
}

void sub_244DCDC88()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  unsigned __int8 v4;
  id v5;
  void *v6;
  unsigned int v7;
  id v8;
  id v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (!_set_user_dir_suffix())
  {
LABEL_9:
    sub_244E4E94C();
    __break(1u);
    return;
  }
  v0 = (void *)objc_opt_self();
  v1 = objc_msgSend(v0, sel_defaultManager);
  if (qword_2574143A0 != -1)
    swift_once();
  v2 = sub_244E4C2AC();
  __swift_project_value_buffer(v2, (uint64_t)qword_257419C90);
  sub_244E4C288();
  v3 = (void *)sub_244E4E2F8();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v1, sel_fileExistsAtPath_, v3);

  if ((v4 & 1) == 0)
  {
    v5 = objc_msgSend(v0, sel_defaultManager);
    v6 = (void *)sub_244E4C258();
    v10[0] = 0;
    v7 = objc_msgSend(v5, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v6, 1, 0, v10);

    if (v7)
    {
      v8 = v10[0];
      return;
    }
    v9 = v10[0];
    sub_244E4C1E0();

    swift_willThrow();
    goto LABEL_9;
  }
}

uint64_t sub_244DCDED0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  unint64_t v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  void *v51;
  id v52;
  _QWORD v53[2];
  uint8_t *v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  id v58;
  __int128 aBlock;
  __int128 v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;

  v63 = *MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v53 - v6;
  objc_msgSend(a1, sel_auditToken);
  v56 = v60;
  v57 = aBlock;
  v8 = (void *)objc_opt_self();
  v58 = 0;
  aBlock = v57;
  v60 = v56;
  v9 = objc_msgSend(v8, sel_bundleRecordForAuditToken_error_, &aBlock, &v58);
  if (!v9)
  {
    v27 = v58;
    v28 = (void *)sub_244E4C1E0();

    swift_willThrow();
LABEL_10:
    if (qword_2574143C8 != -1)
      swift_once();
    v29 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
    sub_244D640E4(v29, (uint64_t)v5);
    v30 = sub_244E4DCD4();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v5, 1, v30) == 1)
    {
      sub_244D6412C((uint64_t)v5);
    }
    else
    {
      v32 = sub_244E4DCBC();
      v33 = sub_244E4E67C();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_244D61000, v32, v33, "Unable to get bundle ID", v34, 2u);
        MEMORY[0x2495283BC](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v31 + 8))(v5, v30);
    }
    return 0;
  }
  v10 = v9;
  v11 = v58;
  v12 = objc_msgSend(v10, sel_bundleIdentifier);
  if (!v12)
  {

    goto LABEL_10;
  }
  v13 = v12;
  v14 = sub_244E4E31C();
  v16 = v15;

  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_interfaceWithProtocol_, &unk_25742ADB0);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v18);

  v61 = sub_244DCD180;
  v62 = 0;
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v60 = sub_244DCFC60;
  *((_QWORD *)&v60 + 1) = &block_descriptor_3;
  v19 = _Block_copy(&aBlock);
  v20 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v19);
  _Block_release(v19);
  sub_244E4E82C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417D10);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    return 0;
  }
  v21 = (uint64_t)v58;
  objc_allocWithZone((Class)type metadata accessor for PaymentTerminalService());
  v22 = a1;
  swift_unknownObjectRetain();
  *(_QWORD *)&v57 = v21;
  v23 = sub_244DF1208(v22, v21, v14, v16);
  if (qword_2574143C8 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
  sub_244D640E4(v24, (uint64_t)v7);
  v25 = sub_244E4DCD4();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v7, 1, v25) == 1)
  {
    sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v36 = sub_244E4DCBC();
    v37 = sub_244E4E688();
    if (os_log_type_enabled(v36, v37))
    {
      *(_QWORD *)&v56 = v36;
      v38 = (uint8_t *)swift_slowAlloc();
      v55 = swift_slowAlloc();
      *(_QWORD *)&aBlock = v55;
      v54 = v38;
      *(_DWORD *)v38 = 136315138;
      v53[1] = v38 + 4;
      v39 = sub_244E4C804();
      v58 = (id)sub_244D9A70C(v39, v40, (uint64_t *)&aBlock);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      v36 = v56;
      v41 = v37;
      v42 = v54;
      _os_log_impl(&dword_244D61000, (os_log_t)v56, v41, "Connecting to: [%s]", v54, 0xCu);
      v43 = v55;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v43, -1, -1);
      MEMORY[0x2495283BC](v42, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v25);
  }
  v44 = objc_msgSend(v17, sel_interfaceWithProtocol_, &unk_2574292B0);
  objc_msgSend(v22, sel_setExportedInterface_, v44);

  objc_msgSend(v22, sel_setExportedObject_, v23);
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v23;
  *(_QWORD *)(v45 + 24) = v22;
  v61 = sub_244DCF1AC;
  v62 = v45;
  v46 = MEMORY[0x24BDAC760];
  *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v60 = sub_244DB30BC;
  *((_QWORD *)&v60 + 1) = &block_descriptor_4;
  v47 = _Block_copy(&aBlock);
  v48 = v22;
  v49 = v23;
  swift_release();
  objc_msgSend(v48, sel_setInvalidationHandler_, v47);
  _Block_release(v47);
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = v49;
  v61 = sub_244DCF1D4;
  v62 = v50;
  *(_QWORD *)&aBlock = v46;
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v60 = sub_244DB30BC;
  *((_QWORD *)&v60 + 1) = &block_descriptor_10;
  v51 = _Block_copy(&aBlock);
  v52 = v49;
  swift_release();
  objc_msgSend(v48, sel_setInterruptionHandler_, v51);
  _Block_release(v51);
  objc_msgSend(v48, sel_resume);

  swift_unknownObjectRelease();
  return 1;
}

uint64_t sub_244DCE5BC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  char *v29;
  void *v30;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  __int128 v47;
  __int128 v48;
  __int128 aBlock;
  __int128 v50;
  void *v51;
  uint64_t v52;
  id v53[2];

  v53[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v47 - v6;
  objc_msgSend(a1, sel_auditToken);
  v47 = v50;
  v48 = aBlock;
  v8 = (void *)objc_opt_self();
  v53[0] = 0;
  aBlock = v48;
  v50 = v47;
  v9 = objc_msgSend(v8, sel_bundleRecordForAuditToken_error_, &aBlock, v53);
  if (!v9)
  {
    v32 = v53[0];
    v33 = (void *)sub_244E4C1E0();

    swift_willThrow();
LABEL_7:
    if (qword_2574143C8 != -1)
      swift_once();
    v34 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
    sub_244D640E4(v34, (uint64_t)v5);
    v35 = sub_244E4DCD4();
    v36 = *(_QWORD *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v5, 1, v35) != 1)
    {
      v38 = sub_244E4DCBC();
      v39 = sub_244E4E67C();
      if (os_log_type_enabled(v38, v39))
      {
        v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v40 = 0;
        _os_log_impl(&dword_244D61000, v38, v39, "Unable to get bundle ID", v40, 2u);
        MEMORY[0x2495283BC](v40, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v35);
      return 0;
    }
    v37 = (uint64_t)v5;
    goto LABEL_11;
  }
  v10 = v9;
  v11 = v53[0];
  v12 = objc_msgSend(v10, sel_bundleIdentifier);
  if (!v12)
  {

    goto LABEL_7;
  }
  v13 = v12;
  v14 = sub_244E4E31C();
  v16 = v15;

  v17 = objc_msgSend(v10, sel_teamIdentifier);
  if (v17)
  {
    v18 = v17;
    v19 = sub_244E4E31C();
    v21 = v20;

    objc_allocWithZone((Class)type metadata accessor for IdentityReaderService());
    v22 = a1;
    v23 = sub_244E248F4(v22, v14, v16, v19, v21);
    v24 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_257429508);
    objc_msgSend(v22, sel_setExportedInterface_, v24);

    objc_msgSend(v22, sel_setExportedObject_, v23);
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v23;
    *(_QWORD *)(v25 + 24) = v22;
    v51 = sub_244DCF1DC;
    v52 = v25;
    v26 = MEMORY[0x24BDAC760];
    *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v50 = sub_244DB30BC;
    *((_QWORD *)&v50 + 1) = &block_descriptor_16;
    v27 = _Block_copy(&aBlock);
    v28 = v22;
    v29 = v23;
    swift_release();
    objc_msgSend(v28, sel_setInvalidationHandler_, v27);
    _Block_release(v27);
    v51 = sub_244DCD80C;
    v52 = 0;
    *(_QWORD *)&aBlock = v26;
    *((_QWORD *)&aBlock + 1) = 1107296256;
    *(_QWORD *)&v50 = sub_244DB30BC;
    *((_QWORD *)&v50 + 1) = &block_descriptor_19;
    v30 = _Block_copy(&aBlock);
    objc_msgSend(v28, sel_setInterruptionHandler_, v30);
    _Block_release(v30);
    objc_msgSend(v28, sel_resume);

    return 1;
  }
  swift_bridgeObjectRelease();
  if (qword_2574143C8 != -1)
    swift_once();
  v41 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
  sub_244D640E4(v41, (uint64_t)v7);
  v42 = sub_244E4DCD4();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v7, 1, v42) != 1)
  {
    v44 = sub_244E4DCBC();
    v45 = sub_244E4E67C();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v46 = 0;
      _os_log_impl(&dword_244D61000, v44, v45, "Unable to read team identifier", v46, 2u);
      MEMORY[0x2495283BC](v46, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v42);
    return 0;
  }

  v37 = (uint64_t)v7;
LABEL_11:
  sub_244D6412C(v37);
  return 0;
}

uint64_t sub_244DCEB00(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  __int128 v31;
  __int128 v32;
  __int128 aBlock;
  __int128 v34;
  void *v35;
  uint64_t v36;
  id v37[2];

  v37[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(a1, sel_auditToken);
  v31 = v34;
  v32 = aBlock;
  v5 = (void *)objc_opt_self();
  v37[0] = 0;
  aBlock = v32;
  v34 = v31;
  v6 = objc_msgSend(v5, sel_bundleRecordForAuditToken_error_, &aBlock, v37);
  if (v6)
  {
    v7 = v6;
    v8 = v37[0];
    v9 = objc_msgSend(v7, sel_bundleIdentifier);
    if (v9)
    {
      v10 = v9;
      v11 = sub_244E4E31C();
      v13 = v12;

      objc_allocWithZone((Class)type metadata accessor for DiscoveryService());
      v14 = a1;
      v15 = sub_244D6BD60(v14, v11, v13);
      v16 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2574277C8);
      objc_msgSend(v14, sel_setExportedInterface_, v16);

      objc_msgSend(v14, sel_setExportedObject_, v15);
      v17 = swift_allocObject();
      *(_QWORD *)(v17 + 16) = v14;
      v35 = sub_244DCF228;
      v36 = v17;
      v18 = MEMORY[0x24BDAC760];
      *(_QWORD *)&aBlock = MEMORY[0x24BDAC760];
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v34 = sub_244DB30BC;
      *((_QWORD *)&v34 + 1) = &block_descriptor_25;
      v19 = _Block_copy(&aBlock);
      v20 = v14;
      swift_release();
      objc_msgSend(v20, sel_setInvalidationHandler_, v19);
      _Block_release(v19);
      v35 = sub_244DCDA2C;
      v36 = 0;
      *(_QWORD *)&aBlock = v18;
      *((_QWORD *)&aBlock + 1) = 1107296256;
      *(_QWORD *)&v34 = sub_244DB30BC;
      *((_QWORD *)&v34 + 1) = &block_descriptor_28;
      v21 = _Block_copy(&aBlock);
      objc_msgSend(v20, sel_setInterruptionHandler_, v21);
      _Block_release(v21);
      objc_msgSend(v20, sel_resume);

      return 1;
    }

  }
  else
  {
    v23 = v37[0];
    v24 = (void *)sub_244E4C1E0();

    swift_willThrow();
  }
  if (qword_2574143C8 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
  sub_244D640E4(v25, (uint64_t)v4);
  v26 = sub_244E4DCD4();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v4, 1, v26) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v28 = sub_244E4DCBC();
    v29 = sub_244E4E67C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_244D61000, v28, v29, "Unable to get bundle ID", v30, 2u);
      MEMORY[0x2495283BC](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v26);
  }
  return 0;
}

uint64_t sub_244DCEEE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t i;
  id v5;
  char v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  sub_244DCF230();
  v3 = 0;
  for (i = a1 + 48; ; i += 24)
  {
    v5 = *(id *)(i - 16);
    swift_retain();
    v6 = sub_244E4E778();
    swift_release();

    if ((v6 & 1) != 0)
      break;
    if (v1 == ++v3)
      return 0;
  }
  return v3;
}

uint64_t type metadata accessor for Daemon()
{
  return objc_opt_self();
}

uint64_t initializeBufferWithCopyOfBuffer for ListenerWrapper(uint64_t a1, __int128 *a2)
{
  uint64_t v3;
  __int128 v4;
  id v5;

  v3 = *((_QWORD *)a2 + 2);
  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = v3;
  v5 = (id)v4;
  swift_retain();
  return a1;
}

uint64_t destroy for ListenerWrapper(id *a1)
{

  return swift_release();
}

uint64_t assignWithCopy for ListenerWrapper(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ListenerWrapper(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListenerWrapper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListenerWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListenerWrapper()
{
  return &type metadata for ListenerWrapper;
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_244DCF180()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_244DCF1AC()
{
  uint64_t v0;

  return sub_244DCD5D8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), MEMORY[0x24BDE3FA0], (void (*)(_QWORD))sub_244DF1AB8);
}

id sub_244DCF1D4()
{
  uint64_t v0;

  return sub_244DCD3D0(*(_QWORD *)(v0 + 16));
}

id sub_244DCF1DC()
{
  uint64_t v0;

  return sub_244DCD5D8(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), MEMORY[0x24BDE3F88], (void (*)(_QWORD))sub_244E2207C);
}

uint64_t sub_244DCF204()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_244DCF228()
{
  uint64_t v0;

  return sub_244DCD818(*(void **)(v0 + 16));
}

unint64_t sub_244DCF230()
{
  unint64_t result;

  result = qword_257417D18;
  if (!qword_257417D18)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257417D18);
  }
  return result;
}

void static ServiceCleanupSystemTask.register()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)aBlock - v6;
  if (qword_257414408 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E18);
  sub_244D640E4(v8, (uint64_t)v7);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_244D61000, v12, v13, "[cleanup] Registering service", v14, 2u);
      MEMORY[0x2495283BC](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_sharedScheduler);
  v16 = (void *)sub_244E4E2F8();
  if (qword_257414460 != -1)
    swift_once();
  v17 = qword_2574160A8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v1;
  aBlock[4] = sub_244DCF8A4;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244DCFC60;
  aBlock[3] = &block_descriptor_4;
  v19 = _Block_copy(aBlock);
  swift_release();
  LOBYTE(v17) = objc_msgSend(v15, sel_registerForTaskWithIdentifier_usingQueue_launchHandler_, v16, v17, v19);
  _Block_release(v19);

  if ((v17 & 1) != 0)
  {

  }
  else
  {
    sub_244D640E4(v8, (uint64_t)v5);
    if (v11(v5, 1, v9) == 1)
    {

      sub_244D6412C((uint64_t)v5);
    }
    else
    {
      v20 = sub_244E4DCBC();
      v21 = sub_244E4E688();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_244D61000, v20, v21, "[cleanup] Cleanup service is already registered", v22, 2u);
        MEMORY[0x2495283BC](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
  }
}

uint64_t sub_244DCF604(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  _QWORD *v17;
  id v18;
  uint64_t v19;
  void *v20;
  _QWORD aBlock[6];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414408 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v7, (uint64_t)qword_257419E18);
  sub_244D640E4(v10, (uint64_t)v9);
  v11 = sub_244E4DCD4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11) == 1)
  {
    sub_244D6412C((uint64_t)v9);
  }
  else
  {
    v13 = sub_244E4DCBC();
    v14 = sub_244E4E688();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_244D61000, v13, v14, "[cleanup] Executing cleanup", v15, 2u);
      MEMORY[0x2495283BC](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
  }
  v16 = sub_244E4E55C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v6, 1, 1, v16);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = a2;
  v17[5] = a1;
  v18 = a1;
  v19 = sub_244DB2DDC((uint64_t)v6, (uint64_t)&unk_257417DC0, (uint64_t)v17);
  aBlock[4] = sub_244DD01FC;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244DB30BC;
  aBlock[3] = &block_descriptor_7;
  v20 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v18, sel_setExpirationHandler_, v20);
  _Block_release(v20);
  return swift_release();
}

uint64_t sub_244DCF894()
{
  return swift_deallocObject();
}

uint64_t sub_244DCF8A4(void *a1)
{
  uint64_t v1;

  return sub_244DCF604(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244DCF8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;

  v5[2] = a5;
  v5[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5[4] = swift_task_alloc();
  v6 = (_QWORD *)swift_task_alloc();
  v5[5] = v6;
  *v6 = v5;
  v6[1] = sub_244DCF91C;
  return sub_244DD03F8();
}

uint64_t sub_244DCF91C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DCF970()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;

  if ((sub_244E4E5E0() & 1) != 0)
  {
    sub_244DD0B2C(*(void **)(v0 + 16));
  }
  else
  {
    if (qword_257414408 != -1)
      swift_once();
    v1 = *(_QWORD *)(v0 + 32);
    v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 24), (uint64_t)qword_257419E18);
    sub_244D640E4(v2, v1);
    v3 = sub_244E4DCD4();
    v4 = *(_QWORD *)(v3 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3) == 1)
    {
      sub_244D6412C(*(_QWORD *)(v0 + 32));
    }
    else
    {
      v5 = sub_244E4DCBC();
      v6 = sub_244E4E688();
      if (os_log_type_enabled(v5, v6))
      {
        v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v7 = 0;
        _os_log_impl(&dword_244D61000, v5, v6, "[cleanup] BG task successfully completed", v7, 2u);
        MEMORY[0x2495283BC](v7, -1, -1);
      }
      v8 = *(_QWORD *)(v0 + 32);

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v3);
    }
    objc_msgSend(*(id *)(v0 + 16), sel_setTaskCompleted);
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DCFAD4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v10;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414408 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E18);
  sub_244D640E4(v3, (uint64_t)v2);
  v4 = sub_244E4DCD4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
  {
    sub_244D6412C((uint64_t)v2);
  }
  else
  {
    v6 = sub_244E4DCBC();
    v7 = sub_244E4E688();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_244D61000, v6, v7, "[cleanup] Terminating cleanup service on expirationHandler", v8, 2u);
      MEMORY[0x2495283BC](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v2, v4);
  }
  return sub_244E4E5BC();
}

void sub_244DCFC60(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_244DCFCC8(uint64_t *a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v18;
  uint64_t v19;

  v5 = *a1;
  v6 = a1[1];
  v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
  v8 = v7(*a1, v6);
  v10 = v9;
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(v5, v6);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v18 = *a2;
  *a2 = 0x8000000000000000;
  sub_244DE4FE0(v11, v8, v10, isUniquelyReferenced_nonNull_native);
  *a2 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13 = v7(v5, v6);
  v15 = v14;
  v16 = swift_isUniquelyReferenced_nonNull_native();
  v19 = *a3;
  *a3 = 0x8000000000000000;
  sub_244DE4E74(v5, v6, v13, v15, v16);
  *a3 = v19;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DCFDF8(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[2];
  int v37;
  uint64_t v38;
  NSObject *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_244E4E5EC();
  if (!v5)
  {
    v40 = a3;
    v41 = a4;
    if (qword_257414408 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v11, (uint64_t)qword_257419E18);
    sub_244D640E4(v15, (uint64_t)v13);
    v16 = sub_244E4DCD4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
    {
      result = sub_244D6412C((uint64_t)v13);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v18 = sub_244E4DCBC();
      v19 = sub_244E4E688();
      v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        v21 = swift_slowAlloc();
        v39 = v18;
        v22 = v21;
        v38 = swift_slowAlloc();
        v43 = v38;
        *(_DWORD *)v22 = 136315650;
        v36[1] = v22 + 4;
        swift_bridgeObjectRetain();
        v42 = sub_244D9A70C(a1, a2, &v43);
        v37 = v20;
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v22 + 12) = 2048;
        v42 = v40;
        sub_244E4E7E4();
        *(_WORD *)(v22 + 22) = 2048;
        v42 = v41;
        sub_244E4E7E4();
        _os_log_impl(&dword_244D61000, v39, (os_log_type_t)v37, "[cleanup] Performing service [ %s ] cleanup, counter previous: [ %lu ] current: [ %lu ]", (uint8_t *)v22, 0x20u);
        v23 = v17;
        v24 = a1;
        v25 = v38;
        swift_arrayDestroy();
        v26 = v25;
        a1 = v24;
        v17 = v23;
        MEMORY[0x2495283BC](v26, -1, -1);
        MEMORY[0x2495283BC](v22, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();

      }
      result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v13, v16);
    }
    v27 = *a5;
    v28 = *(_QWORD *)(*a5 + 16);
    v30 = v40;
    v29 = v41;
    if (v28)
    {
      swift_bridgeObjectRetain();
      v31 = sub_244DC859C(a1, a2);
      if ((v32 & 1) != 0)
      {
        v33 = (uint64_t *)(*(_QWORD *)(v27 + 56) + 16 * v31);
        v35 = *v33;
        v34 = v33[1];
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 24))(v30, v29, v35, v34);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t ServiceCleanupSystemTask.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ServiceCleanupSystemTask.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ServiceCleanupSystemTask()
{
  return objc_opt_self();
}

uint64_t method lookup function for ServiceCleanupSystemTask()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_244DD0158()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_244DD0184(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = v1[2];
  v5 = v1[3];
  v7 = v1[4];
  v6 = v1[5];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_244D70150;
  return sub_244DCF8AC(a1, v4, v5, v7, v6);
}

uint64_t sub_244DD01FC()
{
  return sub_244DCFAD4();
}

uint64_t sub_244DD0204(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  int64_t v25;

  v3 = v2;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a1 + 64);
  v25 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (!v8)
    goto LABEL_5;
LABEL_4:
  v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v11 | (v10 << 6); ; i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    v16 = 16 * i;
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v16);
    v18 = *v17;
    v19 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    swift_bridgeObjectRetain();
    a2(v18, v19, v21, v22);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_bridgeObjectRelease();
    if (v8)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v25)
      return swift_release();
    v14 = *(_QWORD *)(v24 + 8 * v10);
    if (!v14)
    {
      v15 = v10 + 1;
      if (v10 + 1 >= v25)
        return swift_release();
      v14 = *(_QWORD *)(v24 + 8 * v15);
      if (v14)
        goto LABEL_14;
      v15 = v10 + 2;
      if (v10 + 2 >= v25)
        return swift_release();
      v14 = *(_QWORD *)(v24 + 8 * v15);
      if (v14)
        goto LABEL_14;
      v15 = v10 + 3;
      if (v10 + 3 >= v25)
        return swift_release();
      v14 = *(_QWORD *)(v24 + 8 * v15);
      if (v14)
      {
LABEL_14:
        v10 = v15;
        goto LABEL_15;
      }
      v23 = v10 + 4;
      if (v10 + 4 >= v25)
        return swift_release();
      v14 = *(_QWORD *)(v24 + 8 * v23);
      v10 += 4;
      if (!v14)
        break;
    }
LABEL_15:
    v8 = (v14 - 1) & v14;
  }
  while (1)
  {
    v10 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v10 >= v25)
      return swift_release();
    v14 = *(_QWORD *)(v24 + 8 * v10);
    ++v23;
    if (v14)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_244DD03F8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = sub_244E4E544();
  v0[5] = v1;
  v0[6] = *(_QWORD *)(v1 - 8);
  v0[7] = swift_task_alloc();
  v0[8] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v0[9] = swift_task_alloc();
  v0[10] = swift_task_alloc();
  v0[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DD0498()
{
  uint64_t v0;
  id v1;
  void *v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21[3];

  if (qword_2574144C0 != -1)
    swift_once();
  v1 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v2 = (void *)sub_244E4E2F8();
  v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  if (v3)
  {
    v4 = type metadata accessor for PaymentTerminalService();
    v20 = MEMORY[0x24BEE4B00];
    *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4B00];
    v21[0] = v4;
    v21[1] = (uint64_t)&off_2515E0C40;
    sub_244DCFCC8(v21, &v20, (uint64_t *)(v0 + 16));
    v5 = qword_257419F20;
    v6 = v20;
    v7 = *(os_unfair_lock_s **)(qword_257419F20 + 16);
    v8 = swift_task_alloc();
    *(_QWORD *)(v8 + 16) = v5;
    *(_QWORD *)(v8 + 24) = v6;
    v9 = swift_task_alloc();
    *(_QWORD *)(v9 + 16) = sub_244DD0F04;
    *(_QWORD *)(v9 + 24) = v8;
    v7 += 4;
    swift_bridgeObjectRetain();
    os_unfair_lock_lock(v7);
    (*(void (**)(uint64_t *__return_ptr))(v9 + 16))(v21);
    v18 = v21[0];
    os_unfair_lock_unlock(v7);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_QWORD *)(swift_task_alloc() + 16) = v0 + 16;
    sub_244DD0204(v18, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_244DD0F1C);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_257414408 != -1)
      swift_once();
    v10 = *(_QWORD *)(v0 + 88);
    v11 = __swift_project_value_buffer(*(_QWORD *)(v0 + 64), (uint64_t)qword_257419E18);
    sub_244D640E4(v11, v10);
    v12 = sub_244E4DCD4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
    {
      sub_244D6412C(*(_QWORD *)(v0 + 88));
    }
    else
    {
      v14 = sub_244E4DCBC();
      v15 = sub_244E4E688();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_244D61000, v14, v15, "[cleanup] Not needed", v16, 2u);
        MEMORY[0x2495283BC](v16, -1, -1);
      }
      v17 = *(_QWORD *)(v0 + 88);

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v12);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_244DD0B2C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  id v23;
  void *v24;
  _QWORD *v25;
  _QWORD v26[2];
  _QWORD *v27;
  id v28[2];

  v28[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v26 - v6;
  if (qword_257414408 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E18);
  sub_244D640E4(v8, (uint64_t)v7);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_244D61000, v12, v13, "[cleanup] Re-scheduled task", v14, 2u);
      MEMORY[0x2495283BC](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  sub_244E4E610();
  v28[0] = 0;
  if (objc_msgSend(a1, sel_setTaskExpiredWithRetryAfter_error_, v28))
  {
    v15 = v28[0];
  }
  else
  {
    v27 = v28[0];
    v16 = v28[0];
    v17 = (void *)sub_244E4C1E0();

    swift_willThrow();
    sub_244D640E4(v8, (uint64_t)v5);
    if (v11(v5, 1, v9) == 1)
    {
      sub_244D6412C((uint64_t)v5);
    }
    else
    {
      v18 = v17;
      v19 = v17;
      v20 = sub_244E4DCBC();
      v21 = sub_244E4E67C();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v27 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v22 = 138412290;
        v26[1] = v22 + 4;
        v23 = v17;
        v24 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v28[0] = v24;
        sub_244E4E7E4();
        v25 = v27;
        *v27 = v24;

        _os_log_impl(&dword_244D61000, v20, v21, "[cleanup] Completing task due to re-schedule error [%@]", v22, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v25, -1, -1);
        MEMORY[0x2495283BC](v22, -1, -1);

      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
    }
    objc_msgSend(a1, sel_setTaskCompleted);

  }
}

uint64_t sub_244DD0F04@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_244DE8588(*(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_244DD0F1C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_244DCFDF8(a1, a2, a3, a4, *(uint64_t **)(v4 + 16));
}

uint64_t sub_244DD0F3C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 57) = a2;
  *(_QWORD *)(v3 + 64) = a1;
  *(_QWORD *)(v3 + 72) = v2;
  v4 = sub_244E4C024();
  *(_QWORD *)(v3 + 80) = v4;
  *(_QWORD *)(v3 + 88) = *(_QWORD *)(v4 - 8);
  *(_QWORD *)(v3 + 96) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  *(_QWORD *)(v3 + 104) = swift_task_alloc();
  v5 = sub_244E4C2AC();
  *(_QWORD *)(v3 + 112) = v5;
  *(_QWORD *)(v3 + 120) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 128) = swift_task_alloc();
  *(_QWORD *)(v3 + 136) = swift_task_alloc();
  return swift_task_switch();
}

void sub_244DD0FFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + 57);
  sub_244E4E88C();
  sub_244E4D1AC();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244DCBFC4(v1);
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  __asm { BR              X9 }
}

uint64_t sub_244DD10CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v2 = v0[16];
  v1 = v0[17];
  v4 = v0[14];
  v3 = v0[15];
  v5 = v0[12];
  v6 = v0[13];
  v7 = v0[9];
  sub_244E4C294();
  swift_bridgeObjectRelease();
  sub_244E4C228();
  swift_bridgeObjectRelease();
  sub_244D66F54(v6, &qword_257414B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  sub_244E4BFF4();
  sub_244E4BFC4();
  v8 = (_QWORD *)swift_task_alloc();
  v0[18] = v8;
  v8[2] = v7;
  v8[3] = v5;
  v8[4] = v1;
  v9 = (_QWORD *)swift_task_alloc();
  v0[19] = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415088);
  *v9 = v0;
  v9[1] = sub_244DD1238;
  return sub_244E4EAB4();
}

uint64_t sub_244DD1238()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DD1294()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v8;
  __int128 v9;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 64);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 120) + 8))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 112));
  v8 = *(_OWORD *)(v0 + 32);
  v9 = *(_OWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)v4 = v9;
  *(_OWORD *)(v4 + 16) = v8;
  *(_QWORD *)(v4 + 32) = v5;
  *(_BYTE *)(v4 + 40) = v6;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DD1354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(char *, uint64_t, uint64_t);
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint8_t *v29;
  uint64_t v30;
  unint64_t v31;
  os_log_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  uint8_t *v42;
  uint8_t *v43;
  int v44;
  uint64_t v45;
  os_log_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;

  v6 = sub_244E4C2AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v42 - v14;
  v16 = *(_QWORD *)a1;
  v17 = *(_QWORD *)(a1 + 8);
  v19 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  v20 = *(_QWORD *)(a1 + 32);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v51 = *(_QWORD *)(a1 + 8);
    v52 = v18;
    v49 = v16;
    v50 = a2;
    v21 = qword_257414430;
    v22 = v20;
    swift_bridgeObjectRetain();
    v53 = v22;
    swift_bridgeObjectRetain();
    if (v21 != -1)
      swift_once();
    v23 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E90);
    sub_244D640E4(v23, (uint64_t)v15);
    v24 = sub_244E4DCD4();
    v48 = *(_QWORD *)(v24 - 8);
    v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
    if (v25(v15, 1, v24) == 1)
    {
      sub_244D66F54((uint64_t)v15, &qword_2574145A0);
    }
    else
    {
      v47 = v23;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
      v26 = sub_244E4DCBC();
      v27 = sub_244E4E67C();
      v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        v46 = v26;
        v29 = (uint8_t *)swift_slowAlloc();
        v45 = swift_slowAlloc();
        v55 = v45;
        v44 = v28;
        *(_DWORD *)v29 = 136315138;
        v42 = v29 + 4;
        v43 = v29;
        v30 = sub_244E4C21C();
        v54 = sub_244D9A70C(v30, v31, &v55);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        v32 = v46;
        v33 = v43;
        _os_log_impl(&dword_244D61000, v46, (os_log_type_t)v44, "Issue with request: %s", v43, 0xCu);
        v34 = v45;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v34, -1, -1);
        MEMORY[0x2495283BC](v33, -1, -1);

      }
      else
      {

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v15, v24);
      v23 = v47;
    }
    sub_244D640E4(v23, (uint64_t)v13);
    if (v25(v13, 1, v24) == 1)
    {
      sub_244D66F54((uint64_t)v13, &qword_2574145A0);
    }
    else
    {
      v35 = v24;
      swift_bridgeObjectRetain_n();
      v36 = v53;
      swift_bridgeObjectRetain_n();
      v37 = sub_244E4DCBC();
      v38 = sub_244E4E67C();
      if (os_log_type_enabled(v37, v38))
      {
        v39 = swift_slowAlloc();
        v40 = swift_slowAlloc();
        v55 = v40;
        *(_DWORD *)v39 = 136315394;
        swift_bridgeObjectRetain();
        v54 = sub_244D9A70C(v51, v19, &v55);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v39 + 12) = 2080;
        swift_bridgeObjectRetain();
        v54 = sub_244D9A70C(v52, v36, &v55);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244D61000, v37, v38, "Error downloading configuration: %s - %s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v40, -1, -1);
        MEMORY[0x2495283BC](v39, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v35);
    }
    v55 = v49;
    v56 = v51;
    v57 = v19;
    v58 = v52;
    v59 = v53;
    v60 = 1;
  }
  else
  {
    v55 = *(_QWORD *)a1;
    v56 = v17;
    v57 = v19;
    v58 = v18;
    v59 = v20;
    v60 = 0;
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417EB0);
  return sub_244E4E52C();
}

uint64_t sub_244DD18A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, void (*a8)(char *, uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);

  v32 = a7;
  v33 = a8;
  v29 = a4;
  v30 = a6;
  v26 = a3;
  v27 = a1;
  v31 = a2;
  v9 = sub_244E4C2AC();
  v10 = *(_QWORD *)(v9 - 8);
  v24 = v9;
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x24BDAC7A8](v9);
  v25 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_244E4C024();
  v17 = *(_QWORD *)(v16 - 8);
  v28 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v17 + 16))(v19, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v27, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v9);
  v20 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v21 = (v14 + *(unsigned __int8 *)(v10 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v22 + v20, v15, v12);
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v22 + v21, v25, v24);
  v33(v19, v32, v22);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v28);
}

uint64_t sub_244DD1A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  NSObject *v25;
  os_log_type_t v26;
  int v27;
  uint8_t *v28;
  uint64_t v29;
  unint64_t v30;
  os_log_t v31;
  uint8_t *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint8_t *v41;
  uint8_t *v42;
  int v43;
  uint64_t v44;
  os_log_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;

  v6 = sub_244E4C2AC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v41 - v14;
  v16 = *(_QWORD *)(a1 + 8);
  v18 = *(_QWORD *)(a1 + 16);
  v17 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a1 + 32);
  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
  {
    v48 = *(_QWORD *)a1;
    v49 = a2;
    v50 = v17;
    v51 = v16;
    v20 = qword_257414430;
    v21 = v19;
    swift_bridgeObjectRetain();
    v52 = v21;
    swift_bridgeObjectRetain();
    if (v20 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v10, (uint64_t)qword_257419E90);
    sub_244D640E4(v22, (uint64_t)v15);
    v23 = sub_244E4DCD4();
    v47 = *(_QWORD *)(v23 - 8);
    v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
    if (v24(v15, 1, v23) == 1)
    {
      sub_244D66F54((uint64_t)v15, &qword_2574145A0);
    }
    else
    {
      v46 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
      v25 = sub_244E4DCBC();
      v26 = sub_244E4E67C();
      v27 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        v45 = v25;
        v28 = (uint8_t *)swift_slowAlloc();
        v44 = swift_slowAlloc();
        v54 = v44;
        v43 = v27;
        *(_DWORD *)v28 = 136315138;
        v41 = v28 + 4;
        v42 = v28;
        v29 = sub_244E4C21C();
        v53 = sub_244D9A70C(v29, v30, &v54);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        v31 = v45;
        v32 = v42;
        _os_log_impl(&dword_244D61000, v45, (os_log_type_t)v43, "Issue with request: %s", v42, 0xCu);
        v33 = v44;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v33, -1, -1);
        MEMORY[0x2495283BC](v32, -1, -1);

      }
      else
      {

        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v23);
      v22 = v46;
    }
    sub_244D640E4(v22, (uint64_t)v13);
    if (v24(v13, 1, v23) == 1)
    {
      sub_244D66F54((uint64_t)v13, &qword_2574145A0);
    }
    else
    {
      v34 = v23;
      swift_bridgeObjectRetain_n();
      v35 = v52;
      swift_bridgeObjectRetain_n();
      v36 = sub_244E4DCBC();
      v37 = sub_244E4E67C();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = swift_slowAlloc();
        v39 = swift_slowAlloc();
        v54 = v39;
        *(_DWORD *)v38 = 136315394;
        swift_bridgeObjectRetain();
        v53 = sub_244D9A70C(v51, v18, &v54);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v38 + 12) = 2080;
        swift_bridgeObjectRetain();
        v53 = sub_244D9A70C(v50, v35, &v54);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244D61000, v36, v37, "Error downloading manifest: %s - %s", (uint8_t *)v38, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v39, -1, -1);
        MEMORY[0x2495283BC](v38, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v47 + 8))(v13, v34);
    }
    v54 = v48;
    v55 = v51;
    v56 = v18;
    v57 = v50;
    v58 = v52;
    v59 = 1;
  }
  else
  {
    v54 = *(_QWORD *)a1;
    v55 = v16;
    v56 = v18;
    v57 = v17;
    v58 = v19;
    v59 = 0;
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417ED8);
  return sub_244E4E52C();
}

void sub_244DD1FB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = v3;
  v21 = a2;
  v22 = a3;
  v6 = sub_244E4C024();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v11 = (void *)sub_244E4BFD0();
  v12 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = (char *)swift_allocObject();
  v15 = v21;
  v16 = v22;
  *((_QWORD *)v14 + 2) = v12;
  *((_QWORD *)v14 + 3) = v15;
  *((_QWORD *)v14 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[v13], v9, v6);
  aBlock[4] = sub_244DD3DC8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244D88614;
  aBlock[3] = &block_descriptor_5;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v10, sel_dataTaskWithRequest_completionHandler_, v11, v17);
  _Block_release(v17);

  v19 = *(void **)(v4 + 16);
  *(_QWORD *)(v4 + 16) = v18;
  v20 = v18;

  objc_msgSend(v20, sel_resume);
}

void sub_244DD2194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v4 = v3;
  v21 = a2;
  v22 = a3;
  v6 = sub_244E4C024();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = objc_msgSend((id)objc_opt_self(), sel_sharedSession);
  v11 = (void *)sub_244E4BFD0();
  v12 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  v13 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v14 = (char *)swift_allocObject();
  v15 = v21;
  v16 = v22;
  *((_QWORD *)v14 + 2) = v12;
  *((_QWORD *)v14 + 3) = v15;
  *((_QWORD *)v14 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v14[v13], v9, v6);
  aBlock[4] = sub_244DD439C;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244D88614;
  aBlock[3] = &block_descriptor_18;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v18 = objc_msgSend(v10, sel_dataTaskWithRequest_completionHandler_, v11, v17);
  _Block_release(v17);

  v19 = *(void **)(v4 + 16);
  *(_QWORD *)(v4 + 16) = v18;
  v20 = v18;

  objc_msgSend(v20, sel_resume);
}

void sub_244DD2378(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(_BYTE *), uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t Strong;
  void *v35;
  id v36;
  id v37;
  id v38;
  char v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  void *v76;
  os_log_type_t v77;
  uint8_t *v78;
  _QWORD *v79;
  id v80;
  uint64_t v81;
  uint8_t *v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  id v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint8_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  os_log_type_t v104;
  uint8_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  unint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(_BYTE *);
  id v118;
  uint64_t v119;
  _BYTE v120[40];
  char v121;

  v108 = a8;
  v109 = a1;
  v116 = a7;
  v117 = a6;
  v118 = a4;
  v111 = a3;
  v112 = a2;
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v8 = MEMORY[0x24BDAC7A8](v115);
  v10 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v106 = (uint64_t)&v106 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v107 = (uint64_t)&v106 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v114 = (uint64_t)&v106 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v113 = (char *)&v106 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v110 = (uint64_t)&v106 - v19;
  v20 = sub_244E4C45C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v106 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417EB8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v106 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_244E4C474();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v35 = *(void **)(Strong + 16);
    *(_QWORD *)(Strong + 16) = 0;
    swift_release();

  }
  v36 = v118;
  if (!v118)
  {
    v49 = v111;
    v50 = v112;
    if (!v111 || (objc_opt_self(), (v51 = swift_dynamicCastObjCClass()) == 0) || v50 >> 60 == 15)
    {
      if (qword_257414430 != -1)
        swift_once();
      v59 = __swift_project_value_buffer(v115, (uint64_t)qword_257419E90);
      sub_244D640E4(v59, (uint64_t)v10);
      v60 = sub_244E4DCD4();
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v10, 1, v60) == 1)
      {
        sub_244D66F54((uint64_t)v10, &qword_2574145A0);
      }
      else
      {
        v83 = sub_244E4DCBC();
        v84 = sub_244E4E67C();
        if (os_log_type_enabled(v83, v84))
        {
          v85 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v85 = 0;
          _os_log_impl(&dword_244D61000, v83, v84, "Execute download file - internalError - Channel failure, nil api service", v85, 2u);
          MEMORY[0x2495283BC](v85, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v60);
      }
      *(_OWORD *)v120 = xmmword_244E51C80;
      *(_OWORD *)&v120[16] = xmmword_244E51C90;
      *(_QWORD *)&v120[32] = 0x8000000244E578B0;
      v121 = 1;
      v117(v120);
      return;
    }
    v52 = (void *)v51;
    v53 = v49;
    v54 = v109;
    sub_244D73FAC(v109, v50);
    sub_244D83E9C(v108, v54, v50, v52);
    if ((char *)objc_msgSend(v52, sel_statusCode) - 300 >= (char *)0xFFFFFFFFFFFFFF9CLL)
    {
      v89 = sub_244DC73AC();
      if (v89)
      {
        *(_QWORD *)v120 = v89;
        memset(&v120[8], 0, 32);
        v121 = 0;
        v117(v120);
        sub_244D65198(v54, v50);
LABEL_58:
        swift_bridgeObjectRelease();
LABEL_63:

        return;
      }
      if (qword_257414430 != -1)
        swift_once();
      v95 = __swift_project_value_buffer(v115, (uint64_t)qword_257419E90);
      v96 = v106;
      sub_244D640E4(v95, v106);
      v97 = sub_244E4DCD4();
      v98 = *(_QWORD *)(v97 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97) == 1)
      {
        sub_244D66F54(v96, &qword_2574145A0);
      }
      else
      {
        v103 = sub_244E4DCBC();
        v104 = sub_244E4E67C();
        if (os_log_type_enabled(v103, v104))
        {
          v105 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v105 = 0;
          _os_log_impl(&dword_244D61000, v103, v104, "Execute download file - internalError - no available content", v105, 2u);
          MEMORY[0x2495283BC](v105, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
      }
    }
    else
    {
      if (qword_257414430 != -1)
        swift_once();
      v55 = __swift_project_value_buffer(v115, (uint64_t)qword_257419E90);
      v56 = v107;
      sub_244D640E4(v55, v107);
      v57 = sub_244E4DCD4();
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
      {
        sub_244D66F54(v56, &qword_2574145A0);
      }
      else
      {
        v90 = v53;
        v91 = sub_244E4DCBC();
        v92 = sub_244E4E67C();
        if (os_log_type_enabled(v91, v92))
        {
          v118 = v53;
          v93 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v93 = 134217984;
          *(_QWORD *)v120 = objc_msgSend(v52, sel_statusCode);
          v53 = v118;
          v54 = v109;
          sub_244E4E7E4();

          _os_log_impl(&dword_244D61000, v91, v92, "Execute download file - serverError - Invalid status from server: %ld", v93, 0xCu);
          v94 = v93;
          v50 = v112;
          MEMORY[0x2495283BC](v94, -1, -1);
        }
        else
        {

        }
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v107, v57);
      }
      v99 = sub_244DC44BC();
      if (v100)
      {
        *(_QWORD *)v120 = 4;
        *(_QWORD *)&v120[8] = v99;
        *(_QWORD *)&v120[16] = v100;
        *(_QWORD *)&v120[24] = v101;
        *(_QWORD *)&v120[32] = v102;
        v121 = 1;
        v117(v120);
        sub_244D65198(v54, v50);
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
    }
    *(_OWORD *)v120 = xmmword_244E51CE0;
    *(_OWORD *)&v120[16] = xmmword_244E51CF0;
    *(_QWORD *)&v120[32] = 0x8000000244E57950;
    v121 = 1;
    v117(v120);
    sub_244D65198(v54, v50);
    goto LABEL_63;
  }
  *(_QWORD *)v120 = v118;
  v37 = v118;
  v38 = v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
  v39 = swift_dynamicCast();
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  if ((v39 & 1) != 0)
  {
    v40(v29, 0, 1, v30);
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v29, v30);
    sub_244D65324(&qword_257417EC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF610], MEMORY[0x24BDCF608]);
    sub_244E4C198();
    sub_244E4C468();
    sub_244D65324(&qword_257417EC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF5D8], MEMORY[0x24BDCF5F0]);
    sub_244E4E49C();
    sub_244E4E49C();
    v42 = v119;
    v41 = *(_QWORD *)v120;
    v43 = *(void (**)(char *, uint64_t))(v21 + 8);
    v43(v24, v20);
    v43(v26, v20);
    if (v41 == v42)
    {
      v44 = v115;
      if (qword_257414430 != -1)
        swift_once();
      v45 = __swift_project_value_buffer(v44, (uint64_t)qword_257419E90);
      v46 = v110;
      sub_244D640E4(v45, v110);
      v47 = sub_244E4DCD4();
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
      {
        sub_244D66F54(v46, &qword_2574145A0);
      }
      else
      {
        v86 = sub_244E4DCBC();
        v87 = sub_244E4E67C();
        if (os_log_type_enabled(v86, v87))
        {
          v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v88 = 0;
          _os_log_impl(&dword_244D61000, v86, v87, "Execute download file - request cancelled", v88, 2u);
          MEMORY[0x2495283BC](v88, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
      }
      *(_OWORD *)v120 = xmmword_244E55270;
      *(_OWORD *)&v120[16] = xmmword_244E55280;
      *(_QWORD *)&v120[32] = 0xEE0064656C6C6563;
      v121 = 1;
      v117(v120);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      return;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    v36 = v118;
  }
  else
  {
    v40(v29, 1, 1, v30);
    sub_244D66F54((uint64_t)v29, &qword_257417EB8);
  }
  v62 = v115;
  v63 = (uint64_t)v113;
  if (qword_257414430 != -1)
    swift_once();
  v64 = __swift_project_value_buffer(v62, (uint64_t)qword_257419E90);
  sub_244D640E4(v64, v63);
  v65 = sub_244E4DCD4();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  if (v67(v63, 1, v65) == 1)
  {
    sub_244D66F54(v63, &qword_2574145A0);
  }
  else
  {
    v68 = sub_244E4DCBC();
    v69 = sub_244E4E67C();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v70 = 0;
      _os_log_impl(&dword_244D61000, v68, v69, "Execute download file - networkError - Server not reachable", v70, 2u);
      MEMORY[0x2495283BC](v70, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v63, v65);
    v36 = v118;
  }
  v71 = v64;
  v72 = v114;
  sub_244D640E4(v71, v114);
  if (v67(v72, 1, v65) == 1)
  {
    sub_244D66F54(v72, &qword_2574145A0);
  }
  else
  {
    v73 = v36;
    v74 = v36;
    v75 = sub_244E4DCBC();
    v76 = v36;
    v77 = sub_244E4E67C();
    if (os_log_type_enabled(v75, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      v79 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v78 = 138412290;
      v80 = v76;
      v81 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)v120 = v81;
      sub_244E4E7E4();
      *v79 = v81;

      _os_log_impl(&dword_244D61000, v75, v77, "Error processing request: %@", v78, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v79, -1, -1);
      v82 = v78;
      v72 = v114;
      MEMORY[0x2495283BC](v82, -1, -1);

    }
    else
    {

    }
    v36 = v76;
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v72, v65);
  }
  *(_OWORD *)v120 = xmmword_244E51CC0;
  *(_OWORD *)&v120[16] = xmmword_244E51CD0;
  *(_QWORD *)&v120[32] = 0x8000000244E57900;
  v121 = 1;
  v117(v120);

}

void sub_244DD3050(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(__int128 *), uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t Strong;
  void *v35;
  id v36;
  id v37;
  id v38;
  char v39;
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  unint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  NSObject *v68;
  os_log_type_t v69;
  uint8_t *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  NSObject *v75;
  void *v76;
  os_log_type_t v77;
  uint8_t *v78;
  _QWORD *v79;
  id v80;
  uint64_t v81;
  uint8_t *v82;
  NSObject *v83;
  os_log_type_t v84;
  uint8_t *v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint8_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  NSObject *v104;
  os_log_type_t v105;
  uint8_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(__int128 *);
  id v119;
  uint64_t v120;
  __int128 v121;
  __int128 v122;
  unint64_t v123;
  char v124;

  v109 = a8;
  v110 = a1;
  v117 = a7;
  v118 = a6;
  v119 = a4;
  v112 = a3;
  v113 = a2;
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v8 = MEMORY[0x24BDAC7A8](v116);
  v10 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v107 = (uint64_t)&v107 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v108 = (uint64_t)&v107 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v115 = (uint64_t)&v107 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v114 = (char *)&v107 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v111 = (uint64_t)&v107 - v19;
  v20 = sub_244E4C45C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v107 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417EB8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v107 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_244E4C474();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v33 = (char *)&v107 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v35 = *(void **)(Strong + 16);
    *(_QWORD *)(Strong + 16) = 0;
    swift_release();

  }
  v36 = v119;
  if (!v119)
  {
    v49 = v112;
    v50 = v113;
    if (!v112 || (objc_opt_self(), (v51 = swift_dynamicCastObjCClass()) == 0) || v50 >> 60 == 15)
    {
      if (qword_257414430 != -1)
        swift_once();
      v59 = __swift_project_value_buffer(v116, (uint64_t)qword_257419E90);
      sub_244D640E4(v59, (uint64_t)v10);
      v60 = sub_244E4DCD4();
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v10, 1, v60) == 1)
      {
        sub_244D66F54((uint64_t)v10, &qword_2574145A0);
      }
      else
      {
        v83 = sub_244E4DCBC();
        v84 = sub_244E4E67C();
        if (os_log_type_enabled(v83, v84))
        {
          v85 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v85 = 0;
          _os_log_impl(&dword_244D61000, v83, v84, "Execute download file - internalError - Channel failure, nil api service", v85, 2u);
          MEMORY[0x2495283BC](v85, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v60);
      }
      v121 = xmmword_244E51C80;
      v122 = xmmword_244E51C90;
      v123 = 0x8000000244E578B0;
      v124 = 1;
      v118(&v121);
      return;
    }
    v52 = (void *)v51;
    v53 = v49;
    v54 = v110;
    sub_244D73FAC(v110, v50);
    sub_244D83E9C(v109, v54, v50, v52);
    if ((char *)objc_msgSend(v52, sel_statusCode) - 300 >= (char *)0xFFFFFFFFFFFFFF9CLL)
    {
      v89 = sub_244DC771C();
      if (v90)
      {
        *(_QWORD *)&v121 = v89;
        *((_QWORD *)&v121 + 1) = v90;
        v123 = 0;
        v122 = 0uLL;
        v124 = 0;
        v118(&v121);
        sub_244D65198(v54, v50);
LABEL_58:
        swift_bridgeObjectRelease();
LABEL_63:

        return;
      }
      if (qword_257414430 != -1)
        swift_once();
      v96 = __swift_project_value_buffer(v116, (uint64_t)qword_257419E90);
      v97 = v107;
      sub_244D640E4(v96, v107);
      v98 = sub_244E4DCD4();
      v99 = *(_QWORD *)(v98 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98) == 1)
      {
        sub_244D66F54(v97, &qword_2574145A0);
      }
      else
      {
        v104 = sub_244E4DCBC();
        v105 = sub_244E4E67C();
        if (os_log_type_enabled(v104, v105))
        {
          v106 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v106 = 0;
          _os_log_impl(&dword_244D61000, v104, v105, "Execute download file - internalError - no available content", v106, 2u);
          MEMORY[0x2495283BC](v106, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v97, v98);
      }
    }
    else
    {
      if (qword_257414430 != -1)
        swift_once();
      v55 = __swift_project_value_buffer(v116, (uint64_t)qword_257419E90);
      v56 = v108;
      sub_244D640E4(v55, v108);
      v57 = sub_244E4DCD4();
      v58 = *(_QWORD *)(v57 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57) == 1)
      {
        sub_244D66F54(v56, &qword_2574145A0);
      }
      else
      {
        v91 = v53;
        v92 = sub_244E4DCBC();
        v93 = sub_244E4E67C();
        if (os_log_type_enabled(v92, v93))
        {
          v119 = v53;
          v94 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)v94 = 134217984;
          *(_QWORD *)&v121 = objc_msgSend(v52, sel_statusCode);
          v53 = v119;
          v54 = v110;
          sub_244E4E7E4();

          _os_log_impl(&dword_244D61000, v92, v93, "Execute download file - serverError - Invalid status from server: %ld", v94, 0xCu);
          v95 = v94;
          v50 = v113;
          MEMORY[0x2495283BC](v95, -1, -1);
        }
        else
        {

        }
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v108, v57);
      }
      v100 = sub_244DC44BC();
      if (v101)
      {
        *(_QWORD *)&v121 = 4;
        *((_QWORD *)&v121 + 1) = v100;
        *(_QWORD *)&v122 = v101;
        *((_QWORD *)&v122 + 1) = v102;
        v123 = v103;
        v124 = 1;
        v118(&v121);
        sub_244D65198(v54, v50);
        swift_bridgeObjectRelease();
        goto LABEL_58;
      }
    }
    v121 = xmmword_244E51CE0;
    v122 = xmmword_244E51CF0;
    v123 = 0x8000000244E57950;
    v124 = 1;
    v118(&v121);
    sub_244D65198(v54, v50);
    goto LABEL_63;
  }
  *(_QWORD *)&v121 = v119;
  v37 = v119;
  v38 = v36;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257415790);
  v39 = swift_dynamicCast();
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  if ((v39 & 1) != 0)
  {
    v40(v29, 0, 1, v30);
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v29, v30);
    sub_244D65324(&qword_257417EC0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF610], MEMORY[0x24BDCF608]);
    sub_244E4C198();
    sub_244E4C468();
    sub_244D65324(&qword_257417EC8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF5D8], MEMORY[0x24BDCF5F0]);
    sub_244E4E49C();
    sub_244E4E49C();
    v42 = v120;
    v41 = v121;
    v43 = *(void (**)(char *, uint64_t))(v21 + 8);
    v43(v24, v20);
    v43(v26, v20);
    if (v41 == v42)
    {
      v44 = v116;
      if (qword_257414430 != -1)
        swift_once();
      v45 = __swift_project_value_buffer(v44, (uint64_t)qword_257419E90);
      v46 = v111;
      sub_244D640E4(v45, v111);
      v47 = sub_244E4DCD4();
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
      {
        sub_244D66F54(v46, &qword_2574145A0);
      }
      else
      {
        v86 = sub_244E4DCBC();
        v87 = sub_244E4E67C();
        if (os_log_type_enabled(v86, v87))
        {
          v88 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v88 = 0;
          _os_log_impl(&dword_244D61000, v86, v87, "Execute download file - request cancelled", v88, 2u);
          MEMORY[0x2495283BC](v88, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v46, v47);
      }
      v121 = xmmword_244E55270;
      v122 = xmmword_244E55280;
      v123 = 0xEE0064656C6C6563;
      v124 = 1;
      v118(&v121);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      return;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    v36 = v119;
  }
  else
  {
    v40(v29, 1, 1, v30);
    sub_244D66F54((uint64_t)v29, &qword_257417EB8);
  }
  v62 = v116;
  v63 = (uint64_t)v114;
  if (qword_257414430 != -1)
    swift_once();
  v64 = __swift_project_value_buffer(v62, (uint64_t)qword_257419E90);
  sub_244D640E4(v64, v63);
  v65 = sub_244E4DCD4();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v66 + 48);
  if (v67(v63, 1, v65) == 1)
  {
    sub_244D66F54(v63, &qword_2574145A0);
  }
  else
  {
    v68 = sub_244E4DCBC();
    v69 = sub_244E4E67C();
    if (os_log_type_enabled(v68, v69))
    {
      v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v70 = 0;
      _os_log_impl(&dword_244D61000, v68, v69, "Execute download file - networkError - Server not reachable", v70, 2u);
      MEMORY[0x2495283BC](v70, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v63, v65);
    v36 = v119;
  }
  v71 = v64;
  v72 = v115;
  sub_244D640E4(v71, v115);
  if (v67(v72, 1, v65) == 1)
  {
    sub_244D66F54(v72, &qword_2574145A0);
  }
  else
  {
    v73 = v36;
    v74 = v36;
    v75 = sub_244E4DCBC();
    v76 = v36;
    v77 = sub_244E4E67C();
    if (os_log_type_enabled(v75, v77))
    {
      v78 = (uint8_t *)swift_slowAlloc();
      v79 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v78 = 138412290;
      v80 = v76;
      v81 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&v121 = v81;
      sub_244E4E7E4();
      *v79 = v81;

      _os_log_impl(&dword_244D61000, v75, v77, "Error processing request: %@", v78, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v79, -1, -1);
      v82 = v78;
      v72 = v115;
      MEMORY[0x2495283BC](v82, -1, -1);

    }
    else
    {

    }
    v36 = v76;
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v72, v65);
  }
  v121 = xmmword_244E51CC0;
  v122 = xmmword_244E51CD0;
  v123 = 0x8000000244E57900;
  v124 = 1;
  v118(&v121);

}

uint64_t type metadata accessor for ContentWebService()
{
  return objc_opt_self();
}

uint64_t sub_244DD3D44(uint64_t a1)
{
  uint64_t *v1;

  return sub_244DD18A0(a1, v1[2], v1[3], v1[4], &qword_257417EB0, (uint64_t)&unk_2515DF630, (uint64_t)sub_244DD3D8C, (void (*)(char *, uint64_t, uint64_t))sub_244DD1FB0);
}

uint64_t sub_244DD3D80()
{
  return objectdestroyTm_1(&qword_257417EB0);
}

uint64_t sub_244DD3D8C(uint64_t a1)
{
  return sub_244DD42A4(a1, &qword_257417EB0, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_244DD1354);
}

uint64_t sub_244DD3DA0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_244DD3DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_244DD43A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, char *))sub_244DD2378);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_244DD3DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  v5 = sub_244E4C024();
  v4[12] = v5;
  v4[13] = *(_QWORD *)(v5 - 8);
  v4[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  v4[15] = swift_task_alloc();
  v6 = sub_244E4C2AC();
  v4[16] = v6;
  v4[17] = *(_QWORD *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DD3EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  sub_244E4C294();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 120), &qword_257414B00);
    v4 = *(_QWORD *)(v0 + 64);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    *(_OWORD *)v4 = xmmword_244E51CE0;
    *(_OWORD *)(v4 + 16) = xmmword_244E51CF0;
    *(_QWORD *)(v4 + 32) = 0x8000000244E57950;
    *(_BYTE *)(v4 + 40) = 1;
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v6 = *(_QWORD *)(v0 + 144);
    v7 = *(_QWORD *)(v0 + 152);
    v8 = *(_QWORD *)(v0 + 128);
    v9 = *(_QWORD *)(v0 + 136);
    v10 = *(_QWORD *)(v0 + 112);
    v11 = *(_QWORD *)(v0 + 88);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v9 + 32))(v7, *(_QWORD *)(v0 + 120), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v6, v7, v8);
    sub_244E4BFF4();
    sub_244E4BFC4();
    v12 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v12;
    v12[2] = v11;
    v12[3] = v10;
    v12[4] = v7;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257415080);
    *v13 = v0;
    v13[1] = sub_244DD4084;
    return sub_244E4EAB4();
  }
}

uint64_t sub_244DD4084()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DD40E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  __int128 v8;
  __int128 v9;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 136) + 8))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128));
  v8 = *(_OWORD *)(v0 + 32);
  v9 = *(_OWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_BYTE *)(v0 + 56);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = *(_QWORD *)(v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  *(_OWORD *)v6 = v9;
  *(_OWORD *)(v6 + 16) = v8;
  *(_QWORD *)(v6 + 32) = v4;
  *(_BYTE *)(v6 + 40) = v5;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DD4198(uint64_t a1)
{
  uint64_t *v1;

  return sub_244DD18A0(a1, v1[2], v1[3], v1[4], &qword_257417ED8, (uint64_t)&unk_2515DF6D0, (uint64_t)sub_244DD4290, (void (*)(char *, uint64_t, uint64_t))sub_244DD2194);
}

uint64_t sub_244DD41D4()
{
  return objectdestroyTm_1(&qword_257417ED8);
}

uint64_t objectdestroyTm_1(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = sub_244E4C2AC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v1 + v8, v6);
  return swift_deallocObject();
}

uint64_t sub_244DD4290(uint64_t a1)
{
  return sub_244DD42A4(a1, &qword_257417ED8, (uint64_t (*)(uint64_t, unint64_t, unint64_t))sub_244DD1A64);
}

uint64_t sub_244DD42A4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t, unint64_t, unint64_t))
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(sub_244E4C2AC() - 8) + 80);
  return a3(a1, v3 + v6, v3 + ((v6 + v7 + v8) & ~v8));
}

uint64_t objectdestroy_6Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_244E4C024();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_244DD439C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_244DD43A8(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, char *))sub_244DD3050);
}

uint64_t sub_244DD43A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, char *))
{
  char *v5;
  uint64_t v10;

  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_244E4C024() - 8) + 80);
  return a5(a1, a2, a3, a4, *((_QWORD *)v5 + 2), *((_QWORD *)v5 + 3), *((_QWORD *)v5 + 4), &v5[(v10 + 40) & ~v10]);
}

uint64_t sub_244DD442C(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  void *v28;
  id v29;
  id v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  uint64_t result;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(uint64_t, uint64_t, uint64_t);
  void *v43;
  uint64_t v44;
  void *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint8_t *v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  void (*v57)(uint64_t);
  NSObject *v58;
  os_log_type_t v59;
  uint8_t *v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  id v66;
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  void *v69;
  _QWORD aBlock[6];

  v4 = v3;
  v68 = a3;
  v66 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v63 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v64 = (char *)&v62 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v62 - v12;
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v62 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v62 - v17;
  v4[2] = 0;
  v4[3] = 0;
  v19 = (void **)(v4 + 2);
  v4[4] = 0;
  if (qword_257414420 != -1)
    swift_once();
  v20 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E60);
  sub_244D640E4(v20, (uint64_t)v18);
  v21 = sub_244E4DCD4();
  v22 = *(_QWORD *)(v21 - 8);
  v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  v23 = v67(v18, 1, v21);
  v65 = v22;
  if (v23 == 1)
  {
    sub_244D66F54((uint64_t)v18, &qword_2574145A0);
  }
  else
  {
    v24 = swift_retain();
    sub_244D8C8B0(v24, 0xD000000000000020, 0x8000000244E597A0, 0, 0xE000000000000000);
    swift_release();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v21);
  }
  v25 = v4[3];
  v26 = v68;
  v4[3] = a2;
  v4[4] = v26;
  swift_retain();
  sub_244DB4E08(v25);
  v27 = (void *)sub_244E4E2F8();
  v28 = (void *)sub_244E4E2F8();
  v29 = objc_msgSend((id)objc_opt_self(), sel_endpointForMachName_service_instance_, v27, v28, 0);

  if (v29)
  {
    v30 = objc_msgSend((id)objc_opt_self(), sel_connectionWithEndpoint_, v29);
    if (v30)
    {
      v31 = v30;
      v32 = swift_allocObject();
      v33 = v66;
      *(_QWORD *)(v32 + 16) = v4;
      *(_QWORD *)(v32 + 24) = v33;
      v34 = swift_allocObject();
      *(_QWORD *)(v34 + 16) = sub_244DD62E0;
      *(_QWORD *)(v34 + 24) = v32;
      v62 = v32;
      aBlock[4] = sub_244DD62F8;
      aBlock[5] = v34;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_244DD532C;
      aBlock[3] = &block_descriptor_6;
      v35 = _Block_copy(aBlock);
      swift_retain();
      v36 = v33;
      swift_retain();
      swift_release();
      objc_msgSend(v31, sel_configureConnection_, v35);
      _Block_release(v35);
      LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
      result = swift_release();
      if ((v35 & 1) == 0)
      {
        v66 = v36;
        v69 = &unk_25742ACC8;
        v38 = swift_dynamicCastObjCProtocolConditional();
        if (v38)
          v39 = v31;
        v40 = (uint64_t)v63;
        v41 = (uint64_t)v64;
        v42 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v67;
        v43 = *v19;
        *v19 = (void *)v38;

        sub_244D640E4(v20, v41);
        if (v42(v41, 1, v21) == 1)
        {
          sub_244D66F54(v41, &qword_2574145A0);
          v44 = v65;
          v45 = *v19;
          if (!*v19)
            goto LABEL_22;
        }
        else
        {
          v46 = sub_244E4DCBC();
          v47 = sub_244E4E688();
          if (os_log_type_enabled(v46, v47))
          {
            v48 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v48 = 0;
            _os_log_impl(&dword_244D61000, v46, v47, "Connection created, activate now", v48, 2u);
            v49 = v48;
            v41 = (uint64_t)v64;
            MEMORY[0x2495283BC](v49, -1, -1);
          }

          v44 = v65;
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v41, v21);
          v42 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v67;
          v45 = *v19;
          if (!*v19)
            goto LABEL_22;
        }
        objc_msgSend(v45, sel_activate);
LABEL_22:
        sub_244D640E4(v20, v40);
        if (v42(v40, 1, v21) == 1)
        {

          swift_release();
          sub_244D66F54(v40, &qword_2574145A0);
        }
        else
        {
          v50 = v44;
          v51 = sub_244E4DCBC();
          v52 = sub_244E4E688();
          if (os_log_type_enabled(v51, v52))
          {
            v53 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v53 = 0;
            _os_log_impl(&dword_244D61000, v51, v52, "Connection created, activated", v53, 2u);
            MEMORY[0x2495283BC](v53, -1, -1);
          }

          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v40, v21);
        }
        swift_release();
        return (uint64_t)v4;
      }
      __break(1u);
      goto LABEL_41;
    }
    sub_244D640E4(v20, (uint64_t)v13);
    if (v67(v13, 1, v21) == 1)
    {
      result = sub_244D66F54((uint64_t)v13, &qword_2574145A0);
    }
    else
    {
      v58 = sub_244E4DCBC();
      v59 = sub_244E4E67C();
      if (os_log_type_enabled(v58, v59))
      {
        v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v60 = 0;
        _os_log_impl(&dword_244D61000, v58, v59, "Failed to create connection", v60, 2u);
        MEMORY[0x2495283BC](v60, -1, -1);
      }

      result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v13, v21);
    }
    v61 = (void (*)(uint64_t))v4[3];
    if (!v61)
      goto LABEL_42;
    swift_retain();
    v61(1);

    swift_release();
    sub_244DB4E08((uint64_t)v61);

LABEL_38:
    swift_release();
    return 0;
  }
  sub_244D640E4(v20, (uint64_t)v16);
  if (v67(v16, 1, v21) == 1)
  {
    result = sub_244D66F54((uint64_t)v16, &qword_2574145A0);
  }
  else
  {
    v54 = sub_244E4DCBC();
    v55 = sub_244E4E67C();
    if (os_log_type_enabled(v54, v55))
    {
      v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v56 = 0;
      _os_log_impl(&dword_244D61000, v54, v55, "Failed to create end point", v56, 2u);
      MEMORY[0x2495283BC](v56, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v16, v21);
  }
  v57 = (void (*)(uint64_t))v4[3];
  if (v57)
  {
    swift_retain();
    v57(1);

    swift_release();
    sub_244DB4E08((uint64_t)v57);
    goto LABEL_38;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_244DD4BFC(void *a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, void *);
  void *v19;
  void *v20;
  uint64_t v21;

  v6 = (void *)sub_244E4E2F8();
  v7 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithIdentifier_, v6);

  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_25742AEB0);
  objc_msgSend(v7, sel_setServer_, v9);

  v10 = objc_msgSend(v8, sel_protocolForProtocol_, &unk_25742B090);
  objc_msgSend(v7, sel_setClient_, v10);

  objc_msgSend(v7, sel_setClientMessagingExpectation_, 0);
  v11 = objc_msgSend((id)objc_opt_self(), sel_userInitiated);
  objc_msgSend(a1, sel_setServiceQuality_, v11);

  objc_msgSend(a1, sel_setInterface_, v7);
  objc_msgSend(a1, sel_setInterfaceTarget_, a2);
  objc_msgSend(a1, sel_setTargetQueue_, a3);
  v20 = sub_244DD4E98;
  v21 = 0;
  v12 = MEMORY[0x24BDAC760];
  v16 = MEMORY[0x24BDAC760];
  v17 = 1107296256;
  v18 = sub_244DCFC60;
  v19 = &block_descriptor_6;
  v13 = _Block_copy(&v16);
  objc_msgSend(a1, sel_setActivationHandler_, v13);
  _Block_release(v13);
  v20 = sub_244DD4EAC;
  v21 = 0;
  v16 = v12;
  v17 = 1107296256;
  v18 = sub_244DCFC60;
  v19 = &block_descriptor_9;
  v14 = _Block_copy(&v16);
  objc_msgSend(a1, sel_setInterruptionHandler_, v14);
  _Block_release(v14);
  v20 = sub_244DD50EC;
  v21 = 0;
  v16 = v12;
  v17 = 1107296256;
  v18 = sub_244DCFC60;
  v19 = &block_descriptor_12;
  v15 = _Block_copy(&v16);
  objc_msgSend(a1, sel_setInvalidationHandler_, v15);
  _Block_release(v15);

}

uint64_t sub_244DD4E98(void *a1)
{
  return sub_244DD5100(a1, MEMORY[0x24BEE7928], "UIScene connection activated %@");
}

id sub_244DD4EAC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  id v12;
  id v13;
  _QWORD *v14;
  _QWORD *v16;
  os_log_t v17;
  void *v18;
  id v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414420 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E60);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D66F54((uint64_t)v4, &qword_2574145A0);
  }
  else
  {
    v8 = a1;
    v9 = sub_244E4DCBC();
    v10 = sub_244E4E67C();
    if (os_log_type_enabled(v9, v10))
    {
      v18 = a1;
      v11 = (uint8_t *)swift_slowAlloc();
      v16 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v11 = 138412290;
      v19 = v8;
      v12 = v8;
      v17 = v9;
      v13 = v12;
      a1 = v18;
      sub_244E4E7E4();
      v14 = v16;
      *v16 = v8;

      v9 = v17;
      _os_log_impl(&dword_244D61000, v17, v10, "UIScene connection interrupted %@", v11, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v14, -1, -1);
      MEMORY[0x2495283BC](v11, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  return objc_msgSend(a1, sel_invalidate);
}

uint64_t sub_244DD50EC(void *a1)
{
  return sub_244DD5100(a1, MEMORY[0x24BEE7910], "UIScene connection invalidated %@");
}

uint64_t sub_244DD5100(void *a1, uint64_t (*a2)(void), const char *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  _QWORD *v17;
  id v18;
  id v19;
  _QWORD *v20;
  uint8_t *v21;
  const char *v22;
  uint8_t *v23;
  NSObject *v24;
  id v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414420 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E60);
  sub_244D640E4(v9, (uint64_t)v8);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
    return sub_244D66F54((uint64_t)v8, &qword_2574145A0);
  v13 = a1;
  v14 = sub_244E4DCBC();
  v15 = a2();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v17 = (_QWORD *)swift_slowAlloc();
    v23 = v16;
    v24 = v14;
    *(_DWORD *)v16 = 138412290;
    v25 = v13;
    v18 = v13;
    v22 = a3;
    v19 = v18;
    v14 = v24;
    sub_244E4E7E4();
    *v17 = v13;
    v20 = v17;

    v21 = v23;
    _os_log_impl(&dword_244D61000, v14, v15, v22, v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
    swift_arrayDestroy();
    MEMORY[0x2495283BC](v20, -1, -1);
    MEMORY[0x2495283BC](v21, -1, -1);
  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
}

uint64_t sub_244DD532C(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_unknownObjectRetain();
  v3(a2);
  return swift_unknownObjectRelease();
}

void sub_244DD5368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  void *v21;
  _QWORD aBlock[6];

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)aBlock - v9;
  if (qword_257414420 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_257419E60);
  sub_244D640E4(v11, (uint64_t)v10);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_244D66F54((uint64_t)v10, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v3, 0xD00000000000001CLL, 0x8000000244E59830, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v15 = sub_244DD5D3C();
  if (v15)
  {
    v16 = (void *)v15;
    sub_244D640E4(v11, (uint64_t)v8);
    if (v14(v8, 1, v12) == 1)
    {
      sub_244D66F54((uint64_t)v8, &qword_2574145A0);
    }
    else
    {
      v17 = sub_244E4DCBC();
      v18 = sub_244E4E688();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_244D61000, v17, v18, "Sending activateRemoteUI message", v19, 2u);
        MEMORY[0x2495283BC](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    v20 = (void *)sub_244E4E298();
    aBlock[4] = sub_244DD5638;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_244DD5684;
    aBlock[3] = &block_descriptor_18_0;
    v21 = _Block_copy(aBlock);
    objc_msgSend(v16, sel_activateRemoteUI_internalEndpoint_reply_, v20, a2, v21);
    _Block_release(v21);
    swift_unknownObjectRelease();

  }
  else
  {
    sub_244DD56D8();
  }
}

uint64_t sub_244DD5638(void *a1)
{
  return sub_244DD5AB4(a1, "activateRemoteUI has %@");
}

void sub_244DD5684(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

void sub_244DD56D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  void *v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)aBlock - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)aBlock - v9;
  if (qword_257414420 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E60);
  sub_244D640E4(v11, (uint64_t)v10);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_244D66F54((uint64_t)v10, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v1, 0x6164696C61766E69, 0xEC00000029286574, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v15 = sub_244DD5D3C();
  if (v15)
  {
    v16 = (void *)v15;
    sub_244D640E4(v11, (uint64_t)v8);
    if (v14(v8, 1, v12) == 1)
    {
      sub_244D66F54((uint64_t)v8, &qword_2574145A0);
    }
    else
    {
      v17 = sub_244E4DCBC();
      v18 = sub_244E4E688();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v19 = 0;
        _os_log_impl(&dword_244D61000, v17, v18, "Sending invalidateRemoteUI message", v19, 2u);
        MEMORY[0x2495283BC](v19, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    aBlock[4] = sub_244DD5A68;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x24BDAC760];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_244DD5684;
    aBlock[3] = &block_descriptor_15;
    v20 = _Block_copy(aBlock);
    objc_msgSend(v16, sel_invalidateRemoteUI_, v20);
    _Block_release(v20);
    v21 = *(void **)(v1 + 16);
    if (v21)
    {
      v22 = v21;
      objc_msgSend(v22, sel_invalidate);

    }
    swift_unknownObjectRelease();
    v23 = *(void **)(v1 + 16);
    *(_QWORD *)(v1 + 16) = 0;

  }
  else
  {
    sub_244D640E4(v11, (uint64_t)v5);
    if (v14(v5, 1, v12) == 1)
    {
      sub_244D66F54((uint64_t)v5, &qword_2574145A0);
    }
    else
    {
      v24 = sub_244E4DCBC();
      v25 = sub_244E4E688();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_244D61000, v24, v25, "invalidate but remoteTarget is already nil", v26, 2u);
        MEMORY[0x2495283BC](v26, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
    }
  }
}

uint64_t sub_244DD5A68(void *a1)
{
  return sub_244DD5AB4(a1, "invalidate has %@");
}

uint64_t sub_244DD5AB4(void *a1, const char *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414420 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E60);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
    return sub_244D66F54((uint64_t)v6, &qword_2574145A0);
  v11 = a1;
  v12 = a1;
  v13 = sub_244E4DCBC();
  v14 = sub_244E4E67C();
  if (os_log_type_enabled(v13, v14))
  {
    v20 = a2;
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138412290;
    if (a1)
    {
      v17 = a1;
      v18 = _swift_stdlib_bridgeErrorToNSError();
      v21 = v18;
      sub_244E4E7E4();
    }
    else
    {
      v21 = 0;
      sub_244E4E7E4();
      v18 = 0;
    }
    *v16 = v18;

    _os_log_impl(&dword_244D61000, v13, v14, v20, v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
    swift_arrayDestroy();
    MEMORY[0x2495283BC](v16, -1, -1);
    MEMORY[0x2495283BC](v15, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v8);
}

uint64_t sub_244DD5D3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  uint64_t v16;
  void *v17;
  void *v18;
  id v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD v34[2];
  __int128 v35;
  __int128 v36;
  _OWORD v37[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v32 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v32 - v9;
  if (qword_257414420 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E60);
  sub_244D640E4(v11, (uint64_t)v10);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v33 = v13;
  if (v15 == 1)
  {
    sub_244D66F54((uint64_t)v10, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v1, 0x615465746F6D6572, 0xEC00000074656772, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_257417A38);
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_244E54FB0;
  v17 = (void *)sub_244E4E2F8();
  v18 = (void *)sub_244E4E2F8();
  v19 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v17, v18);

  *(_QWORD *)(v16 + 32) = v19;
  *(_QWORD *)&v37[0] = v16;
  sub_244E4E4E4();
  v20 = *(void **)(v1 + 16);
  if (v20)
  {
    if (*(_QWORD *)&v37[0] >> 62)
    {
      sub_244DD6330();
      v21 = v20;
      swift_bridgeObjectRetain();
      sub_244E4E958();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = v20;
      swift_bridgeObjectRetain();
      sub_244E4EACC();
      sub_244DD6330();
    }
    swift_bridgeObjectRelease();
    sub_244DD6330();
    v22 = (void *)sub_244E4E4C0();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v21, sel_remoteTargetWithLaunchingAssertionAttributes_, v22);

    if (v23)
    {
      sub_244E4E82C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v34, 0, sizeof(v34));
    }
    v24 = v33;
    sub_244D7FF80((uint64_t)v34, (uint64_t)&v35);
    if (*((_QWORD *)&v36 + 1))
    {
      sub_244D6B058(&v35, v37);
      sub_244D640E4(v11, (uint64_t)v8);
      if (v14(v8, 1, v12) == 1)
      {
        sub_244D66F54((uint64_t)v8, &qword_2574145A0);
      }
      else
      {
        v29 = sub_244E4DCBC();
        v30 = sub_244E4E688();
        if (os_log_type_enabled(v29, v30))
        {
          v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v31 = 0;
          _os_log_impl(&dword_244D61000, v29, v30, "Got remote server target", v31, 2u);
          MEMORY[0x2495283BC](v31, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v12);
      }
      sub_244D6B058(v37, &v35);
      __swift_instantiateConcreteTypeFromMangledName(&qword_257418098);
      if (swift_dynamicCast())
        return *(_QWORD *)&v34[0];
      else
        return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = 0u;
    v36 = 0u;
    v24 = v33;
  }
  sub_244D66F54((uint64_t)&v35, &qword_257414A38);
  sub_244D640E4(v11, (uint64_t)v5);
  if (v14(v5, 1, v12) == 1)
  {
    sub_244D66F54((uint64_t)v5, &qword_2574145A0);
  }
  else
  {
    v25 = sub_244E4DCBC();
    v26 = sub_244E4E67C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v27 = 0;
      _os_log_impl(&dword_244D61000, v25, v26, "No remote server target", v27, 2u);
      MEMORY[0x2495283BC](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v12);
  }
  return 0;
}

uint64_t sub_244DD6268()
{
  uint64_t v0;

  sub_244DB4E08(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteSceneUIHandle()
{
  return objc_opt_self();
}

uint64_t sub_244DD62B4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_244DD62E0(void *a1)
{
  uint64_t v1;

  sub_244DD4BFC(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_244DD62E8()
{
  return swift_deallocObject();
}

uint64_t sub_244DD62F8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

unint64_t sub_244DD6330()
{
  unint64_t result;

  result = qword_257418090;
  if (!qword_257418090)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257418090);
  }
  return result;
}

uint64_t sub_244DD6394(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_244D809BC(*a1, *a2);
}

uint64_t sub_244DD63A0()
{
  sub_244E4EB80();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244DD644C()
{
  sub_244E4E3C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DD64D4()
{
  sub_244E4EB80();
  sub_244E4E3C4();
  swift_bridgeObjectRelease();
  return sub_244E4EBC8();
}

uint64_t sub_244DD657C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_244DDD708();
  *a1 = result;
  return result;
}

void sub_244DD65A8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB00000000646574;
  v4 = 0x8000000244E566C0;
  v5 = 0xD000000000000018;
  if (v2 != 1)
  {
    v5 = 0x6E776F6E6B6E75;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6164696C61766E69;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

id sub_244DD6614()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for UIManager()), sel_init);
  qword_257419EF8 = (uint64_t)result;
  return result;
}

void sub_244DD6640(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  if (qword_2574143E8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_257419DB8);
  sub_244D640E4(v8, (uint64_t)v6);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v11 = sub_244E4DCBC();
    v12 = sub_244E4E67C();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v30[0] = v14;
      *(_DWORD *)v13 = 136315138;
      v28 = a1;
      if ((_BYTE)a1)
      {
        if (a1 == 1)
          v15 = 0xD000000000000018;
        else
          v15 = 0x6E776F6E6B6E75;
        if (a1 == 1)
          v16 = 0x8000000244E566C0;
        else
          v16 = 0xE700000000000000;
      }
      else
      {
        v16 = 0xEB00000000646574;
        v15 = 0x6164696C61766E69;
      }
      v29 = sub_244D9A70C(v15, v16, v30);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v11, v12, "invalidationHandler - errorCode = %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v14, -1, -1);
      MEMORY[0x2495283BC](v13, -1, -1);

      a1 = v28;
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  swift_beginAccess();
  v17 = MEMORY[0x249528470](v7);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = sub_244E4D98C();
    sub_244DD7458(v19, v20, a1);

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v21 = (_BYTE *)MEMORY[0x249528470](v7);
  if (v21)
  {
    v21[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible] = 0;

  }
  swift_beginAccess();
  v22 = (_BYTE *)MEMORY[0x249528470](v7);
  if (v22)
  {
    v22[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded] = 0;

  }
  swift_beginAccess();
  v23 = MEMORY[0x249528470](v7);
  if (v23)
  {
    v24 = (void *)v23;
    v25 = (_QWORD *)(v23 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    v26 = *(_QWORD *)(v23 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    *v25 = 0;
    v25[1] = 0;
    sub_244DB4E08(v26);

  }
}

void sub_244DD6984(int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  void *v10;
  _QWORD *v11;
  uint64_t v12;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x249528470](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = sub_244E4D974();
    sub_244DD7458(v6, v7, a1);

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v8 = (_BYTE *)MEMORY[0x249528470](v3);
  if (v8)
  {
    v8[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible] = 0;

  }
  swift_beginAccess();
  v9 = MEMORY[0x249528470](v3);
  if (v9)
  {
    v10 = (void *)v9;
    v11 = (_QWORD *)(v9 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    v12 = *(_QWORD *)(v9 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    *v11 = 0;
    v11[1] = 0;
    sub_244DB4E08(v12);

  }
}

id sub_244DD6A68()
{
  void *v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  id v5;
  _QWORD **v6;
  _QWORD *v7;
  id v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  id v13;

  v1 = objc_msgSend((id)objc_opt_self(), sel_anonymousListener);
  if (qword_257414478 != -1)
    swift_once();
  v2 = qword_257417C70;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v0;
  v4 = v1;
  v5 = v0;
  objc_msgSend(v4, sel_setDelegate_, v2);
  objc_msgSend(v4, sel_resume);
  v6 = (_QWORD **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners);
  swift_beginAccess();
  v7 = *v6;
  v8 = v4;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v7 = sub_244DCB788(0, v7[2] + 1, 1, v7);
    *v6 = v7;
  }
  v11 = v7[2];
  v10 = v7[3];
  if (v11 >= v10 >> 1)
  {
    v7 = sub_244DCB788((_QWORD *)(v10 > 1), v11 + 1, 1, v7);
    *v6 = v7;
  }
  v7[2] = v11 + 1;
  v12 = &v7[3 * v11];
  v12[4] = v8;
  v12[5] = sub_244DDD968;
  v12[6] = v3;
  swift_endAccess();
  swift_release();

  v13 = objc_msgSend(v8, sel_endpoint);
  return v13;
}

void sub_244DD6C28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  _QWORD v26[2];
  uint64_t aBlock;
  uint64_t v28;
  void *v29;
  void *v30;
  void *v31;
  uint64_t v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143E8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419DB8);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E670();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "daemon | configureConnection", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_257428970);
  objc_msgSend(a1, sel_setExportedInterface_, v14);

  objc_msgSend(a1, sel_setExportedObject_, v2);
  v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_257428CE0);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v15);

  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v31 = sub_244DDD948;
  v32 = v16;
  v17 = MEMORY[0x24BDAC760];
  aBlock = MEMORY[0x24BDAC760];
  v28 = 1107296256;
  v29 = sub_244DCFC60;
  v30 = &block_descriptor_35;
  v18 = _Block_copy(&aBlock);
  swift_release();
  v19 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v18);
  _Block_release(v18);
  sub_244E4E82C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418158);
  v20 = swift_dynamicCast();
  v21 = v26[1];
  if (!v20)
    v21 = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_transactionUI) = v21;
  swift_unknownObjectRelease();
  v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v31 = sub_244DDD950;
  v32 = v22;
  aBlock = v17;
  v28 = 1107296256;
  v29 = sub_244DB30BC;
  v30 = &block_descriptor_39;
  v23 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(a1, sel_setInvalidationHandler_, v23);
  _Block_release(v23);
  objc_msgSend(a1, sel_resume);
  v24 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection) = a1;
  v25 = a1;

}

void sub_244DD6FD4(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void (*v21)(_QWORD);
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 16;
  if (qword_2574143E8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v4, (uint64_t)qword_257419DB8);
  sub_244D640E4(v8, (uint64_t)v6);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v11 = a1;
    v12 = a1;
    v13 = sub_244E4DCBC();
    v14 = sub_244E4E67C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v23 = swift_slowAlloc();
      v25[0] = v23;
      *(_DWORD *)v15 = 136446210;
      v22 = v15 + 4;
      swift_getErrorValue();
      v16 = sub_244E4EB2C();
      v24 = sub_244D9A70C(v16, v17, v25);
      sub_244E4E7E4();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_244D61000, v13, v14, "UI XPC proxy error: %{public}s", v15, 0xCu);
      v18 = v23;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v18, -1, -1);
      MEMORY[0x2495283BC](v15, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v9);
  }
  swift_beginAccess();
  v19 = MEMORY[0x249528470](v7);
  if (v19)
  {
    v20 = (void *)v19;
    v21 = *(void (**)(_QWORD))(v19 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    sub_244DDD958((uint64_t)v21);

    if (v21)
    {
      v21(0);
      sub_244DB4E08((uint64_t)v21);
    }
  }
}

void sub_244DD728C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  void *v13;
  void (*v14)(_QWORD);
  uint64_t v15;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = a1 + 16;
  if (qword_2574143D0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D70);
  sub_244D640E4(v6, (uint64_t)v4);
  v7 = sub_244E4DCD4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v9 = sub_244E4DCBC();
    v10 = sub_244E4E688();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_244D61000, v9, v10, "TransactionUI connection interrupted, nullifying connection", v11, 2u);
      MEMORY[0x2495283BC](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  swift_beginAccess();
  v12 = MEMORY[0x249528470](v5);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = *(void (**)(_QWORD))(v12 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler);
    sub_244DDD958((uint64_t)v14);

    if (v14)
    {
      v14(0);
      sub_244DB4E08((uint64_t)v14);
    }
  }
}

void sub_244DD7458(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  NSObject *v74;
  os_log_type_t v75;
  uint8_t *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint8_t *v79;
  NSObject *v80;
  os_log_type_t v81;
  _BOOL4 v82;
  uint8_t *v83;
  uint8_t *v84;
  void *v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD aBlock[7];

  v4 = v3;
  v102 = a3;
  v100 = a1;
  v101 = a2;
  v93 = sub_244E4E1FC();
  v91 = *(_QWORD *)(v93 - 8);
  v5 = MEMORY[0x24BDAC7A8](v93);
  v90 = (char *)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v92 = (char *)&v87 - v7;
  v89 = sub_244E4E1C0();
  v88 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v87 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = sub_244E4E1B4();
  MEMORY[0x24BDAC7A8](v98);
  v99 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v95 = (uint64_t)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v96 = (uint64_t)&v87 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v94 = (uint64_t)&v87 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v87 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v97 = (uint64_t)&v87 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v87 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v87 - v25;
  if (qword_2574143E8 != -1)
    swift_once();
  v27 = __swift_project_value_buffer(v10, (uint64_t)qword_257419DB8);
  sub_244D640E4(v27, (uint64_t)v26);
  v28 = sub_244E4DCD4();
  v29 = *(_QWORD *)(v28 - 8);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  if (v30(v26, 1, v28) == 1)
  {
    v31 = v28;
    sub_244D6412C((uint64_t)v26);
  }
  else
  {
    sub_244D8C8B0(v4, 0xD000000000000024, 0x8000000244E59B30, 0, 0xE000000000000000);
    v31 = v28;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
  }
  v32 = v102;
  v103 = v4;
  v104 = v29;
  if ((_BYTE)v102 && v102 == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v33 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0)
    {
      if (v32)
      {
        v37 = v104;
        v38 = sub_244E4EAC0();
        swift_bridgeObjectRelease();
        v39 = v31;
        if ((v38 & 1) == 0)
        {
          if (qword_2574143D8 != -1)
            swift_once();
          v40 = __swift_project_value_buffer(v10, (uint64_t)qword_257419D88);
          v41 = v97;
          sub_244D640E4(v40, v97);
          if (v30((char *)v41, 1, v39) == 1)
          {
            sub_244D6412C(v41);
          }
          else
          {
            v61 = sub_244E4DCBC();
            v62 = sub_244E4E67C();
            if (os_log_type_enabled(v61, v62))
            {
              v63 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v63 = 0;
              _os_log_impl(&dword_244D61000, v61, v62, "ui invalidated with non-handleRequested unexpected SB error", v63, 2u);
              MEMORY[0x2495283BC](v63, -1, -1);
            }

            (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v39);
          }
          v64 = v103;
          sub_244DD81EC();
          v45 = MEMORY[0x249528470](v64 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
          if (v45)
            goto LABEL_24;
          return;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v37 = v104;
        v39 = v31;
      }
      if (qword_2574143D8 != -1)
        swift_once();
      v47 = __swift_project_value_buffer(v10, (uint64_t)qword_257419D88);
      sub_244D640E4(v47, (uint64_t)v19);
      if (v30(v19, 1, v39) == 1)
      {
        sub_244D6412C((uint64_t)v19);
      }
      else
      {
        v48 = sub_244E4DCBC();
        v49 = sub_244E4E67C();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v50 = 0;
          _os_log_impl(&dword_244D61000, v48, v49, "ui invalidated normally with .handleRequested event", v50, 2u);
          MEMORY[0x2495283BC](v50, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v39);
      }
      v51 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible;
      v52 = v103;
      if ((*(_BYTE *)(v103 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible) & 1) != 0
        || *(_BYTE *)(v103 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) == 1)
      {
        v53 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v54 = (_QWORD *)swift_allocObject();
        v55 = v100;
        v56 = v101;
        v54[2] = v53;
        v54[3] = v55;
        v54[4] = v56;
        aBlock[4] = sub_244DDD93C;
        aBlock[5] = v54;
        aBlock[0] = MEMORY[0x24BDAC760];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_244DB30BC;
        aBlock[3] = &block_descriptor_31;
        _Block_copy(aBlock);
        v105 = MEMORY[0x24BEE4AF8];
        sub_244DB5010();
        swift_retain();
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_257416570);
        sub_244DDD830();
        sub_244E4E838();
        sub_244E4E22C();
        swift_allocObject();
        v57 = sub_244E4E214();
        swift_release();
        swift_release();
        v58 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork;
        *(_QWORD *)(v52 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork) = v57;
        swift_release();
        if (!*(_QWORD *)(v52 + v58))
          return;
        swift_retain();
        if ((sub_244E4E208() & 1) == 0
          && ((*(_BYTE *)(v103 + v51) & 1) != 0
           || *(_BYTE *)(v103 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) == 1))
        {
          v66 = v94;
          sub_244D640E4(v47, v94);
          if (v30((char *)v66, 1, v39) == 1)
          {
            sub_244D6412C(v66);
            v68 = v92;
            v67 = v93;
            v69 = v91;
            v70 = v90;
            v71 = v89;
            v72 = v88;
            v73 = v87;
          }
          else
          {
            v80 = sub_244E4DCBC();
            v81 = sub_244E4E688();
            v82 = os_log_type_enabled(v80, v81);
            v69 = v91;
            v70 = v90;
            v71 = v89;
            v72 = v88;
            v73 = v87;
            if (v82)
            {
              v83 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v83 = 0;
              _os_log_impl(&dword_244D61000, v80, v81, "Deferred - queued", v83, 2u);
              v84 = v83;
              v66 = v94;
              MEMORY[0x2495283BC](v84, -1, -1);
            }

            (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v66, v39);
            v68 = v92;
            v67 = v93;
          }
          sub_244D9003C();
          (*(void (**)(char *, _QWORD, uint64_t))(v72 + 104))(v73, *MEMORY[0x24BEE5490], v71);
          v85 = (void *)sub_244E4E6E8();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v71);
          sub_244E4E1F0();
          MEMORY[0x2495274E0](v70, 0.5);
          v86 = *(void (**)(char *, uint64_t))(v69 + 8);
          v86(v70, v67);
          sub_244E4E6B8();
          swift_release();

          v86(v68, v67);
          return;
        }
        v59 = v96;
        sub_244D640E4(v47, v96);
        if (v30((char *)v59, 1, v39) != 1)
        {
          v74 = sub_244E4DCBC();
          v75 = sub_244E4E688();
          if (os_log_type_enabled(v74, v75))
          {
            v76 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v76 = 0;
            _os_log_impl(&dword_244D61000, v74, v75, "Deferred - was not queued since already cancelled or ui is not visible", v76, 2u);
            MEMORY[0x2495283BC](v76, -1, -1);
          }

          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v59, v39);
          return;
        }
        swift_release();
        v60 = v59;
      }
      else
      {
        v65 = v95;
        sub_244D640E4(v47, v95);
        if (v30((char *)v65, 1, v39) != 1)
        {
          v77 = sub_244E4DCBC();
          v78 = sub_244E4E67C();
          if (os_log_type_enabled(v77, v78))
          {
            v79 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v79 = 0;
            _os_log_impl(&dword_244D61000, v77, v78, "ui already closed, no deferred clean up needed", v79, 2u);
            MEMORY[0x2495283BC](v79, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v65, v39);
          return;
        }
        v60 = v65;
      }
      sub_244D6412C(v60);
      return;
    }
  }
  v34 = v104;
  if (qword_2574143D8 != -1)
    swift_once();
  v35 = __swift_project_value_buffer(v10, (uint64_t)qword_257419D88);
  sub_244D640E4(v35, (uint64_t)v24);
  v36 = v31;
  if (v30(v24, 1, v31) == 1)
  {
    sub_244D6412C((uint64_t)v24);
  }
  else
  {
    v42 = sub_244E4DCBC();
    v43 = sub_244E4E67C();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v44 = 0;
      _os_log_impl(&dword_244D61000, v42, v43, "ui invalidated and cannot be presented, cleaning up transaction.", v44, 2u);
      MEMORY[0x2495283BC](v44, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v36);
  }
  v45 = MEMORY[0x249528470](v103 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v45)
  {
LABEL_24:
    v46 = (void *)v45;
    sub_244DF0494(v100, v101);

  }
}

void sub_244DD801C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1 + 16;
  if (qword_2574143D8 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D88);
  sub_244D640E4(v10, (uint64_t)v8);
  v11 = sub_244E4DCD4();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
  {
    sub_244D6412C((uint64_t)v8);
  }
  else
  {
    v13 = sub_244E4DCBC();
    v14 = sub_244E4E67C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_244D61000, v13, v14, "Deferred - triggered - tap ui ended abruptly with no finish", v15, 2u);
      MEMORY[0x2495283BC](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
  }
  swift_beginAccess();
  v16 = MEMORY[0x249528470](v9);
  if (v16)
  {
    v17 = (void *)v16;
    v18 = (void *)MEMORY[0x249528470](v16 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);

    if (v18)
    {
      sub_244DF0494(a2, a3);

    }
  }
}

uint64_t sub_244DD81EC()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __objc2_meth_list **p_opt_class_meths;
  char *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  __objc2_meth_list *v20;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143D8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  p_opt_class_meths = &OBJC_PROTOCOL___BSServiceConnectionConfiguring.opt_class_meths;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v9 = v1;
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E688();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      v13 = swift_slowAlloc();
      v23 = v13;
      v22 = v12;
      *(_DWORD *)v12 = 136315138;
      v14 = *(_QWORD *)&v9[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork];
      v25 = v13;
      if (v14)
        v15 = 0x29286C65636E6163;
      else
        v15 = 7104878;
      if (v14)
        v16 = 0xE800000000000000;
      else
        v16 = 0xE300000000000000;
      v24 = sub_244D9A70C(v15, v16, &v25);
      sub_244E4E7E4();

      p_opt_class_meths = (__objc2_meth_list **)(&OBJC_PROTOCOL___BSServiceConnectionConfiguring + 48);
      swift_bridgeObjectRelease();
      v17 = v11;
      v18 = v22;
      _os_log_impl(&dword_244D61000, v10, v17, "DeferredCleanup - %s", v22, 0xCu);
      v19 = v23;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v19, -1, -1);
      MEMORY[0x2495283BC](v18, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v20 = p_opt_class_meths[32];
  if (*(__objc2_meth_list *)((char *)v20 + (_QWORD)v1))
  {
    swift_retain();
    sub_244E4E220();
    swift_release();
  }
  *(__objc2_meth_list *)((char *)v20 + (_QWORD)v1) = 0;
  return swift_release();
}

id sub_244DD847C()
{
  _BYTE *v0;
  _QWORD *v1;
  objc_class *v2;
  objc_super v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_transactionUI] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityUI] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityRegistrationUI] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible] = 0;
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded] = 0;
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible] = 0;
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible] = 0;
  v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork] = 0;
  v1 = &v0[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_invalidationHandler];
  v2 = (objc_class *)type metadata accessor for UIManager();
  *v1 = 0;
  v1[1] = 0;
  v4.receiver = v0;
  v4.super_class = v2;
  return objc_msgSendSuper2(&v4, sel_init);
}

id sub_244DD8590()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for UIManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for UIManager()
{
  return objc_opt_self();
}

id sub_244DD8770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id result;
  uint64_t v14;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143E8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419DB8);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E688();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "UI Manager - requiresCardPIN requested", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  result = *(id *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_transactionUI);
  if (result)
    return objc_msgSend(result, sel_requiresCardPIN_, a1);
  return result;
}

void sub_244DD89A0()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(_QWORD, _QWORD, _QWORD);
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  char *v19;
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  void *v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(_QWORD, _QWORD, _QWORD);
  _BYTE v34[88];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v31 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v31 - v9;
  if (qword_2574143E8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v2, (uint64_t)qword_257419DB8);
  sub_244D640E4(v11, (uint64_t)v10);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_244D6412C((uint64_t)v10);
  }
  else
  {
    v33 = v14;
    v15 = sub_244E4DCBC();
    v16 = sub_244E4E688();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v32 = v11;
      v18 = v13;
      v19 = v5;
      v20 = v17;
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_244D61000, v15, v16, "TapUI has presented successfully", v17, 2u);
      v21 = v20;
      v5 = v19;
      v13 = v18;
      v11 = v32;
      MEMORY[0x2495283BC](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    v14 = v33;
  }
  if (*(_QWORD *)&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork])
  {
    if (qword_257414420 != -1)
      swift_once();
    v22 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E60);
    sub_244D640E4(v22, (uint64_t)v8);
    if (v14(v8, 1, v12) == 1)
    {
      sub_244D6412C((uint64_t)v8);
    }
    else
    {
      v23 = sub_244E4DCBC();
      v24 = sub_244E4E688();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v25 = 0;
        _os_log_impl(&dword_244D61000, v23, v24, "Scene request deferred work canceled", v25, 2u);
        MEMORY[0x2495283BC](v25, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    sub_244DD81EC();
  }
  v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible] = 1;
  v26 = *(void **)&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection];
  if (!v26)
    goto LABEL_22;
  v27 = v26;
  sub_244D7FA9C(v27, (uint64_t)v34);
  sub_244DDD8A8((uint64_t)v34);
  if ((v34[83] & 1) != 0)
  {

LABEL_22:
    v27 = (id)MEMORY[0x249528470](&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate]);
    objc_msgSend(v27, sel_tapUIDidLoad);
    goto LABEL_27;
  }
  sub_244D640E4(v11, (uint64_t)v5);
  if (v14(v5, 1, v12) == 1)
  {
    sub_244D6412C((uint64_t)v5);
  }
  else
  {
    v28 = sub_244E4DCBC();
    v29 = sub_244E4E67C();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v30 = 0;
      _os_log_impl(&dword_244D61000, v28, v29, "daemon | Invalid entitlement, closing UI", v30, 2u);
      MEMORY[0x2495283BC](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
  }
  objc_msgSend(v1, sel_closeUIImmediate);
LABEL_27:

}

void sub_244DD8E14(const char *a1, SEL *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  uint64_t v16;

  v5 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143E8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_257419DB8);
  sub_244D640E4(v9, (uint64_t)v8);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_244D6412C((uint64_t)v8);
  }
  else
  {
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_244D61000, v12, v13, a1, v14, 2u);
      MEMORY[0x2495283BC](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  v15 = (void *)MEMORY[0x249528470](v5 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  objc_msgSend(v15, *a2);

}

uint64_t sub_244DD8FF0(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143E8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_257419DB8);
  sub_244D640E4(v9, (uint64_t)v8);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_244D6412C((uint64_t)v8);
  }
  else
  {
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_244D61000, v12, v13, "daemon | tapUIFinished", v14, 2u);
      MEMORY[0x2495283BC](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  v15 = (void *)MEMORY[0x249528470](v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v15)
  {
    v16 = v15;
    objc_msgSend(v15, sel_tapUIFinishedWithExpected_issuerPIN_, a1 & 1, a2 & 1);

  }
  v17 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection), sel_invalidate);
  v18 = *(void **)(v3 + v17);
  *(_QWORD *)(v3 + v17) = 0;

  *(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) = 0;
  *(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded) = 0;
  return sub_244DD81EC();
}

uint64_t sub_244DD9360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143F0 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419DD0);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    result = sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v9 = sub_244E4DCBC();
    v10 = sub_244E4E688();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_244D61000, v9, v10, "daemon | pinUIDidLoad", v11, 2u);
      MEMORY[0x2495283BC](v11, -1, -1);
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  *(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded) = 1;
  return result;
}

void sub_244DD95A8(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v22;
  uint8_t *v23;
  void *v24;
  void *v25;
  uint64_t v26;
  int v27;
  int v28;

  v6 = v5;
  LODWORD(v9) = a3;
  LODWORD(v10) = a2;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143F0 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v12, (uint64_t)qword_257419DD0);
  sub_244D640E4(v15, (uint64_t)v14);
  v16 = sub_244E4DCD4();
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16) == 1)
  {
    sub_244D6412C((uint64_t)v14);
  }
  else
  {
    v28 = v10;
    v10 = sub_244E4DCBC();
    v18 = sub_244E4E688();
    if (os_log_type_enabled((os_log_t)v10, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v27 = v9;
      v9 = a1;
      v20 = a4;
      v21 = a5;
      v22 = v19;
      *(_WORD *)v19 = 0;
      _os_log_impl(&dword_244D61000, (os_log_t)v10, v18, "daemon | reportPINError", v19, 2u);
      v23 = v22;
      a5 = v21;
      a4 = v20;
      a1 = v9;
      LOBYTE(v9) = v27;
      MEMORY[0x2495283BC](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    LOBYTE(v10) = v28;
  }
  v24 = (void *)MEMORY[0x249528470](v6 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, sel_reportPINErrorWithError_isCardRequest_isAccessibilityEnabled_accessibilityEntryType_drawNumberFailures_, a1, v10 & 1, v9 & 1, a4, a5);

  }
}

void sub_244DD981C(char *a1, uint64_t a2, SEL *a3)
{
  char *v5;
  id v6;

  v6 = (id)MEMORY[0x249528470](&a1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate]);
  v5 = a1;
  objc_msgSend(v6, *a3);

}

uint64_t sub_244DD99B0(uint64_t a1, uint64_t a2, int a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _BYTE *v17;
  _QWORD **v18;
  _QWORD *v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  int v30;
  uint64_t v31;

  v4 = v3;
  v30 = a3;
  v31 = a2;
  v29 = a1;
  v5 = sub_244E4CB4C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244E4C714();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C624();
  sub_244E4C6C0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v4[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible] = 1;
  v13 = objc_msgSend((id)objc_opt_self(), sel_anonymousListener);
  if (qword_257414478 != -1)
    swift_once();
  v14 = qword_257417C70;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v4;
  v16 = v13;
  v17 = v4;
  objc_msgSend(v16, sel_setDelegate_, v14);
  objc_msgSend(v16, sel_resume);
  v18 = (_QWORD **)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners);
  swift_beginAccess();
  v19 = *v18;
  v20 = v16;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v18 = v19;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v19 = sub_244DCB788(0, v19[2] + 1, 1, v19);
    *v18 = v19;
  }
  v23 = v19[2];
  v22 = v19[3];
  if (v23 >= v22 >> 1)
  {
    v19 = sub_244DCB788((_QWORD *)(v22 > 1), v23 + 1, 1, v19);
    *v18 = v19;
  }
  v19[2] = v23 + 1;
  v24 = &v19[3 * v23];
  v24[4] = v20;
  v24[5] = sub_244DDD800;
  v24[6] = v15;
  swift_endAccess();
  swift_release();

  v25 = objc_msgSend(v20, sel_endpoint);
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (qword_257414488 != -1)
    swift_once();
  v27 = v31;
  *(_QWORD *)v8 = v29;
  *((_QWORD *)v8 + 1) = v27;
  v8[16] = v30 & 1;
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BDE4360], v5);
  swift_bridgeObjectRetain();
  sub_244DDDE84((uint64_t)v8, v25, (uint64_t)sub_244DDD820, v26);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_244DD9CF0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  int v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD v22[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143F8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419DE8);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E670();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "daemon | configureConnection", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_2574282E0);
  objc_msgSend(a1, sel_setExportedInterface_, v14);

  objc_msgSend(a1, sel_setExportedObject_, v2);
  v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_2574283F8);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v15);

  aBlock[4] = sub_244DDAB68;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244DCFC60;
  aBlock[3] = &block_descriptor_21;
  v16 = _Block_copy(aBlock);
  v17 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);
  sub_244E4E82C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418150);
  v18 = swift_dynamicCast();
  v19 = v22[1];
  if (!v18)
    v19 = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI) = v19;
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_resume);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection) = a1;
  v21 = a1;

}

void sub_244DD9FEC(int a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  _BYTE *v6;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x249528470](v3);
  if (v4)
  {
    v5 = (void *)v4;
    sub_244DDA080(a1);

  }
  swift_beginAccess();
  v6 = (_BYTE *)MEMORY[0x249528470](v3);
  if (v6)
  {
    v6[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible] = 0;

  }
}

void sub_244DDA080(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(uint64_t, uint64_t, uint64_t);
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint8_t *v71;
  NSObject *v72;
  os_log_type_t v73;
  _BOOL4 v74;
  uint8_t *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void *v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  unsigned int (*v97)(char *, uint64_t, uint64_t);
  int v98;
  uint64_t v99;
  _QWORD aBlock[7];

  v2 = v1;
  v98 = a1;
  v3 = sub_244E4E1FC();
  v87 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v86 = (char *)&v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v83 - v6;
  v85 = sub_244E4E1C0();
  v91 = *(_QWORD *)(v85 - 8);
  MEMORY[0x24BDAC7A8](v85);
  v90 = (char *)&v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_244E4E1B4();
  MEMORY[0x24BDAC7A8](v94);
  v95 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v93 = (uint64_t)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v89 = (uint64_t)&v83 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v83 - v16;
  v18 = MEMORY[0x24BDAC7A8](v15);
  v88 = (uint64_t)&v83 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v92 = (uint64_t)&v83 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v83 - v23;
  v25 = MEMORY[0x24BDAC7A8](v22);
  v27 = (char *)&v83 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v29 = (char *)&v83 - v28;
  if (qword_2574143D8 != -1)
    swift_once();
  v96 = __swift_project_value_buffer(v10, (uint64_t)qword_257419D88);
  sub_244D640E4(v96, (uint64_t)v29);
  v30 = sub_244E4DCD4();
  v31 = *(_QWORD *)(v30 - 8);
  v97 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
  if (v97(v29, 1, v30) == 1)
  {
    sub_244D6412C((uint64_t)v29);
  }
  else
  {
    sub_244D8C8B0(v2, 0xD00000000000001ALL, 0x8000000244E59AF0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v29, v30);
  }
  if ((_BYTE)v98)
  {
    if (v98 == 1)
    {
      v32 = v2;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    v83 = v7;
    v84 = v3;
    v32 = v2;
    v33 = v30;
    v34 = v31;
  }
  else
  {
    v83 = v7;
    v84 = v3;
    v32 = v2;
    v33 = v30;
    v34 = v31;
  }
  v35 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  v31 = v34;
  v30 = v33;
  if ((v35 & 1) != 0)
  {
LABEL_12:
    v36 = v96;
    sub_244D640E4(v96, (uint64_t)v27);
    v37 = v97;
    if (v97(v27, 1, v30) == 1)
    {
      sub_244D6412C((uint64_t)v27);
      v38 = v32;
    }
    else
    {
      v44 = sub_244E4DCBC();
      v45 = sub_244E4E67C();
      v38 = v32;
      if (os_log_type_enabled(v44, v45))
      {
        v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v46 = 0;
        _os_log_impl(&dword_244D61000, v44, v45, "reg ui invalidated and cannot be presented, cleaning up transaction.", v46, 2u);
        MEMORY[0x2495283BC](v46, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v31 + 8))(v27, v30);
    }
    v47 = MEMORY[0x249528470](v38 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
    if (v47)
    {
      v48 = (void *)v47;
      sub_244D640E4(v36, (uint64_t)v24);
      if (v37(v24, 1, v30) != 1)
      {
        sub_244D8C8B0((uint64_t)v48, 0xD000000000000012, 0x8000000244E59AD0, 0, 0xE000000000000000);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v30);
        goto LABEL_26;
      }
      v49 = (uint64_t)v24;
LABEL_24:
      sub_244D6412C(v49);
LABEL_26:
      sub_244DF2C4C(2u, 0);

      return;
    }
    return;
  }
  if (!(_BYTE)v98)
  {
    swift_bridgeObjectRelease();
    v39 = v32;
    goto LABEL_29;
  }
  v39 = v32;
  v40 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  if ((v40 & 1) != 0)
  {
LABEL_29:
    sub_244D640E4(v96, (uint64_t)v17);
    if (v97(v17, 1, v33) == 1)
    {
      sub_244D6412C((uint64_t)v17);
    }
    else
    {
      v50 = sub_244E4DCBC();
      v51 = sub_244E4E67C();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v52 = 0;
        _os_log_impl(&dword_244D61000, v50, v51, "reg ui invalidated normally with .handleRequested event", v52, 2u);
        MEMORY[0x2495283BC](v52, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v30);
    }
    v54 = v96;
    v53 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v97;
    if (*(_BYTE *)(v39 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible) == 1)
    {
      v55 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_244DDD828;
      aBlock[5] = v55;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_244DB30BC;
      aBlock[3] = &block_descriptor_18_1;
      _Block_copy(aBlock);
      v99 = MEMORY[0x24BEE4AF8];
      sub_244DB5010();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_257416570);
      sub_244DDD830();
      sub_244E4E838();
      sub_244E4E22C();
      swift_allocObject();
      v56 = sub_244E4E214();
      swift_release();
      swift_release();
      v57 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork;
      *(_QWORD *)(v39 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_deferredWork) = v56;
      swift_release();
      if (*(_QWORD *)(v39 + v57))
      {
        v58 = v54;
        v59 = v89;
        sub_244D640E4(v58, v89);
        v60 = v53(v59, 1, v30);
        swift_retain();
        if (v60 == 1)
        {
          sub_244D6412C(v59);
          v61 = v84;
          v62 = v83;
        }
        else
        {
          v72 = sub_244E4DCBC();
          v73 = sub_244E4E688();
          v74 = os_log_type_enabled(v72, v73);
          v61 = v84;
          v62 = v83;
          if (v74)
          {
            v75 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v75 = 0;
            _os_log_impl(&dword_244D61000, v72, v73, "Deferred - queued", v75, 2u);
            MEMORY[0x2495283BC](v75, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v59, v30);
        }
        v77 = v86;
        v76 = v87;
        v78 = v85;
        sub_244D9003C();
        v80 = v90;
        v79 = v91;
        (*(void (**)(char *, _QWORD, uint64_t))(v91 + 104))(v90, *MEMORY[0x24BEE5490], v78);
        v81 = (void *)sub_244E4E6E8();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v78);
        sub_244E4E1F0();
        MEMORY[0x2495274E0](v77, 0.5);
        v82 = *(void (**)(char *, uint64_t))(v76 + 8);
        v82(v77, v61);
        sub_244E4E6B8();
        swift_release();

        v82(v62, v61);
      }
    }
    else
    {
      v63 = v93;
      sub_244D640E4(v96, v93);
      if (v53(v63, 1, v30) == 1)
      {
        sub_244D6412C(v63);
      }
      else
      {
        v69 = sub_244E4DCBC();
        v70 = sub_244E4E67C();
        if (os_log_type_enabled(v69, v70))
        {
          v71 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v71 = 0;
          _os_log_impl(&dword_244D61000, v69, v70, "reg ui already closed, no deferred clean up needed", v71, 2u);
          MEMORY[0x2495283BC](v71, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v63, v30);
      }
    }
    return;
  }
  v41 = v96;
  v42 = v92;
  sub_244D640E4(v96, v92);
  v43 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v97;
  if (v97((char *)v42, 1, v30) == 1)
  {
    sub_244D6412C(v42);
  }
  else
  {
    v64 = sub_244E4DCBC();
    v65 = sub_244E4E67C();
    if (os_log_type_enabled(v64, v65))
    {
      v66 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v66 = 0;
      _os_log_impl(&dword_244D61000, v64, v65, "reg ui invalidated with non-handleRequested unexpected SB error", v66, 2u);
      MEMORY[0x2495283BC](v66, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v42, v30);
  }
  sub_244DD81EC();
  v67 = MEMORY[0x249528470](v39 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v67)
  {
    v48 = (void *)v67;
    v68 = v88;
    sub_244D640E4(v41, v88);
    if (v43(v68, 1, v30) != 1)
    {
      sub_244D8C8B0((uint64_t)v48, 0xD000000000000012, 0x8000000244E59AD0, 0, 0xE000000000000000);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v68, v30);
      goto LABEL_26;
    }
    v49 = v68;
    goto LABEL_24;
  }
}

uint64_t sub_244DDAB68(void *a1)
{
  return sub_244DDCE60(a1, &qword_2574143F8, (uint64_t)qword_257419DE8, "Connection with RegUI invalidated with error: %{public}s");
}

void sub_244DDAB8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v19 - v6;
  v8 = a1 + 16;
  if (qword_2574143D8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D640E4(v9, (uint64_t)v7);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v7, 1, v10) == 1)
  {
    sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v13 = sub_244E4DCBC();
    v14 = sub_244E4E67C();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_244D61000, v13, v14, "Deferred - triggered - reg ui ended abruptly with no finish", v15, 2u);
      MEMORY[0x2495283BC](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
  }
  swift_beginAccess();
  v16 = MEMORY[0x249528470](v8);
  if (v16)
  {
    v17 = (void *)v16;
    v18 = (void *)MEMORY[0x249528470](v16 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);

    if (v18)
    {
      sub_244D640E4(v9, (uint64_t)v5);
      if (v12(v5, 1, v10) == 1)
      {
        sub_244D6412C((uint64_t)v5);
      }
      else
      {
        sub_244D8C8B0((uint64_t)v18, 0xD000000000000012, 0x8000000244E59AD0, 0, 0xE000000000000000);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v5, v10);
      }
      sub_244DF2C4C(2u, 0);

    }
  }
}

void sub_244DDADE4(uint64_t a1, unint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  void *v24;
  unsigned int v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  void *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint8_t *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v38 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v38 - v11;
  if (qword_2574143F8 != -1)
    swift_once();
  v13 = __swift_project_value_buffer(v4, (uint64_t)qword_257419DE8);
  sub_244D640E4(v13, (uint64_t)v12);
  v14 = sub_244E4DCD4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v12, 1, v14) == 1)
  {
    sub_244D6412C((uint64_t)v12);
  }
  else
  {
    v42 = v2;
    swift_bridgeObjectRetain_n();
    v17 = sub_244E4DCBC();
    v18 = sub_244E4E688();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = swift_slowAlloc();
      v40 = v7;
      v20 = (uint8_t *)v19;
      v39 = swift_slowAlloc();
      v45 = v39;
      v41 = v15;
      *(_DWORD *)v20 = 136315138;
      v38 = v20 + 4;
      swift_bridgeObjectRetain();
      v44 = sub_244D9A70C(v43, a2, &v45);
      v15 = v41;
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v17, v18, "daemon | notifyRegUIResult - %s", v20, 0xCu);
      v21 = v39;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v21, -1, -1);
      v22 = v20;
      v7 = v40;
      MEMORY[0x2495283BC](v22, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    v2 = v42;
  }
  v23 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI;
  v24 = *(void **)&v2[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI];
  if (v24)
  {
    sub_244D640E4(v13, (uint64_t)v10);
    v25 = v16(v10, 1, v14);
    swift_unknownObjectRetain();
    if (v25 == 1)
    {
      sub_244D6412C((uint64_t)v10);
    }
    else
    {
      v27 = sub_244E4DCBC();
      v28 = sub_244E4E688();
      if (os_log_type_enabled(v27, v28))
      {
        v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v29 = 0;
        _os_log_impl(&dword_244D61000, v27, v28, "daemon | regui.notifyRegUIResult", v29, 2u);
        MEMORY[0x2495283BC](v29, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    }
    v30 = (void *)sub_244E4E2F8();
    objc_msgSend(v24, sel_notifyRegUIResultWithResult_, v30);
    swift_unknownObjectRelease();

  }
  else
  {
    v26 = v2;
    sub_244D640E4(v13, (uint64_t)v7);
    if (v16(v7, 1, v14) == 1)
    {
      sub_244D6412C((uint64_t)v7);
    }
    else
    {
      v31 = v2;
      v32 = v7;
      v33 = v31;
      v34 = v32;
      v35 = sub_244E4DCBC();
      v36 = sub_244E4E688();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v37 = 67109120;
        LODWORD(v45) = *(_QWORD *)&v26[v23] != 0;
        sub_244E4E7E4();

        _os_log_impl(&dword_244D61000, v35, v36, "daemon | optional failed - %{BOOL}d", v37, 8u);
        MEMORY[0x2495283BC](v37, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v15 + 8))(v34, v14);
    }
  }
}

uint64_t sub_244DDB314(uint64_t a1, unint64_t a2, SEL *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  SEL *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  result = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(void **)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_regUI);
  if (v11)
  {
    v12 = qword_2574143F8;
    swift_unknownObjectRetain();
    if (v12 != -1)
      swift_once();
    v13 = __swift_project_value_buffer(v7, (uint64_t)qword_257419DE8);
    sub_244D640E4(v13, (uint64_t)v10);
    v14 = sub_244E4DCD4();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14) == 1)
    {
      sub_244D6412C((uint64_t)v10);
    }
    else
    {
      v21 = a1;
      v16 = sub_244E4DCBC();
      v17 = sub_244E4E688();
      if (os_log_type_enabled(v16, v17))
      {
        v20 = a3;
        v18 = (uint8_t *)swift_slowAlloc();
        v19 = swift_slowAlloc();
        v23 = v19;
        *(_DWORD *)v18 = 136315138;
        v22 = sub_244D9A70C(v21, a2, &v23);
        a3 = v20;
        sub_244E4E7E4();
        _os_log_impl(&dword_244D61000, v16, v17, "daemon - %s", v18, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v19, -1, -1);
        MEMORY[0x2495283BC](v18, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v14);
    }
    objc_msgSend(v11, *a3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_244DDB59C()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_QWORD, _QWORD, _QWORD);
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  char *v21;
  _BYTE *v22;
  uint64_t v23;
  uint8_t *v24;
  uint8_t *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  unsigned int (*v40)(_QWORD, _QWORD, _QWORD);
  char *v41;
  _BYTE v42[88];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v39 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v39 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v39 - v12;
  if (qword_2574143F8 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v2, (uint64_t)qword_257419DE8);
  sub_244D640E4(v14, (uint64_t)v13);
  v15 = sub_244E4DCD4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v16 + 48);
  if (v17(v13, 1, v15) == 1)
  {
    sub_244D6412C((uint64_t)v13);
  }
  else
  {
    v41 = v5;
    v18 = sub_244E4DCBC();
    v19 = sub_244E4E688();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v40 = v17;
      v21 = v11;
      v22 = v1;
      v23 = v16;
      v24 = v20;
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_244D61000, v18, v19, "daemon | regUIDidLoad", v20, 2u);
      v25 = v24;
      v16 = v23;
      v1 = v22;
      v11 = v21;
      v17 = v40;
      MEMORY[0x2495283BC](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    v5 = v41;
  }
  v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible] = 1;
  v26 = *(void **)&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection];
  if (v26)
  {
    v27 = v26;
    sub_244D7FA9C(v27, (uint64_t)v42);
    sub_244DDD8A8((uint64_t)v42);
    if ((v42[84] & 1) == 0)
    {
      if (qword_2574143C8 != -1)
        swift_once();
      v28 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
      sub_244D640E4(v28, (uint64_t)v11);
      if (v17(v11, 1, v15) == 1)
      {
        sub_244D6412C((uint64_t)v11);
      }
      else
      {
        v33 = sub_244E4DCBC();
        v34 = sub_244E4E688();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v35 = 0;
          _os_log_impl(&dword_244D61000, v33, v34, "Invalid entitlement, closing UI", v35, 2u);
          MEMORY[0x2495283BC](v35, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
      }
      objc_msgSend(v1, sel_closeUIImmediate);

      return;
    }

  }
  v29 = MEMORY[0x249528470](&v1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate]);
  if (v29)
  {
    v30 = (void *)v29;
    if (qword_2574143D8 != -1)
      swift_once();
    v31 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
    sub_244D640E4(v31, (uint64_t)v8);
    if (v17(v8, 1, v15) == 1)
    {
      sub_244D6412C((uint64_t)v8);
    }
    else
    {
      sub_244D8C8B0((uint64_t)v30, 0x6469444955676572, 0xEE00292864616F4CLL, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    }

  }
  else
  {
    if (qword_2574143C8 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D58);
    sub_244D640E4(v32, (uint64_t)v5);
    if (v17(v5, 1, v15) == 1)
    {
      sub_244D6412C((uint64_t)v5);
    }
    else
    {
      v36 = sub_244E4DCBC();
      v37 = sub_244E4E688();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_244D61000, v36, v37, "No delegate to notify about RegUI load, closing UI", v38, 2u);
        MEMORY[0x2495283BC](v38, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
    }
    objc_msgSend(v1, sel_closeUIImmediate);
  }
}

void sub_244DDBAC0(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143F8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419DE8);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E688();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "daemon | regUIAccount", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v13 = MEMORY[0x249528470](v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v13)
  {
    v14 = (void *)v13;
    sub_244DF0A28(a1);

  }
}

void sub_244DDBCA4(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143F8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_257419DE8);
  sub_244D640E4(v9, (uint64_t)v8);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_244D6412C((uint64_t)v8);
  }
  else
  {
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E688();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_244D61000, v12, v13, "daemon | regUIFinished", v14, 2u);
      MEMORY[0x2495283BC](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  *(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible) = 0;
  sub_244DD81EC();
  v15 = MEMORY[0x249528470](v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v15)
  {
    v16 = (void *)v15;
    sub_244DF0D24(a1 & 1, a2 & 1);

  }
  v17 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection;
  objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection), sel_invalidate);
  v18 = *(void **)(v3 + v17);
  *(_QWORD *)(v3 + v17) = 0;

}

void sub_244DDBEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143F8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419DE8);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v8 = sub_244E4DCBC();
    v9 = sub_244E4E688();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_244D61000, v8, v9, "daemon | updateAccountSubscription", v10, 2u);
      MEMORY[0x2495283BC](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v11 = MEMORY[0x249528470](v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_delegate);
  if (v11)
  {
    v12 = (void *)v11;
    sub_244DF0F60();

  }
}

uint64_t sub_244DDC080(uint64_t a1)
{
  _BYTE *v1;
  _BYTE *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  _BYTE *v17;
  _QWORD **v18;
  _QWORD *v19;
  id v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  id v25;
  uint64_t v26;
  uint64_t v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414440 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419EC0);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E670();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "Asking to present Identity UI", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v2[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 1;
  v13 = objc_msgSend((id)objc_opt_self(), sel_anonymousListener);
  if (qword_257414478 != -1)
    swift_once();
  v14 = qword_257417C70;
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v2;
  v16 = v13;
  v17 = v2;
  objc_msgSend(v16, sel_setDelegate_, v14);
  objc_msgSend(v16, sel_resume);
  v18 = (_QWORD **)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners);
  swift_beginAccess();
  v19 = *v18;
  v20 = v16;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v18 = v19;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v19 = sub_244DCB788(0, v19[2] + 1, 1, v19);
    *v18 = v19;
  }
  v23 = v19[2];
  v22 = v19[3];
  if (v23 >= v22 >> 1)
  {
    v19 = sub_244DCB788((_QWORD *)(v22 > 1), v23 + 1, 1, v19);
    *v18 = v19;
  }
  v19[2] = v23 + 1;
  v24 = &v19[3 * v23];
  v24[4] = v20;
  v24[5] = sub_244DDD774;
  v24[6] = v15;
  swift_endAccess();
  swift_release();

  v25 = objc_msgSend(v20, sel_endpoint);
  v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (qword_257414488 != -1)
    swift_once();
  sub_244DDE30C(a1, v25, (uint64_t)sub_244DDD7B8, v26);

  return swift_release();
}

void sub_244DDC408(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  int v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD v22[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414440 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419EC0);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E670();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "daemon | configureConnection", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_257428070);
  objc_msgSend(a1, sel_setExportedInterface_, v14);

  objc_msgSend(a1, sel_setExportedObject_, v2);
  v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_257428160);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v15);

  aBlock[4] = sub_244DDC7B0;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244DCFC60;
  aBlock[3] = &block_descriptor_7;
  v16 = _Block_copy(aBlock);
  v17 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);
  sub_244E4E82C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418140);
  v18 = swift_dynamicCast();
  v19 = v22[1];
  if (!v18)
    v19 = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityUI) = v19;
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_resume);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection) = a1;
  v21 = a1;

}

void sub_244DDC704(int a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  void *v6;
  void *v7;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (_BYTE *)MEMORY[0x249528470](v3);
  if (v4)
  {
    v4[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 0;

  }
  swift_beginAccess();
  v5 = MEMORY[0x249528470](v3);
  if (v5)
  {
    v6 = (void *)v5;
    v7 = (void *)MEMORY[0x249528470](v5 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate);

    if (v7)
    {
      sub_244E222F0(a1);

    }
  }
}

uint64_t sub_244DDC7B0(void *a1)
{
  return sub_244DDCE60(a1, &qword_257414440, (uint64_t)qword_257419EC0, "Connection with IdentityUI invalidated with error: %{public}s");
}

uint64_t sub_244DDC7D4(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  _BYTE *v11;
  _QWORD **v12;
  _QWORD *v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a1;
  v25 = a2;
  v3 = sub_244E4CB4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (uint64_t *)((char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v2[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 1;
  v7 = objc_msgSend((id)objc_opt_self(), sel_anonymousListener);
  if (qword_257414478 != -1)
    swift_once();
  v8 = qword_257417C70;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v2;
  v10 = v7;
  v11 = v2;
  objc_msgSend(v10, sel_setDelegate_, v8);
  objc_msgSend(v10, sel_resume);
  v12 = (_QWORD **)(v8 + OBJC_IVAR____TtC21ProximityReaderDaemon6Daemon_temporaryListeners);
  swift_beginAccess();
  v13 = *v12;
  v14 = v10;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v12 = v13;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v13 = sub_244DCB788(0, v13[2] + 1, 1, v13);
    *v12 = v13;
  }
  v17 = v13[2];
  v16 = v13[3];
  if (v17 >= v16 >> 1)
  {
    v13 = sub_244DCB788((_QWORD *)(v16 > 1), v17 + 1, 1, v13);
    *v12 = v13;
  }
  v13[2] = v17 + 1;
  v18 = &v13[3 * v17];
  v18[4] = v14;
  v18[5] = sub_244DDD7D8;
  v18[6] = v9;
  swift_endAccess();
  swift_release();

  v19 = objc_msgSend(v14, sel_endpoint);
  v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  if (qword_257414488 != -1)
    swift_once();
  v21 = v25;
  *v6 = v24;
  v6[1] = v21;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BDE4358], v3);
  swift_bridgeObjectRetain();
  sub_244DDDE84((uint64_t)v6, v19, (uint64_t)sub_244DDD7F8, v20);

  swift_release();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_244DDCAA4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  int v18;
  uint64_t v19;
  void *v20;
  id v21;
  _QWORD v22[2];
  _QWORD aBlock[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414440 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419EC0);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E670();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "daemon | configureConnection", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_257427D18);
  objc_msgSend(a1, sel_setExportedInterface_, v14);

  objc_msgSend(a1, sel_setExportedObject_, v2);
  v15 = objc_msgSend(v13, sel_interfaceWithProtocol_, &unk_257427DE0);
  objc_msgSend(a1, sel_setRemoteObjectInterface_, v15);

  aBlock[4] = sub_244DDCE3C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_244DCFC60;
  aBlock[3] = &block_descriptor_10_0;
  v16 = _Block_copy(aBlock);
  v17 = objc_msgSend(a1, sel_remoteObjectProxyWithErrorHandler_, v16);
  _Block_release(v16);
  sub_244E4E82C();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418148);
  v18 = swift_dynamicCast();
  v19 = v22[1];
  if (!v18)
    v19 = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityRegistrationUI) = v19;
  swift_unknownObjectRelease();
  objc_msgSend(a1, sel_resume);
  v20 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection) = a1;
  v21 = a1;

}

void sub_244DDCDA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  void *v5;
  void *v6;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = (_BYTE *)MEMORY[0x249528470](v2);
  if (v3)
  {
    v3[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible] = 0;

  }
  swift_beginAccess();
  v4 = MEMORY[0x249528470](v2);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (void *)MEMORY[0x249528470](v4 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate);

    if (v6)
    {
      sub_244E227A0();

    }
  }
}

uint64_t sub_244DDCE3C(void *a1)
{
  return sub_244DDCE60(a1, &qword_257414440, (uint64_t)qword_257419EC0, "Connection with IdentityRegistrationUI invalidated with error: %{public}s");
}

uint64_t sub_244DDCE60(void *a1, _QWORD *a2, uint64_t a3, const char *a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint8_t *v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a2 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v8, a3);
  sub_244D640E4(v11, (uint64_t)v10);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) == 1)
    return sub_244D6412C((uint64_t)v10);
  v15 = a1;
  v16 = a1;
  v17 = sub_244E4DCBC();
  v18 = sub_244E4E67C();
  if (os_log_type_enabled(v17, v18))
  {
    v19 = (uint8_t *)swift_slowAlloc();
    v20 = swift_slowAlloc();
    v25 = a4;
    v21 = v20;
    v27 = v20;
    *(_DWORD *)v19 = 136446210;
    v24 = v19 + 4;
    swift_getErrorValue();
    v22 = sub_244E4EB2C();
    v26 = sub_244D9A70C(v22, v23, &v27);
    sub_244E4E7E4();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_244D61000, v17, v18, v25, v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2495283BC](v21, -1, -1);
    MEMORY[0x2495283BC](v19, -1, -1);

  }
  else
  {

  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v10, v12);
}

id sub_244DDD0D8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, SEL *a5)
{
  id result;

  result = *(id *)(a1 + *a4);
  if (result)
    return objc_msgSend(result, *a5);
  return result;
}

void sub_244DDD1E4(char *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7;
  char *v8;
  id v9;

  v7 = MEMORY[0x249528470](&a1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate]);
  if (v7)
  {
    v9 = (id)v7;
    v8 = a1;
    a4(a3);

  }
}

id sub_244DDD38C(uint64_t a1, uint64_t a2, _QWORD *a3, SEL *a4)
{
  id result;

  result = *(id *)(a1 + *a3);
  if (result)
    return objc_msgSend(result, *a4);
  return result;
}

void sub_244DDD460(char *a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5;
  char *v6;
  id v7;

  v5 = MEMORY[0x249528470](&a1[OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate]);
  if (v5)
  {
    v7 = (id)v5;
    v6 = a1;
    a3();

  }
}

void sub_244DDD534(void (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;

  v2 = v1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isIdentityUIVisible) = 0;
    v4 = MEMORY[0x249528470](v1 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_identityDelegate);
    if (v4)
    {
      v5 = (void *)v4;
      a1();

    }
  }
  v6 = OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection;
  objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_connection), sel_invalidate);
  v7 = *(void **)(v2 + v6);
  *(_QWORD *)(v2 + v6) = 0;

}

uint64_t storeEnumTagSinglePayload for RemoteUIError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_244DDD640 + 4 * byte_244E552D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_244DDD674 + 4 * byte_244E552D0[v4]))();
}

uint64_t sub_244DDD674(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DDD67C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DDD684);
  return result;
}

uint64_t sub_244DDD690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DDD698);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_244DDD69C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DDD6A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteUIError()
{
  return &type metadata for RemoteUIError;
}

unint64_t sub_244DDD6C4()
{
  unint64_t result;

  result = qword_257418138;
  if (!qword_257418138)
  {
    result = MEMORY[0x2495282F0](&unk_244E553A8, &type metadata for RemoteUIError);
    atomic_store(result, (unint64_t *)&qword_257418138);
  }
  return result;
}

uint64_t sub_244DDD708()
{
  unint64_t v0;

  v0 = sub_244E4E9C4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_244DDD750()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_244DDD774(void *a1)
{
  sub_244DDC408(a1);
}

uint64_t sub_244DDD794()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_244DDD7B8(int a1)
{
  uint64_t v1;

  sub_244DDC704(a1, v1);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void sub_244DDD7D8(void *a1)
{
  sub_244DDCAA4(a1);
}

void sub_244DDD7F8(uint64_t a1)
{
  uint64_t v1;

  sub_244DDCDA0(a1, v1);
}

void sub_244DDD800(void *a1)
{
  sub_244DD9CF0(a1);
}

void sub_244DDD820(int a1)
{
  uint64_t v1;

  sub_244DD9FEC(a1, v1);
}

void sub_244DDD828()
{
  uint64_t v0;

  sub_244DDAB8C(v0);
}

unint64_t sub_244DDD830()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257418D30;
  if (!qword_257418D30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257416570);
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_257418D30);
  }
  return result;
}

uint64_t sub_244DDD87C()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_244DDD8A0(char a1)
{
  uint64_t v1;

  return sub_244E245E0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_244DDD8A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_244DDD910()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_244DDD93C()
{
  uint64_t *v0;

  sub_244DD801C(v0[2], v0[3], v0[4]);
}

void sub_244DDD948(void *a1)
{
  uint64_t v1;

  sub_244DD6FD4(a1, v1);
}

void sub_244DDD950()
{
  uint64_t v0;

  sub_244DD728C(v0);
}

uint64_t sub_244DDD958(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

void sub_244DDD968(void *a1)
{
  sub_244DD6C28(a1);
}

uint64_t sub_244DDD9C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t *a4, unint64_t *a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void (*v17)(char *, uint64_t);
  id v18;
  uint64_t v19;
  _QWORD v21[2];
  unint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  v22 = a5;
  v23 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v10);
  v21[1] = (char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a3(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v21 - v14;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1618]), sel_initRequiringSecureCoding_, 1);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v6, v12);
  if (!a2)
  {
    v24 = v12;
    __swift_instantiateConcreteTypeFromMangledName(a4);
    sub_244E4E370();
  }
  v17 = *(void (**)(char *, uint64_t))(v13 + 8);
  swift_bridgeObjectRetain();
  v17(v15, v12);
  sub_244D65324(v22, a3, v23);
  sub_244E4E694();
  swift_bridgeObjectRelease();
  objc_msgSend(v16, sel_finishEncoding);
  v18 = objc_msgSend(v16, sel_encodedData);
  v19 = sub_244E4C324();

  return v19;
}

id sub_244DDDD70()
{
  id result;

  result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for RemoteInterfacePresenter()), sel_init);
  qword_257419F00 = (uint64_t)result;
  return result;
}

void sub_244DDDD9C(uint64_t a1)
{
  sub_244DDDDE4(a1, 0xD000000000000030, 0x8000000244E59E70, &qword_257419F08);
}

void sub_244DDDDC0(uint64_t a1)
{
  sub_244DDDDE4(a1, 0xD000000000000035, 0x8000000244E59E30, &qword_257419F10);
}

void sub_244DDDDE4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v5;
  void *v6;
  void *v7;
  id v8;

  sub_244E4D944();
  v5 = objc_allocWithZone(MEMORY[0x24BEB0AE8]);
  v6 = (void *)sub_244E4E2F8();
  swift_bridgeObjectRelease();
  v7 = (void *)sub_244E4E2F8();
  v8 = objc_msgSend(v5, sel_initWithServiceName_viewControllerClassName_, v6, v7);

  *a4 = v8;
}

void sub_244DDDE84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  objc_class *v31;
  char *v32;
  uint64_t *v33;
  char *v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  objc_super v47;
  uint64_t v48;
  uint64_t v49;

  v45 = a3;
  v46 = a4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244E4CA50();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB0AD0]), sel_init);
  objc_msgSend(v13, sel_setXpcEndpoint_, objc_msgSend(a2, sel__endpoint));
  swift_unknownObjectRelease();
  v14 = sub_244DDD9C4(0, 0, (uint64_t (*)(uint64_t))MEMORY[0x24BDE4368], &qword_257418250, &qword_257418258, MEMORY[0x24BDE4378]);
  if (v15 >> 60 == 15)
  {
    if (qword_2574143F8 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v6, (uint64_t)qword_257419DE8);
    sub_244D640E4(v16, (uint64_t)v8);
    v17 = sub_244E4DCD4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v8, 1, v17) == 1)
    {

      sub_244D6412C((uint64_t)v8);
    }
    else
    {
      v40 = sub_244E4DCBC();
      v41 = sub_244E4E67C();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_244D61000, v40, v41, "Unable to encode registration request", v42, 2u);
        MEMORY[0x2495283BC](v42, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v17);
    }
  }
  else
  {
    v19 = v14;
    v20 = v15;
    v44 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_257418230);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_244E50DA0;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDE4150], v9);
    v22 = sub_244E4CA44();
    v24 = v23;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    v48 = v22;
    v49 = v24;
    sub_244E4E868();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BDCDDE8];
    *(_QWORD *)(inited + 72) = v19;
    *(_QWORD *)(inited + 80) = v20;
    sub_244D73FC0(v19, v20);
    sub_244DB2A7C(inited);
    v25 = (void *)sub_244E4E298();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setUserInfo_, v25);

    v26 = (void *)objc_opt_self();
    if (qword_257414490 != -1)
      swift_once();
    v27 = objc_msgSend(v26, sel_newHandleWithDefinition_configurationContext_, qword_257419F08, v13);
    v28 = sub_244E4D980();
    v30 = v29;
    v31 = (objc_class *)type metadata accessor for RemoteAlertInvalidationHandler();
    v32 = (char *)objc_allocWithZone(v31);
    v33 = (uint64_t *)&v32[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName];
    *v33 = v28;
    v33[1] = v30;
    v34 = &v32[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_completion];
    v35 = v46;
    *(_QWORD *)v34 = v45;
    *((_QWORD *)v34 + 1) = v35;
    v47.receiver = v32;
    v47.super_class = v31;
    swift_retain();
    v36 = objc_msgSendSuper2(&v47, sel_init);
    objc_msgSend(v27, sel_registerObserver_, v36);
    v37 = *(void **)(v44 + OBJC_IVAR____TtC21ProximityReaderDaemon24RemoteInterfacePresenter_invalidationHandler);
    *(_QWORD *)(v44 + OBJC_IVAR____TtC21ProximityReaderDaemon24RemoteInterfacePresenter_invalidationHandler) = v36;
    v38 = v36;

    v39 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB0AC8]), sel_init);
    objc_msgSend(v27, sel_activateWithContext_, v39);

    sub_244D65198(v19, v20);
  }
}

uint64_t sub_244DDE30C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v24)(void);
  char v25;
  id v26;
  void *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t (*v31)(void);
  char v32;
  id v33;
  void *v34;
  unsigned __int8 v35;
  uint64_t inited;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  void *v56;
  id v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  objc_class *v61;
  char *v62;
  uint64_t *v63;
  char *v64;
  uint64_t v65;
  id v66;
  void *v67;
  id v68;
  id v69;
  id v70;
  id v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  unint64_t v80;
  uint64_t v81;
  objc_super v82;
  uint64_t v83;
  uint64_t v84;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_244E4CA50();
  v77 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v79 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v78 = (char *)&v70 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v70 - v16;
  v18 = sub_244DDD9C4(0, 0, (uint64_t (*)(uint64_t))MEMORY[0x24BDE46A8], &qword_257418238, (unint64_t *)&unk_257418240, MEMORY[0x24BDE46B8]);
  if (v19 >> 60 == 15)
  {
    if (qword_257414440 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v8, (uint64_t)qword_257419EC0);
    sub_244D640E4(v20, (uint64_t)v10);
    v21 = sub_244E4DCD4();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v10, 1, v21) == 1)
    {
      return sub_244D6412C((uint64_t)v10);
    }
    else
    {
      v28 = sub_244E4DCBC();
      v29 = sub_244E4E67C();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_244D61000, v28, v29, "Unable to encode identity request", v30, 2u);
        MEMORY[0x2495283BC](v30, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v10, v21);
    }
  }
  else
  {
    v75 = a4;
    v76 = v4;
    v70 = a2;
    v80 = v19;
    v81 = v18;
    v24 = (uint64_t (*)(void))sub_244E4D86C();
    v25 = v24();
    swift_release();
    if ((v25 & 1) != 0)
    {
      v26 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      v27 = (void *)sub_244E4E2F8();
      v73 = objc_msgSend(v26, sel_BOOLForKey_, v27);

    }
    else
    {
      v73 = 0;
    }
    v31 = (uint64_t (*)(void))sub_244E4D86C();
    v32 = v31();
    swift_release();
    v74 = a3;
    if ((v32 & 1) != 0
      && (v33 = objc_msgSend((id)objc_opt_self(), (SEL)&selRef_updateAccountSubscription + 3),
          v34 = (void *)sub_244E4E2F8(),
          v35 = objc_msgSend(v33, (SEL)&stru_2515E6740.name, v34),
          v33,
          v34,
          (v35 & 1) != 0))
    {
      v72 = 60;
    }
    else
    {
      v72 = sub_244E4D8F0();
    }
    v71 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB0AD0]), sel_init);
    objc_msgSend(v71, sel_setXpcEndpoint_, objc_msgSend(v70, sel__endpoint));
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_257418230);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_244E54AC0;
    v37 = v77;
    v38 = *(void (**)(char *, _QWORD, uint64_t))(v77 + 104);
    v38(v17, *MEMORY[0x24BDE4178], v11);
    v39 = sub_244E4CA44();
    v41 = v40;
    v42 = *(void (**)(char *, uint64_t))(v37 + 8);
    v42(v17, v11);
    v83 = v39;
    v84 = v41;
    sub_244E4E868();
    *(_QWORD *)(inited + 96) = MEMORY[0x24BDCDDE8];
    v44 = v80;
    v43 = v81;
    *(_QWORD *)(inited + 72) = v81;
    *(_QWORD *)(inited + 80) = v44;
    v45 = v78;
    v38(v78, *MEMORY[0x24BDE4160], v11);
    sub_244D73FC0(v43, v44);
    v46 = sub_244E4CA44();
    v48 = v47;
    v42(v45, v11);
    v83 = v46;
    v84 = v48;
    sub_244E4E868();
    *(_QWORD *)(inited + 168) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 144) = v73;
    v49 = v79;
    v38(v79, *MEMORY[0x24BDE4168], v11);
    v50 = sub_244E4CA44();
    v52 = v51;
    v42(v49, v11);
    v83 = v50;
    v84 = v52;
    sub_244E4E868();
    *(_QWORD *)(inited + 240) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 216) = v72;
    v53 = inited;
    v54 = v71;
    sub_244DB2A7C(v53);
    v55 = (void *)sub_244E4E298();
    swift_bridgeObjectRelease();
    objc_msgSend(v54, sel_setUserInfo_, v55);

    v56 = (void *)objc_opt_self();
    if (qword_257414498 != -1)
      swift_once();
    v57 = objc_msgSend(v56, sel_newHandleWithDefinition_configurationContext_, qword_257419F10, v54);
    v58 = sub_244E4D848();
    v60 = v59;
    v61 = (objc_class *)type metadata accessor for RemoteAlertInvalidationHandler();
    v62 = (char *)objc_allocWithZone(v61);
    v63 = (uint64_t *)&v62[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName];
    *v63 = v58;
    v63[1] = v60;
    v64 = &v62[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_completion];
    v65 = v75;
    *(_QWORD *)v64 = v74;
    *((_QWORD *)v64 + 1) = v65;
    v82.receiver = v62;
    v82.super_class = v61;
    swift_retain();
    v66 = objc_msgSendSuper2(&v82, sel_init);
    objc_msgSend(v57, sel_registerObserver_, v66);
    v67 = *(void **)(v76 + OBJC_IVAR____TtC21ProximityReaderDaemon24RemoteInterfacePresenter_invalidationHandler);
    *(_QWORD *)(v76 + OBJC_IVAR____TtC21ProximityReaderDaemon24RemoteInterfacePresenter_invalidationHandler) = v66;
    v68 = v66;

    v69 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB0AC8]), sel_init);
    objc_msgSend(v69, sel_setShouldDismissPresentedBanners_, 1);
    objc_msgSend(v57, sel_activateWithContext_, v69);

    return sub_244D65198(v81, v80);
  }
}

id sub_244DDEA4C()
{
  return sub_244DDF124(type metadata accessor for RemoteInterfacePresenter);
}

uint64_t type metadata accessor for RemoteInterfacePresenter()
{
  return objc_opt_self();
}

uint64_t sub_244DDEA88(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v20;
  uint8_t *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414410 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E30);
  sub_244D640E4(v7, (uint64_t)v6);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    sub_244D6412C((uint64_t)v6);
  }
  else
  {
    v10 = v2;
    v11 = sub_244E4DCBC();
    v12 = sub_244E4E688();
    if (os_log_type_enabled(v11, v12))
    {
      v23 = a1;
      v13 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v25 = v22;
      *(_DWORD *)v13 = 136446210;
      v20 = v13 + 4;
      v21 = v13;
      v14 = *(_QWORD *)&v10[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName];
      v15 = *(_QWORD *)&v10[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName + 8];
      swift_bridgeObjectRetain();
      v16 = v14;
      a1 = v23;
      v24 = sub_244D9A70C(v16, v15, &v25);
      sub_244E4E7E4();

      swift_bridgeObjectRelease();
      v17 = v21;
      _os_log_impl(&dword_244D61000, v11, v12, "%{public}s remote alert did deactivate", v21, 0xCu);
      v18 = v22;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v18, -1, -1);
      MEMORY[0x2495283BC](v17, -1, -1);
    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(a1, sel_unregisterObserver_, v2);
  return (*(uint64_t (**)(_QWORD))&v2[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_completion])(0);
}

void sub_244DDED50(void *a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  char *v15;
  id v16;
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  unsigned int v31;
  uint64_t v32;
  _QWORD v33[2];
  os_log_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v9 = (void *)sub_244E4C1D4();
    objc_msgSend(a1, sel_unregisterObserver_, v3);
    if (qword_257414410 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E30);
    sub_244D640E4(v10, (uint64_t)v8);
    v11 = sub_244E4DCD4();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) == 1)
    {
      sub_244D6412C((uint64_t)v8);
    }
    else
    {
      v13 = v3;
      v14 = v9;
      v15 = v13;
      v16 = v14;
      v17 = sub_244E4DCBC();
      v18 = sub_244E4E688();
      v19 = v18;
      if (os_log_type_enabled(v17, v18))
      {
        v20 = swift_slowAlloc();
        v37 = v12;
        v21 = v20;
        v36 = swift_slowAlloc();
        v39 = v36;
        *(_DWORD *)v21 = 136446466;
        v35 = v19;
        v34 = v17;
        v23 = *(_QWORD *)&v15[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName];
        v22 = *(_QWORD *)&v15[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_handleName + 8];
        swift_bridgeObjectRetain();
        v38 = sub_244D9A70C(v23, v22, &v39);
        sub_244E4E7E4();

        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2082;
        v33[1] = v21 + 14;
        v24 = objc_msgSend(v16, sel_localizedDescription);
        v25 = sub_244E4E31C();
        v27 = v26;

        v38 = sub_244D9A70C(v25, v27, &v39);
        sub_244E4E7E4();

        swift_bridgeObjectRelease();
        v17 = v34;
        _os_log_impl(&dword_244D61000, v34, (os_log_type_t)v35, "%{public}s remote handle invalidated with error: %{public}s", (uint8_t *)v21, 0x16u);
        v28 = v36;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v28, -1, -1);
        v29 = v21;
        v12 = v37;
        MEMORY[0x2495283BC](v29, -1, -1);
      }
      else
      {

      }
      (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
    }
    v30 = objc_msgSend(v9, sel_code);
    if (v30 == (id)6)
      v31 = 1;
    else
      v31 = 2;
    if (v30 == (id)4)
      v32 = 0;
    else
      v32 = v31;
    (*(void (**)(uint64_t))&v3[OBJC_IVAR____TtC21ProximityReaderDaemon30RemoteAlertInvalidationHandler_completion])(v32);

  }
}

id sub_244DDF118()
{
  return sub_244DDF124(type metadata accessor for RemoteAlertInvalidationHandler);
}

id sub_244DDF124(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for RemoteAlertInvalidationHandler()
{
  return objc_opt_self();
}

uint64_t sub_244DDF1B4()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for RemoteScenePresenter();
  v0 = swift_allocObject();
  result = sub_244DE04B4();
  qword_257419F18 = v0;
  return result;
}

uint64_t sub_244DDF1EC(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  void *v38;
  uint64_t v39;
  unint64_t v41;
  unsigned __int8 (*v42)(void);
  uint64_t v43;
  id v44;
  void *v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  uint64_t inited;
  uint64_t v50;
  void (*v51)(_BYTE *, _QWORD, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(_BYTE *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  _BYTE *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  void *v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  unsigned int v85;
  uint64_t v86;
  unint64_t v87;
  _BYTE *v88;
  unsigned int v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  uint64_t v94;
  NSObject *v95;
  os_log_type_t v96;
  uint8_t *v97;
  _BYTE v98[12];
  unsigned int v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  _BYTE *v108;
  _BYTE *v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int (*v117)(_BYTE *, uint64_t, uint64_t);
  id v118[37];

  v114 = a2;
  v111 = a5;
  v112 = a6;
  v105 = a4;
  v110 = a3;
  v118[35] = *(id *)MEMORY[0x24BDAC8D0];
  v7 = sub_244E4CA50();
  v106 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v109 = &v98[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v108 = &v98[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v107 = &v98[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v98[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v98[-v17];
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = &v98[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = MEMORY[0x24BDAC7A8](v20);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v103 = &v98[-v25];
  v26 = MEMORY[0x24BDAC7A8](v24);
  v104 = &v98[-v27];
  MEMORY[0x24BDAC7A8](v26);
  v29 = &v98[-v28];
  if (qword_257414420 != -1)
    swift_once();
  v116 = __swift_project_value_buffer(v19, (uint64_t)qword_257419E60);
  sub_244D640E4(v116, (uint64_t)v29);
  v30 = sub_244E4DCD4();
  v31 = *(_QWORD *)(v30 - 8);
  v117 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48);
  if (v117(v29, 1, v30) == 1)
  {
    sub_244D6412C((uint64_t)v29);
  }
  else
  {
    sub_244D8C8B0(v115, 0xD00000000000006BLL, 0x8000000244E59FA0, 0, 0xE000000000000000);
    (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v29, v30);
  }
  v32 = (void *)objc_opt_self();
  v118[0] = 0;
  v33 = objc_msgSend(v32, sel_archivedDataWithRootObject_requiringSecureCoding_error_, a1, 1, v118);
  v34 = v118[0];
  if (v33)
  {
    v113 = sub_244E4C324();
    v36 = v35;

    sub_244E4C09C();
    swift_allocObject();
    sub_244E4C090();
    sub_244E4CAB0();
    sub_244D65324(&qword_257418338, (uint64_t (*)(uint64_t))MEMORY[0x24BDE4230], MEMORY[0x24BDE4240]);
    v101 = sub_244E4C084();
    v114 = v41;
    swift_release();
    v42 = (unsigned __int8 (*)(void))sub_244E4D86C();
    v43 = v42();
    swift_release();
    v102 = v36;
    v100 = v31;
    if ((v43 & 1) != 0)
    {
      v44 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      v45 = (void *)sub_244E4E2F8();
      v99 = objc_msgSend(v44, sel_BOOLForKey_, v45);

    }
    else
    {
      v99 = 0;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_244E55420;
    v50 = v106;
    v51 = *(void (**)(_BYTE *, _QWORD, uint64_t))(v106 + 104);
    v51(v18, *MEMORY[0x24BDE4170], v7);
    v52 = sub_244E4CA44();
    v54 = v53;
    v55 = *(void (**)(_BYTE *, uint64_t))(v50 + 8);
    v55(v18, v7);
    *(_QWORD *)(inited + 32) = v52;
    *(_QWORD *)(inited + 40) = v54;
    v56 = sub_244E4D1C4();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 48) = v56;
    v51(v16, *MEMORY[0x24BDE4148], v7);
    v57 = sub_244E4CA44();
    v59 = v58;
    v55(v16, v7);
    *(_QWORD *)(inited + 80) = v57;
    *(_QWORD *)(inited + 88) = v59;
    v60 = MEMORY[0x24BDCDDE8];
    *(_QWORD *)(inited + 120) = MEMORY[0x24BDCDDE8];
    v61 = v113;
    v62 = v102;
    *(_QWORD *)(inited + 96) = v113;
    *(_QWORD *)(inited + 104) = v62;
    v63 = v107;
    v51(v107, *MEMORY[0x24BDE4180], v7);
    sub_244D73FC0(v61, v62);
    v64 = sub_244E4CA44();
    v66 = v65;
    v55(v63, v7);
    *(_QWORD *)(inited + 128) = v64;
    *(_QWORD *)(inited + 136) = v66;
    *(_QWORD *)(inited + 168) = v60;
    v67 = v101;
    v68 = v114;
    *(_QWORD *)(inited + 144) = v101;
    *(_QWORD *)(inited + 152) = v68;
    v69 = v108;
    v51(v108, *MEMORY[0x24BDE4158], v7);
    sub_244D73FC0(v67, v68);
    v70 = sub_244E4CA44();
    v72 = v71;
    v55(v69, v7);
    *(_QWORD *)(inited + 176) = v70;
    *(_QWORD *)(inited + 184) = v72;
    v73 = MEMORY[0x24BEE1328];
    *(_QWORD *)(inited + 216) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 192) = v110 & 1;
    v74 = v109;
    v51(v109, *MEMORY[0x24BDE4160], v7);
    v75 = sub_244E4CA44();
    v77 = v76;
    v55(v74, v7);
    *(_QWORD *)(inited + 224) = v75;
    *(_QWORD *)(inited + 232) = v77;
    *(_QWORD *)(inited + 264) = v73;
    *(_BYTE *)(inited + 240) = v99;
    v78 = sub_244DB2520(inited);
    v79 = *(void **)(v115 + 24);
    type metadata accessor for RemoteSceneUIHandle();
    swift_allocObject();
    v80 = v79;
    v81 = v112;
    swift_retain();
    v82 = sub_244DD442C(v80, v111, v81);
    if (v82)
    {
      v83 = v82;
      v84 = v104;
      sub_244D640E4(v116, (uint64_t)v104);
      v85 = v117(v84, 1, v30);
      v86 = v100;
      if (v85 == 1)
      {
        sub_244D6412C((uint64_t)v84);
      }
      else
      {
        v91 = sub_244E4DCBC();
        v92 = sub_244E4E67C();
        if (os_log_type_enabled(v91, v92))
        {
          v93 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v93 = 0;
          _os_log_impl(&dword_244D61000, v91, v92, "opening remote scene UI", v93, 2u);
          MEMORY[0x2495283BC](v93, -1, -1);
        }

        (*(void (**)(_BYTE *, uint64_t))(v86 + 8))(v84, v30);
      }
      v94 = sub_244DBDA4C(v78);
      swift_bridgeObjectRelease();
      sub_244DD5368(v94, v105);
      sub_244D651AC(v113, v102);
      sub_244D651AC(v101, v114);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v115 + 16) = v83;
      return swift_release();
    }
    v87 = v102;
    swift_bridgeObjectRelease();
    v88 = v103;
    sub_244D640E4(v116, (uint64_t)v103);
    v89 = v117(v88, 1, v30);
    v90 = v100;
    if (v89 == 1)
    {
      sub_244D651AC(v113, v87);
      sub_244D651AC(v101, v114);
      v39 = (uint64_t)v88;
      return sub_244D6412C(v39);
    }
    v95 = sub_244E4DCBC();
    v96 = sub_244E4E67C();
    if (os_log_type_enabled(v95, v96))
    {
      v97 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v97 = 0;
      _os_log_impl(&dword_244D61000, v95, v96, "Unable to create ui service", v97, 2u);
      MEMORY[0x2495283BC](v97, -1, -1);
    }
    sub_244D651AC(v113, v87);
    sub_244D651AC(v101, v114);

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v90 + 8))(v88, v30);
  }
  else
  {
    v37 = v34;
    v38 = (void *)sub_244E4C1E0();

    swift_willThrow();
    sub_244D640E4(v116, (uint64_t)v22);
    if (v117(v22, 1, v30) == 1)
    {
      v39 = (uint64_t)v22;
      return sub_244D6412C(v39);
    }
    v46 = sub_244E4DCBC();
    v47 = sub_244E4E67C();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v48 = 0;
      _os_log_impl(&dword_244D61000, v46, v47, "Unable to encode transaction request", v48, 2u);
      MEMORY[0x2495283BC](v48, -1, -1);
    }

    return (*(uint64_t (**)(_BYTE *, uint64_t))(v31 + 8))(v22, v30);
  }
}

uint64_t sub_244DDFBB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t (*v32)(void);
  char v33;
  id v34;
  void *v35;
  unsigned int v36;
  void *v37;
  id v38;
  id v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t inited;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  NSObject *v92;
  os_log_type_t v93;
  uint8_t *v94;
  uint64_t v95;
  NSObject *v96;
  os_log_type_t v97;
  uint8_t *v98;
  NSObject *v99;
  os_log_type_t v100;
  uint8_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  int v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  id v122[37];

  v115 = a6;
  v116 = a7;
  v107 = a5;
  v114 = a4;
  v117 = a3;
  v122[35] = *(id *)MEMORY[0x24BDAC8D0];
  v9 = sub_244E4CA50();
  v108 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v113 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v111 = (char *)&v102 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v110 = (char *)&v102 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v109 = (char *)&v102 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v102 - v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v105 = (uint64_t)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v103 = (uint64_t)&v102 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v106 = (uint64_t)&v102 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v102 - v27;
  if (qword_257414420 != -1)
    swift_once();
  v112 = __swift_project_value_buffer(v20, (uint64_t)qword_257419E60);
  sub_244D640E4(v112, (uint64_t)v28);
  v29 = sub_244E4DCD4();
  v30 = *(_QWORD *)(v29 - 8);
  v118 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v31 = v118(v28, 1, v29);
  v119 = v30;
  v120 = v29;
  if (v31 == 1)
  {
    sub_244D6412C((uint64_t)v28);
  }
  else
  {
    sub_244D8C8B0(v121, 0xD000000000000069, 0x8000000244E59F30, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v28, v29);
  }
  v32 = (uint64_t (*)(void))sub_244E4D86C();
  v33 = v32();
  swift_release();
  if ((v33 & 1) != 0)
  {
    v34 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v35 = (void *)sub_244E4E2F8();
    v36 = objc_msgSend(v34, sel_BOOLForKey_, v35);

  }
  else
  {
    v36 = 0;
  }
  v37 = (void *)objc_opt_self();
  v122[0] = 0;
  v38 = objc_msgSend(v37, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v117, 1, v122);
  v39 = v122[0];
  if (v38)
  {
    v117 = sub_244E4C324();
    v104 = a1;
    v40 = a2;
    v42 = v41;

    __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_244E55420;
    v44 = *MEMORY[0x24BDE4170];
    v45 = v108;
    LODWORD(v105) = v36;
    v46 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 104);
    v46(v19, v44, v9);
    v47 = sub_244E4CA44();
    v49 = v48;
    v50 = *(void (**)(char *, uint64_t))(v45 + 8);
    v50(v19, v9);
    *(_QWORD *)(inited + 32) = v47;
    *(_QWORD *)(inited + 40) = v49;
    v51 = sub_244E4D1C4();
    *(_QWORD *)(inited + 72) = MEMORY[0x24BEE1768];
    *(_QWORD *)(inited + 48) = v51;
    v52 = v109;
    v46(v109, *MEMORY[0x24BDE4188], v9);
    v53 = sub_244E4CA44();
    v55 = v54;
    v50(v52, v9);
    *(_QWORD *)(inited + 80) = v53;
    *(_QWORD *)(inited + 88) = v55;
    *(_QWORD *)(inited + 120) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(inited + 96) = v104;
    *(_QWORD *)(inited + 104) = v40;
    v56 = (unint64_t)v110;
    v46(v110, *MEMORY[0x24BDE4198], v9);
    swift_bridgeObjectRetain();
    v57 = sub_244E4CA44();
    v59 = v58;
    v50((char *)v56, v9);
    *(_QWORD *)(inited + 128) = v57;
    *(_QWORD *)(inited + 136) = v59;
    *(_QWORD *)(inited + 168) = MEMORY[0x24BDCDDE8];
    v60 = v117;
    *(_QWORD *)(inited + 144) = v117;
    *(_QWORD *)(inited + 152) = v42;
    v61 = v111;
    v46(v111, *MEMORY[0x24BDE4158], v9);
    v110 = (char *)v42;
    sub_244D73FC0(v60, v42);
    v62 = sub_244E4CA44();
    v64 = v63;
    v50(v61, v9);
    *(_QWORD *)(inited + 176) = v62;
    *(_QWORD *)(inited + 184) = v64;
    v65 = MEMORY[0x24BEE1328];
    *(_QWORD *)(inited + 216) = MEMORY[0x24BEE1328];
    *(_BYTE *)(inited + 192) = v114 & 1;
    v66 = v113;
    v46(v113, *MEMORY[0x24BDE4160], v9);
    v67 = sub_244E4CA44();
    v69 = v68;
    v50(v66, v9);
    *(_QWORD *)(inited + 224) = v67;
    *(_QWORD *)(inited + 232) = v69;
    *(_QWORD *)(inited + 264) = v65;
    *(_BYTE *)(inited + 240) = v105;
    v70 = sub_244DB2520(inited);
    v71 = *(void **)(v121 + 24);
    type metadata accessor for RemoteSceneUIHandle();
    swift_allocObject();
    v72 = v71;
    v73 = v116;
    swift_retain();
    v74 = sub_244DD442C(v72, v115, v73);
    if (v74)
    {
      v75 = v74;
      v76 = v106;
      sub_244D640E4(v112, v106);
      v77 = v120;
      v78 = v118((char *)v76, 1, v120);
      v79 = v119;
      if (v78 == 1)
      {
        sub_244D6412C(v76);
      }
      else
      {
        v92 = sub_244E4DCBC();
        v93 = sub_244E4E67C();
        if (os_log_type_enabled(v92, v93))
        {
          v94 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v94 = 0;
          _os_log_impl(&dword_244D61000, v92, v93, "opening remote scene UI", v94, 2u);
          MEMORY[0x2495283BC](v94, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v76, v77);
      }
      v95 = sub_244DBDA4C(v70);
      swift_bridgeObjectRelease();
      sub_244DD5368(v95, v107);
      sub_244D651AC(v117, (unint64_t)v110);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v121 + 16) = v75;
      return swift_release();
    }
    swift_bridgeObjectRelease();
    v87 = v103;
    sub_244D640E4(v112, v103);
    v88 = v120;
    v89 = v118((char *)v87, 1, v120);
    v90 = v119;
    if (v89 == 1)
    {
      sub_244D651AC(v117, (unint64_t)v110);
      v86 = v87;
      return sub_244D6412C(v86);
    }
    v99 = sub_244E4DCBC();
    v100 = sub_244E4E67C();
    if (os_log_type_enabled(v99, v100))
    {
      v101 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v101 = 0;
      _os_log_impl(&dword_244D61000, v99, v100, "Unable to create ui service", v101, 2u);
      MEMORY[0x2495283BC](v101, -1, -1);
    }
    sub_244D651AC(v117, (unint64_t)v110);

    return (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v87, v88);
  }
  else
  {
    v80 = v39;
    v81 = (void *)sub_244E4C1E0();

    swift_willThrow();
    v82 = v119;
    if (qword_2574143E8 != -1)
      swift_once();
    v83 = __swift_project_value_buffer(v20, (uint64_t)qword_257419DB8);
    v84 = v105;
    sub_244D640E4(v83, v105);
    v85 = v120;
    if (v118((char *)v84, 1, v120) == 1)
    {
      v86 = v84;
      return sub_244D6412C(v86);
    }
    v96 = sub_244E4DCBC();
    v97 = sub_244E4E67C();
    if (os_log_type_enabled(v96, v97))
    {
      v98 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v98 = 0;
      _os_log_impl(&dword_244D61000, v96, v97, "Unable to encode pin configuration", v98, 2u);
      MEMORY[0x2495283BC](v98, -1, -1);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 8))(v84, v85);
  }
}

uint64_t sub_244DE0468()
{
  uint64_t v0;

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteScenePresenter()
{
  return objc_opt_self();
}

uint64_t sub_244DE04B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  _QWORD v9[2];

  v1 = sub_244E4E6C4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_244E4E6A0();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v5);
  v7 = sub_244E4E1E4();
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)(v0 + 16) = 0;
  sub_244D9003C();
  sub_244E4E1D8();
  v9[1] = MEMORY[0x24BEE4AF8];
  sub_244D65324((unint64_t *)&qword_2574160B8, v6, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574160C0);
  sub_244D900C0();
  sub_244E4E838();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x24BEE5758], v1);
  *(_QWORD *)(v0 + 24) = sub_244E4E6DC();
  return v0;
}

BOOL sub_244DE0668(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v26;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - v8;
  sub_244DE0930(a1, a2, 0x64697074666173, 0xE700000000000000, "Could not retrieve SAF tpid from token: [ %s ]");
  v11 = v10;
  swift_bridgeObjectRelease();
  if (v11)
  {
    if (qword_257414428 != -1)
      swift_once();
    v12 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E78);
    sub_244D640E4(v12, (uint64_t)v9);
    v13 = sub_244E4DCD4();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
    {
      v15 = (uint64_t)v9;
LABEL_10:
      sub_244D6412C(v15);
      return v11 != 0;
    }
    v19 = sub_244E4DCBC();
    v20 = sub_244E4E688();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl(&dword_244D61000, v19, v20, "Store and forward is supported", v21, 2u);
      MEMORY[0x2495283BC](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
  }
  else
  {
    if (qword_257414428 != -1)
      swift_once();
    v16 = __swift_project_value_buffer(v4, (uint64_t)qword_257419E78);
    sub_244D640E4(v16, (uint64_t)v7);
    v17 = sub_244E4DCD4();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v7, 1, v17) == 1)
    {
      v15 = (uint64_t)v7;
      goto LABEL_10;
    }
    v22 = sub_244E4DCBC();
    v23 = sub_244E4E67C();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_244D61000, v22, v23, "Store and forward is not supported in the provided token", v24, 2u);
      MEMORY[0x2495283BC](v24, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v17);
  }
  return v11 != 0;
}

uint64_t sub_244DE0918(uint64_t a1, uint64_t a2)
{
  return sub_244DE0930(a1, a2, 6580589, 0xE300000000000000, "Could not retrieve merchant ID from token: [ %s ]");
}

uint64_t sub_244DE0930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v21[2];
  const char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4DAD0();
  if (!v25)
    goto LABEL_6;
  result = v24;
  v10 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0)
    v10 = v24 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    if (qword_257414428 != -1)
      swift_once();
    v11 = __swift_project_value_buffer(v6, (uint64_t)qword_257419E78);
    sub_244D640E4(v11, (uint64_t)v8);
    v12 = sub_244E4DCD4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    {
      sub_244D6412C((uint64_t)v8);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v14 = sub_244E4DCBC();
      v15 = sub_244E4E67C();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v17 = swift_slowAlloc();
        v22 = a5;
        v18 = v17;
        v24 = v17;
        *(_DWORD *)v16 = 136315138;
        v21[1] = v16 + 4;
        v19 = sub_244E4DAB8();
        v23 = sub_244D9A70C(v19, v20, &v24);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_244D61000, v14, v15, v22, v16, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v18, -1, -1);
        MEMORY[0x2495283BC](v16, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
    return 0;
  }
  return result;
}

uint64_t sub_244DE0BC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  __int128 v9[3];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_244DE769C((__int128 *)a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v3;
    *v3 = 0x8000000000000000;
    sub_244DE4948(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_244D66F54(a1, &qword_257418418);
    sub_244DE138C(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_244D66F54((uint64_t)v9, &qword_257418418);
  }
}

uint64_t sub_244DE0C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t State;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257417630);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  MEMORY[0x24BDAC7A8](State);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_244D66F54(a1, &qword_257417630);
    sub_244DE164C(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_244D66F54((uint64_t)v10, &qword_257417630);
  }
  else
  {
    sub_244DE7ACC(a1, (uint64_t)v13);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_244DE4D40((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_244DE0DF4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  char *v19;
  char v20;
  uint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *);
  uint64_t v34;
  char *v35;
  uint64_t v36;

  v4 = v3;
  v33 = a1;
  v34 = a2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_244E4C2AC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v31 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x24BDAC7A8](v11);
  v35 = (char *)&v26 - v14;
  v36 = MEMORY[0x24BEE4AF8];
  v32 = *(_QWORD *)(a3 + 16);
  if (v32)
  {
    v15 = 0;
    v30 = a3;
    while (v15 < *(_QWORD *)(a3 + 16))
    {
      v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v17 = *(_QWORD *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9);
      v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v29(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
        goto LABEL_17;
      v18 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v19 = v35;
      v18(v35, v8, v9);
      v20 = v33(v19);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
        swift_bridgeObjectRelease();
        return swift_release();
      }
      if ((v20 & 1) != 0)
      {
        v18(v31, v35, v9);
        v21 = v36;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v28 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_244DA9728(0, *(_QWORD *)(v21 + 16) + 1, 1);
          v21 = v36;
        }
        v24 = *(_QWORD *)(v21 + 16);
        v23 = *(_QWORD *)(v21 + 24);
        v25 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          v27 = v24 + 1;
          sub_244DA9728(v23 > 1, v24 + 1, 1);
          v25 = v27;
          v21 = v36;
        }
        *(_QWORD *)(v21 + 16) = v25;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v18)(v21 + v16 + v24 * v17, v31, v9);
        v36 = v21;
        v4 = v28;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v35, v9);
      }
      a3 = v30;
      if (v32 == ++v15)
      {
        v29(v8, 1, 1, v9);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_244D66F54((uint64_t)v8, &qword_257414B00);
    return v36;
  }
  return result;
}

uint64_t sub_244DE10C0()
{
  qword_257418358 = sub_244E4CA20();
  unk_257418360 = MEMORY[0x24BDE4108];
  __swift_allocate_boxed_opaque_existential_1(qword_257418340);
  return sub_244E4CA14();
}

void sub_244DE10FC()
{
  off_257418368 = (_UNKNOWN *)MEMORY[0x24BEE4B00];
}

uint64_t sub_244DE1110()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257418428);
  result = swift_allocObject();
  *(_DWORD *)(result + 16) = 0;
  qword_257418370 = result;
  return result;
}

BOOL sub_244DE1144(uint64_t (*a1)(char *), _BOOL8 a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  int v16;
  BOOL v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char v21;
  char v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v25[2];
  int v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  _BOOL8 v30;
  uint64_t (*v31)(char *);
  uint64_t v32;

  v4 = v3;
  v30 = a2;
  v31 = a1;
  v32 = sub_244E4C2AC();
  v6 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 16);
  if (v12)
  {
    v13 = a3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v27 = *(_QWORD *)(v6 + 72);
    v28 = v8;
    v29 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v25[1] = a3;
    swift_bridgeObjectRetain();
    while (1)
    {
      v14 = v32;
      v29(v11, v13, v32);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
      v15(v11, 0, 1, v14);
      v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v14);
      v17 = v16 != 1;
      if (v16 == 1)
        break;
      v26 = 1;
      v18 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v19 = v6;
      v20 = v28;
      v18(v28, v11, v14);
      v17 = v30;
      v21 = v31(v20);
      if (v4)
      {
        (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
        swift_bridgeObjectRelease();
        return v17;
      }
      v22 = v21;
      v23 = v15;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v14);
      if ((v22 & 1) != 0)
      {
        v17 = v26;
        break;
      }
      v13 += v27;
      --v12;
      v4 = 0;
      v6 = v19;
      if (!v12)
        goto LABEL_9;
    }
  }
  else
  {
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
LABEL_9:
    v23(v11, 1, 1, v32);
    v17 = 0;
  }
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t type metadata accessor for SessionManager()
{
  return objc_opt_self();
}

double sub_244DE138C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_244DC859C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_244DE559C();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_244DE769C((__int128 *)(*(_QWORD *)(v11 + 56) + 48 * v8), a3);
    sub_244DE3E7C(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

uint64_t sub_244DE1484(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_244DC859C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_244DE5990();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_244DE4064(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_244DE1550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  _QWORD v13[37];

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_244DC859C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13[0] = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_244DE5B44();
      v11 = v13[0];
    }
    swift_bridgeObjectRelease();
    memmove(a3, (const void *)(*(_QWORD *)(v11 + 56) + 296 * v8), 0x128uLL);
    sub_244DE4238(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return nullsub_1(a3);
  }
  else
  {
    sub_244D7EB08((uint64_t)v13);
    return sub_244D7EB38((uint64_t)v13, (uint64_t)a3);
  }
}

uint64_t sub_244DE164C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t State;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_244DC859C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_244DE5D3C();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
    v14 = *(_QWORD *)(State - 8);
    sub_244DE7ACC(v12 + *(_QWORD *)(v14 + 72) * v8, a3);
    sub_244DE4418(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, State);
  }
  else
  {
    v16 = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

uint64_t sub_244DE1774(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_244DC859C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_244DE6618();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 16 * v6);
  sub_244DE4614(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_244DE1858(uint64_t a1, char a2)
{
  return sub_244DE1BB4(a1, a2, (uint64_t *)&unk_257418440, (void (*)(uint64_t, _BYTE *))sub_244D6B058, (void (*)(uint64_t, _BYTE *))sub_244D66F18);
}

uint64_t sub_244DE1874(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;
  __int128 v38[3];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418420);
  v37 = a2;
  v6 = sub_244E4E97C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      v13 = v18 + 1;
      if (v18 + 1 >= v35)
        goto LABEL_34;
      v20 = *(_QWORD *)(v36 + 8 * v13);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v13 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v13 >= v35)
              goto LABEL_34;
            v20 = *(_QWORD *)(v36 + 8 * v13);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v13 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    v22 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v24 = *v22;
    v23 = v22[1];
    v25 = (__int128 *)(*(_QWORD *)(v5 + 56) + 48 * v17);
    if ((v37 & 1) != 0)
    {
      sub_244DE769C(v25, v38);
    }
    else
    {
      sub_244DE76B4((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v26 = -1 << *(_BYTE *)(v7 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v29 = 0;
      v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v31 = v28 == v30;
        if (v28 == v30)
          v28 = 0;
        v29 |= v31;
        v32 = *(_QWORD *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v24;
    v15[1] = v23;
    result = (uint64_t)sub_244DE769C(v38, (_OWORD *)(*(_QWORD *)(v7 + 56) + 48 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v19 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_244DE1B98(uint64_t a1, char a2)
{
  return sub_244DE1BB4(a1, a2, (uint64_t *)&unk_257418430, (void (*)(uint64_t, _BYTE *))sub_244D6B058, (void (*)(uint64_t, _BYTE *))sub_244D66F18);
}

uint64_t sub_244DE1BB4(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, _BYTE *), void (*a5)(uint64_t, _BYTE *))
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  uint64_t v40;
  char v42;
  _BYTE v43[32];

  v7 = v5;
  v9 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v42 = a2;
  v10 = sub_244E4E97C();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v40 = v9 + 64;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  else
    v13 = -1;
  v14 = v13 & *(_QWORD *)(v9 + 64);
  v38 = v5;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v15 = v10 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = (_QWORD *)(v9 + 64);
    v24 = *(_QWORD *)(v40 + 8 * v22);
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = *(_QWORD *)(v40 + 8 * v17);
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v7 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = *(_QWORD *)(v40 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v39)
              goto LABEL_34;
            v24 = *(_QWORD *)(v40 + 8 * v17);
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v9 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v9 + 56) + 32 * v21;
    if ((v42 & 1) != 0)
    {
      a4(v29, v43);
    }
    else
    {
      a5(v29, v43);
      swift_bridgeObjectRetain();
    }
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v30 = -1 << *(_BYTE *)(v11 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v15 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v15 + 8 * v32);
      }
      while (v36 == -1);
      v18 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v11 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = ((uint64_t (*)(_BYTE *, unint64_t))a4)(v43, *(_QWORD *)(v11 + 56) + 32 * v18);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v7 = v38;
  v23 = (_QWORD *)(v9 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v37 = 1 << *(_BYTE *)(v9 + 32);
  if (v37 >= 64)
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v37;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v7 = v11;
  return result;
}

uint64_t sub_244DE1EDC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418468);
  v36 = a2;
  v6 = sub_244E4E97C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_244DE21F0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  unint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t i;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD __dst[38];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257418470);
  v44 = a2;
  v6 = sub_244E4E97C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v42 = (_QWORD *)(v5 + 64);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v40 = v2;
  v41 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  for (i = v5; ; v5 = i)
  {
    if (v10)
    {
      v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v18 = v17 | (v13 << 6);
      if ((v44 & 1) != 0)
        goto LABEL_10;
      goto LABEL_23;
    }
    v27 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v27 >= v41)
      break;
    v28 = v42;
    v29 = v42[v27];
    ++v13;
    if (!v29)
    {
      v13 = v27 + 1;
      if (v27 + 1 >= v41)
        goto LABEL_33;
      v29 = v42[v13];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v41)
        {
LABEL_33:
          swift_release();
          v3 = v40;
          if ((v44 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v29 = v42[v30];
        if (!v29)
        {
          while (1)
          {
            v13 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_42;
            if (v13 >= v41)
              goto LABEL_33;
            v29 = v42[v13];
            ++v30;
            if (v29)
              goto LABEL_22;
          }
        }
        v13 = v30;
      }
    }
LABEL_22:
    v10 = (v29 - 1) & v29;
    v18 = __clz(__rbit64(v29)) + (v13 << 6);
    if ((v44 & 1) != 0)
    {
LABEL_10:
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
      v20 = *v19;
      v21 = v19[1];
      v22 = *(_QWORD *)(v5 + 56) + 296 * v18;
      v24 = *(_QWORD *)v22;
      v23 = *(_QWORD *)(v22 + 8);
      v25 = *(_QWORD *)(v22 + 24);
      v45 = *(_QWORD *)(v22 + 40);
      v46 = *(_QWORD *)(v22 + 16);
      v47 = *(_QWORD *)(v22 + 56);
      v48 = *(_QWORD *)(v22 + 32);
      v49 = *(_QWORD *)(v22 + 72);
      v50 = *(_QWORD *)(v22 + 48);
      v51 = *(_QWORD *)(v22 + 88);
      v52 = *(_QWORD *)(v22 + 64);
      v53 = *(_QWORD *)(v22 + 104);
      v54 = *(_QWORD *)(v22 + 80);
      v55 = *(_QWORD *)(v22 + 120);
      v56 = *(_QWORD *)(v22 + 96);
      v57 = *(_QWORD *)(v22 + 136);
      v58 = *(_QWORD *)(v22 + 112);
      v59 = *(_QWORD *)(v22 + 152);
      v60 = *(_QWORD *)(v22 + 128);
      v62 = *(_BYTE *)(v22 + 160);
      v63 = *(_QWORD *)(v22 + 144);
      v64 = *(_QWORD *)(v22 + 168);
      v61 = *(_QWORD *)(v22 + 176);
      v26 = *(_QWORD *)(v22 + 184);
      v65 = *(_BYTE *)(v22 + 192);
      v66 = *(_BYTE *)(v22 + 193);
      v68 = *(_BYTE *)(v22 + 194);
      v67 = *(_QWORD *)(v22 + 208);
      v69 = *(_QWORD *)(v22 + 224);
      v70 = *(_QWORD *)(v22 + 200);
      v71 = *(_QWORD *)(v22 + 240);
      v72 = *(_QWORD *)(v22 + 216);
      v73 = *(_QWORD *)(v22 + 256);
      v74 = *(_QWORD *)(v22 + 232);
      v75 = *(_QWORD *)(v22 + 272);
      v76 = *(_QWORD *)(v22 + 248);
      v78 = *(_QWORD *)(v22 + 264);
      v79 = *(_QWORD *)(v22 + 280);
      v77 = *(_QWORD *)(v22 + 288);
      goto LABEL_24;
    }
LABEL_23:
    v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v18);
    v20 = *v31;
    v21 = v31[1];
    memcpy(__dst, (const void *)(*(_QWORD *)(v5 + 56) + 296 * v18), 0x128uLL);
    v78 = __dst[33];
    v79 = __dst[35];
    v76 = __dst[31];
    v77 = __dst[36];
    v74 = __dst[29];
    v75 = __dst[34];
    v72 = __dst[27];
    v73 = __dst[32];
    v69 = __dst[28];
    v70 = __dst[25];
    v71 = __dst[30];
    v67 = __dst[26];
    v68 = BYTE2(__dst[24]);
    v65 = __dst[24];
    v66 = BYTE1(__dst[24]);
    v26 = __dst[23];
    v62 = __dst[20];
    v63 = __dst[18];
    v64 = __dst[21];
    v60 = __dst[16];
    v61 = __dst[22];
    v58 = __dst[14];
    v59 = __dst[19];
    v56 = __dst[12];
    v57 = __dst[17];
    v54 = __dst[10];
    v55 = __dst[15];
    v52 = __dst[8];
    v53 = __dst[13];
    v50 = __dst[6];
    v51 = __dst[11];
    v25 = __dst[3];
    v48 = __dst[4];
    v49 = __dst[9];
    v45 = __dst[5];
    v23 = __dst[1];
    v46 = __dst[2];
    v47 = __dst[7];
    v24 = __dst[0];
    swift_bridgeObjectRetain();
    sub_244D7E504((uint64_t)__dst);
LABEL_24:
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v32 = -1 << *(_BYTE *)(v7 + 32);
    v33 = result & ~v32;
    v34 = v33 >> 6;
    if (((-1 << v33) & ~*(_QWORD *)(v11 + 8 * (v33 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v33) & ~*(_QWORD *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v35 = 0;
      v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v37 = v34 == v36;
        if (v34 == v36)
          v34 = 0;
        v35 |= v37;
        v38 = *(_QWORD *)(v11 + 8 * v34);
      }
      while (v38 == -1);
      v14 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
    *v15 = v20;
    v15[1] = v21;
    v16 = *(_QWORD *)(v7 + 56) + 296 * v14;
    *(_QWORD *)v16 = v24;
    *(_QWORD *)(v16 + 8) = v23;
    *(_QWORD *)(v16 + 16) = v46;
    *(_QWORD *)(v16 + 24) = v25;
    *(_QWORD *)(v16 + 32) = v48;
    *(_QWORD *)(v16 + 40) = v45;
    *(_QWORD *)(v16 + 48) = v50;
    *(_QWORD *)(v16 + 56) = v47;
    *(_QWORD *)(v16 + 64) = v52;
    *(_QWORD *)(v16 + 72) = v49;
    *(_QWORD *)(v16 + 80) = v54;
    *(_QWORD *)(v16 + 88) = v51;
    *(_QWORD *)(v16 + 96) = v56;
    *(_QWORD *)(v16 + 104) = v53;
    *(_QWORD *)(v16 + 112) = v58;
    *(_QWORD *)(v16 + 120) = v55;
    *(_QWORD *)(v16 + 128) = v60;
    *(_QWORD *)(v16 + 136) = v57;
    *(_QWORD *)(v16 + 144) = v63;
    *(_QWORD *)(v16 + 152) = v59;
    *(_BYTE *)(v16 + 160) = v62;
    *(_QWORD *)(v16 + 168) = v64;
    *(_QWORD *)(v16 + 176) = v61;
    *(_BYTE *)(v16 + 192) = v65;
    *(_BYTE *)(v16 + 193) = v66;
    *(_BYTE *)(v16 + 194) = v68;
    *(_QWORD *)(v16 + 200) = v70;
    *(_QWORD *)(v16 + 208) = v67;
    *(_QWORD *)(v16 + 216) = v72;
    *(_QWORD *)(v16 + 224) = v69;
    *(_QWORD *)(v16 + 232) = v74;
    *(_QWORD *)(v16 + 240) = v71;
    *(_QWORD *)(v16 + 248) = v76;
    *(_QWORD *)(v16 + 256) = v73;
    *(_QWORD *)(v16 + 264) = v78;
    *(_QWORD *)(v16 + 272) = v75;
    *(_QWORD *)(v16 + 280) = v79;
    *(_QWORD *)(v16 + 288) = v77;
    *(_QWORD *)(v16 + 184) = v26;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v40;
  v28 = v42;
  if ((v44 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v39 = 1 << *(_BYTE *)(v5 + 32);
  if (v39 >= 64)
    bzero(v28, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v39;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_244DE27E4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t State;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  v42 = *(_QWORD *)(State - 8);
  MEMORY[0x24BDAC7A8](State);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418460);
  v43 = a2;
  v9 = sub_244E4E97C();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_244DE7ACC(v30, (uint64_t)v7);
    }
    else
    {
      sub_244DE7B54(v30, (uint64_t)v7);
      swift_bridgeObjectRetain();
    }
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_244DE7ACC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_244DE2B4C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418490);
  v38 = a2;
  v6 = sub_244E4E97C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v19) = v39;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_244DE2E58(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418498);
  v36 = a2;
  v6 = sub_244E4E97C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_244DE316C(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  int64_t v35;
  uint64_t v36;
  char v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F88);
  v37 = a2;
  v6 = sub_244E4E97C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = v2;
  v35 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v35)
        goto LABEL_33;
      v23 = *(_QWORD *)(v36 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          v3 = v34;
          if ((v37 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v35)
              goto LABEL_33;
            v23 = *(_QWORD *)(v36 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v34;
  v22 = (_QWORD *)(v5 + 64);
  if ((v37 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_244DE3474(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  char v38;
  __int128 v39;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257418480);
  v38 = a2;
  v6 = sub_244E4E97C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v36 = v2;
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v11)
        goto LABEL_33;
      v25 = *(_QWORD *)(v37 + 8 * v14);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          v3 = v36;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v14 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v14 >= v11)
              goto LABEL_33;
            v25 = *(_QWORD *)(v37 + 8 * v14);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v14 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v39 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v31);
    if ((v38 & 1) == 0)
      swift_bridgeObjectRetain();
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v15 = -1 << *(_BYTE *)(v7 + 32);
    v16 = result & ~v15;
    v17 = v16 >> 6;
    if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v17 == v28;
        if (v17 == v28)
          v17 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = 16 * v18;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v19);
    *v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(_QWORD *)(v7 + 56) + v19) = v39;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v36;
  v24 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v35 = 1 << *(_BYTE *)(v5 + 32);
  if (v35 >= 64)
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v35;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_244DE3780(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F10);
  v42 = a2;
  v6 = sub_244E4E97C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_244DE3AA4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  int64_t v42;
  _QWORD *v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F90);
  v45 = a2;
  v54 = sub_244E4E97C();
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v6 = 1 << *(_BYTE *)(v5 + 32);
  v43 = (_QWORD *)(v5 + 64);
  if (v6 < 64)
    v7 = ~(-1 << v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v5 + 64);
  v41 = v2;
  v42 = (unint64_t)(v6 + 63) >> 6;
  v9 = v54 + 64;
  result = swift_retain();
  v11 = 0;
  v44 = v5;
  while (1)
  {
    if (v8)
    {
      v46 = (v8 - 1) & v8;
      v47 = v11;
      v20 = __clz(__rbit64(v8)) | (v11 << 6);
      goto LABEL_31;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42)
      break;
    v22 = v43;
    v23 = v43[v21];
    v24 = v11 + 1;
    if (!v23)
    {
      v24 = v11 + 2;
      if (v11 + 2 >= v42)
        goto LABEL_33;
      v23 = v43[v24];
      if (!v23)
      {
        v25 = v11 + 3;
        if (v11 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          v3 = v41;
          if ((v45 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            v24 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_42;
            if (v24 >= v42)
              goto LABEL_33;
            v23 = v43[v24];
            ++v25;
            if (v23)
              goto LABEL_30;
          }
        }
        v24 = v11 + 3;
      }
    }
LABEL_30:
    v46 = (v23 - 1) & v23;
    v47 = v24;
    v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    v30 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v30;
    v32 = v30[1];
    v33 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 96 * v20);
    v34 = v33[1];
    v35 = v33[3];
    v36 = v33[5];
    v52 = v33[4];
    v53 = v33[2];
    v37 = v33[7];
    v38 = v33[9];
    v50 = v33[8];
    v51 = v33[6];
    v39 = v33[11];
    v48 = *v33;
    v49 = v33[10];
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_244E4EB80();
    sub_244E4E3C4();
    result = sub_244E4EBC8();
    v12 = -1 << *(_BYTE *)(v54 + 32);
    v13 = result & ~v12;
    v14 = v13 >> 6;
    if (((-1 << v13) & ~*(_QWORD *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v13) & ~*(_QWORD *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      v16 = v36;
      v17 = v39;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v12) >> 6;
      v16 = v36;
      v17 = v39;
      do
      {
        if (++v14 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v28 = v14 == v27;
        if (v14 == v27)
          v14 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v9 + 8 * v14);
      }
      while (v29 == -1);
      v15 = __clz(__rbit64(~v29)) + (v14 << 6);
    }
    *(_QWORD *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    v18 = (_QWORD *)(*(_QWORD *)(v54 + 48) + 16 * v15);
    *v18 = v31;
    v18[1] = v32;
    v19 = (_QWORD *)(*(_QWORD *)(v54 + 56) + 96 * v15);
    *v19 = v48;
    v19[1] = v34;
    v19[2] = v53;
    v19[3] = v35;
    v19[4] = v52;
    v19[5] = v16;
    v19[6] = v51;
    v19[7] = v37;
    v19[8] = v50;
    v19[9] = v38;
    v19[10] = v49;
    v19[11] = v17;
    ++*(_QWORD *)(v54 + 16);
    v5 = v44;
    v8 = v46;
    v11 = v47;
  }
  swift_release();
  v3 = v41;
  v22 = v43;
  if ((v45 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v40 = 1 << *(_BYTE *)(v5 + 32);
  if (v40 >= 64)
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v40;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v54;
  return result;
}

unint64_t sub_244DE3E7C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  __int128 *v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244E4E844();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_244E4EB80();
        swift_bridgeObjectRetain();
        sub_244E4E3C4();
        v11 = sub_244E4EBC8();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = (__int128 *)(v16 + 48 * v3);
          v18 = (__int128 *)(v16 + 48 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= v18 + 3))
          {
            v9 = *v18;
            v10 = v18[2];
            v17[1] = v18[1];
            v17[2] = v10;
            *v17 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_244DE4064(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244E4E844();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_244E4EB80();
        swift_bridgeObjectRetain();
        sub_244E4E3C4();
        v9 = sub_244E4EBC8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_244DE4238(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244E4E844();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_244E4EB80();
        swift_bridgeObjectRetain();
        sub_244E4E3C4();
        v9 = sub_244E4EBC8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 296 * v3;
          v15 = (const void *)(v14 + 296 * v6);
          if (v3 != v6 || (v3 = v6, result >= (unint64_t)v15 + 296))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x128uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_244DE4418(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244E4E844();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_244E4EB80();
        swift_bridgeObjectRetain();
        sub_244E4E3C4();
        v9 = sub_244E4EBC8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v10 < v8)
          goto LABEL_11;
LABEL_12:
        v11 = *(_QWORD *)(a2 + 48);
        v12 = (_OWORD *)(v11 + 16 * v3);
        v13 = (_OWORD *)(v11 + 16 * v6);
        if (v3 != v6 || v12 >= v13 + 1)
          *v12 = *v13;
        v14 = *(_QWORD *)(a2 + 56);
        v15 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for IdentityAnalyticsManager.LoadState(0) - 8) + 72);
        v16 = v15 * v3;
        result = v14 + v15 * v3;
        v17 = v15 * v6;
        v18 = v14 + v15 * v6 + v15;
        if (v16 < v17 || result >= v18)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v16 == v17)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v10 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v10)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v21 = *v20;
    v22 = (-1 << v3) - 1;
  }
  else
  {
    v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    v22 = *v20;
    v21 = (-1 << result) - 1;
  }
  *v20 = v22 & v21;
  v23 = *(_QWORD *)(a2 + 16);
  v24 = __OFSUB__(v23, 1);
  v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_244DE4614(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_244E4E844();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_244E4EB80();
        swift_bridgeObjectRetain();
        sub_244E4E3C4();
        v9 = sub_244E4EBC8();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_OWORD *sub_244DE47E8(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_244DC859C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_244D6B058(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_244DE57A0((uint64_t *)&unk_257418440, (void (*)(unint64_t, _BYTE *))sub_244D66F18, (void (*)(_BYTE *, uint64_t))sub_244D6B058);
      goto LABEL_7;
    }
    sub_244DE1BB4(v15, a4 & 1, (uint64_t *)&unk_257418440, (void (*)(uint64_t, _BYTE *))sub_244D6B058, (void (*)(uint64_t, _BYTE *))sub_244D66F18);
    v21 = sub_244DC859C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_244DE5424(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_244E4EAF0();
  __break(1u);
  return result;
}

_OWORD *sub_244DE4948(__int128 *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_244DC859C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 48 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_244DE769C(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_244DE559C();
      goto LABEL_7;
    }
    sub_244DE1874(v15, a4 & 1);
    v21 = sub_244DC859C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_244DE548C(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_244E4EAF0();
  __break(1u);
  return result;
}

uint64_t sub_244DE4A7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_244DC859C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_244DE5990();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_unknownObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_244DE1EDC(v15, a4 & 1);
  v21 = sub_244DC859C(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244E4EAF0();
  __break(1u);
  return result;
}

uint64_t sub_244DE4BD8(const void *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;

  v5 = v4;
  v10 = *v4;
  v12 = sub_244DC859C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_244DE5B44();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_244DE7B98((uint64_t)a1, v18[7] + 296 * v12);
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    memcpy((void *)(v18[7] + 296 * v12), a1, 0x128uLL);
    v23 = v18[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (!v24)
    {
      v18[2] = v25;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_244DE21F0(v15, a4 & 1);
  v20 = sub_244DC859C(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_244DE7B98((uint64_t)a1, v18[7] + 296 * v12);
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244E4EAF0();
  __break(1u);
  return result;
}

uint64_t sub_244DE4D40(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_244DC859C(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = v19
            + *(_QWORD *)(*(_QWORD *)(type metadata accessor for IdentityAnalyticsManager.LoadState(0) - 8) + 72)
            * v12;
        return sub_244DE7B10(a1, v20);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_244DE5D3C();
      goto LABEL_7;
    }
    sub_244DE27E4(v15, a4 & 1);
    v22 = sub_244DC859C(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_244DE54F8(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_244E4EAF0();
  __break(1u);
  return result;
}

uint64_t sub_244DE4E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v6 = v5;
  v12 = *v5;
  v14 = sub_244DC859C(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= result && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= result && (a5 & 1) == 0)
  {
    result = (uint64_t)sub_244DE5F68();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v23 = (uint64_t *)(v20[6] + 16 * v14);
    *v23 = a3;
    v23[1] = a4;
    v24 = (_QWORD *)(v20[7] + 16 * v14);
    *v24 = a1;
    v24[1] = a2;
    v25 = v20[2];
    v26 = __OFADD__(v25, 1);
    v27 = v25 + 1;
    if (!v26)
    {
      v20[2] = v27;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_244DE2B4C(result, a5 & 1);
  result = sub_244DC859C(a3, a4);
  if ((v18 & 1) == (v22 & 1))
  {
    v14 = result;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244E4EAF0();
  __break(1u);
  return result;
}

uint64_t sub_244DE4FE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v5 = v4;
  v10 = *v4;
  v12 = sub_244DC859C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_244DE6110();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
    {
LABEL_8:
      v19 = v18[7];
      result = swift_bridgeObjectRelease();
      *(_QWORD *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v23 = (uint64_t *)(v18[6] + 16 * v12);
    *v23 = a2;
    v23[1] = a3;
    *(_QWORD *)(v18[7] + 8 * v12) = a1;
    v24 = v18[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (!v25)
    {
      v18[2] = v26;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_244DE2E58(v15, a4 & 1);
  v21 = sub_244DC859C(a2, a3);
  if ((v16 & 1) == (v22 & 1))
  {
    v12 = v21;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244E4EAF0();
  __break(1u);
  return result;
}

uint64_t sub_244DE513C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t *v25;
  _QWORD *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;

  v6 = v5;
  v12 = *v5;
  v14 = sub_244DC859C(a3, a4);
  v15 = *(_QWORD *)(v12 + 16);
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v18 = v13;
  v19 = *(_QWORD *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0)
    goto LABEL_7;
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_244DE6618();
LABEL_7:
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = (_QWORD *)(v20[7] + 16 * v14);
      result = swift_bridgeObjectRelease();
      *v21 = a1;
      v21[1] = a2;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    v25 = (uint64_t *)(v20[6] + 16 * v14);
    *v25 = a3;
    v25[1] = a4;
    v26 = (_QWORD *)(v20[7] + 16 * v14);
    *v26 = a1;
    v26[1] = a2;
    v27 = v20[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (!v28)
    {
      v20[2] = v29;
      return swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_244DE3780(v17, a5 & 1);
  v23 = sub_244DC859C(a3, a4);
  if ((v18 & 1) == (v24 & 1))
  {
    v14 = v23;
    v20 = (_QWORD *)*v6;
    if ((v18 & 1) != 0)
      goto LABEL_8;
    goto LABEL_11;
  }
LABEL_15:
  result = sub_244E4EAF0();
  __break(1u);
  return result;
}

_QWORD *sub_244DE52B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *result;
  unint64_t v20;
  char v21;
  uint64_t *v22;
  _OWORD *v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v5 = v4;
  v10 = *v4;
  v12 = sub_244DC859C(a2, a3);
  v13 = *(_QWORD *)(v10 + 16);
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v16 = v11;
  v17 = *(_QWORD *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0)
    goto LABEL_7;
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_244DE67D0();
LABEL_7:
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_244DE7A90((_QWORD *)a1, (_QWORD *)(v18[7] + 96 * v12));
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    v22 = (uint64_t *)(v18[6] + 16 * v12);
    *v22 = a2;
    v22[1] = a3;
    v23 = (_OWORD *)(v18[7] + 96 * v12);
    v24 = *(_OWORD *)(a1 + 16);
    *v23 = *(_OWORD *)a1;
    v23[1] = v24;
    v25 = *(_OWORD *)(a1 + 32);
    v26 = *(_OWORD *)(a1 + 48);
    v27 = *(_OWORD *)(a1 + 80);
    v23[4] = *(_OWORD *)(a1 + 64);
    v23[5] = v27;
    v23[2] = v25;
    v23[3] = v26;
    v28 = v18[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (!v29)
    {
      v18[2] = v30;
      return (_QWORD *)swift_bridgeObjectRetain();
    }
    goto LABEL_14;
  }
  sub_244DE3AA4(v15, a4 & 1);
  v20 = sub_244DC859C(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    v12 = v20;
    v18 = (_QWORD *)*v5;
    if ((v16 & 1) != 0)
      return sub_244DE7A90((_QWORD *)a1, (_QWORD *)(v18[7] + 96 * v12));
    goto LABEL_11;
  }
LABEL_15:
  result = (_QWORD *)sub_244E4EAF0();
  __break(1u);
  return result;
}

_OWORD *sub_244DE5424(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_244D6B058(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_244DE548C(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_244DE769C(a4, (_OWORD *)(a5[7] + 48 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_244DE54F8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t State;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  result = sub_244DE7ACC(a4, v9 + *(_QWORD *)(*(_QWORD *)(State - 8) + 72) * a1);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

void *sub_244DE5580()
{
  return sub_244DE57A0((uint64_t *)&unk_257418440, (void (*)(unint64_t, _BYTE *))sub_244D66F18, (void (*)(_BYTE *, uint64_t))sub_244D6B058);
}

void *sub_244DE559C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  __int128 v26[3];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418420);
  v2 = *v0;
  v3 = sub_244E4E970();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 48 * v15;
    sub_244DE76B4(*(_QWORD *)(v2 + 56) + 48 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_244DE769C(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_244DE5784()
{
  return sub_244DE57A0((uint64_t *)&unk_257418430, (void (*)(unint64_t, _BYTE *))sub_244D66F18, (void (*)(_BYTE *, uint64_t))sub_244D6B058);
}

void *sub_244DE57A0(uint64_t *a1, void (*a2)(unint64_t, _BYTE *), void (*a3)(_BYTE *, uint64_t))
{
  uint64_t *v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _BYTE v31[32];

  v5 = v3;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v6 = *v3;
  v7 = sub_244E4E970();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v5 = v8;
    return result;
  }
  v28 = v5;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v29 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v25 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v25);
    ++v12;
    if (!v26)
    {
      v12 = v25 + 1;
      if (v25 + 1 >= v16)
        goto LABEL_26;
      v26 = *(_QWORD *)(v29 + 8 * v12);
      if (!v26)
        break;
    }
LABEL_25:
    v15 = (v26 - 1) & v26;
    v18 = __clz(__rbit64(v26)) + (v12 << 6);
LABEL_12:
    v19 = 16 * v18;
    v20 = (uint64_t *)(*(_QWORD *)(v6 + 48) + 16 * v18);
    v21 = *v20;
    v22 = v20[1];
    v23 = 32 * v18;
    a2(*(_QWORD *)(v6 + 56) + 32 * v18, v31);
    v24 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
    *v24 = v21;
    v24[1] = v22;
    a3(v31, *(_QWORD *)(v8 + 56) + v23);
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v5 = v28;
    goto LABEL_28;
  }
  v26 = *(_QWORD *)(v29 + 8 * v27);
  if (v26)
  {
    v12 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v26 = *(_QWORD *)(v29 + 8 * v12);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_244DE5990()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418468);
  v2 = *v0;
  v3 = sub_244E4E970();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_unknownObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_244DE5B44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _BYTE __dst[304];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257418470);
  v2 = *v0;
  v3 = sub_244E4E970();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = *v17;
    v19 = v17[1];
    v20 = 296 * v15;
    memcpy(__dst, (const void *)(*(_QWORD *)(v2 + 56) + 296 * v15), 0x128uLL);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v18;
    v21[1] = v19;
    memcpy((void *)(*(_QWORD *)(v4 + 56) + v20), __dst, 0x128uLL);
    swift_bridgeObjectRetain();
    result = (void *)sub_244D7E504((uint64_t)__dst);
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_244DE5D3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t State;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;

  v1 = v0;
  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  v30 = *(_QWORD *)(State - 8);
  MEMORY[0x24BDAC7A8](State);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418460);
  v5 = *v0;
  v6 = sub_244E4E970();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v28 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v29 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v15)
        goto LABEL_26;
      v25 = *(_QWORD *)(v29 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_25:
    v14 = (v25 - 1) & v25;
    v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    v18 = 16 * v17;
    v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
    v21 = *v19;
    v20 = v19[1];
    v22 = *(_QWORD *)(v30 + 72) * v17;
    sub_244DE7B54(*(_QWORD *)(v5 + 56) + v22, (uint64_t)v4);
    v23 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v23 = v21;
    v23[1] = v20;
    sub_244DE7ACC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v28;
    goto LABEL_28;
  }
  v25 = *(_QWORD *)(v29 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v25 = *(_QWORD *)(v29 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_244DE5F68()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418490);
  v2 = *v0;
  v3 = sub_244E4E970();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_244DE6110()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418498);
  v2 = *v0;
  v3 = sub_244E4E970();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_244DE62C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F88);
  v2 = *v0;
  v3 = sub_244E4E970();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 8 * v15;
    v21 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v20);
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v22 = v19;
    v22[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v20) = v21;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_244DE6470()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_257418480);
  v2 = *v0;
  v3 = sub_244E4E970();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_244DE6618()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F10);
  v2 = *v0;
  v3 = sub_244E4E970();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_244DE67D0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *result;
  unint64_t v5;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t *v36;
  int64_t v37;
  uint64_t v38;

  __swift_instantiateConcreteTypeFromMangledName(&qword_257416F90);
  v36 = v0;
  v1 = *v0;
  v2 = sub_244E4E970();
  v3 = v2;
  if (!*(_QWORD *)(v1 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v36 = v3;
    return result;
  }
  result = (void *)(v2 + 64);
  v5 = (unint64_t)((1 << *(_BYTE *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5)
    result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  v38 = v1 + 64;
  v7 = 0;
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v1 + 16);
  v8 = 1 << *(_BYTE *)(v1 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(v1 + 64);
  v37 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    v33 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v37)
      goto LABEL_26;
    v34 = *(_QWORD *)(v38 + 8 * v33);
    ++v7;
    if (!v34)
    {
      v7 = v33 + 1;
      if (v33 + 1 >= v37)
        goto LABEL_26;
      v34 = *(_QWORD *)(v38 + 8 * v7);
      if (!v34)
        break;
    }
LABEL_25:
    v10 = (v34 - 1) & v34;
    v12 = __clz(__rbit64(v34)) + (v7 << 6);
LABEL_12:
    v13 = 16 * v12;
    v14 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v12);
    v16 = *v14;
    v15 = v14[1];
    v17 = 96 * v12;
    v18 = (uint64_t *)(*(_QWORD *)(v1 + 56) + v17);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    v22 = v18[3];
    v23 = v18[4];
    v24 = v18[5];
    v25 = v18[6];
    v26 = v18[7];
    v27 = v18[8];
    v28 = v18[9];
    v29 = v18[10];
    v30 = v18[11];
    v31 = (_QWORD *)(*(_QWORD *)(v3 + 48) + v13);
    *v31 = v16;
    v31[1] = v15;
    v32 = (_QWORD *)(*(_QWORD *)(v3 + 56) + v17);
    *v32 = v19;
    v32[1] = v20;
    v32[2] = v21;
    v32[3] = v22;
    v32[4] = v23;
    v32[5] = v24;
    v32[6] = v25;
    v32[7] = v26;
    v32[8] = v27;
    v32[9] = v28;
    v32[10] = v29;
    v32[11] = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v35 = v33 + 2;
  if (v35 >= v37)
    goto LABEL_26;
  v34 = *(_QWORD *)(v38 + 8 * v35);
  if (v34)
  {
    v7 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    v7 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v7 >= v37)
      goto LABEL_26;
    v34 = *(_QWORD *)(v38 + 8 * v7);
    ++v35;
    if (v34)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_244DE6A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char *v16;
  _OWORD v17[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v16 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v6 = sub_244E4C204();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  v10 = sub_244E4C2AC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  if (qword_2574144B8 != -1)
    swift_once();
  os_unfair_lock_lock((os_unfair_lock_t)(qword_257418370 + 16));
  if (qword_2574143B0 != -1)
    swift_once();
  __swift_project_value_buffer(v10, (uint64_t)qword_257419CC0);
  *(_QWORD *)&v17[0] = a1;
  *((_QWORD *)&v17[0] + 1) = a2;
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDCD7A0], v6);
  sub_244D70D08();
  sub_244E4C2A0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (qword_2574144A8 != -1)
    swift_once();
  __swift_project_boxed_opaque_existential_1(qword_257418340, qword_257418358);
  if ((sub_244E4D254() & 1) != 0)
  {
    __swift_project_boxed_opaque_existential_1(qword_257418340, qword_257418358);
    v14 = sub_244E4D248();
    if (qword_2574144B0 != -1)
      swift_once();
    memset(v17, 0, 48);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_244DE0BC0((uint64_t)v17, a1, a2);
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v14 = 0;
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(qword_257418370 + 16));
  return v14 & 1;
}

void sub_244DE6F00(uint64_t (*a1)(char *), uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  char *v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;

  v43 = sub_244E4C2AC();
  v4 = *(_QWORD **)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v44 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v6 = MEMORY[0x24BDAC7A8](v38);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v37 = (uint64_t)v36 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_257414B00);
  MEMORY[0x24BDAC7A8](v10);
  v42 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574144B8 != -1)
    swift_once();
  v39 = v4;
  os_unfair_lock_lock((os_unfair_lock_t)(qword_257418370 + 16));
  if (qword_2574144A8 != -1)
    swift_once();
  sub_244D9D224((uint64_t)qword_257418340, (uint64_t)&v46);
  __swift_project_boxed_opaque_existential_1(&v46, *((uint64_t *)&v47 + 1));
  if (qword_2574143B0 != -1)
    swift_once();
  __swift_project_value_buffer(v43, (uint64_t)qword_257419CC0);
  v12 = sub_244E4D224();
  v13 = sub_244DE0DF4(a1, a2, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v46);
  v14 = *(_QWORD *)(v13 + 16);
  v36[2] = v13;
  if (v14)
  {
    v36[1] = v8;
    v15 = v39;
    v16 = v13 + ((*((unsigned __int8 *)v15 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v15 + 80));
    v17 = (void (*)(char *, unint64_t, uint64_t))v39[2];
    v40 = v39[9];
    v41 = v17;
    swift_bridgeObjectRetain();
    v18 = v42;
    v19 = v43;
    v20 = v44;
    while (1)
    {
      v41(v18, v16, v19);
      v21 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v15[7];
      v21(v18, 0, 1, v19);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v15[6])(v18, 1, v19) == 1)
        break;
      ((void (*)(char *, char *, uint64_t))v15[4])(v20, v18, v19);
      __swift_project_boxed_opaque_existential_1(qword_257418340, qword_257418358);
      if ((sub_244E4D248() & 1) != 0)
      {
        if (qword_2574144B0 != -1)
          swift_once();
        v22 = sub_244E4C240();
        v24 = v23;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v25 = sub_244DC859C(v22, v24);
        LOBYTE(v22) = v26;
        swift_bridgeObjectRelease();
        if ((v22 & 1) != 0)
        {
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v28 = off_257418368;
          v45 = off_257418368;
          off_257418368 = (_UNKNOWN *)0x8000000000000000;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_244DE559C();
            v28 = v45;
          }
          swift_bridgeObjectRelease();
          sub_244DE769C((__int128 *)(v28[7] + 48 * v25), &v46);
          sub_244DE3E7C(v25, (uint64_t)v28);
          off_257418368 = v28;
          swift_bridgeObjectRelease();
        }
        else
        {
          v47 = 0u;
          v48 = 0u;
          v46 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_244D66F54((uint64_t)&v46, &qword_257418418);
        swift_endAccess();
        v15 = v39;
      }
      v19 = v43;
      ((void (*)(char *, uint64_t))v15[1])(v44, v43);
      v16 += v40;
      --v14;
      v18 = v42;
      if (!v14)
        goto LABEL_21;
    }
  }
  else
  {
    v21 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v39[7];
    swift_bridgeObjectRetain();
    v18 = v42;
    v19 = v43;
LABEL_21:
    v21(v18, 1, 1, v19);
  }
  swift_bridgeObjectRelease_n();
  if (qword_2574143E0 != -1)
    swift_once();
  v29 = __swift_project_value_buffer(v38, (uint64_t)qword_257419DA0);
  v30 = v37;
  sub_244D640E4(v29, v37);
  v31 = sub_244E4DCD4();
  v32 = *(_QWORD *)(v31 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    sub_244D66F54(v30, &qword_2574145A0);
  }
  else
  {
    v33 = sub_244E4DCBC();
    v34 = sub_244E4E688();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v35 = 0;
      _os_log_impl(&dword_244D61000, v33, v34, "All sessions were deleted", v35, 2u);
      MEMORY[0x2495283BC](v35, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
  }
  os_unfair_lock_unlock((os_unfair_lock_t)(qword_257418370 + 16));
}

_OWORD *sub_244DE769C(__int128 *a1, _OWORD *a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_244DE76B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

BOOL sub_244DE76F8(uint64_t (*a1)(char *), _BOOL8 a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  _QWORD v9[4];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  if (qword_2574144B8 != -1)
    swift_once();
  os_unfair_lock_lock((os_unfair_lock_t)(qword_257418370 + 16));
  if (qword_2574144A8 != -1)
    swift_once();
  sub_244D9D224((uint64_t)qword_257418340, (uint64_t)v9);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  if (qword_2574143B0 != -1)
    swift_once();
  v5 = sub_244E4C2AC();
  __swift_project_value_buffer(v5, (uint64_t)qword_257419CC0);
  v6 = sub_244E4D224();
  v7 = sub_244DE1144(a1, a2, v6);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  os_unfair_lock_unlock((os_unfair_lock_t)(qword_257418370 + 16));
  return v7;
}

_QWORD *sub_244DE7A90(_QWORD *a1, _QWORD *a2)
{
  assignWithTake for IdentityAnalyticsSession(a2, a1);
  return a2;
}

uint64_t sub_244DE7ACC(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 32))(a2, a1, State);
  return a2;
}

uint64_t sub_244DE7B10(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t sub_244DE7B54(uint64_t a1, uint64_t a2)
{
  uint64_t State;

  State = type metadata accessor for IdentityAnalyticsManager.LoadState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(State - 8) + 16))(a2, a1, State);
  return a2;
}

uint64_t sub_244DE7B98(uint64_t a1, uint64_t a2)
{
  assignWithTake for TransactionContainer(a2, a1);
  return a2;
}

uint64_t sub_244DE7BD4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  type metadata accessor for GlobalState();
  v0 = (_QWORD *)swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418428);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v0[2] = v1;
  result = sub_244DE7F94();
  v0[3] = result;
  v0[4] = v3;
  qword_257419F20 = (uint64_t)v0;
  return result;
}

unint64_t sub_244DE7C30(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t *v6;
  unint64_t result;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35[32];
  _QWORD v36[2];
  uint64_t v37;

  v1 = a1;
  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257416F88);
    v2 = (_QWORD *)sub_244E4E988();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
  }
  v31 = v1 + 64;
  v3 = -1;
  v4 = -1 << *(_BYTE *)(v1 + 32);
  if (-v4 < 64)
    v3 = ~(-1 << -(char)v4);
  v5 = v3 & *(_QWORD *)(v1 + 64);
  v6 = &v37;
  v30 = (unint64_t)(63 - v4) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  v9 = &qword_257415B10;
  v10 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    if (v5)
    {
      v32 = (v5 - 1) & v5;
      v33 = v8;
      v16 = __clz(__rbit64(v5)) | (v8 << 6);
    }
    else
    {
      v17 = v8 + 1;
      if (__OFADD__(v8, 1))
        goto LABEL_37;
      if (v17 >= v30)
      {
LABEL_33:
        sub_244DC0E1C();
        return (unint64_t)v2;
      }
      v18 = *(_QWORD *)(v31 + 8 * v17);
      v19 = v8 + 1;
      if (!v18)
      {
        v19 = v8 + 2;
        if (v8 + 2 >= v30)
          goto LABEL_33;
        v18 = *(_QWORD *)(v31 + 8 * v19);
        if (!v18)
        {
          v19 = v8 + 3;
          if (v8 + 3 >= v30)
            goto LABEL_33;
          v18 = *(_QWORD *)(v31 + 8 * v19);
          if (!v18)
          {
            v19 = v8 + 4;
            if (v8 + 4 >= v30)
              goto LABEL_33;
            v18 = *(_QWORD *)(v31 + 8 * v19);
            if (!v18)
            {
              v20 = v8 + 5;
              if (v8 + 5 >= v30)
                goto LABEL_33;
              v18 = *(_QWORD *)(v31 + 8 * v20);
              if (!v18)
              {
                while (1)
                {
                  v19 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_38;
                  if (v19 >= v30)
                    goto LABEL_33;
                  v18 = *(_QWORD *)(v31 + 8 * v19);
                  ++v20;
                  if (v18)
                    goto LABEL_26;
                }
              }
              v19 = v8 + 5;
            }
          }
        }
      }
LABEL_26:
      v32 = (v18 - 1) & v18;
      v33 = v19;
      v16 = __clz(__rbit64(v18)) + (v19 << 6);
    }
    v21 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * v16);
    v23 = *v21;
    v22 = v21[1];
    sub_244D66F18(*(_QWORD *)(v1 + 56) + 32 * v16, (uint64_t)v6);
    v36[0] = v23;
    v36[1] = v22;
    sub_244D66F18((uint64_t)v6, (uint64_t)v35);
    swift_bridgeObjectRetain_n();
    sub_244D66F54((uint64_t)v36, v9);
    if (!swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      sub_244DC0E1C();
      swift_release();
      return 0;
    }
    result = sub_244DC859C(v23, v22);
    v24 = result;
    if ((v25 & 1) != 0)
    {
      v11 = v10;
      v12 = v6;
      v13 = v1;
      v14 = v9;
      v15 = (uint64_t *)(v2[6] + 16 * result);
      result = swift_bridgeObjectRelease();
      *v15 = v23;
      v15[1] = v22;
      v9 = v14;
      v1 = v13;
      v6 = v12;
      v10 = v11;
      *(_QWORD *)(v2[7] + 8 * v24) = v34;
      goto LABEL_8;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v26 = (uint64_t *)(v2[6] + 16 * result);
    *v26 = v23;
    v26[1] = v22;
    *(_QWORD *)(v2[7] + 8 * result) = v34;
    v27 = v2[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_36;
    v2[2] = v29;
LABEL_8:
    v5 = v32;
    v8 = v33;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_244DE7F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  size_t v24[2];

  v24[1] = *MEMORY[0x24BDAC8D0];
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v1 = MEMORY[0x24BDAC7A8](v0);
  v3 = (char *)v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)v24 - v4;
  v6 = sub_244E4E364();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[0] = 37;
  v9 = sub_244E4E4FC();
  *(_QWORD *)(v9 + 16) = 37;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_QWORD *)(v9 + 61) = 0;
  *(_OWORD *)(v9 + 32) = 0u;
  if (sysctlbyname("kern.bootsessionuuid", (void *)(v9 + 32), v24, 0, 0))
  {
    swift_bridgeObjectRelease();
    if (qword_257414408 != -1)
      swift_once();
    v10 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E18);
    sub_244D640E4(v10, (uint64_t)v3);
    v11 = sub_244E4DCD4();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v3, 1, v11) == 1)
    {
      sub_244D66F54((uint64_t)v3, &qword_2574145A0);
    }
    else
    {
      v18 = sub_244E4DCBC();
      v19 = sub_244E4E67C();
      if (os_log_type_enabled(v18, v19))
      {
        v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v20 = 0;
        _os_log_impl(&dword_244D61000, v18, v19, "Could not retrieve boot session UUID", v20, 2u);
        MEMORY[0x2495283BC](v20, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v11);
    }
  }
  else
  {
    sub_244E4E34C();
    result = sub_244DE82F0(v9, v8);
    if (v14)
      return result;
    if (qword_257414408 != -1)
      swift_once();
    v15 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E18);
    sub_244D640E4(v15, (uint64_t)v5);
    v16 = sub_244E4DCD4();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) == 1)
    {
      sub_244D66F54((uint64_t)v5, &qword_2574145A0);
    }
    else
    {
      v21 = sub_244E4DCBC();
      v22 = sub_244E4E67C();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_244D61000, v21, v22, "Could not create string from boot session UUID", v23, 2u);
        MEMORY[0x2495283BC](v23, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
    }
  }
  return 0;
}

uint64_t sub_244DE82F0(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  void (*v12)(char *, uint64_t);
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  id v22;
  uint64_t result;
  uint64_t v24;

  v4 = sub_244E4E364();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v24 - v9;
  sub_244E4E340();
  v11 = sub_244E4E334();
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v10, v4);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, a2, v4);
  if ((v11 & 1) != 0)
  {
    v12(v8, v4);
    goto LABEL_4;
  }
  sub_244E4E34C();
  v13 = sub_244E4E334();
  v12(v10, v4);
  v12(v8, v4);
  if ((v13 & 1) != 0)
  {
LABEL_4:
    v14 = sub_244DE8A6C(0, a1);
    if ((v15 & 1) == 0)
    {
      if ((v14 & 0x8000000000000000) == 0)
      {
        swift_bridgeObjectRetain();
        v16 = sub_244E4E394();
        v18 = v17;
        swift_unknownObjectRelease();
        if (v18)
        {
          sub_244E4E340();
          v19 = sub_244E4E334();
          v12(v10, v4);
          if ((v19 & 1) != 0 || (sub_244E4E880() & 1) != 0)
          {
            swift_bridgeObjectRelease();
LABEL_15:
            v12(a2, v4);
            return v16;
          }
          swift_bridgeObjectRelease();
        }
        goto LABEL_11;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_11:
  v20 = sub_244DE8A6C(0, a1);
  if ((v21 & 1) == 0)
  {
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD17C8]), sel_initWithBytes_length_encoding_, a1 + 32, v20, sub_244E4E358());
    swift_bridgeObjectRelease();
    if (v22)
    {
      v16 = sub_244E4E31C();

    }
    else
    {
      v16 = 0;
    }
    goto LABEL_15;
  }
LABEL_18:
  result = sub_244E4E94C();
  __break(1u);
  return result;
}

uint64_t sub_244DE8588@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char isUniquelyReferenced_nonNull_native;
  char v37;
  unint64_t v38;
  uint64_t v39;
  _BOOL8 v40;
  uint64_t v41;
  char v42;
  unint64_t v43;
  char v44;
  uint64_t *v45;
  _QWORD *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  int64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;

  result = sub_244E4E5EC();
  if (v2)
    return result;
  v6 = sub_244DE9054();
  v7 = sub_244DE9680(a1);
  v50 = a2;
  v8 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v9 = objc_msgSend(v8, sel_standardUserDefaults);
  v10 = sub_244E4E298();
  v11 = v7;
  v12 = (void *)v10;
  v55 = v11;
  swift_bridgeObjectRelease();
  v13 = (void *)sub_244E4E2F8();
  objc_msgSend(v9, sel_setValue_forKey_, v12, v13);

  v51 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a1 + 64);
  v52 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  v17 = 0;
  v18 = (_QWORD *)MEMORY[0x24BEE4B00];
  v53 = v6;
  v54 = a1;
  while (1)
  {
    if (v16)
    {
      v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v56 = v17;
      v21 = v20 | (v17 << 6);
      v22 = v55;
    }
    else
    {
      v23 = v17 + 1;
      v22 = v55;
      if (__OFADD__(v17, 1))
        goto LABEL_51;
      if (v23 >= v52)
      {
LABEL_47:
        swift_bridgeObjectRelease();
        swift_release();
        result = swift_bridgeObjectRelease();
        *v50 = v18;
        return result;
      }
      v24 = *(_QWORD *)(v51 + 8 * v23);
      v25 = v17 + 1;
      if (!v24)
      {
        v25 = v17 + 2;
        if (v17 + 2 >= v52)
          goto LABEL_47;
        v24 = *(_QWORD *)(v51 + 8 * v25);
        if (!v24)
        {
          v25 = v17 + 3;
          if (v17 + 3 >= v52)
            goto LABEL_47;
          v24 = *(_QWORD *)(v51 + 8 * v25);
          if (!v24)
          {
            v25 = v17 + 4;
            if (v17 + 4 >= v52)
              goto LABEL_47;
            v24 = *(_QWORD *)(v51 + 8 * v25);
            if (!v24)
            {
              v25 = v17 + 5;
              if (v17 + 5 >= v52)
                goto LABEL_47;
              v24 = *(_QWORD *)(v51 + 8 * v25);
              if (!v24)
              {
                v26 = v17 + 6;
                if (v17 + 6 >= v52)
                  goto LABEL_47;
                v24 = *(_QWORD *)(v51 + 8 * v26);
                if (!v24)
                {
                  while (1)
                  {
                    v25 = v26 + 1;
                    if (__OFADD__(v26, 1))
                      goto LABEL_52;
                    if (v25 >= v52)
                      goto LABEL_47;
                    v24 = *(_QWORD *)(v51 + 8 * v25);
                    ++v26;
                    if (v24)
                      goto LABEL_26;
                  }
                }
                v25 = v17 + 6;
              }
            }
          }
        }
      }
LABEL_26:
      v16 = (v24 - 1) & v24;
      v56 = v25;
      v21 = __clz(__rbit64(v24)) + (v25 << 6);
    }
    v27 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v21);
    v29 = *v27;
    v28 = v27[1];
    v30 = *(_QWORD *)(v6 + 16);
    swift_bridgeObjectRetain();
    if (v30 && (v31 = sub_244DC859C(v29, v28), (v32 & 1) != 0))
    {
      v57 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v31);
      if (!*(_QWORD *)(v22 + 16))
        goto LABEL_30;
    }
    else
    {
      v57 = 0;
      if (!*(_QWORD *)(v22 + 16))
      {
LABEL_30:
        v33 = 0;
        goto LABEL_36;
      }
    }
    swift_bridgeObjectRetain();
    v34 = sub_244DC859C(v29, v28);
    v33 = (v35 & 1) != 0 ? *(_QWORD *)(*(_QWORD *)(v22 + 56) + 8 * v34) : 0;
    swift_bridgeObjectRelease();
LABEL_36:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = sub_244DC859C(v29, v28);
    v39 = v18[2];
    v40 = (v37 & 1) == 0;
    v41 = v39 + v40;
    if (__OFADD__(v39, v40))
      break;
    v42 = v37;
    if (v18[3] >= v41)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v37 & 1) != 0)
          goto LABEL_5;
      }
      else
      {
        sub_244DE6470();
        if ((v42 & 1) != 0)
          goto LABEL_5;
      }
    }
    else
    {
      sub_244DE3474(v41, isUniquelyReferenced_nonNull_native);
      v43 = sub_244DC859C(v29, v28);
      if ((v42 & 1) != (v44 & 1))
        goto LABEL_53;
      v38 = v43;
      if ((v42 & 1) != 0)
      {
LABEL_5:
        v19 = (_QWORD *)(v18[7] + 16 * v38);
        *v19 = v57;
        v19[1] = v33;
        goto LABEL_6;
      }
    }
    v18[(v38 >> 6) + 8] |= 1 << v38;
    v45 = (uint64_t *)(v18[6] + 16 * v38);
    *v45 = v29;
    v45[1] = v28;
    v46 = (_QWORD *)(v18[7] + 16 * v38);
    *v46 = v57;
    v46[1] = v33;
    v47 = v18[2];
    v48 = __OFADD__(v47, 1);
    v49 = v47 + 1;
    if (v48)
      goto LABEL_50;
    v18[2] = v49;
    swift_bridgeObjectRetain();
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = v53;
    a1 = v54;
    v17 = v56;
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  result = sub_244E4EAF0();
  __break(1u);
  return result;
}

void sub_244DE8A18(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_244DE8A20()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GlobalState()
{
  return objc_opt_self();
}

uint64_t sub_244DE8A6C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(unsigned __int8 *)(a2 + 32) == a1)
    return 0;
  if (v2 == 1)
    return 0;
  if (*(unsigned __int8 *)(a2 + 33) == a1)
    return 1;
  v4 = 0;
  v5 = v2 - 2;
  while (v5 != v4)
  {
    v6 = *(unsigned __int8 *)(a2 + 34 + v4++);
    if (v6 == a1)
      return v4 + 1;
  }
  return 0;
}

uint64_t sub_244DE8AF4()
{
  id v0;
  void *v1;
  id v2;
  uint64_t result;
  unsigned int v4;
  _OWORD v5[2];
  _BYTE v6[24];
  uint64_t v7;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_244E4E2F8();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_244E4E82C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_244D70C60((uint64_t)v5, (uint64_t)v6, &qword_257414A38);
  if (v7)
  {
    result = swift_dynamicCast();
    if ((_DWORD)result)
      return v4;
  }
  else
  {
    sub_244D66F54((uint64_t)v6, &qword_257414A38);
    return 0;
  }
  return result;
}

id sub_244DE8C0C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id result;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415EB8);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - v7;
  result = objc_msgSend((id)objc_opt_self(), sel_sharedConnection);
  if (result)
  {
    v10 = result;
    v11 = objc_msgSend(result, sel_passcodeCreationDate);

    if (v11)
    {
      sub_244E4C360();

      v12 = sub_244E4C384();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
    }
    else
    {
      v12 = sub_244E4C384();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 1, 1, v12);
    }
    sub_244D70C60((uint64_t)v6, (uint64_t)v8, &qword_257415EB8);
    sub_244E4C384();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
    {
      sub_244D66F54((uint64_t)v8, &qword_257415EB8);
      if (qword_257414408 != -1)
        swift_once();
      v14 = __swift_project_value_buffer(v0, (uint64_t)qword_257419E18);
      sub_244D640E4(v14, (uint64_t)v2);
      v15 = sub_244E4DCD4();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v2, 1, v15) == 1)
      {
        return (id)sub_244D66F54((uint64_t)v2, &qword_2574145A0);
      }
      else
      {
        v17 = sub_244E4DCBC();
        v18 = sub_244E4E67C();
        if (os_log_type_enabled(v17, v18))
        {
          v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v19 = 0;
          _os_log_impl(&dword_244D61000, v17, v18, "Could not fetch passcode last creation date", v19, 2u);
          MEMORY[0x2495283BC](v19, -1, -1);
        }

        return (id)(*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v2, v15);
      }
    }
    else
    {
      sub_244E4C354();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_244DE8EE4()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  _OWORD v7[2];
  _BYTE v8[24];
  uint64_t v9;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_244E4E2F8();
  v2 = objc_msgSend(v0, sel_objectForKey_, v1);

  if (v2)
  {
    sub_244E4E82C();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_244D70C60((uint64_t)v7, (uint64_t)v8, &qword_257414A38);
  if (!v9)
  {
    sub_244D66F54((uint64_t)v8, &qword_257414A38);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  sub_244D73FC0(v5, v6);
  v3 = sub_244DC7024();
  sub_244D651AC(v5, v6);
  sub_244D651AC(v5, v6);
  return v3;
}

unint64_t sub_244DE9054()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v1 = (void *)sub_244E4E2F8();
  v2 = objc_msgSend(v0, sel_dictionaryForKey_, v1);

  if (!v2 || (v3 = sub_244E4E2A4(), v2, v4 = sub_244DE7C30(v3), swift_bridgeObjectRelease(), !v4))
  {
    v4 = sub_244DB2BBC(MEMORY[0x24BEE4AF8]);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_244DE9144(void *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  _OWORD v43[2];
  uint64_t v44[4];

  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v37);
  v38 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 56;
  v8 = 1 << *(_BYTE *)(a2 + 32);
  v9 = -1;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  v10 = v9 & *(_QWORD *)(a2 + 56);
  v40 = (unint64_t)(v8 + 63) >> 6;
  v41 = a2;
  swift_bridgeObjectRetain();
  v11 = 0;
  v39 = MEMORY[0x24BEE4AD8] + 8;
  while (1)
  {
    if (v10)
    {
      v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v13 = v12 | (v11 << 6);
    }
    else
    {
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      if (v14 >= v40)
        goto LABEL_31;
      v15 = *(_QWORD *)(v7 + 8 * v14);
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v40)
          goto LABEL_31;
        v15 = *(_QWORD *)(v7 + 8 * v11);
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v40)
            goto LABEL_31;
          v15 = *(_QWORD *)(v7 + 8 * v11);
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v40)
            {
LABEL_31:
              swift_release();
              return 0;
            }
            v15 = *(_QWORD *)(v7 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_41;
                if (v11 >= v40)
                  goto LABEL_31;
                v15 = *(_QWORD *)(v7 + 8 * v11);
                ++v16;
                if (v15)
                  goto LABEL_21;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_21:
      v10 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v11 << 6);
    }
    v17 = (uint64_t *)(*(_QWORD *)(v41 + 48) + 16 * v13);
    v2 = *v17;
    v3 = v17[1];
    swift_bridgeObjectRetain();
    v18 = objc_msgSend(a1, sel_entitlements, v37);
    v19 = (void *)sub_244E4E2F8();
    sub_244DC40C4(0, (unint64_t *)&qword_257417D18);
    v20 = objc_msgSend(v18, sel_objectForKey_ofClass_, v19, swift_getObjCClassFromMetadata());

    if (v20)
    {
      sub_244E4E82C();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v43, 0, sizeof(v43));
    }
    sub_244D70C60((uint64_t)v43, (uint64_t)v44, &qword_257414A38);
    if (!v44[3])
    {
      sub_244D66F54((uint64_t)v44, &qword_257414A38);
      goto LABEL_5;
    }
    if ((swift_dynamicCast() & 1) != 0 && (v42 & 1) != 0)
      break;
LABEL_5:
    swift_bridgeObjectRelease();
  }
  if (qword_257414408 == -1)
    goto LABEL_29;
LABEL_42:
  swift_once();
LABEL_29:
  v21 = __swift_project_value_buffer(v37, (uint64_t)qword_257419E18);
  v22 = v38;
  sub_244D640E4(v21, v38);
  v23 = sub_244E4DCD4();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23) == 1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_244D66F54(v22, &qword_2574145A0);
  }
  else
  {
    v26 = a1;
    swift_bridgeObjectRetain();
    v27 = v26;
    v28 = sub_244E4DCBC();
    v29 = sub_244E4E688();
    if (os_log_type_enabled(v28, v29))
    {
      v30 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v44[0] = v40;
      *(_DWORD *)v30 = 136315394;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v43[0] = sub_244D9A70C(v2, v3, v44);
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v30 + 12) = 2080;
      v31 = objc_msgSend(v27, sel_bundleIdentifier);
      if (v31)
      {
        v32 = v31;
        v33 = sub_244E4E31C();
        v35 = v34;

      }
      else
      {
        v35 = 0xE700000000000000;
        v33 = 0x6E776F6E6B6E55;
      }
      *(_QWORD *)&v43[0] = sub_244D9A70C(v33, v35, v44);
      sub_244E4E7E4();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_244D61000, v28, v29, "[cleanup] Entitlement [ %s ] found for: [ %s ]", (uint8_t *)v30, 0x16u);
      v36 = v40;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v36, -1, -1);
      MEMORY[0x2495283BC](v30, -1, -1);
      swift_release();

      v22 = v38;
    }
    else
    {
      swift_release();

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  return 1;
}

uint64_t sub_244DE9680(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  _QWORD *v27;
  int v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  uint64_t v46;
  uint64_t result;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int isUniquelyReferenced_nonNull_native;
  _QWORD *v54;
  unint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;

  v2 = v1;
  v4 = sub_244E4C1F8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = objc_msgSend((id)objc_opt_self(), sel_enumeratorWithOptions_, 0);
  sub_244E4E64C();

  sub_244E4C1EC();
  if (!v59)
  {
    v55 = 0;
    v10 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_47;
  }
  v9 = sub_244DC40C4(0, &qword_257418548);
  v55 = 0;
  v57 = a1 + 64;
  v58 = a1;
  v10 = (_QWORD *)MEMORY[0x24BEE4B00];
  while (1)
  {
LABEL_5:
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_4;
    v11 = v60;
    sub_244E4E5EC();
    if (v2)
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
    if ((objc_msgSend(v11, sel_isDeletable) & 1) != 0)
      break;

LABEL_4:
    sub_244E4C1EC();
    if (!v59)
      goto LABEL_47;
  }
  v48 = v9;
  v49 = v7;
  v54 = v10;
  v50 = v5;
  v51 = v4;
  v12 = v58;
  v13 = 1 << *(_BYTE *)(v58 + 32);
  if (v13 < 64)
    v14 = ~(-1 << v13);
  else
    v14 = -1;
  v15 = v14 & *(_QWORD *)(v58 + 64);
  v56 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  v16 = 0;
  if (v15)
  {
LABEL_12:
    v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v18 = v17 | (v16 << 6);
    goto LABEL_13;
  }
  while (2)
  {
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v24 >= v56)
      goto LABEL_44;
    v25 = *(_QWORD *)(v57 + 8 * v24);
    ++v16;
    if (v25)
      goto LABEL_28;
    v16 = v24 + 1;
    if (v24 + 1 >= v56)
      goto LABEL_44;
    v25 = *(_QWORD *)(v57 + 8 * v16);
    if (v25)
      goto LABEL_28;
    v16 = v24 + 2;
    if (v24 + 2 >= v56)
      goto LABEL_44;
    v25 = *(_QWORD *)(v57 + 8 * v16);
    if (v25)
    {
LABEL_28:
      v15 = (v25 - 1) & v25;
      v18 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_13:
      v19 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v18);
      v21 = *v19;
      v20 = v19[1];
      v22 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = sub_244DE9144(v11, v22);
      swift_bridgeObjectRelease();
      if ((v23 & 1) != 0)
      {
        sub_244DB4E08(v55);
        v27 = v54;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v60 = v27;
        v29 = sub_244DC859C(v21, v20);
        v30 = v27[2];
        v31 = (v28 & 1) == 0;
        v32 = v30 + v31;
        if (__OFADD__(v30, v31))
          goto LABEL_52;
        v33 = v28;
        v34 = v27[3];
        v52 = v28;
        if (v34 >= v32)
        {
          v55 = v29;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            sub_244DE62C4();
        }
        else
        {
          sub_244DE316C(v32, isUniquelyReferenced_nonNull_native);
          v35 = sub_244DC859C(v21, v20);
          if ((v33 & 1) != (v36 & 1))
            goto LABEL_55;
          v55 = v35;
        }
        v37 = v60;
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          v38 = v55;
          v37[(v55 >> 6) + 8] |= 1 << v55;
          v39 = (uint64_t *)(v37[6] + 16 * v38);
          *v39 = v21;
          v39[1] = v20;
          *(_QWORD *)(v37[7] + 8 * v38) = 0;
          v40 = v37[2];
          v41 = v40 + 1;
          v42 = __OFADD__(v40, 1);
          swift_bridgeObjectRetain();
          if (v42)
            goto LABEL_54;
          v37[2] = v41;
        }
        swift_bridgeObjectRetain();
        v43 = v37[7];
        v54 = v37;
        swift_bridgeObjectRelease();
        v44 = *(_QWORD *)(v43 + 8 * v55);
        v45 = __CFADD__(v44, 1);
        v46 = v44 + 1;
        if (v45)
          goto LABEL_53;
        *(_QWORD *)(v43 + 8 * v55) = v46;
        swift_bridgeObjectRelease();
        v55 = (unint64_t)sub_244DE8A18;
        v12 = v58;
        if (v15)
          goto LABEL_12;
      }
      else
      {
        swift_bridgeObjectRelease();
        v12 = v58;
        if (v15)
          goto LABEL_12;
      }
      continue;
    }
    break;
  }
  v26 = v24 + 3;
  if (v26 < v56)
  {
    v25 = *(_QWORD *)(v57 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        v16 = v26 + 1;
        if (__OFADD__(v26, 1))
          break;
        if (v16 >= v56)
          goto LABEL_44;
        v25 = *(_QWORD *)(v57 + 8 * v16);
        ++v26;
        if (v25)
          goto LABEL_28;
      }
LABEL_51:
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      result = sub_244E4EAF0();
      __break(1u);
      return result;
    }
    v16 = v26;
    goto LABEL_28;
  }
LABEL_44:

  swift_release();
  v7 = v49;
  sub_244E4C1EC();
  v5 = v50;
  v4 = v51;
  v10 = v54;
  v9 = v48;
  if (v59)
    goto LABEL_5;
LABEL_47:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_49:
  sub_244DB4E08(v55);
  return (uint64_t)v10;
}

void sub_244DE9B50(id *a1@<X0>, BOOL *a2@<X8>)
{
  id v3;
  id v4;

  v3 = objc_msgSend(*a1, sel_currentLayout);
  v4 = v3;
  if (v3)

  *a2 = v4 != 0;
}

uint64_t sub_244DE9BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend((id)objc_opt_self(), sel_configurationForContinuityDisplay);
  objc_msgSend(v5, sel_setNeedsUserInteractivePriority_, 1);
  v6 = objc_msgSend((id)objc_opt_self(), sel_monitorWithConfiguration_, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2574185F0);
  v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(v1 + 16) = v7;
  if (qword_2574143D0 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D70);
  sub_244D640E4(v8, (uint64_t)v4);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v4, 1, v9) == 1)
  {

    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v11 = sub_244E4DCBC();
    v12 = sub_244E4E670();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_244D61000, v11, v12, "ContinuityDisplayMonitor started monitoring", v13, 2u);
      MEMORY[0x2495283BC](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v9);
  }
  return v1;
}

uint64_t sub_244DE9DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v1 + 16);
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  objc_msgSend(*(id *)(v5 + 16), sel_invalidate);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  if (qword_2574143D0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D70);
  sub_244D640E4(v6, (uint64_t)v4);
  v7 = sub_244E4DCD4();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v9 = sub_244E4DCBC();
    v10 = sub_244E4E670();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_244D61000, v9, v10, "ContinuityDisplayMonitor finished monitoring", v11, 2u);
      MEMORY[0x2495283BC](v11, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  swift_release();
  return v1;
}

uint64_t sub_244DE9F3C()
{
  sub_244DE9DA0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ContinuityDisplayMonitor()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for ProximityReaderConfiguration()
{
  return &type metadata for ProximityReaderConfiguration;
}

uint64_t sub_244DE9F8C(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418620);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEA76C();
  sub_244E4EBEC();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_257418608);
  sub_244DEA7F4(&qword_257418628, (uint64_t (*)(void))sub_244DEA868, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
  sub_244E4EA90();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_244DEA0B0()
{
  return sub_244DEA204();
}

uint64_t sub_244DEA0CC()
{
  return sub_244E4E3C4();
}

uint64_t sub_244DEA0E8()
{
  return sub_244DEA288();
}

uint64_t sub_244DEA104@<X0>(BOOL *a1@<X8>)
{
  return sub_244DEA2DC(a1);
}

void sub_244DEA110(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000244E566F0;
}

unint64_t sub_244DEA130()
{
  return 0xD000000000000010;
}

uint64_t sub_244DEA14C@<X0>(BOOL *a1@<X8>)
{
  return sub_244DEA370(a1);
}

uint64_t sub_244DEA158()
{
  sub_244DEA76C();
  return sub_244E4EC04();
}

uint64_t sub_244DEA180()
{
  sub_244DEA76C();
  return sub_244E4EC10();
}

_QWORD *sub_244DEA1A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;

  result = sub_244DEA620(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_244DEA1D0(_QWORD *a1)
{
  uint64_t *v1;

  return sub_244DE9F8C(a1, *v1);
}

uint64_t sub_244DEA1E8()
{
  return sub_244DEA204();
}

uint64_t sub_244DEA204()
{
  sub_244E4EB80();
  sub_244E4E3C4();
  return sub_244E4EBC8();
}

uint64_t sub_244DEA250()
{
  return sub_244E4E3C4();
}

uint64_t sub_244DEA26C()
{
  return sub_244DEA288();
}

uint64_t sub_244DEA288()
{
  sub_244E4EB80();
  sub_244E4E3C4();
  return sub_244E4EBC8();
}

uint64_t sub_244DEA2D0@<X0>(BOOL *a1@<X8>)
{
  return sub_244DEA2DC(a1);
}

uint64_t sub_244DEA2DC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_244E4E9C4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_244DEA328(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000244E56710;
}

unint64_t sub_244DEA348()
{
  return 0xD000000000000012;
}

uint64_t sub_244DEA364@<X0>(BOOL *a1@<X8>)
{
  return sub_244DEA370(a1);
}

uint64_t sub_244DEA370@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_244E4E9C4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_244DEA3C0()
{
  sub_244DEA9A8();
  return sub_244E4EC04();
}

uint64_t sub_244DEA3E8()
{
  sub_244DEA9A8();
  return sub_244E4EC10();
}

uint64_t sub_244DEA410@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418650);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEA9A8();
  sub_244E4EBE0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = sub_244E4E9F4();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_244DEA534(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418660);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEA9A8();
  sub_244E4EBEC();
  sub_244E4EA60();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

_QWORD *sub_244DEA620(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574185F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEA76C();
  sub_244E4EBE0();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257418608);
    sub_244DEA7F4(&qword_257418610, (uint64_t (*)(void))sub_244DEA7B0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    sub_244E4EA24();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    v7 = (_QWORD *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

unint64_t sub_244DEA76C()
{
  unint64_t result;

  result = qword_257418600;
  if (!qword_257418600)
  {
    result = MEMORY[0x2495282F0](&unk_244E556B4, &type metadata for ProximityReaderConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418600);
  }
  return result;
}

unint64_t sub_244DEA7B0()
{
  unint64_t result;

  result = qword_257418618;
  if (!qword_257418618)
  {
    result = MEMORY[0x2495282F0](&unk_244E5568C, &type metadata for RegionConfiguration);
    atomic_store(result, (unint64_t *)&qword_257418618);
  }
  return result;
}

uint64_t sub_244DEA7F4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257418608);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x2495282F0](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_244DEA868()
{
  unint64_t result;

  result = qword_257418630;
  if (!qword_257418630)
  {
    result = MEMORY[0x2495282F0](&unk_244E55664, &type metadata for RegionConfiguration);
    atomic_store(result, (unint64_t *)&qword_257418630);
  }
  return result;
}

ValueMetadata *type metadata accessor for ProximityReaderConfiguration.CodingKeys()
{
  return &type metadata for ProximityReaderConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for RegionConfiguration()
{
  return &type metadata for RegionConfiguration;
}

unint64_t sub_244DEA8D4()
{
  unint64_t result;

  result = qword_257418638;
  if (!qword_257418638)
  {
    result = MEMORY[0x2495282F0](&unk_244E5563C, &type metadata for ProximityReaderConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418638);
  }
  return result;
}

unint64_t sub_244DEA91C()
{
  unint64_t result;

  result = qword_257418640;
  if (!qword_257418640)
  {
    result = MEMORY[0x2495282F0](&unk_244E55574, &type metadata for ProximityReaderConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418640);
  }
  return result;
}

unint64_t sub_244DEA964()
{
  unint64_t result;

  result = qword_257418648;
  if (!qword_257418648)
  {
    result = MEMORY[0x2495282F0](&unk_244E5559C, &type metadata for ProximityReaderConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418648);
  }
  return result;
}

unint64_t sub_244DEA9A8()
{
  unint64_t result;

  result = qword_257418658;
  if (!qword_257418658)
  {
    result = MEMORY[0x2495282F0](&unk_244E557F4, &type metadata for RegionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418658);
  }
  return result;
}

uint64_t _s21ProximityReaderDaemon28ProximityReaderConfigurationV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_244DEAA2C + 4 * asc_244E554D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_244DEAA4C + 4 * byte_244E554D5[v4]))();
}

_BYTE *sub_244DEAA2C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_244DEAA4C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244DEAA54(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244DEAA5C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_244DEAA64(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_244DEAA6C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RegionConfiguration.CodingKeys()
{
  return &type metadata for RegionConfiguration.CodingKeys;
}

unint64_t sub_244DEAA8C()
{
  unint64_t result;

  result = qword_257418668;
  if (!qword_257418668)
  {
    result = MEMORY[0x2495282F0](&unk_244E557CC, &type metadata for RegionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418668);
  }
  return result;
}

unint64_t sub_244DEAAD4()
{
  unint64_t result;

  result = qword_257418670;
  if (!qword_257418670)
  {
    result = MEMORY[0x2495282F0](&unk_244E55704, &type metadata for RegionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418670);
  }
  return result;
}

unint64_t sub_244DEAB1C()
{
  unint64_t result;

  result = qword_257418678;
  if (!qword_257418678)
  {
    result = MEMORY[0x2495282F0](&unk_244E5572C, &type metadata for RegionConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418678);
  }
  return result;
}

unint64_t sub_244DEAB64()
{
  unint64_t result;

  result = qword_257418680;
  if (!qword_257418680)
  {
    result = MEMORY[0x2495282F0](&unk_244E558C4, &type metadata for CPUTimestamp);
    atomic_store(result, (unint64_t *)&qword_257418680);
  }
  return result;
}

uint64_t sub_244DEABA8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418688);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEB0D0();
  sub_244E4EBEC();
  v10 = 0;
  sub_244E4EA9C();
  if (!v1)
  {
    v9 = 1;
    sub_244E4EA78();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_244DEACC4()
{
  return 0xD000000000000014;
}

uint64_t sub_244DEACF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DEB114(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244DEAD18()
{
  sub_244DEB0D0();
  return sub_244E4EC04();
}

uint64_t sub_244DEAD40()
{
  sub_244DEB0D0();
  return sub_244E4EC10();
}

void sub_244DEAD68(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v4;
  double v5;

  v5 = sub_244DEB1FC(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = v4;
    *(double *)(a2 + 8) = v5;
  }
}

uint64_t sub_244DEAD94(_QWORD *a1)
{
  return sub_244DEABA8(a1);
}

uint64_t sub_244DEADB0()
{
  sub_244E4EB80();
  sub_244E4EBB0();
  sub_244E4EBBC();
  return sub_244E4EBC8();
}

uint64_t sub_244DEAE10()
{
  sub_244E4EBB0();
  return sub_244E4EBBC();
}

uint64_t sub_244DEAE50()
{
  sub_244E4EB80();
  sub_244E4EBB0();
  sub_244E4EBBC();
  return sub_244E4EBC8();
}

BOOL sub_244DEAEAC(uint64_t a1, uint64_t a2)
{
  return *(_DWORD *)a1 == *(_DWORD *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

uint64_t sub_244DEAED8()
{
  sub_244E4E88C();
  sub_244E4E3F4();
  sub_244E4EAA8();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  sub_244E4E3F4();
  sub_244E4E634();
  sub_244E4E3F4();
  return 0;
}

uint64_t sub_244DEAFCC()
{
  return sub_244DEAED8();
}

BOOL sub_244DEAFD8(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
    return *(double *)(a1 + 8) < *(double *)(a2 + 8);
  else
    return *(_DWORD *)a1 < *(_DWORD *)a2;
}

BOOL sub_244DEB000(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == *(_DWORD *)a1)
    return *(double *)(a2 + 8) >= *(double *)(a1 + 8);
  else
    return *(_DWORD *)a2 >= *(_DWORD *)a1;
}

BOOL sub_244DEB028(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a1 == *(_DWORD *)a2)
    return *(double *)(a1 + 8) >= *(double *)(a2 + 8);
  else
    return *(_DWORD *)a1 >= *(_DWORD *)a2;
}

BOOL sub_244DEB050(uint64_t a1, uint64_t a2)
{
  if (*(_DWORD *)a2 == *(_DWORD *)a1)
    return *(double *)(a2 + 8) < *(double *)(a1 + 8);
  else
    return *(_DWORD *)a2 < *(_DWORD *)a1;
}

uint64_t getEnumTagSinglePayload for CPUTimestamp(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CPUTimestamp(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for CPUTimestamp()
{
  return &type metadata for CPUTimestamp;
}

unint64_t sub_244DEB0D0()
{
  unint64_t result;

  result = qword_257418690;
  if (!qword_257418690)
  {
    result = MEMORY[0x2495282F0](&unk_244E55A88, &type metadata for CPUTimestamp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418690);
  }
  return result;
}

uint64_t sub_244DEB114(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000014 && a2 == 0x8000000244E5A1F0 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000244E5A210)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

double sub_244DEB1FC(_QWORD *a1)
{
  uint64_t v1;
  double v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  uint64_t v10;
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418698);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEB0D0();
  sub_244E4EBE0();
  if (!v1)
  {
    v12 = 0;
    sub_244E4EA30();
    v11 = 1;
    sub_244E4EA0C();
    v2 = v8;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v2;
}

uint64_t storeEnumTagSinglePayload for CPUTimestamp.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244DEB39C + 4 * byte_244E55875[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244DEB3D0 + 4 * asc_244E55870[v4]))();
}

uint64_t sub_244DEB3D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DEB3D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DEB3E0);
  return result;
}

uint64_t sub_244DEB3EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DEB3F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244DEB3F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DEB400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CPUTimestamp.CodingKeys()
{
  return &type metadata for CPUTimestamp.CodingKeys;
}

unint64_t sub_244DEB420()
{
  unint64_t result;

  result = qword_2574186A0;
  if (!qword_2574186A0)
  {
    result = MEMORY[0x2495282F0](&unk_244E55A60, &type metadata for CPUTimestamp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574186A0);
  }
  return result;
}

unint64_t sub_244DEB468()
{
  unint64_t result;

  result = qword_2574186A8;
  if (!qword_2574186A8)
  {
    result = MEMORY[0x2495282F0](&unk_244E559D0, &type metadata for CPUTimestamp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574186A8);
  }
  return result;
}

unint64_t sub_244DEB4B0()
{
  unint64_t result;

  result = qword_2574186B0;
  if (!qword_2574186B0)
  {
    result = MEMORY[0x2495282F0](&unk_244E559F8, &type metadata for CPUTimestamp.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574186B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryManifest()
{
  return &type metadata for DiscoveryManifest;
}

uint64_t sub_244DEB504(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];
  char v12;
  char v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574186E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEBD04();
  sub_244E4EBEC();
  v13 = 0;
  sub_244E4EA84();
  if (!v3)
  {
    v11[1] = a3;
    v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574186C8);
    sub_244DEBD8C(&qword_2574186E8, (uint64_t (*)(void))sub_244DEBDF4, MEMORY[0x24BEE12A0]);
    sub_244E4EA90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_244DEB65C()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265766F63736964;
  else
    return 0x6E6F6973726576;
}

uint64_t sub_244DEB6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DEBA64(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_244DEB6C8()
{
  sub_244DEBD04();
  return sub_244E4EC04();
}

uint64_t sub_244DEB6F0()
{
  sub_244DEBD04();
  return sub_244E4EC10();
}

uint64_t sub_244DEB718@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_244DEBB78(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_244DEB740(_QWORD *a1)
{
  uint64_t *v1;

  return sub_244DEB504(a1, *v1, v1[1]);
}

uint64_t sub_244DEB758(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418720);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEC7E8();
  sub_244E4EBEC();
  v8[15] = 0;
  sub_244E4EA60();
  if (!v1)
  {
    v8[14] = 1;
    sub_244E4EA60();
    v8[13] = 2;
    sub_244E4EA84();
    v8[12] = 3;
    sub_244E4EA60();
    v8[11] = 4;
    sub_244E4EA60();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_244DEB8E4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_244DEB918 + 4 * byte_244E55AE0[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_244DEB918()
{
  return 0x754274756F79616CLL;
}

uint64_t sub_244DEB93C()
{
  return 0x6E6F6973726576;
}

uint64_t sub_244DEB954()
{
  return 0x6369706F74;
}

uint64_t sub_244DEB968()
{
  return 0x6369706F74627573;
}

uint64_t sub_244DEB980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_244DEC26C(a1, a2);
  *a3 = result;
  return result;
}

void sub_244DEB9A4(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_244DEB9B0()
{
  sub_244DEC7E8();
  return sub_244E4EC04();
}

uint64_t sub_244DEB9D8()
{
  sub_244DEC7E8();
  return sub_244E4EC10();
}

__n128 sub_244DEBA00@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  _OWORD v6[4];
  uint64_t v7;

  sub_244DEC4B0(a1, (uint64_t *)v6);
  if (!v2)
  {
    v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(_QWORD *)(a2 + 64) = v7;
    result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_244DEBA50(_QWORD *a1)
{
  return sub_244DEB758(a1);
}

uint64_t sub_244DEBA64(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265766F63736964 && a2 == 0xEE00736D65744979)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_244DEBB78(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE v9[32];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574186B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_244DEBD04();
  sub_244E4EBE0();
  if (!v1)
  {
    v9[31] = 0;
    v7 = sub_244E4EA18();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2574186C8);
    v9[15] = 1;
    sub_244DEBD8C(&qword_2574186D0, (uint64_t (*)(void))sub_244DEBD48, MEMORY[0x24BEE12D0]);
    sub_244E4EA24();
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_244DEBD04()
{
  unint64_t result;

  result = qword_2574186C0;
  if (!qword_2574186C0)
  {
    result = MEMORY[0x2495282F0](&unk_244E55C88, &type metadata for DiscoveryManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574186C0);
  }
  return result;
}

unint64_t sub_244DEBD48()
{
  unint64_t result;

  result = qword_2574186D8;
  if (!qword_2574186D8)
  {
    result = MEMORY[0x2495282F0](&unk_244E55C60, &type metadata for DiscoveryItem);
    atomic_store(result, (unint64_t *)&qword_2574186D8);
  }
  return result;
}

uint64_t sub_244DEBD8C(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2574186C8);
    v8 = a2();
    result = MEMORY[0x2495282F0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_244DEBDF4()
{
  unint64_t result;

  result = qword_2574186F0;
  if (!qword_2574186F0)
  {
    result = MEMORY[0x2495282F0](&unk_244E55C38, &type metadata for DiscoveryItem);
    atomic_store(result, (unint64_t *)&qword_2574186F0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DiscoveryManifest.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_244DEBE84 + 4 * byte_244E55AEA[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_244DEBEB8 + 4 * byte_244E55AE5[v4]))();
}

uint64_t sub_244DEBEB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DEBEC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DEBEC8);
  return result;
}

uint64_t sub_244DEBED4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DEBEDCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_244DEBEE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DEBEE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryManifest.CodingKeys()
{
  return &type metadata for DiscoveryManifest.CodingKeys;
}

uint64_t destroy for DiscoveryItem()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DiscoveryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DiscoveryItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for DiscoveryItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DiscoveryItem(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DiscoveryItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryItem()
{
  return &type metadata for DiscoveryItem;
}

unint64_t sub_244DEC198()
{
  unint64_t result;

  result = qword_2574186F8;
  if (!qword_2574186F8)
  {
    result = MEMORY[0x2495282F0](&unk_244E55C10, &type metadata for DiscoveryManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574186F8);
  }
  return result;
}

unint64_t sub_244DEC1E0()
{
  unint64_t result;

  result = qword_257418700;
  if (!qword_257418700)
  {
    result = MEMORY[0x2495282F0](&unk_244E55B80, &type metadata for DiscoveryManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418700);
  }
  return result;
}

unint64_t sub_244DEC228()
{
  unint64_t result;

  result = qword_257418708;
  if (!qword_257418708)
  {
    result = MEMORY[0x2495282F0](&unk_244E55BA8, &type metadata for DiscoveryManifest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418708);
  }
  return result;
}

uint64_t sub_244DEC26C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x754274756F79616CLL && a2 == 0xEF4C5255656C646ELL || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6369706F74 && a2 == 0xE500000000000000 || (sub_244E4EAC0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6369706F74627573 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_244E4EAC0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_244DEC4B0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;
  char v35;
  char v36;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418710);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_244DEC7E8();
  sub_244E4EBE0();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v36 = 0;
  v9 = sub_244E4E9F4();
  v11 = v10;
  v30 = v9;
  v35 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_244E4E9F4();
  v31 = v13;
  v28 = v12;
  v34 = 2;
  swift_bridgeObjectRetain();
  v29 = 0;
  v27 = sub_244E4EA18();
  v33 = 3;
  v25 = sub_244E4E9F4();
  v26 = v14;
  v32 = 4;
  swift_bridgeObjectRetain();
  v15 = sub_244E4E9F4();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  v20 = v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  v21 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a2 = v30;
  a2[1] = v11;
  a2[2] = v28;
  a2[3] = v20;
  v23 = v25;
  a2[4] = v27;
  a2[5] = v23;
  a2[6] = v21;
  a2[7] = v19;
  a2[8] = v17;
  return result;
}

unint64_t sub_244DEC7E8()
{
  unint64_t result;

  result = qword_257418718;
  if (!qword_257418718)
  {
    result = MEMORY[0x2495282F0](&unk_244E55D90, &type metadata for DiscoveryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418718);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DiscoveryItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_244DEC878 + 4 * byte_244E55AF4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_244DEC8AC + 4 * byte_244E55AEF[v4]))();
}

uint64_t sub_244DEC8AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DEC8B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x244DEC8BCLL);
  return result;
}

uint64_t sub_244DEC8C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x244DEC8D0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_244DEC8D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_244DEC8DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DiscoveryItem.CodingKeys()
{
  return &type metadata for DiscoveryItem.CodingKeys;
}

unint64_t sub_244DEC8FC()
{
  unint64_t result;

  result = qword_257418728;
  if (!qword_257418728)
  {
    result = MEMORY[0x2495282F0](&unk_244E55D68, &type metadata for DiscoveryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418728);
  }
  return result;
}

unint64_t sub_244DEC944()
{
  unint64_t result;

  result = qword_257418730;
  if (!qword_257418730)
  {
    result = MEMORY[0x2495282F0](&unk_244E55CD8, &type metadata for DiscoveryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418730);
  }
  return result;
}

unint64_t sub_244DEC98C()
{
  unint64_t result;

  result = qword_257418738;
  if (!qword_257418738)
  {
    result = MEMORY[0x2495282F0](&unk_244E55D00, &type metadata for DiscoveryItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257418738);
  }
  return result;
}

uint64_t sub_244DEC9D0()
{
  uint64_t result;
  uint64_t v1;

  result = *MEMORY[0x24BE289B8];
  if (*MEMORY[0x24BE289B8])
  {
    result = sub_244E4E31C();
    qword_257418740 = result;
    *(_QWORD *)algn_257418748 = v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void static XpcEventNotification.register()()
{
  NSObject *v0;
  void *v1;
  _QWORD v2[6];

  if (qword_257414458 != -1)
    swift_once();
  v0 = qword_2574160A0;
  v2[4] = sub_244DECAB4;
  v2[5] = 0;
  v2[0] = MEMORY[0x24BDAC760];
  v2[1] = 1107296256;
  v2[2] = sub_244DECE24;
  v2[3] = &block_descriptor_8;
  v1 = _Block_copy(v2);
  xpc_set_event_stream_handler("com.apple.notifyd.matching", v0, v1);
  _Block_release(v1);
}

void sub_244DECAB4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (xpc_dictionary_get_string(a1, (const char *)*MEMORY[0x24BDACF50]))
  {
    v5 = sub_244E4E400();
    v7 = v6;
    if (qword_2574144C8 != -1)
      swift_once();
    v8 = qword_257418740 == v5 && *(_QWORD *)algn_257418748 == v7;
    if (v8 || (sub_244E4EAC0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (qword_2574144C0 != -1)
        swift_once();
      sub_244DE8AF4();
      v9 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      v10 = (void *)sub_244E4EBD4();
      v19 = (id)sub_244E4E2F8();
      objc_msgSend(v9, sel_setValue_forKey_, v10, v19);

    }
    else
    {
      if (qword_257414408 != -1)
        swift_once();
      v11 = __swift_project_value_buffer(v2, (uint64_t)qword_257419E18);
      sub_244D640E4(v11, (uint64_t)v4);
      v12 = sub_244E4DCD4();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) == 1)
      {
        swift_bridgeObjectRelease();
        sub_244D6412C((uint64_t)v4);
      }
      else
      {
        swift_bridgeObjectRetain();
        v14 = sub_244E4DCBC();
        v15 = sub_244E4E688();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc();
          v17 = swift_slowAlloc();
          v21 = v17;
          *(_DWORD *)v16 = 136315138;
          v19 = v16 + 4;
          swift_bridgeObjectRetain();
          v20 = sub_244D9A70C(v5, v7, &v21);
          sub_244E4E7E4();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_244D61000, v14, v15, "Unexpected event: [ %s ]", v16, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2495283BC](v17, -1, -1);
          MEMORY[0x2495283BC](v16, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_244DECE24(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

ValueMetadata *type metadata accessor for XpcEventNotification()
{
  return &type metadata for XpcEventNotification;
}

uint64_t sub_244DECE94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (v0[16])
  {
    v1 = v0[15];
  }
  else
  {
    v2 = v0[4];
    v1 = *(_QWORD *)(v2 + 16);
    v3 = *(_QWORD *)(v2 + 24);
    v0[15] = v1;
    v0[16] = v3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_244DECEF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143D8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D640E4(v5, (uint64_t)v4);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D6412C((uint64_t)v4);
  }
  else
  {
    v8 = sub_244E4DCBC();
    v9 = sub_244E4E688();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_244D61000, v8, v9, "IssuerPINTask destroyed", v10, 2u);
      MEMORY[0x2495283BC](v10, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  swift_release();

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v1 + 40);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_244DED0A4()
{
  sub_244DECEF8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IssuerPINTask()
{
  return objc_opt_self();
}

uint64_t sub_244DED0E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[253] = v0;
  v2 = sub_244E4C384();
  v1[254] = v2;
  v1[255] = *(_QWORD *)(v2 - 8);
  v1[256] = swift_task_alloc();
  v1[257] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v1[258] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DED16C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  char v8;
  id v9;
  void *v10;
  unsigned __int8 v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48[9];

  if (qword_2574143D8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 2064);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 2056), (uint64_t)qword_257419D88);
  sub_244D640E4(v2, v1);
  v3 = sub_244E4DCD4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  v6 = *(_QWORD *)(v0 + 2064);
  if (v5 == 1)
  {
    sub_244D6412C(*(_QWORD *)(v0 + 2064));
  }
  else
  {
    sub_244D8C8B0(*(_QWORD *)(v0 + 2024), 0x65746164696C6176, 0xEA00000000002928, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  v7 = (uint64_t (*)(void))sub_244E4D86C();
  v8 = v7();
  swift_release();
  if ((v8 & 1) == 0
    || (v9 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults),
        v10 = (void *)sub_244E4E2F8(),
        v11 = objc_msgSend(v9, sel_BOOLForKey_, v10),
        v10,
        v9,
        (v11 & 1) == 0))
  {
    v12 = *(_QWORD **)(v0 + 2024);
    v13 = v12[8];
    v14 = v12[9];
    __swift_project_boxed_opaque_existential_1(v12 + 5, v13);
    v15 = v12[4];
    v16 = *(_QWORD *)(v15 + 32);
    v17 = *(_QWORD *)(v15 + 40);
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 32);
    swift_bridgeObjectRetain();
    v18(v16, v17, v13, v14);
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(v0 + 2072) = 0;
  v19 = *(_QWORD *)(*(_QWORD *)(v0 + 2024) + 16);
  *(_QWORD *)(v0 + 2080) = v19;
  v20 = *(_QWORD *)(v19 + 72);
  v46 = *(_QWORD *)(v19 + 64);
  v47 = v20;
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  v21 = sub_244E13848(v46, v47);
  *(_QWORD *)(v0 + 2088) = v21;
  swift_bridgeObjectRelease();
  if (!v21)
    goto LABEL_17;
  v22 = sub_244D81234();
  *(_QWORD *)(v0 + 2096) = v22;
  if (!v22)
  {
    swift_release();
LABEL_17:
    v35 = *(_QWORD *)(v0 + 2024);
    v36 = *(_QWORD *)(v35 + 32);
    v38 = *(_QWORD *)(v36 + 16);
    v37 = *(_QWORD *)(v36 + 24);
    v46 = 0xD000000000000011;
    v47 = 0x8000000244E5A3A0;
    swift_bridgeObjectRetain();
    sub_244DEE61C(&v46, v48);
    if (*(_QWORD *)(v35 + 80))
    {
      v39 = sub_244E4D3D4();
      sub_244E463C4(v38, v37, 0, 0, 0, 0, v39, v40, 2, 4, 0);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 2024) + 88))(0, 4, 0);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_244E4DAD0();
  if ((*(_BYTE *)(v0 + 2000) & 1) != 0)
    goto LABEL_13;
  v23 = *(_QWORD *)(v0 + 2048);
  v24 = *(_QWORD *)(v0 + 2040);
  v25 = *(_QWORD *)(v0 + 2032);
  v26 = *(double *)(v0 + 1992);
  sub_244E4C378();
  sub_244E4C354();
  v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  if (v26 < v28)
  {
LABEL_13:
    v29 = *(_QWORD *)(v0 + 2024);
    v30 = *(_QWORD *)(v29 + 32);
    v32 = *(_QWORD *)(v30 + 16);
    v31 = *(_QWORD *)(v30 + 24);
    v46 = 0xD000000000000018;
    v47 = 0x8000000244E5A3C0;
    swift_bridgeObjectRetain();
    sub_244DEE61C(&v46, v48);
    if (*(_QWORD *)(v29 + 80))
    {
      v33 = sub_244E4D3D4();
      sub_244E463C4(v32, v31, 0, 0, 0, 0, v33, v34, 2, 6, 0);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 2024) + 88))(0, 6, 0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
LABEL_20:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
  }
  if (qword_2574143C0 != -1)
    swift_once();
  v42 = *(_QWORD *)(*(_QWORD *)(v0 + 2024) + 32);
  v43 = *(_QWORD *)(v42 + 16);
  v44 = *(_QWORD *)(v42 + 24);
  *(_QWORD *)(v0 + 2104) = v44;
  swift_bridgeObjectRetain();
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2112) = v45;
  *v45 = v0;
  v45[1] = sub_244DED7F4;
  return sub_244D7B3E8(v0 + 1640, v43, v44);
}

uint64_t sub_244DED7F4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_244DED854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  char v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v23[2];
  BOOL v24;

  sub_244D70C60(v0 + 1640, v0 + 1048, &qword_257415780);
  if (sub_244D6BA34(v0 + 1048) == 1)
  {
    v1 = *(_QWORD *)(v0 + 2024);
    v2 = *(_QWORD *)(v1 + 32);
    v4 = *(_QWORD *)(v2 + 16);
    v3 = *(_QWORD *)(v2 + 24);
    v23[0] = 0xD000000000000022;
    v23[1] = 0x8000000244E5A3E0;
    swift_bridgeObjectRetain();
    sub_244DEE61C(v23, &v24);
    if (*(_QWORD *)(v1 + 80))
    {
      v5 = sub_244E4D3D4();
      sub_244E463C4(v4, v3, 0, 0, 0, 0, v5, v6, 2, 30, 0);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 2024) + 88))(0, 30, 0);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v7 = 0;
  }
  else
  {
    v8 = *(_QWORD *)(v0 + 2024);
    memcpy((void *)(v0 + 1344), (const void *)(v0 + 1048), 0x128uLL);
    sub_244D77AB4(v0 + 704);
    memcpy((void *)(v0 + 360), (const void *)(v0 + 704), 0x151uLL);
    v9 = *(_QWORD *)(v8 + 32);
    nullsub_1(v0 + 360);
    v9 += 48;
    swift_beginAccess();
    sub_244D70C60(v9, v0 + 16, &qword_257414F80);
    sub_244D70C60(v0 + 360, v9, &qword_257414F80);
    sub_244D6BA4C(v0 + 704);
    sub_244DC3C04(v0 + 16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
    v10 = (uint64_t (*)(void))sub_244E4D86C();
    v11 = v10();
    swift_release();
    if ((v11 & 1) != 0)
    {
      v12 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
      v13 = (void *)sub_244E4E2F8();
      objc_msgSend(v12, sel_integerForKey_, v13);

    }
    v14 = *(_QWORD *)(v0 + 2024);
    if (*(_QWORD *)(v0 + 1600))
    {
      v15 = *(_QWORD *)(v14 + 32);
      swift_retain();
      v16 = sub_244E4D3BC();
    }
    else
    {
      sub_244D70C60(v0 + 1576, v0 + 1976, &qword_257416D50);
      sub_244D70C60(v0 + 1976, v0 + 1960, &qword_257416D50);
      v18 = *(_QWORD *)(v0 + 1968);
      v15 = *(_QWORD *)(v14 + 32);
      swift_retain();
      if (v18)
        v16 = sub_244E4D3C8();
      else
        v16 = sub_244E4D3E0();
    }
    *(_QWORD *)(v15 + 424) = v16;
    *(_QWORD *)(v15 + 432) = v17;
    swift_bridgeObjectRelease();
    swift_release();
    sub_244E4DCB0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244E4DC20();
    swift_bridgeObjectRelease();
    v19 = objc_allocWithZone(MEMORY[0x24BDD1518]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = (void *)sub_244E4E2F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v19, sel_initWithString_, v20);

    v21 = objc_allocWithZone((Class)sub_244E4CB40());
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_244E4CB34();
    swift_release();
    swift_release();
    sub_244DEF754((uint64_t *)(v0 + 1640));
    sub_244D7E9EC(v0 + 704);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
}

uint64_t sub_244DEDCE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = swift_allocObject();
  swift_weakInit();
  v6 = *(_QWORD *)(v1 + 32);
  if ((*(_BYTE *)(v6 + 400) & 1) != 0)
  {
    v7 = *(_QWORD *)(v1 + 104);
    if (v7)
      sub_244E03390(v7, v5);
    return swift_release();
  }
  else
  {
    v9 = *(_QWORD *)(v6 + 392);
    v10 = qword_2574143D8;
    swift_retain_n();
    if (v10 != -1)
      swift_once();
    v11 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
    sub_244D640E4(v11, (uint64_t)v4);
    v12 = sub_244E4DCD4();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v12) == 1)
    {
      sub_244D6412C((uint64_t)v4);
    }
    else
    {
      v14 = sub_244E4DCBC();
      v15 = sub_244E4E688();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        v21 = swift_slowAlloc();
        v22 = v9;
        v23 = v21;
        *(_DWORD *)v16 = 136315138;
        v20 = v16 + 4;
        sub_244D9BEAC();
        v17 = sub_244E4EB2C();
        v22 = sub_244D9A70C(v17, v18, &v23);
        sub_244E4E7E4();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_244D61000, v14, v15, "[IssuerPIN] pinAuthNeeded skipped due to %s", v16, 0xCu);
        v19 = v21;
        swift_arrayDestroy();
        MEMORY[0x2495283BC](v19, -1, -1);
        MEMORY[0x2495283BC](v16, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v12);
    }
    sub_244DEDF8C();
    return swift_release_n();
  }
}

uint64_t sub_244DEDF8C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t result;
  uint64_t v10;
  _BYTE v12[344];
  _BYTE v13[344];

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v0);
  v2 = v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0) + 8;
  if (qword_2574143D8 != -1)
    swift_once();
  v3 = __swift_project_value_buffer(v0, (uint64_t)qword_257419D88);
  sub_244D640E4(v3, (uint64_t)v2);
  v4 = sub_244E4DCD4();
  v5 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4) == 1)
  {
    sub_244D6412C((uint64_t)v2);
  }
  else
  {
    v6 = sub_244E4DCBC();
    v7 = sub_244E4E688();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v8 = 0;
      _os_log_impl(&dword_244D61000, v6, v7, "[IssuerPIN] pinAuthNeeded cleanup handler called", v8, 2u);
      MEMORY[0x2495283BC](v8, -1, -1);
    }

    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v2, v4);
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = *(_QWORD *)(result + 32);
    swift_retain();
    swift_release();
    sub_244D6B9B4((uint64_t)v12);
    swift_beginAccess();
    sub_244D70C60(v10 + 48, (uint64_t)v13, &qword_257414F80);
    sub_244D70C60((uint64_t)v12, v10 + 48, &qword_257414F80);
    sub_244DC3C04((uint64_t)v13, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
    *(_QWORD *)(v10 + 408) = 0;
    *(_QWORD *)(v10 + 416) = 0;
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_244DEE1B0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  _QWORD *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  NSObject *v37;
  os_log_type_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE v46[344];
  _BYTE v47[344];
  _BYTE v48[352];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v41 - v6;
  v8 = v0[4] + 48;
  swift_beginAccess();
  sub_244D70C60(v8, (uint64_t)v47, &qword_257414F80);
  sub_244D70C60((uint64_t)v47, (uint64_t)v48, &qword_257414F80);
  result = sub_244D6BA34((uint64_t)v48);
  if ((_DWORD)result == 1)
    return result;
  memcpy(v46, v48, 0x151uLL);
  v10 = v1[2];
  v11 = *(_QWORD *)(v10 + 72);
  v44 = *(_QWORD *)(v10 + 64);
  v45 = v11;
  swift_bridgeObjectRetain();
  sub_244DC3C04((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244DC313C);
  sub_244E4E3F4();
  v12 = sub_244E13848(v44, v45);
  swift_bridgeObjectRelease();
  if (!v12)
  {
    result = sub_244DC3C04((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
    v27 = v1[4];
    v28 = 4;
LABEL_21:
    *(_QWORD *)(v27 + 392) = v28;
    *(_BYTE *)(v27 + 400) = 0;
    return result;
  }
  v13 = v1[8];
  v14 = v1[9];
  v42 = v1;
  __swift_project_boxed_opaque_existential_1(v1 + 5, v13);
  v43 = v12;
  v16 = *(_QWORD *)(v12 + 32);
  v15 = *(_QWORD *)(v12 + 40);
  v17 = *(uint64_t (**)(uint64_t, uint64_t, _BYTE *, uint64_t, uint64_t, uint64_t))(v14 + 104);
  swift_bridgeObjectRetain();
  v18 = v17(v16, v15, v46, 1, v13, v14);
  v20 = v19;
  swift_bridgeObjectRelease();
  if (!v20)
  {
LABEL_13:
    if (qword_2574143D8 != -1)
      swift_once();
    v29 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
    sub_244D640E4(v29, (uint64_t)v5);
    v30 = sub_244E4DCD4();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v5, 1, v30);
    v33 = v42;
    if (v32 == 1)
    {
      sub_244DC3C04((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
      swift_release();
      result = sub_244D6412C((uint64_t)v5);
    }
    else
    {
      v34 = sub_244E4DCBC();
      v35 = sub_244E4E688();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v36 = 0;
        _os_log_impl(&dword_244D61000, v34, v35, "cardBlob failed", v36, 2u);
        MEMORY[0x2495283BC](v36, -1, -1);
      }
      sub_244DC3C04((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
      swift_release();

      result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v5, v30);
    }
    v27 = v33[4];
    v28 = 26;
    goto LABEL_21;
  }
  v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0)
    v21 = v18 & 0xFFFFFFFFFFFFLL;
  if (!v21)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (qword_2574143D8 != -1)
    swift_once();
  v22 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D640E4(v22, (uint64_t)v7);
  v23 = sub_244E4DCD4();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v23);
  v26 = v42;
  if (v25 == 1)
  {
    sub_244DC3C04((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
    swift_release();
    sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v37 = sub_244E4DCBC();
    v38 = sub_244E4E688();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v39 = 0;
      _os_log_impl(&dword_244D61000, v37, v38, "cardBlob encrypted", v39, 2u);
      MEMORY[0x2495283BC](v39, -1, -1);
    }
    sub_244DC3C04((uint64_t)v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
    swift_release();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
  }
  v40 = v26[4];
  *(_QWORD *)(v40 + 408) = v18;
  *(_QWORD *)(v40 + 416) = v20;
  return swift_bridgeObjectRelease();
}

uint64_t sub_244DEE61C@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  BOOL *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  v8 = a1[1];
  if (qword_2574143D8 != -1)
    swift_once();
  v10 = __swift_project_value_buffer(v5, (uint64_t)qword_257419D88);
  sub_244D640E4(v10, (uint64_t)v7);
  v11 = sub_244E4DCD4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v11);
  if (v13 == 1)
  {
    result = sub_244D6412C((uint64_t)v7);
  }
  else
  {
    v24 = v9;
    swift_bridgeObjectRetain_n();
    v15 = sub_244E4DCBC();
    v16 = sub_244E4E67C();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v23 = v2;
      v18 = (uint8_t *)v17;
      v21 = swift_slowAlloc();
      v26 = v21;
      v22 = a2;
      *(_DWORD *)v18 = 136446210;
      v20 = v18 + 4;
      swift_bridgeObjectRetain();
      v25 = sub_244D9A70C(v24, v8, &v26);
      a2 = v22;
      sub_244E4E7E4();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_244D61000, v15, v16, "%{public}s", v18, 0xCu);
      v19 = v21;
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v19, -1, -1);
      MEMORY[0x2495283BC](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  }
  *a2 = v13 == 1;
  return result;
}

void sub_244DEE878(void *a1, char a2, char a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t (*v21)();
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[344];
  _BYTE v42[352];

  v6 = v5;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v39);
  v13 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  v14 = (char *)&v35 - v13;
  v15 = v6[13];
  if (v15)
  {
    v36 = a4;
    v37 = a5;
    v38 = (char *)&v35 - v13;
    v16 = (_QWORD *)v6[4];
    v18 = v16[2];
    v17 = v16[3];
    v19 = v16[54];
    v35 = v16[53];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = sub_244E4D1D0();
    if (*(_QWORD *)(v15 + 32))
      sub_244E463C4(v18, v17, a2 & 1, a3 & 1, v36, v37, v35, v19, v20 & 1, 0, 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v38;
  }
  swift_retain();
  v21 = sub_244D7106C();
  v23 = v22;
  sub_244D70C60(v22, (uint64_t)v41, &qword_257414F80);
  sub_244D70C60((uint64_t)v41, (uint64_t)v42, &qword_257414F80);
  if (sub_244D6BA34((uint64_t)v42) != 1)
  {
    v24 = *(void **)(v23 + 216);
    *(_QWORD *)(v23 + 216) = a1;
    v25 = a1;

  }
  ((void (*)(uint64_t *, _QWORD))v21)(&v40, 0);
  swift_release();
  sub_244DEE1B0();
  v26 = *(void **)(v6[2] + 104);
  if (v26)
  {
    v27 = v26;
    v28 = sub_244E4CA98();

    if ((v28 & 1) != 0)
    {
      if (qword_2574143D8 != -1)
        swift_once();
      v29 = __swift_project_value_buffer(v39, (uint64_t)qword_257419D88);
      sub_244D640E4(v29, (uint64_t)v14);
      v30 = sub_244E4DCD4();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v14, 1, v30) == 1)
      {
        sub_244D6412C((uint64_t)v14);
      }
      else
      {
        v32 = sub_244E4DCBC();
        v33 = sub_244E4E688();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v34 = 0;
          _os_log_impl(&dword_244D61000, v32, v33, "Issuer PIN, returning data early", v34, 2u);
          MEMORY[0x2495283BC](v34, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v30);
      }
      sub_244DEEC1C();
    }
  }
}

uint64_t sub_244DEEB44(uint64_t result, char a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v6 = result;
  v7 = *(_QWORD *)(v5 + 104);
  if (v7 && *(_QWORD *)(v7 + 32))
  {
    v12 = *(_QWORD **)(v5 + 32);
    v13 = v12[54];
    v17 = v12[53];
    v14 = v12[2];
    v15 = v12[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_244E463C4(v14, v15, a2 & 1, a3 & 1, a4, a5, v17, v13, 2, v6, 0);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v16 = *(_QWORD *)(v5 + 32);
  *(_QWORD *)(v16 + 392) = v6;
  *(_BYTE *)(v16 + 400) = 0;
  return result;
}

uint64_t sub_244DEEC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  char v22;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  void *v42;
  id v43;
  id v44;
  void *v45;
  _QWORD v46[4];
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v50[368];
  _BYTE v51[216];
  void *v52;
  _BYTE v53[344];
  _BYTE v54[368];
  _QWORD v55[43];
  uint64_t v56[44];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)v46 - v7;
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)v46 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v46 - v12;
  if (qword_2574143D8 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D640E4(v14, (uint64_t)v13);
  v15 = sub_244E4DCD4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v13, 1, v15) == 1)
  {
    sub_244D6412C((uint64_t)v13);
    if ((*(_BYTE *)(v1 + 112) & 1) == 0)
      goto LABEL_5;
  }
  else
  {
    sub_244D8C8B0(v1, 0xD00000000000001BLL, 0x8000000244E5A340, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    if ((*(_BYTE *)(v1 + 112) & 1) == 0)
    {
LABEL_5:
      *(_BYTE *)(v1 + 112) = 1;
      v18 = *(_QWORD *)(v1 + 32);
      if ((*(_BYTE *)(v18 + 400) & 1) != 0)
      {
        swift_beginAccess();
        sub_244D70C60(v18 + 48, (uint64_t)v55, &qword_257414F80);
        sub_244D70C60((uint64_t)v55, (uint64_t)v56, &qword_257414F80);
        if (sub_244D6BA34((uint64_t)v56) == 1 || (v19 = *(_QWORD *)(v18 + 416)) == 0)
        {
          sub_244D640E4(v14, (uint64_t)v8);
          if (v17(v8, 1, v15) == 1)
          {
            sub_244D6412C((uint64_t)v8);
          }
          else
          {
            v34 = sub_244E4DCBC();
            v35 = sub_244E4E67C();
            if (os_log_type_enabled(v34, v35))
            {
              v36 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v36 = 0;
              _os_log_impl(&dword_244D61000, v34, v35, "issuer PIN, no transaction data or card blob", v36, 2u);
              MEMORY[0x2495283BC](v36, -1, -1);
            }

            (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
          }
          return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1 + 88))(0, 26, 0);
        }
        else
        {
          v20 = *(void **)(*(_QWORD *)(v1 + 16) + 104);
          v48 = *(_QWORD *)(v18 + 408);
          v46[1] = v19;
          if (v20)
          {
            sub_244DC3C04((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244DC313C);
            swift_bridgeObjectRetain();
            v21 = v20;
            if ((sub_244E4CA98() & 1) == 0)
            {
              sub_244E4DCB0();
              swift_bridgeObjectRetain();
              v22 = sub_244E4DC20();
              swift_bridgeObjectRelease();
              if ((v22 & 1) != 0)
                sub_244DEE1B0();
            }

          }
          else
          {
            sub_244DC3C04((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244DC313C);
            swift_bridgeObjectRetain();
          }
          v37 = *(_QWORD *)(v1 + 32);
          v38 = *(uint8_t **)(v37 + 16);
          v49 = *(_QWORD *)(v37 + 24);
          v39 = v56[12];
          v46[2] = v56[40];
          v40 = v37 + 48;
          swift_beginAccess();
          sub_244D70C60(v40, (uint64_t)v53, &qword_257414F80);
          sub_244D70C60((uint64_t)v53, (uint64_t)v51, &qword_257414F80);
          sub_244D70C60((uint64_t)v53, (uint64_t)v54, &qword_257414F80);
          v41 = sub_244D6BA34((uint64_t)v54);
          v46[3] = v39;
          v47 = v38;
          if (v41 == 1)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            v42 = v52;
            if (v52)
            {
              sub_244D70C60((uint64_t)v51, (uint64_t)v50, &qword_257414F80);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_244DC3C04((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244DC313C);
              v43 = v42;
              sub_244DC3C04((uint64_t)v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
              sub_244E4D1D0();

            }
            else
            {
              sub_244D70C60((uint64_t)v51, (uint64_t)v50, &qword_257414F80);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_244DC3C04((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244DC313C);
              sub_244DC3C04((uint64_t)v50, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
            }
          }
          v44 = objc_allocWithZone((Class)sub_244E4C744());
          v45 = (void *)sub_244E4C738();
          (*(void (**)(void *, _QWORD, _QWORD))(v1 + 88))(v45, *(_QWORD *)(*(_QWORD *)(v1 + 32) + 392), *(unsigned __int8 *)(*(_QWORD *)(v1 + 32) + 400));

          return sub_244DC3C04((uint64_t)v55, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_244D6BBFC);
        }
      }
      else
      {
        v24 = *(_QWORD *)(v18 + 392);
        sub_244D640E4(v14, (uint64_t)v11);
        if (v17(v11, 1, v15) == 1)
        {
          sub_244D6412C((uint64_t)v11);
        }
        else
        {
          v28 = sub_244E4DCBC();
          v29 = sub_244E4E67C();
          if (os_log_type_enabled(v28, v29))
          {
            v49 = v24;
            v30 = (uint8_t *)swift_slowAlloc();
            v48 = swift_slowAlloc();
            v56[0] = v48;
            *(_DWORD *)v30 = 136315138;
            v47 = v30 + 4;
            v31 = sub_244E4CB7C();
            v55[0] = sub_244D9A70C(v31, v32, v56);
            sub_244E4E7E4();
            v24 = v49;
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_244D61000, v28, v29, "has error %s", v30, 0xCu);
            v33 = v48;
            swift_arrayDestroy();
            MEMORY[0x2495283BC](v33, -1, -1);
            MEMORY[0x2495283BC](v30, -1, -1);
          }

          (*(void (**)(char *, uint64_t))(v16 + 8))(v11, v15);
        }
        return (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(v1 + 88))(0, v24, 0);
      }
    }
  }
  sub_244D640E4(v14, (uint64_t)v5);
  if (v17(v5, 1, v15) == 1)
    return sub_244D6412C((uint64_t)v5);
  v25 = sub_244E4DCBC();
  v26 = sub_244E4E688();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_244D61000, v25, v26, "already returned, skipping return data/error", v27, 2u);
    MEMORY[0x2495283BC](v27, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v15);
}

uint64_t sub_244DEF3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  void *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _BYTE v25[352];

  v9 = v8;
  if (qword_257414480 != -1)
    swift_once();
  v18 = (void *)qword_257419EF8;
  *(_QWORD *)(v8 + 24) = qword_257419EF8;
  v19 = qword_257414470;
  v20 = v18;
  if (v19 != -1)
    swift_once();
  sub_244DA4EF4(v9 + 40);
  *(_BYTE *)(v9 + 112) = 0;
  *(_QWORD *)(v9 + 120) = 0;
  *(_QWORD *)(v9 + 128) = 0;
  *(_QWORD *)(v9 + 16) = a5;
  *(_QWORD *)(v9 + 88) = a7;
  *(_QWORD *)(v9 + 96) = a8;
  *(_QWORD *)(v9 + 80) = a6;
  type metadata accessor for PINStore();
  v21 = swift_allocObject();
  sub_244D6B9B4((uint64_t)v25);
  sub_244D70C60((uint64_t)v25, v21 + 48, &qword_257414F80);
  *(_QWORD *)(v21 + 392) = 0;
  *(_BYTE *)(v21 + 400) = 1;
  *(_QWORD *)(v21 + 408) = 0;
  *(_QWORD *)(v21 + 416) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)(v21 + 424) = sub_244E4D3D4();
  *(_QWORD *)(v21 + 432) = v22;
  *(_QWORD *)(v21 + 16) = a1;
  *(_QWORD *)(v21 + 24) = a2;
  *(_QWORD *)(v21 + 32) = a3;
  *(_QWORD *)(v21 + 40) = a4;
  *(_QWORD *)(v9 + 32) = v21;
  type metadata accessor for PINHelper();
  v23 = (_QWORD *)swift_allocObject();
  v23[2] = 0;
  v23[3] = a5;
  v23[4] = a6;
  *(_QWORD *)(v9 + 104) = v23;
  return v9;
}

uint64_t sub_244DEF534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v16;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v16 - v6;
  if (qword_2574143D8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D640E4(v8, (uint64_t)v7);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v7, 1, v9) == 1)
  {
    sub_244D6412C((uint64_t)v7);
  }
  else
  {
    sub_244D8C8B0(v1, 0xD000000000000018, 0x8000000244E5A320, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }
  sub_244D640E4(v8, (uint64_t)v5);
  if (v11(v5, 1, v9) == 1)
  {
    sub_244D6412C((uint64_t)v5);
  }
  else
  {
    v12 = sub_244E4DCBC();
    v13 = sub_244E4E67C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v14 = 0;
      _os_log_impl(&dword_244D61000, v12, v13, "Normal return data after UI", v14, 2u);
      MEMORY[0x2495283BC](v14, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v9);
  }
  return sub_244DEEC1C();
}

uint64_t sub_244DEF730()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t *sub_244DEF754(uint64_t *a1)
{
  sub_244D7F258(*a1, a1[1]);
  return a1;
}

_QWORD *sub_244DEF7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = (_QWORD *)v7;
  *(_QWORD *)(v7 + 104) = 0;
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  *(_QWORD *)(v7 + 32) = a1;
  *(_QWORD *)(v7 + 40) = a2;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  *(_BYTE *)(v7 + 96) = a7;
  sub_244E4DCB0();
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = sub_244E4DC98();
  v11 = v10;
  swift_bridgeObjectRelease();
  v8[8] = v9;
  v8[9] = v11;
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = sub_244E4DC98();
  v14 = v13;
  swift_bridgeObjectRelease();
  v8[10] = v12;
  v8[11] = v14;
  return v8;
}

uint64_t sub_244DEF920()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PaymentTerminalContext()
{
  return objc_opt_self();
}

uint64_t sub_244DEF98C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  __int128 v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  double v93;
  char *v94;
  double v95;
  double v96;
  uint64_t result;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  unint64_t v112;
  _OWORD v113[2];
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  char v122;
  char v123;
  char v124;
  char v125;
  char v126;

  v1 = v0;
  v108 = sub_244E4C384();
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v106 = (char *)&v105 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = *v0;
  v4 = *(_QWORD *)(*v0 + 72);
  v117 = *(_QWORD *)(*v0 + 64);
  v118 = v4;
  swift_bridgeObjectRetain_n();
  sub_244E4E3F4();
  v5 = sub_244E13848(v117, v118);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v111 = v5;
  if (v5)
  {
    v6 = *(_QWORD *)(v5 + 48);
    v7 = *(_QWORD *)(v5 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  v8 = v1[4];
  v9 = v1[5];
  v110 = v1;
  __swift_project_boxed_opaque_existential_1(v1 + 1, v8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v9 + 40))(&v117, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415358);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_244E55ED0;
  *(_QWORD *)(v10 + 32) = sub_244E4DB30();
  *(_QWORD *)(v10 + 40) = v11;
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 72) = MEMORY[0x24BEE0D00];
  v13 = v12;
  *(_QWORD *)(v10 + 48) = 0xD00000000000001DLL;
  *(_QWORD *)(v10 + 56) = 0x8000000244E5A4A0;
  *(_QWORD *)(v10 + 80) = sub_244E4DB9C();
  *(_QWORD *)(v10 + 88) = v14;
  v16 = *(_QWORD *)(v3 + 32);
  v15 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v10 + 120) = v13;
  *(_QWORD *)(v10 + 96) = v16;
  *(_QWORD *)(v10 + 104) = v15;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v10 + 128) = sub_244E4DBC0();
  *(_QWORD *)(v10 + 136) = v17;
  v19 = *(_QWORD *)(v3 + 16);
  v18 = *(_QWORD *)(v3 + 24);
  *(_QWORD *)(v10 + 168) = v13;
  *(_QWORD *)(v10 + 144) = v19;
  *(_QWORD *)(v10 + 152) = v18;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v10 + 176) = sub_244E4DB60();
  *(_QWORD *)(v10 + 184) = v20;
  swift_bridgeObjectRetain();
  v21 = sub_244DABCC0(6);
  v23 = v22;
  v25 = v24;
  v27 = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v114 = 3026478;
  *((_QWORD *)&v114 + 1) = 0xE300000000000000;
  *(_QWORD *)&v113[0] = MEMORY[0x24952763C](v21, v23, v25, v27);
  *((_QWORD *)&v113[0] + 1) = v28;
  sub_244E4E3E8();
  v29 = MEMORY[0x249527A74](*(_QWORD *)&v113[0], *((_QWORD *)&v113[0] + 1));
  v31 = v30;
  v109 = v32;
  v34 = v33;
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v3 + 64);
  v36 = *(_QWORD *)(v3 + 72);
  swift_bridgeObjectRetain();
  v37 = sub_244D8C808(6uLL, v35, v36);
  v39 = v38;
  v41 = v40;
  v43 = v42;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 216) = MEMORY[0x24BEE1E08];
  v44 = (_QWORD *)swift_allocObject();
  *(_QWORD *)(v10 + 192) = v44;
  *(_QWORD *)&v114 = v37;
  *((_QWORD *)&v114 + 1) = v39;
  v115 = v41;
  v116 = v43;
  swift_bridgeObjectRetain();
  v45 = MEMORY[0x24952763C](v29, v31, v109, v34);
  v47 = v46;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v113[0] = v45;
  *((_QWORD *)&v113[0] + 1) = v47;
  sub_244DF01C0();
  sub_244E4E3E8();
  v44[2] = MEMORY[0x249527A74](*(_QWORD *)&v113[0], *((_QWORD *)&v113[0] + 1));
  v44[3] = v48;
  v44[4] = v49;
  v44[5] = v50;
  v51 = MEMORY[0x24BEE0D00];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 224) = sub_244E4DB0C();
  *(_QWORD *)(v10 + 232) = v52;
  *(_QWORD *)&v114 = 0;
  *((_QWORD *)&v114 + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  v54 = *((_QWORD *)&v114 + 1);
  v53 = v114;
  *(_QWORD *)(v10 + 264) = v51;
  *(_OWORD *)(v10 + 240) = __PAIR128__(v54, v53);
  *(_QWORD *)(v10 + 272) = sub_244E4DB84();
  *(_QWORD *)(v10 + 280) = v55;
  *(_QWORD *)&v114 = 0;
  *((_QWORD *)&v114 + 1) = 0xE000000000000000;
  LOBYTE(v113[0]) = *(_BYTE *)(v3 + 96);
  sub_244E4E934();
  v57 = *((_QWORD *)&v114 + 1);
  v56 = v114;
  *(_QWORD *)(v10 + 312) = v51;
  *(_OWORD *)(v10 + 288) = __PAIR128__(v57, v56);
  *(_QWORD *)(v10 + 320) = sub_244E4DB90();
  *(_QWORD *)(v10 + 328) = v58;
  v60 = v119;
  v59 = v120;
  *(_QWORD *)(v10 + 360) = v51;
  if (v59)
  {
    v61 = v59;
  }
  else
  {
    v60 = 0x7974706D65;
    v61 = 0xE500000000000000;
  }
  *(_QWORD *)(v10 + 336) = v60;
  *(_QWORD *)(v10 + 344) = v61;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v10 + 368) = sub_244E4DBA8();
  *(_QWORD *)(v10 + 376) = v62;
  v63 = v121;
  v64 = MEMORY[0x24BEE1328];
  *(_QWORD *)(v10 + 408) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v10 + 384) = v63;
  *(_QWORD *)(v10 + 416) = sub_244E4DB3C();
  *(_QWORD *)(v10 + 424) = v65;
  v66 = v122;
  *(_QWORD *)(v10 + 456) = v64;
  *(_BYTE *)(v10 + 432) = v66;
  *(_QWORD *)(v10 + 464) = sub_244E4DB78();
  *(_QWORD *)(v10 + 472) = v67;
  v68 = v123;
  *(_QWORD *)(v10 + 504) = v64;
  *(_BYTE *)(v10 + 480) = v68;
  *(_QWORD *)(v10 + 512) = sub_244E4DB24();
  *(_QWORD *)(v10 + 520) = v69;
  v70 = v124;
  *(_QWORD *)(v10 + 552) = v64;
  *(_BYTE *)(v10 + 528) = v70;
  *(_QWORD *)(v10 + 560) = sub_244E4DB18();
  *(_QWORD *)(v10 + 568) = v71;
  v72 = v125;
  *(_QWORD *)(v10 + 600) = v64;
  *(_BYTE *)(v10 + 576) = v72;
  *(_QWORD *)(v10 + 608) = sub_244E4DB6C();
  *(_QWORD *)(v10 + 616) = v73;
  v74 = v126;
  *(_QWORD *)(v10 + 648) = v64;
  *(_BYTE *)(v10 + 624) = v74;
  *(_QWORD *)(v10 + 656) = sub_244E4DBB4();
  *(_QWORD *)(v10 + 664) = v75;
  *(_QWORD *)&v114 = 0;
  *((_QWORD *)&v114 + 1) = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  swift_bridgeObjectRelease();
  v76 = v114;
  *(_QWORD *)(v10 + 696) = v51;
  *(_OWORD *)(v10 + 672) = v76;
  sub_244DA8660((uint64_t)&v117);
  v77 = sub_244DB2520(v10);
  v78 = v111;
  if (!v111 || (swift_retain(), v79 = sub_244D81234(), swift_release(), !v79))
  {
    v80 = v110;
    goto LABEL_25;
  }
  v80 = v110;
  v81 = v110[7];
  if (!v81 || (*(_QWORD *)(v78 + 16) != v110[6] || v81 != *(_QWORD *)(v78 + 24)) && (sub_244E4EAC0() & 1) == 0)
  {
    swift_release();
    goto LABEL_25;
  }
  v83 = *(_QWORD *)(v79 + 120);
  v82 = *(_QWORD *)(v79 + 128);
  v84 = HIBYTE(v82) & 0xF;
  if ((v82 & 0x2000000000000000) == 0)
    v84 = v83 & 0xFFFFFFFFFFFFLL;
  if (v84)
  {
    v85 = sub_244E4DB54();
    v87 = v86;
    v116 = v51;
    *(_QWORD *)&v114 = v83;
    *((_QWORD *)&v114 + 1) = v82;
    sub_244D6B058(&v114, v113);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v112 = v77;
    sub_244DE47E8(v113, v85, v87, isUniquelyReferenced_nonNull_native);
    v77 = v112;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (sub_244D662F0())
  {
    v89 = sub_244E4DB48();
    v91 = v90;
    v116 = v51;
    *(_QWORD *)&v114 = 0x44455249505845;
    *((_QWORD *)&v114 + 1) = 0xE700000000000000;
    sub_244D6B058(&v114, v113);
    v92 = swift_isUniquelyReferenced_nonNull_native();
    v112 = v77;
    sub_244DE47E8(v113, v89, v91, v92);
    v77 = v112;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_25:
    ((void (*)(unint64_t, _QWORD))v80[8])(v77, 0);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v93 = *(double *)(v79 + 24);
  v94 = v106;
  sub_244E4C378();
  sub_244E4C354();
  v96 = v95;
  result = (*(uint64_t (**)(char *, uint64_t))(v107 + 8))(v94, v108);
  v98 = v93 - v96;
  if ((~COERCE__INT64(v93 - v96) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v98 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v98 < 9.22337204e18)
  {
    v99 = (uint64_t)v98;
    v100 = sub_244E4DB48();
    v102 = v101;
    *(_QWORD *)&v113[0] = v99 / 60;
    *(_QWORD *)&v114 = sub_244E4EAA8();
    *((_QWORD *)&v114 + 1) = v103;
    sub_244E4E3F4();
    *(_QWORD *)&v113[0] = v99 % 60;
    sub_244E4EAA8();
    sub_244E4E3F4();
    swift_bridgeObjectRelease();
    sub_244E4E3F4();
    v116 = MEMORY[0x24BEE0D00];
    sub_244D6B058(&v114, v113);
    v104 = swift_isUniquelyReferenced_nonNull_native();
    v112 = v77;
    sub_244DE47E8(v113, v100, v102, v104);
    v77 = v112;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_244DF019C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_244DF01C0()
{
  unint64_t result;

  result = qword_2574189B8;
  if (!qword_2574189B8)
  {
    result = MEMORY[0x2495282F0](MEMORY[0x24BEE1E20], MEMORY[0x24BEE1E08]);
    atomic_store(result, (unint64_t *)&qword_2574189B8);
  }
  return result;
}

uint64_t destroy for StatusTask(uint64_t a1)
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for StatusTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = a2 + 8;
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v5;
  v6 = v5;
  v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 8, v4, v6);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for StatusTask(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1(a1 + 1, a2 + 1);
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[9];
  a1[8] = a2[8];
  a1[9] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for StatusTask(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for StatusTask(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StatusTask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for StatusTask()
{
  return &type metadata for StatusTask;
}

uint64_t sub_244DF0494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint8_t *v24;
  uint8_t *v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  char v35;
  uint64_t result;
  uint64_t v37;
  char v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint8_t *v42;
  uint8_t *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;

  v3 = v2;
  v47 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v11 = (char *)&v44 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v44 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v44 - v15;
  if (qword_2574143D8 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v5, (uint64_t)qword_257419D88);
  sub_244D91E3C(v17, (uint64_t)v16, &qword_2574145A0);
  v18 = sub_244E4DCD4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v16, 1, v18) == 1)
  {
    sub_244D66F54((uint64_t)v16, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v3, 0xD000000000000014, 0x8000000244E5AE50, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_voiceOverRequiresReEnabling) == 1)
  {
    sub_244D91E3C(v17, (uint64_t)v14, &qword_2574145A0);
    if (v20(v14, 1, v18) == 1)
    {
      sub_244D66F54((uint64_t)v14, &qword_2574145A0);
    }
    else
    {
      v45 = v19;
      v21 = sub_244E4DCBC();
      v22 = sub_244E4E688();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v46 = v8;
        v24 = v23;
        *(_WORD *)v23 = 0;
        _os_log_impl(&dword_244D61000, v21, v22, "attempting to restore VO", v23, 2u);
        v25 = v24;
        v8 = v46;
        MEMORY[0x2495283BC](v25, -1, -1);
      }

      v19 = v45;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v18);
    }
    v26 = objc_msgSend((id)objc_opt_self(), sel_server);
    if (v26)
    {
      v27 = v26;
      objc_msgSend(v26, sel_setVoiceOverEnabled_, 1);

    }
  }
  v28 = sub_244E4D98C();
  v30 = v47;
  if (v28 == v47 && v29 == a2)
  {
    swift_bridgeObjectRelease();
LABEL_18:
    sub_244D91E3C(v17, (uint64_t)v11, &qword_2574145A0);
    if (v20(v11, 1, v18) == 1)
    {
      sub_244D66F54((uint64_t)v11, &qword_2574145A0);
    }
    else
    {
      v32 = sub_244E4DCBC();
      v33 = sub_244E4E688();
      if (os_log_type_enabled(v32, v33))
      {
        v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v34 = 0;
        _os_log_impl(&dword_244D61000, v32, v33, "cleaning invalidated TapUI", v34, 2u);
        MEMORY[0x2495283BC](v34, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v19 + 8))(v11, v18);
    }
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readTask))
    {
      swift_retain();
      sub_244E176E0(0);
      swift_release();
    }
    if (*(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_transactionCompletion))
      objc_msgSend(*(id *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_client), sel_readFeedback_, 6);
    v35 = 0;
    return sub_244DFA8A4(v35);
  }
  v46 = v8;
  v31 = sub_244E4EAC0();
  swift_bridgeObjectRelease();
  if ((v31 & 1) != 0)
    goto LABEL_18;
  if (sub_244E4D974() == v30 && v37 == a2)
  {
    result = swift_bridgeObjectRelease();
  }
  else
  {
    v38 = sub_244E4EAC0();
    result = swift_bridgeObjectRelease();
    if ((v38 & 1) == 0)
      return result;
  }
  if (*(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_pinTask))
  {
    swift_retain();
    sub_244DECE94();
    swift_release();
    v39 = (uint64_t)v46;
    sub_244D91E3C(v17, (uint64_t)v46, &qword_2574145A0);
    if (v20((char *)v39, 1, v18) == 1)
    {
      sub_244D66F54(v39, &qword_2574145A0);
    }
    else
    {
      v40 = sub_244E4DCBC();
      v41 = sub_244E4E688();
      if (os_log_type_enabled(v40, v41))
      {
        v42 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v42 = 0;
        _os_log_impl(&dword_244D61000, v40, v41, "cleaning invalidated Issuer PIN", v42, 2u);
        v43 = v42;
        v39 = (uint64_t)v46;
        MEMORY[0x2495283BC](v43, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v39, v18);
    }
    sub_244DFDDCC(0, 26, 0);
    swift_bridgeObjectRelease();
    v35 = 1;
    return sub_244DFA8A4(v35);
  }
  return result;
}

void sub_244DF0A28(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_244E4C714();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_244E4C618();
  sub_244E4C6C0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (qword_2574143D8 != -1)
    swift_once();
  v14 = __swift_project_value_buffer(v7, (uint64_t)qword_257419D88);
  sub_244D91E3C(v14, (uint64_t)v9, &qword_2574145A0);
  v15 = sub_244E4DCD4();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
  {
    sub_244D66F54((uint64_t)v9, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v2, 0xD000000000000016, 0x8000000244E5AE30, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
  }
  v17 = sub_244E4C75C();
  v19 = v18;
  swift_bridgeObjectRelease();
  v20 = HIBYTE(v19) & 0xF;
  if ((v19 & 0x2000000000000000) == 0)
    v20 = v17 & 0xFFFFFFFFFFFFLL;
  if (v20)
  {
    v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_linkTask);
    if (v21)
    {
      swift_retain();
      v22 = sub_244E4C768();
      v23 = sub_244E4E55C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 1, 1, v23);
      v24 = swift_allocObject();
      *(_QWORD *)(v24 + 16) = 0;
      *(_QWORD *)(v24 + 24) = 0;
      *(_QWORD *)(v24 + 32) = v21;
      *(_QWORD *)(v24 + 40) = a1;
      *(_BYTE *)(v24 + 48) = v22 & 1;
      swift_retain();
      v25 = a1;
      sub_244DB2DDC((uint64_t)v6, (uint64_t)&unk_257418BF0, v24);
      swift_release();
      swift_release();
    }
    else
    {
      v26 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_uiManager);
      v27 = (void *)sub_244E4E2F8();
      objc_msgSend(v26, sel_notifyRegUIResultWithResult_, v27);

    }
  }
  else
  {
    sub_244DF2C4C(2u, 0);
  }
}

id sub_244DF0D24(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unsigned __int8 v13;
  uint64_t v15[2];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143D8 != -1)
    swift_once();
  v9 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D88);
  sub_244D91E3C(v9, (uint64_t)v8, &qword_2574145A0);
  v10 = sub_244E4DCD4();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    sub_244D66F54((uint64_t)v8, &qword_2574145A0);
  }
  else
  {
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_244E4E88C();
    swift_bridgeObjectRelease();
    strcpy((char *)v15, "userCancelled ");
    HIBYTE(v15[1]) = -18;
    sub_244E4E3F4();
    swift_bridgeObjectRelease();
    sub_244E4E3F4();
    sub_244E4E3F4();
    swift_bridgeObjectRelease();
    sub_244D8C8B0(v3, 0xD000000000000027, 0x8000000244E5AE00, v15[0], v15[1]);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  if ((a1 & 1) != 0)
    v12 = 0;
  else
    v12 = 2;
  if ((a2 & 1) != 0)
    v13 = 1;
  else
    v13 = v12;
  return sub_244DF2C4C(v13, 0);
}

uint64_t sub_244DF0F60()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _BYTE *v18;
  uint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  if (qword_2574143D8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v5, (uint64_t)qword_257419D88);
  sub_244D91E3C(v11, (uint64_t)v10, &qword_2574145A0);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    sub_244D66F54((uint64_t)v10, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0((uint64_t)v1, 0xD00000000000001BLL, 0x8000000244E5ADC0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_linkTask];
  if (v15)
  {
    v1[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_postponedTaskCleanup] = 1;
    v16 = sub_244E4E55C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v4, 1, 1, v16);
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = 0;
    v17[3] = 0;
    v17[4] = v15;
    v17[5] = v1;
    swift_retain();
    v18 = v1;
    sub_244DB2DDC((uint64_t)v4, (uint64_t)&unk_257418BE8, (uint64_t)v17);
    return swift_release();
  }
  else
  {
    sub_244D91E3C(v11, (uint64_t)v8, &qword_2574145A0);
    if (v14(v8, 1, v12) == 1)
    {
      return sub_244D66F54((uint64_t)v8, &qword_2574145A0);
    }
    else
    {
      sub_244D8C8B0((uint64_t)v1, 0xD00000000000001BLL, 0x8000000244E5ADC0, 0xD00000000000001ALL, 0x8000000244E5ADE0);
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v12);
    }
  }
}

id sub_244DF1208(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BYTE *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  id v27;
  char *v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  objc_class *v32;
  id v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v43;
  objc_super v44;
  _OWORD v45[4];
  _BYTE v46[22];

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_appRequestedCloseSession] = 0;
  v12 = OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_uiManager;
  v13 = qword_257414480;
  v14 = v4;
  if (v13 != -1)
    swift_once();
  v15 = (void *)qword_257419EF8;
  *(_QWORD *)&v4[v12] = qword_257419EF8;
  v16 = (uint64_t)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter];
  v17 = qword_257414470;
  v18 = v15;
  if (v17 != -1)
    swift_once();
  sub_244DA4EF4(v16);
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readTask] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_analyticsTask] = 0;
  v19 = &v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_transactionCompletion];
  *v19 = 0;
  v19[1] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_startTransactionTask] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_pinTask] = 0;
  v20 = &v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_pinCompletion];
  *v20 = 0;
  v20[1] = 0;
  v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_voiceOverRequiresReEnabling] = 0;
  v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readerSessionActive] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_linkTask] = 0;
  v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_postponedTaskCleanup] = 0;
  v21 = &v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion];
  *v21 = 0;
  v21[1] = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_context] = 0;
  v22 = &v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_finishedContinuation];
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418AC8);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
  v24(v22, 1, 1, v23);
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_finishedContinuationTimemout] = 0;
  v24(&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_issuerPINContinuation], 1, 1, v23);
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_issuerPINContinuationTimemout] = 0;
  v25 = OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_continuityDisplayMonitor;
  type metadata accessor for ContinuityDisplayMonitor();
  swift_allocObject();
  *(_QWORD *)&v14[v25] = sub_244DE9BAC();
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_connection] = a1;
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_client] = a2;
  v26 = &v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_bundleId];
  *v26 = a3;
  v26[1] = a4;
  v27 = a1;
  swift_unknownObjectRetain();
  sub_244D7FA9C(v27, (uint64_t)v45);
  v28 = &v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_entitlements];
  v29 = v45[3];
  *((_OWORD *)v28 + 2) = v45[2];
  *((_OWORD *)v28 + 3) = v29;
  *((_OWORD *)v28 + 4) = *(_OWORD *)v46;
  *(_QWORD *)(v28 + 78) = *(_QWORD *)&v46[14];
  v30 = v45[1];
  *(_OWORD *)v28 = v45[0];
  *((_OWORD *)v28 + 1) = v30;
  type metadata accessor for StoreAndForwardManager();
  v31 = swift_allocObject();
  *(_QWORD *)(v31 + 16) = 0;
  *(_QWORD *)&v14[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_safManager] = v31;

  v32 = (objc_class *)type metadata accessor for PaymentTerminalService();
  v44.receiver = v14;
  v44.super_class = v32;
  v33 = objc_msgSendSuper2(&v44, sel_init);
  v34 = qword_2574143D8;
  v35 = v33;
  if (v34 != -1)
    swift_once();
  v36 = __swift_project_value_buffer(v9, (uint64_t)qword_257419D88);
  sub_244D91E3C(v36, (uint64_t)v11, &qword_2574145A0);
  v37 = sub_244E4DCD4();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v11, 1, v37) == 1)
  {

    swift_unknownObjectRelease();
    sub_244D66F54((uint64_t)v11, &qword_2574145A0);
  }
  else
  {
    v39 = sub_244E4DCBC();
    v40 = sub_244E4E688();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v41 = 0;
      _os_log_impl(&dword_244D61000, v39, v40, "created", v41, 2u);
      MEMORY[0x2495283BC](v41, -1, -1);
    }

    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v37);
  }
  return v35;
}

id sub_244DF1650()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  objc_class *v13;
  uint64_t v15;
  objc_super v16;
  _OWORD v17[2];
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414470 != -1)
    swift_once();
  v5 = qword_257419EF0 + 16;
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  swift_beginAccess();
  sub_244E02780((uint64_t)v17, v5, &qword_257416C08);
  swift_endAccess();
  v6 = *(_QWORD *)&v1[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_uiManager];
  *(_BYTE *)(v6 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) = 0;
  if (qword_2574143D8 != -1)
    swift_once();
  v7 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D91E3C(v7, (uint64_t)v4, &qword_2574145A0);
  v8 = sub_244E4DCD4();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) == 1)
  {
    sub_244D66F54((uint64_t)v4, &qword_2574145A0);
  }
  else
  {
    v10 = sub_244E4DCBC();
    v11 = sub_244E4E688();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v12 = 0;
      _os_log_impl(&dword_244D61000, v10, v11, "destroyed", v12, 2u);
      MEMORY[0x2495283BC](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
  }
  v13 = (objc_class *)type metadata accessor for PaymentTerminalService();
  v16.receiver = v1;
  v16.super_class = v13;
  return objc_msgSendSuper2(&v16, sel_dealloc);
}

uint64_t sub_244DF1A74()
{
  return type metadata accessor for PaymentTerminalService();
}

uint64_t type metadata accessor for PaymentTerminalService()
{
  uint64_t result;

  result = qword_257418AB0;
  if (!qword_257418AB0)
    return swift_getSingletonMetadata();
  return result;
}

id sub_244DF1AB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  void *v12;
  char **v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2574143D8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D91E3C(v5, (uint64_t)v4, &qword_2574145A0);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    result = (id)sub_244D66F54((uint64_t)v4, &qword_2574145A0);
  }
  else
  {
    v9 = sub_244E4DCBC();
    v10 = sub_244E4E688();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_244D61000, v9, v10, "onDisconnect", v11, 2u);
      MEMORY[0x2495283BC](v11, -1, -1);
    }

    result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  v12 = *(void **)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_uiManager);
  if (*((_BYTE *)v12 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible) == 1)
  {
    if ((*((_BYTE *)v12 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_substatePINLoaded) & 1) == 0)
    {
      if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readTask))
      {
        swift_retain();
        sub_244E15B78(2);
        swift_release();
      }
      v13 = &selRef_updateWithTransactionEvent_;
      v14 = 20;
      return objc_msgSend(v12, *v13, v14);
    }
  }
  else if (*((_BYTE *)v12 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) != 1)
  {
    return result;
  }
  v13 = &selRef_errorInDaemonWithError_;
  v14 = 2;
  return objc_msgSend(v12, *v13, v14);
}

id sub_244DF1CD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t, uint64_t);
  _BYTE v16[8];
  uint64_t v17;
  uint64_t v18;
  ValueMetadata *v19;
  unint64_t v20;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_2574143D8 != -1)
    swift_once();
  v5 = __swift_project_value_buffer(v2, (uint64_t)qword_257419D88);
  sub_244D91E3C(v5, (uint64_t)v4, &qword_2574145A0);
  v6 = sub_244E4DCD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) == 1)
  {
    sub_244D66F54((uint64_t)v4, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v1, 0xD000000000000016, 0x8000000244E5AD70, 0, 0xE000000000000000);
    (*(void (**)(_BYTE *, uint64_t))(v7 + 8))(v4, v6);
  }
  objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_client), sel_closed_, 0);
  result = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_connection), sel_invalidate);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readerSessionActive) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readerSessionActive) = 0;
    if (*(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_analyticsTask))
    {
      swift_retain();
      sub_244E46928(0);
      result = (id)swift_release();
    }
    v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_context);
    if (v9)
    {
      v11 = *(_QWORD *)(v9 + 64);
      v10 = *(_QWORD *)(v9 + 72);
      v19 = &type metadata for ReaderInactive;
      v20 = sub_244E0273C();
      v17 = v11;
      v18 = v10;
      v16[0] = 1;
      v12 = (_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter);
      v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 24);
      v14 = v12[4];
      __swift_project_boxed_opaque_existential_1(v12, v13);
      v15 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 112);
      swift_bridgeObjectRetain();
      v15(v16, v13, v14);
      return (id)sub_244D9C004((uint64_t)v16);
    }
  }
  return result;
}

void sub_244DF1F18()
{
  unint64_t v0;

  sub_244DF2008();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_244DF2008()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_257418AC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_257418AC8);
    v0 = sub_244E4E7C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_257418AC0);
  }
}

uint64_t sub_244DF2078(void (*a1)(_QWORD, void *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(void);
  char v8;
  id v9;
  void *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v16;
  id v17;
  id v18;
  void *v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(void))sub_244E4D86C();
  v8 = v7();
  swift_release();
  if ((v8 & 1) != 0)
  {
    v9 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v10 = (void *)sub_244E4E2F8();
    v11 = objc_msgSend(v9, sel_BOOLForKey_, v10);

    if (v11)
    {
      if (qword_2574143D8 != -1)
        swift_once();
      v12 = __swift_project_value_buffer(v4, (uint64_t)qword_257419D88);
      sub_244D91E3C(v12, (uint64_t)v6, &qword_2574145A0);
      v13 = sub_244E4DCD4();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) == 1)
      {
        sub_244D66F54((uint64_t)v6, &qword_2574145A0);
        return 1;
      }
      v20 = sub_244E4DCBC();
      v21 = sub_244E4E688();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v22 = 0;
        _os_log_impl(&dword_244D61000, v20, v21, "linkPreCheck - ui mode, so always pass", v22, 2u);
        MEMORY[0x2495283BC](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v13);
      return 1;
    }
  }
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_entitlements + 80) & 1) == 0)
  {
    strcpy((char *)v25, "no entitlement");
    HIBYTE(v25[1]) = -18;
    sub_244DF77F8(v25, &v24);
    v17 = objc_allocWithZone((Class)sub_244E4C4BC());
    goto LABEL_13;
  }
  sub_244E4DCB0();
  if ((sub_244E4DBD8() & 1) == 0)
  {
    v25[0] = 0xD000000000000032;
    v25[1] = 0x8000000244E5ABD0;
    sub_244DF77F8(v25, &v24);
    v18 = objc_allocWithZone((Class)sub_244E4C4BC());
    goto LABEL_13;
  }
  if (*(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion))
  {
    v25[0] = 0xD000000000000010;
    v25[1] = 0x8000000244E5AC10;
    sub_244DF77F8(v25, &v24);
    v16 = objc_allocWithZone((Class)sub_244E4C4BC());
LABEL_13:
    v19 = (void *)sub_244E4C4C8();
    a1(0, v19);

    return 0;
  }
  return 1;
}

uint64_t sub_244DF23D4(void *a1, int a2, int a3, void *aBlock, void (*a5)(uint64_t, uint64_t, id, void *))
{
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v7 = _Block_copy(aBlock);
  v8 = sub_244E4E31C();
  v10 = v9;
  _Block_copy(v7);
  v11 = a1;
  a5(v8, v10, v11, v7);
  _Block_release(v7);
  _Block_release(v7);

  return swift_bridgeObjectRelease();
}

uint64_t sub_244DF2460(char a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(a3 + 16))(a3, a1 & 1, a2);
}

void sub_244DF2478(uint64_t a1, uint64_t a2, int a3, void (*a4)(_QWORD, void *), uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  id v40;
  id v41;
  void *v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  unint64_t v54;

  v6 = v5;
  v51 = a5;
  v50 = a3;
  v49 = a2;
  v47 = a1;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v46 - v15;
  if (qword_2574143D8 != -1)
    swift_once();
  v17 = __swift_project_value_buffer(v11, (uint64_t)qword_257419D88);
  sub_244D91E3C(v17, (uint64_t)v16, &qword_2574145A0);
  v18 = sub_244E4DCD4();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v48 = v10;
  if (v21 == 1)
  {
    sub_244D66F54((uint64_t)v16, &qword_2574145A0);
  }
  else
  {
    v53 = 0x206B6E696C6572;
    v54 = 0xE700000000000000;
    sub_244E4E3F4();
    swift_bridgeObjectRelease();
    sub_244D8C8B0(v6, 0xD000000000000021, 0x8000000244E5AB40, v53, v54);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  v22 = *(_QWORD *)(v6 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_context);
  if (v22)
  {
    swift_retain();
    v23 = (char *)v6;
    v24 = v51;
    if ((sub_244DF2078(a4) & 1) != 0)
    {
      v25 = v23;
      v26 = &v23[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion];
      v27 = *(_QWORD *)&v23[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion];
      *(_QWORD *)v26 = a4;
      *((_QWORD *)v26 + 1) = v24;
      swift_retain();
      sub_244DB4E08(v27);
      type metadata accessor for LinkTask();
      v28 = swift_allocObject();
      *(_BYTE *)(v28 + 16) = 0;
      v29 = qword_257414480;
      swift_retain();
      v30 = v49;
      swift_bridgeObjectRetain();
      if (v29 != -1)
        swift_once();
      v31 = (void *)qword_257419EF8;
      *(_QWORD *)(v28 + 56) = qword_257419EF8;
      v32 = qword_257414470;
      v33 = v31;
      if (v32 != -1)
        swift_once();
      sub_244DA4EF4(v28 + 64);
      v34 = v47;
      *(_QWORD *)(v28 + 24) = v22;
      *(_QWORD *)(v28 + 32) = v34;
      *(_QWORD *)(v28 + 40) = v30;
      v35 = v50 & 1;
      *(_BYTE *)(v28 + 48) = v50 & 1;
      *(_QWORD *)(v28 + 104) = 0;
      v36 = swift_allocObject();
      *(_QWORD *)(v36 + 16) = v25;
      *(_QWORD *)(v36 + 24) = a4;
      *(_QWORD *)(v36 + 32) = v24;
      *(_QWORD *)(v36 + 40) = v28;
      *(_QWORD *)(v36 + 48) = v34;
      *(_QWORD *)(v36 + 56) = v30;
      *(_BYTE *)(v36 + 64) = v35;
      v37 = sub_244E4E55C();
      v38 = (uint64_t)v48;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v48, 1, 1, v37);
      v39 = (_QWORD *)swift_allocObject();
      v39[2] = 0;
      v39[3] = 0;
      v39[4] = v28;
      v39[5] = sub_244E02640;
      v39[6] = v36;
      swift_retain_n();
      swift_retain();
      swift_bridgeObjectRetain();
      v40 = v25;
      swift_retain();
      sub_244DB2DDC(v38, (uint64_t)&unk_257418BD0, (uint64_t)v39);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      sub_244D91E3C(v17, (uint64_t)v14, &qword_2574145A0);
      if (v20(v14, 1, v18) == 1)
      {
        swift_release();
        sub_244D66F54((uint64_t)v14, &qword_2574145A0);
      }
      else
      {
        v43 = sub_244E4DCBC();
        v44 = sub_244E4E688();
        if (os_log_type_enabled(v43, v44))
        {
          v45 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v45 = 0;
          _os_log_impl(&dword_244D61000, v43, v44, "linkPreCheck - failed", v45, 2u);
          MEMORY[0x2495283BC](v45, -1, -1);
        }

        swift_release();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v18);
      }
    }
  }
  else
  {
    v53 = 0x65746E6F63206F6ELL;
    v54 = 0xEA00000000007478;
    sub_244DF77F8(&v53, &v52);
    v41 = objc_allocWithZone((Class)sub_244E4C4BC());
    v42 = (void *)sub_244E4C4C8();
    a4(0, v42);

  }
}

id sub_244DF29BC(char a1, void *a2, uint64_t a3, void (*a4)(_QWORD, void *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31[2];

  v29 = a8;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
    return sub_244DF2C4C(2u, a2);
  sub_244E4DCB0();
  sub_244E4DC14();
  v19 = v18;
  swift_bridgeObjectRelease();
  if (v19)
  {
    *(_QWORD *)(a3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_linkTask) = a6;
    swift_retain();
    swift_release();
    *(_BYTE *)(a3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_postponedTaskCleanup) = 0;
    if (qword_2574143D8 != -1)
      swift_once();
    v20 = __swift_project_value_buffer(v15, (uint64_t)qword_257419D88);
    sub_244D91E3C(v20, (uint64_t)v17, &qword_2574145A0);
    v21 = sub_244E4DCD4();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v17, 1, v21) == 1)
    {
      sub_244D66F54((uint64_t)v17, &qword_2574145A0);
    }
    else
    {
      sub_244D8C8B0(a3, 0xD000000000000014, 0x8000000244E5ABB0, 0, 0xE000000000000000);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v21);
    }
    swift_unknownObjectWeakAssign();
    return (id)sub_244DD99B0(a7, v29, a9 & 1);
  }
  else
  {
    v31[0] = 0xD000000000000032;
    v31[1] = 0x8000000244E5AB70;
    sub_244DF77F8(v31, &v30);
    v24 = objc_allocWithZone((Class)sub_244E4C4BC());
    v25 = (void *)sub_244E4C4C8();
    a4(0, v25);

    v26 = (_QWORD *)(a3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion);
    v27 = *(_QWORD *)(a3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion);
    *v26 = 0;
    v26[1] = 0;
    return (id)sub_244DB4E08(v27);
  }
}

id sub_244DF2C4C(unsigned __int8 a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  int v5;
  void *v6;
  void (*v7)(_QWORD, id);
  id v8;
  id v9;
  void (*v10)(_QWORD, _QWORD);
  id v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  id result;

  v3 = v2;
  v5 = a1;
  v6 = *(void **)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_uiManager);
  if (*((_BYTE *)v6 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isRegUIVisible) == 1)
    objc_msgSend(v6, sel_closeUI);
  if (v5 == 2)
  {
    v7 = *(void (**)(_QWORD, id))(v3
                                           + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion);
    if (a2)
    {
      if (!v7)
        goto LABEL_12;
      v8 = a2;
      sub_244DDD958((uint64_t)v7);
      v9 = a2;
    }
    else
    {
      if (!v7)
        goto LABEL_12;
      v11 = objc_allocWithZone((Class)sub_244E4C4BC());
      swift_retain();
      v8 = (id)sub_244E4C4C8();
      v9 = v8;
    }
    v7(0, v9);
    sub_244DB4E08((uint64_t)v7);

  }
  else
  {
    v10 = *(void (**)(_QWORD, _QWORD))(v3
                                                + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion);
    if (v10)
    {
      swift_retain();
      v10(v5 & 1, 0);
      sub_244DB4E08((uint64_t)v10);
    }
  }
LABEL_12:
  v12 = OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_postponedTaskCleanup;
  if ((*(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_postponedTaskCleanup) & 1) == 0)
  {
    *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_linkTask) = 0;
    swift_release();
    *(_BYTE *)(v3 + v12) = 0;
  }
  v13 = (_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion);
  v14 = *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_registrationCompletion);
  *v13 = 0;
  v13[1] = 0;
  result = (id)sub_244DB4E08(v14);
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_appRequestedCloseSession) == 1)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_appRequestedCloseSession) = 0;
    return sub_244DF1CD0();
  }
  return result;
}

void sub_244DF2F18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  id v5;

  if (a1)
    v4 = sub_244E4E298();
  else
    v4 = 0;
  v5 = (id)v4;
  (*(void (**)(uint64_t))(a3 + 16))(a3);

}

uint64_t sub_244DF2F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  unsigned int v14;
  _DWORD v16[4];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_uiManager);
  if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible) & 1) != 0)
    v5 = 1;
  else
    v5 = *(unsigned __int8 *)(v4 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readTask);
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_pinTask);
  if (qword_2574143D8 != -1)
    swift_once();
  v8 = __swift_project_value_buffer(v1, (uint64_t)qword_257419D88);
  sub_244D91E3C(v8, (uint64_t)v3, &qword_2574145A0);
  v9 = sub_244E4DCD4();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9) == 1)
  {
    sub_244D66F54((uint64_t)v3, &qword_2574145A0);
  }
  else
  {
    v11 = sub_244E4DCBC();
    v12 = sub_244E4E688();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = swift_slowAlloc();
      *(_DWORD *)v13 = 67109632;
      v16[3] = v5;
      sub_244E4E7E4();
      *(_WORD *)(v13 + 8) = 1024;
      v16[2] = v6 != 0;
      sub_244E4E7E4();
      *(_WORD *)(v13 + 14) = 1024;
      v16[1] = v7 != 0;
      sub_244E4E7E4();
      _os_log_impl(&dword_244D61000, v11, v12, "checking busy, UI visible: %{BOOL}d, readTask: %{BOOL}d, pinTask: %{BOOL}d", (uint8_t *)v13, 0x14u);
      MEMORY[0x2495283BC](v13, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
  }
  if (v6)
    v14 = 1;
  else
    v14 = v5;
  if (v7)
    return 1;
  else
    return v14;
}

uint64_t sub_244DF31E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[5];

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257414468 != -1)
    swift_once();
  v9 = qword_257419EE8 + 16;
  swift_beginAccess();
  sub_244D91E3C(v9, (uint64_t)v25, &qword_257416650);
  if (v25[3])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_257418B80);
    type metadata accessor for SessionTask();
    if (swift_dynamicCast())
      v10 = v24;
    else
      v10 = 0;
  }
  else
  {
    sub_244D66F54((uint64_t)v25, &qword_257416650);
    v10 = 0;
  }
  if (qword_2574143D8 != -1)
    swift_once();
  v11 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D88);
  sub_244D91E3C(v11, (uint64_t)v8, &qword_2574145A0);
  v12 = sub_244E4DCD4();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
    sub_244D66F54((uint64_t)v8, &qword_2574145A0);
    if (v10)
      goto LABEL_12;
LABEL_29:
    sub_244E4E2EC();
    goto LABEL_30;
  }
  v23 = a1;
  swift_retain();
  v15 = sub_244E4DCBC();
  v16 = sub_244E4E670();
  if (os_log_type_enabled(v15, v16))
  {
    v22[0] = a2;
    v17 = swift_slowAlloc();
    *(_DWORD *)v17 = 134218240;
    v22[1] = a3;
    if (v10)
    {
      v18 = *(_QWORD *)(v10 + 48);
      if (v18)
        v18 = sub_244E4E2EC();
    }
    else
    {
      v18 = 0;
    }
    v25[0] = v18;
    sub_244E4E7E4();
    swift_release();
    *(_WORD *)(v17 + 12) = 2048;
    v25[0] = sub_244E4E2EC();
    sub_244E4E7E4();
    _os_log_impl(&dword_244D61000, v15, v16, "checking rebind to %ld from %ld", (uint8_t *)v17, 0x16u);
    MEMORY[0x2495283BC](v17, -1, -1);
  }
  else
  {
    swift_release();
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  a1 = v23;
  if (!v10)
    goto LABEL_29;
LABEL_12:
  if (*(_QWORD *)(v10 + 48))
  {
    v14 = sub_244E4E2EC();
    if (v14 == sub_244E4E2EC())
    {
LABEL_25:
      swift_release();
LABEL_30:
      v20 = 0;
      return v20 & 1;
    }
  }
  else
  {
    sub_244E4E2EC();
  }
  v19 = *(_QWORD *)(v10 + 24);
  if ((*(_QWORD *)(v19 + 64) != *(_QWORD *)(a1 + 64) || *(_QWORD *)(v19 + 72) != *(_QWORD *)(a1 + 72))
    && (sub_244E4EAC0() & 1) == 0)
  {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  v20 = sub_244E4DAE8();
  swift_bridgeObjectRelease();
  swift_release();
  return v20 & 1;
}

uint64_t sub_244DF3574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[4] = a4;
  v5[5] = a5;
  v5[6] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v5[7] = swift_task_alloc();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418BC0);
  v5[8] = v6;
  v5[9] = *(_QWORD *)(v6 - 8);
  v5[10] = swift_task_alloc();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_257418BC8);
  v5[11] = v7;
  v5[12] = *(_QWORD *)(v7 - 8);
  v5[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DF362C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = v0[9];
  v1 = v0[10];
  v3 = v0[8];
  sub_244E05D08(v1);
  sub_244E4E580();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[14] = OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_client;
  v4 = (_QWORD *)swift_task_alloc();
  v0[15] = v4;
  *v4 = v0;
  v4[1] = sub_244DF36E4;
  return sub_244E4E58C();
}

uint64_t sub_244DF36E4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DF3738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 96) + 8))(*(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 88));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    if (qword_2574143D8 != -1)
      swift_once();
    v3 = *(_QWORD *)(v0 + 56);
    v4 = __swift_project_value_buffer(*(_QWORD *)(v0 + 48), (uint64_t)qword_257419D88);
    sub_244D91E3C(v4, v3, &qword_2574145A0);
    v5 = sub_244E4DCD4();
    v6 = *(_QWORD *)(v5 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5) == 1)
    {
      sub_244D66F54(*(_QWORD *)(v0 + 56), &qword_2574145A0);
    }
    else
    {
      v7 = sub_244E4DCBC();
      v8 = sub_244E4E670();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = swift_slowAlloc();
        *(_DWORD *)v9 = 134217984;
        *(_QWORD *)(v9 + 4) = v1;
        _os_log_impl(&dword_244D61000, v7, v8, "progress %ld", (uint8_t *)v9, 0xCu);
        MEMORY[0x2495283BC](v9, -1, -1);
      }
      v10 = *(_QWORD *)(v0 + 56);

      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
    }
    objc_msgSend(*(id *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 112)), sel_loading_, v1);
    v11 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 120) = v11;
    *v11 = v0;
    v11[1] = sub_244DF36E4;
    return sub_244E4E58C();
  }
}

uint64_t sub_244DF394C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  __int128 v12;
  uint64_t v13;

  *(_QWORD *)(v8 + 272) = v13;
  *(_OWORD *)(v8 + 256) = v12;
  *(_QWORD *)(v8 + 240) = a7;
  *(_QWORD *)(v8 + 248) = a8;
  *(_QWORD *)(v8 + 224) = a5;
  *(_QWORD *)(v8 + 232) = a6;
  v9 = sub_244E4C714();
  *(_QWORD *)(v8 + 280) = v9;
  *(_QWORD *)(v8 + 288) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v8 + 304) = v10;
  *v10 = v8;
  v10[1] = sub_244DF39D4;
  return sub_244E0607C();
}

uint64_t sub_244DF39D4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 312) = a1;
  *(_DWORD *)(v3 + 320) = a2;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_244DF3A34()
{
  uint64_t v0;
  int v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  void *v44;
  uint64_t v45;
  void *v46;
  id v47;
  uint64_t v48;
  void *v49;
  void (*v50)(uint64_t, _QWORD);
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  void (*v56)(uint64_t, void *);
  id v57;

  v1 = *(_DWORD *)(v0 + 320);
  v2 = *(void **)(v0 + 312);
  v4 = *(_QWORD *)(v0 + 288);
  v3 = *(_QWORD *)(v0 + 296);
  v5 = *(_QWORD *)(v0 + 280);
  sub_244E4C6E4();
  sub_244E4C6A8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if ((v1 & 0x10000) == 0)
  {
    v6 = *(_DWORD *)(v0 + 320);
    v7 = *(_QWORD *)(v0 + 224);
    if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readerSessionActive) & 1) != 0)
    {
      swift_retain();
      v8 = v6 & 1;
      if ((v6 & 0x100) == 0)
        goto LABEL_21;
    }
    else
    {
      *(_BYTE *)(v7 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readerSessionActive) = 1;
      if (*(_QWORD *)(v7 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_analyticsTask))
      {
        sub_244E02440(*(id *)(v0 + 312), *(unsigned int *)(v0 + 320), 0);
        swift_retain();
        sub_244E46928(1);
        swift_release();
      }
      else
      {
        swift_retain();
      }
      v21 = *(_QWORD *)(v0 + 232);
      v23 = *(_QWORD *)(v21 + 64);
      v22 = *(_QWORD *)(v21 + 72);
      v24 = (_QWORD *)(*(_QWORD *)(v0 + 224)
                     + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter);
      v25 = v24[3];
      v26 = v24[4];
      __swift_project_boxed_opaque_existential_1(v24, v25);
      *(_QWORD *)(v0 + 160) = &type metadata for ReaderActive;
      *(_QWORD *)(v0 + 168) = sub_244E0244C();
      *(_QWORD *)(v0 + 136) = v23;
      *(_QWORD *)(v0 + 144) = v22;
      *(_BYTE *)(v0 + 128) = 0;
      v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 112);
      swift_bridgeObjectRetain();
      v27(v0 + 128, v25, v26);
      sub_244D9C004(v0 + 128);
      v8 = v6 & 1;
      if ((v6 & 0x100) == 0)
      {
LABEL_21:
        v45 = *(_QWORD *)(v0 + 232);
        v44 = *(void **)(v0 + 240);
        v46 = *(void **)(v45 + 104);
        *(_QWORD *)(v45 + 104) = v44;
        v47 = v44;

        if (qword_2574144C0 != -1)
          swift_once();
        v48 = *(unsigned int *)(v0 + 320);
        v49 = *(void **)(v0 + 312);
        v50 = *(void (**)(uint64_t, _QWORD))(v0 + 248);
        v51 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
        v52 = (void *)sub_244E4E2F8();
        objc_msgSend(v51, sel_setBool_forKey_, 1, v52);

        v50(v8, 0);
        sub_244E02434(v49, v48, 0);
        sub_244E02434(v49, v48, 0);
        goto LABEL_27;
      }
    }
    v28 = *(unsigned int *)(v0 + 320);
    v29 = *(void **)(v0 + 312);
    swift_retain();
    v30 = (_QWORD *)sub_244D81234();
    sub_244E02434(v29, v28, 0);
    if (v30)
    {
      v32 = *(_QWORD *)(v0 + 224);
      v31 = *(_QWORD *)(v0 + 232);
      v34 = *(_QWORD *)(v31 + 64);
      v33 = *(_QWORD *)(v31 + 72);
      v36 = v30[6];
      v35 = v30[7];
      v37 = v30[4];
      v38 = v30[5];
      *(_QWORD *)(v0 + 208) = &type metadata for SessionCreated;
      *(_QWORD *)(v0 + 216) = sub_244E02490();
      v39 = (_QWORD *)swift_allocObject();
      *(_QWORD *)(v0 + 184) = v39;
      v39[2] = v34;
      v39[3] = v33;
      v39[4] = v36;
      v39[5] = v35;
      v39[6] = v37;
      v39[7] = v38;
      *(_BYTE *)(v0 + 176) = 7;
      v40 = (_QWORD *)(v32 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter);
      v41 = *(_QWORD *)(v32 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 24);
      v42 = v40[4];
      __swift_project_boxed_opaque_existential_1(v40, v41);
      v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43(v0 + 176, v41, v42);
      swift_release();
      sub_244D9C004(v0 + 176);
    }
    goto LABEL_21;
  }
  v9 = v2;
  sub_244E4C4B0();
  v10 = sub_244E4C4E0();
  if (v10 == sub_244E4C4E0())
  {
    sub_244E4DCB0();
    sub_244E4DBE4();
  }
  else
  {
    sub_244E4C4B0();
    v11 = sub_244E4C4E0();
    if (v11 == sub_244E4C4E0())
    {
      sub_244E4DCB0();
      sub_244E4DBF0();
    }
    else
    {
      sub_244E4C4B0();
      v12 = sub_244E4C4E0();
      if (v12 == sub_244E4C4E0())
      {
        type metadata accessor for LinkTask();
        inited = swift_initStackObject();
        *(_BYTE *)(inited + 16) = 0;
        v14 = qword_257414480;
        swift_retain();
        swift_bridgeObjectRetain();
        if (v14 != -1)
          swift_once();
        v15 = (void *)qword_257419EF8;
        *(_QWORD *)(inited + 56) = qword_257419EF8;
        v16 = qword_257414470;
        v17 = v15;
        if (v16 != -1)
          swift_once();
        v19 = *(_QWORD *)(v0 + 264);
        v18 = *(_QWORD *)(v0 + 272);
        v20 = *(_QWORD *)(v0 + 232);
        sub_244DA4EF4(inited + 64);
        *(_QWORD *)(inited + 24) = v20;
        *(_QWORD *)(inited + 32) = v19;
        *(_QWORD *)(inited + 40) = v18;
        *(_BYTE *)(inited + 48) = 0;
        *(_QWORD *)(inited + 104) = 0;
        sub_244E20B94();
        swift_release();
        swift_bridgeObjectRelease();

        swift_setDeallocating();
        __swift_destroy_boxed_opaque_existential_1(inited + 64);

      }
      else
      {
        sub_244E4C4B0();
        v53 = sub_244E4C4E0();
        if (v53 == sub_244E4C4E0())
          sub_244DF3F6C(v9, *(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272));
      }
    }
  }
  v54 = *(unsigned int *)(v0 + 320);
  v55 = *(void **)(v0 + 312);
  v56 = *(void (**)(uint64_t, void *))(v0 + 248);
  v57 = v9;
  v56(2, v55);
  sub_244E02434(v55, v54, 1);
  sub_244E02434(v55, v54, 1);

LABEL_27:
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_244DF3F6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char v24[8];
  _QWORD *v25;
  ValueMetadata *v26;
  unint64_t v27;

  v5 = sub_244DE0918(a2, a3);
  if (!v6)
    v5 = sub_244E4D8E4();
  v7 = v5;
  v8 = v6;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_context);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 64);
    v11 = *(_QWORD *)(v9 + 72);
    swift_bridgeObjectRetain();
  }
  else
  {
    v10 = sub_244E4D8E4();
    v11 = v12;
  }
  v13 = sub_244E4D8E4();
  v15 = v14;
  v16 = objc_msgSend(a1, sel_description);
  v17 = sub_244E4E31C();
  v19 = v18;

  v26 = &type metadata for InternalSessionError;
  v27 = sub_244E0250C();
  v20 = (_QWORD *)swift_allocObject();
  v25 = v20;
  v20[2] = v10;
  v20[3] = v11;
  v20[4] = v7;
  v20[5] = v8;
  v20[6] = v13;
  v20[7] = v15;
  v20[8] = v17;
  v20[9] = v19;
  v24[0] = 6;
  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 24);
  v22 = *(_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter), v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 112))(v24, v21, v22);
  return sub_244D9C004((uint64_t)v24);
}

uint64_t sub_244DF4148(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint8_t *v30;
  id v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  int v41;

  v2 = v1;
  v41 = a1;
  v3 = sub_244E4CD20();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v36 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = sub_244E4CB94();
  v5 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_244E4CBC4();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v34 - v14;
  if (qword_2574143D8 != -1)
    swift_once();
  v16 = __swift_project_value_buffer(v10, (uint64_t)qword_257419D88);
  sub_244D91E3C(v16, (uint64_t)v15, &qword_2574145A0);
  v17 = sub_244E4DCD4();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v15, 1, v17) == 1)
  {
    sub_244D66F54((uint64_t)v15, &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(v2, 0xD000000000000010, 0x8000000244E5AAB0, 0, 0xE000000000000000);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
  }
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_context);
  if (v20)
  {
    if ((v41 & 1) != 0)
    {
      v21 = *(_QWORD *)(v20 + 64);
      v22 = *(_QWORD *)(v20 + 72);
      swift_retain();
      swift_bridgeObjectRetain();
      sub_244DF4660(v21, v22);
      swift_bridgeObjectRelease();
      sub_244E4C7D4();
      sub_244E4C7C8();
      swift_bridgeObjectRetain();
      sub_244E4C7BC();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
    }
    v26 = *(void **)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_uiManager);
    if (*((_BYTE *)v26 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isTapUIVisible) == 1)
    {
      *(_BYTE *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_appRequestedCloseSession) = 1;
      if (*(_QWORD *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readTask))
      {
        swift_retain();
        sub_244E15B78(2);
        swift_release();
      }
      objc_msgSend(v26, sel_updateWithTransactionEvent_, 19);
    }
    else if (*((_BYTE *)v26 + OBJC_IVAR____TtC21ProximityReaderDaemon9UIManager_isPINUIVisible) == 1)
    {
      *(_BYTE *)(v2 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_appRequestedCloseSession) = 1;
      objc_msgSend(v26, sel_closePINUIImmediate);
    }
    else
    {
      sub_244DF1CD0();
    }
    return swift_release();
  }
  else
  {
    sub_244D91E3C(v16, (uint64_t)v13, &qword_2574145A0);
    if (v19(v13, 1, v17) == 1)
    {
      sub_244D66F54((uint64_t)v13, &qword_2574145A0);
      v24 = v35;
      v23 = v36;
      v25 = v34;
    }
    else
    {
      v27 = sub_244E4DCBC();
      v28 = sub_244E4E67C();
      v29 = os_log_type_enabled(v27, v28);
      v25 = v34;
      v24 = v35;
      if (v29)
      {
        v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v30 = 0;
        _os_log_impl(&dword_244D61000, v27, v28, "no context", v30, 2u);
        MEMORY[0x2495283BC](v30, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
      v23 = v36;
    }
    (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v40, *MEMORY[0x24BDE43D8], v37);
    (*(void (**)(char *, _QWORD, uint64_t))(v38 + 104))(v23, *MEMORY[0x24BDE45C8], v39);
    v31 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v32 = objc_msgSend(v31, sel_processName);

    sub_244E4E31C();
    sub_244E4CBB8();
    sub_244E4CD14();
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v9, v24);
  }
}

uint64_t sub_244DF4660(uint64_t a1, unint64_t a2)
{
  uint8_t *v2;
  uint8_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  uint8_t *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD v36[3];
  _OWORD v37[4];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v37, 0, 48);
  *(_QWORD *)&v36[0] = a1;
  *((_QWORD *)&v36[0] + 1) = a2;
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  v9 = sub_244E13848(*(uint64_t *)&v36[0], *((uint64_t *)&v36[0] + 1));
  swift_bridgeObjectRelease();
  if (v9)
  {
    v10 = (_QWORD *)sub_244D81234();
    if (v10)
    {
      v11 = v10[6];
      v12 = v10[7];
      v31 = v3;
      v32 = v8;
      v13 = v10[4];
      v14 = v10[5];
      *((_QWORD *)&v34 + 1) = &type metadata for SessionDeleted;
      *(_QWORD *)&v35 = sub_244E02248();
      v15 = (_QWORD *)swift_allocObject();
      *(_QWORD *)&v33 = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      swift_release();
      v15[2] = a1;
      v15[3] = a2;
      v15[4] = v11;
      v15[5] = v12;
      v15[6] = v13;
      v15[7] = v14;
      v3 = v31;
      v8 = v32;
      sub_244D66F54((uint64_t)v37, &qword_257418B70);
      LOBYTE(v36[0]) = 8;
      sub_244D8DEEC(&v33, (uint64_t)v36 + 8);
      sub_244D70C60((uint64_t)v36, (uint64_t)v37, &qword_257418B70);
    }
    else
    {
      swift_release();
    }
  }
  *(_QWORD *)&v36[0] = a1;
  *((_QWORD *)&v36[0] + 1) = a2;
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  v16 = sub_244DE6A04(*(uint64_t *)&v36[0], *((uint64_t *)&v36[0] + 1));
  swift_bridgeObjectRelease();
  if ((v16 & 1) != 0)
  {
    if (qword_2574143D8 != -1)
      swift_once();
    v17 = __swift_project_value_buffer(v6, (uint64_t)qword_257419D88);
    sub_244D91E3C(v17, (uint64_t)v8, &qword_2574145A0);
    v18 = sub_244E4DCD4();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v8, 1, v18) == 1)
    {
      sub_244D66F54((uint64_t)v8, &qword_2574145A0);
    }
    else
    {
      swift_bridgeObjectRetain_n();
      v20 = sub_244E4DCBC();
      v21 = sub_244E4E688();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = (uint8_t *)swift_slowAlloc();
        v23 = swift_slowAlloc();
        v32 = v8;
        v24 = v23;
        *(_QWORD *)&v36[0] = v23;
        *(_DWORD *)v22 = 136315138;
        v31 = v22 + 4;
        swift_bridgeObjectRetain();
        *(_QWORD *)&v33 = sub_244D9A70C(a1, a2, (uint64_t *)v36);
        sub_244E4E7E4();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_244D61000, v20, v21, "Session deleted - %s", v22, 0xCu);
        swift_arrayDestroy();
        v25 = v24;
        v8 = v32;
        MEMORY[0x2495283BC](v25, -1, -1);
        MEMORY[0x2495283BC](v22, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v18);
    }
    sub_244D91E3C((uint64_t)v37, (uint64_t)&v33, &qword_257418B70);
    if (!(_QWORD)v35)
    {
      sub_244D66F54((uint64_t)v37, &qword_257418B70);
      v29 = &v33;
      return sub_244D66F54((uint64_t)v29, &qword_257418B70);
    }
    v36[0] = v33;
    v36[1] = v34;
    v36[2] = v35;
    v26 = &v3[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter];
    v27 = *(_QWORD *)&v3[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 24];
    v28 = *(_QWORD *)&v3[OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 32];
    __swift_project_boxed_opaque_existential_1(v26, v27);
    (*(void (**)(_OWORD *, uint64_t, uint64_t))(v28 + 112))(v36, v27, v28);
    sub_244D9C004((uint64_t)v36);
  }
  v29 = v37;
  return sub_244D66F54((uint64_t)v29, &qword_257418B70);
}

void sub_244DF4AC8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(_QWORD, void *), void *a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void (*v38)(_QWORD, void *);
  void *v39;
  _QWORD *v40;
  id v41[2];
  void (*v42)(_QWORD, void *);
  BOOL v43[344];
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;

  v7 = v6;
  v41[1] = a6;
  v42 = a5;
  v41[0] = a4;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_244E4C714();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v44 = a2;
    v45 = (_QWORD *)a3;
    sub_244DF77F8(&v44, v43);
  }
  sub_244E4C540();
  sub_244E4C6A8();
  v18 = *(void (**)(char *, uint64_t))(v15 + 8);
  v18(v17, v14);
  sub_244E4C6B4();
  sub_244E4C6A8();
  v18(v17, v14);
  v19 = *(_QWORD *)(v7 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_context);
  if (v19)
  {
    v20 = *(_QWORD *)(v19 + 72);
    v44 = *(_QWORD *)(v19 + 64);
    v45 = (_QWORD *)v20;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_244E4E3F4();
    v21 = sub_244E13848(v44, (uint64_t)v45);
    swift_bridgeObjectRelease();
    if (v21)
    {
      v22 = sub_244D81234();
      if (v22)
      {
        v23 = (_QWORD *)v22;
        sub_244D6B9B4((uint64_t)v43);
        v24 = v41[0];
        swift_retain();
        v25 = sub_244E4CB7C();
        v27 = v26;
        v28 = sub_244E4CB7C();
        v44 = (uint64_t)v24;
        v45 = v23;
        v46 = v25;
        v47 = v27;
        v48 = v28;
        v49 = v29;
        v50 = a1 == 10;
        sub_244D70C60((uint64_t)v43, (uint64_t)&v51, &qword_257414F80);
        if (*(_QWORD *)(v7 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_analyticsTask))
        {
          swift_retain();
          v30 = sub_244E4D3D4();
          sub_244E49BB8(v23, (uint64_t)v24, v25, v27, v30, v31);
          swift_release();
          swift_release();
          sub_244E020B8((uint64_t)&v44);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
          swift_release();
          sub_244E020B8((uint64_t)&v44);
        }
        swift_release();
        goto LABEL_19;
      }
      swift_release();
    }
    swift_release();
  }
  if (qword_257414418 != -1)
    swift_once();
  v32 = __swift_project_value_buffer(v11, (uint64_t)qword_257419E48);
  sub_244D91E3C(v32, (uint64_t)v13, &qword_2574145A0);
  v33 = sub_244E4DCD4();
  v34 = *(_QWORD *)(v33 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v13, 1, v33) == 1)
  {
    sub_244D66F54((uint64_t)v13, &qword_2574145A0);
  }
  else
  {
    v35 = sub_244E4DCBC();
    v36 = sub_244E4E67C();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v37 = 0;
      _os_log_impl(&dword_244D61000, v35, v36, "Could not send transaction error event, context or session is empty", v37, 2u);
      MEMORY[0x2495283BC](v37, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v33);
  }
LABEL_19:
  v38 = v42;
  sub_244D9BEAC();
  v39 = (void *)swift_allocError();
  *v40 = a1;
  v38(0, v39);

}

uint64_t sub_244DF4E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  v8 = sub_244E4CAB0();
  v7[21] = v8;
  v7[22] = *(_QWORD *)(v8 - 8);
  v7[23] = swift_task_alloc();
  v9 = sub_244E4C384();
  v7[24] = v9;
  v7[25] = *(_QWORD *)(v9 - 8);
  v7[26] = swift_task_alloc();
  v10 = sub_244E4CD20();
  v7[27] = v10;
  v7[28] = *(_QWORD *)(v10 - 8);
  v7[29] = swift_task_alloc();
  v11 = sub_244E4CB94();
  v7[30] = v11;
  v7[31] = *(_QWORD *)(v11 - 8);
  v7[32] = swift_task_alloc();
  v12 = sub_244E4CBC4();
  v7[33] = v12;
  v7[34] = *(_QWORD *)(v12 - 8);
  v7[35] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_257415740);
  v7[36] = swift_task_alloc();
  v13 = sub_244E4C714();
  v7[37] = v13;
  v7[38] = *(_QWORD *)(v13 - 8);
  v7[39] = swift_task_alloc();
  v7[40] = __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A0);
  v7[41] = swift_task_alloc();
  v7[42] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_244DF5024()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint8_t *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  _QWORD *v28;
  void (*v29)(_QWORD, void *);
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  double v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  void (*v71)(_QWORD, void *);
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  void (*v78)(_QWORD, void *);
  void *v79;
  uint64_t v80;
  double v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  unsigned __int8 v91;
  os_unfair_lock_s *v92;
  id *v93;
  os_unfair_lock_s *v94;
  void (*v95)(_QWORD, void *);
  void *v96;
  uint64_t v97;
  void *v98;
  void *v99;
  void (*v100)(_QWORD, void *);
  void *v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  void (*v105)(_QWORD, void *);
  void *v106;
  uint64_t v107;
  void *v108;
  unsigned int v109;
  void *v110;
  void (*v111)(_QWORD, void *);
  void *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  id v116;
  NSObject *v117;
  os_log_type_t v118;
  _BOOL4 v119;
  void *v120;
  uint8_t *v121;
  id v122;
  uint64_t v123;
  uint64_t (*v124)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  id v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  uint64_t v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  id v153;
  uint64_t (*v154)(uint64_t, uint64_t, uint64_t);
  uint64_t v155;
  void *v156;
  _QWORD *v157;
  uint8_t *buf;
  uint8_t *bufa;
  uint64_t v160;
  unsigned int v161;
  uint64_t v162;
  unsigned int v163;
  uint64_t v164;
  double v165;
  _QWORD *v166;
  uint64_t v167;
  os_log_t log;
  NSObject *loga;
  uint64_t v170;
  void *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(_QWORD, void *);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  uint64_t v182;
  unsigned int v183;
  double v184;
  __int16 v185;

  if (qword_2574143D8 != -1)
    swift_once();
  v1 = *(_QWORD *)(v0 + 336);
  v2 = __swift_project_value_buffer(*(_QWORD *)(v0 + 320), (uint64_t)qword_257419D88);
  sub_244D91E3C(v2, v1, &qword_2574145A0);
  v3 = sub_244E4DCD4();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(uint8_t **)(v4 + 48);
  v6 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v1, 1, v3);
  v7 = *(_QWORD *)(v0 + 336);
  if (v6 == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 336), &qword_2574145A0);
  }
  else
  {
    sub_244D8C8B0(*(_QWORD *)(v0 + 136), 0xD00000000000001FLL, 0x8000000244E5AA50, 0, 0xE000000000000000);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  }
  v9 = (_QWORD *)(v0 + 136);
  v8 = *(_QWORD *)(v0 + 136);
  v11 = *(_QWORD *)(v0 + 304);
  v10 = *(_QWORD *)(v0 + 312);
  v12 = *(_QWORD *)(v0 + 296);
  sub_244E4C6B4();
  sub_244E4C6C0();
  v13 = *(NSObject **)(v11 + 8);
  ((void (*)(uint64_t, uint64_t))v13)(v10, v12);
  sub_244E4C540();
  sub_244E4C6C0();
  ((void (*)(uint64_t, uint64_t))v13)(v10, v12);
  if ((*(_BYTE *)(v8 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_entitlements + 80) & 1) == 0)
  {
    v14 = *(_QWORD *)(v0 + 136);
    sub_244DF4AC8(0, 0x7469746E65206F6ELL, 0xEE00746E656D656CLL, *(void **)(v0 + 144), *(void (**)(_QWORD, void *))(v0 + 152), *(void **)(v0 + 160));
LABEL_27:
    *(_QWORD *)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_startTransactionTask) = 0;
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v14 = *v9;
  v170 = OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_analyticsTask;
  v173 = *v9;
  v15 = *(_QWORD *)(*v9 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_analyticsTask);
  log = v13;
  if (v15)
  {
    v16 = *(_QWORD *)(v0 + 288);
    swift_retain();
    v177 = v0;
    v17 = sub_244E4CC84();
    v19 = v18;
    v20 = sub_244E4E55C();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v16, 1, 1, v20);
    v21 = v9;
    v22 = v5;
    v23 = v3;
    v24 = v4;
    v25 = v2;
    v26 = (_QWORD *)swift_allocObject();
    v26[2] = 0;
    v26[3] = 0;
    v26[4] = v15;
    v26[5] = v17;
    v0 = v177;
    v26[6] = v19;
    swift_retain();
    swift_bridgeObjectRetain();
    v27 = (uint64_t)v26;
    v2 = v25;
    v4 = v24;
    v3 = v23;
    v5 = v22;
    v9 = v21;
    sub_244DB2DDC(v16, (uint64_t)&unk_257418B58, v27);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v14 = *(_QWORD *)(v177 + 136);
  }
  v28 = *(_QWORD **)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_context);
  if (!v28)
  {
    v35 = *(_QWORD *)(v0 + 280);
    v36 = *(_QWORD *)(v0 + 256);
    v174 = *(_QWORD *)(v0 + 272);
    v178 = *(_QWORD *)(v0 + 264);
    v38 = *(_QWORD *)(v0 + 240);
    v37 = *(_QWORD *)(v0 + 248);
    v40 = *(_QWORD *)(v0 + 224);
    v39 = *(_QWORD *)(v0 + 232);
    v41 = *(_QWORD *)(v0 + 216);
    sub_244DF4AC8(0, 0x65746E6F63206F6ELL, 0xEA00000000007478, *(void **)(v0 + 144), *(void (**)(_QWORD, void *))(v0 + 152), *(void **)(v0 + 160));
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x24BDE43D8], v38);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v40 + 104))(v39, *MEMORY[0x24BDE45C8], v41);
    v42 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v43 = objc_msgSend(v42, sel_processName);

    sub_244E4E31C();
    sub_244E4CBB8();
    sub_244E4CD14();
    (*(void (**)(uint64_t, uint64_t))(v174 + 8))(v35, v178);
    goto LABEL_27;
  }
  sub_244E4DCB0();
  swift_retain();
  if ((sub_244E4DBCC() & 1) != 0)
  {
    v29 = *(void (**)(_QWORD, void *))(v0 + 152);
    v30 = *(void **)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 136);
    v31 = *(void **)(v0 + 144);
    v32 = 0xD000000000000015;
    v33 = 0x8000000244E5A830;
    v34 = 17;
LABEL_25:
    sub_244DF4AC8(v34, v32, v33, v31, v29, v30);
    goto LABEL_26;
  }
  if ((sub_244E4DBD8() & 1) == 0)
  {
    v29 = *(void (**)(_QWORD, void *))(v0 + 152);
    v30 = *(void **)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 136);
    v31 = *(void **)(v0 + 144);
    v33 = 0x8000000244E5A780;
    v34 = 18;
LABEL_24:
    v32 = 0xD000000000000011;
    goto LABEL_25;
  }
  v44 = v28[9];
  v179 = v2;
  v181 = v28[8];
  v182 = v44;
  swift_bridgeObjectRetain();
  sub_244E4E3F4();
  v45 = sub_244E13848(v181, v182);
  swift_bridgeObjectRelease();
  if (!v45)
  {
LABEL_23:
    v29 = *(void (**)(_QWORD, void *))(v0 + 152);
    v30 = *(void **)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 136);
    v31 = *(void **)(v0 + 144);
    v33 = 0x8000000244E5A3A0;
    v34 = 4;
    goto LABEL_24;
  }
  v46 = sub_244D81234();
  if (!v46)
  {
    swift_release();
    goto LABEL_23;
  }
  v167 = v46;
  v47 = sub_244E4CC48();
  if (v47 >> 62)
    v48 = sub_244E4E964();
  else
    v48 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  if (v48 >= 51)
  {
    v14 = *(_QWORD *)(v0 + 136);
    sub_244DF4AC8(23, 0xD000000000000023, 0x8000000244E5AA20, *(void **)(v0 + 144), *(void (**)(_QWORD, void *))(v0 + 152), *(void **)(v0 + 160));
    swift_release();
    swift_release();
LABEL_26:
    swift_release();
    goto LABEL_27;
  }
  buf = v5;
  if (*(_BYTE *)(v45 + 136) == 1)
  {
    v50 = v45;
    v51 = v28[11];
    v181 = v28[10];
    v182 = v51;
    swift_bridgeObjectRetain_n();
    sub_244E4E3F4();
    sub_244E14174(v181, v51, (uint64_t)&v181);
    swift_bridgeObjectRelease();
    v45 = v50;
    swift_bridgeObjectRelease();
    v52 = v181;
    v53 = v182;
    v163 = v183;
    v165 = v184;
    v54 = v185;
  }
  else
  {
    v52 = 0;
    v53 = 0;
    v165 = 0.0;
    v163 = 0;
    v54 = 0;
  }
  v166 = (_QWORD *)v45;
  sub_244E4DAD0();
  v164 = v52;
  if ((*(_BYTE *)(v0 + 120) & 1) != 0)
    goto LABEL_33;
  v56 = *(_QWORD *)(v0 + 200);
  v55 = *(_QWORD *)(v0 + 208);
  v160 = v53;
  v57 = *(_QWORD *)(v0 + 192);
  v58 = *(double *)(v0 + 112);
  sub_244E4C378();
  sub_244E4C354();
  v60 = v59;
  v61 = v57;
  v53 = v160;
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v61);
  if (v58 < v60)
  {
LABEL_33:
    if (!v53)
    {
      v175 = *(void (**)(_QWORD, void *))(v0 + 152);
      v180 = *(void **)(v0 + 160);
      v14 = *(_QWORD *)(v0 + 136);
      v171 = *(void **)(v0 + 144);
      v63 = v28[8];
      v62 = v28[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v64 = sub_244E4DAB8();
      v66 = v65;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v0 + 96) = &type metadata for InvalidPartnerToken;
      *(_QWORD *)(v0 + 104) = sub_244E01F2C();
      v67 = (_QWORD *)swift_allocObject();
      *(_QWORD *)(v0 + 72) = v67;
      v67[2] = v63;
      v67[3] = v62;
      v67[4] = v64;
      v67[5] = v66;
      *(_BYTE *)(v0 + 64) = 2;
      v68 = *(_QWORD *)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 24);
      v69 = *(_QWORD *)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 32);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter), v68);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 112))(v0 + 64, v68, v69);
      sub_244DF4AC8(6, 0xD000000000000015, 0x8000000244E5A920, v171, v175, v180);
      swift_release();
      swift_release();
      swift_release();
      sub_244D9C004(v0 + 64);
      goto LABEL_27;
    }
  }
  if ((sub_244DF2F88() & 1) != 0)
    goto LABEL_39;
  if (qword_257414468 != -1)
    swift_once();
  if (sub_244D9CFDC())
  {
LABEL_39:
    v71 = *(void (**)(_QWORD, void *))(v0 + 152);
    v70 = *(void **)(v0 + 160);
    v72 = v53;
    v14 = *(_QWORD *)(v0 + 136);
    v73 = *(void **)(v0 + 144);
    sub_244D73F3C(v164, v72);
    v74 = 9;
    v75 = 0x6920726564616572;
    v76 = 0xEE00797375622073;
LABEL_40:
    v77 = v73;
    v78 = v71;
    v79 = v70;
LABEL_41:
    sub_244DF4AC8(v74, v75, v76, v77, v78, v79);
LABEL_42:
    swift_release();
    swift_release();
    goto LABEL_26;
  }
  if (v53)
  {
    v80 = qword_2574144C0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v80 != -1)
      swift_once();
    v161 = sub_244DE8AF4();
    v81 = MEMORY[0x249527EE8]();
    sub_244D73F3C(v164, v53);
    v82 = v81 < v165;
    if (v161 != v163)
      v82 = v161 < v163;
    if (!v82)
    {
      v95 = *(void (**)(_QWORD, void *))(v0 + 152);
      v96 = *(void **)(v0 + 160);
      v97 = v53;
      v14 = *(_QWORD *)(v0 + 136);
      v98 = *(void **)(v0 + 144);
      sub_244D73F3C(v164, v97);
      v75 = 0xD000000000000013;
      v76 = 0x8000000244E5A990;
      v74 = 5;
      v77 = v98;
      v78 = v95;
      v79 = v96;
      goto LABEL_41;
    }
    if ((v54 & 0x100) != 0)
    {
      v71 = *(void (**)(_QWORD, void *))(v0 + 152);
      v70 = *(void **)(v0 + 160);
      v103 = v53;
      v14 = *(_QWORD *)(v0 + 136);
      v73 = *(void **)(v0 + 144);
      sub_244D73F3C(v164, v103);
      v75 = 0xD000000000000035;
      v76 = 0x8000000244E5A9E0;
      v74 = 4;
      goto LABEL_40;
    }
    if ((v54 & 1) != 0)
    {
      v71 = *(void (**)(_QWORD, void *))(v0 + 152);
      v70 = *(void **)(v0 + 160);
      v107 = v53;
      v14 = *(_QWORD *)(v0 + 136);
      v73 = *(void **)(v0 + 144);
      sub_244D73F3C(v164, v107);
      v75 = 0xD000000000000026;
      v76 = 0x8000000244E5A9B0;
      v74 = 32;
      goto LABEL_40;
    }
  }
  v162 = v53;
  v156 = *(void **)(v0 + 144);
  v83 = *(_QWORD *)(v0 + 136);
  v84 = v166[7];
  v85 = v28[8];
  v86 = v28[9];
  v87 = *(_QWORD *)(v167 + 80);
  *(_QWORD *)(v0 + 16) = v166[6];
  *(_QWORD *)(v0 + 24) = v84;
  *(_QWORD *)(v0 + 32) = v85;
  *(_QWORD *)(v0 + 40) = v86;
  *(_QWORD *)(v0 + 48) = v87;
  *(_QWORD *)(v0 + 56) = v156;
  v88 = *(_QWORD *)(v83 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 32);
  v155 = *(_QWORD *)(v83 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter + 24);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v83 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_cardReaderAdapter), v155);
  v154 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v89 = v156;
  v90 = v154(v0 + 16, v155, v88);
  if (v91 < 0xFCu)
  {
    v100 = *(void (**)(_QWORD, void *))(v0 + 152);
    v99 = *(void **)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 136);
    v101 = *(void **)(v0 + 144);
    v102 = sub_244DB1848(v90, v91);
    sub_244DF4AC8(v102, 0xD00000000000001FLL, 0x8000000244E5A970, v101, v100, v99);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_244D73F3C(v164, v162);
    goto LABEL_42;
  }
  v92 = *(os_unfair_lock_s **)(*(_QWORD *)(*v9
                                         + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_continuityDisplayMonitor)
                             + 16);
  v93 = (id *)&v92[4];
  v94 = v92 + 6;
  os_unfair_lock_lock(v92 + 6);
  sub_244DE9B50(v93, (BOOL *)&v181);
  os_unfair_lock_unlock(v94);
  if ((v181 & 1) != 0)
  {
    v105 = *(void (**)(_QWORD, void *))(v0 + 152);
    v104 = *(void **)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 136);
    v106 = *(void **)(v0 + 144);
    sub_244D73F3C(v164, v162);
    sub_244E4DC8C();
    sub_244DF4AC8(10, 0xD00000000000002BLL, 0x8000000244E5A940, v106, v105, v104);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_42;
  }
  sub_244DB2CCC((uint64_t)&unk_2515DA680);
  v108 = (void *)sub_244E4E298();
  swift_bridgeObjectRelease();
  v109 = MKBGetDeviceLockState();

  if (v109 <= 6 && ((1 << v109) & 0x46) != 0)
  {
    v111 = *(void (**)(_QWORD, void *))(v0 + 152);
    v110 = *(void **)(v0 + 160);
    v14 = *(_QWORD *)(v0 + 136);
    v112 = *(void **)(v0 + 144);
    sub_244D73F3C(v164, v162);
    sub_244DF4AC8(16, 0xD00000000000002BLL, 0x8000000244E5A940, v112, v111, v110);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_42;
  }
  v113 = *(_QWORD *)(v0 + 328);
  v114 = *(_QWORD *)(v0 + 312);
  v115 = *(_QWORD *)(v0 + 296);
  sub_244E4C540();
  sub_244E4C6A8();
  ((void (*)(uint64_t, uint64_t))log)(v114, v115);
  sub_244D91E3C(v179, v113, &qword_2574145A0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))buf)(v113, 1, v3) == 1)
  {
    sub_244D66F54(*(_QWORD *)(v0 + 328), &qword_2574145A0);
  }
  else
  {
    v116 = *(id *)(v0 + 144);
    v117 = sub_244E4DCBC();
    v118 = sub_244E4E670();
    loga = v117;
    v119 = os_log_type_enabled(v117, v118);
    v120 = *(void **)(v0 + 144);
    if (v119)
    {
      v121 = (uint8_t *)swift_slowAlloc();
      v157 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v121 = 138412290;
      *(_QWORD *)(v0 + 128) = v120;
      v122 = v120;
      sub_244E4E7E4();
      *v157 = v120;

      _os_log_impl(&dword_244D61000, loga, v118, "Transaction request: %@", v121, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2574145A8);
      swift_arrayDestroy();
      MEMORY[0x2495283BC](v157, -1, -1);
      MEMORY[0x2495283BC](v121, -1, -1);
    }
    else
    {

    }
    v123 = *(_QWORD *)(v0 + 328);

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v123, v3);
  }
  swift_allocObject();
  swift_unknownObjectWeakInit();
  bufa = (uint8_t *)swift_allocObject();
  swift_unknownObjectWeakInit();
  v124 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_244E4D86C();
  v131 = v124(v124, v125, v126, v127, v128, v129, v130);
  swift_release();
  if ((v131 & 1) != 0)
  {
    v132 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
    v133 = (void *)sub_244E4E2F8();
    objc_msgSend(v132, sel_integerForKey_, v133);

  }
  v134 = *(_QWORD *)(v0 + 136);
  sub_244E4CC30();
  v135 = v166[2];
  v136 = v166[3];
  v137 = *(_QWORD *)(v134 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_safManager);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v162)
  {
    swift_bridgeObjectRetain();
    sub_244D73F3C(v164, v162);
  }
  else
  {
    v164 = 0;
  }
  v138 = *(_QWORD *)(v0 + 136);
  v139 = *(void **)(v0 + 144);
  v140 = *(_QWORD *)(v173 + v170);
  type metadata accessor for TransactionTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v141 = v139;
  swift_retain();
  v142 = swift_retain();
  v143 = sub_244E1DFF0((uint64_t)v28, (uint64_t)v141, v135, v136, v137, v164, v162, v140, (uint64_t)sub_244E01FA8, (uint64_t)bufa, (uint64_t)sub_244E01F9C, v142);
  swift_release();
  swift_release();
  v144 = OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readTask;
  *(_QWORD *)(v138 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_readTask) = v143;
  result = swift_release();
  if (*(_QWORD *)(v138 + v144))
  {
    v145 = *(_QWORD *)(v0 + 184);
    v146 = *(_QWORD *)(v0 + 160);
    v172 = *(_QWORD *)(v0 + 176);
    v176 = *(_QWORD *)(v0 + 168);
    v148 = *(void **)(v0 + 144);
    v147 = *(_QWORD *)(v0 + 152);
    v14 = *(_QWORD *)(v0 + 136);
    swift_retain();
    sub_244E14FC8(v167, v145);
    swift_release();
    v149 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v150 = (_QWORD *)swift_allocObject();
    v150[2] = v149;
    v150[3] = v147;
    v150[4] = v146;
    v150[5] = v148;
    v151 = (_QWORD *)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_transactionCompletion);
    v152 = *(_QWORD *)(v14 + OBJC_IVAR____TtC21ProximityReaderDaemon22PaymentTerminalService_transactionCompletion);
    *v151 = sub_244E01FC0;
    v151[1] = v150;
    v153 = v148;
    swift_retain();
    sub_244DB4E08(v152);
    swift_bridgeObjectRetain();
    LOBYTE(v152) = sub_244E4DC2C();
    swift_bridgeObjectRelease();
    sub_244DF7264((uint64_t)v153, v145, v152 & 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(unint64_t, uint64_t))(v172 + 8))(v145, v176);
    goto LABEL_27;
  }
  __break(1u);
  return result;
}

