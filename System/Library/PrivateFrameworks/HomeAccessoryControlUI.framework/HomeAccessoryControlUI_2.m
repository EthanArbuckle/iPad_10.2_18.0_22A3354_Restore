unint64_t sub_23E087C94()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24190;
  if (!qword_256D24190)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24070);
    v2[0] = sub_23E0852D4();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24190);
  }
  return result;
}

uint64_t sub_23E087D18(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23E087D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6 != 1)
    return swift_retain();
  return result;
}

uint64_t sub_23E087D5C(uint64_t a1)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  v8 = *(_OWORD *)(a1 + 320);
  v9 = *(_OWORD *)(a1 + 336);
  v6 = *(_OWORD *)(a1 + 288);
  v7 = *(_OWORD *)(a1 + 304);
  v4 = *(_OWORD *)(a1 + 256);
  v5 = *(_OWORD *)(a1 + 272);
  v3 = *(_OWORD *)(a1 + 224);
  sub_23E087DF4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(void **)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(void **)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void **)(a1 + 240),
    *(_QWORD *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((void **)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1));
  return a1;
}

uint64_t sub_23E087DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,void *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void *a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  id v44;
  id v45;
  uint64_t result;

  if (a8)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_23E052158(a12, a13);
    v44 = a16;
    sub_23E052584(a17, a18, a19, a20, a21, a22);
    v45 = a31;
    swift_retain();
    swift_retain();
    sub_23E052584(a35, a36, a37, a38, a39, a40);
    return sub_23E052824(a44);
  }
  return result;
}

uint64_t sub_23E087F74(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessoryControlContainerView(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E087FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;

  if (a6 != 1)
    return swift_release();
  return result;
}

uint64_t sub_23E087FC4(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t Device.Control.IncrementalState.init(value:writeInProgress:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a3, a1, v6);
  result = type metadata accessor for Device.Control.IncrementalState(0);
  *(_BYTE *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for Device.Control.IncrementalState(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D24228);
}

uint64_t Device.Control.PickerState.init(selectedOptionID:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Device.Control.ColorState.init(color:brightness:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = sub_23E135328();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a4, 1, 1, v8);
  v9 = a4 + *(int *)(type metadata accessor for Device.Control.ColorState(0) + 20);
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  result = sub_23DFF1F1C(a1, a4);
  *(_QWORD *)v9 = a2;
  *(_BYTE *)(v9 + 8) = a3 & 1;
  return result;
}

uint64_t type metadata accessor for Device.Control.ColorState(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D242B8);
}

__n128 Device.Control.ThermostatState.init(currentTemperature:mode:threshold:)@<Q0>(unint64_t a1@<X0>, char a2@<W1>, unsigned __int8 *a3@<X2>, __n128 *a4@<X3>, __n128 *a5@<X8>)
{
  unsigned __int8 v5;
  unsigned __int8 v6;
  __n128 result;

  v5 = *a3;
  v6 = a4[1].n128_u8[0];
  a5->n128_u64[0] = a1;
  a5->n128_u8[8] = a2 & 1;
  result = *a4;
  a5[1] = *a4;
  a5[2].n128_u8[0] = v6;
  a5[2].n128_u8[1] = v5;
  return result;
}

void *static Device.Control.ThermostatState.Mode.allCases.getter()
{
  return &unk_250EC66A0;
}

uint64_t Device.Control.BinaryState.init(value:)@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Device.Control.BinaryState.value.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t Device.Control.BinaryState.value.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*Device.Control.BinaryState.value.modify())()
{
  return CGPointMake;
}

BOOL static Device.Control.BinaryState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Device.Control.BinaryState.hash(into:)()
{
  return sub_23E1376B0();
}

uint64_t Device.Control.BinaryState.hashValue.getter()
{
  sub_23E137698();
  sub_23E1376B0();
  return sub_23E1376D4();
}

uint64_t sub_23E0881F8()
{
  sub_23E137698();
  sub_23E1376B0();
  return sub_23E1376D4();
}

uint64_t sub_23E08823C()
{
  return sub_23E1376B0();
}

uint64_t sub_23E088264()
{
  sub_23E137698();
  sub_23E1376B0();
  return sub_23E1376D4();
}

uint64_t Device.Control.IncrementalState.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E13534C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Device.Control.IncrementalState.value.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_23E13534C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*Device.Control.IncrementalState.value.modify())()
{
  return CGPointMake;
}

uint64_t Device.Control.IncrementalState.writeInProgress.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device.Control.IncrementalState(0) + 20));
}

uint64_t Device.Control.IncrementalState.writeInProgress.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Device.Control.IncrementalState(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

double (*Device.Control.IncrementalState.writeInProgress.modify())(_QWORD)
{
  type metadata accessor for Device.Control.IncrementalState(0);
  return CGPointMake;
}

uint64_t static Device.Control.IncrementalState.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;

  if ((sub_23E135340() & 1) != 0)
  {
    v4 = type metadata accessor for Device.Control.IncrementalState(0);
    v5 = *(_BYTE *)(a1 + *(int *)(v4 + 20)) ^ *(_BYTE *)(a2 + *(int *)(v4 + 20)) ^ 1;
  }
  else
  {
    v5 = 0;
  }
  return v5 & 1;
}

uint64_t Device.Control.IncrementalState.hash(into:)()
{
  sub_23E13534C();
  sub_23DF73F28(&qword_256D1ED38, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DD10], MEMORY[0x24BE4DD20]);
  sub_23E13711C();
  type metadata accessor for Device.Control.IncrementalState(0);
  return sub_23E1376B0();
}

uint64_t Device.Control.IncrementalState.hashValue.getter()
{
  sub_23E137698();
  sub_23E13534C();
  sub_23DF73F28(&qword_256D1ED38, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DD10], MEMORY[0x24BE4DD20]);
  sub_23E13711C();
  type metadata accessor for Device.Control.IncrementalState(0);
  sub_23E1376B0();
  return sub_23E1376D4();
}

uint64_t sub_23E0884E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;

  if ((sub_23E135340() & 1) != 0)
    v6 = *(_BYTE *)(a1 + *(int *)(a3 + 20)) ^ *(_BYTE *)(a2 + *(int *)(a3 + 20)) ^ 1;
  else
    v6 = 0;
  return v6 & 1;
}

uint64_t sub_23E088544()
{
  sub_23E137698();
  sub_23E13534C();
  sub_23DF73F28(&qword_256D1ED38, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DD10], MEMORY[0x24BE4DD20]);
  sub_23E13711C();
  sub_23E1376B0();
  return sub_23E1376D4();
}

uint64_t sub_23E0885CC()
{
  sub_23E13534C();
  sub_23DF73F28(&qword_256D1ED38, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DD10], MEMORY[0x24BE4DD20]);
  sub_23E13711C();
  return sub_23E1376B0();
}

uint64_t sub_23E08863C()
{
  sub_23E137698();
  sub_23E13534C();
  sub_23DF73F28(&qword_256D1ED38, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DD10], MEMORY[0x24BE4DD20]);
  sub_23E13711C();
  sub_23E1376B0();
  return sub_23E1376D4();
}

uint64_t Device.Control.ThermostatState.currentTemperature.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Device.Control.ThermostatState.currentTemperature.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*Device.Control.ThermostatState.currentTemperature.modify())()
{
  return CGPointMake;
}

__n128 Device.Control.ThermostatState.threshold.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[2].n128_u8[0];
  result = v1[1];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 Device.Control.ThermostatState.threshold.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  v1[1] = *a1;
  v1[2].n128_u8[0] = v2;
  return result;
}

uint64_t (*Device.Control.ThermostatState.threshold.modify())()
{
  return CGPointMake;
}

void Device.Control.ThermostatState.mode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

_BYTE *Device.Control.ThermostatState.mode.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = *result;
  return result;
}

uint64_t (*Device.Control.ThermostatState.mode.modify())()
{
  return CGPointMake;
}

BOOL static Device.Control.ThermostatState.Mode.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t Device.Control.ThermostatState.Mode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t Device.Control.ThermostatState.Mode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_23E08877C@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return Device.Control.ThermostatState.Mode.init(rawValue:)(*a1, a2);
}

void sub_23E088784(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_23E088790(_QWORD *a1@<X8>)
{
  *a1 = &unk_250EC68A0;
}

uint64_t Device.Control.ThermostatState.Threshold.hash(into:)()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 16))
  {
    sub_23E1376A4();
    return sub_23E1376C8();
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    sub_23E1376A4();
    sub_23E1376C8();
    return sub_23E1376C8();
  }
  return sub_23E1376A4();
}

uint64_t Device.Control.ThermostatState.Threshold.hashValue.getter()
{
  sub_23E137698();
  Device.Control.ThermostatState.Threshold.hash(into:)();
  return sub_23E1376D4();
}

uint64_t sub_23E088878()
{
  sub_23E137698();
  Device.Control.ThermostatState.Threshold.hash(into:)();
  return sub_23E1376D4();
}

uint64_t sub_23E0888CC()
{
  sub_23E137698();
  Device.Control.ThermostatState.Threshold.hash(into:)();
  return sub_23E1376D4();
}

uint64_t Device.Control.ThermostatState.hash(into:)()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_23E1376B0();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_23E1376A4();
    sub_23E1376C8();
    return sub_23E1376A4();
  }
  sub_23E1376B0();
  sub_23E1376C8();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_23E1376A4();
  if (v1 == 1)
  {
    sub_23E1376C8();
    sub_23E1376C8();
  }
  return sub_23E1376A4();
}

uint64_t Device.Control.ThermostatState.hashValue.getter()
{
  uint64_t v0;
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 32);
  sub_23E137698();
  if (v1 != 1)
  {
    sub_23E1376B0();
    sub_23E1376C8();
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_23E1376A4();
    goto LABEL_7;
  }
  sub_23E1376B0();
  if (!v2)
    goto LABEL_6;
LABEL_3:
  if (v2 != 1)
  {
    sub_23E1376A4();
    goto LABEL_9;
  }
  sub_23E1376A4();
  sub_23E1376C8();
LABEL_7:
  sub_23E1376C8();
LABEL_9:
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23E088AE0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 32);
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_23E1376B0();
    if (v1)
      goto LABEL_3;
LABEL_6:
    sub_23E1376A4();
    sub_23E1376C8();
    return sub_23E1376A4();
  }
  sub_23E1376B0();
  sub_23E1376C8();
  if (!v1)
    goto LABEL_6;
LABEL_3:
  sub_23E1376A4();
  if (v1 == 1)
  {
    sub_23E1376C8();
    sub_23E1376C8();
  }
  return sub_23E1376A4();
}

uint64_t sub_23E088BA4()
{
  uint64_t v0;
  int v1;
  int v2;

  v1 = *(unsigned __int8 *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 32);
  sub_23E137698();
  if (v1 != 1)
  {
    sub_23E1376B0();
    sub_23E1376C8();
    if (v2)
      goto LABEL_3;
LABEL_6:
    sub_23E1376A4();
    goto LABEL_7;
  }
  sub_23E1376B0();
  if (!v2)
    goto LABEL_6;
LABEL_3:
  if (v2 != 1)
  {
    sub_23E1376A4();
    goto LABEL_9;
  }
  sub_23E1376A4();
  sub_23E1376C8();
LABEL_7:
  sub_23E1376C8();
LABEL_9:
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t Device.Control.PickerState.selectedOptionID.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t Device.Control.PickerState.selectedOptionID.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*Device.Control.PickerState.selectedOptionID.modify())()
{
  return CGPointMake;
}

BOOL static Device.Control.PickerState.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t Device.Control.PickerState.hash(into:)()
{
  return sub_23E1376A4();
}

uint64_t Device.Control.PickerState.hashValue.getter()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t Device.Control.ColorState.color.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DFE1920(v1, a1);
}

uint64_t Device.Control.ColorState.color.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23DFF1F1C(a1, v1);
}

uint64_t (*Device.Control.ColorState.color.modify())()
{
  return CGPointMake;
}

uint64_t Device.Control.ColorState.brightness.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device.Control.ColorState(0) + 20));
}

uint64_t Device.Control.ColorState.brightness.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for Device.Control.ColorState(0);
  v6 = v2 + *(int *)(result + 20);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

double (*Device.Control.ColorState.brightness.modify())(_QWORD)
{
  type metadata accessor for Device.Control.ColorState(0);
  return CGPointMake;
}

unint64_t Device.Control.ColorState.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = 0xE000000000000000;
  sub_23E137530();
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000012;
  v10 = 0x800000023E145210;
  sub_23DFE1920(v0, (uint64_t)v3);
  sub_23E137188();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  sub_23E1371D0();
  v4 = v0 + *(int *)(type metadata accessor for Device.Control.ColorState(0) + 20);
  v5 = *(_QWORD *)v4;
  LOBYTE(v4) = *(_BYTE *)(v4 + 8);
  v7 = v5;
  v8 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE48);
  sub_23E137188();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t Device.Control.ColorState.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DFE1920(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (*(_BYTE *)(v1 + *(int *)(type metadata accessor for Device.Control.ColorState(0) + 20) + 8) == 1)
    return sub_23E1376B0();
  sub_23E1376B0();
  return sub_23E1376C8();
}

uint64_t Device.Control.ColorState.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v1 = v0;
  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E137698();
  sub_23DFE1920(v1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (*(_BYTE *)(v1 + *(int *)(type metadata accessor for Device.Control.ColorState(0) + 20) + 8) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376C8();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E08924C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = v2;
  v5 = sub_23E135328();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DFE1920(v4, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (*(_BYTE *)(v4 + *(int *)(a2 + 20) + 8) == 1)
    return sub_23E1376B0();
  sub_23E1376B0();
  return sub_23E1376C8();
}

uint64_t sub_23E0893D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v4 = v2;
  v5 = sub_23E135328();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E137698();
  sub_23DFE1920(v4, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_23E1376B0();
    sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
    sub_23E13711C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  if (*(_BYTE *)(v4 + *(int *)(a2 + 20) + 8) == 1)
  {
    sub_23E1376B0();
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376C8();
  }
  return sub_23E1376D4();
}

BOOL _s22HomeAccessoryControlUI6DeviceV0C0V15ThermostatStateV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  int v3;
  char v4;
  double v5;
  double v6;
  int v7;
  _BOOL8 result;

  v2 = *(double *)(a1 + 16);
  v3 = *(unsigned __int8 *)(a1 + 33);
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(double *)(a2 + 16);
  v6 = *(double *)(a2 + 24);
  v7 = *(unsigned __int8 *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  if (*(_BYTE *)(a1 + 32))
  {
    if (*(_BYTE *)(a1 + 32) == 1)
    {
      if (v7 != 1)
        return 0;
      if (v2 != v5 || *(double *)(a1 + 24) != v6)
        return 0;
      return v3 == *(unsigned __int8 *)(a2 + 33);
    }
    result = 0;
    if (v7 == 2 && !(*(_QWORD *)&v6 | *(_QWORD *)&v5))
      return v3 == *(unsigned __int8 *)(a2 + 33);
  }
  else
  {
    result = 0;
    if (!*(_BYTE *)(a2 + 32) && v2 == v5)
      return v3 == *(unsigned __int8 *)(a2 + 33);
  }
  return result;
}

BOOL _s22HomeAccessoryControlUI6DeviceV0C0V15ThermostatStateV9ThresholdO2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  int v4;
  double v5;
  uint64_t v7;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
    return !*(_BYTE *)(a2 + 16) && v2 == v3;
  v5 = *(double *)(a2 + 8);
  if (*(_BYTE *)(a1 + 16) == 1)
  {
    if (v4 == 1 && v2 == v3)
      return *(double *)(a1 + 8) == v5;
    return 0;
  }
  v7 = *(_QWORD *)&v5 | *(_QWORD *)&v3;
  return v4 == 2 && v7 == 0;
}

BOOL _s22HomeAccessoryControlUI6DeviceV0C0V10ColorStateV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  double *v26;
  char v27;
  double *v28;
  char v29;
  uint64_t v30;
  uint64_t v31;

  v4 = sub_23E135328();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D242F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v30 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v30 - v18;
  sub_23DFE1920(a1, (uint64_t)&v30 - v18);
  v31 = a2;
  sub_23DFE1920(a2, (uint64_t)v17);
  v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_23DFE1920((uint64_t)v19, (uint64_t)v10);
  sub_23DFE1920((uint64_t)v17, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1D7F0);
    sub_23DF89C7C((uint64_t)v19, &qword_256D1D7F0);
    if (v21(v20, 1, v4) == 1)
    {
      sub_23DF89C7C((uint64_t)v10, &qword_256D1D7F0);
      goto LABEL_9;
    }
LABEL_6:
    sub_23DF89C7C((uint64_t)v10, &qword_256D242F0);
    return 0;
  }
  sub_23DFE1920((uint64_t)v10, (uint64_t)v14);
  if (v21(v20, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1D7F0);
    sub_23DF89C7C((uint64_t)v19, &qword_256D1D7F0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v20, v4);
  sub_23DF73F28(&qword_256D20208, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCD0]);
  v23 = sub_23E137158();
  v24 = *(void (**)(char *, uint64_t))(v5 + 8);
  v24(v7, v4);
  sub_23DF89C7C((uint64_t)v17, &qword_256D1D7F0);
  sub_23DF89C7C((uint64_t)v19, &qword_256D1D7F0);
  v24(v14, v4);
  sub_23DF89C7C((uint64_t)v10, &qword_256D1D7F0);
  if ((v23 & 1) == 0)
    return 0;
LABEL_9:
  v25 = *(int *)(type metadata accessor for Device.Control.ColorState(0) + 20);
  v26 = (double *)(a1 + v25);
  v27 = *(_BYTE *)(a1 + v25 + 8);
  v28 = (double *)(v31 + v25);
  v29 = *(_BYTE *)(v31 + v25 + 8);
  if ((v27 & 1) == 0)
  {
    if (*v26 != *v28)
      v29 = 1;
    return (v29 & 1) == 0;
  }
  return (v29 & 1) != 0;
}

unint64_t sub_23E0899C0()
{
  unint64_t result;

  result = qword_256D241A0;
  if (!qword_256D241A0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.BinaryState, &type metadata for Device.Control.BinaryState);
    atomic_store(result, (unint64_t *)&qword_256D241A0);
  }
  return result;
}

uint64_t sub_23E089A04()
{
  return sub_23DF73F28(&qword_256D20018, type metadata accessor for Device.Control.IncrementalState, (uint64_t)&protocol conformance descriptor for Device.Control.IncrementalState);
}

unint64_t sub_23E089A34()
{
  unint64_t result;

  result = qword_256D241A8;
  if (!qword_256D241A8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.ThermostatState.Mode, &type metadata for Device.Control.ThermostatState.Mode);
    atomic_store(result, (unint64_t *)&qword_256D241A8);
  }
  return result;
}

unint64_t sub_23E089A7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D241B0;
  if (!qword_256D241B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D241B8);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256D241B0);
  }
  return result;
}

unint64_t sub_23E089ACC()
{
  unint64_t result;

  result = qword_256D241C0;
  if (!qword_256D241C0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.ThermostatState.Threshold, &type metadata for Device.Control.ThermostatState.Threshold);
    atomic_store(result, (unint64_t *)&qword_256D241C0);
  }
  return result;
}

unint64_t sub_23E089B18()
{
  unint64_t result;

  result = qword_256D241C8;
  if (!qword_256D241C8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.PickerState, &type metadata for Device.Control.PickerState);
    atomic_store(result, (unint64_t *)&qword_256D241C8);
  }
  return result;
}

uint64_t sub_23E089B5C()
{
  return sub_23DF73F28(&qword_256D22140, type metadata accessor for Device.Control.ColorState, (uint64_t)&protocol conformance descriptor for Device.Control.ColorState);
}

uint64_t _s11BinaryStateVwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E089BD4 + 4 * byte_23E13FB35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E089C08 + 4 * byte_23E13FB30[v4]))();
}

uint64_t sub_23E089C08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E089C10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E089C18);
  return result;
}

uint64_t sub_23E089C24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E089C2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E089C30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E089C38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Device.Control.BinaryState()
{
  return &type metadata for Device.Control.BinaryState;
}

_QWORD *_s16IncrementalStateVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E13534C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t _s16IncrementalStateVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E13534C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t _s16IncrementalStateVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s16IncrementalStateVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s16IncrementalStateVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s16IncrementalStateVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E13534C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s16IncrementalStateVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E089E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_23E13534C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t _s16IncrementalStateVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E089F24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E13534C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_23E089F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E08A790(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DD10]);
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s15ThermostatStateVwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15ThermostatStateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Device.Control.ThermostatState()
{
  return &type metadata for Device.Control.ThermostatState;
}

uint64_t _s15ThermostatStateV4ModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_23E08A0B0 + 4 * byte_23E13FB3F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_23E08A0E4 + 4 * byte_23E13FB3A[v4]))();
}

uint64_t sub_23E08A0E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E08A0EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E08A0F4);
  return result;
}

uint64_t sub_23E08A100(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E08A108);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_23E08A10C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E08A114(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Device.Control.ThermostatState.Mode()
{
  return &type metadata for Device.Control.ThermostatState.Mode;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s15ThermostatStateV9ThresholdOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t _s15ThermostatStateV9ThresholdOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_23E08A1D0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_23E08A1E8(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Device.Control.ThermostatState.Threshold()
{
  return &type metadata for Device.Control.ThermostatState.Threshold;
}

ValueMetadata *type metadata accessor for Device.Control.PickerState()
{
  return &type metadata for Device.Control.PickerState;
}

uint64_t *_s10ColorStateVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E135328();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    *(_QWORD *)v12 = *(_QWORD *)v13;
    v12[8] = v13[8];
  }
  return a1;
}

char *_s10ColorStateVwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  return a1;
}

char *_s10ColorStateVwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = *(_QWORD *)v14;
  v13[8] = v14[8];
  *(_QWORD *)v13 = v15;
  return a1;
}

char *_s10ColorStateVwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v11[8];
  return a1;
}

char *_s10ColorStateVwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  return a1;
}

uint64_t _s10ColorStateVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E08A6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t _s10ColorStateVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E08A738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_23E08A77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E08A790(a1, a2, a3, (uint64_t (*)(uint64_t))sub_23DFE1754);
}

uint64_t sub_23E08A790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E08A7FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  __int16 v14;
  __int128 v15;
  uint64_t v16;
  __int16 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v23;
  int *v24;
  uint64_t result;
  id v26;
  _QWORD v27[4];
  __int16 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int16 v33;

  v3 = sub_23E134B00();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v27[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (void *)objc_opt_self();
  v26 = objc_msgSend(v7, sel_systemFontOfSize_weight_, sub_23E08BC64(), *MEMORY[0x24BDF7890]);
  if (qword_256D1D3E8 != -1)
    swift_once();
  v8 = qword_256D346F0;
  swift_retain();
  v9 = sub_23E08BDEC();
  v11 = v10;
  v12 = sub_23E08C100();
  sub_23E08C2A0();
  v13 = *(_QWORD *)(v1 + 8);
  v14 = *(_WORD *)(v1 + 48);
  *(_QWORD *)&v29 = *(_QWORD *)v1;
  *((_QWORD *)&v29 + 1) = v13;
  v15 = *(_OWORD *)(v1 + 32);
  v30 = *(_OWORD *)(v1 + 16);
  v31 = v15;
  LOWORD(v32) = v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
  MEMORY[0x24264B734](v27, v16);
  v17 = v28;
  v18 = *(_OWORD *)(v1 + 152);
  v19 = *(_OWORD *)(v1 + 184);
  v31 = *(_OWORD *)(v1 + 168);
  v32 = v19;
  v33 = *(_WORD *)(v1 + 200);
  v29 = *(_OWORD *)(v1 + 136);
  v30 = v18;
  sub_23DF98EC8((uint64_t)&v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v27);
  sub_23DF98EC8((uint64_t)&v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (LOBYTE(v27[0]) == 1)
    v20 = sub_23E136C6C();
  else
    v20 = sub_23E136C48();
  v21 = v20;
  *a1 = v8;
  a1[1] = v9;
  v23 = (_BYTE)v17 != 0xFF && (v17 & 0xFF00) == 768;
  a1[2] = v11;
  *((double *)a1 + 3) = v12;
  v24 = (int *)_s22StatusTextViewModifierV6ConfigVMa(0);
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v4 + 32))((char *)a1 + v24[7], v6, v3);
  *(uint64_t *)((char *)a1 + v24[8]) = (uint64_t)v26;
  *((_BYTE *)a1 + v24[9]) = v23;
  *(uint64_t *)((char *)a1 + v24[10]) = v21;
  return result;
}

uint64_t sub_23E08AA14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int64x2_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  int64x2_t v14;
  int64x2_t v15;
  uint64_t (*v16)@<X0>(uint64_t@<X0>, uint64_t@<X8>);
  uint64_t v18;

  v6 = _s22StatusTextViewModifierVMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v6);
  v9 = *a1;
  if (v9)
  {
    sub_23DF73E10(a2, (uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), _s22StatusTextViewModifierVMa);
    v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v11 = swift_allocObject();
    *(_QWORD *)(v11 + 16) = v9;
    sub_23DF89384((uint64_t)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, _s22StatusTextViewModifierVMa);
    KeyPath = swift_getKeyPath();
    v13 = swift_getKeyPath();
    v14 = vdupq_n_s64(0x3F847AE147AE147BuLL);
    v14.i64[0] = KeyPath;
    v15 = vdupq_n_s64(1uLL);
    v15.i64[0] = v13;
    v16 = sub_23E08E958;
  }
  else
  {
    v16 = 0;
    v11 = 0;
    v14 = 0uLL;
    v15 = 0uLL;
  }
  a3->i64[0] = (uint64_t)v16;
  a3->i64[1] = v11;
  a3[1] = v14;
  a3[2] = v15;
  a3[3].i8[0] = 0;
  return swift_retain();
}

uint64_t sub_23E08AB50@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  int v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char v52;
  uint64_t KeyPath;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  double v65;
  double v66;
  double v67;
  double v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double *v76;
  unsigned __int8 *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  double v104;
  double v105;
  double v106;
  BOOL v107;
  double v108;
  double v109;
  uint64_t v110;
  uint64_t v111;
  unsigned __int8 *v112;
  double v113;
  char *v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t v118;
  _OWORD *v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t *v151;
  char *v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  id v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unsigned __int8 *v184;
  uint64_t v185;
  uint64_t v186;
  unsigned __int8 *v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  _OWORD v207[10];

  v183 = a3;
  v5 = sub_23E1360A8();
  v181 = *(_QWORD *)(v5 - 8);
  v182 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v180 = (char *)&v146 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24480);
  MEMORY[0x24BDAC7A8](v166);
  v171 = (uint64_t *)((char *)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_23E1360B4();
  v169 = *(_QWORD *)(v8 - 8);
  v170 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v168 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)sub_23E134B00();
  v162 = *(v10 - 1);
  v163 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v161 = (char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24488);
  MEMORY[0x24BDAC7A8](v165);
  v174 = (char *)&v146 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24490);
  MEMORY[0x24BDAC7A8](v167);
  v176 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24498);
  MEMORY[0x24BDAC7A8](v173);
  v177 = (uint64_t)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D244A0);
  v15 = MEMORY[0x24BDAC7A8](v175);
  v179 = (uint64_t)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v172 = (uint64_t)&v146 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v178 = (uint64_t)&v146 - v19;
  v20 = sub_23E135D60();
  v156 = *(_QWORD *)(v20 - 8);
  v157 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v154 = (char *)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E830);
  MEMORY[0x24BDAC7A8](v148);
  v151 = (uint64_t *)((char *)&v146 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E818);
  MEMORY[0x24BDAC7A8](v23);
  v149 = (char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D244A8);
  MEMORY[0x24BDAC7A8](v147);
  v152 = (char *)&v146 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D230C0);
  MEMORY[0x24BDAC7A8](v150);
  v153 = (char *)&v146 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D230C8);
  MEMORY[0x24BDAC7A8](v27);
  v155 = (uint64_t)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D244B0);
  MEMORY[0x24BDAC7A8](v159);
  v160 = (uint64_t)&v146 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D244B8);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v164 = (uint64_t)&v146 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BDAC7A8](v31);
  v158 = (char *)&v146 - v34;
  MEMORY[0x24BDAC7A8](v33);
  v186 = (uint64_t)&v146 - v35;
  type metadata accessor for CGPoint(0);
  v185 = a1;
  sub_23E135EB0();
  v36 = v188;
  v37 = &a2[*(int *)(_s22StatusTextViewModifierVMa(0) + 20)];
  swift_bridgeObjectRetain();
  v38 = sub_23E136900();
  v40 = v39;
  v42 = v41;
  swift_bridgeObjectRelease();
  v184 = a2;
  v43 = *a2;
  v187 = v37;
  if (v43 == 1)
    v44 = sub_23E136C0C();
  else
    v44 = sub_23E136C84();
  *(_QWORD *)&v188 = v44;
  v45 = v42 & 1;
  v46 = sub_23E1368DC();
  v48 = v47;
  v50 = v49;
  v52 = v51 & 1;
  sub_23DFA055C(v38, v40, v45);
  swift_release();
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  v54 = (uint64_t)v149;
  sub_23E136F6C();
  v55 = sub_23E136F90();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v54, 0, 1, v55);
  v56 = v151;
  sub_23DF89C1C(v54, (uint64_t)v151 + *(int *)(v148 + 28), &qword_256D1E818);
  *v56 = KeyPath;
  v57 = (uint64_t)v152;
  sub_23DF89C1C((uint64_t)v56, (uint64_t)&v152[*(int *)(v147 + 36)], &qword_256D1E830);
  *(_QWORD *)v57 = v46;
  *(_QWORD *)(v57 + 8) = v48;
  *(_BYTE *)(v57 + 16) = v52;
  *(_QWORD *)(v57 + 24) = v50;
  sub_23DFA056C(v46, v48, v52);
  swift_bridgeObjectRetain();
  sub_23DF89C7C((uint64_t)v56, &qword_256D1E830);
  sub_23DF89C7C(v54, &qword_256D1E818);
  sub_23DFA055C(v46, v48, v52);
  swift_bridgeObjectRelease();
  v58 = swift_getKeyPath();
  v60 = v156;
  v59 = v157;
  v61 = v154;
  (*(void (**)(char *, _QWORD, uint64_t))(v156 + 104))(v154, *MEMORY[0x24BDEB3F0], v157);
  v62 = (uint64_t)v153;
  v63 = (uint64_t *)&v153[*(int *)(v150 + 36)];
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)v63 + *(int *)(v64 + 28), v61, v59);
  *v63 = v58;
  sub_23DF89C1C(v57, v62, &qword_256D244A8);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v59);
  sub_23DF89C7C(v57, &qword_256D244A8);
  sub_23E135E80();
  v66 = v65;
  if (qword_256D1D468 != -1)
    swift_once();
  v67 = v66 + *(double *)&qword_256D34740 * -4.0;
  if (v67 <= 0.0)
    v67 = 0.0;
  v68 = v67;
  v69 = sub_23E136FE4();
  v70 = v155;
  sub_23E04CCB8(0.0, 1, 0.0, 1, v68, 0, 0.0, 1, v155, 0.0, 1, 0.0, 1, v69, v71);
  sub_23DF89C7C(v62, &qword_256D230C0);
  v72 = sub_23E08B9E0(*(double *)&v36);
  v74 = v73;
  v75 = v160;
  sub_23DF89C1C(v70, v160, &qword_256D230C8);
  v76 = (double *)(v75 + *(int *)(v159 + 36));
  *v76 = v72;
  *((_QWORD *)v76 + 1) = v74;
  sub_23DF89C7C(v70, &qword_256D230C8);
  v77 = v187;
  v78 = *((_QWORD *)v187 + 1);
  v79 = *((_QWORD *)v187 + 2);
  if (v78 == 32 && v79 == 0xE100000000000000 || (sub_23E137614() & 1) != 0)
  {
    v78 = 0;
    v79 = 0xE000000000000000;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)&v188 = v78;
  *((_QWORD *)&v188 + 1) = v79;
  sub_23E08E9C8();
  sub_23DF8DC18();
  v80 = (uint64_t)v158;
  sub_23E136A74();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v75, &qword_256D244B0);
  sub_23DF89340(v80, v186, &qword_256D244B8);
  v81 = _s22StatusTextViewModifierV6ConfigVMa(0);
  v82 = *(int *)(v81 + 28);
  v83 = v81;
  v184 = (unsigned __int8 *)v81;
  (*(void (**)(char *, unsigned __int8 *, id))(v162 + 16))(v161, &v77[v82], v163);
  v84 = sub_23E136930();
  v86 = v85;
  LOBYTE(v80) = v87 & 1;
  v163 = *(id *)&v77[*(int *)(v83 + 32)];
  sub_23E136858();
  v88 = sub_23E136900();
  v90 = v89;
  v92 = v91;
  swift_release();
  sub_23DFA055C(v84, v86, v80);
  swift_bridgeObjectRelease();
  v93 = sub_23E13690C();
  v95 = v94;
  LOBYTE(v80) = v96 & 1;
  sub_23DFA055C(v88, v90, v92 & 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v188 = *(_QWORD *)&v187[*((int *)v184 + 10)];
  swift_retain();
  v97 = sub_23E1368DC();
  v99 = v98;
  v101 = v100;
  v103 = v102;
  sub_23DFA055C(v93, v95, v80);
  swift_release();
  swift_bridgeObjectRelease();
  sub_23E135E80();
  v105 = v104 - (*(double *)&qword_256D34740 + *(double *)&qword_256D34740);
  if (qword_256D1D3D8 != -1)
    swift_once();
  v106 = v105 - *(double *)&qword_256D346E0;
  v107 = v105 - *(double *)&qword_256D346E0 > 0.0;
  v108 = 0.0;
  if (!v107)
    v106 = 0.0;
  v109 = v106;
  v110 = sub_23E136FE4();
  sub_23E04CD1C(0.0, 1, 0.0, 1, v109, 0, 0.0, 1, (uint64_t)v207, 0.0, 1, 0.0, 1, v110, v111, v97, v99, v101 & 1, v103);
  sub_23DFA055C(v97, v99, v101 & 1);
  swift_bridgeObjectRelease();
  v200 = v207[2];
  v201 = v207[3];
  v205 = v207[7];
  v206 = v207[8];
  v202 = v207[4];
  v203 = v207[5];
  v204 = v207[6];
  v198 = v207[0];
  v199 = v207[1];
  v112 = v187;
  if (v187[*((int *)v184 + 9)] == 1)
  {
    objc_msgSend(v163, sel_descender);
    v108 = v113 * 0.5;
  }
  v194 = v204;
  v195 = v205;
  v196 = v206;
  v190 = v200;
  v191 = v201;
  v192 = v202;
  v193 = v203;
  v188 = v198;
  v189 = v199;
  *(_QWORD *)&v197 = v36;
  *((double *)&v197 + 1) = *((double *)&v36 + 1) + v108;
  v114 = v168;
  sub_23E136090();
  v115 = swift_getKeyPath();
  v117 = v170;
  v116 = v171;
  v118 = v169;
  (*(void (**)(char *, char *, uint64_t))(v169 + 16))((char *)v171 + *(int *)(v166 + 28), v114, v170);
  *v116 = v115;
  v119 = v174;
  sub_23DF89C1C((uint64_t)v116, (uint64_t)&v174[*(int *)(v165 + 36)], &qword_256D24480);
  v120 = v195;
  v119[6] = v194;
  v119[7] = v120;
  v121 = v197;
  v119[8] = v196;
  v119[9] = v121;
  v122 = v191;
  v119[2] = v190;
  v119[3] = v122;
  v123 = v193;
  v119[4] = v192;
  v119[5] = v123;
  v124 = v189;
  *v119 = v188;
  v119[1] = v124;
  sub_23E05753C((uint64_t)&v188);
  sub_23DF89C7C((uint64_t)v116, &qword_256D24480);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v114, v117);
  sub_23E08EBEC((uint64_t)&v198);
  v125 = swift_getKeyPath();
  v126 = v180;
  sub_23E13609C();
  v127 = (uint64_t)v176;
  v128 = (uint64_t *)&v176[*(int *)(v167 + 36)];
  v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D244E0);
  v131 = v181;
  v130 = v182;
  (*(void (**)(char *, char *, uint64_t))(v181 + 16))((char *)v128 + *(int *)(v129 + 28), v126, v182);
  *v128 = v125;
  sub_23DF89C1C((uint64_t)v119, v127, &qword_256D24488);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v126, v130);
  sub_23DF89C7C((uint64_t)v119, &qword_256D24488);
  v132 = sub_23E13702C();
  v133 = *((_QWORD *)v112 + 3);
  v134 = v177;
  sub_23DF89C1C(v127, v177, &qword_256D24490);
  v135 = (uint64_t *)(v134 + *(int *)(v173 + 36));
  *v135 = v132;
  v135[1] = v133;
  sub_23DF89C7C(v127, &qword_256D24490);
  v136 = swift_getKeyPath();
  v137 = v172;
  sub_23DF89C1C(v134, v172, &qword_256D24498);
  v138 = v137 + *(int *)(v175 + 36);
  *(_QWORD *)v138 = v136;
  *(_BYTE *)(v138 + 8) = 1;
  sub_23DF89C7C(v134, &qword_256D24498);
  v139 = v178;
  sub_23DF89340(v137, v178, &qword_256D244A0);
  v140 = v186;
  v141 = v164;
  sub_23DF89C1C(v186, v164, &qword_256D244B8);
  v142 = v179;
  sub_23DF89C1C(v139, v179, &qword_256D244A0);
  v143 = v183;
  sub_23DF89C1C(v141, v183, &qword_256D244B8);
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D244E8);
  sub_23DF89C1C(v142, v143 + *(int *)(v144 + 48), &qword_256D244A0);
  sub_23DF89C7C(v139, &qword_256D244A0);
  sub_23DF89C7C(v140, &qword_256D244B8);
  sub_23DF89C7C(v142, &qword_256D244A0);
  return sub_23DF89C7C(v141, &qword_256D244B8);
}

double sub_23E08B9E0(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(_s22StatusTextViewModifierVMa(0) + 20);
  v4 = _s22StatusTextViewModifierV6ConfigVMa(0);
  v5 = v4;
  if (*(_BYTE *)(v3 + *(int *)(v4 + 36)) == 1)
    objc_msgSend(*(id *)(v3 + *(int *)(v4 + 32)), sel_descender);
  objc_msgSend(*(id *)(v3 + *(int *)(v5 + 32)), sel_lineHeight);
  if (qword_256D1D3F8 != -1)
    swift_once();
  if (byte_256D242F8 == 1)
  {
    if (qword_256D1D3E0 == -1)
      return a1 + 0.0;
    goto LABEL_10;
  }
  if (qword_256D1D3E0 != -1)
LABEL_10:
    swift_once();
  return a1 + 0.0;
}

void sub_23E08BB3C()
{
  qword_256D346E0 = 0x4024000000000000;
}

void sub_23E08BB4C()
{
  qword_256D346E8 = 0x401C000000000000;
}

uint64_t sub_23E08BB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)@<X0>(uint64_t *@<X0>, int64x2_t *@<X8>);
  uint64_t (*v12)@<X0>(uint64_t *@<X0>, int64x2_t *@<X8>);
  uint64_t v13;
  uint64_t result;
  uint64_t (**v15)@<X0>(uint64_t *@<X0>, int64x2_t *@<X8>);
  uint64_t v16;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_23DF73E10(v3, (uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), _s22StatusTextViewModifierVMa);
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  sub_23DF89384((uint64_t)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, _s22StatusTextViewModifierVMa);
  v10 = sub_23E136FE4();
  v12 = v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a3, a1, v13);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24478);
  v15 = (uint64_t (**)@<X0>(uint64_t *@<X0>, int64x2_t *@<X8>))(a3 + *(int *)(result + 36));
  *v15 = sub_23E08E844;
  v15[1] = (uint64_t (*)@<X0>(uint64_t *@<X0>, int64x2_t *@<X8>))v9;
  v15[2] = (uint64_t (*)@<X0>(uint64_t *@<X0>, int64x2_t *@<X8>))v10;
  v15[3] = v12;
  return result;
}

double sub_23E08BC64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int16 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  double result;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int16 v17;
  _QWORD v18[4];
  __int16 v19;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s9KnobStateOMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ThermostatControlView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  sub_23E136D98();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v3, &qword_256D20ED0);
    v8 = *(_QWORD *)(v0 + 8);
    v9 = *(_WORD *)(v0 + 48);
    v14[0] = *(_QWORD *)v0;
    v14[1] = v8;
    v10 = *(_OWORD *)(v0 + 32);
    v15 = *(_OWORD *)(v0 + 16);
    v16 = v10;
    v17 = v9;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
    MEMORY[0x24264B734](v18, v11);
  }
  else
  {
    sub_23DF89384((uint64_t)v3, (uint64_t)v7, _s9KnobStateOMa);
    sub_23DFFEFDC((uint64_t)v7, (uint64_t)v18);
    sub_23DF73E54((uint64_t)v7, _s9KnobStateOMa);
  }
  v12 = (v19 & 0xFF00) != 0x300 || ~(_BYTE)v19 == 0;
  result = 72.0;
  if (!v12)
    return 48.0;
  return result;
}

uint64_t sub_23E08BDEC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  __int16 v16;
  __int128 v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  __int16 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int16 v29;
  _QWORD v30[4];
  unsigned __int16 v31;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v25 - v5;
  v7 = _s9KnobStateOMa(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v25 - v12;
  type metadata accessor for ThermostatControlView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  sub_23E136D98();
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v14(v6, 1, v7) == 1)
  {
    sub_23DF89C7C((uint64_t)v6, &qword_256D20ED0);
    v15 = v0[1];
    v16 = *((_WORD *)v0 + 24);
    v25 = *v0;
    v26 = v15;
    v17 = *((_OWORD *)v0 + 2);
    v27 = *((_OWORD *)v0 + 1);
    v28 = v17;
    v29 = v16;
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
    MEMORY[0x24264B734](v30, v18);
  }
  else
  {
    sub_23DF89384((uint64_t)v6, (uint64_t)v13, _s9KnobStateOMa);
    sub_23DFFEFDC((uint64_t)v13, (uint64_t)v30);
    sub_23DF73E54((uint64_t)v13, _s9KnobStateOMa);
  }
  v19 = v31;
  sub_23E136D98();
  if (v14(v4, 1, v7) == 1)
  {
    sub_23DF89C7C((uint64_t)v4, &qword_256D20ED0);
    v20 = v0[1];
    v21 = *((_WORD *)v0 + 24);
    v25 = *v0;
    v26 = v20;
    v22 = *((_OWORD *)v0 + 2);
    v27 = *((_OWORD *)v0 + 1);
    v28 = v22;
    v29 = v21;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
    MEMORY[0x24264B734](v30, v23);
  }
  else
  {
    sub_23DF89384((uint64_t)v4, (uint64_t)v11, _s9KnobStateOMa);
    sub_23DFFEFDC((uint64_t)v11, (uint64_t)v30);
    sub_23DF73E54((uint64_t)v11, _s9KnobStateOMa);
  }
  if ((_BYTE)v19 != 0xFF)
    __asm { BR              X11 }
  return 32;
}

double sub_23E08C100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int16 v9;
  __int128 v10;
  uint64_t v11;
  double result;
  _QWORD v13[2];
  __int128 v14;
  __int128 v15;
  __int16 v16;
  _QWORD v17[2];
  double v18;
  double v19;
  __int16 v20;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s9KnobStateOMa(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ThermostatControlView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  sub_23E136D98();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_23DF89C7C((uint64_t)v3, &qword_256D20ED0);
    v8 = *(_QWORD *)(v0 + 8);
    v9 = *(_WORD *)(v0 + 48);
    v13[0] = *(_QWORD *)v0;
    v13[1] = v8;
    v10 = *(_OWORD *)(v0 + 32);
    v14 = *(_OWORD *)(v0 + 16);
    v15 = v10;
    v16 = v9;
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
    MEMORY[0x24264B734](v17, v11);
  }
  else
  {
    sub_23DF89384((uint64_t)v3, (uint64_t)v7, _s9KnobStateOMa);
    sub_23DFFEFDC((uint64_t)v7, (uint64_t)v17);
    sub_23DF73E54((uint64_t)v7, _s9KnobStateOMa);
  }
  if ((_BYTE)v20 == 0xFF)
    return 0.0;
  if (!(_BYTE)v20)
    return v18;
  result = 0.0;
  if (v20 == 1)
    return v19 + v18;
  return result;
}

uint64_t sub_23E08C2A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int16 v10;
  __int128 v11;
  uint64_t v12;
  _QWORD v14[2];
  __int128 v15;
  __int128 v16;
  __int16 v17;
  _QWORD v18[2];
  __int16 v19;

  v1 = sub_23E134B24();
  MEMORY[0x24BDAC7A8](v1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = _s9KnobStateOMa(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ThermostatControlView();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  sub_23E136D98();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_23DF89C7C((uint64_t)v4, &qword_256D20ED0);
    v9 = *(_QWORD *)(v0 + 8);
    v10 = *(_WORD *)(v0 + 48);
    v14[0] = *(_QWORD *)v0;
    v14[1] = v9;
    v11 = *(_OWORD *)(v0 + 32);
    v15 = *(_OWORD *)(v0 + 16);
    v16 = v11;
    v17 = v10;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
    MEMORY[0x24264B734](v18, v12);
  }
  else
  {
    sub_23DF89384((uint64_t)v4, (uint64_t)v8, _s9KnobStateOMa);
    sub_23DFFEFDC((uint64_t)v8, (uint64_t)v18);
    sub_23DF73E54((uint64_t)v8, _s9KnobStateOMa);
  }
  if ((_BYTE)v19 != 0xFF)
    __asm { BR              X12 }
  return sub_23E134ADC();
}

uint64_t sub_23E08C500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t KeyPath;
  uint64_t v43[9];
  _OWORD v44[4];
  __int16 v45;

  v41 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v2);
  v39 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E134B24();
  MEMORY[0x24BDAC7A8](v4);
  v5 = sub_23E134B00();
  v38 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v37 = (char *)&v36 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v40 = (char *)&v36 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v36 - v14;
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v36 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v36 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v36 - v22;
  sub_23E1355C8();
  sub_23E134B18();
  sub_23E134B0C();
  sub_23E1355C8();
  sub_23E134B18();
  sub_23E134B0C();
  sub_23E134ADC();
  sub_23E134ADC();
  KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  v24 = *(_OWORD *)(v1 + 152);
  v25 = *(_OWORD *)(v1 + 184);
  v44[2] = *(_OWORD *)(v1 + 168);
  v44[3] = v25;
  v45 = *(_WORD *)(v1 + 200);
  v44[0] = *(_OWORD *)(v1 + 136);
  v44[1] = v24;
  sub_23DF98EC8((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v43);
  sub_23DF98EC8((uint64_t)v44, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (LOBYTE(v43[0]) == 1)
  {
    v26 = sub_23E136C84();
  }
  else
  {
    sub_23E136C48();
    v26 = sub_23E136C60();
    swift_release();
  }
  v43[0] = v26;
  sub_23E08D884();
  sub_23E134AD0();
  v27 = swift_getKeyPath();
  *(&v36 - 2) = MEMORY[0x24BDAC7A8](v27);
  swift_getKeyPath();
  if (qword_256D1D3F0 != -1)
    swift_once();
  v43[0] = qword_256D346F8;
  sub_23E08D960();
  swift_retain();
  sub_23E134AD0();
  v28 = swift_getKeyPath();
  *(&v36 - 2) = MEMORY[0x24BDAC7A8](v28);
  swift_getKeyPath();
  sub_23E1367F8();
  v29 = sub_23E1367C8();
  v30 = (uint64_t)v39;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v39, 1, 1, v29);
  v31 = sub_23E136804();
  sub_23DF89C7C(v30, &qword_256D1DBA0);
  v43[0] = v31;
  sub_23E134AD0();
  sub_23E134AE8();
  v32 = v37;
  sub_23E134AE8();
  v33 = *(void (**)(char *, uint64_t))(v38 + 8);
  v33(v8, v5);
  v34 = v40;
  sub_23E134AE8();
  v33(v32, v5);
  sub_23E134AE8();
  v33(v34, v5);
  v33(v15, v5);
  v33(v18, v5);
  v33(v21, v5);
  return ((uint64_t (*)(char *, uint64_t))v33)(v23, v5);
}

uint64_t sub_23E08CA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  return sub_23E137158() & 1;
}

uint64_t sub_23E08CA5C(uint64_t a1)
{
  return sub_23E08CA90(a1, (void (*)(uint64_t))MEMORY[0x24BDF1700], &qword_256D346F0);
}

uint64_t sub_23E08CA74(uint64_t a1)
{
  return sub_23E08CA90(a1, (void (*)(uint64_t))MEMORY[0x24BDF16A8], &qword_256D346F8);
}

uint64_t sub_23E08CA90(uint64_t a1, void (*a2)(uint64_t), uint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v6);
  v9 = sub_23E1367C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v10 = sub_23E136804();
  result = sub_23DF89C7C((uint64_t)v8, &qword_256D1DBA0);
  *a3 = v10;
  return result;
}

uint64_t sub_23E08CB58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD v67[2];
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  int v82;
  __n128 v83;
  __int16 v84;
  __n128 v85[2];
  __int16 v86;

  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  MEMORY[0x24BDAC7A8](v3);
  v77 = (char *)v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E135700();
  v71 = *(_QWORD *)(v5 - 8);
  v72 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v70 = (char *)v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  MEMORY[0x24BDAC7A8](v7);
  v74 = (uint64_t)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for Device();
  v9 = *(_QWORD *)(v79 - 8);
  v10 = MEMORY[0x24BDAC7A8](v79);
  v73 = (uint64_t)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v75 = (uint64_t)v67 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v76 = (uint64_t)v67 - v14;
  v15 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v78 = (_QWORD *)((char *)v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20ED0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = _s9KnobStateOMa(0);
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v80 = (uint64_t)v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v1 + *(int *)(type metadata accessor for ThermostatControlView() + 52);
  v25 = *(_BYTE *)v24;
  v26 = *(_QWORD *)(v24 + 8);
  v85[0].n128_u8[0] = v25;
  v85[0].n128_u64[1] = v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  sub_23E136D98();
  if (v81 != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a1, 1, 1, v15);
  v68 = v15;
  v69 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EE8);
  sub_23E136D98();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_23DF89C7C((uint64_t)v20, &qword_256D20ED0);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    return v27(v69, 1, 1, v68);
  }
  v29 = v80;
  sub_23DF89384((uint64_t)v20, v80, _s9KnobStateOMa);
  sub_23DFFEFDC(v29, (uint64_t)&v81);
  v30 = v16;
  if ((_BYTE)v84 == 0xFF)
  {
    sub_23DF73E54(v29, _s9KnobStateOMa);
    v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    return v27(v69, 1, 1, v68);
  }
  v85[0].n128_u64[0] = v81;
  v85[0].n128_u8[8] = v82 & 1;
  v85[1] = v83;
  v86 = v84;
  v31 = *(_QWORD *)(v1 + 208);
  if (v31)
  {
    v32 = v31 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_device;
    swift_beginAccess();
    v33 = v32;
    v34 = v74;
    sub_23DF89C1C(v33, v74, &qword_256D1D5A8);
    v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v34, 1, v79);
    v36 = (uint64_t)v77;
    if (v35 == 1)
    {
      swift_retain();
      sub_23DF89C7C(v34, &qword_256D1D5A8);
      v37 = v68;
      v38 = v78;
      v39 = (char *)v78 + *(int *)(v68 + 24);
      v40 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
      swift_release();
      *v38 = 0;
      v38[1] = 0xE000000000000000;
      v38[2] = 0;
      v38[3] = 0;
      v41 = v69;
    }
    else
    {
      v42 = v76;
      sub_23DF89384(v34, v76, (uint64_t (*)(_QWORD))type metadata accessor for Device);
      v43 = v42;
      v44 = v75;
      sub_23DF73E10(v43, v75, (uint64_t (*)(_QWORD))type metadata accessor for Device);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v67[1] = v31;
      swift_retain();
      v45 = v70;
      v46 = (int *)v79;
      sub_23E1356F4();
      v74 = sub_23E1356E8();
      v48 = v47;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v45, v72);
      v49 = (uint64_t *)(v44 + v46[17]);
      v51 = *v49;
      v50 = v49[1];
      v52 = v73;
      sub_23DF73E10(v44, v73, (uint64_t (*)(_QWORD))type metadata accessor for Device);
      if (v50)
      {
        v53 = v50;
      }
      else
      {
        v54 = (uint64_t *)(v52 + v46[16]);
        v51 = *v54;
        v53 = v54[1];
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      sub_23DF73E54(v52, (uint64_t (*)(_QWORD))type metadata accessor for Device);
      v55 = v75;
      v56 = (uint64_t *)(v75 + v46[7]);
      v57 = v56[1];
      if (v57)
      {
        v58 = *v56;
        v59 = *(_QWORD *)(v75 + v46[14]);
        v60 = 0.5;
        if (*(_BYTE *)(v75 + v46[15]))
          v60 = 0.0;
        *(_QWORD *)v36 = v58;
        *(_QWORD *)(v36 + 8) = v57;
        *(_QWORD *)(v36 + 16) = v59;
        *(double *)(v36 + 24) = v60;
        v61 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
      }
      else
      {
        v62 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0) + 48);
        sub_23DF73E10(v55 + v46[6], v36, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
        *(_QWORD *)(v36 + v62) = *(_QWORD *)(v55 + v46[14]);
        v61 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
      }
      swift_storeEnumTagMultiPayload();
      swift_retain();
      type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v36, 0, 1, v61);
      swift_bridgeObjectRetain();
      sub_23DF73E54(v55, (uint64_t (*)(_QWORD))type metadata accessor for Device);
      v38 = v78;
      *v78 = v74;
      v38[1] = v48;
      v38[2] = v51;
      v38[3] = v53;
      v37 = v68;
      sub_23DF89340(v36, (uint64_t)v38 + *(int *)(v68 + 24), qword_256D203B8);
      sub_23DF73E54(v76, (uint64_t (*)(_QWORD))type metadata accessor for Device);
      swift_release();
      v41 = v69;
      v29 = v80;
    }
    sub_23E08D28C(v85);
    v64 = v63;
    v66 = v65;
    sub_23DF73E54(v29, _s9KnobStateOMa);
    swift_bridgeObjectRelease();
    v38[2] = v64;
    v38[3] = v66;
    sub_23DF73E10((uint64_t)v38, v41, type metadata accessor for AccessoryControlsHeaderConfig);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v30 + 56))(v41, 0, 1, v37);
    return sub_23DF73E54((uint64_t)v38, type metadata accessor for AccessoryControlsHeaderConfig);
  }
  else
  {
    type metadata accessor for AccessoryControlsModel();
    sub_23E08D7C8();
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

void sub_23E08D28C(__n128 *a1)
{
  uint64_t v1;
  __n128 v2[3];

  v1 = a1[2].n128_u8[1];
  sub_23DFCA204(a1 + 1, v2);
  __asm { BR              X9 }
}

uint64_t sub_23E08D2D4()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  __n128 v8;
  __n128 v9;
  char v10;

  sub_23DFCA204(&v8, &v9);
  if (v10)
    return 0;
  sub_23DFF84F0(0, &qword_256D24300);
  sub_23E1371A0();
  v0 = (void *)sub_23E137164();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24308);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_23E138050;
  v2 = sub_23E1355BC();
  v4 = v3;
  *(_QWORD *)(v1 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v1 + 64) = sub_23E08D810();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v4;
  v5 = (void *)sub_23E137434();

  v6 = sub_23E137170();
  return v6;
}

uint64_t sub_23E08D4C0()
{
  uint64_t result;

  result = sub_23E08D4E0();
  byte_256D242F8 = result & 1;
  return result;
}

uint64_t sub_23E08D4E0()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  char v22;
  _QWORD v23[3];

  result = sub_23E1371A0();
  v2 = v1;
  v3 = HIBYTE(v1) & 0xF;
  v4 = result & 0xFFFFFFFFFFFFLL;
  if ((v2 & 0x2000000000000000) != 0)
    v5 = v3;
  else
    v5 = result & 0xFFFFFFFFFFFFLL;
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v2 & 0x1000000000000000) == 0)
  {
    if ((v2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v6 = (unsigned __int8 *)((v2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v6 = (unsigned __int8 *)sub_23E137554();
      v7 = (uint64_t)sub_23E08EDA0(v6, v4, 10);
      v9 = v8 & 1;
      goto LABEL_44;
    }
    v23[0] = result;
    v23[1] = v2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3)
        goto LABEL_57;
      if (v3 == 1 || (BYTE1(result) - 48) > 9u)
        goto LABEL_31;
      v7 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        if ((BYTE2(result) - 48) > 9u)
          goto LABEL_31;
        v7 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        v10 = v3 - 3;
        if (v10)
        {
          v11 = (unsigned __int8 *)v23 + 3;
          while (1)
          {
            v12 = *v11 - 48;
            if (v12 > 9)
              goto LABEL_31;
            v13 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
              goto LABEL_31;
            v7 = v13 + v12;
            if (__OFADD__(v13, v12))
              goto LABEL_31;
            v9 = 0;
            ++v11;
            if (!--v10)
              goto LABEL_44;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v3 == 2)
            {
              v9 = 0;
              v7 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              v7 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              v18 = v3 - 3;
              if (!v18)
                goto LABEL_43;
              v19 = (unsigned __int8 *)v23 + 3;
              while (1)
              {
                v20 = *v19 - 48;
                if (v20 > 9)
                  break;
                v21 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
                  break;
                v7 = v21 - v20;
                if (__OFSUB__(v21, v20))
                  break;
                v9 = 0;
                ++v19;
                if (!--v18)
                  goto LABEL_44;
              }
            }
          }
LABEL_31:
          v7 = 0;
          v9 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u)
        goto LABEL_31;
      v7 = (result - 48);
      if (v3 != 1)
      {
        if ((BYTE1(result) - 48) > 9u)
          goto LABEL_31;
        v7 = 10 * (result - 48) + (BYTE1(result) - 48);
        v14 = v3 - 2;
        if (v14)
        {
          v15 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            v16 = *v15 - 48;
            if (v16 > 9)
              goto LABEL_31;
            v17 = 10 * v7;
            if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63)
              goto LABEL_31;
            v7 = v17 + v16;
            if (__OFADD__(v17, v16))
              goto LABEL_31;
            v9 = 0;
            ++v15;
            if (!--v14)
              goto LABEL_44;
          }
        }
      }
    }
LABEL_43:
    v9 = 0;
    goto LABEL_44;
  }
  v7 = (uint64_t)sub_23E08ECBC(result, v2, 10);
  v9 = v22;
LABEL_44:
  swift_bridgeObjectRelease();
  return (v9 & 1) == 0 && v7 > 0;
}

unint64_t sub_23E08D7C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D20ED8;
  if (!qword_256D20ED8)
  {
    v1 = type metadata accessor for AccessoryControlsModel();
    result = MEMORY[0x24264C55C](&unk_23E140F38, v1);
    atomic_store(result, (unint64_t *)&qword_256D20ED8);
  }
  return result;
}

unint64_t sub_23E08D810()
{
  unint64_t result;

  result = qword_256D24310;
  if (!qword_256D24310)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256D24310);
  }
  return result;
}

uint64_t _s22StatusTextViewModifierV6ConfigVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D24390);
}

void sub_23E08D868()
{
  sub_23E134AB8();
  __break(1u);
}

unint64_t sub_23E08D884()
{
  unint64_t result;

  result = qword_256D24318;
  if (!qword_256D24318)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEACB8], MEMORY[0x24BDEACC8]);
    atomic_store(result, (unint64_t *)&qword_256D24318);
  }
  return result;
}

void sub_23E08D8C8()
{
  sub_23E08D884();
  sub_23E134B30();
  __break(1u);
}

uint64_t sub_23E08D8EC()
{
  return 8;
}

uint64_t sub_23E08D8F8()
{
  return swift_release();
}

uint64_t sub_23E08D900(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_23E08D90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E08CA08(a1, a2, a3, qword_256D24330) & 1;
}

uint64_t sub_23E08D92C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, qword_256D24330);
}

_QWORD *sub_23E08D938(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

void sub_23E08D944()
{
  sub_23E134AC4();
  __break(1u);
}

unint64_t sub_23E08D960()
{
  unint64_t result;

  result = qword_256D24320;
  if (!qword_256D24320)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEACD0], MEMORY[0x24BDEACE0]);
    atomic_store(result, (unint64_t *)&qword_256D24320);
  }
  return result;
}

void sub_23E08D9A4()
{
  sub_23E08D960();
  sub_23E134B30();
  __break(1u);
}

uint64_t sub_23E08D9C8()
{
  return 8;
}

uint64_t sub_23E08D9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23E08CA08(a1, a2, a3, &qword_256D24328) & 1;
}

uint64_t sub_23E08D9F4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_256D24328);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  return sub_23E137128();
}

_QWORD *sub_23E08DA40(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    a1[3] = a2[3];
    v9 = a3[7];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_23E134B00();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = a3[8];
    v15 = a3[9];
    v16 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)v7 + v14) = v16;
    *((_BYTE *)v7 + v15) = *((_BYTE *)a2 + v15);
    *(_QWORD *)((char *)v7 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
    v17 = v16;
  }
  swift_retain();
  return v7;
}

uint64_t sub_23E08DB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_23E134B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

_QWORD *sub_23E08DB9C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[7];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23E134B00();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[8];
  v14 = a3[9];
  v15 = *(void **)((char *)a2 + v13);
  *(_QWORD *)((char *)a1 + v13) = v15;
  *((_BYTE *)a1 + v14) = *((_BYTE *)a2 + v14);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  v16 = v15;
  swift_retain();
  return a1;
}

_QWORD *sub_23E08DC60(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  id v13;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  v6 = a3[7];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134B00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[8];
  v11 = *(void **)((char *)a2 + v10);
  v12 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = v11;
  v13 = v11;

  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23E08DD44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_23E134B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[9];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + v10) = *(_BYTE *)(a2 + v10);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  return a1;
}

_QWORD *sub_23E08DDE0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  *a1 = *a2;
  swift_release();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  v7 = a3[7];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E134B00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[8];
  v12 = *(void **)((char *)a1 + v11);
  *(_QWORD *)((char *)a1 + v11) = *(_QWORD *)((char *)a2 + v11);

  v13 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  *(_QWORD *)((char *)a1 + v13) = *(_QWORD *)((char *)a2 + v13);
  swift_release();
  return a1;
}

uint64_t sub_23E08DE9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E08DEA8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23E134B00();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_23E08DF24()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23E08DF30(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_23E134B00();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23E08DFA4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134B00();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E08E04C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v22 = *a2;
    *(_QWORD *)a1 = *a2;
    v3 = v22 + ((v4 + 16) & ~(unint64_t)v4);
  }
  else
  {
    v5 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v5;
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v6 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    v7 = *(int *)(a3 + 20);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t)a2 + v7;
    v11 = *(uint64_t *)((char *)a2 + v7);
    v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *v8 = v11;
    v8[1] = v10;
    v12 = *(_QWORD *)(v9 + 24);
    v8[2] = *(_QWORD *)(v9 + 16);
    v8[3] = v12;
    v13 = (int *)_s22StatusTextViewModifierV6ConfigVMa(0);
    v14 = v13[7];
    v15 = (char *)v8 + v14;
    v16 = v9 + v14;
    v17 = sub_23E134B00();
    v18 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    v19 = v13[8];
    v20 = *(void **)(v9 + v19);
    *(_QWORD *)((char *)v8 + v19) = v20;
    *((_BYTE *)v8 + v13[9]) = *(_BYTE *)(v9 + v13[9]);
    *(_QWORD *)((char *)v8 + v13[10]) = *(_QWORD *)(v9 + v13[10]);
    v21 = v20;
  }
  swift_retain();
  return v3;
}

uint64_t sub_23E08E164(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_bridgeObjectRelease();
  v3 = _s22StatusTextViewModifierV6ConfigVMa(0);
  v4 = v2 + *(int *)(v3 + 28);
  v5 = sub_23E134B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

uint64_t sub_23E08E1E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void *v19;
  id v20;

  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v10 = *(_QWORD *)(a2 + v6);
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = v10;
  v7[1] = v9;
  v11 = *(_QWORD *)(v8 + 24);
  v7[2] = *(_QWORD *)(v8 + 16);
  v7[3] = v11;
  v12 = (int *)_s22StatusTextViewModifierV6ConfigVMa(0);
  v13 = v12[7];
  v14 = (char *)v7 + v13;
  v15 = v8 + v13;
  v16 = sub_23E134B00();
  v17 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  v18 = v12[8];
  v19 = *(void **)(v8 + v18);
  *(_QWORD *)((char *)v7 + v18) = v19;
  *((_BYTE *)v7 + v12[9]) = *(_BYTE *)(v8 + v12[9]);
  *(_QWORD *)((char *)v7 + v12[10]) = *(_QWORD *)(v8 + v12[10]);
  v20 = v19;
  swift_retain();
  return a1;
}

uint64_t sub_23E08E2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v4 = *(int *)(a3 + 20);
  v5 = (_QWORD *)(a1 + v4);
  v6 = (_QWORD *)(a2 + v4);
  *(_QWORD *)(a1 + v4) = *(_QWORD *)(a2 + v4);
  swift_retain();
  swift_release();
  v5[1] = v6[1];
  v5[2] = v6[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[3] = v6[3];
  v7 = (int *)_s22StatusTextViewModifierV6ConfigVMa(0);
  v8 = v7[7];
  v9 = (char *)v5 + v8;
  v10 = (char *)v6 + v8;
  v11 = sub_23E134B00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  v12 = v7[8];
  v13 = *(void **)((char *)v6 + v12);
  v14 = *(void **)((char *)v5 + v12);
  *(_QWORD *)((char *)v5 + v12) = v13;
  v15 = v13;

  *((_BYTE *)v5 + v7[9]) = *((_BYTE *)v6 + v7[9]);
  *(_QWORD *)((char *)v5 + v7[10]) = *(_QWORD *)((char *)v6 + v7[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23E08E41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)(a2 + v6);
  *(_OWORD *)(v7 + 8) = *(_OWORD *)(a2 + v6 + 8);
  *(_QWORD *)(v7 + 24) = *(_QWORD *)(a2 + v6 + 24);
  v9 = (int *)_s22StatusTextViewModifierV6ConfigVMa(0);
  v10 = v9[7];
  v11 = v7 + v10;
  v12 = v8 + v10;
  v13 = sub_23E134B00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_QWORD *)(v7 + v9[8]) = *(_QWORD *)(v8 + v9[8]);
  *(_BYTE *)(v7 + v9[9]) = *(_BYTE *)(v8 + v9[9]);
  *(_QWORD *)(v7 + v9[10]) = *(_QWORD *)(v8 + v9[10]);
  return a1;
}

uint64_t sub_23E08E4E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  *(_QWORD *)(a1 + v5) = *(_QWORD *)(a2 + v5);
  swift_release();
  v8 = v7[2];
  v6[1] = v7[1];
  v6[2] = v8;
  swift_bridgeObjectRelease();
  v6[3] = v7[3];
  v9 = (int *)_s22StatusTextViewModifierV6ConfigVMa(0);
  v10 = v9[7];
  v11 = (char *)v6 + v10;
  v12 = (char *)v7 + v10;
  v13 = sub_23E134B00();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = v9[8];
  v15 = *(void **)((char *)v6 + v14);
  *(_QWORD *)((char *)v6 + v14) = *(_QWORD *)((char *)v7 + v14);

  *((_BYTE *)v6 + v9[9]) = *((_BYTE *)v7 + v9[9]);
  *(_QWORD *)((char *)v6 + v9[10]) = *(_QWORD *)((char *)v7 + v9[10]);
  swift_release();
  return a1;
}

uint64_t sub_23E08E5EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E08E5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *(unsigned __int8 *)(a1 + 8);
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = _s22StatusTextViewModifierV6ConfigVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v10);
  }
}

uint64_t sub_23E08E674()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E08E680(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *(_BYTE *)(result + 8) = a2 + 1;
  }
  else
  {
    v7 = _s22StatusTextViewModifierV6ConfigVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t _s22StatusTextViewModifierVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D24438);
}

uint64_t sub_23E08E704()
{
  uint64_t result;
  unint64_t v1;

  result = _s22StatusTextViewModifierV6ConfigVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E08E778()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E08E788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = _s22StatusTextViewModifierVMa(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + *(int *)(v1 + 20) + ((v2 + 16) & ~v2);
  swift_release();
  swift_bridgeObjectRelease();
  v4 = _s22StatusTextViewModifierV6ConfigVMa(0);
  v5 = v3 + *(int *)(v4 + 28);
  v6 = sub_23E134B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E08E844@<X0>(uint64_t *a1@<X0>, int64x2_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s22StatusTextViewModifierVMa(0) - 8) + 80);
  return sub_23E08AA14(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_23E08E890()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = _s22StatusTextViewModifierVMa(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + *(int *)(v1 + 20) + v3;
  swift_release();
  swift_bridgeObjectRelease();
  v5 = _s22StatusTextViewModifierV6ConfigVMa(0);
  v6 = v4 + *(int *)(v5 + 28);
  v7 = sub_23E134B00();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E08E958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s22StatusTextViewModifierVMa(0) - 8) + 80);
  return sub_23E08AB50(a1, (unsigned __int8 *)(v2 + ((v5 + 24) & ~v5)), a2);
}

unint64_t sub_23E08E9C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D244C0;
  if (!qword_256D244C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D244B0);
    v2[0] = sub_23E08EA34();
    v2[1] = sub_23E03A6F4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D244C0);
  }
  return result;
}

unint64_t sub_23E08EA34()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D244C8;
  if (!qword_256D244C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D230C8);
    v2[0] = sub_23E08EAA0();
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D244C8);
  }
  return result;
}

unint64_t sub_23E08EAA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D244D0;
  if (!qword_256D244D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D230C0);
    v2[0] = sub_23E08EB24();
    v2[1] = sub_23DF89B88(&qword_256D20628, &qword_256D1E6B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D244D0);
  }
  return result;
}

unint64_t sub_23E08EB24()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D244D8;
  if (!qword_256D244D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D244A8);
    v2 = sub_23DF89B88(&qword_256D20620, &qword_256D1E830, MEMORY[0x24BDF1028]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D244D8);
  }
  return result;
}

uint64_t sub_23E08EBA8()
{
  return sub_23E136168();
}

uint64_t sub_23E08EBC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E056F58(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDEDDD8], MEMORY[0x24BDEE108]);
}

uint64_t sub_23E08EBEC(uint64_t a1)
{
  sub_23DFA055C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E08EC28()
{
  return sub_23E1361BC();
}

uint64_t sub_23E08EC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E056F58(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDEDD78], MEMORY[0x24BDEE278]);
}

uint64_t sub_23E08EC6C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E1361E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23E08EC98()
{
  return sub_23E1361EC();
}

unsigned __int8 *sub_23E08ECBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned __int8 *v11;
  uint64_t v13;
  uint64_t v14;

  v13 = a1;
  v14 = a2;
  swift_bridgeObjectRetain();
  v5 = sub_23E137224();
  v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v8 = HIBYTE(v6) & 0xF;
    v13 = v5;
    v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  v5 = sub_23E08F01C();
  v10 = v9;
  swift_bridgeObjectRelease();
  v6 = v10;
  if ((v10 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v7 = (unsigned __int8 *)sub_23E137554();
  }
LABEL_7:
  v11 = sub_23E08EDA0(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_23E08EDA0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  unsigned __int8 v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  uint64_t v9;
  unsigned __int8 *i;
  unsigned int v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;
  unsigned __int8 *v18;
  unsigned int v19;
  char v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  unsigned int v26;
  char v27;
  uint64_t v28;

  v3 = a2;
  v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        v5 = a2 - 1;
        if (a2 != 1)
        {
          v6 = a3 + 48;
          v7 = a3 + 55;
          v8 = a3 + 87;
          if (a3 > 10)
          {
            v6 = 58;
          }
          else
          {
            v8 = 97;
            v7 = 65;
          }
          if (result)
          {
            v9 = 0;
            for (i = result + 1; ; ++i)
            {
              v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8)
                    return 0;
                  v12 = -87;
                }
                else
                {
                  v12 = -55;
                }
              }
              else
              {
                v12 = -48;
              }
              v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
                return 0;
              v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12)))
                return 0;
              if (!--v5)
                return (unsigned __int8 *)v9;
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      v22 = a3 + 48;
      v23 = a3 + 55;
      v24 = a3 + 87;
      if (a3 > 10)
      {
        v22 = 58;
      }
      else
      {
        v24 = 97;
        v23 = 65;
      }
      if (result)
      {
        v25 = 0;
        do
        {
          v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24)
                return 0;
              v27 = -87;
            }
            else
            {
              v27 = -55;
            }
          }
          else
          {
            v27 = -48;
          }
          v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63)
            return 0;
          v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27)))
            return 0;
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  v14 = a2 - 1;
  if (a2 == 1)
    return 0;
  v15 = a3 + 48;
  v16 = a3 + 55;
  v17 = a3 + 87;
  if (a3 > 10)
  {
    v15 = 58;
  }
  else
  {
    v17 = 97;
    v16 = 65;
  }
  if (!result)
    return 0;
  v9 = 0;
  v18 = result + 1;
  do
  {
    v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17)
          return 0;
        v20 = -87;
      }
      else
      {
        v20 = -55;
      }
    }
    else
    {
      v20 = -48;
    }
    v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63)
      return 0;
    v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20)))
      return 0;
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_23E08F01C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_23E137230();
  v4 = sub_23E08F098(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_23E08F098(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_23E08F1DC(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_23E0AB704(v9, 0);
      v12 = sub_23E08F2C8((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x24264BA88](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x24264BA88);
LABEL_9:
      sub_23E137554();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24264BA88]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_23E08F1DC(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_23E0AB768(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_23E0AB768(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_23E137200();
  }
  __break(1u);
  return result;
}

unint64_t sub_23E08F2C8(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_33:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    v17 = v12 & 0xC;
    result = v12;
    if (v17 == v15)
      result = sub_23E0AB768(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_23E13720C();
      v19 = result;
      if (v17 != v15)
        goto LABEL_23;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
        if (v17 != v15)
          goto LABEL_23;
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_23E137554();
        v19 = *(_BYTE *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0)
            goto LABEL_24;
          goto LABEL_27;
        }
      }
    }
    result = sub_23E0AB768(v12, a6, a7);
    v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16)
      goto LABEL_35;
    v12 = sub_23E1371E8();
LABEL_29:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_23E08F4D8(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;

  if ((sub_23E136798() & 1) != 0
    && (*(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) ? (v4 = *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)) : (v4 = 0),
        (v4 || (sub_23E137614() & 1) != 0)
     && *(double *)(a1 + 24) == *(double *)(a2 + 24)
     && (v5 = _s22StatusTextViewModifierV6ConfigVMa(0), (sub_23E134AF4() & 1) != 0)
     && (sub_23DFF84F0(0, &qword_256D24030), (sub_23E137428() & 1) != 0)
     && *(unsigned __int8 *)(a1 + *(int *)(v5 + 36)) == *(unsigned __int8 *)(a2 + *(int *)(v5 + 36))))
  {
    return sub_23E136BDC();
  }
  else
  {
    return 0;
  }
}

unint64_t sub_23E08F5C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D244F0;
  if (!qword_256D244F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24478);
    v2[0] = sub_23DF89B88(&qword_256D244F8, &qword_256D24470, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D24500, &qword_256D24508, MEMORY[0x24BDF0B70]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D244F0);
  }
  return result;
}

uint64_t sub_23E08F670(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  _QWORD v44[2];
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  int64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v50 = sub_23E134C80();
  v58 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v4 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryControlInfo(0);
  v56 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v47 = (uint64_t)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v51 = (uint64_t)v44 - v8;
  v54 = type metadata accessor for AccessoryControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v54);
  v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v44[1] = v1;
    v60 = MEMORY[0x24BEE4AF8];
    sub_23E09E3C0(0, v11, 0);
    v13 = type metadata accessor for AccessoryControlGroup(0);
    v14 = 0;
    v15 = *(_QWORD *)(v13 - 8);
    v16 = *(unsigned __int8 *)(v15 + 80);
    v52 = *(_QWORD *)(v15 + 72);
    v53 = a1 + ((v16 + 32) & ~v16);
    v46 = xmmword_23E138410;
    v45 = xmmword_23E138050;
    v48 = v11;
    v49 = v10;
    while (1)
    {
      v57 = v14;
      sub_23DF73E10(v53 + v52 * v14, (uint64_t)v10, type metadata accessor for AccessoryControlGroup.LayoutType);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          v18 = *(_QWORD *)v10;
          v19 = *(_QWORD *)(*(_QWORD *)v10 + 16);
          if (v19)
            goto LABEL_8;
        }
        else
        {
          v37 = v51;
          sub_23E0902F4((uint64_t)v10, v51);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D21308);
          v38 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
          v18 = swift_allocObject();
          *(_OWORD *)(v18 + 16) = v45;
          sub_23E0902F4(v37, v18 + v38);
          v19 = *(_QWORD *)(v18 + 16);
          if (v19)
          {
LABEL_8:
            v59 = v12;
            sub_23E09E370(0, v19, 0);
            v28 = *(unsigned __int8 *)(v56 + 80);
            v55 = v18;
            v29 = v18 + ((v28 + 32) & ~v28);
            v30 = *(_QWORD *)(v56 + 72);
            v31 = v59;
            v32 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
            v33 = v50;
            do
            {
              v32(v4, v29, v33);
              v59 = v31;
              v34 = v4;
              v36 = *(_QWORD *)(v31 + 16);
              v35 = *(_QWORD *)(v31 + 24);
              if (v36 >= v35 >> 1)
              {
                sub_23E09E370(v35 > 1, v36 + 1, 1);
                v33 = v50;
                v31 = v59;
              }
              *(_QWORD *)(v31 + 16) = v36 + 1;
              (*(void (**)(unint64_t, char *, uint64_t))(v58 + 32))(v31+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(_QWORD *)(v58 + 72) * v36, v34, v33);
              v29 += v30;
              --v19;
              v4 = v34;
            }
            while (v19);
            swift_bridgeObjectRelease();
            v11 = v48;
            v10 = v49;
            v12 = MEMORY[0x24BEE4AF8];
            goto LABEL_15;
          }
        }
      }
      else
      {
        v20 = (uint64_t)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48)];
        v21 = v51;
        sub_23E0902F4((uint64_t)v10, v51);
        v22 = v47;
        sub_23E0902F4(v20, v47);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D21308);
        v23 = *(_QWORD *)(v56 + 72);
        v24 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
        v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = v46;
        v26 = v25 + v24;
        sub_23DF73E10(v21, v26, type metadata accessor for AccessoryControlInfo);
        v27 = v22;
        v18 = v25;
        sub_23E0902F4(v27, v26 + v23);
        sub_23DFFC2AC(v21);
        v19 = *(_QWORD *)(v25 + 16);
        if (v19)
          goto LABEL_8;
      }
      swift_bridgeObjectRelease();
      v31 = v12;
LABEL_15:
      v39 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E3C0(0, *(_QWORD *)(v39 + 16) + 1, 1);
        v39 = v60;
      }
      v40 = v57;
      v42 = *(_QWORD *)(v39 + 16);
      v41 = *(_QWORD *)(v39 + 24);
      if (v42 >= v41 >> 1)
      {
        sub_23E09E3C0(v41 > 1, v42 + 1, 1);
        v40 = v57;
        v39 = v60;
      }
      v14 = v40 + 1;
      *(_QWORD *)(v39 + 16) = v42 + 1;
      *(_QWORD *)(v39 + 8 * v42 + 32) = v31;
      if (v14 == v11)
        return v39;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t AccessoryControlModule.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E08F670(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t AccessoryControlModule.label.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessoryControlModule.label.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AccessoryControlModule.label.modify())()
{
  return CGPointMake;
}

uint64_t AccessoryControlModule.groups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AccessoryControlModule.groups.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*AccessoryControlModule.groups.modify())()
{
  return CGPointMake;
}

uint64_t AccessoryControlModule.accesibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AccessoryControlModule.accesibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*AccessoryControlModule.accesibilityIdentifier.modify())()
{
  return CGPointMake;
}

void __swiftcall AccessoryControlModule.init(groups:label:)(HomeAccessoryControlUI::AccessoryControlModule *__return_ptr retstr, Swift::OpaquePointer groups, Swift::String_optional label)
{
  retstr->label = label;
  retstr->accesibilityIdentifier.value._countAndFlagsBits = 0;
  retstr->accesibilityIdentifier.value._object = 0;
  retstr->groups = groups;
}

uint64_t AccessoryControlModule.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[2];
  v4 = v1[4];
  if (v1[1])
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  swift_bridgeObjectRetain();
  sub_23DFAD618(a1, v3);
  swift_bridgeObjectRelease();
  if (!v4)
    return sub_23E1376B0();
  sub_23E1376B0();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t AccessoryControlModule.hashValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[4];
  sub_23E137698();
  sub_23E1376B0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23DFAD618((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  sub_23E1376B0();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E08FE20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[4];
  sub_23E137698();
  sub_23E1376B0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23DFAD618((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  sub_23E1376B0();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E08FF04@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_23E08F670(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t _s22HomeAccessoryControlUI0bC6ModuleV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a2[1];
  v8 = a2[2];
  v10 = a2[3];
  v9 = a2[4];
  if (!v3)
  {
    if (v7)
      return 0;
    goto LABEL_10;
  }
  if (!v7)
    return 0;
  v11 = *a1 == *a2 && v3 == v7;
  if (v11 || (v12 = sub_23E137614(), result = 0, (v12 & 1) != 0))
  {
LABEL_10:
    if ((sub_23E11C8B4(v4, v8) & 1) != 0)
    {
      if (v6)
      {
        if (v9 && (v5 == v10 && v6 == v9 || (sub_23E137614() & 1) != 0))
          return 1;
      }
      else if (!v9)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_23E090024()
{
  unint64_t result;

  result = qword_256D24510;
  if (!qword_256D24510)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlModule, &type metadata for AccessoryControlModule);
    atomic_store(result, (unint64_t *)&qword_256D24510);
  }
  return result;
}

uint64_t sub_23E090068()
{
  return sub_23E090094((unint64_t *)&qword_256D24518, qword_256D24520, (uint64_t (*)(void))sub_23E058F54);
}

uint64_t sub_23E090094(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12A8], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for AccessoryControlModule()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AccessoryControlModule(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AccessoryControlModule(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AccessoryControlModule(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlModule(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlModule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlModule()
{
  return &type metadata for AccessoryControlModule;
}

uint64_t sub_23E0902F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for AccessoryControlInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *_s4LockVMa_0()
{
  return &_s4LockVN_0;
}

uint64_t sub_23E090348@<X0>(char *a1@<X0>, uint64_t a2@<X2>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v27 = xmmword_23E138050;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  v14 = v13 + v12;
  v15 = v14 + *(int *)(v10 + 48);
  v16 = *MEMORY[0x24BE4E310];
  v17 = sub_23E1356DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  *(_QWORD *)(v15 + 24) = MEMORY[0x24BEE1328];
  *(_BYTE *)v15 = v9;
  v18 = sub_23E0ECA08(v13);
  v19 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v20 = sub_23E134C80();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16))(v23 + v22, a2, v20);
  v24 = sub_23E0E212C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v18;
  a3[1] = 0;
  v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v25 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v25 + 28)) = v24;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

uint64_t sub_23E09057C(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v2 = (int *)type metadata accessor for AccessoryControlInfo(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v46 = type metadata accessor for ControlTextModifier.Config(0);
  MEMORY[0x24BDAC7A8](v46);
  v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v7);
  v50 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E1356DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_23E1359AC();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v48 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BE4E310], v9);
  v47 = type metadata accessor for HAPControlSolver.Source();
  v49 = a1;
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_23DF73DD0((uint64_t)v15);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v44 = v16;
    v45 = v17;
    v20 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v48, v15, v16);
    type metadata accessor for AccessoryControlSolver.HAP();
    swift_storeEnumTagMultiPayload();
    v22 = v49;
    v21 = v50;
    sub_23E12C404(v49, v20, v50);
    sub_23DF73E54((uint64_t)v6, type metadata accessor for ControlTextModifier.Config);
    sub_23E135988();
    v23 = v21;
    sub_23DF73E10(v21, (uint64_t)&v4[v2[5]], type metadata accessor for AccessoryControlInfo.State);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v24 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v25 = (v24 + 32) & ~v24;
    v26 = swift_allocObject();
    v46 = xmmword_23E138050;
    *(_OWORD *)(v26 + 16) = xmmword_23E138050;
    sub_23DF73E10(v22, v26 + v25, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v27 = v47;
    v28 = *(_BYTE *)(v22 + *(int *)(v47 + 48));
    v29 = (uint64_t *)(v22 + *(int *)(v47 + 52));
    v30 = *v29;
    v31 = v29[1];
    v32 = &v4[v2[7]];
    v33 = v2[9];
    *(_QWORD *)&v4[v2[11]] = v26;
    v4[v2[6]] = v28;
    *(_QWORD *)v32 = v30;
    *((_QWORD *)v32 + 1) = v31;
    *(_WORD *)&v4[v2[8]] = 1027;
    v4[v33] = 12;
    v4[v2[10]] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v34 = type metadata accessor for AccessoryControlGroup(0);
    v35 = *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80);
    v36 = (v35 + 32) & ~v35;
    v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v46;
    v37 = v19 + v36;
    sub_23DF73E10((uint64_t)v4, v37, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v38 = (uint64_t *)(v22 + *(int *)(v27 + 28));
    v39 = *v38;
    v40 = v38[1];
    v41 = (_QWORD *)(v37 + *(int *)(v34 + 24));
    v42 = (_QWORD *)(v37 + *(int *)(v34 + 20));
    *v42 = v39;
    v42[1] = v40;
    *v41 = 0;
    v41[1] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23DF73E54((uint64_t)v4, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E54(v23, type metadata accessor for AccessoryControlInfo.State);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v20, v44);
  }
  return v19;
}

uint64_t sub_23E0909BC@<X0>(uint64_t a1@<X8>)
{
  char v2;
  __int128 v3;
  __int128 v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;
  __int128 v9;
  __int128 v10;

  if (qword_256D1D370 != -1)
    result = swift_once();
  v2 = byte_256D224A0;
  v3 = *(_OWORD *)&qword_256D224A8;
  v4 = *(_OWORD *)&qword_256D224B8;
  v5 = word_256D224C8;
  v6 = HIBYTE(word_256D224C8);
  if (qword_256D1D358 != -1)
  {
    v9 = *(_OWORD *)&qword_256D224B8;
    v10 = *(_OWORD *)&qword_256D224A8;
    result = swift_once();
    v4 = v9;
    v3 = v10;
  }
  v7 = qword_256D22438;
  *(_WORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 49) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_BYTE *)(a1 + 64) = 0;
  return result;
}

uint64_t AccessoryControlViewController.tileHelper.getter()
{
  return swift_retain();
}

uint64_t sub_23E090AAC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + class metadata base offset for AccessoryControlViewController + 8), a1);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v9 - v6;
  sub_23E1363CC();
  sub_23DFA62B4((uint64_t)&v7[*(int *)(v4 + 40)], a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_23E090B5C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v6 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v14 - v8;
  sub_23E1363CC();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)&v9[*(int *)(v6 + 40)], a1);
  sub_23E092AF8((uint64_t)v9, v10, v11, v12);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

void (*sub_23E090C1C(_QWORD *a1))(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  sub_23E090AAC(v4, (uint64_t)v3);
  return sub_23E090C68;
}

void sub_23E090C68(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = (uint64_t *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_23DFA62B4(*a1, (uint64_t)(v4 + 5));
    sub_23E090B5C(v4 + 5, v5, v6, v7);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  }
  else
  {
    sub_23E090B5C((uint64_t *)*a1, a2, a3, a4);
  }
  free(v4);
}

uint64_t sub_23E090CC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  _QWORD v11[2];

  v5 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - v7;
  sub_23E1363CC();
  v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  swift_retain();
  v9(v8, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  return v11[1];
}

uint64_t sub_23E090DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];

  v6 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v12 - v8;
  sub_23E1363CC();
  v10 = *(void (**)(char *, uint64_t))(v7 + 8);
  swift_retain();
  v10(v9, v6);
  swift_getKeyPath();
  swift_getKeyPath();
  v12[1] = a1;
  return sub_23E135C88();
}

uint64_t (*sub_23E090EA8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  a1[1] = v4;
  *a1 = sub_23E090CC8((uint64_t)a1, a2, a3, a4);
  return sub_23E090EDC;
}

uint64_t sub_23E090EDC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((a2 & 1) == 0)
    return sub_23E090DC0(*a1, a2, a3, a4);
  v4 = swift_bridgeObjectRetain();
  sub_23E090DC0(v4, v5, v6, v7);
  return swift_bridgeObjectRelease();
}

double sub_23E090F20@<D0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  double result;
  __int128 v9;
  __int16 v10;
  char v11;
  __int128 v12;
  __int128 v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;

  sub_23E090FF4(a1, (uint64_t)&v10);
  v3 = v11;
  v4 = v14;
  v5 = v15;
  v6 = v16;
  v7 = v17;
  *(_WORD *)a2 = v10;
  *(_BYTE *)(a2 + 8) = v3;
  result = *(double *)&v12;
  v9 = v13;
  *(_OWORD *)(a2 + 16) = v12;
  *(_OWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 48) = v4;
  *(_BYTE *)(a2 + 49) = v5;
  *(_QWORD *)(a2 + 56) = v6;
  *(_BYTE *)(a2 + 64) = v7;
  return result;
}

void sub_23E090F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  char v8;
  __int128 v9;
  __int16 v10;
  char v11;
  __int128 v12;
  __int128 v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;

  v4 = *(_BYTE *)(a1 + 8);
  v5 = *(_BYTE *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 49);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_BYTE *)(a1 + 64);
  v10 = *(_WORD *)a1;
  v11 = v4;
  v9 = *(_OWORD *)(a1 + 32);
  v12 = *(_OWORD *)(a1 + 16);
  v13 = v9;
  v14 = v5;
  v15 = v6;
  v16 = v7;
  v17 = v8;
  sub_23E091100(&v10, a2, a3, a4);
}

double sub_23E090FF4@<D0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  __int16 v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  char v16;
  double result;
  __int128 v18;

  v4 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v2) + class metadata base offset for AccessoryControlViewController + 8), a1);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - v6;
  sub_23E1363CC();
  v8 = &v7[*(int *)(v4 + 44)];
  v9 = *(_WORD *)v8;
  v10 = v8[8];
  v18 = *((_OWORD *)v8 + 1);
  v11 = *((_QWORD *)v8 + 4);
  v12 = *((_QWORD *)v8 + 5);
  v13 = v8[48];
  v14 = v8[49];
  v15 = *((_QWORD *)v8 + 7);
  v16 = v8[64];
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(_WORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10;
  result = *(double *)&v18;
  *(_OWORD *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 32) = v11;
  *(_QWORD *)(a2 + 40) = v12;
  *(_BYTE *)(a2 + 48) = v13;
  *(_BYTE *)(a2 + 49) = v14;
  *(_QWORD *)(a2 + 56) = v15;
  *(_BYTE *)(a2 + 64) = v16;
  return result;
}

void sub_23E091100(__int16 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int16 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v6 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - v8;
  v10 = *a1;
  v11 = *((_BYTE *)a1 + 8);
  v25 = *((_OWORD *)a1 + 1);
  v12 = *((_QWORD *)a1 + 4);
  v13 = *((_QWORD *)a1 + 5);
  v14 = *((_BYTE *)a1 + 48);
  v15 = *((_BYTE *)a1 + 49);
  v16 = *((_QWORD *)a1 + 7);
  LOBYTE(a1) = *((_BYTE *)a1 + 64);
  sub_23E1363CC();
  v17 = &v9[*(int *)(v6 + 44)];
  *(_WORD *)v17 = v10;
  v17[8] = v11;
  *((_OWORD *)v17 + 1) = v25;
  *((_QWORD *)v17 + 4) = v12;
  *((_QWORD *)v17 + 5) = v13;
  v17[48] = v14;
  v17[49] = v15;
  *((_QWORD *)v17 + 7) = v16;
  v17[64] = (char)a1;
  sub_23E092AF8((uint64_t)v9, v18, v19, v20);
  v21 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_23E092280(v21, v22, v23, v24);
}

void (*sub_23E091218(_QWORD *a1))(_BYTE **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_23E090FF4(v4, (uint64_t)v3);
  return sub_23E091264;
}

void sub_23E091264(_BYTE **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  char v14;
  __int16 v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  char v24;

  v4 = *a1;
  v5 = (*a1)[1];
  v6 = (*a1)[8];
  v8 = *((_QWORD *)*a1 + 2);
  v7 = *((_QWORD *)*a1 + 3);
  v10 = *((_QWORD *)*a1 + 4);
  v9 = *((_QWORD *)*a1 + 5);
  v11 = (*a1)[48];
  v12 = (*a1)[49];
  v13 = *((_QWORD *)*a1 + 7);
  v14 = (*a1)[64];
  LOBYTE(v15) = **a1;
  HIBYTE(v15) = v5;
  v16 = v6;
  v17 = v8;
  v18 = v7;
  v19 = v10;
  v20 = v9;
  v21 = v11;
  v22 = v12;
  v23 = v13;
  v24 = v14;
  sub_23E091100(&v15, a2, a3, a4);
  free(v4);
}

uint64_t sub_23E0912E0()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*(_QWORD *)((char *)v0
                                        + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                                    + (*MEMORY[0x24BEE4EA0] & *v0)
                                                    + 40))
                            + 41);
}

uint64_t sub_23E091310(uint64_t result)
{
  _QWORD *v1;

  *(_BYTE *)(*(_QWORD *)((char *)v1
                       + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                   + (*MEMORY[0x24BEE4EA0] & *v1)
                                   + 40))
           + 41) = result;
  return result;
}

uint64_t (*sub_23E091340(uint64_t a1))(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(*(_QWORD *)((char *)v1
                                            + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                                        + (*MEMORY[0x24BEE4EA0] & *v1)
                                                        + 40))
                                + 41);
  return sub_23E091384;
}

uint64_t sub_23E091384(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)result
                       + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                   + (*MEMORY[0x24BEE4EA0] & **(_QWORD **)result)
                                   + 40))
           + 41) = *(_BYTE *)(result + 8);
  return result;
}

uint64_t sub_23E0913BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t);
  uint64_t v11;

  v5 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - v7;
  sub_23E1363CC();
  v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  swift_retain();
  v9(v8, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  return v11;
}

void sub_23E0914B4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  id v15;
  id v16;
  id v17;
  id v18[2];

  v7 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v18 - v12;
  sub_23E1363CC();
  v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  v14(v13, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  v15 = v18[0];
  if (v18[0])
  {
    objc_msgSend(v18[0], sel_removeFromParentViewController);

  }
  sub_23E1363CC();
  swift_retain();
  v14(v11, v7);
  swift_getKeyPath();
  swift_getKeyPath();
  v18[0] = a1;
  v18[1] = a2;
  v16 = a1;
  sub_23E135C88();
  if (a1)
  {
    v17 = v16;
    objc_msgSend(v4, sel_addChildViewController_, v17);
    objc_msgSend(v17, sel_didMoveToParentViewController_, v4);

  }
}

void (*sub_23E0916A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  a1[2] = v4;
  *a1 = sub_23E0913BC((uint64_t)a1, a2, a3, a4);
  a1[1] = v6;
  return sub_23E0916D8;
}

void sub_23E0916D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v8 = v4;
    sub_23E0914B4(v4, v5, v6, v7);

  }
  else
  {
    sub_23E0914B4(*(void **)a1, v5, a3, a4);
  }
}

uint64_t sub_23E091744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v5 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v12 - v7;
  sub_23E1363CC();
  v9 = *(_QWORD *)&v8[*(int *)(v5 + 60)];
  v10 = *(void (**)(char *, uint64_t))(v6 + 8);
  swift_retain();
  v10(v8, v5);
  return v9;
}

uint64_t sub_23E0917EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_23E092BA0(a1, a2, a3, a4);
  return swift_release();
}

uint64_t (*sub_23E091810(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  a1[1] = v4;
  *a1 = sub_23E091744((uint64_t)a1, a2, a3, a4);
  return sub_23E091844;
}

uint64_t sub_23E091844(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = swift_retain();
    sub_23E092BA0(v5, v6, v7, v8);
    swift_release();
  }
  else
  {
    sub_23E092BA0(v4, a2, a3, a4);
  }
  return swift_release();
}

void sub_23E091888(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void *v3;

  v2 = *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*MEMORY[0x24BEE4EA0] & *v1) + 48);
  v3 = *(void **)((char *)v1 + v2);
  *(_QWORD *)((char *)v1 + v2) = a1;

}

id AccessoryControlViewController.__allocating_init(model:deviceIdentifier:tileHelper:alarmAndTimerUIViewBuilder:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  objc_class *v5;
  objc_class *v6;
  id v12;
  id v13;
  uint64_t AssociatedTypeWitness;

  v6 = v5;
  v12 = objc_allocWithZone(v6);
  v13 = sub_23E092C60(a1, a2, a3, a4, a5);
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  swift_unknownObjectRelease();
  return v13;
}

id AccessoryControlViewController.init(model:deviceIdentifier:tileHelper:alarmAndTimerUIViewBuilder:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  id v6;
  uint64_t AssociatedTypeWitness;

  v6 = sub_23E092C60(a1, a2, a3, a4, a5);
  swift_release();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a2, AssociatedTypeWitness);
  swift_unknownObjectRelease();
  return v6;
}

void sub_23E091A14()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v1 = v0;
  v2 = *v0;
  v3 = (_QWORD *)MEMORY[0x24BEE4EA0];
  *(_QWORD *)(*(_QWORD *)((char *)v1
                        + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                    + (*MEMORY[0x24BEE4EA0] & v2)
                                    + 40))
            + 24) = &off_250ECD5E0;
  v4 = swift_unknownObjectWeakAssign();
  (*(void (**)(uint64_t))(**(_QWORD **)((char *)v1
                                                + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                                            + (*v3 & *v1)
                                                            + 16))
                                  + 184))(v4);
  sub_23E091F48();
}

id AccessoryControlViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_23E091AE4(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s22HomeAccessoryControlUI0bC14ViewControllerC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

void sub_23E091B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  id v6;
  void *v7;
  id v8;
  objc_super v9;

  v5 = (objc_class *)type metadata accessor for AccessoryControlViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4)+ class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4)+ class metadata base offset for AccessoryControlViewController+ 8), a4);
  v9.receiver = v4;
  v9.super_class = v5;
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  v6 = objc_msgSend(v4, sel_view);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v7, sel_setBackgroundColor_, v8);

  }
  else
  {
    __break(1u);
  }
}

void sub_23E091BCC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;

  v4 = a1;
  sub_23E091B08((uint64_t)v4, v1, v2, v3);

}

uint64_t sub_23E091C00(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v7 = (objc_class *)type metadata accessor for AccessoryControlViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4)+ class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4)+ class metadata base offset for AccessoryControlViewController+ 8), a4);
  v11.receiver = v4;
  v11.super_class = v7;
  objc_msgSendSuper2(&v11, sel_viewWillAppear_, a1 & 1);
  v8 = *(_QWORD *)((char *)v4
                 + *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*v6 & *v4) + 16));
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 200))(1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)v8 + 160))(v9);
}

void sub_23E091CA8(void *a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;
  id v6;

  v6 = a1;
  sub_23E091C00(a3, (uint64_t)v6, v4, v5);

}

id sub_23E091CE8(char a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  objc_class *v5;
  objc_super v7;

  v3 = *MEMORY[0x24BEE4EA0] & *v1;
  (*(void (**)(_QWORD))(**(_QWORD **)((char *)v1
                                               + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                                           + v3
                                                           + 16))
                                 + 200))(0);
  v5 = (objc_class *)type metadata accessor for AccessoryControlViewController(0, *(_QWORD *)(v3 + class metadata base offset for AccessoryControlViewController), *(_QWORD *)(v3 + class metadata base offset for AccessoryControlViewController + 8), v4);
  v7.receiver = v1;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_viewDidDisappear_, a1 & 1);
}

void sub_23E091D84(void *a1, uint64_t a2, char a3)
{
  id v4;

  v4 = a1;
  sub_23E091CE8(a3);

}

void sub_23E091DC4(void *a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  objc_class *v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;
  _QWORD v14[6];
  objc_super v15;

  v10 = (objc_class *)type metadata accessor for AccessoryControlViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v6)+ class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v6)+ class metadata base offset for AccessoryControlViewController+ 8), a6);
  v15.receiver = v6;
  v15.super_class = v10;
  objc_msgSendSuper2(&v15, sel_viewWillTransitionToSize_withTransitionCoordinator_, a1, a2, a3);
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = v6;
  v14[4] = sub_23E093284;
  v14[5] = v11;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_23E092054;
  v14[3] = &block_descriptor_2;
  v12 = _Block_copy(v14);
  v13 = v6;
  swift_release();
  objc_msgSend(a1, sel_animateAlongsideTransition_completion_, v12, 0);
  _Block_release(v12);
}

uint64_t sub_23E091ED8()
{
  sub_23E091F48();
  type metadata accessor for TransitionTileHelper();
  sub_23DFB7DC0();
  sub_23E135C40();
  sub_23E135C58();
  return swift_release();
}

void sub_23E091F48()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int16 v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  char v27;

  v1 = class metadata base offset for AccessoryControlViewController + (*MEMORY[0x24BEE4EA0] & *v0);
  v2 = *(_QWORD *)((char *)v0 + *(_QWORD *)(v1 + 40));
  v3 = *(_QWORD *)((char *)v0 + *(_QWORD *)(v1 + 16));
  *(double *)(v2 + 32) = (*(double (**)(void))(*(_QWORD *)v3 + 192))();
  (*(void (**)(uint64_t *__return_ptr))(*(_QWORD *)v3 + 112))(&v21);
  v5 = v21;
  if (v21 != 2)
  {
    v6 = v25;
    v8 = v23;
    v7 = v24;
    v12 = v22;
    sub_23E090FF4(v4, (uint64_t)&v21);
    v13 = v21;
    v14 = v5 & 1;
    v15 = v12;
    v16 = v8;
    v17 = v7;
    v18 = v6 & 0x101;
    v19 = v26;
    v20 = v27;
    sub_23E091100(&v13, v9, v10, v11);
  }
  sub_23E090FF4(v4, (uint64_t)&v21);
  *(_BYTE *)(v2 + 40) = v22;
}

uint64_t sub_23E092054(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_23E09209C(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v9;
  uint64_t v10;
  id v11;

  swift_unknownObjectRetain();
  v11 = a1;
  sub_23E091DC4(a5, a2, a3, (uint64_t)v11, v9, v10);
  swift_unknownObjectRelease();

}

void sub_23E092108(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  _QWORD aBlock[6];

  v8 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)aBlock - v10;
  if ((a1 & 1) != 0)
  {
    sub_23E1363CC();
    AccessoryControlModelView.dismiss(completion:)((uint64_t)a2, a3, v8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v12 = objc_msgSend(v4, sel_presentingViewController);
    if (v12)
    {
      v13 = v12;
      objc_msgSend(v12, sel_dismissViewControllerAnimated_completion_, 0, 0);

    }
    if (a2)
    {
      aBlock[4] = a2;
      aBlock[5] = a3;
      aBlock[0] = MEMORY[0x24BDAC760];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_23DFA4B54;
      aBlock[3] = &block_descriptor_11;
      a2 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
    }
    objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 0, a2);
    _Block_release(a2);
  }
}

void sub_23E092280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  _QWORD *v17;
  uint8_t *v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_BYTE *, uint64_t);
  id v26;
  uint64_t v27;
  void *v28;
  char *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  void *v37;
  _BYTE v39[56];
  uint64_t v40;

  v5 = v4;
  v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v7 = (uint64_t *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController);
  v8 = *v7;
  v9 = v7[1];
  v10 = type metadata accessor for AccessoryControlModelView(0, *v7, v9, a4);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v39[-v12 - 8];
  if (qword_256D1D270 != -1)
    swift_once();
  v14 = sub_23E135C10();
  __swift_project_value_buffer(v14, (uint64_t)qword_256D1EAC0);
  v15 = sub_23E135BF8();
  v16 = sub_23E137368();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = v6;
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_23DF71000, v15, v16, "styleDidUpdate", v18, 2u);
    v19 = v18;
    v6 = v17;
    MEMORY[0x24264C628](v19, -1, -1);
  }

  sub_23E090FF4(v20, (uint64_t)v39);
  if ((v40 & 2) != 0)
  {
    v22 = class metadata base offset for AccessoryControlViewController + (*v6 & *v5);
    if (!*(_QWORD *)((char *)v5 + *(_QWORD *)(v22 + 48)))
    {
      v23 = *(_QWORD *)((char *)v5 + *(_QWORD *)(v22 + 40));
      swift_retain();
      sub_23E1363CC();
      v24 = *(_QWORD *)&v13[*(int *)(v10 + 48)];
      v25 = *(void (**)(_BYTE *, uint64_t))(v11 + 8);
      swift_retain();
      v25(v13, v10);
      v26 = objc_msgSend(v5, sel_view);
      if (!v26)
      {
        __break(1u);
        return;
      }
      v28 = v26;
      _s28SwipeDownDismissalControllerCMa(0, v8, v9, v27);
      v29 = sub_23E0834EC(v23, v24, v28);
      v6 = (_QWORD *)MEMORY[0x24BEE4EA0];
      v30 = *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*MEMORY[0x24BEE4EA0] & *v5) + 48);
      v31 = *(void **)((char *)v5 + v30);
      *(_QWORD *)((char *)v5 + v30) = v29;

    }
  }
  sub_23E090FF4(v21, (uint64_t)v39);
  if ((v40 & 2) == 0)
  {
    v32 = *v6 & *v5;
    v33 = class metadata base offset for AccessoryControlViewController + 48;
    v34 = *(void **)((char *)v5 + *(_QWORD *)(v32 + class metadata base offset for AccessoryControlViewController + 48));
    if (v34)
    {
      v35 = v34;
      sub_23E0836F0();

      v33 = class metadata base offset for AccessoryControlViewController + 48;
      v32 = *v6 & *v5;
    }
    v36 = *(_QWORD *)(v32 + v33);
    v37 = *(void **)((char *)v5 + v36);
    *(_QWORD *)((char *)v5 + v36) = 0;

  }
}

void AccessoryControlViewController.__allocating_init(rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void AccessoryControlViewController.init(rootView:)()
{
  sub_23E0932A4();
}

void AccessoryControlViewController.__allocating_init(coder:rootView:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void AccessoryControlViewController.init(coder:rootView:)()
{
  sub_23E0932D0();
}

void sub_23E0925D4()
{
  _QWORD *v0;
  _QWORD *v1;
  char *v2;
  uint64_t AssociatedTypeWitness;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  swift_release();
  swift_unknownObjectRelease();
  v2 = (char *)v0 + *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*v1 & *v0) + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v2, AssociatedTypeWitness);
  swift_release();
  objc_release(*(id *)((char *)v0
                     + *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*v1 & *v0) + 48)));
}

id AccessoryControlViewController.__deallocating_deinit(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for AccessoryControlViewController(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4)+ class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4)+ class metadata base offset for AccessoryControlViewController+ 8), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

void sub_23E09272C(_QWORD *a1)
{
  _QWORD *v2;
  char *v3;
  uint64_t AssociatedTypeWitness;

  v2 = (_QWORD *)MEMORY[0x24BEE4EA0];
  swift_release();
  swift_unknownObjectRelease();
  v3 = (char *)a1 + *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*v2 & *a1) + 32);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v3, AssociatedTypeWitness);
  swift_release();
  objc_release(*(id *)((char *)a1
                     + *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*v2 & *a1) + 48)));
}

uint64_t sub_23E092830()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)((char *)v0
                                            + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                                        + (*MEMORY[0x24BEE4EA0] & *v0)
                                                        + 16))
                              + 136))();
}

uint64_t sub_23E09287C()
{
  _QWORD *v0;

  (*(void (**)(void))(**(_QWORD **)((char *)v0
                                  + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                              + (*MEMORY[0x24BEE4EA0] & *v0)
                                              + 16))
                    + 152))();
  type metadata accessor for TransitionTileHelper();
  sub_23DFB7DC0();
  sub_23E135C40();
  sub_23E135C58();
  return swift_release();
}

uint64_t sub_23E0928F0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD *))(**(_QWORD **)((char *)v0
                                                           + *(_QWORD *)(class metadata base offset for AccessoryControlViewController
                                                                       + (*MEMORY[0x24BEE4EA0] & *v0)
                                                                       + 16))
                                             + 144))(v0);
}

void sub_23E092948(char a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v5;
  _QWORD v6[6];

  if (a2)
  {
    v6[4] = a2;
    v6[5] = a3;
    v6[0] = MEMORY[0x24BDAC760];
    v6[1] = 1107296256;
    v6[2] = sub_23DFA4B54;
    v6[3] = &block_descriptor_36;
    v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    v5 = 0;
  }
  objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, a1 & 1, v5);
  _Block_release(v5);
}

double sub_23E092A00@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_23E092A7C(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_23E135C88();
}

uint64_t sub_23E092AF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  MEMORY[0x24BDAC7A8](v6);
  (*(void (**)(char *, uint64_t))(v7 + 16))((char *)&v10 - v8, a1);
  return sub_23E1363D8();
}

uint64_t sub_23E092BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v6 = type metadata accessor for AccessoryControlModelView(0, *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController), *(_QWORD *)((*MEMORY[0x24BEE4EA0] & *v4) + class metadata base offset for AccessoryControlViewController + 8), a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - v8;
  swift_retain();
  sub_23E1363CC();
  v10 = *(int *)(v6 + 60);
  swift_release();
  *(_QWORD *)&v9[v10] = a1;
  sub_23E092AF8((uint64_t)v9, v11, v12, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_23E092C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t *v9;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  _QWORD *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  char v72;
  char v73;
  uint64_t v74;
  char v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  char v79;
  char v80;
  uint64_t v81;
  char v82;
  _OWORD v83[2];
  uint64_t v84;

  v6 = v5;
  v61 = a4;
  v56 = a3;
  v55 = a2;
  v9 = (uint64_t *)((*MEMORY[0x24BEE4EA0] & *v6) + class metadata base offset for AccessoryControlViewController);
  v10 = *v9;
  v58 = v9[1];
  v59 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v54 = (char *)&v53 - v13;
  v57 = type metadata accessor for AccessoryControlModelView(0, v10, v58, v14);
  v60 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v16 = (char *)&v53 - v15;
  v68 = *a5;
  v67 = a5[1];
  v66 = a5[8];
  v17 = *((_QWORD *)a5 + 2);
  v18 = *((_QWORD *)a5 + 3);
  v19 = *((_QWORD *)a5 + 4);
  v20 = *((_QWORD *)a5 + 5);
  v65 = a5[48];
  v64 = a5[49];
  v63 = *((_QWORD *)a5 + 7);
  v62 = a5[64];
  v21 = v9[5];
  type metadata accessor for AnimationModel();
  swift_allocObject();
  v22 = v6;
  *(_QWORD *)((char *)v6 + v21) = sub_23DF90A80();
  v23 = (_QWORD *)MEMORY[0x24BEE4EA0];
  *(_QWORD *)&v22[*(_QWORD *)(class metadata base offset for AccessoryControlViewController
                            + (*MEMORY[0x24BEE4EA0] & *(_QWORD *)v22)
                            + 48)] = 0;
  *(_QWORD *)&v22[*(_QWORD *)(class metadata base offset for AccessoryControlViewController
                            + (*v23 & *(_QWORD *)v22)
                            + 24)] = a1;
  v24 = v23;
  v25 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v26 = v55;
  v25(&v22[*(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*v23 & *(_QWORD *)v22) + 32)], v55, AssociatedTypeWitness);
  *(_QWORD *)&v22[*(_QWORD *)(class metadata base offset for AccessoryControlViewController
                            + (*v24 & *(_QWORD *)v22)
                            + 16)] = v56;
  swift_unknownObjectRetain();
  swift_retain();

  v27 = (uint64_t)v54;
  v25(v54, v26, AssociatedTypeWitness);
  v28 = *(_QWORD *)((char *)v6 + v21);
  v84 = 0;
  memset(v83, 0, sizeof(v83));
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  sub_23E0909BC((uint64_t)&v76);
  LOWORD(v69) = v76;
  BYTE8(v69) = BYTE8(v76);
  v70 = v77;
  v71 = v78;
  v72 = v79;
  v73 = v80;
  v74 = v81;
  v75 = v82;
  v29 = v57;
  sub_23DFA2808(v27, v28, (unsigned __int8 *)&v69, (uint64_t)v83, v59, v58, (uint64_t)v16);
  v30 = (id)sub_23E1363C0();
  sub_23E1363CC();
  v31 = *(uint64_t (**)(char *, uint64_t))(v60 + 8);
  swift_retain();
  v32 = v31(v16, v29);
  v36 = sub_23E090CC8(v32, v33, v34, v35);
  swift_getKeyPath();
  swift_getKeyPath();
  *(_QWORD *)&v76 = v36;
  v37 = v61;
  sub_23E135C88();
  sub_23E093918(v37, (uint64_t)&v69);
  if (*((_QWORD *)&v70 + 1))
  {
    sub_23DF9D6A8(&v69, (uint64_t)&v76);
  }
  else
  {
    v38 = type metadata accessor for EmptyAlarmAndTimerUIViewBuilder();
    v39 = (_QWORD *)swift_allocObject();
    v39[2] = 0;
    v39[3] = 0xE000000000000000;
    v39[4] = 0;
    v39[5] = 0xE000000000000000;
    *((_QWORD *)&v77 + 1) = v38;
    *(_QWORD *)&v78 = &off_250ECEAA8;
    *(_QWORD *)&v76 = v39;
    sub_23E093960((uint64_t)&v69);
  }
  sub_23E1363CC();
  v40 = (uint64_t)&v16[*(int *)(v29 + 40)];
  __swift_destroy_boxed_opaque_existential_0Tm(v40);
  sub_23DF9D6A8(&v76, v40);
  sub_23E092AF8((uint64_t)v16, v41, v42, v43);
  v31(v16, v29);
  sub_23E1363CC();
  v44 = &v16[*(int *)(v29 + 44)];
  *v44 = v68;
  v44[1] = v67;
  v44[8] = v66;
  *((_QWORD *)v44 + 2) = v17;
  *((_QWORD *)v44 + 3) = v18;
  *((_QWORD *)v44 + 4) = v19;
  *((_QWORD *)v44 + 5) = v20;
  v44[48] = v65;
  v44[49] = v64;
  *((_QWORD *)v44 + 7) = v63;
  v44[64] = v62;
  sub_23E092AF8((uint64_t)v16, v45, v46, v47);
  v31(v16, v29);
  v48 = objc_msgSend(v30, sel_setModalPresentationStyle_, 5);
  sub_23E092280((uint64_t)v48, v49, v50, v51);
  sub_23E091A14();

  sub_23E093960(v37);
  return v30;
}

void _s22HomeAccessoryControlUI0bC14ViewControllerC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v1 = (_QWORD *)MEMORY[0x24BEE4EA0];
  v2 = *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*MEMORY[0x24BEE4EA0] & *v0) + 40);
  type metadata accessor for AnimationModel();
  swift_allocObject();
  *(_QWORD *)((char *)v0 + v2) = sub_23DF90A80();
  *(_QWORD *)((char *)v0 + *(_QWORD *)(class metadata base offset for AccessoryControlViewController + (*v1 & *v0) + 48)) = 0;

  sub_23E13756C();
  __break(1u);
}

uint64_t type metadata accessor for AccessoryControlViewController(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AccessoryControlViewController);
}

uint64_t sub_23E093260()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_23E093284()
{
  return sub_23E091ED8();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void sub_23E0932A4()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_23E0932D0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_23E0932FC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  return sub_23E090AAC(a1, a2);
}

uint64_t sub_23E09331C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5[5];

  sub_23DFA62B4(a1, (uint64_t)v5);
  return sub_23E090B5C(v5, v1, v2, v3);
}

uint64_t sub_23E093354()
{
  return 16;
}

__n128 sub_23E093360(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23E09336C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = sub_23E090CC8(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_23E093394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_bridgeObjectRetain();
  return sub_23E090DC0(v0, v1, v2, v3);
}

uint64_t sub_23E0933BC()
{
  return 16;
}

__n128 sub_23E0933C8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23E0933DC()
{
  return 16;
}

__n128 sub_23E0933E8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23E0933F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_23E0912E0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_23E093420(unsigned __int8 *a1)
{
  return sub_23E091310(*a1);
}

uint64_t sub_23E093444()
{
  return 16;
}

__n128 sub_23E093450(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23E09345C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = sub_23E0913BC(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

void sub_23E093484(uint64_t a1)
{
  id v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(id *)a1;
  v2 = *(void **)(a1 + 8);
  v3 = *(id *)a1;
  sub_23E0914B4(v1, v2, v4, v5);
}

uint64_t sub_23E0934BC()
{
  return 16;
}

__n128 sub_23E0934C8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23E0934D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;

  result = sub_23E091744(a1, a2, a3, a4);
  *a5 = result;
  return result;
}

uint64_t sub_23E0934FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = swift_retain();
  sub_23E092BA0(v0, v1, v2, v3);
  return swift_release();
}

uint64_t sub_23E09352C()
{
  return 16;
}

__n128 sub_23E093538(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23E093544()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for AccessoryControlViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AccessoryControlViewController.alarmAndTimerUIViewBuilder.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 56))();
}

uint64_t dispatch thunk of AccessoryControlViewController.alarmAndTimerUIViewBuilder.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 64))();
}

uint64_t dispatch thunk of AccessoryControlViewController.alarmAndTimerUIViewBuilder.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 72))();
}

uint64_t dispatch thunk of AccessoryControlViewController.decorationButtons.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 80))();
}

uint64_t dispatch thunk of AccessoryControlViewController.decorationButtons.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 88))();
}

uint64_t dispatch thunk of AccessoryControlViewController.decorationButtons.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 96))();
}

uint64_t dispatch thunk of AccessoryControlViewController.style.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 104))();
}

uint64_t dispatch thunk of AccessoryControlViewController.style.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 112))();
}

uint64_t dispatch thunk of AccessoryControlViewController.style.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 120))();
}

uint64_t dispatch thunk of AccessoryControlViewController.wantsSystemDismissAnimation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 128))();
}

uint64_t dispatch thunk of AccessoryControlViewController.wantsSystemDismissAnimation.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 136))();
}

uint64_t dispatch thunk of AccessoryControlViewController.wantsSystemDismissAnimation.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 144))();
}

uint64_t dispatch thunk of AccessoryControlViewController.bottomViewController.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 152))();
}

uint64_t dispatch thunk of AccessoryControlViewController.bottomViewController.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 160))();
}

uint64_t dispatch thunk of AccessoryControlViewController.bottomViewController.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 168))();
}

uint64_t dispatch thunk of AccessoryControlViewController.presentingVCDismissalTask.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 176))();
}

uint64_t dispatch thunk of AccessoryControlViewController.presentingVCDismissalTask.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 184))();
}

uint64_t dispatch thunk of AccessoryControlViewController.presentingVCDismissalTask.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 192))();
}

uint64_t dispatch thunk of AccessoryControlViewController.__allocating_init(model:deviceIdentifier:tileHelper:alarmAndTimerUIViewBuilder:style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController + v0 + 248))();
}

uint64_t dispatch thunk of AccessoryControlViewController.dismissControlView(animated:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))(class metadata base offset for AccessoryControlViewController
                              + (*MEMORY[0x24BEE4EA0] & *v0)
                              + 256))();
}

uint64_t sub_23E093918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EAD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E093960(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EAD8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_23E0939B0()
{
  qword_256D245F8 = 0x4020000000000000;
}

void sub_23E0939C0()
{
  qword_256D24600 = 0x4049000000000000;
}

ValueMetadata *_s21ColorSwatchPickerViewVMa()
{
  return &_s21ColorSwatchPickerViewVN;
}

uint64_t sub_23E0939E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0939F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24618);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23E1366FC();
  v12 = a2;
  v13 = a3;
  v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24620);
  sub_23E0974BC();
  sub_23E135D3C();
  sub_23DF89B88(&qword_256D24670, &qword_256D24618, MEMORY[0x24BDEB238]);
  sub_23E136A80();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_23E093B08@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24678);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E093C14(a3, a1, a2, (uint64_t)v11);
  LOBYTE(a3) = sub_23E13672C();
  sub_23E135D00();
  v13 = v12;
  v15 = v14;
  v17 = v16;
  v19 = v18;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a4, v11, v8);
  v20 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D24620) + 36);
  *(_BYTE *)v20 = a3;
  *(_QWORD *)(v20 + 8) = v13;
  *(_QWORD *)(v20 + 16) = v15;
  *(_QWORD *)(v20 + 24) = v17;
  *(_QWORD *)(v20 + 32) = v19;
  *(_BYTE *)(v20 + 40) = 0;
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_23E093C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v27;
  uint64_t (*v28)(void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)@<X0>(uint64_t *@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>);
  uint64_t (*v33)@<X0>(uint64_t *@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>);
  uint64_t v34;
  uint64_t (**v35)@<X0>(uint64_t *@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>);
  uint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v54 = a1;
  v57 = a4;
  v56 = sub_23E136498();
  v58 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E135EA4();
  v51 = *(_QWORD *)(v7 - 8);
  v52 = v7;
  v53 = *(_QWORD *)(v51 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v50 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v47);
  v10 = (_OWORD *)((char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24658);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24648);
  MEMORY[0x24BDAC7A8](v46);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24630);
  MEMORY[0x24BDAC7A8](v49);
  v48 = (uint64_t)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v13 = sub_23E136378();
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = 0;
  v44[1] = &v13[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D24680) + 44)];
  v45 = a2;
  v17 = *(_QWORD *)(sub_23E0940B8(a2, a3) + 16);
  swift_bridgeObjectRelease();
  v59 = 0;
  v60 = v17;
  swift_getKeyPath();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = a3;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24688);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24690);
  sub_23E097698();
  sub_23DF89B88(&qword_256D246A8, &qword_256D24690, MEMORY[0x24BDF4498]);
  sub_23E136F0C();
  v19 = (char *)v10 + *(int *)(v47 + 20);
  v20 = *MEMORY[0x24BDEEB68];
  v21 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v19, v20, v21);
  __asm { FMOV            V0.2D, #8.0 }
  *v10 = _Q0;
  v27 = (uint64_t)&v15[*(int *)(v46 + 36)];
  v28 = MEMORY[0x24BDED998];
  sub_23DF73E10((uint64_t)v10, v27, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  *(_WORD *)(v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E0F8) + 36)) = 256;
  sub_23DF89C1C((uint64_t)v13, (uint64_t)v15, &qword_256D24658);
  sub_23DF73E54((uint64_t)v10, (uint64_t (*)(_QWORD))v28);
  sub_23DF89C7C((uint64_t)v13, &qword_256D24658);
  v29 = swift_allocObject();
  v30 = v45;
  *(_QWORD *)(v29 + 16) = v45;
  *(_QWORD *)(v29 + 24) = a3;
  swift_retain();
  v31 = sub_23E136FE4();
  v33 = v32;
  v34 = v48;
  sub_23DF89C1C((uint64_t)v15, v48, &qword_256D24648);
  v35 = (uint64_t (**)@<X0>(uint64_t *@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))(v34 + *(int *)(v49 + 36));
  *v35 = sub_23E097748;
  v35[1] = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))v29;
  v35[2] = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>)@<X8>))v31;
  v35[3] = v33;
  sub_23DF89C7C((uint64_t)v15, &qword_256D24648);
  v37 = v50;
  v36 = v51;
  v38 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v50, v54, v52);
  v39 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v30;
  *(_QWORD *)(v40 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v39, v37, v38);
  swift_retain();
  v41 = v55;
  sub_23E1365A0();
  sub_23E097570();
  v42 = v56;
  sub_23E1369C0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v42);
  return sub_23DF89C7C(v34, &qword_256D24630);
}

uint64_t sub_23E0940B8(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;

  if (qword_256D1D418 != -1)
    goto LABEL_24;
  while (1)
  {
    v3 = qword_256D24608;
    swift_retain();
    v4 = sub_23E097A0C(v3, (uint64_t)a2);
    swift_release();
    v5 = qword_256D1D420;
    swift_bridgeObjectRetain();
    if (v5 != -1)
      swift_once();
    v6 = qword_256D24610;
    swift_retain();
    v7 = sub_23E097A0C(v6, (uint64_t)a2);
    swift_release();
    v8 = *(_QWORD *)(v4 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v8 <= 0x13)
    {
      v9 = 20 - v8;
      if (*(_QWORD *)(v7 + 16) >= (int64_t)(20 - v8))
        break;
    }
    swift_bridgeObjectRelease();
LABEL_9:
    v14 = sub_23E098008(v4, 5);
    swift_bridgeObjectRelease();
    v15 = swift_bridgeObjectRetain();
    a2 = sub_23E098008(v15, 6);
    swift_bridgeObjectRelease();
    v16 = v14[2];
    v17 = a2[2];
    v18 = MEMORY[0x24BEE4AF8];
    v19 = 4;
    v20 = (_QWORD *)MEMORY[0x24BEE4AF8];
    while (1)
    {
      v21 = v19 - 4;
      v22 = v18;
      if (v19 - 4 >= v16)
        goto LABEL_13;
      if (v21 >= v14[2])
        break;
      v22 = v14[v19];
      swift_bridgeObjectRetain();
LABEL_13:
      v23 = v18;
      if (v21 < v17)
      {
        if (v21 >= a2[2])
          goto LABEL_23;
        v23 = swift_bridgeObjectRetain();
      }
      sub_23DF849AC(v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_23E00808C(0, v20[2] + 1, 1, v20);
      v25 = v20[2];
      v24 = v20[3];
      if (v25 >= v24 >> 1)
        v20 = sub_23E00808C((_QWORD *)(v24 > 1), v25 + 1, 1, v20);
      v20[2] = v25 + 1;
      v20[v25 + 4] = v22;
      if (++v19 == 8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v20;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_once();
  }
  v10 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E135328() - 8) + 80);
  v11 = v7 + ((v10 + 32) & ~v10);
  v12 = swift_unknownObjectRetain();
  result = sub_23DF84128(v12, v11, 0, (2 * v9) | 1);
  if (*(_QWORD *)(v7 + 16) >= v9)
  {
    sub_23E097E58(0, 20 - v8, (uint64_t (*)(void))sub_23E007B94, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DCB8]);
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E0943B0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, uint64_t a4@<X8>)
{
  unint64_t v7;
  uint64_t v8;

  v7 = *a1;
  if (qword_256D1D400 != -1)
    swift_once();
  v8 = qword_256D245F8;
  *(_QWORD *)a4 = sub_23E1362D0();
  *(_QWORD *)(a4 + 8) = v8;
  *(_BYTE *)(a4 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D246E8);
  return sub_23E094448(a2, a3, v7);
}

uint64_t sub_23E094448(uint64_t a1, _QWORD *a2, unint64_t a3)
{
  uint64_t result;
  _QWORD *v7;

  result = sub_23E0940B8(a1, a2);
  if ((a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(result + 16) > a3)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    v7 = (_QWORD *)swift_allocObject();
    v7[2] = a1;
    v7[3] = a2;
    v7[4] = a3;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D24688);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D246F0);
    sub_23E097698();
    sub_23DF8E904(&qword_256D246F8, &qword_256D246F0, sub_23E0978A4, MEMORY[0x24BDEEC40]);
    return sub_23E136F0C();
  }
  __break(1u);
  return result;
}

uint64_t sub_23E094590@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t KeyPath;
  char *v26;
  uint64_t v27;
  char *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;

  v35 = a5;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24728);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24718);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24708);
  MEMORY[0x24BDAC7A8](v34);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E094868(a4, *a1, a2, a3, (uint64_t)v11);
  v17 = sub_23E136FE4();
  v19 = v18;
  sub_23E135DCC();
  v20 = v36;
  v21 = v38;
  v22 = v39;
  v23 = v40;
  sub_23E136C24();
  v24 = sub_23E136C60();
  swift_release();
  KeyPath = swift_getKeyPath();
  sub_23DF89C1C((uint64_t)v11, (uint64_t)v14, &qword_256D24728);
  v26 = &v14[*(int *)(v12 + 36)];
  v27 = v37;
  *(_QWORD *)v26 = v20;
  *((_QWORD *)v26 + 1) = v27;
  *((_QWORD *)v26 + 2) = v21;
  *((_QWORD *)v26 + 3) = v22;
  *((_QWORD *)v26 + 4) = v23;
  *((_QWORD *)v26 + 5) = KeyPath;
  *((_QWORD *)v26 + 6) = v24;
  *((_QWORD *)v26 + 7) = v17;
  *((_QWORD *)v26 + 8) = v19;
  sub_23DF89C7C((uint64_t)v11, &qword_256D24728);
  if (qword_256D1D408 != -1)
    swift_once();
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF89C1C((uint64_t)v14, (uint64_t)v16, &qword_256D24718);
  v28 = &v16[*(int *)(v34 + 36)];
  v29 = v42;
  *(_OWORD *)v28 = v41;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v43;
  sub_23DF89C7C((uint64_t)v14, &qword_256D24718);
  v30 = v35;
  sub_23DF89C1C((uint64_t)v16, v35, &qword_256D24708);
  v31 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D246F0) + 36);
  *(_QWORD *)v31 = 0x3FF999999999999ALL;
  *(_WORD *)(v31 + 8) = 0;
  return sub_23DF89C7C((uint64_t)v16, &qword_256D24708);
}

uint64_t sub_23E094868@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;

  v10 = _s21ColorSwatchPickerViewV9ColorCellVMa(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v19 = (char *)&v27 - v18;
  result = sub_23E0940B8(a3, a4);
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (*(_QWORD *)(result + 16) <= a1)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v28 = a5;
  v21 = *(_QWORD *)(result + 8 * a1 + 32);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  if ((a2 & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (*(_QWORD *)(v21 + 16) > a2)
  {
    sub_23DF73E10(v21+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * a2, (uint64_t)v19, _s21ColorSwatchPickerViewV9CellValueOMa);
    swift_bridgeObjectRelease();
    sub_23DF73E10((uint64_t)v19, (uint64_t)v17, _s21ColorSwatchPickerViewV9CellValueOMa);
    _s16ColorPickerStateCMa();
    sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
    *(_QWORD *)v12 = sub_23E1360CC();
    *((_QWORD *)v12 + 1) = v22;
    *((_QWORD *)v12 + 2) = swift_getKeyPath();
    v12[24] = 0;
    sub_23DF89384((uint64_t)v17, (uint64_t)&v12[*(int *)(v10 + 24)], _s21ColorSwatchPickerViewV9CellValueOMa);
    v23 = &v12[*(int *)(v10 + 28)];
    *(_QWORD *)v23 = a1;
    *((_QWORD *)v23 + 1) = a2;
    swift_retain();
    v24 = sub_23E135C34();
    v25 = v28;
    sub_23DF73E10((uint64_t)v12, v28, _s21ColorSwatchPickerViewV9ColorCellVMa);
    v26 = (uint64_t *)(v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D24728) + 36));
    *v26 = v24;
    v26[1] = (uint64_t)a4;
    sub_23DF73E54((uint64_t)v12, _s21ColorSwatchPickerViewV9ColorCellVMa);
    return sub_23DF73E54((uint64_t)v19, _s21ColorSwatchPickerViewV9CellValueOMa);
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_23E094ABC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (**a4)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v7;
  uint64_t (*v8)@<X0>(uint64_t@<X0>, uint64_t@<X8>);

  v7 = *a1;
  v8 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject();
  *((_QWORD *)v8 + 2) = a2;
  *((_QWORD *)v8 + 3) = a3;
  *((_QWORD *)v8 + 4) = v7;
  *a4 = sub_23E097854;
  a4[1] = v8;
  swift_retain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E094B20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23088);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E094C1C(a1, a2, (uint64_t)v8);
  v9 = sub_23E136F9C();
  sub_23E04CEFC(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, a3, 0.0, 1, INFINITY, 0, v9, v10);
  return sub_23DF89C7C((uint64_t)v8, &qword_256D23088);
}

uint64_t sub_23E094C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int16 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(unsigned __int16 *, uint64_t);
  int v32;
  char *v33;
  void (*v34)(unsigned __int16 *, char *, uint64_t);
  uint64_t (*v35)(char *, uint64_t);
  int v36;
  char *v37;
  uint64_t v38;
  unsigned __int16 *v39;
  void (*v40)(unsigned __int16 *, uint64_t);
  int v41;
  int v42;
  int v43;
  _QWORD *v44;
  _QWORD *v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  void (*v60)(uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  CGFloat v66;
  CGFloat v67;
  CGFloat v68;
  CGFloat v69;
  uint64_t v70;
  _OWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t (*v82)(void);
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  _OWORD *v95;
  __int128 v96;
  CGFloat MinX;
  CGFloat MinY;
  uint64_t v99;
  CGFloat *v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned __int16 *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  _QWORD *v130;
  __int128 v131;
  __int128 v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;

  v119 = a2;
  v106 = a1;
  v118 = a3;
  v112 = sub_23E136BD0();
  v110 = *(_QWORD *)(v112 - 8);
  MEMORY[0x24BDAC7A8](v112);
  v111 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E136030();
  MEMORY[0x24BDAC7A8](v4);
  v107 = (char *)&v103 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B8);
  MEMORY[0x24BDAC7A8](v6);
  v109 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246C0);
  MEMORY[0x24BDAC7A8](v108);
  v114 = (uint64_t)&v103 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246C8);
  MEMORY[0x24BDAC7A8](v113);
  v116 = (uint64_t)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246D0);
  MEMORY[0x24BDAC7A8](v115);
  v117 = (uint64_t)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v125 = sub_23E135BD4();
  v124 = *(_QWORD *)(v125 - 8);
  v11 = MEMORY[0x24BDAC7A8](v125);
  v123 = (uint64_t)&v103 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v122 = (uint64_t)&v103 - v13;
  v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F790);
  MEMORY[0x24BDAC7A8](v128);
  v15 = (unsigned __int16 *)((char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v105 = _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa(0);
  v16 = *(_QWORD *)(v105 - 8);
  v17 = MEMORY[0x24BDAC7A8](v105);
  v19 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v104 = (uint64_t)&v103 - v20;
  v21 = sub_23E135328();
  v22 = *(_QWORD **)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v121 = (char *)&v103 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v26 = (char *)&v103 - v25;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  v129 = v26;
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  v27 = *(_QWORD *)(v119 + 16);
  v28 = 0.0;
  v130 = v22;
  if (!v27)
  {
    v66 = 0.0;
    v67 = 0.0;
    v68 = 0.0;
    v69 = 0.0;
    goto LABEL_22;
  }
  v103 = v4;
  v29 = v119 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  v30 = *MEMORY[0x24BE4DC90];
  v126 = *MEMORY[0x24BE4DC88];
  v127 = *(_QWORD *)(v16 + 72);
  swift_bridgeObjectRetain();
  v120 = v15;
  while (1)
  {
    sub_23DF73E10(v29, (uint64_t)v19, _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa);
    v33 = (char *)v15 + *(int *)(v128 + 48);
    v34 = (void (*)(unsigned __int16 *, char *, uint64_t))v22[2];
    v34(v15, v19, v21);
    v34((unsigned __int16 *)v33, v129, v21);
    v35 = (uint64_t (*)(char *, uint64_t))v22[11];
    if (v35((char *)v15, v21) == (_DWORD)v30)
    {
      v31 = (void (*)(unsigned __int16 *, uint64_t))v130[1];
      v31(v15, v21);
      v32 = v35(v33, v21);
      v31((unsigned __int16 *)v33, v21);
      v22 = v130;
      if (v32 == (_DWORD)v30)
        break;
      goto LABEL_4;
    }
    v36 = v35(v33, v21);
    if (v36 == v126)
    {
      v37 = v19;
      v38 = v30;
      v39 = (unsigned __int16 *)v121;
      v34((unsigned __int16 *)v121, v33, v21);
      v40 = (void (*)(unsigned __int16 *, uint64_t))v22[12];
      v40(v39, v21);
      v41 = *v39;
      v30 = v38;
      v19 = v37;
      v15 = v120;
      v42 = v35((char *)v120, v21);
      if (v42 == v126)
      {
        v40(v15, v21);
        v43 = *v15;
        v44 = v130;
        ((void (*)(char *, uint64_t))v130[1])(v33, v21);
        _ZF = v43 == v41;
        v22 = v44;
        if (_ZF)
          break;
        goto LABEL_4;
      }
    }
    else if (v36 == (_DWORD)v30)
    {
      v46 = v130;
      v47 = (void (*)(char *, uint64_t))v130[1];
      v47(v33, v21);
      v47((char *)v15, v21);
      v22 = v46;
      goto LABEL_4;
    }
    v48 = v122;
    sub_23E0AA750(v122);
    v49 = v123;
    sub_23E0AA750(v123);
    sub_23E135BB0();
    v51 = v50;
    sub_23E135BB0();
    if (vabdd_f64(v51, v52) >= 0.02 || (sub_23E135BA4(), v54 = v53, sub_23E135BA4(), vabdd_f64(v54, v55) >= 0.02))
    {
      v63 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
      v64 = v49;
      v65 = v125;
      v63(v64, v125);
      v63(v48, v65);
      sub_23DF89C7C((uint64_t)v15, &qword_256D1F790);
      v22 = v130;
      goto LABEL_4;
    }
    sub_23E135B98();
    v57 = v56;
    sub_23E135B98();
    v59 = vabdd_f64(v57, v58);
    v60 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
    v61 = v49;
    v62 = v125;
    v60(v61, v125);
    v60(v48, v62);
    sub_23DF89C7C((uint64_t)v15, &qword_256D1F790);
    v22 = v130;
    if (v59 < 0.02)
      break;
LABEL_4:
    sub_23DF73E54((uint64_t)v19, _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa);
    v29 += v127;
    if (!--v27)
    {
      swift_bridgeObjectRelease();
      v66 = 0.0;
      v67 = 0.0;
      v68 = 0.0;
      v69 = 0.0;
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRelease();
  v70 = v104;
  sub_23DF89384((uint64_t)v19, v104, _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa);
  swift_retain();
  sub_23DF73E54(v70, _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa);
  type metadata accessor for CGRect(0);
  sub_23E135EB0();
  swift_release();
  v69 = *((double *)&v134 + 1);
  v68 = *(double *)&v134;
  v28 = 1.0;
  v67 = *((double *)&v135 + 1);
  v66 = *(double *)&v135;
LABEL_21:
  v4 = v103;
LABEL_22:
  v71 = v107;
  v72 = &v107[*(int *)(v4 + 20)];
  v73 = *MEMORY[0x24BDEEB68];
  v74 = sub_23E136324();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 104))(v72, v73, v74);
  __asm { FMOV            V0.2D, #4.0 }
  *v71 = _Q0;
  v79 = (uint64_t)v109;
  if (qword_256D1D228 != -1)
    swift_once();
  v80 = qword_256D345F8;
  v81 = qword_256D1D218;
  swift_retain();
  if (v81 != -1)
    swift_once();
  sub_23E135DCC();
  v82 = MEMORY[0x24BDED998];
  sub_23DF73E10((uint64_t)v71, v79, (uint64_t (*)(_QWORD))MEMORY[0x24BDED998]);
  v83 = v79 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1E608) + 36);
  v84 = v132;
  *(_OWORD *)v83 = v131;
  *(_OWORD *)(v83 + 16) = v84;
  *(_QWORD *)(v83 + 32) = v133;
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246D8);
  *(_QWORD *)(v79 + *(int *)(v85 + 52)) = v80;
  *(_WORD *)(v79 + *(int *)(v85 + 56)) = 256;
  v86 = sub_23E136FE4();
  v88 = v87;
  v89 = (uint64_t *)(v79 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D246E0) + 36));
  *v89 = v86;
  v89[1] = v88;
  sub_23DF73E54((uint64_t)v71, (uint64_t (*)(_QWORD))v82);
  if (qword_256D1D220 != -1)
    swift_once();
  v90 = qword_256D345F0;
  (*(void (**)(char *, _QWORD, uint64_t))(v110 + 104))(v111, *MEMORY[0x24BDF3C18], v112);
  v91 = sub_23E136C9C();
  v92 = v114;
  sub_23DF89C1C(v79, v114, &qword_256D246B8);
  v93 = (uint64_t *)(v92 + *(int *)(v108 + 36));
  *v93 = v91;
  v93[1] = v90;
  v93[2] = 0;
  v93[3] = 0;
  sub_23DF89C7C(v79, &qword_256D246B8);
  v137.origin.x = v68;
  v137.origin.y = v69;
  v137.size.width = v66;
  v137.size.height = v67;
  CGRectGetWidth(v137);
  v138.origin.x = v68;
  v138.origin.y = v69;
  v138.size.width = v66;
  v138.size.height = v67;
  CGRectGetHeight(v138);
  sub_23E136FE4();
  sub_23E135E5C();
  v94 = v116;
  sub_23DF89C1C(v92, v116, &qword_256D246C0);
  v95 = (_OWORD *)(v94 + *(int *)(v113 + 36));
  v96 = v135;
  *v95 = v134;
  v95[1] = v96;
  v95[2] = v136;
  sub_23DF89C7C(v92, &qword_256D246C0);
  v139.origin.x = v68;
  v139.origin.y = v69;
  v139.size.width = v66;
  v139.size.height = v67;
  MinX = CGRectGetMinX(v139);
  v140.origin.x = v68;
  v140.origin.y = v69;
  v140.size.width = v66;
  v140.size.height = v67;
  MinY = CGRectGetMinY(v140);
  v99 = v117;
  sub_23DF89C1C(v94, v117, &qword_256D246C8);
  v100 = (CGFloat *)(v99 + *(int *)(v115 + 36));
  *v100 = MinX;
  v100[1] = MinY;
  sub_23DF89C7C(v94, &qword_256D246C8);
  v101 = v118;
  sub_23DF89C1C(v99, v118, &qword_256D246D0);
  *(double *)(v101 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D23088) + 36)) = v28;
  sub_23DF89C7C(v99, &qword_256D246D0);
  return ((uint64_t (*)(char *, uint64_t))v130[1])(v129, v21);
}

uint64_t sub_23E095754(uint64_t a1, _QWORD *a2, double a3, double a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  double v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void (*v27)(char *, uint64_t);
  uint64_t v29;

  v8 = sub_23E135328();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v29 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v29 - v16;
  v18 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v29 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v29 - v22;
  sub_23E135E80();
  sub_23E0959A4(a1, a2, (uint64_t)v23, a3, a4, v24);
  sub_23DF73E10((uint64_t)v23, (uint64_t)v21, _s21ColorSwatchPickerViewV9CellValueOMa);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v21, 1, v25) == 1)
  {
    sub_23DF73E54((uint64_t)v23, _s21ColorSwatchPickerViewV9CellValueOMa);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v17, v21, v8);
    v26 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v26(v15, v17, v8);
    swift_retain();
    sub_23E0BE4A0((uint64_t)v15);
    swift_getKeyPath();
    swift_getKeyPath();
    v26(v12, v15, v8);
    swift_retain();
    sub_23E135C88();
    v27 = *(void (**)(char *, uint64_t))(v9 + 8);
    v27(v15, v8);
    swift_release();
    v27(v17, v8);
    v21 = v23;
  }
  return sub_23DF73E54((uint64_t)v21, _s21ColorSwatchPickerViewV9CellValueOMa);
}

uint64_t sub_23E0959A4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D3>)
{
  unint64_t v6;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  double v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v13 = *(_QWORD *)(sub_23E0940B8(a1, a2) + 16);
  swift_bridgeObjectRelease();
  if (qword_256D1D408 != -1)
    swift_once();
  v14 = *(double *)&qword_256D24600;
  v15 = a6 / (double)v13;
  if (*(double *)&qword_256D24600 > v15)
    v15 = *(double *)&qword_256D24600;
  v16 = floor(a5 / v15);
  if ((~*(_QWORD *)&v16 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v17 = v13 - 1;
  if (v13 - 1 >= (uint64_t)v16)
    v17 = (uint64_t)v16;
  v6 = v17 & ~(v17 >> 63);
  v18 = sub_23E0940B8(a1, a2);
  if (v6 < *(_QWORD *)(v18 + 16))
  {
    a5 = v14 * 1.6;
    v19 = *(_QWORD *)(v18 + 8 * v6 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v19 + 16);
    result = swift_bridgeObjectRelease();
    if (qword_256D1D400 == -1)
      goto LABEL_12;
    goto LABEL_25;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  result = swift_once();
LABEL_12:
  v21 = floor(a4 / (a5 + *(double *)&qword_256D245F8));
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v13 - 1 >= (uint64_t)v21)
    v22 = (uint64_t)v21;
  else
    v22 = v13 - 1;
  result = sub_23E0940B8(a1, a2);
  if (v6 >= *(_QWORD *)(result + 16))
    goto LABEL_29;
  v23 = v22 & ~(v22 >> 63);
  v24 = *(_QWORD *)(result + 8 * v6 + 32);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  if (v23 < *(_QWORD *)(v24 + 16))
  {
    v25 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
    sub_23DF73E10(v24+ ((*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v25 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, a3, _s21ColorSwatchPickerViewV9CellValueOMa);
    return swift_bridgeObjectRelease();
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_23E095BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t result;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;

  v124 = a1;
  v121 = a2;
  v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24920);
  MEMORY[0x24BDAC7A8](v118);
  v120 = (uint64_t)&v98 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24928);
  MEMORY[0x24BDAC7A8](v119);
  v113 = (uint64_t)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E1365C4();
  v110 = *(_QWORD *)(v4 - 8);
  v111 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v109 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22370);
  v122 = *(_QWORD *)(v116 - 8);
  MEMORY[0x24BDAC7A8](v116);
  v112 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v7);
  v105 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = _s21ColorSwatchPickerViewV27AccessibilitySelectionStateVMa(0);
  MEMORY[0x24BDAC7A8](v104);
  v106 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = _s21ColorSwatchPickerViewV9ColorCellVMa(0);
  v101 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v101 + 64);
  MEMORY[0x24BDAC7A8](v10);
  v102 = (uint64_t)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24930);
  v12 = MEMORY[0x24BDAC7A8](v103);
  v108 = (uint64_t)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)((char *)&v98 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v115 = (uint64_t)&v98 - v17;
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D22378);
  v18 = MEMORY[0x24BDAC7A8](v117);
  v107 = (uint64_t)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v114 = (char *)&v98 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v98 - v22;
  v24 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = sub_23E135328();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(_QWORD *)(v28 + 64);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v123 = (char *)&v98 - v32;
  sub_23DF73E10(v124 + *(int *)(v10 + 24), (uint64_t)v26, _s21ColorSwatchPickerViewV9CellValueOMa);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v26, 1, v33) == 1)
  {
    sub_23DF73E54((uint64_t)v26, _s21ColorSwatchPickerViewV9CellValueOMa);
    v34 = *(_QWORD *)(v124 + 16);
    v35 = *(_BYTE *)(v124 + 24);
    sub_23DF89F20(v34, v35);
    v36 = sub_23DF9C59C(v34, v35);
    sub_23DF8A078(v34, v35);
    if ((v36 & 1) != 0)
    {
      sub_23E13630C();
      v37 = sub_23E136924();
      v39 = v38;
      v41 = v40 & 1;
      sub_23E136834();
      v42 = sub_23E136900();
      v44 = v43;
      v46 = v45;
      v48 = v47;
      swift_release();
      sub_23DFA055C(v37, v39, v41);
      swift_bridgeObjectRelease();
      v125 = v42;
      v126 = v44;
      v127 = v46 & 1;
      v128 = v48;
      v49 = v109;
      sub_23E1365B8();
      v51 = v111;
      v50 = v112;
      sub_23E136A20();
      (*(void (**)(char *, uint64_t))(v110 + 8))(v49, v51);
      sub_23DFA055C(v125, v126, v127);
      swift_bridgeObjectRelease();
      v52 = v122;
      v53 = v50;
      v54 = v116;
      (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v23, v53, v116);
      v55 = 0;
    }
    else
    {
      v55 = 1;
      v54 = v116;
      v52 = v122;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v23, v55, 1, v54);
    sub_23DF89C1C((uint64_t)v23, v120, &qword_256D22378);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D24938, &qword_256D24928, MEMORY[0x24BDF5428]);
    sub_23E099840();
    sub_23E136480();
    return sub_23DF89C7C((uint64_t)v23, &qword_256D22378);
  }
  else
  {
    v56 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
    v57 = v123;
    v56(v123, v26, v27);
    v58 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
    v58(v31, v57, v27);
    v100 = sub_23E0A9F3C((uint64_t)v31);
    v99 = sub_23E136DC8();
    v98 = v58;
    v58(v31, v57, v27);
    v59 = (_QWORD *)v124;
    v60 = v102;
    sub_23DF73E10(v124, v102, _s21ColorSwatchPickerViewV9ColorCellVMa);
    v61 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v62 = (v29 + *(unsigned __int8 *)(v101 + 80) + v61) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
    v63 = swift_allocObject();
    v64 = v31;
    v65 = v63;
    v56((char *)(v63 + v61), v64, v27);
    sub_23DF89384(v60, v65 + v62, _s21ColorSwatchPickerViewV9ColorCellVMa);
    if (*v59)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      v66 = (uint64_t)v105;
      sub_23E135C7C();
      swift_release();
      swift_release();
      swift_release();
      v102 = v28;
      v67 = 1;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v28 + 56))(v66, 0, 1, v27);
      v68 = (uint64_t)v106;
      v69 = &v106[*(int *)(v104 + 20)];
      v104 = v27;
      v98(v69, v123, v27);
      sub_23DF89340(v66, v68, &qword_256D1D7F0);
      sub_23DF73E10(v68, (uint64_t)v16 + *(int *)(v103 + 36), _s21ColorSwatchPickerViewV27AccessibilitySelectionStateVMa);
      v70 = v99;
      *v16 = v100;
      v16[1] = v70;
      v16[2] = (uint64_t)sub_23E0999CC;
      v16[3] = v65;
      sub_23DF73E54(v68, _s21ColorSwatchPickerViewV27AccessibilitySelectionStateVMa);
      sub_23DF89340((uint64_t)v16, v115, &qword_256D24930);
      v71 = *(_QWORD *)(v124 + 16);
      v72 = *(_BYTE *)(v124 + 24);
      sub_23DF89F20(v71, v72);
      v73 = sub_23DF9C59C(v71, v72);
      sub_23DF8A078(v71, v72);
      v74 = v116;
      if ((v73 & 1) != 0)
      {
        v125 = LightbulbColor.shortDebugDescription.getter();
        v126 = v75;
        sub_23DF8DC18();
        v76 = sub_23E13693C();
        v78 = v77;
        v80 = v79 & 1;
        sub_23E136834();
        v81 = sub_23E136900();
        v83 = v82;
        v85 = v84;
        v87 = v86;
        swift_release();
        sub_23DFA055C(v76, v78, v80);
        swift_bridgeObjectRelease();
        v125 = v81;
        v126 = v83;
        v127 = v85 & 1;
        v128 = v87;
        v88 = v109;
        sub_23E1365B8();
        v90 = v111;
        v89 = v112;
        sub_23E136A20();
        (*(void (**)(char *, uint64_t))(v110 + 8))(v88, v90);
        sub_23DFA055C(v125, v126, v127);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v114, v89, v74);
        v67 = 0;
      }
      v91 = (uint64_t)v114;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v122 + 56))(v114, v67, 1, v74);
      v92 = v115;
      v93 = v108;
      sub_23DF89C1C(v115, v108, &qword_256D24930);
      v94 = v107;
      sub_23DF89C1C(v91, v107, &qword_256D22378);
      v95 = v113;
      sub_23DF89C1C(v93, v113, &qword_256D24930);
      v96 = __swift_instantiateConcreteTypeFromMangledName(qword_256D24948);
      sub_23DF89C1C(v94, v95 + *(int *)(v96 + 48), &qword_256D22378);
      sub_23DF89C7C(v94, &qword_256D22378);
      sub_23DF89C7C(v93, &qword_256D24930);
      sub_23DF89C1C(v95, v120, &qword_256D24928);
      swift_storeEnumTagMultiPayload();
      sub_23DF89B88(&qword_256D24938, &qword_256D24928, MEMORY[0x24BDF5428]);
      sub_23E099840();
      sub_23E136480();
      sub_23DF89C7C(v95, &qword_256D24928);
      sub_23DF89C7C(v91, &qword_256D22378);
      sub_23DF89C7C(v92, &qword_256D24930);
      return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v123, v104);
    }
    else
    {
      _s16ColorPickerStateCMa();
      sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
      result = sub_23E1360C0();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_23E096724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D213B8);
  v8 = _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa(0);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(v8 - 8) + 80);
  v10 = (v9 + 32) & ~v9;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_23E138050;
  v12 = v11 + v10;
  v13 = sub_23E135328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v12, a2, v13);
  v14 = *(int *)(_s21ColorSwatchPickerViewV9ColorCellVMa(0) + 28);
  *(_QWORD *)(v12 + *(int *)(v8 + 20)) = a1;
  *(_OWORD *)(v12 + *(int *)(v8 + 24)) = *(_OWORD *)(a3 + v14);
  *a4 = v11;
  return swift_retain();
}

uint64_t sub_23E096800@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = sub_23E136384();
  v4 = sub_23E1362D0();
  *a1 = v3;
  a1[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24918);
  return sub_23E095BFC(v1, (uint64_t)a1 + *(int *)(v5 + 44));
}

uint64_t sub_23E096850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a2;
  v44 = a3;
  v4 = sub_23E13636C();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D249F0);
  v6 = MEMORY[0x24BDAC7A8](v42);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (uint64_t)&v34 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D249F8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24A00);
  v36 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E135328();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1;
  v23 = a1;
  v25 = v24;
  sub_23DF89C1C(v23, (uint64_t)v17, &qword_256D1D7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v25) == 1)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1D7F0);
    v26 = v36;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
    v27(v14, v43, v12);
    v27(v11, (uint64_t)v14, v12);
    swift_storeEnumTagMultiPayload();
    sub_23E09A13C();
    sub_23DF89B88(&qword_256D24A10, &qword_256D24A00, MEMORY[0x24BDEFB78]);
    sub_23E136480();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v14, v12);
  }
  else
  {
    v36 = v9;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v25);
    v29 = v22 + *(int *)(_s21ColorSwatchPickerViewV27AccessibilitySelectionStateVMa(0) + 20);
    v35 = v21;
    if (sub_23E0A88A0(v29))
    {
      v30 = v38;
      sub_23E136330();
      v31 = v40;
    }
    else
    {
      v45 = MEMORY[0x24BEE4AF8];
      sub_23DF73F28(&qword_256D1D9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9D0);
      sub_23DF89B88(&qword_256D1D9D8, &qword_256D1D9D0, MEMORY[0x24BEE12C8]);
      v30 = v38;
      v31 = v40;
      sub_23E1374F4();
    }
    sub_23DF89B88(&qword_256D24A10, &qword_256D24A00, MEMORY[0x24BDEFB78]);
    v32 = (uint64_t)v37;
    sub_23E136A08();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v30, v31);
    v33 = v41;
    sub_23DF89340(v32, v41, &qword_256D249F0);
    sub_23DF89C1C(v33, (uint64_t)v11, &qword_256D249F0);
    swift_storeEnumTagMultiPayload();
    sub_23E09A13C();
    sub_23E136480();
    sub_23DF89C7C(v33, &qword_256D249F0);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v35, v25);
  }
}

uint64_t sub_23E096C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E096850(v2, a1, a2);
}

void sub_23E096C90()
{
  qword_256D34700 = MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E096CA4@<X0>(_QWORD *a1@<X8>)
{
  if (qword_256D1D410 != -1)
    swift_once();
  *a1 = qword_256D34700;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E096CF4(uint64_t a1, void (*a2)(uint64_t *__return_ptr))
{
  uint64_t v3;

  a2(&v3);
  return sub_23DF849C0(v3);
}

uint64_t sub_23E096D38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _WORD *v5;
  uint64_t v6;
  void (*v7)(_WORD *, uint64_t, uint64_t);
  _WORD *v8;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F350);
  v0 = sub_23E135328();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23E140520;
  v5 = (_WORD *)(v4 + v3);
  *v5 = sub_23E135310();
  v6 = *MEMORY[0x24BE4DC88];
  v7 = *(void (**)(_WORD *, uint64_t, uint64_t))(v1 + 104);
  v7(v5, v6, v0);
  *(_WORD *)((char *)v5 + v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + v2), v6, v0);
  v5[v2] = sub_23E135310();
  v7(&v5[v2], v6, v0);
  *(_WORD *)((char *)v5 + 3 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 3 * v2), v6, v0);
  v5[2 * v2] = sub_23E135310();
  v7(&v5[2 * v2], v6, v0);
  *(_WORD *)((char *)v5 + 5 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 5 * v2), v6, v0);
  v5[3 * v2] = sub_23E135310();
  v7(&v5[3 * v2], v6, v0);
  *(_WORD *)((char *)v5 + 7 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 7 * v2), v6, v0);
  v5[4 * v2] = sub_23E135310();
  v7(&v5[4 * v2], v6, v0);
  *(_WORD *)((char *)v5 + 9 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 9 * v2), v6, v0);
  v5[5 * v2] = sub_23E135310();
  v7(&v5[5 * v2], v6, v0);
  *(_WORD *)((char *)v5 + 11 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 11 * v2), v6, v0);
  v5[6 * v2] = sub_23E135310();
  v7(&v5[6 * v2], v6, v0);
  *(_WORD *)((char *)v5 + 13 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 13 * v2), v6, v0);
  v5[7 * v2] = sub_23E135310();
  v7(&v5[7 * v2], v6, v0);
  *(_WORD *)((char *)v5 + 15 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 15 * v2), v6, v0);
  v5[8 * v2] = sub_23E135310();
  v7(&v5[8 * v2], v6, v0);
  *(_WORD *)((char *)v5 + 17 * v2) = sub_23E135310();
  v7((_WORD *)((char *)v5 + 17 * v2), v6, v0);
  v5[9 * v2] = sub_23E135310();
  v7(&v5[9 * v2], v6, v0);
  v8 = (_WORD *)((char *)v5 + 19 * v2);
  *v8 = sub_23E135310();
  result = ((uint64_t (*)(_WORD *, uint64_t, uint64_t))v7)(v8, v6, v0);
  qword_256D24608 = v4;
  return result;
}

uint64_t sub_23E09709C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _OWORD *v5;
  void (*v6)(void);
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F350);
  v0 = sub_23E135328();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = *(_QWORD *)(v1 + 72);
  v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_23E140530;
  v5 = (_OWORD *)(v4 + v3);
  *v5 = xmmword_23E140540;
  v6 = *(void (**)(void))(v1 + 104);
  ((void (*)(unint64_t, _QWORD, uint64_t))v6)(v4 + v3, *MEMORY[0x24BE4DCA8], v0);
  *(_OWORD *)((char *)v5 + v2) = xmmword_23E140550;
  v6();
  *(_OWORD *)((char *)v5 + 2 * v2) = xmmword_23E140560;
  v6();
  *(_OWORD *)((char *)v5 + 3 * v2) = xmmword_23E140570;
  v6();
  *(_OWORD *)((char *)v5 + 4 * v2) = xmmword_23E140580;
  v6();
  *(_OWORD *)((char *)v5 + 5 * v2) = xmmword_23E140590;
  v6();
  *(_OWORD *)((char *)v5 + 6 * v2) = xmmword_23E1405A0;
  v6();
  *(_OWORD *)((char *)v5 + 7 * v2) = xmmword_23E1405B0;
  v6();
  *(_OWORD *)((char *)v5 + 8 * v2) = xmmword_23E1405C0;
  v6();
  *(_OWORD *)((char *)v5 + 9 * v2) = xmmword_23E1405D0;
  v6();
  *(_OWORD *)((char *)v5 + 10 * v2) = xmmword_23E1405E0;
  v6();
  *(_OWORD *)((char *)v5 + 11 * v2) = xmmword_23E1405F0;
  v6();
  *(_OWORD *)((char *)v5 + 12 * v2) = xmmword_23E140600;
  v6();
  *(_OWORD *)((char *)v5 + 13 * v2) = xmmword_23E140610;
  v6();
  *(_OWORD *)((char *)v5 + 14 * v2) = xmmword_23E140620;
  v6();
  *(_OWORD *)((char *)v5 + 15 * v2) = xmmword_23E140630;
  v6();
  v5[v2] = xmmword_23E140640;
  v6();
  *(_OWORD *)((char *)v5 + 17 * v2) = xmmword_23E140650;
  v6();
  *(_OWORD *)((char *)v5 + 18 * v2) = xmmword_23E140660;
  v6();
  *(_OWORD *)((char *)v5 + 19 * v2) = xmmword_23E140670;
  v6();
  *(_OWORD *)((char *)v5 + 20 * v2) = xmmword_23E140680;
  v6();
  *(_OWORD *)((char *)v5 + 21 * v2) = xmmword_23E140690;
  v6();
  *(_OWORD *)((char *)v5 + 22 * v2) = xmmword_23E1406A0;
  v6();
  *(_OWORD *)((char *)v5 + 23 * v2) = xmmword_23E1406B0;
  result = ((uint64_t (*)(void))v6)();
  qword_256D24610 = v4;
  return result;
}

uint64_t sub_23E097434@<X0>(uint64_t (**a1)(uint64_t a1)@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *v1;
  v3 = v1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  *a1 = sub_23E0974A8;
  a1[1] = (uint64_t (*)(uint64_t))v5;
  return swift_retain();
}

uint64_t sub_23E097484()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0974A8(uint64_t a1)
{
  uint64_t v1;

  return sub_23E0939F0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_23E0974B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E093B08(*(_QWORD *)(v1 + 16), *(_QWORD **)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

unint64_t sub_23E0974BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256D24628;
  if (!qword_256D24628)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24620);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24630);
    v2[3] = sub_23E136498();
    v2[4] = sub_23E097570();
    v2[5] = MEMORY[0x24BDEF530];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24628);
  }
  return result;
}

unint64_t sub_23E097570()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24638;
  if (!qword_256D24638)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24630);
    v2[0] = sub_23E0975F4();
    v2[1] = sub_23DF89B88(&qword_256D24660, &qword_256D24668, MEMORY[0x24BDF0B70]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24638);
  }
  return result;
}

unint64_t sub_23E0975F4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24640;
  if (!qword_256D24640)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24648);
    v2[0] = sub_23DF89B88(&qword_256D24650, &qword_256D24658, MEMORY[0x24BDF4700]);
    v2[1] = sub_23DF89B88(&qword_256D1E110, &qword_256D1E0F8, MEMORY[0x24BDEB950]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24640);
  }
  return result;
}

uint64_t sub_23E097690@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E0943B0(a1, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), a2);
}

unint64_t sub_23E097698()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_256D24698;
  if (!qword_256D24698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24688);
    v2 = sub_23E097704();
    v3[0] = MEMORY[0x24BEE17A8];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE1BD0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D24698);
  }
  return result;
}

unint64_t sub_23E097704()
{
  unint64_t result;

  result = qword_256D246A0;
  if (!qword_256D246A0)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_256D246A0);
  }
  return result;
}

uint64_t sub_23E097748@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;

  return sub_23E094ABC(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_23E097750()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_23E135EA4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_23E0977C4(double a1, double a2)
{
  uint64_t v2;

  sub_23E135EA4();
  return sub_23E095754(*(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), a1, a2);
}

uint64_t _s21ColorSwatchPickerViewV9CellValueOMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D24860);
}

uint64_t sub_23E097828()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E097854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E094B20(a1, *(_QWORD *)(v2 + 32), a2);
}

uint64_t _s21ColorSwatchPickerViewV19ColorPreferenceDataVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D247B0);
}

uint64_t sub_23E097874()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E097898@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E094590(a1, *(_QWORD *)(v2 + 16), *(_QWORD **)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_23E0978A4()
{
  return sub_23DF8E904(&qword_256D24700, &qword_256D24708, (uint64_t (*)(void))sub_23E0978C8, MEMORY[0x24BDEBEE0]);
}

unint64_t sub_23E0978C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24710;
  if (!qword_256D24710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24718);
    v2[0] = sub_23E09794C();
    v2[1] = sub_23DF89B88(&qword_256D24748, qword_256D24750, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24710);
  }
  return result;
}

unint64_t sub_23E09794C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24720;
  if (!qword_256D24720)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24728);
    v2[0] = sub_23DF73F28(&qword_256D24730, _s21ColorSwatchPickerViewV9ColorCellVMa, (uint64_t)&unk_23E1408D0);
    v2[1] = sub_23DF89B88(&qword_256D24738, &qword_256D24740, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24720);
  }
  return result;
}

uint64_t _s21ColorSwatchPickerViewV9ColorCellVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D248C8);
}

uint64_t sub_23E097A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int16 *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  int v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int v34;
  BOOL v35;
  char v36;
  uint64_t result;
  _QWORD v38[3];
  int v39;
  int v40;
  void (*v41)(_QWORD, _QWORD, _QWORD);
  int v42;
  unsigned __int16 *v43;
  unint64_t v44;
  char *v45;
  char *v46;
  uint64_t *v47;
  char *v48;
  unint64_t v49;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v5);
  v46 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E135328();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (unsigned __int16 *)((char *)v38 - v12);
  MEMORY[0x24BDAC7A8](v11);
  v45 = (char *)v38 - v14;
  v15 = *(_QWORD *)(a1 + 16);
  if (!v15)
    return MEMORY[0x24BEE4AF8];
  v38[2] = v2;
  v44 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = a1 + v44;
  v47 = (uint64_t *)(a2 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig);
  v17 = *(_QWORD *)(v8 + 72);
  v18 = *MEMORY[0x24BE4DCB0];
  v42 = *MEMORY[0x24BE4DCA8];
  v40 = *MEMORY[0x24BE4DC88];
  v39 = *MEMORY[0x24BE4DC90];
  v19 = *(void (**)(_QWORD, _QWORD, _QWORD))(v8 + 16);
  v38[1] = a1;
  v20 = v19;
  swift_bridgeObjectRetain();
  v49 = MEMORY[0x24BEE4AF8];
  v21 = (uint64_t)v46;
  v43 = v13;
  v41 = v20;
  while (1)
  {
    v20(v13, v16, v7);
    v22 = (*(uint64_t (**)(unsigned __int16 *, uint64_t))(v8 + 88))(v13, v7);
    if (v22 != (_DWORD)v18)
      break;
    (*(void (**)(unsigned __int16 *, uint64_t))(v8 + 8))(v13, v7);
LABEL_9:
    if (*v47 != 2 && (*v47 & 0x10000) != 0)
    {
      v20(v21, v16, v7);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v21, 0, 1, v7);
LABEL_21:
      v26 = v18;
      v27 = v17;
      v28 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 32);
      v29 = v45;
      v28(v45, v21, v7);
      v28(v48, (uint64_t)v29, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v30 = v49;
      else
        v30 = sub_23E007B94(0, *(_QWORD *)(v49 + 16) + 1, 1, v49);
      v32 = *(_QWORD *)(v30 + 16);
      v31 = *(_QWORD *)(v30 + 24);
      if (v32 >= v31 >> 1)
        v30 = sub_23E007B94(v31 > 1, v32 + 1, 1, v30);
      *(_QWORD *)(v30 + 16) = v32 + 1;
      v49 = v30;
      v33 = v30 + v44 + v32 * v27;
      v17 = v27;
      v28((char *)v33, (uint64_t)v48, v7);
      v21 = (uint64_t)v46;
      v18 = v26;
      v13 = v43;
      v20 = v41;
      goto LABEL_5;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v21, 1, 1, v7);
LABEL_4:
    sub_23DF89C7C(v21, &qword_256D1D7F0);
LABEL_5:
    v16 += v17;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      return v49;
    }
  }
  if (v22 == v42)
    goto LABEL_9;
  if (v22 == v40)
  {
    (*(void (**)(unsigned __int16 *, uint64_t))(v8 + 96))(v13, v7);
    v24 = *v47;
    if (*v47 == 2
      || (v24 & 0x1000000000000) != 0
      || ((*((unsigned __int16 *)v47 + 4) | (*((unsigned __int8 *)v47 + 10) << 16)) & 0x10000) != 0
      || ((v34 = *v13, v34 > WORD2(v24)) ? (v35 = v34 >= *((unsigned __int16 *)v47 + 4)) : (v35 = 1),
          !v35 ? (v36 = 0) : (v36 = 1),
          (v24 & 0x10000) != 0 || (v36 & 1) == 0))
    {
      v20(v21, v16, v7);
      v25 = 0;
      goto LABEL_20;
    }
LABEL_19:
    v25 = 1;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v21, v25, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v21, 1, v7) != 1)
      goto LABEL_21;
    goto LABEL_4;
  }
  if (v22 == v39)
  {
    (*(void (**)(unsigned __int16 *, uint64_t))(v8 + 96))(v13, v7);
    swift_release();
    goto LABEL_19;
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t sub_23E097E44(uint64_t a1, uint64_t a2)
{
  return sub_23E097E58(a1, a2, (uint64_t (*)(void))sub_23E008078, (uint64_t (*)(_QWORD))MEMORY[0x24BE4E540]);
}

uint64_t sub_23E097E58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(_QWORD))
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v6 = *v4;
  v7 = *(_QWORD *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = a3();
  v13 = *(_QWORD *)(a4(0) - 8);
  v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v15 * a1;
  v17 = v14 + v15 * a1;
  result = swift_arrayDestroy();
  if (!v9)
    goto LABEL_22;
  v19 = *(_QWORD *)(v6 + 16);
  v20 = v19 - a2;
  if (__OFSUB__(v19, a2))
    goto LABEL_28;
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v22 = *(_QWORD *)(v6 + 16);
    v23 = __OFADD__(v22, v10);
    v24 = v22 - v9;
    if (!v23)
    {
      *(_QWORD *)(v6 + 16) = v24;
LABEL_22:
      *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

_QWORD *sub_23E098008(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = sub_23E135328();
  v51 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
  v52 = *(_QWORD *)(v44 - 8);
  v7 = MEMORY[0x24BDAC7A8](v44);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - v9;
  if (a2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    v42 = a2 - 1;
    if (a2 < 1)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
    v43 = v8;
    v49 = a1;
    v50 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v12 = *(_QWORD *)(a1 + 16);
    if (v12)
    {
      v13 = 0;
      v50 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v47 = a2;
      v45 = v12;
      while (!__OFADD__(v13, a2))
      {
        if (v12 >= v13 + a2)
          v14 = v13 + a2;
        else
          v14 = v12;
        if (v14 < v13)
          goto LABEL_41;
        if (v13 < 0)
          goto LABEL_42;
        v48 = v13 + a2;
        sub_23E137620();
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain_n();
        v15 = swift_dynamicCastClass();
        if (!v15)
        {
          swift_bridgeObjectRelease();
          v15 = v11;
        }
        v16 = *(_QWORD *)(v15 + 16);
        swift_release();
        if (v16 == v14 - v13)
        {
          v17 = swift_dynamicCastClass();
          if (!v17)
          {
            swift_bridgeObjectRelease();
            v17 = v11;
          }
        }
        else
        {
          v39 = (2 * v14) | 1;
          v40 = v49;
          swift_bridgeObjectRelease();
          v17 = sub_23E12E5D0(v40, v40 + ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80)), v13, v39);
        }
        swift_bridgeObjectRelease();
        v18 = *(_QWORD *)(v17 + 16);
        if (v18)
        {
          v53 = v11;
          sub_23E09E3EC(0, v18, 0);
          v19 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
          v46 = v17;
          v20 = v17 + v19;
          v21 = *(_QWORD *)(v51 + 72);
          v22 = *(void (**)(char *, unint64_t, uint64_t))(v51 + 16);
          do
          {
            v22(v6, v20, v4);
            v22(v10, (unint64_t)v6, v4);
            v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
            (*(void (**)(char *, uint64_t))(v51 + 8))(v6, v4);
            v24 = v53;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_23E09E3EC(0, *(_QWORD *)(v24 + 16) + 1, 1);
              v24 = v53;
            }
            v26 = *(_QWORD *)(v24 + 16);
            v25 = *(_QWORD *)(v24 + 24);
            if (v26 >= v25 >> 1)
            {
              sub_23E09E3EC(v25 > 1, v26 + 1, 1);
              v24 = v53;
            }
            *(_QWORD *)(v24 + 16) = v26 + 1;
            sub_23DF89384((uint64_t)v10, v24+ ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))+ *(_QWORD *)(v52 + 72) * v26, _s21ColorSwatchPickerViewV9CellValueOMa);
            v20 += v21;
            --v18;
          }
          while (v18);
          swift_release();
          v11 = MEMORY[0x24BEE4AF8];
        }
        else
        {
          swift_release();
          v24 = v11;
        }
        v53 = v24;
        v27 = *(_QWORD *)(v24 + 16);
        a2 = v47;
        if (v47 > v27)
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
          v29 = v43;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v43, 1, 1, v28);
          v30 = a2 - v27;
          if (a2 - v27 < 0)
            goto LABEL_44;
          v31 = sub_23E13729C();
          *(_QWORD *)(v31 + 16) = v30;
          v32 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
          sub_23DF73E10(v29, v31 + v32, _s21ColorSwatchPickerViewV9CellValueOMa);
          if (v30 != 1)
          {
            v33 = *(_QWORD *)(v52 + 72);
            v34 = v42 - v27;
            v35 = v31 + v33 + v32;
            do
            {
              sub_23DF73E10(v29, v35, _s21ColorSwatchPickerViewV9CellValueOMa);
              v35 += v33;
              --v34;
            }
            while (v34);
          }
          sub_23DF73E54(v29, _s21ColorSwatchPickerViewV9CellValueOMa);
          sub_23DF849AC(v31);
          v24 = v53;
          v11 = MEMORY[0x24BEE4AF8];
          a2 = v47;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v50 = sub_23E00808C(0, v50[2] + 1, 1, v50);
        v37 = v50[2];
        v36 = v50[3];
        if (v37 >= v36 >> 1)
          v50 = sub_23E00808C((_QWORD *)(v36 > 1), v37 + 1, 1, v50);
        v38 = v50;
        v50[2] = v37 + 1;
        v38[v37 + 4] = v24;
        v13 = v48;
        v12 = v45;
        if (v48 >= v45)
          return v50;
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    return v50;
  }
LABEL_43:
  __break(1u);
LABEL_44:
  result = (_QWORD *)sub_23E137560();
  __break(1u);
  return result;
}

uint64_t *sub_23E09853C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_23E135328();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_23E0985CC(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_23E135328();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t sub_23E098610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E135328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_retain();
  return a1;
}

uint64_t sub_23E098678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_23E135328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  v7 = *(int *)(a3 + 24);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t sub_23E098700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_23E135328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_23E098764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_23E135328();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23E0987D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0987E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E09885C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E098868(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_23E135328();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_23E0988E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E135328();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_23E098960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_23E135328();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_23E098A38(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_23E135328();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_23E098AA0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23E135328();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_23E098B54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_23E135328();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_23DF89C7C((uint64_t)a1, &qword_256D246B0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23E135328();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_23E098C60(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_23E135328();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_23E098D14(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_23E135328();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_23DF89C7C((uint64_t)a1, &qword_256D246B0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_23E135328();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_23E098E20()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E098E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_23E098E7C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E098E88(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_23E098EDC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_23E098F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_23E098F5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E135328();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *_s21ColorSwatchPickerViewV18ColorPreferenceKeyVMa()
{
  return &_s21ColorSwatchPickerViewV18ColorPreferenceKeyVN;
}

uint64_t sub_23E098FC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    v9 = *((_BYTE *)a2 + 24);
    swift_retain();
    sub_23DF89F20(v8, v9);
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = v9;
    v10 = *(int *)(a3 + 24);
    v11 = (void *)(a1 + v10);
    v12 = (char *)a2 + v10;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      v16 = sub_23E135328();
      (*(void (**)(void *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v11, v12, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  }
  return a1;
}

uint64_t sub_23E0990EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  swift_release();
  sub_23DF8A078(*(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
  v4 = a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = sub_23E135328();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
  }
  return result;
}

uint64_t sub_23E099174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_BYTE *)(a2 + 24);
  swift_retain();
  sub_23DF89F20(v7, v8);
  *(_QWORD *)(a1 + 16) = v7;
  *(_BYTE *)(a1 + 24) = v8;
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (const void *)(a2 + v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_23E135328();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_23E099278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_BYTE *)(a2 + 24);
  sub_23DF89F20(v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  sub_23DF8A078(v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v24 = sub_23E135328();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v11, v12, v24);
      goto LABEL_7;
    }
    sub_23DF89C7C((uint64_t)v11, &qword_256D246B0);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v19 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v18 = sub_23E135328();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  v20 = *(int *)(a3 + 28);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  return a1;
}

uint64_t sub_23E099404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 24);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = sub_23E135328();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v7, v8, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_23E0994F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v6 = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 24) = v6;
  sub_23DF8A078(v7, v8);
  v9 = *(int *)(a3 + 24);
  v10 = (void *)(a1 + v9);
  v11 = (void *)(a2 + v9);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      v20 = sub_23E135328();
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v10, v11, v20);
      goto LABEL_7;
    }
    sub_23DF89C7C((uint64_t)v10, &qword_256D246B0);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v18 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v17 = sub_23E135328();
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v10, v11, v17);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_7:
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_23E099658()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E099664(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v9);
  }
}

uint64_t sub_23E0996EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_23E0996F8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = _s21ColorSwatchPickerViewV9CellValueOMa(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_23E09976C()
{
  uint64_t result;
  unint64_t v1;

  result = _s21ColorSwatchPickerViewV9CellValueOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E0997F0()
{
  return sub_23DF89B88(&qword_256D24908, &qword_256D24910, MEMORY[0x24BDEC6F8]);
}

uint64_t sub_23E09981C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t _s21ColorSwatchPickerViewV27AccessibilitySelectionStateVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D249A8);
}

unint64_t sub_23E099840()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[5];

  result = qword_256D24940;
  if (!qword_256D24940)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D22378);
    v2 = sub_23E1365C4();
    v3[1] = MEMORY[0x24BDF1FA8];
    v3[2] = v2;
    v3[3] = MEMORY[0x24BDF1F80];
    v3[4] = MEMORY[0x24BDF04A0];
    v3[0] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF5578], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D24940);
  }
  return result;
}

uint64_t sub_23E0998DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(unint64_t, uint64_t);
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v1 = sub_23E135328();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = _s21ColorSwatchPickerViewV9ColorCellVMa(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, v1);
  v8 = v0 + ((v3 + v4 + v6) & ~v6);
  swift_release();
  sub_23DF8A078(*(_QWORD *)(v8 + 16), *(_BYTE *)(v8 + 24));
  v9 = v8 + *(int *)(v5 + 24);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D246B0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    v7(v9, v1);
  return swift_deallocObject();
}

uint64_t sub_23E0999CC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(sub_23E135328() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(_s21ColorSwatchPickerViewV9ColorCellVMa(0) - 8) + 80);
  return sub_23E096724(a1, v2 + v6, v2 + ((v6 + v7 + v8) & ~v8), a2);
}

uint64_t *sub_23E099A44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_23E135328();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)a1 + *(int *)(a3 + 20), (char *)a2 + *(int *)(a3 + 20), v7);
    }
    else
    {
      v11 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
      v11(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      v11((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    }
  }
  return a1;
}

uint64_t sub_23E099B38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  void (*v7)(uint64_t, uint64_t);
  void (*v9)(uint64_t, uint64_t);

  v4 = sub_23E135328();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4);
  v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  if (!v6)
  {
    v9 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v7(a1, v4);
    v7 = v9;
  }
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 20), v4);
}

char *sub_23E099BB4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  else
  {
    v9 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
    v9(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v9(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  return a1;
}

char *sub_23E099C7C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  return a1;
}

char *sub_23E099D90(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  else
  {
    v9 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v9(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    v9(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  }
  return a1;
}

char *sub_23E099E58(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;

  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  return a1;
}

uint64_t sub_23E099F6C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E099F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_23E135328();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_23E099FF0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E099FFC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_23E135328();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_23E09A07C()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DFE1754();
  if (v0 <= 0x3F)
  {
    sub_23E135328();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_23E09A100()
{
  return sub_23DF89B88(&qword_256D249E0, &qword_256D249E8, MEMORY[0x24BDF4750]);
}

uint64_t sub_23E09A12C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E09A13C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24A08;
  if (!qword_256D24A08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D249F0);
    v2[0] = sub_23DF89B88(&qword_256D24A10, &qword_256D24A00, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24A08);
  }
  return result;
}

unint64_t sub_23E09A1DC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D24A18;
  if (!qword_256D24A18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24A20);
    v2 = sub_23E09A240();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF3F50], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D24A18);
  }
  return result;
}

unint64_t sub_23E09A240()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D24A28;
  if (!qword_256D24A28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256D24A30);
    v2[0] = sub_23E09A13C();
    v2[1] = sub_23DF89B88(&qword_256D24A10, &qword_256D24A00, MEMORY[0x24BDEFB78]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D24A28);
  }
  return result;
}

ValueMetadata *_s27DoorWindowAndWindowCoveringVMa()
{
  return &_s27DoorWindowAndWindowCoveringVN;
}

uint64_t sub_23E09A2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  __int128 v32;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E13534C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  if ((*(unsigned int (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9) == *MEMORY[0x24BE4DD08])
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    v13 = *v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
    v15 = *(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80);
    v16 = (v15 + 32) & ~v15;
    v17 = swift_allocObject();
    v32 = xmmword_23E138050;
    *(_OWORD *)(v17 + 16) = xmmword_23E138050;
    v18 = v17 + v16;
    v19 = (_QWORD *)(v18 + *(int *)(v14 + 48));
    v20 = *MEMORY[0x24BE4E270];
    v21 = sub_23E1356DC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 104))(v18, v20, v21);
    v19[3] = MEMORY[0x24BEE13C8];
    *v19 = v13;
    v22 = sub_23E0ECA08(v17);
    v23 = sub_23E135538();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
    v24 = sub_23E134C80();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = v32;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 16))(v27 + v26, a2, v24);
    v28 = sub_23E0E212C(v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *a3 = v22;
    a3[1] = 0;
    v29 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v29 + 24));
    *(unint64_t *)((char *)a3 + *(int *)(v29 + 28)) = v28;
    return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a3, 0, 1, v29);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
    v31 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
    return (*(uint64_t (**)(unint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(a3, 1, 1, v31);
  }
}

uint64_t sub_23E09A5CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double v33;
  uint64_t v34;
  double *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  double *v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;

  v78 = type metadata accessor for AccessoryControlInfo(0);
  MEMORY[0x24BDAC7A8](v78);
  v80 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_23E135958();
  v72 = *(_QWORD *)(v3 - 8);
  v73 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v70 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_23E13534C();
  v69 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v68 = (double *)((char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = type metadata accessor for Device.Control.IncrementalState(0);
  v74 = *(_QWORD *)(v6 - 8);
  *(_QWORD *)&v75 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v79 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E135520();
  v66 = *(_QWORD *)(v8 - 8);
  v67 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v65 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v10);
  v77 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E1356DC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_23E1359AC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v81 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *MEMORY[0x24BE4E270];
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 104);
  v23(v15, v22, v12);
  v76 = type metadata accessor for HAPControlSolver.Source();
  v82 = a1;
  sub_23E135A48();
  v24 = *(void (**)(char *, uint64_t))(v13 + 8);
  v24(v15, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_23DF73DD0((uint64_t)v18);
    return MEMORY[0x24BEE4AF8];
  }
  else
  {
    v64 = v20;
    v26 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v63 = v19;
    v26(v81, v18, v19);
    v28 = (uint64_t)v65;
    v27 = v66;
    v29 = v67;
    (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, *MEMORY[0x24BE4DF18], v67);
    v30 = v77;
    sub_23E0ABBCC(v82, v28, v77, 0.0, 100.0, 1.0);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v29);
    v23(v15, v22, v12);
    v31 = sub_23E135AC0();
    LOBYTE(v27) = v32;
    v24(v15, v12);
    v33 = *(double *)&v31;
    if ((v27 & 1) != 0)
      v33 = 0.0;
    v35 = v68;
    v34 = v69;
    *v68 = v33;
    v36 = v71;
    (*(void (**)(double *, _QWORD, uint64_t))(v34 + 104))(v35, *MEMORY[0x24BE4DD08], v71);
    v37 = v70;
    v38 = v81;
    sub_23E135964();
    v39 = sub_23E13594C();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v37, v73);
    v40 = (uint64_t)v79;
    (*(void (**)(char *, double *, uint64_t))(v34 + 32))(v79, v35, v36);
    v41 = v75;
    *(_BYTE *)(v40 + *(int *)(v75 + 20)) = v39 & 1;
    v42 = (uint64_t)v80;
    v43 = v38;
    sub_23E135988();
    v44 = (int *)v78;
    v45 = v42 + *(int *)(v78 + 20);
    v46 = v45 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
    v47 = v30;
    sub_23DF73E10(v30, v45, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E10(v40, v46, type metadata accessor for Device.Control.IncrementalState);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v74 + 56))(v46, 0, 1, v41);
    type metadata accessor for AccessoryControlInfo.State(0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v48 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v49 = (v48 + 32) & ~v48;
    v50 = swift_allocObject();
    v75 = xmmword_23E138050;
    *(_OWORD *)(v50 + 16) = xmmword_23E138050;
    v51 = v82;
    sub_23DF73E10(v82, v50 + v49, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v52 = (_QWORD *)(v42 + v44[7]);
    v53 = v44[9];
    *(_QWORD *)(v42 + v44[11]) = v50;
    *(_BYTE *)(v42 + v44[6]) = 0;
    *v52 = 0;
    v52[1] = 0;
    *(_WORD *)(v42 + v44[8]) = 1028;
    *(_BYTE *)(v42 + v53) = 12;
    *(_BYTE *)(v42 + v44[10]) = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v54 = type metadata accessor for AccessoryControlGroup(0);
    v55 = *(unsigned __int8 *)(*(_QWORD *)(v54 - 8) + 80);
    v56 = (v55 + 32) & ~v55;
    v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = v75;
    sub_23DF73E10(v42, v25 + v56, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v57 = (uint64_t *)(v51 + *(int *)(v76 + 28));
    v59 = *v57;
    v58 = v57[1];
    v60 = (_QWORD *)(v25 + v56 + *(int *)(v54 + 24));
    v61 = (_QWORD *)(v25 + v56 + *(int *)(v54 + 20));
    *v61 = v59;
    v61[1] = v58;
    *v60 = v59;
    v60[1] = v58;
    swift_bridgeObjectRetain_n();
    sub_23DF73E54(v42, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E54(v40, type metadata accessor for Device.Control.IncrementalState);
    sub_23DF73E54(v47, type metadata accessor for Device.Control.IncrementalConfig);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v63);
  }
  return v25;
}

uint64_t static Device.ControlModule.controls(in:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v2 = type metadata accessor for Device.Control(0);
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (_QWORD *)((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BEE4AF8];
  v23 = MEMORY[0x24BEE4AF8];
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    v10 = 48;
    do
    {
      v11 = swift_bridgeObjectRetain();
      sub_23DF83F90(v11);
      v10 += 40;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v12 = v23;
  }
  else
  {
    v12 = MEMORY[0x24BEE4AF8];
  }
  v23 = v8;
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v14 = *(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8);
    v15 = v12 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v16 = *(_QWORD *)(v14 + 72);
    v20[1] = v12;
    swift_bridgeObjectRetain();
    v21 = xmmword_23E138050;
    do
    {
      sub_23DF73E10(v15, (uint64_t)v7, type metadata accessor for Device.ControlGroup.LayoutType);
      if (swift_getEnumCaseMultiPayload() < 2)
      {
        v17 = *v7;
      }
      else
      {
        sub_23DF89384((uint64_t)v7, (uint64_t)v4, type metadata accessor for Device.Control);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
        v18 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = v21;
        sub_23DF89384((uint64_t)v4, v17 + v18, type metadata accessor for Device.Control);
      }
      sub_23DF84100(v17);
      v15 += v16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease_n();
    return v23;
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
}

void sub_23E09AE44(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E09AE8C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E09AF50 + 4 * byte_23E1409CF[a2]))(0x6E656D6572636E69);
}

uint64_t sub_23E09AF50(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0x6E656D6572636E69 && v1 == 0xEB000000006C6174)
    v2 = 1;
  else
    v2 = sub_23E137614();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23E09B06C(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000010;
  else
    v3 = 6449010;
  if (v2)
    v4 = 0xE300000000000000;
  else
    v4 = 0x800000023E144300;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000010;
  else
    v5 = 6449010;
  if ((a2 & 1) != 0)
    v6 = 0x800000023E144300;
  else
    v6 = 0xE300000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_23E137614();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_23E09B10C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  int v6;
  unint64_t v7;
  char v8;

  v2 = 0x800000023E144290;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0xD00000000000001ALL;
    else
      v4 = 0xD000000000000020;
    if (v3 == 1)
      v5 = 0x800000023E1442B0;
    else
      v5 = 0x800000023E1442D0;
    v6 = a2;
    if (a2)
    {
LABEL_9:
      if (v6 == 1)
        v7 = 0xD00000000000001ALL;
      else
        v7 = 0xD000000000000020;
      if (v6 == 1)
        v2 = 0x800000023E1442B0;
      else
        v2 = 0x800000023E1442D0;
      if (v4 != v7)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xD00000000000001BLL;
    v5 = 0x800000023E144290;
    v6 = a2;
    if (a2)
      goto LABEL_9;
  }
  if (v4 != 0xD00000000000001BLL)
  {
LABEL_21:
    v8 = sub_23E137614();
    goto LABEL_22;
  }
LABEL_19:
  if (v5 != v2)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_23E09B208(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_23E09B248(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_23E09B2C0 + 4 * byte_23E1409DA[a2]))(0xD000000000000013);
}

uint64_t sub_23E09B2C0(uint64_t a1)
{
  uint64_t v1;
  char v2;

  if (a1 == 0xD000000000000013 && v1 == 0x800000023E144260)
    v2 = 1;
  else
    v2 = sub_23E137614();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t sub_23E09B37C(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x6E656D6572636564;
  else
    v2 = 0x6E656D6572636E69;
  if ((a2 & 1) != 0)
    v3 = 0x6E656D6572636564;
  else
    v3 = 0x6E656D6572636E69;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_23E137614();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t Device.ControlGroup.controls.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for Device.Control(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() <= 1)
    return *(_QWORD *)v8;
  sub_23DF89384((uint64_t)v8, (uint64_t)v5, type metadata accessor for Device.Control);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_23E138050;
  sub_23DF89384((uint64_t)v5, v10 + v11, type metadata accessor for Device.Control);
  return v10;
}

uint64_t type metadata accessor for Device.ControlGroup.LayoutType(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D24BB8);
}

uint64_t type metadata accessor for Device.ControlGroup(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D24B08);
}

uint64_t sub_23E09B558()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return Device.ControlGroup.controls.setter(v0);
}

uint64_t Device.ControlGroup.controls.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v15;
  uint64_t v16;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Device.Control(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10((uint64_t)v1, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    if (*(_QWORD *)(a1 + 16))
    {
      sub_23DF73E10(a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), (uint64_t)v5, type metadata accessor for Device.Control);
      v15 = 0;
    }
    else
    {
      v15 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, v15, 1, v6);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_23DF89C7C((uint64_t)v5, &qword_256D1D5E0);
    }
    else
    {
      sub_23DF89384((uint64_t)v5, (uint64_t)v9, type metadata accessor for Device.Control);
      sub_23DF73E54((uint64_t)v1, type metadata accessor for Device.ControlGroup.LayoutType);
      sub_23DF89384((uint64_t)v9, (uint64_t)v1, type metadata accessor for Device.Control);
      swift_storeEnumTagMultiPayload();
    }
    return sub_23DF73E54((uint64_t)v12, type metadata accessor for Device.ControlGroup.LayoutType);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_23DF73E54((uint64_t)v1, type metadata accessor for Device.ControlGroup.LayoutType);
    *v1 = a1;
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_23E09B7C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = sub_23E134C80();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v15 = v1;
    v17 = MEMORY[0x24BEE4AF8];
    sub_23E09E370(0, v7, 0);
    v8 = v17;
    v9 = *(_QWORD *)(type metadata accessor for Device.Control(0) - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v16 = *(_QWORD *)(v9 + 72);
    v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    do
    {
      v11(v6, v10, v3);
      v17 = v8;
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_23E09E370(v12 > 1, v13 + 1, 1);
        v8 = v17;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, v6, v3);
      v10 += v16;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_23E09B92C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int EnumCaseMultiPayload;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD v38[2];
  __int128 v39;
  uint64_t v40;
  int64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v43 = sub_23E134C80();
  v51 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  v44 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v40 = (uint64_t)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v47);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v38[1] = v1;
    v53 = MEMORY[0x24BEE4AF8];
    sub_23E09E3C0(0, v9, 0);
    v11 = v53;
    v12 = 0;
    v13 = *(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8);
    v14 = *(unsigned __int8 *)(v13 + 80);
    v45 = *(_QWORD *)(v13 + 72);
    v46 = a1 + ((v14 + 32) & ~v14);
    v39 = xmmword_23E138050;
    v41 = v9;
    v42 = v8;
    while (1)
    {
      sub_23DF73E10(v46 + v45 * v12, (uint64_t)v8, type metadata accessor for Device.ControlGroup.LayoutType);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v50 = v12;
      if (EnumCaseMultiPayload > 1)
      {
        v27 = v11;
        v28 = v40;
        sub_23DF89384((uint64_t)v8, v40, type metadata accessor for Device.Control);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
        v29 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
        v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = v39;
        v31 = v30 + v29;
        v16 = v30;
        v32 = v28;
        v11 = v27;
        sub_23DF89384(v32, v31, type metadata accessor for Device.Control);
        v17 = *(_QWORD *)(v16 + 16);
        if (v17)
        {
LABEL_5:
          v49 = v11;
          v52 = v10;
          sub_23E09E370(0, v17, 0);
          v18 = v43;
          v19 = *(unsigned __int8 *)(v44 + 80);
          v48 = v16;
          v20 = v16 + ((v19 + 32) & ~v19);
          v21 = *(_QWORD *)(v44 + 72);
          v22 = v52;
          v23 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
          do
          {
            v23(v4, v20, v18);
            v52 = v22;
            v24 = v4;
            v26 = *(_QWORD *)(v22 + 16);
            v25 = *(_QWORD *)(v22 + 24);
            if (v26 >= v25 >> 1)
            {
              sub_23E09E370(v25 > 1, v26 + 1, 1);
              v18 = v43;
              v22 = v52;
            }
            *(_QWORD *)(v22 + 16) = v26 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v51 + 32))(v22+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(_QWORD *)(v51 + 72) * v26, v24, v18);
            v20 += v21;
            --v17;
            v4 = v24;
          }
          while (v17);
          swift_bridgeObjectRelease();
          v9 = v41;
          v8 = v42;
          v10 = MEMORY[0x24BEE4AF8];
          v11 = v49;
          goto LABEL_12;
        }
      }
      else
      {
        v16 = *(_QWORD *)v8;
        v17 = *(_QWORD *)(*(_QWORD *)v8 + 16);
        if (v17)
          goto LABEL_5;
      }
      swift_bridgeObjectRelease();
      v22 = v10;
LABEL_12:
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v53 = v11;
      v34 = v50;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_23E09E3C0(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v53;
      }
      v36 = *(_QWORD *)(v11 + 16);
      v35 = *(_QWORD *)(v11 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_23E09E3C0(v35 > 1, v36 + 1, 1);
        v11 = v53;
      }
      v12 = v34 + 1;
      *(_QWORD *)(v11 + 16) = v36 + 1;
      *(_QWORD *)(v11 + 8 * v36 + 32) = v22;
      if (v12 == v9)
        return v11;
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t Device.ControlGroup.init(type:label:accesibilityIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t result;

  v12 = type metadata accessor for Device.ControlGroup(0);
  v13 = (_QWORD *)(a6 + *(int *)(v12 + 20));
  v14 = (_QWORD *)(a6 + *(int *)(v12 + 24));
  result = sub_23DF89384(a1, a6, type metadata accessor for Device.ControlGroup.LayoutType);
  *v13 = a2;
  v13[1] = a3;
  *v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t Device.ControlModule.init(groups:label:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = a2;
  a4[1] = a3;
  a4[3] = 0;
  a4[4] = 0;
  a4[2] = result;
  return result;
}

uint64_t Device.ControlGroup.transformControls(transform:)(void (*a1)(char *), uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v15;

  v3 = v2;
  v6 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23DF73E10((uint64_t)v3, (uint64_t)v11, v12);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for Device.Control);
    a1(v8);
    sub_23DF73E54((uint64_t)v3, type metadata accessor for Device.ControlGroup.LayoutType);
    sub_23DF89384((uint64_t)v8, (uint64_t)v3, type metadata accessor for Device.Control);
  }
  else
  {
    v13 = sub_23E09F758(*v11, a1, a2);
    swift_bridgeObjectRelease();
    sub_23DF73E54((uint64_t)v3, type metadata accessor for Device.ControlGroup.LayoutType);
    *v3 = v13;
  }
  return swift_storeEnumTagMultiPayload();
}

Swift::Void __swiftcall Device.ControlGroup.setControls(enabled:)(Swift::Bool enabled)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  Swift::Bool v16;
  uint64_t (*v17)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  v2 = v1;
  v38 = type metadata accessor for Device.Control(0);
  v4 = *(_QWORD *)(v38 - 8);
  v5 = MEMORY[0x24BDAC7A8](v38);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v5);
  v10 = (char *)&v34 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v34 - v11;
  v13 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = enabled;
  sub_23DF73E10((uint64_t)v2, (uint64_t)v15, v17);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v27 = *(_QWORD *)v15;
    v28 = *(_QWORD *)(*(_QWORD *)v15 + 16);
    if (v28)
    {
      v36 = v13;
      v37 = v2;
      v39 = MEMORY[0x24BEE4AF8];
      sub_23E09E1AC(0, v28, 0);
      v21 = v39;
      v29 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v35 = v27;
      v30 = v27 + v29;
      v31 = *(_QWORD *)(v4 + 72);
      do
      {
        sub_23DF73E10(v30, (uint64_t)v7, type metadata accessor for Device.Control);
        v7[*(int *)(v38 + 44)] = v16;
        v39 = v21;
        v33 = *(_QWORD *)(v21 + 16);
        v32 = *(_QWORD *)(v21 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_23E09E1AC(v32 > 1, v33 + 1, 1);
          v21 = v39;
        }
        *(_QWORD *)(v21 + 16) = v33 + 1;
        sub_23DF89384((uint64_t)v7, v21 + v29 + v33 * v31, type metadata accessor for Device.Control);
        v30 += v31;
        --v28;
      }
      while (v28);
      goto LABEL_14;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    v21 = MEMORY[0x24BEE4AF8];
    goto LABEL_17;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v19 = *(_QWORD *)v15;
    v20 = *(_QWORD *)(*(_QWORD *)v15 + 16);
    if (v20)
    {
      v36 = v13;
      v37 = v2;
      v39 = MEMORY[0x24BEE4AF8];
      sub_23E09E1AC(0, v20, 0);
      v21 = v39;
      v22 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      v35 = v19;
      v23 = v19 + v22;
      v24 = *(_QWORD *)(v4 + 72);
      do
      {
        sub_23DF73E10(v23, (uint64_t)v10, type metadata accessor for Device.Control);
        v10[*(int *)(v38 + 44)] = v16;
        v39 = v21;
        v26 = *(_QWORD *)(v21 + 16);
        v25 = *(_QWORD *)(v21 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_23E09E1AC(v25 > 1, v26 + 1, 1);
          v21 = v39;
        }
        *(_QWORD *)(v21 + 16) = v26 + 1;
        sub_23DF89384((uint64_t)v10, v21 + v22 + v26 * v24, type metadata accessor for Device.Control);
        v23 += v24;
        --v20;
      }
      while (v20);
LABEL_14:
      swift_bridgeObjectRelease();
      v2 = v37;
LABEL_17:
      sub_23DF73E54((uint64_t)v2, type metadata accessor for Device.ControlGroup.LayoutType);
      *v2 = v21;
      goto LABEL_18;
    }
    goto LABEL_16;
  }
  sub_23DF89384((uint64_t)v15, (uint64_t)v12, type metadata accessor for Device.Control);
  v12[*(int *)(v38 + 44)] = v16;
  sub_23DF73E54((uint64_t)v2, type metadata accessor for Device.ControlGroup.LayoutType);
  sub_23DF89384((uint64_t)v12, (uint64_t)v2, type metadata accessor for Device.Control);
LABEL_18:
  swift_storeEnumTagMultiPayload();
}

uint64_t Device.ControlGroup.LayoutType.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t (*v10)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23DF73E10(v2, (uint64_t)v9, v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v12 = *v9;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v12 = *v9;
LABEL_5:
    sub_23E1376A4();
    sub_23DFAD2F8(a1, v12);
    return swift_bridgeObjectRelease();
  }
  sub_23DF89384((uint64_t)v9, (uint64_t)v6, type metadata accessor for Device.Control);
  sub_23E1376A4();
  Device.Control.hash(into:)(a1);
  return sub_23DF73E54((uint64_t)v6, type metadata accessor for Device.Control);
}

uint64_t Device.ControlGroup.LayoutType.hashValue.getter()
{
  _BYTE v1[72];

  sub_23E137698();
  Device.ControlGroup.LayoutType.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t sub_23E09C41C()
{
  _BYTE v1[72];

  sub_23E137698();
  Device.ControlGroup.LayoutType.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t sub_23E09C45C()
{
  _BYTE v1[72];

  sub_23E137698();
  Device.ControlGroup.LayoutType.hash(into:)((uint64_t)v1);
  return sub_23E1376D4();
}

uint64_t Device.ControlGroup.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _BYTE v14[16];

  v1 = v0;
  v2 = type metadata accessor for Device.Control(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)&v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_23DF73E10(v1, (uint64_t)v8, v9);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v8, (uint64_t)v5, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
    v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_23E138050;
    sub_23DF89384((uint64_t)v5, v10 + v11, type metadata accessor for Device.Control);
  }
  else
  {
    v10 = *v8;
  }
  v12 = sub_23E09B7C4(v10);
  swift_bridgeObjectRelease();
  return v12;
}

void (*Device.ControlGroup.controls.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;

  v2 = v1;
  a1[1] = v1;
  v4 = *(_QWORD *)(type metadata accessor for Device.Control(0) - 8);
  v5 = malloc(*(_QWORD *)(v4 + 64));
  a1[2] = (uint64_t)v5;
  v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v7 = (uint64_t *)malloc(*(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  a1[3] = (uint64_t)v7;
  sub_23DF73E10(v2, (uint64_t)v7, type metadata accessor for Device.ControlGroup.LayoutType);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v7, (uint64_t)v5, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
    v9 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_23E138050;
    sub_23DF89384((uint64_t)v5, v8 + v9, type metadata accessor for Device.Control);
  }
  else
  {
    v8 = *v7;
  }
  *a1 = v8;
  return sub_23E09C70C;
}

void sub_23E09C70C(uint64_t *a1, char a2)
{
  void *v2;
  void *v3;
  uint64_t v4;

  v2 = (void *)a1[2];
  v3 = (void *)a1[3];
  if ((a2 & 1) != 0)
  {
    v4 = swift_bridgeObjectRetain();
    Device.ControlGroup.controls.setter(v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    Device.ControlGroup.controls.setter(*a1);
  }
  free(v3);
  free(v2);
}

uint64_t Device.ControlGroup.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF73E10(v1, a1, type metadata accessor for Device.ControlGroup.LayoutType);
}

uint64_t Device.ControlGroup.type.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_23E0A5A14(a1, v1, type metadata accessor for Device.ControlGroup.LayoutType);
}

uint64_t (*Device.ControlGroup.type.modify())()
{
  return CGPointMake;
}

uint64_t Device.ControlGroup.label.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device.ControlGroup(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.ControlGroup.label.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Device.ControlGroup(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Device.ControlGroup.label.modify())(_QWORD)
{
  type metadata accessor for Device.ControlGroup(0);
  return CGPointMake;
}

uint64_t Device.ControlGroup.accesibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Device.ControlGroup(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.ControlGroup.accesibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for Device.ControlGroup(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*Device.ControlGroup.accesibilityIdentifier.modify())(_QWORD)
{
  type metadata accessor for Device.ControlGroup(0);
  return CGPointMake;
}

uint64_t Device.ControlGroup.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  Device.ControlGroup.LayoutType.hash(into:)(a1);
  v2 = type metadata accessor for Device.ControlGroup(0);
  if (*(_QWORD *)(v1 + *(int *)(v2 + 20) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  if (!*(_QWORD *)(v1 + *(int *)(v2 + 24) + 8))
    return sub_23E1376B0();
  sub_23E1376B0();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t Device.ControlGroup.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  sub_23E137698();
  Device.ControlGroup.LayoutType.hash(into:)((uint64_t)v3);
  v1 = type metadata accessor for Device.ControlGroup(0);
  if (*(_QWORD *)(v0 + *(int *)(v1 + 20) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  if (*(_QWORD *)(v0 + *(int *)(v1 + 24) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E09CAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  Device.ControlGroup.LayoutType.hash(into:)(a1);
  if (*(_QWORD *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  if (!*(_QWORD *)(v2 + *(int *)(a2 + 24) + 8))
    return sub_23E1376B0();
  sub_23E1376B0();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E09CBDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v5[72];

  sub_23E137698();
  Device.ControlGroup.LayoutType.hash(into:)((uint64_t)v5);
  if (*(_QWORD *)(v2 + *(int *)(a2 + 20) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  if (*(_QWORD *)(v2 + *(int *)(a2 + 24) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E09CCD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Device.ControlGroup.id.getter();
  *a1 = result;
  return result;
}

uint64_t Device.ControlModule.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_23E09B92C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Device.ControlModule.label.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.ControlModule.label.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Device.ControlModule.label.modify())()
{
  return CGPointMake;
}

uint64_t Device.ControlModule.groups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Device.ControlModule.groups.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Device.ControlModule.groups.modify())()
{
  return CGPointMake;
}

uint64_t Device.ControlModule.accesibilityIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Device.ControlModule.accesibilityIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Device.ControlModule.accesibilityIdentifier.modify())()
{
  return CGPointMake;
}

uint64_t static Device.ControlModule.simple(control:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  _QWORD *v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
  v4 = type metadata accessor for Device.ControlGroup(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_23E138050;
  v8 = v7 + v6;
  sub_23DF73E10(a1, v8, type metadata accessor for Device.Control);
  type metadata accessor for Device.ControlGroup.LayoutType(0);
  result = swift_storeEnumTagMultiPayload();
  v10 = (_QWORD *)(v8 + *(int *)(v4 + 20));
  v11 = (_QWORD *)(v8 + *(int *)(v4 + 24));
  *v10 = 0;
  v10[1] = 0;
  *v11 = 0;
  v11[1] = 0;
  *a2 = 0;
  a2[1] = 0;
  a2[3] = 0;
  a2[4] = 0;
  a2[2] = v7;
  return result;
}

uint64_t Device.ControlModule.hash(into:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[2];
  v4 = v1[4];
  if (v1[1])
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  swift_bridgeObjectRetain();
  sub_23DFACEF8(a1, v3);
  swift_bridgeObjectRelease();
  if (!v4)
    return sub_23E1376B0();
  sub_23E1376B0();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t Device.ControlModule.hashValue.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[4];
  sub_23E137698();
  sub_23E1376B0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23DFACEF8((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  sub_23E1376B0();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E09D110()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[72];

  v1 = v0[1];
  v2 = v0[2];
  v3 = v0[4];
  sub_23E137698();
  sub_23E1376B0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_23DFACEF8((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  sub_23E1376B0();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  return sub_23E1376D4();
}

uint64_t sub_23E09D1F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_23E09B92C(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t static Device.ControlModule.set(control:for:in:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int EnumCaseMultiPayload;
  unint64_t v29;
  char v30;
  char v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  unint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  __int128 v57;
  unint64_t v58;
  unint64_t *v59;
  uint64_t v60;
  unint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;

  v49 = a1;
  v60 = a2;
  v48 = type metadata accessor for Device.Control(0);
  v64 = *(_QWORD *)(v48 - 8);
  v5 = MEMORY[0x24BDAC7A8](v48);
  v7 = (unint64_t *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v58 = (unint64_t)&v40 - v8;
  v62 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v9 = MEMORY[0x24BDAC7A8](v62);
  v47 = (unint64_t *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (unint64_t *)((char *)&v40 - v12);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (unint64_t)&v40 - v14;
  v16 = type metadata accessor for Device.ControlGroup(0);
  v17 = *(_QWORD *)(v16 - 8);
  result = MEMORY[0x24BDAC7A8](v16);
  v63 = (uint64_t)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(_QWORD *)(*(_QWORD *)a3 + 16);
  if (v20)
  {
    v21 = 0;
    v22 = (unint64_t)type metadata accessor for Device.ControlGroup;
    v57 = xmmword_23E138050;
    v59 = v7;
    v50 = v17;
    v51 = v15;
    v43 = (unint64_t *)a3;
    v41 = v20;
    while (1)
    {
      if (v21 >= *(_QWORD *)(*(_QWORD *)a3 + 16))
      {
LABEL_38:
        __break(1u);
LABEL_39:
        v22 = (unint64_t)sub_23E09EE5C((_QWORD *)v22);
        *v7 = v22;
        goto LABEL_25;
      }
      v23 = *(_QWORD *)a3 + 32;
      v3 = *(_QWORD *)(v23 + 40 * v21 + 16);
      v53 = *(_QWORD *)(v3 + 16);
      if (v53)
        break;
LABEL_21:
      if (++v21 == v20)
        return result;
    }
    v44 = v21;
    v24 = v23 + 40 * v21;
    v25 = *(_QWORD *)(v24 + 32);
    v26 = *(_QWORD *)(v24 + 8);
    v42 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v55 = v3 + v42;
    v45 = v25;
    swift_bridgeObjectRetain();
    v46 = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3 = 0;
    v54 = v3;
    while (1)
    {
      if (a3 >= *(_QWORD *)(v3 + 16))
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      v17 = *(_QWORD *)(v17 + 72) * a3;
      v27 = v63;
      sub_23DF73E10(v55 + v17, v63, type metadata accessor for Device.ControlGroup);
      sub_23DF73E10(v27, v15, type metadata accessor for Device.ControlGroup.LayoutType);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v56 = a3;
      v52 = v17;
      if (EnumCaseMultiPayload > 1)
      {
        a3 = v58;
        sub_23DF89384(v15, v58, type metadata accessor for Device.Control);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
        v29 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
        v3 = swift_allocObject();
        *(_OWORD *)(v3 + 16) = v57;
        sub_23DF89384(a3, v3 + v29, type metadata accessor for Device.Control);
      }
      else
      {
        v3 = *(_QWORD *)v15;
      }
      v7 = *(unint64_t **)(v3 + 16);
      swift_bridgeObjectRelease();
      v61 = v7;
      if (v7)
        break;
LABEL_6:
      a3 = v56 + 1;
      v22 = (unint64_t)type metadata accessor for Device.ControlGroup;
      sub_23DF73E54(v63, type metadata accessor for Device.ControlGroup);
      v3 = v54;
      v17 = v50;
      v15 = v51;
      if (a3 == v53)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        a3 = (unint64_t)v43;
        v21 = v44;
        v20 = v41;
        goto LABEL_21;
      }
    }
    v15 = 0;
    while (1)
    {
      sub_23DF73E10(v63, (uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        v17 = v58;
        sub_23DF89384((uint64_t)v13, v58, type metadata accessor for Device.Control);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
        a3 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = v57;
        sub_23DF89384(v17, v22 + a3, type metadata accessor for Device.Control);
      }
      else
      {
        v22 = *v13;
      }
      if (v15 >= *(_QWORD *)(v22 + 16))
      {
        __break(1u);
        goto LABEL_37;
      }
      v7 = v13;
      v13 = (unint64_t *)((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
      a3 = *(_QWORD *)(v64 + 72);
      v17 = a3 * v15;
      v3 = (uint64_t)v59;
      sub_23DF73E10((uint64_t)v13 + v22 + a3 * v15, (uint64_t)v59, type metadata accessor for Device.Control);
      swift_bridgeObjectRelease();
      if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) != 0)
        break;
      ++v15;
      sub_23DF73E54(v3, type metadata accessor for Device.Control);
      v13 = v7;
      if (v61 == (unint64_t *)v15)
        goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Device.Control.Kind.primitive.getter();
    v30 = v65;
    Device.Control.Kind.primitive.getter();
    sub_23E09AE44(v30);
    if ((v31 & 1) == 0)
    {
      sub_23E09F8B0();
      swift_allocError();
      swift_willThrow();
      sub_23DF73E54(v3, type metadata accessor for Device.Control);
      return sub_23DF73E54(v63, type metadata accessor for Device.ControlGroup);
    }
    v7 = v43;
    v22 = *v43;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v7 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_39;
LABEL_25:
    if (v44 >= *(_QWORD *)(v22 + 16))
    {
      __break(1u);
    }
    else
    {
      v33 = v22 + 40 * v44;
      v34 = *(_QWORD *)(v33 + 48);
      v7 = (unint64_t *)(v33 + 48);
      v22 = v34;
      v35 = swift_isUniquelyReferenced_nonNull_native();
      *v7 = v34;
      if ((v35 & 1) != 0)
        goto LABEL_27;
    }
    v22 = sub_23E09EDD0(v22);
    *v7 = v22;
LABEL_27:
    if (v56 >= *(_QWORD *)(v22 + 16))
    {
      __break(1u);
    }
    else
    {
      v36 = v22 + v42 + v52;
      v37 = v47;
      sub_23DF73E10(v36, (uint64_t)v47, type metadata accessor for Device.ControlGroup.LayoutType);
      if (swift_getEnumCaseMultiPayload() > 1)
      {
        v38 = (uint64_t)v37;
        v39 = v58;
        sub_23DF89384(v38, v58, type metadata accessor for Device.Control);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
        a3 = swift_allocObject();
        *(_OWORD *)(a3 + 16) = v57;
        sub_23DF89384(v39, (uint64_t)v13 + a3, type metadata accessor for Device.Control);
      }
      else
      {
        a3 = *v37;
      }
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_33;
    }
    result = sub_23E09EDE4(a3);
    a3 = result;
LABEL_33:
    if (v15 >= *(_QWORD *)(a3 + 16))
    {
      __break(1u);
    }
    else
    {
      sub_23E09F8F4(v49, (uint64_t)v13 + a3 + v17);
      Device.ControlGroup.controls.setter(a3);
      sub_23DF73E54(v3, type metadata accessor for Device.Control);
      return sub_23DF73E54(v63, type metadata accessor for Device.ControlGroup);
    }
  }
  return result;
}

uint64_t static Device.ControlModule.Errors.== infix(_:_:)()
{
  return 1;
}

uint64_t Device.ControlModule.Errors.hash(into:)()
{
  return sub_23E1376A4();
}

uint64_t Device.ControlModule.Errors.hashValue.getter()
{
  sub_23E137698();
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23E09D984@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EEC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(a1, a2, type metadata accessor for Device.Control);
  v10 = type metadata accessor for Device.Control(0);
  sub_23DF73E10(a2 + *(int *)(v10 + 20), (uint64_t)v9, type metadata accessor for Device.Control.Kind);
  if (swift_getEnumCaseMultiPayload())
    return sub_23DF73E54((uint64_t)v9, type metadata accessor for Device.Control.Kind);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
  sub_23DF73E54((uint64_t)&v9[*(int *)(v12 + 48)], type metadata accessor for Device.Control.BinaryViewConfig);
  *(_WORD *)(a2 + *(int *)(v10 + 36)) = 514;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v14 = &v6[*(int *)(v13 + 28)];
  v15 = &v14[*(int *)(type metadata accessor for IconDescriptor() + 20)];
  v16 = *MEMORY[0x24BE4E598];
  v17 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v15, v16, v17);
  *(_QWORD *)v14 = 0x7265776F70;
  *((_QWORD *)v14 + 1) = 0xE500000000000000;
  sub_23DF73E10((uint64_t)v14, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 0, 1, v13);
  return sub_23E122DDC((uint64_t)v6);
}

Swift::Void __swiftcall Device.ControlModule.setControls(enabled:)(Swift::Bool enabled)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int EnumCaseMultiPayload;
  _QWORD *v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  int64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  int v63;
  _QWORD *v64;
  _BOOL4 v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v66 = type metadata accessor for Device.Control(0);
  v54 = *(_QWORD *)(v66 - 8);
  v3 = MEMORY[0x24BDAC7A8](v66);
  v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)v49 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v51 = (uint64_t)v49 - v9;
  v10 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Device.ControlGroup(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v61 = (_QWORD *)((char *)v49 - v18);
  v19 = *(_QWORD *)(v1 + 16);
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
    v45 = MEMORY[0x24BEE4AF8];
    goto LABEL_27;
  }
  v50 = v1;
  v68 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v59 = v20;
  sub_23E09E1D8(0, v20, 0);
  v21 = 0;
  v22 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v49[1] = v19;
  v58 = v22;
  v57 = v19 + v22;
  v23 = *(_QWORD *)(v14 + 72);
  v65 = enabled;
  v24 = v23;
  v62 = v10;
  v25 = v12;
  v53 = v12;
  v55 = v17;
  v56 = v23;
  v26 = v61;
  do
  {
    sub_23DF73E10(v57 + v24 * v21, (uint64_t)v17, type metadata accessor for Device.ControlGroup);
    sub_23DF73E10((uint64_t)v17, (uint64_t)v26, type metadata accessor for Device.ControlGroup);
    v64 = v49;
    sub_23DF73E10((uint64_t)v26, (uint64_t)v25, type metadata accessor for Device.ControlGroup.LayoutType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v63 = EnumCaseMultiPayload;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1)
      {
        v28 = v25;
        v44 = v51;
        sub_23DF89384((uint64_t)v25, v51, type metadata accessor for Device.Control);
        *(_BYTE *)(v44 + *(int *)(v66 + 44)) = v65;
        sub_23DF73E54((uint64_t)v26, type metadata accessor for Device.ControlGroup.LayoutType);
        sub_23DF89384(v44, (uint64_t)v26, type metadata accessor for Device.Control);
        goto LABEL_20;
      }
      v60 = v21;
      v28 = v25;
      v29 = *v25;
      v30 = *(_QWORD *)(v29 + 16);
      if (!v30)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        v31 = MEMORY[0x24BEE4AF8];
        goto LABEL_19;
      }
      v67 = MEMORY[0x24BEE4AF8];
      sub_23E09E1AC(0, v30, 0);
      v31 = v67;
      v32 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      v52 = v29;
      v33 = v29 + v32;
      v34 = *(_QWORD *)(v54 + 72);
      do
      {
        sub_23DF73E10(v33, (uint64_t)v8, type metadata accessor for Device.Control);
        v8[*(int *)(v66 + 44)] = v65;
        v67 = v31;
        v36 = *(_QWORD *)(v31 + 16);
        v35 = *(_QWORD *)(v31 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_23E09E1AC(v35 > 1, v36 + 1, 1);
          v31 = v67;
        }
        *(_QWORD *)(v31 + 16) = v36 + 1;
        sub_23DF89384((uint64_t)v8, v31 + v32 + v36 * v34, type metadata accessor for Device.Control);
        v33 += v34;
        --v30;
      }
      while (v30);
    }
    else
    {
      v60 = v21;
      v28 = v25;
      v37 = *v25;
      v38 = *(_QWORD *)(v37 + 16);
      if (!v38)
        goto LABEL_18;
      v67 = MEMORY[0x24BEE4AF8];
      sub_23E09E1AC(0, v38, 0);
      v31 = v67;
      v39 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      v52 = v37;
      v40 = v37 + v39;
      v41 = *(_QWORD *)(v54 + 72);
      do
      {
        sub_23DF73E10(v40, (uint64_t)v5, type metadata accessor for Device.Control);
        v5[*(int *)(v66 + 44)] = v65;
        v67 = v31;
        v43 = *(_QWORD *)(v31 + 16);
        v42 = *(_QWORD *)(v31 + 24);
        if (v43 >= v42 >> 1)
        {
          sub_23E09E1AC(v42 > 1, v43 + 1, 1);
          v31 = v67;
        }
        *(_QWORD *)(v31 + 16) = v43 + 1;
        sub_23DF89384((uint64_t)v5, v31 + v39 + v43 * v41, type metadata accessor for Device.Control);
        v40 += v41;
        --v38;
      }
      while (v38);
    }
    swift_bridgeObjectRelease();
    v26 = v61;
    v28 = v53;
LABEL_19:
    sub_23DF73E54((uint64_t)v26, type metadata accessor for Device.ControlGroup.LayoutType);
    *v26 = v31;
    v17 = v55;
    v21 = v60;
LABEL_20:
    swift_storeEnumTagMultiPayload();
    sub_23DF73E54((uint64_t)v17, type metadata accessor for Device.ControlGroup);
    v45 = v68;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E09E1D8(0, *(_QWORD *)(v45 + 16) + 1, 1);
      v45 = v68;
    }
    v25 = v28;
    v47 = *(_QWORD *)(v45 + 16);
    v46 = *(_QWORD *)(v45 + 24);
    if (v47 >= v46 >> 1)
    {
      sub_23E09E1D8(v46 > 1, v47 + 1, 1);
      v45 = v68;
    }
    ++v21;
    *(_QWORD *)(v45 + 16) = v47 + 1;
    v24 = v56;
    v48 = v45 + v58 + v47 * v56;
    v26 = v61;
    sub_23DF89384((uint64_t)v61, v48, type metadata accessor for Device.ControlGroup);
  }
  while (v21 != v59);
  swift_bridgeObjectRelease();
  v1 = v50;
LABEL_27:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v45;
}

uint64_t Device.ControlModule.transformControls(transform:)(void (*a1)(uint64_t, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v5 = swift_bridgeObjectRetain();
  v6 = sub_23E09F938(v5, a1, a2);
  result = swift_bridgeObjectRelease_n();
  *(_QWORD *)(v2 + 16) = v6;
  return result;
}

uint64_t sub_23E09E140(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D21B38, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E16C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E09E484(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E09E188(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E09E9A0(a1, a2, a3, *v3, &qword_256D21370);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E09E1AC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D1D600, type metadata accessor for Device.Control);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E1D8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D20C58, type metadata accessor for Device.ControlGroup);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E204(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D24C30, (uint64_t (*)(_QWORD))MEMORY[0x24BE4D9B0]);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E230(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D21308, type metadata accessor for AccessoryControlInfo);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E25C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D213A8, (uint64_t (*)(_QWORD))MEMORY[0x24BE4E540]);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E288(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D1F350, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DCB8]);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E2B4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E09E828(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E09E2D0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09EC44(a1, a2, a3, (_QWORD *)*v3, &qword_256D24C18, &qword_256D24C20);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E2FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D24C28, type metadata accessor for DisplayControlGroup);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E328(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D1FD70, type metadata accessor for DisplayControl);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E354(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E09EAE8(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E09E370(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D1D528, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E39C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_23E09E9A0(a1, a2, a3, *v3, &qword_256D24C08);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_23E09E3C0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09EC44(a1, a2, a3, (_QWORD *)*v3, &qword_256D24BF8, &qword_256D1FAA8);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E3EC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D213A0, _s21ColorSwatchPickerViewV9CellValueOMa);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E418(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D213C0, type metadata accessor for AccessoryControlDecorationButton.Config);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E444(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_23E09E600(a1, a2, a3, (_QWORD *)*v3, &qword_256D24BF0, (uint64_t (*)(_QWORD))MEMORY[0x24BE4D520]);
  *v3 = result;
  return result;
}

uint64_t sub_23E09E470(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E09E600(a1, a2, a3, a4, &qword_256D21B38, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
}

uint64_t sub_23E09E484(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21358);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E09E5EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E09E600(a1, a2, a3, a4, &qword_256D20C58, type metadata accessor for Device.ControlGroup);
}

uint64_t sub_23E09E600(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E09E7E0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_23E09E9A0(a1, a2, a3, a4, &qword_256D21370);
}

uint64_t sub_23E09E7EC(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E09E600(a1, a2, a3, a4, &qword_256D21350, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DC28]);
}

uint64_t sub_23E09E800(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E09E600(a1, a2, a3, a4, &qword_256D1D528, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_23E09E814(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_23E09E600(a1, a2, a3, a4, &qword_256D24C10, (uint64_t (*)(_QWORD))MEMORY[0x24BE4DAA8]);
}

uint64_t sub_23E09E828(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F360);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E09E994(char a1, int64_t a2, char a3, char *a4)
{
  return sub_23E09E9A0(a1, a2, a3, a4, &qword_256D24C08);
}

uint64_t sub_23E09E9A0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[v9])
      memmove(v13, v14, v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E09EAE8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21368);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E09EC44(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v15 = v14 - 32;
    if (v14 < 32)
      v15 = v14 - 25;
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 3);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v16 = (unint64_t)(v13 + 4);
  v17 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v16 >= v17 + 8 * v11)
      memmove(v13 + 4, a4 + 4, 8 * v11);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 8 * v11 || v16 >= v17 + 8 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

uint64_t sub_23E09EDD0(unint64_t a1)
{
  return sub_23E0076E4(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23E09EDE4(unint64_t a1)
{
  return sub_23E007818(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23E09EDF8(unint64_t a1)
{
  return sub_23E007B80(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_23E09EE0C(_QWORD *a1)
{
  return sub_23E007CBC(0, a1[2], 0, a1);
}

uint64_t sub_23E09EE20(unint64_t a1)
{
  return sub_23E008028(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23E09EE34(unint64_t a1)
{
  return sub_23E00803C(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_23E09EE48(unint64_t a1)
{
  return sub_23E008078(0, *(_QWORD *)(a1 + 16), 0, a1);
}

_QWORD *sub_23E09EE5C(_QWORD *a1)
{
  return sub_23E007A38(0, a1[2], 0, a1);
}

uint64_t _s22HomeAccessoryControlUI6DeviceV0C6ModuleV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  char v12;
  uint64_t result;

  v3 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = a1[4];
  v7 = a2[1];
  v8 = a2[2];
  v10 = a2[3];
  v9 = a2[4];
  if (!v3)
  {
    if (v7)
      return 0;
    goto LABEL_10;
  }
  if (!v7)
    return 0;
  v11 = *a1 == *a2 && v3 == v7;
  if (v11 || (v12 = sub_23E137614(), result = 0, (v12 & 1) != 0))
  {
LABEL_10:
    if ((sub_23E11C2E0(v4, v8) & 1) != 0)
    {
      if (v6)
      {
        if (v9 && (v5 == v10 && v6 == v9 || (sub_23E137614() & 1) != 0))
          return 1;
      }
      else if (!v9)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s22HomeAccessoryControlUI6DeviceV0C5GroupV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  BOOL v18;

  if ((_s22HomeAccessoryControlUI6DeviceV0C5GroupV10LayoutTypeO2eeoiySbAG_AGtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for Device.ControlGroup(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (!v7)
  {
    if (v9)
      return 0;
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  v10 = *v6 == *v8 && v7 == v9;
  if (v10 || (v11 = sub_23E137614(), result = 0, (v11 & 1) != 0))
  {
LABEL_11:
    v13 = *(int *)(v4 + 24);
    v14 = (_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(a1 + v13 + 8);
    v16 = (_QWORD *)(a2 + v13);
    v17 = v16[1];
    if (v15)
    {
      if (v17)
      {
        v18 = *v14 == *v16 && v15 == v17;
        if (v18 || (sub_23E137614() & 1) != 0)
          return 1;
      }
    }
    else if (!v17)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s22HomeAccessoryControlUI6DeviceV0C5GroupV10LayoutTypeO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  char v23;
  uint64_t v25;

  v4 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (uint64_t *)((char *)&v25 - v12);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v25 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C00);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (uint64_t *)&v19[*(int *)(v17 + 48)];
  sub_23DF73E10(a1, (uint64_t)v19, type metadata accessor for Device.ControlGroup.LayoutType);
  sub_23DF73E10(a2, (uint64_t)v20, type metadata accessor for Device.ControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23DF73E10((uint64_t)v19, (uint64_t)v15, type metadata accessor for Device.ControlGroup.LayoutType);
    v22 = *v15;
    if (!swift_getEnumCaseMultiPayload())
      goto LABEL_4;
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_23DF73E10((uint64_t)v19, (uint64_t)v10, type metadata accessor for Device.ControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23DF89384((uint64_t)v20, (uint64_t)v6, type metadata accessor for Device.Control);
      v23 = static Device.Control.== infix(_:_:)(v10, v6);
      sub_23DF73E54((uint64_t)v6, type metadata accessor for Device.Control);
      sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control);
      goto LABEL_9;
    }
    sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control);
LABEL_11:
    sub_23DF89C7C((uint64_t)v19, &qword_256D24C00);
    v23 = 0;
    return v23 & 1;
  }
  sub_23DF73E10((uint64_t)v19, (uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
  v22 = *v13;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
LABEL_4:
  v23 = sub_23E11D080(v22, *v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_9:
  sub_23DF73E54((uint64_t)v19, type metadata accessor for Device.ControlGroup.LayoutType);
  return v23 & 1;
}

uint64_t _s22HomeAccessoryControlUI6DeviceV0C6ModuleV18controlsDictionary4withSDy10Foundation4UUIDVAC0C0VGSayAEG_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t (*v34)(uint64_t);
  uint64_t (*v35)(uint64_t);
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t (*v37)(uint64_t);
  int isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  uint64_t result;
  _QWORD *v53;
  char *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;

  v2 = sub_23E134C80();
  v57 = *(_QWORD *)(v2 - 8);
  v58 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device.Control(0);
  v59 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v60 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v56 = (uint64_t)&v53 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v53 - v10;
  v12 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)((char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v61 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(a1 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    v17 = 48;
    do
    {
      v18 = swift_bridgeObjectRetain();
      sub_23DF83F90(v18);
      v17 += 40;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    v19 = v61;
  }
  else
  {
    v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v61 = v15;
  v20 = v19[2];
  if (v20)
  {
    v54 = v4;
    v21 = *(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8);
    v22 = (uint64_t)v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    v23 = *(_QWORD *)(v21 + 72);
    v53 = v19;
    swift_bridgeObjectRetain();
    v55 = xmmword_23E138050;
    do
    {
      sub_23DF73E10(v22, (uint64_t)v14, type metadata accessor for Device.ControlGroup.LayoutType);
      if (swift_getEnumCaseMultiPayload() < 2)
      {
        v24 = *v14;
      }
      else
      {
        sub_23DF89384((uint64_t)v14, (uint64_t)v11, type metadata accessor for Device.Control);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
        v25 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v55;
        sub_23DF89384((uint64_t)v11, v24 + v25, type metadata accessor for Device.Control);
      }
      sub_23DF84100(v24);
      v22 += v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease_n();
    v26 = v61;
    v4 = v54;
  }
  else
  {
    swift_bridgeObjectRelease();
    v26 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v27 = v26[2];
  v29 = v57;
  v28 = v58;
  v30 = v56;
  if (!v27)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4B00];
  }
  v31 = (uint64_t)v26 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
  v32 = *(_QWORD *)(v59 + 72);
  *(_QWORD *)&v55 = v26;
  swift_bridgeObjectRetain();
  v33 = (_QWORD *)MEMORY[0x24BEE4B00];
  v34 = type metadata accessor for Device.Control;
  while (1)
  {
    v59 = v27;
    sub_23DF73E10(v31, v30, v34);
    v35 = v34;
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
    v36(v4, v30, v28);
    v37 = v35;
    sub_23DF73E10(v30, v60, v35);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v61 = v33;
    v39 = (uint64_t)v4;
    v41 = sub_23DF84CA8((uint64_t)v4);
    v42 = v33[2];
    v43 = (v40 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
      break;
    v45 = v40;
    if (v33[3] >= v44)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v48 = v61;
        if ((v40 & 1) != 0)
          goto LABEL_16;
      }
      else
      {
        sub_23E0F1BF0();
        v48 = v61;
        if ((v45 & 1) != 0)
          goto LABEL_16;
      }
    }
    else
    {
      sub_23E0F07F4(v44, isUniquelyReferenced_nonNull_native);
      v46 = sub_23DF84CA8(v39);
      if ((v45 & 1) != (v47 & 1))
        goto LABEL_34;
      v41 = v46;
      v48 = v61;
      if ((v45 & 1) != 0)
      {
LABEL_16:
        v34 = v37;
        sub_23E0A5A14(v60, v48[7] + v41 * v32, v37);
        v29 = v57;
        v28 = v58;
        goto LABEL_17;
      }
    }
    v48[(v41 >> 6) + 8] |= 1 << v41;
    v29 = v57;
    v28 = v58;
    v36((char *)(v48[6] + *(_QWORD *)(v57 + 72) * v41), v39, v58);
    v34 = v37;
    sub_23DF89384(v60, v48[7] + v41 * v32, v37);
    v49 = v48[2];
    v50 = __OFADD__(v49, 1);
    v51 = v49 + 1;
    if (v50)
      goto LABEL_33;
    v48[2] = v51;
    v48 = v61;
LABEL_17:
    swift_bridgeObjectRelease();
    v4 = (char *)v39;
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v39, v28);
    v30 = v56;
    sub_23DF73E54(v56, v34);
    swift_bridgeObjectRelease();
    v31 += v32;
    v33 = v48;
    v27 = v59 - 1;
    if (v59 == 1)
    {
      swift_bridgeObjectRelease_n();
      return (uint64_t)v48;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  result = sub_23E137638();
  __break(1u);
  return result;
}

uint64_t sub_23E09F758(uint64_t a1, void (*a2)(char *), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  unint64_t v17;
  void (*v18)(char *);
  uint64_t v19;
  uint64_t v20;

  v18 = a2;
  v19 = a3;
  v5 = type metadata accessor for Device.Control(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v16 = v3;
    v20 = MEMORY[0x24BEE4AF8];
    sub_23E09E1AC(0, v9, 0);
    v10 = v20;
    v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    v11 = a1 + v17;
    v12 = *(_QWORD *)(v6 + 72);
    do
    {
      sub_23DF73E10(v11, (uint64_t)v8, type metadata accessor for Device.Control);
      v18(v8);
      v20 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_23E09E1AC(v13 > 1, v14 + 1, 1);
        v10 = v20;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_23DF89384((uint64_t)v8, v10 + v17 + v14 * v12, type metadata accessor for Device.Control);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

unint64_t sub_23E09F8B0()
{
  unint64_t result;

  result = qword_256D24A88;
  if (!qword_256D24A88)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.ControlModule.Errors, &type metadata for Device.ControlModule.Errors);
    atomic_store(result, (unint64_t *)&qword_256D24A88);
  }
  return result;
}

uint64_t sub_23E09F8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Device.Control(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E09F938(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int EnumCaseMultiPayload;
  uint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  char *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  int64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v64 = a2;
  v65 = a3;
  v5 = type metadata accessor for Device.Control(0);
  v53 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v47 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v50 = (uint64_t)&v47 - v11;
  v61 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v61);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Device.ControlGroup(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v54 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(a1 + 16);
  v18 = MEMORY[0x24BEE4AF8];
  if (v17)
  {
    v47 = v3;
    v68 = MEMORY[0x24BEE4AF8];
    v59 = v17;
    sub_23E09E1D8(0, v17, 0);
    v19 = 0;
    v58 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v20 = a1 + v58;
    v21 = *(_QWORD *)(v15 + 72);
    v52 = v13;
    v22 = v54;
    v56 = v21;
    v57 = v20;
    v48 = v8;
    while (1)
    {
      v66 = v57 + v21 * v19;
      sub_23DF73E10(v66, (uint64_t)v22, type metadata accessor for Device.ControlGroup);
      sub_23DF73E10((uint64_t)v22, (uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v62 = v19;
      if (!EnumCaseMultiPayload)
        break;
      if (EnumCaseMultiPayload == 1)
      {
        v60 = &v47;
        v24 = *(_QWORD *)v13;
        v25 = *(_QWORD *)(*(_QWORD *)v13 + 16);
        if (v25)
        {
          v55 = 1;
          v67 = v18;
          sub_23E09E1AC(0, v25, 0);
          v18 = v67;
          v26 = *(unsigned __int8 *)(v53 + 80);
          v51 = v24;
          v63 = (v26 + 32) & ~v26;
          v27 = v24 + v63;
          v28 = *(_QWORD *)(v53 + 72);
          v29 = (uint64_t)v49;
          do
          {
            sub_23DF73E10(v27, v29, type metadata accessor for Device.Control);
            v64(v29, v66);
            v67 = v18;
            v31 = *(_QWORD *)(v18 + 16);
            v30 = *(_QWORD *)(v18 + 24);
            if (v31 >= v30 >> 1)
            {
              sub_23E09E1AC(v30 > 1, v31 + 1, 1);
              v18 = v67;
            }
            *(_QWORD *)(v18 + 16) = v31 + 1;
            sub_23DF89384(v29, v18 + v63 + v31 * v28, type metadata accessor for Device.Control);
            v27 += v28;
            --v25;
          }
          while (v25);
          swift_bridgeObjectRelease();
          v8 = v48;
          goto LABEL_19;
        }
LABEL_18:
        v40 = v13;
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      v40 = v13;
      v41 = v50;
      sub_23DF89384((uint64_t)v13, v50, type metadata accessor for Device.Control);
      v64(v41, v66);
      v19 = v62;
      sub_23DF73E54((uint64_t)v22, type metadata accessor for Device.ControlGroup.LayoutType);
      sub_23DF89384(v41, (uint64_t)v22, type metadata accessor for Device.Control);
LABEL_21:
      swift_storeEnumTagMultiPayload();
      v42 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E1D8(0, *(_QWORD *)(v42 + 16) + 1, 1);
        v19 = v62;
        v42 = v68;
      }
      v13 = v40;
      v44 = *(_QWORD *)(v42 + 16);
      v43 = *(_QWORD *)(v42 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_23E09E1D8(v43 > 1, v44 + 1, 1);
        v19 = v62;
        v42 = v68;
      }
      ++v19;
      *(_QWORD *)(v42 + 16) = v44 + 1;
      v45 = v42 + v58 + v44 * v56;
      v21 = v56;
      sub_23DF89384((uint64_t)v22, v45, type metadata accessor for Device.ControlGroup);
      if (v19 == v59)
        return v42;
    }
    v60 = &v47;
    v32 = *(_QWORD *)v13;
    v33 = *(_QWORD *)(*(_QWORD *)v13 + 16);
    if (!v33)
      goto LABEL_18;
    v55 = 0;
    v67 = v18;
    sub_23E09E1AC(0, v33, 0);
    v18 = v67;
    v34 = *(unsigned __int8 *)(v53 + 80);
    v51 = v32;
    v63 = (v34 + 32) & ~v34;
    v35 = v32 + v63;
    v36 = *(_QWORD *)(v53 + 72);
    do
    {
      sub_23DF73E10(v35, (uint64_t)v8, type metadata accessor for Device.Control);
      v64((uint64_t)v8, v66);
      v67 = v18;
      v37 = (uint64_t)v8;
      v39 = *(_QWORD *)(v18 + 16);
      v38 = *(_QWORD *)(v18 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_23E09E1AC(v38 > 1, v39 + 1, 1);
        v18 = v67;
      }
      *(_QWORD *)(v18 + 16) = v39 + 1;
      sub_23DF89384(v37, v18 + v63 + v39 * v36, type metadata accessor for Device.Control);
      v35 += v36;
      --v33;
      v8 = (char *)v37;
    }
    while (v33);
    swift_bridgeObjectRelease();
LABEL_19:
    v40 = v52;
    v22 = v54;
    v19 = v62;
LABEL_20:
    sub_23DF73E54((uint64_t)v22, type metadata accessor for Device.ControlGroup.LayoutType);
    *v22 = v18;
    v18 = MEMORY[0x24BEE4AF8];
    goto LABEL_21;
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E09FE68()
{
  return sub_23DF73F28(&qword_256D24A90, type metadata accessor for Device.ControlGroup.LayoutType, (uint64_t)&protocol conformance descriptor for Device.ControlGroup.LayoutType);
}

uint64_t sub_23E09FE94()
{
  return sub_23DF73F28(&qword_256D24A98, type metadata accessor for Device.ControlGroup, (uint64_t)&protocol conformance descriptor for Device.ControlGroup);
}

unint64_t sub_23E09FEC4()
{
  unint64_t result;

  result = qword_256D24AA0;
  if (!qword_256D24AA0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.ControlModule, &type metadata for Device.ControlModule);
    atomic_store(result, (unint64_t *)&qword_256D24AA0);
  }
  return result;
}

unint64_t sub_23E09FF0C()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D24518;
  if (!qword_256D24518)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256D24520);
    v2 = sub_23E058F54();
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12A8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D24518);
  }
  return result;
}

unint64_t sub_23E09FF74()
{
  unint64_t result;

  result = qword_256D24AA8;
  if (!qword_256D24AA8)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.ControlModule.Errors, &type metadata for Device.ControlModule.Errors);
    atomic_store(result, (unint64_t *)&qword_256D24AA8);
  }
  return result;
}

uint64_t sub_23E09FFBC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return Device.ControlGroup.controls.setter(v0);
}

_QWORD *_s12ControlGroupVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  void (*v109)(char *, _BYTE *, uint64_t);
  char *v110;
  char *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  int *v116;
  int *v117;
  int *v118;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_23E134C80();
      v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      v10 = (int *)type metadata accessor for Device.Control(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v116 = v10;
          *v12 = *v13;
          v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v16 = &v12[v15];
          v17 = &v13[v15];
          v18 = *(_QWORD *)&v13[v15];
          v19 = *((_QWORD *)v17 + 1);
          *v16 = v18;
          v16[1] = v19;
          v20 = type metadata accessor for IconDescriptor();
          v21 = *(int *)(v20 + 20);
          v22 = (char *)v16 + v21;
          v110 = &v17[v21];
          v113 = v20;
          v23 = sub_23E135910();
          v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v22, v110, v23);
          v25 = v24;
          v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v27 = (_QWORD *)((char *)v16 + v26);
          v28 = &v17[v26];
          v29 = v28[1];
          *v27 = *v28;
          v27[1] = v29;
          v30 = *(int *)(v113 + 20);
          v31 = (char *)v27 + v30;
          v32 = (char *)v28 + v30;
          swift_bridgeObjectRetain();
          v25(v31, v32, v23);
          v33 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v16 + *(int *)(v33 + 20)) = *(_QWORD *)&v17[*(int *)(v33 + 20)];
          v34 = *(int *)(v33 + 24);
          v35 = (_QWORD *)((char *)v16 + v34);
          v36 = &v17[v34];
          v37 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            v78 = v36[1];
            *v35 = *v36;
            v35[1] = v78;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            *v35 = *v36;
            v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v40 = (char *)v35 + v39;
            v41 = (char *)v36 + v39;
            v42 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
            swift_storeEnumTagMultiPayload();
          }
          v10 = v116;
          goto LABEL_27;
        case 1u:
          v43 = type metadata accessor for Device.Control.IncrementalState(0);
          v44 = *(_QWORD *)(v43 - 8);
          v117 = v10;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48))(v13, 1, v43))
          {
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            v50 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v12, v13, v50);
            v12[*(int *)(v43 + 20)] = v13[*(int *)(v43 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v12, 0, 1, v43);
          }
          v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v52 = &v12[v51];
          v53 = &v13[v51];
          v54 = *(_QWORD *)&v13[v51 + 8];
          *v52 = *(_QWORD *)&v13[v51];
          v52[1] = v54;
          v55 = type metadata accessor for IconDescriptor();
          v56 = *(int *)(v55 + 20);
          v111 = (char *)v52 + v56;
          v114 = v55;
          v57 = &v53[v56];
          v58 = sub_23E135910();
          v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v59(v111, v57, v58);
          v60 = v59;
          v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v62 = (_QWORD *)((char *)v52 + v61);
          v63 = &v53[v61];
          v64 = v63[1];
          *v62 = *v63;
          v62[1] = v64;
          v65 = *(int *)(v114 + 20);
          v66 = (char *)v62 + v65;
          v67 = (char *)v63 + v65;
          swift_bridgeObjectRetain();
          v60(v66, v67, v58);
          v68 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v52 + v68[5]) = *(_QWORD *)&v53[v68[5]];
          *(_QWORD *)((char *)v52 + v68[6]) = *(_QWORD *)&v53[v68[6]];
          v69 = v68[7];
          v112 = &v53[v69];
          v115 = (char *)v52 + v69;
          v70 = sub_23E135520();
          v109 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
          swift_retain();
          swift_retain();
          v109(v115, v112, v70);
          *(_QWORD *)((char *)v52 + v68[8]) = *(_QWORD *)&v53[v68[8]];
          *(_QWORD *)((char *)v52 + v68[9]) = *(_QWORD *)&v53[v68[9]];
          *(_QWORD *)((char *)v52 + v68[10]) = *(_QWORD *)&v53[v68[10]];
          v71 = v68[11];
          v72 = (char *)v52 + v71;
          v73 = &v53[v71];
          v72[8] = v73[8];
          *(_QWORD *)v72 = *(_QWORD *)v73;
          swift_storeEnumTagMultiPayload();
          v10 = v117;
          break;
        case 2u:
          *(_QWORD *)v12 = *(_QWORD *)v13;
          v12[8] = v13[8];
          *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
          v12[24] = v13[24];
          swift_bridgeObjectRetain();
          goto LABEL_27;
        case 3u:
          v46 = type metadata accessor for Device.Control.ColorState(0);
          v47 = *(_QWORD *)(v46 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48))(v13, 1, v46))
          {
            v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            v118 = v10;
            v74 = v12;
            v75 = sub_23E135328();
            v76 = *(_QWORD *)(v75 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v76 + 48))(v13, 1, v75))
            {
              v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v12 = v74;
              memcpy(v74, v13, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 16))(v74, v13, v75);
              v79 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v76 + 56);
              v12 = v74;
              v79(v74, 0, 1, v75);
            }
            v80 = *(int *)(v46 + 20);
            v81 = &v12[v80];
            v82 = &v13[v80];
            *(_QWORD *)v81 = *(_QWORD *)v82;
            v81[8] = v82[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v12, 0, 1, v46);
            v10 = v118;
          }
          v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v84 = &v12[v83];
          v85 = &v13[v83];
          *(_QWORD *)v84 = *(_QWORD *)v85;
          *(_DWORD *)(v84 + 7) = *(_DWORD *)(v85 + 7);
          goto LABEL_27;
        case 4u:
          v49 = *((_QWORD *)v13 + 1);
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *((_QWORD *)v12 + 1) = v49;
          v12[16] = v13[16];
          swift_bridgeObjectRetain();
          goto LABEL_27;
        case 6u:
          v9(v12, v13, v8);
LABEL_27:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          break;
      }
      v86 = v10[6];
      v87 = (_QWORD *)((char *)a1 + v86);
      v88 = (_QWORD *)((char *)a2 + v86);
      v89 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v90 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v87, v88, v90);
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v87 + *(int *)(v91 + 48)) = *(_QWORD *)((char *)v88 + *(int *)(v91 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 1u:
          *v87 = *v88;
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 2u:
          *v87 = *v88;
          swift_bridgeObjectRetain();
          v92 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v93 = (char *)v87 + v92;
          v94 = (char *)v88 + v92;
          v95 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v93, v94, v95);
          goto LABEL_34;
        case 3u:
        case 4u:
        case 5u:
          *v87 = *v88;
          swift_retain();
LABEL_34:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + v10[7]) = *((_BYTE *)a2 + v10[7]);
      v96 = v10[8];
      v97 = (_QWORD *)((char *)a1 + v96);
      v98 = (_QWORD *)((char *)a2 + v96);
      v99 = v98[1];
      *v97 = *v98;
      v97[1] = v99;
      *(_WORD *)((char *)a1 + v10[9]) = *(_WORD *)((char *)a2 + v10[9]);
      *((_BYTE *)a1 + v10[10]) = *((_BYTE *)a2 + v10[10]);
      *((_BYTE *)a1 + v10[11]) = *((_BYTE *)a2 + v10[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v100 = *(int *)(a3 + 20);
    v101 = *(int *)(a3 + 24);
    v102 = (_QWORD *)((char *)a1 + v100);
    v103 = (_QWORD *)((char *)a2 + v100);
    v104 = v103[1];
    *v102 = *v103;
    v102[1] = v104;
    v105 = (_QWORD *)((char *)a1 + v101);
    v106 = (_QWORD *)((char *)a2 + v101);
    v107 = v106[1];
    *v105 = *v106;
    v105[1] = v107;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s12ControlGroupVwxx(uint64_t a1)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  type metadata accessor for Device.ControlGroup.LayoutType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload < 2)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (EnumCaseMultiPayload == 2)
  {
    v3 = sub_23E134C80();
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v5 = type metadata accessor for Device.Control(0);
    v6 = a1 + *(int *)(v5 + 20);
    type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        swift_bridgeObjectRelease();
        v8 = type metadata accessor for IconDescriptor();
        v9 = v7 + *(int *)(v8 + 20);
        v10 = sub_23E135910();
        v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
        v11(v9, v10);
        v12 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v11(v12 + *(int *)(v8 + 20), v10);
        v13 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        swift_release();
        v14 = v7 + *(int *)(v13 + 24);
        type metadata accessor for ControlTextModifier.Config(0);
        v15 = swift_getEnumCaseMultiPayload();
        if (v15 == 1)
          goto LABEL_12;
        if (!v15)
        {
          v16 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v17 = sub_23E134C20();
          goto LABEL_11;
        }
        break;
      case 1u:
        v18 = type metadata accessor for Device.Control.IncrementalState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v6, 1, v18))
        {
          v19 = sub_23E13534C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
        }
        v20 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        swift_bridgeObjectRelease();
        v21 = type metadata accessor for IconDescriptor();
        v22 = v20 + *(int *)(v21 + 20);
        v23 = sub_23E135910();
        v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
        v24(v22, v23);
        v25 = v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v24(v25 + *(int *)(v21 + 20), v23);
        v26 = type metadata accessor for Device.Control.IncrementalConfig(0);
        swift_release();
        swift_release();
        v16 = v20 + *(int *)(v26 + 28);
        v17 = sub_23E135520();
LABEL_11:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        break;
      case 2u:
      case 4u:
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        v27 = type metadata accessor for Device.Control.ColorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v6, 1, v27))
        {
          v28 = sub_23E135328();
          v29 = *(_QWORD *)(v28 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v6, 1, v28))
            (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v6, v28);
        }
        break;
      case 6u:
        v4(v6, v3);
        break;
      default:
        break;
    }
    v30 = a1 + *(int *)(v5 + 24);
    type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v31 = sub_23E1356DC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        v32 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v33 = sub_23E134E9C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_release();
        break;
      default:
        goto LABEL_22;
    }
    goto LABEL_22;
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s12ControlGroupVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  _QWORD *v103;
  _QWORD *v104;
  uint64_t v105;
  void (*v107)(char *, _BYTE *, uint64_t);
  char *v108;
  char *v109;
  _BYTE *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  int *v114;
  int *v115;
  int *v116;

  type metadata accessor for Device.ControlGroup.LayoutType(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_23E134C80();
    v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = (int *)type metadata accessor for Device.Control(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v114 = v8;
        *v10 = *v11;
        v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v14 = &v10[v13];
        v15 = &v11[v13];
        v16 = *(_QWORD *)&v11[v13];
        v17 = *((_QWORD *)v15 + 1);
        *v14 = v16;
        v14[1] = v17;
        v18 = type metadata accessor for IconDescriptor();
        v19 = *(int *)(v18 + 20);
        v20 = (char *)v14 + v19;
        v108 = &v15[v19];
        v111 = v18;
        v21 = sub_23E135910();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v20, v108, v21);
        v23 = v22;
        v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v25 = (_QWORD *)((char *)v14 + v24);
        v26 = &v15[v24];
        v27 = v26[1];
        *v25 = *v26;
        v25[1] = v27;
        v28 = *(int *)(v111 + 20);
        v29 = (char *)v25 + v28;
        v30 = (char *)v26 + v28;
        swift_bridgeObjectRetain();
        v23(v29, v30, v21);
        v31 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v14 + *(int *)(v31 + 20)) = *(_QWORD *)&v15[*(int *)(v31 + 20)];
        v32 = *(int *)(v31 + 24);
        v33 = (_QWORD *)((char *)v14 + v32);
        v34 = &v15[v32];
        v35 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v76 = v34[1];
          *v33 = *v34;
          v33[1] = v76;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          *v33 = *v34;
          v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v38 = (char *)v33 + v37;
          v39 = (char *)v34 + v37;
          v40 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
          swift_storeEnumTagMultiPayload();
        }
        v8 = v114;
        goto LABEL_25;
      case 1u:
        v41 = type metadata accessor for Device.Control.IncrementalState(0);
        v42 = *(_QWORD *)(v41 - 8);
        v115 = v8;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v11, 1, v41))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          v48 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v10, v11, v48);
          v10[*(int *)(v41 + 20)] = v11[*(int *)(v41 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v10, 0, 1, v41);
        }
        v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v50 = &v10[v49];
        v51 = &v11[v49];
        v52 = *(_QWORD *)&v11[v49 + 8];
        *v50 = *(_QWORD *)&v11[v49];
        v50[1] = v52;
        v53 = type metadata accessor for IconDescriptor();
        v54 = *(int *)(v53 + 20);
        v109 = (char *)v50 + v54;
        v112 = v53;
        v55 = &v51[v54];
        v56 = sub_23E135910();
        v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v109, v55, v56);
        v58 = v57;
        v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v60 = (_QWORD *)((char *)v50 + v59);
        v61 = &v51[v59];
        v62 = v61[1];
        *v60 = *v61;
        v60[1] = v62;
        v63 = *(int *)(v112 + 20);
        v64 = (char *)v60 + v63;
        v65 = (char *)v61 + v63;
        swift_bridgeObjectRetain();
        v58(v64, v65, v56);
        v66 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v50 + v66[5]) = *(_QWORD *)&v51[v66[5]];
        *(_QWORD *)((char *)v50 + v66[6]) = *(_QWORD *)&v51[v66[6]];
        v67 = v66[7];
        v110 = &v51[v67];
        v113 = (char *)v50 + v67;
        v68 = sub_23E135520();
        v107 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
        swift_retain();
        swift_retain();
        v107(v113, v110, v68);
        *(_QWORD *)((char *)v50 + v66[8]) = *(_QWORD *)&v51[v66[8]];
        *(_QWORD *)((char *)v50 + v66[9]) = *(_QWORD *)&v51[v66[9]];
        *(_QWORD *)((char *)v50 + v66[10]) = *(_QWORD *)&v51[v66[10]];
        v69 = v66[11];
        v70 = (char *)v50 + v69;
        v71 = &v51[v69];
        v70[8] = v71[8];
        *(_QWORD *)v70 = *(_QWORD *)v71;
        swift_storeEnumTagMultiPayload();
        v8 = v115;
        break;
      case 2u:
        *(_QWORD *)v10 = *(_QWORD *)v11;
        v10[8] = v11[8];
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        v10[24] = v11[24];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 3u:
        v44 = type metadata accessor for Device.Control.ColorState(0);
        v45 = *(_QWORD *)(v44 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v45 + 48))(v11, 1, v44))
        {
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          v116 = v8;
          v72 = v10;
          v73 = sub_23E135328();
          v74 = *(_QWORD *)(v73 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v74 + 48))(v11, 1, v73))
          {
            v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            v10 = v72;
            memcpy(v72, v11, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v74 + 16))(v72, v11, v73);
            v77 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v74 + 56);
            v10 = v72;
            v77(v72, 0, 1, v73);
          }
          v78 = *(int *)(v44 + 20);
          v79 = &v10[v78];
          v80 = &v11[v78];
          *(_QWORD *)v79 = *(_QWORD *)v80;
          v79[8] = v80[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v10, 0, 1, v44);
          v8 = v116;
        }
        v81 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v82 = &v10[v81];
        v83 = &v11[v81];
        *(_QWORD *)v82 = *(_QWORD *)v83;
        *(_DWORD *)(v82 + 7) = *(_DWORD *)(v83 + 7);
        goto LABEL_25;
      case 4u:
        v47 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v47;
        v10[16] = v11[16];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 6u:
        v7(v10, v11, v6);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v84 = v8[6];
    v85 = (_QWORD *)((char *)a1 + v84);
    v86 = (_QWORD *)((char *)a2 + v84);
    v87 = type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v88 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v85, v86, v88);
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v85 + *(int *)(v89 + 48)) = *(_QWORD *)((char *)v86 + *(int *)(v89 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 1u:
        *v85 = *v86;
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 2u:
        *v85 = *v86;
        swift_bridgeObjectRetain();
        v90 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v91 = (char *)v85 + v90;
        v92 = (char *)v86 + v90;
        v93 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
        goto LABEL_32;
      case 3u:
      case 4u:
      case 5u:
        *v85 = *v86;
        swift_retain();
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        break;
    }
    *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    v94 = v8[8];
    v95 = (_QWORD *)((char *)a1 + v94);
    v96 = (_QWORD *)((char *)a2 + v94);
    v97 = v96[1];
    *v95 = *v96;
    v95[1] = v97;
    *(_WORD *)((char *)a1 + v8[9]) = *(_WORD *)((char *)a2 + v8[9]);
    *((_BYTE *)a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
    *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v98 = *(int *)(a3 + 20);
  v99 = *(int *)(a3 + 24);
  v100 = (_QWORD *)((char *)a1 + v98);
  v101 = (_QWORD *)((char *)a2 + v98);
  v102 = v101[1];
  *v100 = *v101;
  v100[1] = v102;
  v103 = (_QWORD *)((char *)a1 + v99);
  v104 = (_QWORD *)((char *)a2 + v99);
  v105 = v104[1];
  *v103 = *v104;
  v103[1] = v105;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s12ControlGroupVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, char *, uint64_t);
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  char *v60;
  int *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _BYTE *v66;
  char v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  int v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  _QWORD *v96;
  uint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  void (*v101)(char *, _BYTE *, uint64_t);
  char *v102;
  char *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  int *v108;
  int *v109;
  int *v110;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for Device.ControlGroup.LayoutType);
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_23E134C80();
      v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for Device.Control(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v108 = v8;
          *v10 = *v11;
          v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v14 = &v10[v13];
          v15 = &v11[v13];
          *v14 = *(_QWORD *)&v11[v13];
          v14[1] = *(_QWORD *)&v11[v13 + 8];
          v16 = type metadata accessor for IconDescriptor();
          v17 = *(int *)(v16 + 20);
          v18 = (char *)v14 + v17;
          v102 = &v15[v17];
          v105 = v16;
          v19 = sub_23E135910();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v18, v102, v19);
          v21 = v20;
          v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v23 = (_QWORD *)((char *)v14 + v22);
          v24 = &v15[v22];
          *v23 = *v24;
          v23[1] = v24[1];
          v25 = *(int *)(v105 + 20);
          v26 = (char *)v23 + v25;
          v27 = (char *)v24 + v25;
          swift_bridgeObjectRetain();
          v21(v26, v27, v19);
          v28 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v14 + *(int *)(v28 + 20)) = *(_QWORD *)&v15[*(int *)(v28 + 20)];
          v29 = *(int *)(v28 + 24);
          v30 = (_QWORD *)((char *)v14 + v29);
          v31 = &v15[v29];
          v32 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            *v30 = *v31;
            v30[1] = v31[1];
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            *v30 = *v31;
            v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v35 = (char *)v30 + v34;
            v36 = (char *)v31 + v34;
            v37 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
            swift_storeEnumTagMultiPayload();
          }
          v8 = v108;
          goto LABEL_26;
        case 1u:
          v38 = type metadata accessor for Device.Control.IncrementalState(0);
          v39 = *(_QWORD *)(v38 - 8);
          v109 = v8;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48))(v11, 1, v38))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            v45 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v10, v11, v45);
            v10[*(int *)(v38 + 20)] = v11[*(int *)(v38 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v10, 0, 1, v38);
          }
          v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v47 = &v10[v46];
          v48 = &v11[v46];
          *v47 = *(_QWORD *)&v11[v46];
          v47[1] = *(_QWORD *)&v11[v46 + 8];
          v49 = type metadata accessor for IconDescriptor();
          v50 = *(int *)(v49 + 20);
          v103 = (char *)v47 + v50;
          v106 = v49;
          v51 = &v48[v50];
          v52 = sub_23E135910();
          v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
          swift_bridgeObjectRetain();
          v53(v103, v51, v52);
          v54 = v53;
          v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v56 = (_QWORD *)((char *)v47 + v55);
          v57 = &v48[v55];
          *v56 = *v57;
          v56[1] = v57[1];
          v58 = *(int *)(v106 + 20);
          v59 = (char *)v56 + v58;
          v60 = (char *)v57 + v58;
          swift_bridgeObjectRetain();
          v54(v59, v60, v52);
          v61 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v47 + v61[5]) = *(_QWORD *)&v48[v61[5]];
          *(_QWORD *)((char *)v47 + v61[6]) = *(_QWORD *)&v48[v61[6]];
          v62 = v61[7];
          v104 = &v48[v62];
          v107 = (char *)v47 + v62;
          v63 = sub_23E135520();
          v101 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v63 - 8) + 16);
          swift_retain();
          swift_retain();
          v101(v107, v104, v63);
          *(_QWORD *)((char *)v47 + v61[8]) = *(_QWORD *)&v48[v61[8]];
          *(_QWORD *)((char *)v47 + v61[9]) = *(_QWORD *)&v48[v61[9]];
          *(_QWORD *)((char *)v47 + v61[10]) = *(_QWORD *)&v48[v61[10]];
          v64 = v61[11];
          v65 = (char *)v47 + v64;
          v66 = &v48[v64];
          v67 = v66[8];
          *(_QWORD *)v65 = *(_QWORD *)v66;
          v65[8] = v67;
          swift_storeEnumTagMultiPayload();
          v8 = v109;
          break;
        case 2u:
          v41 = *(_QWORD *)v11;
          v10[8] = v11[8];
          *(_QWORD *)v10 = v41;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
          v10[24] = v11[24];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 3u:
          v42 = type metadata accessor for Device.Control.ColorState(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v43 + 48))(v11, 1, v42))
          {
            v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            v110 = v8;
            v68 = v10;
            v69 = sub_23E135328();
            v70 = *(_QWORD *)(v69 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v70 + 48))(v11, 1, v69))
            {
              v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v10 = v68;
              memcpy(v68, v11, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v70 + 16))(v68, v11, v69);
              v72 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v70 + 56);
              v10 = v68;
              v72(v68, 0, 1, v69);
            }
            v73 = *(int *)(v42 + 20);
            v74 = &v10[v73];
            v75 = &v11[v73];
            v76 = *(_QWORD *)v75;
            v74[8] = v75[8];
            *(_QWORD *)v74 = v76;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v10, 0, 1, v42);
            v8 = v110;
          }
          v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v78 = &v10[v77];
          v79 = &v11[v77];
          v80 = *(_DWORD *)(v79 + 7);
          *(_QWORD *)v78 = *(_QWORD *)v79;
          *(_DWORD *)(v78 + 7) = v80;
          goto LABEL_26;
        case 4u:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
          v10[16] = v11[16];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 6u:
          v7(v10, v11, v6);
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v81 = v8[6];
      v82 = (_QWORD *)((char *)a1 + v81);
      v83 = (_QWORD *)((char *)a2 + v81);
      v84 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v85 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v82, v83, v85);
          v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v82 + *(int *)(v86 + 48)) = *(_QWORD *)((char *)v83 + *(int *)(v86 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 1u:
          *v82 = *v83;
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 2u:
          *v82 = *v83;
          swift_bridgeObjectRetain();
          v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v88 = (char *)v82 + v87;
          v89 = (char *)v83 + v87;
          v90 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
          goto LABEL_33;
        case 3u:
        case 4u:
        case 5u:
          *v82 = *v83;
          swift_retain();
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
      v91 = v8[8];
      v92 = (_QWORD *)((char *)a1 + v91);
      v93 = (_QWORD *)((char *)a2 + v91);
      *v92 = *v93;
      v92[1] = v93[1];
      *(_WORD *)((char *)a1 + v8[9]) = *(_WORD *)((char *)a2 + v8[9]);
      *((_BYTE *)a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
      *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v94 = *(int *)(a3 + 20);
  v95 = (_QWORD *)((char *)a1 + v94);
  v96 = (_QWORD *)((char *)a2 + v94);
  *v95 = *v96;
  v95[1] = v96[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97 = *(int *)(a3 + 24);
  v98 = (_QWORD *)((char *)a1 + v97);
  v99 = (_QWORD *)((char *)a2 + v97);
  *v98 = *v99;
  v98[1] = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *_s12ControlGroupVwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(char *, _BYTE *, uint64_t);
  uint64_t v23;
  char *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(char *, _BYTE *, uint64_t);
  uint64_t v51;
  char *v52;
  _OWORD *v53;
  int *v54;
  uint64_t v55;
  char *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  uint64_t v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  int EnumCaseMultiPayload;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v86;

  v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23E134C80();
    v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Device.Control(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v86 = a3;
        *v11 = *v12;
        v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v15 = &v11[v14];
        v16 = &v12[v14];
        *v15 = *(_OWORD *)&v12[v14];
        v17 = type metadata accessor for IconDescriptor();
        v18 = *(int *)(v17 + 20);
        v19 = (char *)v15 + v18;
        v20 = &v16[v18];
        v21 = sub_23E135910();
        v22 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
        v22(v19, v20, v21);
        v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v24 = (char *)v15 + v23;
        v25 = &v16[v23];
        *(_OWORD *)v24 = *v25;
        v22(&v24[*(int *)(v17 + 20)], (_BYTE *)v25 + *(int *)(v17 + 20), v21);
        v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v15 + *(int *)(v26 + 20)) = *(_QWORD *)&v16[*(int *)(v26 + 20)];
        v27 = *(int *)(v26 + 24);
        v28 = (_QWORD *)((char *)v15 + v27);
        v29 = &v16[v27];
        v30 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          *v28 = *v29;
          v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v38 = (char *)v28 + v37;
          v39 = (char *)v29 + v37;
          v40 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_15;
      case 1u:
        v31 = type metadata accessor for Device.Control.IncrementalState(0);
        v32 = *(_QWORD *)(v31 - 8);
        v86 = a3;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v31))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v41 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v11, v12, v41);
          v11[*(int *)(v31 + 20)] = v12[*(int *)(v31 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v11, 0, 1, v31);
        }
        v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v43 = &v11[v42];
        v44 = &v12[v42];
        *v43 = *(_OWORD *)&v12[v42];
        v45 = type metadata accessor for IconDescriptor();
        v46 = *(int *)(v45 + 20);
        v47 = (char *)v43 + v46;
        v48 = &v44[v46];
        v49 = sub_23E135910();
        v50 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32);
        v50(v47, v48, v49);
        v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v52 = (char *)v43 + v51;
        v53 = &v44[v51];
        *(_OWORD *)v52 = *v53;
        v50(&v52[*(int *)(v45 + 20)], (_BYTE *)v53 + *(int *)(v45 + 20), v49);
        v54 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v43 + v54[5]) = *(_QWORD *)&v44[v54[5]];
        *(_QWORD *)((char *)v43 + v54[6]) = *(_QWORD *)&v44[v54[6]];
        v55 = v54[7];
        v56 = (char *)v43 + v55;
        v57 = &v44[v55];
        v58 = sub_23E135520();
        (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        *(_QWORD *)((char *)v43 + v54[8]) = *(_QWORD *)&v44[v54[8]];
        *(_QWORD *)((char *)v43 + v54[9]) = *(_QWORD *)&v44[v54[9]];
        *(_QWORD *)((char *)v43 + v54[10]) = *(_QWORD *)&v44[v54[10]];
        v59 = v54[11];
        v60 = (char *)v43 + v59;
        v61 = &v44[v59];
        v60[8] = v61[8];
        *(_QWORD *)v60 = *(_QWORD *)v61;
LABEL_15:
        swift_storeEnumTagMultiPayload();
        a3 = v86;
        break;
      case 3u:
        v34 = type metadata accessor for Device.Control.ColorState(0);
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v34))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v62 = v11;
          v63 = sub_23E135328();
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v64 + 48))(v12, 1, v63))
          {
            v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            v11 = v62;
            memcpy(v62, v12, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v64 + 32))(v62, v12, v63);
            v66 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v64 + 56);
            v11 = v62;
            v66(v62, 0, 1, v63);
          }
          v67 = *(int *)(v34 + 20);
          v68 = &v11[v67];
          v69 = &v12[v67];
          *(_QWORD *)v68 = *(_QWORD *)v69;
          v68[8] = v69[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v34);
        }
        v70 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v71 = &v11[v70];
        v72 = &v12[v70];
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *(_DWORD *)(v71 + 7) = *(_DWORD *)(v72 + 7);
        goto LABEL_21;
      case 6u:
        v8(v11, v12, v7);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v73 = v9[6];
    v74 = &a1[v73];
    v75 = &a2[v73];
    v76 = type metadata accessor for Device.Control.Source(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v74 = *v75;
      v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v81 = (char *)v74 + v80;
      v82 = (char *)v75 + v80;
      v83 = sub_23E134E9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    }
    else
    {
      v78 = sub_23E1356DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v78 - 8) + 32))(v74, v75, v78);
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      *(_QWORD *)((char *)v74 + *(int *)(v79 + 48)) = *(_QWORD *)((char *)v75 + *(int *)(v79 + 48));
      swift_storeEnumTagMultiPayload();
    }
    a1[v9[7]] = a2[v9[7]];
    *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
    *(_WORD *)&a1[v9[9]] = *(_WORD *)&a2[v9[9]];
    a1[v9[10]] = a2[v9[10]];
    a1[v9[11]] = a2[v9[11]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v84 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v84] = *(_OWORD *)&a2[v84];
  return a1;
}

_BYTE *_s12ControlGroupVwta(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(char *, _BYTE *, uint64_t);
  uint64_t v22;
  char *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _BYTE *v43;
  uint64_t v44;
  char *v45;
  _BYTE *v46;
  uint64_t v47;
  void (*v48)(char *, _BYTE *, uint64_t);
  uint64_t v49;
  char *v50;
  _OWORD *v51;
  int *v52;
  uint64_t v53;
  char *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  int EnumCaseMultiPayload;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v93;
  uint64_t v94;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for Device.ControlGroup.LayoutType);
    v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23E134C80();
      v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for Device.Control(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v11 = *v12;
          v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v15 = &v11[v14];
          v16 = &v12[v14];
          *v15 = *(_OWORD *)&v12[v14];
          v93 = type metadata accessor for IconDescriptor();
          v17 = *(int *)(v93 + 20);
          v18 = (char *)v15 + v17;
          v19 = &v16[v17];
          v20 = sub_23E135910();
          v21 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
          v21(v18, v19, v20);
          v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v23 = (char *)v15 + v22;
          v24 = &v16[v22];
          *(_OWORD *)v23 = *v24;
          v21(&v23[*(int *)(v93 + 20)], (_BYTE *)v24 + *(int *)(v93 + 20), v20);
          v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v15 + *(int *)(v25 + 20)) = *(_QWORD *)&v16[*(int *)(v25 + 20)];
          v26 = *(int *)(v25 + 24);
          v27 = (_QWORD *)((char *)v15 + v26);
          v28 = &v16[v26];
          v29 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            *v27 = *v28;
            v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v37 = (char *)v27 + v36;
            v38 = (char *)v28 + v36;
            v39 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_21;
        case 1u:
          v30 = type metadata accessor for Device.Control.IncrementalState(0);
          v31 = *(_QWORD *)(v30 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v12, 1, v30))
          {
            v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            v40 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v11, v12, v40);
            v11[*(int *)(v30 + 20)] = v12[*(int *)(v30 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v11, 0, 1, v30);
          }
          v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v42 = &v11[v41];
          v43 = &v12[v41];
          *v42 = *(_OWORD *)&v12[v41];
          v94 = type metadata accessor for IconDescriptor();
          v44 = *(int *)(v94 + 20);
          v45 = (char *)v42 + v44;
          v46 = &v43[v44];
          v47 = sub_23E135910();
          v48 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 32);
          v48(v45, v46, v47);
          v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v50 = (char *)v42 + v49;
          v51 = &v43[v49];
          *(_OWORD *)v50 = *v51;
          v48(&v50[*(int *)(v94 + 20)], (_BYTE *)v51 + *(int *)(v94 + 20), v47);
          v52 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v42 + v52[5]) = *(_QWORD *)&v43[v52[5]];
          *(_QWORD *)((char *)v42 + v52[6]) = *(_QWORD *)&v43[v52[6]];
          v53 = v52[7];
          v54 = (char *)v42 + v53;
          v55 = &v43[v53];
          v56 = sub_23E135520();
          (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
          *(_QWORD *)((char *)v42 + v52[8]) = *(_QWORD *)&v43[v52[8]];
          *(_QWORD *)((char *)v42 + v52[9]) = *(_QWORD *)&v43[v52[9]];
          *(_QWORD *)((char *)v42 + v52[10]) = *(_QWORD *)&v43[v52[10]];
          v57 = v52[11];
          v58 = (char *)v42 + v57;
          v59 = &v43[v57];
          v58[8] = v59[8];
          *(_QWORD *)v58 = *(_QWORD *)v59;
          goto LABEL_21;
        case 3u:
          v33 = type metadata accessor for Device.Control.ColorState(0);
          v34 = *(_QWORD *)(v33 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v12, 1, v33))
          {
            v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            v60 = v11;
            v61 = sub_23E135328();
            v62 = *(_QWORD *)(v61 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v62 + 48))(v12, 1, v61))
            {
              v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v11 = v60;
              memcpy(v60, v12, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 32))(v60, v12, v61);
              v64 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v62 + 56);
              v11 = v60;
              v64(v60, 0, 1, v61);
            }
            v65 = *(int *)(v33 + 20);
            v66 = &v11[v65];
            v67 = &v12[v65];
            *(_QWORD *)v66 = *(_QWORD *)v67;
            v66[8] = v67[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v11, 0, 1, v33);
          }
          v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v69 = &v11[v68];
          v70 = &v12[v68];
          *(_QWORD *)v69 = *(_QWORD *)v70;
          *(_DWORD *)(v69 + 7) = *(_DWORD *)(v70 + 7);
          goto LABEL_21;
        case 6u:
          v8(v11, v12, v7);
LABEL_21:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v71 = v9[6];
      v72 = &a1[v71];
      v73 = &a2[v71];
      v74 = type metadata accessor for Device.Control.Source(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v72 = *v73;
        v78 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v79 = (char *)v72 + v78;
        v80 = (char *)v73 + v78;
        v81 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v76 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v72, v73, v76);
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v72 + *(int *)(v77 + 48)) = *(_QWORD *)((char *)v73 + *(int *)(v77 + 48));
        swift_storeEnumTagMultiPayload();
      }
      a1[v9[7]] = a2[v9[7]];
      *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
      *(_WORD *)&a1[v9[9]] = *(_WORD *)&a2[v9[9]];
      a1[v9[10]] = a2[v9[10]];
      a1[v9[11]] = a2[v9[11]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v82 = *(int *)(a3 + 20);
  v83 = &a1[v82];
  v84 = (uint64_t *)&a2[v82];
  v86 = *v84;
  v85 = v84[1];
  *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  v87 = *(int *)(a3 + 24);
  v88 = &a1[v87];
  v89 = (uint64_t *)&a2[v87];
  v91 = *v89;
  v90 = v89[1];
  *v88 = v91;
  v88[1] = v90;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12ControlGroupVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0A2C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t _s12ControlGroupVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0A2D2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t sub_23E0A2DA8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device.ControlGroup.LayoutType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *_s12ControlGroupV10LayoutTypeOwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  void (*v98)(char *, _BYTE *, uint64_t);
  char *v99;
  char *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23E134C80();
      v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for Device.Control(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v11 = *v12;
          v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v15 = &v11[v14];
          v16 = &v12[v14];
          v17 = *(_QWORD *)&v12[v14];
          v18 = *((_QWORD *)v16 + 1);
          *v15 = v17;
          v15[1] = v18;
          v19 = type metadata accessor for IconDescriptor();
          v20 = *(int *)(v19 + 20);
          v99 = (char *)v15 + v20;
          v102 = v19;
          v21 = &v16[v20];
          v22 = sub_23E135910();
          v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v99, v21, v22);
          v24 = v23;
          v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v26 = (_QWORD *)((char *)v15 + v25);
          v27 = &v16[v25];
          v28 = v27[1];
          *v26 = *v27;
          v26[1] = v28;
          v29 = *(int *)(v102 + 20);
          v30 = (char *)v26 + v29;
          v31 = (char *)v27 + v29;
          swift_bridgeObjectRetain();
          v24(v30, v31, v22);
          v32 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v15 + *(int *)(v32 + 20)) = *(_QWORD *)&v16[*(int *)(v32 + 20)];
          v33 = *(int *)(v32 + 24);
          v34 = (_QWORD *)((char *)v15 + v33);
          v35 = &v16[v33];
          v36 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            v76 = v35[1];
            *v34 = *v35;
            v34[1] = v76;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            *v34 = *v35;
            v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v39 = (char *)v34 + v38;
            v40 = (char *)v35 + v38;
            v41 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_26;
        case 1u:
          v42 = type metadata accessor for Device.Control.IncrementalState(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v43 + 48))(v12, 1, v42))
          {
            v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            v49 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v11, v12, v49);
            v11[*(int *)(v42 + 20)] = v12[*(int *)(v42 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v11, 0, 1, v42);
          }
          v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v51 = &v11[v50];
          v52 = &v12[v50];
          v53 = *(_QWORD *)&v12[v50 + 8];
          *v51 = *(_QWORD *)&v12[v50];
          v51[1] = v53;
          v54 = type metadata accessor for IconDescriptor();
          v55 = *(int *)(v54 + 20);
          v100 = (char *)v51 + v55;
          v103 = v54;
          v56 = &v52[v55];
          v57 = sub_23E135910();
          v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
          swift_bridgeObjectRetain();
          v58(v100, v56, v57);
          v59 = v58;
          v60 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v61 = (_QWORD *)((char *)v51 + v60);
          v62 = &v52[v60];
          v63 = v62[1];
          *v61 = *v62;
          v61[1] = v63;
          v64 = *(int *)(v103 + 20);
          v65 = (char *)v61 + v64;
          v66 = (char *)v62 + v64;
          swift_bridgeObjectRetain();
          v59(v65, v66, v57);
          v67 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v51 + v67[5]) = *(_QWORD *)&v52[v67[5]];
          *(_QWORD *)((char *)v51 + v67[6]) = *(_QWORD *)&v52[v67[6]];
          v68 = v67[7];
          v101 = &v52[v68];
          v104 = (char *)v51 + v68;
          v69 = sub_23E135520();
          v98 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
          swift_retain();
          swift_retain();
          v98(v104, v101, v69);
          *(_QWORD *)((char *)v51 + v67[8]) = *(_QWORD *)&v52[v67[8]];
          *(_QWORD *)((char *)v51 + v67[9]) = *(_QWORD *)&v52[v67[9]];
          *(_QWORD *)((char *)v51 + v67[10]) = *(_QWORD *)&v52[v67[10]];
          v70 = v67[11];
          v71 = (char *)v51 + v70;
          v72 = &v52[v70];
          v71[8] = v72[8];
          *(_QWORD *)v71 = *(_QWORD *)v72;
          goto LABEL_26;
        case 2u:
          *(_QWORD *)v11 = *(_QWORD *)v12;
          v11[8] = v12[8];
          *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
          v11[24] = v12[24];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 3u:
          v45 = type metadata accessor for Device.Control.ColorState(0);
          v46 = *(_QWORD *)(v45 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v46 + 48))(v12, 1, v45))
          {
            v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            v73 = sub_23E135328();
            v74 = *(_QWORD *)(v73 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v74 + 48))(v12, 1, v73))
            {
              v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v74 + 16))(v11, v12, v73);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v11, 0, 1, v73);
            }
            v77 = *(int *)(v45 + 20);
            v78 = &v11[v77];
            v79 = &v12[v77];
            *(_QWORD *)v78 = *(_QWORD *)v79;
            v78[8] = v79[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v11, 0, 1, v45);
          }
          v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v81 = &v11[v80];
          v82 = &v12[v80];
          *(_QWORD *)v81 = *(_QWORD *)v82;
          *(_DWORD *)(v81 + 7) = *(_DWORD *)(v82 + 7);
          goto LABEL_26;
        case 4u:
          v48 = *((_QWORD *)v12 + 1);
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *((_QWORD *)v11 + 1) = v48;
          v11[16] = v12[16];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 6u:
          v8(v11, v12, v7);
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v83 = v9[6];
      v84 = (_QWORD *)((char *)a1 + v83);
      v85 = (_QWORD *)((char *)a2 + v83);
      v86 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v87 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v84, v85, v87);
          v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v84 + *(int *)(v88 + 48)) = *(_QWORD *)((char *)v85 + *(int *)(v88 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 1u:
          *v84 = *v85;
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 2u:
          *v84 = *v85;
          swift_bridgeObjectRetain();
          v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v90 = (char *)v84 + v89;
          v91 = (char *)v85 + v89;
          v92 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
          goto LABEL_33;
        case 3u:
        case 4u:
        case 5u:
          *v84 = *v85;
          swift_retain();
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + v9[7]) = *((_BYTE *)a2 + v9[7]);
      v93 = v9[8];
      v94 = (_QWORD *)((char *)a1 + v93);
      v95 = (_QWORD *)((char *)a2 + v93);
      v96 = v95[1];
      *v94 = *v95;
      v94[1] = v96;
      *(_WORD *)((char *)a1 + v9[9]) = *(_WORD *)((char *)a2 + v9[9]);
      *((_BYTE *)a1 + v9[10]) = *((_BYTE *)a2 + v9[10]);
      *((_BYTE *)a1 + v9[11]) = *((_BYTE *)a2 + v9[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s12ControlGroupV10LayoutTypeOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  result = swift_getEnumCaseMultiPayload();
  if (result >= 2)
  {
    if ((_DWORD)result != 2)
      return result;
    v3 = sub_23E134C80();
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v5 = type metadata accessor for Device.Control(0);
    v6 = a1 + *(int *)(v5 + 20);
    type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        swift_bridgeObjectRelease();
        v8 = type metadata accessor for IconDescriptor();
        v9 = v7 + *(int *)(v8 + 20);
        v10 = sub_23E135910();
        v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
        v11(v9, v10);
        v12 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v11(v12 + *(int *)(v8 + 20), v10);
        v13 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        swift_release();
        v14 = v7 + *(int *)(v13 + 24);
        type metadata accessor for ControlTextModifier.Config(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
          goto LABEL_12;
        if (!EnumCaseMultiPayload)
        {
          v16 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v17 = sub_23E134C20();
          goto LABEL_11;
        }
        break;
      case 1u:
        v18 = type metadata accessor for Device.Control.IncrementalState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v6, 1, v18))
        {
          v19 = sub_23E13534C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
        }
        v20 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        swift_bridgeObjectRelease();
        v21 = type metadata accessor for IconDescriptor();
        v22 = v20 + *(int *)(v21 + 20);
        v23 = sub_23E135910();
        v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
        v24(v22, v23);
        v25 = v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v24(v25 + *(int *)(v21 + 20), v23);
        v26 = type metadata accessor for Device.Control.IncrementalConfig(0);
        swift_release();
        swift_release();
        v16 = v20 + *(int *)(v26 + 28);
        v17 = sub_23E135520();
LABEL_11:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        break;
      case 2u:
      case 4u:
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        v27 = type metadata accessor for Device.Control.ColorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v6, 1, v27))
        {
          v28 = sub_23E135328();
          v29 = *(_QWORD *)(v28 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v6, 1, v28))
            (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v6, v28);
        }
        break;
      case 6u:
        v4(v6, v3);
        break;
      default:
        break;
    }
    v30 = a1 + *(int *)(v5 + 24);
    type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v31 = sub_23E1356DC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        v32 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v33 = sub_23E134E9C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_release();
        break;
      default:
        return swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

_QWORD *_s12ControlGroupV10LayoutTypeOwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void (*v5)(_BYTE *, _BYTE *, uint64_t);
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  void (*v95)(char *, _BYTE *, uint64_t);
  char *v96;
  char *v97;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v4 = sub_23E134C80();
    v5 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
    v5(a1, a2, v4);
    v6 = (int *)type metadata accessor for Device.Control(0);
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v8 = *v9;
        v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v12 = &v8[v11];
        v13 = &v9[v11];
        v14 = *(_QWORD *)&v9[v11];
        v15 = *((_QWORD *)v13 + 1);
        *v12 = v14;
        v12[1] = v15;
        v16 = type metadata accessor for IconDescriptor();
        v17 = *(int *)(v16 + 20);
        v96 = (char *)v12 + v17;
        v99 = v16;
        v18 = &v13[v17];
        v19 = sub_23E135910();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v96, v18, v19);
        v21 = v20;
        v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v23 = (_QWORD *)((char *)v12 + v22);
        v24 = &v13[v22];
        v25 = v24[1];
        *v23 = *v24;
        v23[1] = v25;
        v26 = *(int *)(v99 + 20);
        v27 = (char *)v23 + v26;
        v28 = (char *)v24 + v26;
        swift_bridgeObjectRetain();
        v21(v27, v28, v19);
        v29 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v12 + *(int *)(v29 + 20)) = *(_QWORD *)&v13[*(int *)(v29 + 20)];
        v30 = *(int *)(v29 + 24);
        v31 = (_QWORD *)((char *)v12 + v30);
        v32 = &v13[v30];
        v33 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v73 = v32[1];
          *v31 = *v32;
          v31[1] = v73;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          *v31 = *v32;
          v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v36 = (char *)v31 + v35;
          v37 = (char *)v32 + v35;
          v38 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_24;
      case 1u:
        v39 = type metadata accessor for Device.Control.IncrementalState(0);
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v39))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v46 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v8, v9, v46);
          v8[*(int *)(v39 + 20)] = v9[*(int *)(v39 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v8, 0, 1, v39);
        }
        v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v48 = &v8[v47];
        v49 = &v9[v47];
        v50 = *(_QWORD *)&v9[v47 + 8];
        *v48 = *(_QWORD *)&v9[v47];
        v48[1] = v50;
        v51 = type metadata accessor for IconDescriptor();
        v52 = *(int *)(v51 + 20);
        v97 = (char *)v48 + v52;
        v100 = v51;
        v53 = &v49[v52];
        v54 = sub_23E135910();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v97, v53, v54);
        v56 = v55;
        v57 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v58 = (_QWORD *)((char *)v48 + v57);
        v59 = &v49[v57];
        v60 = v59[1];
        *v58 = *v59;
        v58[1] = v60;
        v61 = *(int *)(v100 + 20);
        v62 = (char *)v58 + v61;
        v63 = (char *)v59 + v61;
        swift_bridgeObjectRetain();
        v56(v62, v63, v54);
        v64 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v48 + v64[5]) = *(_QWORD *)&v49[v64[5]];
        *(_QWORD *)((char *)v48 + v64[6]) = *(_QWORD *)&v49[v64[6]];
        v65 = v64[7];
        v98 = &v49[v65];
        v101 = (char *)v48 + v65;
        v66 = sub_23E135520();
        v95 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
        swift_retain();
        swift_retain();
        v95(v101, v98, v66);
        *(_QWORD *)((char *)v48 + v64[8]) = *(_QWORD *)&v49[v64[8]];
        *(_QWORD *)((char *)v48 + v64[9]) = *(_QWORD *)&v49[v64[9]];
        *(_QWORD *)((char *)v48 + v64[10]) = *(_QWORD *)&v49[v64[10]];
        v67 = v64[11];
        v68 = (char *)v48 + v67;
        v69 = &v49[v67];
        v68[8] = v69[8];
        *(_QWORD *)v68 = *(_QWORD *)v69;
        goto LABEL_24;
      case 2u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v8[8] = v9[8];
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v8[24] = v9[24];
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 3u:
        v42 = type metadata accessor for Device.Control.ColorState(0);
        v43 = *(_QWORD *)(v42 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v43 + 48))(v9, 1, v42))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          v70 = sub_23E135328();
          v71 = *(_QWORD *)(v70 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v71 + 48))(v9, 1, v70))
          {
            v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v71 + 16))(v8, v9, v70);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v8, 0, 1, v70);
          }
          v74 = *(int *)(v42 + 20);
          v75 = &v8[v74];
          v76 = &v9[v74];
          *(_QWORD *)v75 = *(_QWORD *)v76;
          v75[8] = v76[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v8, 0, 1, v42);
        }
        v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v78 = &v8[v77];
        v79 = &v9[v77];
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *(_DWORD *)(v78 + 7) = *(_DWORD *)(v79 + 7);
        goto LABEL_24;
      case 4u:
        v45 = *((_QWORD *)v9 + 1);
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *((_QWORD *)v8 + 1) = v45;
        v8[16] = v9[16];
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 6u:
        v5(v8, v9, v4);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
    v80 = v6[6];
    v81 = (_QWORD *)((char *)a1 + v80);
    v82 = (_QWORD *)((char *)a2 + v80);
    v83 = type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v84 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v81, v82, v84);
        v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v81 + *(int *)(v85 + 48)) = *(_QWORD *)((char *)v82 + *(int *)(v85 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 1u:
        *v81 = *v82;
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 2u:
        *v81 = *v82;
        swift_bridgeObjectRetain();
        v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v87 = (char *)v81 + v86;
        v88 = (char *)v82 + v86;
        v89 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
        goto LABEL_31;
      case 3u:
      case 4u:
      case 5u:
        *v81 = *v82;
        swift_retain();
LABEL_31:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        break;
    }
    *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    v90 = v6[8];
    v91 = (_QWORD *)((char *)a1 + v90);
    v92 = (_QWORD *)((char *)a2 + v90);
    v93 = v92[1];
    *v91 = *v92;
    v91[1] = v93;
    *(_WORD *)((char *)a1 + v6[9]) = *(_WORD *)((char *)a2 + v6[9]);
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s12ControlGroupV10LayoutTypeOwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void (*v5)(_BYTE *, _BYTE *, uint64_t);
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _BYTE *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  int v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  void (*v91)(char *, _BYTE *, uint64_t);
  char *v92;
  char *v93;
  _BYTE *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for Device.ControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v4 = sub_23E134C80();
      v5 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      v6 = (int *)type metadata accessor for Device.Control(0);
      v7 = v6[5];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v8 = *v9;
          v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v12 = &v8[v11];
          v13 = &v9[v11];
          *v12 = *(_QWORD *)&v9[v11];
          v12[1] = *(_QWORD *)&v9[v11 + 8];
          v14 = type metadata accessor for IconDescriptor();
          v15 = *(int *)(v14 + 20);
          v92 = (char *)v12 + v15;
          v95 = v14;
          v16 = &v13[v15];
          v17 = sub_23E135910();
          v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v18(v92, v16, v17);
          v19 = v18;
          v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v21 = (_QWORD *)((char *)v12 + v20);
          v22 = &v13[v20];
          *v21 = *v22;
          v21[1] = v22[1];
          v23 = *(int *)(v95 + 20);
          v24 = (char *)v21 + v23;
          v25 = (char *)v22 + v23;
          swift_bridgeObjectRetain();
          v19(v24, v25, v17);
          v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v12 + *(int *)(v26 + 20)) = *(_QWORD *)&v13[*(int *)(v26 + 20)];
          v27 = *(int *)(v26 + 24);
          v28 = (_QWORD *)((char *)v12 + v27);
          v29 = &v13[v27];
          v30 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            *v28 = *v29;
            v28[1] = v29[1];
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            *v28 = *v29;
            v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v33 = (char *)v28 + v32;
            v34 = (char *)v29 + v32;
            v35 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_25;
        case 1u:
          v36 = type metadata accessor for Device.Control.IncrementalState(0);
          v37 = *(_QWORD *)(v36 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v9, 1, v36))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            v43 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v8, v9, v43);
            v8[*(int *)(v36 + 20)] = v9[*(int *)(v36 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v8, 0, 1, v36);
          }
          v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v45 = &v8[v44];
          v46 = &v9[v44];
          *v45 = *(_QWORD *)&v9[v44];
          v45[1] = *(_QWORD *)&v9[v44 + 8];
          v47 = type metadata accessor for IconDescriptor();
          v48 = *(int *)(v47 + 20);
          v93 = (char *)v45 + v48;
          v96 = v47;
          v49 = &v46[v48];
          v50 = sub_23E135910();
          v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v93, v49, v50);
          v52 = v51;
          v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v54 = (_QWORD *)((char *)v45 + v53);
          v55 = &v46[v53];
          *v54 = *v55;
          v54[1] = v55[1];
          v56 = *(int *)(v96 + 20);
          v57 = (char *)v54 + v56;
          v58 = (char *)v55 + v56;
          swift_bridgeObjectRetain();
          v52(v57, v58, v50);
          v59 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v45 + v59[5]) = *(_QWORD *)&v46[v59[5]];
          *(_QWORD *)((char *)v45 + v59[6]) = *(_QWORD *)&v46[v59[6]];
          v60 = v59[7];
          v94 = &v46[v60];
          v97 = (char *)v45 + v60;
          v61 = sub_23E135520();
          v91 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
          swift_retain();
          swift_retain();
          v91(v97, v94, v61);
          *(_QWORD *)((char *)v45 + v59[8]) = *(_QWORD *)&v46[v59[8]];
          *(_QWORD *)((char *)v45 + v59[9]) = *(_QWORD *)&v46[v59[9]];
          *(_QWORD *)((char *)v45 + v59[10]) = *(_QWORD *)&v46[v59[10]];
          v62 = v59[11];
          v63 = (char *)v45 + v62;
          v64 = &v46[v62];
          v65 = v64[8];
          *(_QWORD *)v63 = *(_QWORD *)v64;
          v63[8] = v65;
          goto LABEL_25;
        case 2u:
          v39 = *(_QWORD *)v9;
          v8[8] = v9[8];
          *(_QWORD *)v8 = v39;
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          v8[24] = v9[24];
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 3u:
          v40 = type metadata accessor for Device.Control.ColorState(0);
          v41 = *(_QWORD *)(v40 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v9, 1, v40))
          {
            v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          }
          else
          {
            v66 = sub_23E135328();
            v67 = *(_QWORD *)(v66 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v67 + 48))(v9, 1, v66))
            {
              v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v67 + 16))(v8, v9, v66);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v8, 0, 1, v66);
            }
            v69 = *(int *)(v40 + 20);
            v70 = &v8[v69];
            v71 = &v9[v69];
            v72 = *(_QWORD *)v71;
            v70[8] = v71[8];
            *(_QWORD *)v70 = v72;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v8, 0, 1, v40);
          }
          v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v74 = &v8[v73];
          v75 = &v9[v73];
          v76 = *(_DWORD *)(v75 + 7);
          *(_QWORD *)v74 = *(_QWORD *)v75;
          *(_DWORD *)(v74 + 7) = v76;
          goto LABEL_25;
        case 4u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
          v8[16] = v9[16];
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 6u:
          v5(v8, v9, v4);
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          break;
      }
      v77 = v6[6];
      v78 = (_QWORD *)((char *)a1 + v77);
      v79 = (_QWORD *)((char *)a2 + v77);
      v80 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v81 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v78, v79, v81);
          v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v78 + *(int *)(v82 + 48)) = *(_QWORD *)((char *)v79 + *(int *)(v82 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_32;
        case 1u:
          *v78 = *v79;
          swift_bridgeObjectRetain();
          goto LABEL_32;
        case 2u:
          *v78 = *v79;
          swift_bridgeObjectRetain();
          v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v84 = (char *)v78 + v83;
          v85 = (char *)v79 + v83;
          v86 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
          goto LABEL_32;
        case 3u:
        case 4u:
        case 5u:
          *v78 = *v79;
          swift_retain();
LABEL_32:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
      v87 = v6[8];
      v88 = (_QWORD *)((char *)a1 + v87);
      v89 = (_QWORD *)((char *)a2 + v87);
      *v88 = *v89;
      v88[1] = v89[1];
      *(_WORD *)((char *)a1 + v6[9]) = *(_WORD *)((char *)a2 + v6[9]);
      *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
      *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *_s12ControlGroupV10LayoutTypeOwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  int *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_23E134C80();
    v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = (int *)type metadata accessor for Device.Control(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v10 = *v11;
        v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v14 = &v10[v13];
        v15 = &v11[v13];
        *(_OWORD *)&v10[v13] = *(_OWORD *)&v11[v13];
        v16 = type metadata accessor for IconDescriptor();
        v17 = *(int *)(v16 + 20);
        v18 = &v14[v17];
        v19 = &v15[v17];
        v20 = sub_23E135910();
        v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
        v21(v18, v19, v20);
        v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v23 = &v14[v22];
        v24 = &v15[v22];
        *v23 = *v24;
        v21((_BYTE *)v23 + *(int *)(v16 + 20), (_BYTE *)v24 + *(int *)(v16 + 20), v20);
        v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v14[*(int *)(v25 + 20)] = *(_QWORD *)&v15[*(int *)(v25 + 20)];
        v26 = *(int *)(v25 + 24);
        v27 = &v14[v26];
        v28 = &v15[v26];
        v29 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          *v27 = *v28;
          v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v37 = (char *)v27 + v36;
          v38 = (char *)v28 + v36;
          v39 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_20;
      case 1u:
        v30 = type metadata accessor for Device.Control.IncrementalState(0);
        v31 = *(_QWORD *)(v30 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v11, 1, v30))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          v40 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v10, v11, v40);
          v10[*(int *)(v30 + 20)] = v11[*(int *)(v30 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v10, 0, 1, v30);
        }
        v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v42 = &v10[v41];
        v43 = &v11[v41];
        *(_OWORD *)&v10[v41] = *(_OWORD *)&v11[v41];
        v44 = type metadata accessor for IconDescriptor();
        v45 = *(int *)(v44 + 20);
        v46 = &v42[v45];
        v47 = &v43[v45];
        v48 = sub_23E135910();
        v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
        v49(v46, v47, v48);
        v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v51 = &v42[v50];
        v52 = &v43[v50];
        *v51 = *v52;
        v49((_BYTE *)v51 + *(int *)(v44 + 20), (_BYTE *)v52 + *(int *)(v44 + 20), v48);
        v53 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v42[v53[5]] = *(_QWORD *)&v43[v53[5]];
        *(_QWORD *)&v42[v53[6]] = *(_QWORD *)&v43[v53[6]];
        v54 = v53[7];
        v55 = &v42[v54];
        v56 = &v43[v54];
        v57 = sub_23E135520();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        *(_QWORD *)&v42[v53[8]] = *(_QWORD *)&v43[v53[8]];
        *(_QWORD *)&v42[v53[9]] = *(_QWORD *)&v43[v53[9]];
        *(_QWORD *)&v42[v53[10]] = *(_QWORD *)&v43[v53[10]];
        v58 = v53[11];
        v59 = &v42[v58];
        v60 = &v43[v58];
        v59[8] = v60[8];
        *(_QWORD *)v59 = *(_QWORD *)v60;
        goto LABEL_20;
      case 3u:
        v33 = type metadata accessor for Device.Control.ColorState(0);
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v11, 1, v33))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v61 = sub_23E135328();
          v62 = *(_QWORD *)(v61 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v62 + 48))(v11, 1, v61))
          {
            v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 32))(v10, v11, v61);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v10, 0, 1, v61);
          }
          v64 = *(int *)(v33 + 20);
          v65 = &v10[v64];
          v66 = &v11[v64];
          *(_QWORD *)v65 = *(_QWORD *)v66;
          v65[8] = v66[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v33);
        }
        v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v68 = &v10[v67];
        v69 = &v11[v67];
        *(_QWORD *)v68 = *(_QWORD *)v69;
        *(_DWORD *)(v68 + 7) = *(_DWORD *)(v69 + 7);
        goto LABEL_20;
      case 6u:
        v7(v10, v11, v6);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v70 = v8[6];
    v71 = &a1[v70];
    v72 = &a2[v70];
    v73 = type metadata accessor for Device.Control.Source(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v71 = *v72;
      v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v78 = (char *)v71 + v77;
      v79 = (char *)v72 + v77;
      v80 = sub_23E134E9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      v75 = sub_23E1356DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v71, v72, v75);
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      *(_QWORD *)((char *)v71 + *(int *)(v76 + 48)) = *(_QWORD *)((char *)v72 + *(int *)(v76 + 48));
      swift_storeEnumTagMultiPayload();
    }
    a1[v8[7]] = a2[v8[7]];
    *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
    *(_WORD *)&a1[v8[9]] = *(_WORD *)&a2[v8[9]];
    a1[v8[10]] = a2[v8[10]];
    a1[v8[11]] = a2[v8[11]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *_s12ControlGroupV10LayoutTypeOwta(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  int *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for Device.ControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_23E134C80();
      v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for Device.Control(0);
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v10 = *v11;
          v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v14 = &v10[v13];
          v15 = &v11[v13];
          *(_OWORD *)&v10[v13] = *(_OWORD *)&v11[v13];
          v16 = type metadata accessor for IconDescriptor();
          v17 = *(int *)(v16 + 20);
          v18 = &v14[v17];
          v19 = &v15[v17];
          v20 = sub_23E135910();
          v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
          v21(v18, v19, v20);
          v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v23 = &v14[v22];
          v24 = &v15[v22];
          *v23 = *v24;
          v21((_BYTE *)v23 + *(int *)(v16 + 20), (_BYTE *)v24 + *(int *)(v16 + 20), v20);
          v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v14[*(int *)(v25 + 20)] = *(_QWORD *)&v15[*(int *)(v25 + 20)];
          v26 = *(int *)(v25 + 24);
          v27 = &v14[v26];
          v28 = &v15[v26];
          v29 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            *v27 = *v28;
            v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v37 = (char *)v27 + v36;
            v38 = (char *)v28 + v36;
            v39 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_21;
        case 1u:
          v30 = type metadata accessor for Device.Control.IncrementalState(0);
          v31 = *(_QWORD *)(v30 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v11, 1, v30))
          {
            v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            v40 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v10, v11, v40);
            v10[*(int *)(v30 + 20)] = v11[*(int *)(v30 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v10, 0, 1, v30);
          }
          v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v42 = &v10[v41];
          v43 = &v11[v41];
          *(_OWORD *)&v10[v41] = *(_OWORD *)&v11[v41];
          v44 = type metadata accessor for IconDescriptor();
          v45 = *(int *)(v44 + 20);
          v46 = &v42[v45];
          v47 = &v43[v45];
          v48 = sub_23E135910();
          v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
          v49(v46, v47, v48);
          v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v51 = &v42[v50];
          v52 = &v43[v50];
          *v51 = *v52;
          v49((_BYTE *)v51 + *(int *)(v44 + 20), (_BYTE *)v52 + *(int *)(v44 + 20), v48);
          v53 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v42[v53[5]] = *(_QWORD *)&v43[v53[5]];
          *(_QWORD *)&v42[v53[6]] = *(_QWORD *)&v43[v53[6]];
          v54 = v53[7];
          v55 = &v42[v54];
          v56 = &v43[v54];
          v57 = sub_23E135520();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
          *(_QWORD *)&v42[v53[8]] = *(_QWORD *)&v43[v53[8]];
          *(_QWORD *)&v42[v53[9]] = *(_QWORD *)&v43[v53[9]];
          *(_QWORD *)&v42[v53[10]] = *(_QWORD *)&v43[v53[10]];
          v58 = v53[11];
          v59 = &v42[v58];
          v60 = &v43[v58];
          v59[8] = v60[8];
          *(_QWORD *)v59 = *(_QWORD *)v60;
          goto LABEL_21;
        case 3u:
          v33 = type metadata accessor for Device.Control.ColorState(0);
          v34 = *(_QWORD *)(v33 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v11, 1, v33))
          {
            v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            v61 = sub_23E135328();
            v62 = *(_QWORD *)(v61 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v62 + 48))(v11, 1, v61))
            {
              v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 32))(v10, v11, v61);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v10, 0, 1, v61);
            }
            v64 = *(int *)(v33 + 20);
            v65 = &v10[v64];
            v66 = &v11[v64];
            *(_QWORD *)v65 = *(_QWORD *)v66;
            v65[8] = v66[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v33);
          }
          v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v68 = &v10[v67];
          v69 = &v11[v67];
          *(_QWORD *)v68 = *(_QWORD *)v69;
          *(_DWORD *)(v68 + 7) = *(_DWORD *)(v69 + 7);
          goto LABEL_21;
        case 6u:
          v7(v10, v11, v6);
LABEL_21:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v70 = v8[6];
      v71 = &a1[v70];
      v72 = &a2[v70];
      v73 = type metadata accessor for Device.Control.Source(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v71 = *v72;
        v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v78 = (char *)v71 + v77;
        v79 = (char *)v72 + v77;
        v80 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        v75 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v71, v72, v75);
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v71 + *(int *)(v76 + 48)) = *(_QWORD *)((char *)v72 + *(int *)(v76 + 48));
        swift_storeEnumTagMultiPayload();
      }
      a1[v8[7]] = a2[v8[7]];
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      *(_WORD *)&a1[v8[9]] = *(_WORD *)&a2[v8[9]];
      a1[v8[10]] = a2[v8[10]];
      a1[v8[11]] = a2[v8[11]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23E0A58F4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device.Control(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Device.ControlModule()
{
  return &type metadata for Device.ControlModule;
}

uint64_t _s13ControlModuleV6ErrorsOwst(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_23E0A59B8 + 4 * byte_23E140A62[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_23E0A59D8 + 4 * byte_23E140A67[v4]))();
}

_BYTE *sub_23E0A59B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_23E0A59D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E0A59E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E0A59E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_23E0A59F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_23E0A59F8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Device.ControlModule.Errors()
{
  return &type metadata for Device.ControlModule.Errors;
}

uint64_t sub_23E0A5A14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t WriteThrottler.__allocating_init(interval:)(double a1)
{
  uint64_t v1;
  double v3;
  char v4;

  v3 = a1;
  v4 = 0;
  v1 = swift_allocObject();
  WriteThrottler.init(writeInterval:)((uint64_t)&v3);
  return v1;
}

uint64_t WriteThrottler.__allocating_init(writeInterval:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  WriteThrottler.init(writeInterval:)(a1);
  return v2;
}

uint64_t WriteThrottler.init(writeInterval:)(uint64_t a1)
{
  double *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t);
  uint64_t v27;
  double v28;
  double *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char v36;
  double v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t result;
  _QWORD *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[2];
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v3 = *(_QWORD *)v1;
  v58 = sub_23E1370A4();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v57 = (_QWORD *)((char *)v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = sub_23E137398();
  v60 = *(_QWORD *)(v5 - 8);
  v61 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v59 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v3 + 80);
  v74 = *(_QWORD *)(v3 + 88);
  v75 = v7;
  v73 = type metadata accessor for WriteThrottler.Write(255, v7, v74, v8);
  sub_23E1374A0();
  v9 = sub_23E135C94();
  v65 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)v50 - v10;
  v11 = MEMORY[0x24264C55C](MEMORY[0x24BDB9EE8], v9);
  v66 = v9;
  v63 = v11;
  v12 = sub_23E135C1C();
  v53 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v62 = (char *)v50 - v13;
  v14 = sub_23DF975A0();
  v71 = v14;
  v15 = MEMORY[0x24264C55C](MEMORY[0x24BDB94C8], v12);
  v16 = sub_23DF73F28(&qword_256D24C38, (uint64_t (*)(uint64_t))sub_23DF975A0, MEMORY[0x24BEE5670]);
  v55 = v12;
  v76 = v12;
  v77 = v14;
  v50[1] = v15;
  v78 = v15;
  v79 = v16;
  v50[0] = v16;
  v54 = sub_23E135C28();
  v52 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v51 = (char *)v50 - v17;
  v72 = sub_23E135CA0();
  v70 = *(_QWORD *)(v72 - 8);
  v18 = MEMORY[0x24BDAC7A8](v72);
  v69 = (char *)v50 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v68 = (char *)v50 - v20;
  v21 = sub_23E1373B0();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_23E137380();
  v26 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v25);
  v27 = sub_23E1370D4();
  MEMORY[0x24BDAC7A8](v27);
  v28 = *(double *)a1;
  v67 = *(unsigned __int8 *)(a1 + 8);
  v29 = v1;
  v1[4] = 0.0;
  sub_23E1370C8();
  v76 = MEMORY[0x24BEE4AF8];
  sub_23DF73F28(&qword_256D24C40, v26, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C48);
  sub_23E0A6184();
  v30 = v73;
  sub_23E1374F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v22 + 104))(v24, *MEMORY[0x24BEE5750], v21);
  v31 = v74;
  *((_QWORD *)v1 + 5) = sub_23E1373D4();
  v32 = (char *)v29 + *(_QWORD *)(*(_QWORD *)v29 + 120);
  v33 = (uint64_t)v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v68, 1, 1, v30);
  v34 = v69;
  sub_23E0A61D0(v33, v75, v31, v35);
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v32, v34, v72);
  v29[2] = v28;
  v36 = v67;
  *((_BYTE *)v29 + 24) = v67;
  if ((v36 & 1) != 0)
    return (uint64_t)v29;
  v37 = v28;
  v38 = v64;
  sub_23E0A6860();
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = v75;
  *(_QWORD *)(v39 + 24) = v31;
  v40 = v62;
  v41 = v66;
  sub_23E135CAC();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v38, v41);
  if ((~*(_QWORD *)&v37 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v37 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v37 < 9.22337204e18)
  {
    v43 = v57;
    *v57 = (uint64_t)v37;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v56 + 104))(v43, *MEMORY[0x24BEE5410], v58);
    v44 = v59;
    sub_23E1373A4();
    v76 = *((_QWORD *)v29 + 5);
    v45 = v51;
    v46 = v55;
    sub_23E135CB8();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v61);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v46);
    v47 = swift_allocObject();
    *(_QWORD *)(v47 + 16) = v75;
    *(_QWORD *)(v47 + 24) = v31;
    v48 = v54;
    MEMORY[0x24264C55C](MEMORY[0x24BDB9988], v54);
    v49 = sub_23E135CC4();
    swift_release();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v48);
    *((_QWORD *)v29 + 4) = v49;
    swift_release();
    return (uint64_t)v29;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WriteThrottler.Write(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WriteThrottler.Write);
}

unint64_t sub_23E0A6184()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D24C50;
  if (!qword_256D24C50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D24C48);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256D24C50);
  }
  return result;
}

uint64_t sub_23E0A61D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  type metadata accessor for WriteThrottler.Write(255, a2, a3, a4);
  v5 = sub_23E1374A0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v10 - v7, a1, v5);
  sub_23E0A6738((uint64_t)v8, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t sub_23E0A6278(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = sub_23E1374A0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - v5;
  v7 = v1 + *(int *)(a1 + 36);
  v8 = *(_QWORD *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v5, v7, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v3);
  sub_23E136EDC();
  return sub_23E136E70();
}

uint64_t sub_23E0A6330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v29 = a1;
  v30 = a2;
  v5 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v7 = type metadata accessor for WriteThrottler.Write(255, v5, v6, a4);
  v8 = sub_23E1374A0();
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v27 - v10;
  v12 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1374A0();
  v15 = sub_23E136EDC();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v27 - v17;
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v27 - v20;
  (*(void (**)(char *, uint64_t))(v22 + 16))(v18, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v30, v5);
  sub_23E0A6514((uint64_t)v18, (uint64_t)v14, v5, v6, (uint64_t)v21);
  if (*(_BYTE *)(v4 + 24) == 1 && !*(_QWORD *)(v4 + 16))
  {
    sub_23E0A6278(v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v11, v21, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v7);
    sub_23E0A6C24((uint64_t)v11, v23, v24, v25);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v7);
}

uint64_t sub_23E0A6514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  sub_23E1374A0();
  v10 = sub_23E136EDC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  v12 = a5 + *(int *)(type metadata accessor for WriteThrottler.Write(0, a3, a4, v11) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(v12, a2, a3);
}

uint64_t sub_23E0A65A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v5 = type metadata accessor for WriteThrottler.Write(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v20 - v7;
  v9 = sub_23E1374A0();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v20 - v14;
  if (*(_BYTE *)(v4 + 24) == 1 && *(_QWORD *)(v4 + 16))
  {
    sub_23E0A67D0();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5))
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v15, v5);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      sub_23E0A6278(v5);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  sub_23E0A6C24((uint64_t)v13, v16, v17, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_23E0A6738(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  sub_23E135C64();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_23E0A67D0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  return swift_release();
}

uint64_t sub_23E0A6860()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0;
  swift_beginAccess();
  type metadata accessor for WriteThrottler.Write(255, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  sub_23E1374A0();
  sub_23E135CA0();
  sub_23E135C70();
  return swift_endAccess();
}

uint64_t sub_23E0A68E0()
{
  return swift_deallocObject();
}

uint64_t sub_23E0A68F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  type metadata accessor for WriteThrottler.Write(255, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2);
  v6 = sub_23E1374A0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1, v6);
}

uint64_t sub_23E0A6944()
{
  return swift_deallocObject();
}

uint64_t sub_23E0A6954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v5 = type metadata accessor for WriteThrottler.Write(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
  return sub_23E0A6278(v5);
}

id *WriteThrottler.deinit()
{
  id *v0;
  _QWORD *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  swift_release();

  v2 = (char *)v0 + *((_QWORD *)*v0 + 15);
  type metadata accessor for WriteThrottler.Write(255, v1[10], v1[11], v3);
  sub_23E1374A0();
  v4 = sub_23E135CA0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  return v0;
}

uint64_t WriteThrottler.__deallocating_deinit()
{
  WriteThrottler.deinit();
  return swift_deallocClassInstance();
}

uint64_t WriteThrottlerInterval.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return sub_23E1376A4();
  sub_23E1376A4();
  return sub_23E1376C8();
}

uint64_t static WriteThrottlerInterval.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) != 1)
    return (v4 & 1) == 0 && v2 == v3;
  v5 = *(_QWORD *)&v3 == 0;
  if (v3 == 0.0)
    v6 = *(unsigned __int8 *)(a2 + 8);
  else
    v6 = 0;
  if (v5)
    v4 = 0;
  if (v2 == 0.0)
    return v6;
  else
    return v4;
}

uint64_t WriteThrottlerInterval.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23E137698();
  sub_23E1376A4();
  if (v1 != 1)
    sub_23E1376C8();
  return sub_23E1376D4();
}

uint64_t sub_23E0A6B58()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 8);
  sub_23E137698();
  sub_23E1376A4();
  if (v1 != 1)
    sub_23E1376C8();
  return sub_23E1376D4();
}

uint64_t sub_23E0A6BD0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  unsigned int v4;
  BOOL v5;
  unsigned int v6;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  v4 = *(unsigned __int8 *)(a2 + 8);
  if (*(_BYTE *)(a1 + 8) != 1)
    return (v4 & 1) == 0 && v2 == v3;
  v5 = *(_QWORD *)&v3 == 0;
  if (v3 == 0.0)
    v6 = *(unsigned __int8 *)(a2 + 8);
  else
    v6 = 0;
  if (v5)
    v4 = 0;
  if (v2 == 0.0)
    return v6;
  else
    return v4;
}

uint64_t sub_23E0A6C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[4];

  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  type metadata accessor for WriteThrottler.Write(255, v6, v7, a4);
  v8 = sub_23E1374A0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v13 - v10;
  v13[2] = v6;
  v13[3] = v7;
  swift_getKeyPath();
  v13[0] = v6;
  v13[1] = v7;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  swift_retain();
  return sub_23E135C88();
}

unint64_t sub_23E0A6D14()
{
  unint64_t result;

  result = qword_256D24C58[0];
  if (!qword_256D24C58[0])
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for WriteThrottlerInterval, &type metadata for WriteThrottlerInterval);
    atomic_store(result, qword_256D24C58);
  }
  return result;
}

uint64_t sub_23E0A6D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  type metadata accessor for WriteThrottler.Write(255, *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), a4);
  sub_23E1374A0();
  result = sub_23E135CA0();
  if (v5 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for WriteThrottler(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WriteThrottler);
}

uint64_t method lookup function for WriteThrottler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WriteThrottler.__allocating_init(writeInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of WriteThrottler.update(binding:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of WriteThrottler.interactionEnded()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t getEnumTagSinglePayload for WriteThrottlerInterval(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WriteThrottlerInterval(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_23E0A6E8C(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_23E0A6EA8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for WriteThrottlerInterval()
{
  return &type metadata for WriteThrottlerInterval;
}

uint64_t sub_23E0A6ED8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  sub_23E1374A0();
  result = sub_23E136EDC();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_23E0A6F74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  const void *v19;
  unsigned int (*v20)(const void *, uint64_t, uint64_t);
  void (*v21)(void *, const void *, uint64_t);
  void *__dst;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6;
  v8 = *(_QWORD *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84))
    v9 = *(_QWORD *)(v5 + 64);
  else
    v9 = v8 + 1;
  v10 = ((v6 + 16) & ~(unint64_t)v6) + v9 + v6;
  v11 = v6 & 0x100000;
  v12 = *a2;
  *a1 = *a2;
  if (v7 > 7 || v11 != 0 || (v10 & ~v7) + v8 > 0x18)
  {
    a1 = (uint64_t *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    v16 = ~v7;
    v17 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v17 = *v18;
    __dst = (void *)(((unint64_t)v17 + v7 + 8) & ~v7);
    v19 = (const void *)(((unint64_t)v18 + v7 + 8) & ~v7);
    v20 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48);
    swift_retain();
    swift_retain();
    if (v20(v19, 1, v4))
    {
      memcpy(__dst, v19, v9);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v10) & v16, ((unint64_t)a2 + v10) & v16, v4);
    }
    else
    {
      v21 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
      v21(__dst, v19, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v5 + 56))(__dst, 0, 1, v4);
      v21((void *)(((unint64_t)a1 + v10) & v16), (const void *)(((unint64_t)a2 + v10) & v16), v4);
    }
  }
  return a1;
}

uint64_t sub_23E0A70E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int v10;
  void (*v11)(unint64_t, uint64_t);
  uint64_t v12;
  void (*v14)(unint64_t, uint64_t);

  v4 = a1 + 15;
  swift_release();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ~v7;
  v9 = ((v4 & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7;
  v10 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v9, 1, v5);
  v11 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
  if (!v10)
  {
    v14 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
    v11(v9, v5);
    v11 = v14;
  }
  v12 = v7 + a1 + *(_QWORD *)(v6 + 64) + ((v7 + 16) & v8);
  if (!*(_DWORD *)(v6 + 84))
    ++v12;
  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v12 & v8, v5);
}

_QWORD *sub_23E0A71AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  int v13;
  uint64_t v14;
  size_t v15;
  void (*v16)(void *, const void *, uint64_t);
  uint64_t v17;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ~v8;
  v10 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  v11 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  swift_retain();
  if (v12(v11, 1, v6))
  {
    v13 = *(_DWORD *)(v7 + 84);
    v14 = *(_QWORD *)(v7 + 64);
    if (v13)
      v15 = *(_QWORD *)(v7 + 64);
    else
      v15 = v14 + 1;
    memcpy(v10, v11, v15);
    v16 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  }
  else
  {
    v16 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
    v16(v10, v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
    v13 = *(_DWORD *)(v7 + 84);
    v14 = *(_QWORD *)(v7 + 64);
  }
  v17 = v14 + ((v8 + 16) & v9);
  if (!v13)
    ++v17;
  v16((void *)(((unint64_t)a1 + v8 + v17) & v9), (const void *)(((unint64_t)a2 + v8 + v17) & v9), v6);
  return a1;
}

_QWORD *sub_23E0A72F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  size_t v16;
  uint64_t v17;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)v6;
  swift_retain();
  swift_release();
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = ~v10;
  v12 = (void *)(((unint64_t)v7 + v10 + 8) & ~v10);
  v13 = (void *)((v10 + 8 + v6) & ~v10);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  LODWORD(v7) = v14(v12, 1, v8);
  v15 = v14(v13, 1, v8);
  if ((_DWORD)v7)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v12, v13, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
LABEL_6:
    if (*(_DWORD *)(v9 + 84))
      v16 = *(_QWORD *)(v9 + 64);
    else
      v16 = *(_QWORD *)(v9 + 64) + 1;
    memcpy(v12, v13, v16);
    goto LABEL_10;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    goto LABEL_6;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v12, v13, v8);
LABEL_10:
  v17 = *(_QWORD *)(v9 + 64) + ((v10 + 16) & v11);
  if (!*(_DWORD *)(v9 + 84))
    ++v17;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 24))(((unint64_t)a1 + v10 + v17) & v11, ((unint64_t)a2 + v10 + v17) & v11, v8);
  return a1;
}

_QWORD *sub_23E0A7484(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  int v12;
  uint64_t v13;
  size_t v14;
  void (*v15)(void *, const void *, uint64_t);
  uint64_t v16;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ~v8;
  v10 = (void *)(((unint64_t)v4 + v8 + 8) & ~v8);
  v11 = (const void *)(((unint64_t)v5 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    v12 = *(_DWORD *)(v7 + 84);
    v13 = *(_QWORD *)(v7 + 64);
    if (v12)
      v14 = *(_QWORD *)(v7 + 64);
    else
      v14 = v13 + 1;
    memcpy(v10, v11, v14);
    v15 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  }
  else
  {
    v15 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
    v15(v10, v11, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
    v12 = *(_DWORD *)(v7 + 84);
    v13 = *(_QWORD *)(v7 + 64);
  }
  v16 = v13 + ((v8 + 16) & v9);
  if (!v12)
    ++v16;
  v15((void *)(((unint64_t)a1 + v8 + v16) & v9), (const void *)(((unint64_t)a2 + v8 + v16) & v9), v6);
  return a1;
}

_QWORD *sub_23E0A75BC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  size_t v17;
  uint64_t v18;

  v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v8 = v6 & 0xFFFFFFFFFFFFFFF8;
  *v7 = *(_QWORD *)(v6 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = ~v11;
  v13 = (void *)(((unint64_t)v7 + v11 + 8) & ~v11);
  v14 = (void *)((v11 + 8 + v8) & ~v11);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v8) = v15(v13, 1, v9);
  v16 = v15(v14, 1, v9);
  if ((_DWORD)v8)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v13, v14, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
      goto LABEL_10;
    }
LABEL_6:
    if (*(_DWORD *)(v10 + 84))
      v17 = *(_QWORD *)(v10 + 64);
    else
      v17 = *(_QWORD *)(v10 + 64) + 1;
    memcpy(v13, v14, v17);
    goto LABEL_10;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v13, v9);
    goto LABEL_6;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v13, v14, v9);
LABEL_10:
  v18 = *(_QWORD *)(v10 + 64) + ((v11 + 16) & v12);
  if (!*(_DWORD *)(v10 + 84))
    ++v18;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 40))(((unint64_t)a1 + v11 + v18) & v12, ((unint64_t)a2 + v11 + v18) & v12, v9);
  return a1;
}

uint64_t sub_23E0A7740(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v18;
  int v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unsigned int v23;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5 <= v7)
    v8 = v7;
  else
    v8 = *(_DWORD *)(v4 + 84);
  v9 = *(_QWORD *)(v4 + 64);
  if (v5)
    v10 = *(_QWORD *)(v4 + 64);
  else
    v10 = v9 + 1;
  if (!a2)
    return 0;
  v11 = *(unsigned __int8 *)(v4 + 80);
  v12 = v10 + ((v11 + 16) & ~v11) + v11;
  v13 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_31;
  v14 = (v12 & ~v11) + v9;
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v18 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_31;
      goto LABEL_24;
    }
    if (v18 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_31;
      goto LABEL_24;
    }
    if (v18 < 2)
    {
LABEL_31:
      v20 = ~v11;
      if (v7 < v5)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((v12 + a1) & v20);
      v21 = (uint64_t *)((a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((v6 & 0x80000000) != 0)
      {
        v23 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)v21 + v11 + 8) & v20);
        if (v23 >= 2)
          return v23 - 1;
        else
          return 0;
      }
      else
      {
        v22 = *v21;
        if ((unint64_t)*v21 >= 0xFFFFFFFF)
          LODWORD(v22) = -1;
        return (v22 + 1);
      }
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_31;
LABEL_24:
  v19 = (v16 - 1) << v15;
  if (v14 > 3)
    v19 = 0;
  if ((_DWORD)v14)
  {
    if (v14 > 3)
      LODWORD(v14) = 4;
    __asm { BR              X12 }
  }
  return v8 + v19 + 1;
}

void sub_23E0A78F4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  BOOL v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  if (v8 <= v10)
    v11 = v10;
  else
    v11 = *(_DWORD *)(v7 + 84);
  v12 = *(_QWORD *)(v7 + 64);
  if (v8)
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = v12 + 1;
  v14 = ((((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
        + v13
        + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
      + v12;
  v15 = a3 >= v11;
  v16 = a3 - v11;
  if (v16 != 0 && v15)
  {
    if (v14 > 3)
    {
      v6 = 1u;
      if (v11 < a2)
        goto LABEL_23;
      goto LABEL_17;
    }
    v17 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v17))
    {
      v6 = 4u;
      if (v11 < a2)
      {
LABEL_23:
        v18 = ~v11 + a2;
        if (v14 < 4)
        {
          if ((_DWORD)v14)
          {
            v19 = v18 & ~(-1 << (8 * v14));
            bzero(a1, v14);
            if ((_DWORD)v14 == 3)
            {
              *a1 = v19;
              *((_BYTE *)a1 + 2) = BYTE2(v19);
            }
            else if ((_DWORD)v14 == 2)
            {
              *a1 = v19;
            }
            else
            {
              *(_BYTE *)a1 = v19;
            }
          }
        }
        else
        {
          bzero(a1, v14);
          *(_DWORD *)a1 = v18;
        }
        __asm { BR              X10 }
      }
LABEL_17:
      __asm { BR              X0 }
    }
    if (v17 >= 0x100)
      v6 = 2;
    else
      v6 = v17 > 1;
  }
  if (v11 < a2)
    goto LABEL_23;
  goto LABEL_17;
}

uint64_t sub_23E0A7C2C()
{
  return 16;
}

__n128 sub_23E0A7C38(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23E0A7C44()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23E0A7CB4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23E0A7D24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a1;
  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24F90);
  v31 = *(_QWORD *)(v3 - 8);
  v32 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v30 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21078);
  v5 = MEMORY[0x24BDAC7A8](v29);
  v28 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v28 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24F88);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24F80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v2 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_device;
  v18 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = (_QWORD *)(v2 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_controlModules);
  v19[1] = 0;
  v19[2] = 0;
  *v19 = 0;
  v20 = v2 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel__decorationButtons;
  v35 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21760);
  sub_23E135C64();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v20, v16, v13);
  v21 = v2 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel__bottomViewController;
  v35 = 0;
  v36 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24DC8);
  sub_23E135C64();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v21, v12, v9);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_allowsSwipeDownDismissal) = 1;
  v22 = OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_controlViewFrames;
  *(_QWORD *)(v2 + v22) = sub_23E0ECCC4(MEMORY[0x24BEE4AF8]);
  v23 = v2 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel__overrideHeaderConfig;
  v24 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v8, 1, 1, v24);
  sub_23DF89C1C((uint64_t)v8, v28, &qword_256D21078);
  v25 = v30;
  sub_23E135C64();
  sub_23DF89C7C((uint64_t)v8, &qword_256D21078);
  (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v23, v25, v32);
  swift_beginAccess();
  v26 = v33;
  sub_23E0A8858(v33, v17);
  swift_endAccess();
  swift_getKeyPath();
  swift_getKeyPath();
  v35 = v34;
  swift_retain();
  sub_23E135C88();
  sub_23DF89C7C(v26, &qword_256D1D5A8);
  return v2;
}

uint64_t sub_23E0A8070()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  return swift_release();
}

uint64_t sub_23E0A80D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21078);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v17 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17) != 1)
    return sub_23DF89384((uint64_t)v16, (uint64_t)a1, type metadata accessor for AccessoryControlsHeaderConfig);
  sub_23DF89C7C((uint64_t)v16, &qword_256D21078);
  v18 = v2 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_device;
  swift_beginAccess();
  sub_23DF89C1C(v18, (uint64_t)v6, &qword_256D1D5A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23DF89C7C((uint64_t)v6, &qword_256D1D5A8);
    v19 = (char *)a1 + *(int *)(v17 + 24);
    v20 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a1 = 0;
    a1[1] = 0xE000000000000000;
    a1[2] = 0;
    a1[3] = 0;
  }
  else
  {
    sub_23DF89384((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for Device);
    sub_23E0A87C8((uint64_t)v13, (uint64_t)v10);
    sub_23E0E49E4((uint64_t)v10, a1);
    return sub_23E0A880C((uint64_t)v13);
  }
  return result;
}

uint64_t sub_23E0A8348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_23DF89C7C(v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_device, &qword_256D1D5A8);
  sub_23DFA66CC(*(_QWORD *)(v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_controlModules), *(_QWORD *)(v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_controlModules + 8));
  v1 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel__decorationButtons;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24F80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel__bottomViewController;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24F88);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v5 = v0 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel__overrideHeaderConfig;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24F90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t sub_23E0A8434()
{
  return type metadata accessor for AccessoryControlsModel();
}

uint64_t type metadata accessor for AccessoryControlsModel()
{
  uint64_t result;

  result = qword_256D24DA0;
  if (!qword_256D24DA0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23E0A8478()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_23E0A8584();
  if (v0 <= 0x3F)
  {
    sub_23E0A85D8(319, &qword_256D24DB8, &qword_256D21760);
    if (v1 <= 0x3F)
    {
      sub_23E0A85D8(319, &qword_256D24DC0, &qword_256D24DC8);
      if (v2 <= 0x3F)
      {
        sub_23E0A85D8(319, qword_256D24DD0, &qword_256D21078);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

void sub_23E0A8584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D24DB0)
  {
    type metadata accessor for Device();
    v0 = sub_23E1374A0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256D24DB0);
  }
}

void sub_23E0A85D8(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_23E135CA0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_23E0A8624@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for AccessoryControlsModel();
  result = sub_23E135C40();
  *a1 = result;
  return result;
}

uint64_t sub_23E0A8660()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  return swift_release();
}

uint64_t sub_23E0A86CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21078);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v9 - v6;
  sub_23DF89C1C(a1, (uint64_t)&v9 - v6, &qword_256D21078);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23DF89C1C((uint64_t)v7, (uint64_t)v5, &qword_256D21078);
  swift_retain();
  sub_23E135C88();
  return sub_23DF89C7C((uint64_t)v7, &qword_256D21078);
}

uint64_t sub_23E0A87C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0A880C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Device();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E0A8858(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

BOOL sub_23E0A88A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int16 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int16 *v14;
  char *v15;
  void (*v16)(unsigned __int16 *, uint64_t, uint64_t);
  uint64_t (*v17)(unsigned __int16 *, uint64_t);
  int v18;
  int v19;
  int v20;
  void (*v21)(unsigned __int16 *, uint64_t);
  BOOL v22;
  int v23;
  int v24;
  void (*v25)(unsigned __int16 *, uint64_t);
  int v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = sub_23E135BD4();
  v38 = *(_QWORD *)(v3 - 8);
  v39 = v3;
  v4 = MEMORY[0x24BDAC7A8](v3);
  v36 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)&v34 - v6;
  v7 = sub_23E135328();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (unsigned __int16 *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F790);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (unsigned __int16 *)((char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = (char *)v14 + *(int *)(v12 + 48);
  v16 = *(void (**)(unsigned __int16 *, uint64_t, uint64_t))(v8 + 16);
  v16(v14, v1, v7);
  v37 = a1;
  v16((unsigned __int16 *)v15, a1, v7);
  v17 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v8 + 88);
  v18 = v17(v14, v7);
  v19 = *MEMORY[0x24BE4DC90];
  if (v18 != *MEMORY[0x24BE4DC90])
  {
    v23 = v17((unsigned __int16 *)v15, v7);
    v24 = v23;
    if (v23 == *MEMORY[0x24BE4DC88])
    {
      v16(v10, (uint64_t)v15, v7);
      v25 = *(void (**)(unsigned __int16 *, uint64_t))(v8 + 96);
      v25(v10, v7);
      v26 = *v10;
      if (v17(v14, v7) == v24)
      {
        v25(v14, v7);
        v22 = *v14 == v26;
        (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v7);
        return v22;
      }
    }
    else if (v23 == v19)
    {
      v27 = *(void (**)(char *, uint64_t))(v8 + 8);
      v27(v15, v7);
      v27((char *)v14, v7);
      return 0;
    }
    v28 = v35;
    sub_23E0AA750(v35);
    v29 = v36;
    sub_23E0AA750(v36);
    v22 = sub_23E0AA2E8();
    v30 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v31 = v29;
    v32 = v39;
    v30(v31, v39);
    v30(v28, v32);
    sub_23DF89C7C((uint64_t)v14, &qword_256D1F790);
    return v22;
  }
  v20 = v18;
  v21 = *(void (**)(unsigned __int16 *, uint64_t))(v8 + 8);
  v21(v14, v7);
  v22 = v17((unsigned __int16 *)v15, v7) == v20;
  v21((unsigned __int16 *)v15, v7);
  return v22;
}

uint64_t LightbulbColor.toHSV.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int16 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  __int16 v35;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v2 = MEMORY[0x24BDAC7A8](v1);
  v34 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v34 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25028);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E135BD4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v34 - v14;
  v16 = sub_23E135328();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (unsigned __int16 *)((char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(unsigned __int16 *, uint64_t, uint64_t))(v17 + 16))(v19, v0, v16);
  v20 = (*(uint64_t (**)(unsigned __int16 *, uint64_t))(v17 + 88))(v19, v16);
  if (v20 == *MEMORY[0x24BE4DCB0])
  {
    (*(void (**)(unsigned __int16 *, uint64_t))(v17 + 96))(v19, v16);
    (*(void (**)(char *, unsigned __int16 *, uint64_t))(v10 + 32))(v15, v19, v9);
    sub_23E0A97B8();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    return v22;
  }
  if (v20 == *MEMORY[0x24BE4DCA8])
  {
    (*(void (**)(unsigned __int16 *, uint64_t))(v17 + 96))(v19, v16);
    return *(_QWORD *)v19;
  }
  if (v20 == *MEMORY[0x24BE4DC88])
  {
    (*(void (**)(unsigned __int16 *, uint64_t))(v17 + 96))(v19, v16);
    v24 = *v19;
    if (v24 <= 1)
      v25 = 1;
    else
      v25 = *v19;
    sub_23E0AAF54(0xF4240 / v25, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
      sub_23E0A97B8();
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      return v22;
    }
    sub_23DF89C7C((uint64_t)v8, &qword_256D25028);
    if (qword_256D1D270 != -1)
      swift_once();
    v26 = sub_23E135C10();
    __swift_project_value_buffer(v26, (uint64_t)qword_256D1EAC0);
    v27 = sub_23E135BF8();
    v28 = sub_23E137368();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 33685760;
      v35 = v24;
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v27, v28, "Cannot convert color temperature:%{public}hu to a HSV value", v29, 6u);
      MEMORY[0x24264C628](v29, -1, -1);
    }

    return 0;
  }
  if (v20 == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(unsigned __int16 *, uint64_t))(v17 + 96))(v19, v16);
    v30 = swift_projectBox();
    sub_23DFE1920(v30, (uint64_t)v5);
    v31 = v34;
    sub_23DFE1920((uint64_t)v5, v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v31, 1, v16) != 1)
    {
      v23 = LightbulbColor.toHSV.getter();
      sub_23DF89C7C((uint64_t)v5, &qword_256D1D7F0);
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v31, v16);
      swift_release();
      return v23;
    }
    sub_23DF89C7C((uint64_t)v5, &qword_256D1D7F0);
    sub_23DF89C7C(v31, &qword_256D1D7F0);
    swift_release();
    return 0;
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t LightbulbColor.toTemperature.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  int v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(char *, uint64_t);
  int v28;
  unsigned __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  uint64_t result;
  uint64_t v38;
  unsigned int v39;
  _QWORD v40[2];
  uint64_t v41;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v40 - v6;
  v8 = sub_23E135BD4();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)v40 - v13;
  v15 = sub_23E135328();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (_QWORD *)((char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 16))(v18, v1, v15);
  v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == *MEMORY[0x24BE4DCB0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v16 + 96))(v18, v15);
    (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v14, v18, v8);
    if (qword_256D1D270 != -1)
      swift_once();
    v20 = sub_23E135C10();
    __swift_project_value_buffer(v20, (uint64_t)qword_256D1EAC0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
    v21 = sub_23E135BF8();
    v22 = sub_23E137368();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v24 = swift_slowAlloc();
      v41 = v24;
      *(_DWORD *)v23 = 136446210;
      v40[0] = v23 + 4;
      v25 = RGBColor.description.getter();
      v40[1] = sub_23E0AB274(v25, v26, &v41);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      v27 = *(void (**)(char *, uint64_t))(v9 + 8);
      v27(v12, v8);
      _os_log_impl(&dword_23DF71000, v21, v22, "Cannot convert rgb:%{public}s to a Color Temperature value", v23, 0xCu);
      v28 = 1;
      swift_arrayDestroy();
      MEMORY[0x24264C628](v24, -1, -1);
      MEMORY[0x24264C628](v23, -1, -1);

      v27(v14, v8);
      v29 = 0;
      return v29 | (v28 << 16);
    }

    v36 = *(void (**)(char *, uint64_t))(v9 + 8);
    v36(v12, v8);
    v36(v14, v8);
LABEL_13:
    v29 = 0;
    v28 = 1;
    return v29 | (v28 << 16);
  }
  if (v19 == *MEMORY[0x24BE4DCA8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v16 + 96))(v18, v15);
    v31 = *v18;
    v30 = v18[1];
    if (qword_256D1D270 != -1)
      swift_once();
    v32 = sub_23E135C10();
    __swift_project_value_buffer(v32, (uint64_t)qword_256D1EAC0);
    v33 = sub_23E135BF8();
    v34 = sub_23E137368();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      *(_DWORD *)v35 = 134349312;
      v41 = v31;
      sub_23E1374B8();
      *(_WORD *)(v35 + 12) = 2050;
      v41 = v30;
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v33, v34, "Cannot convert hue:%{public}f saturation:%{public}f to a Color Temperature value", (uint8_t *)v35, 0x16u);
      MEMORY[0x24264C628](v35, -1, -1);
    }

    goto LABEL_13;
  }
  if (v19 == *MEMORY[0x24BE4DC88])
  {
    (*(void (**)(uint64_t *, uint64_t))(v16 + 96))(v18, v15);
    v28 = 0;
    v29 = *(_WORD *)v18;
    return v29 | (v28 << 16);
  }
  if (v19 == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(uint64_t *, uint64_t))(v16 + 96))(v18, v15);
    v38 = swift_projectBox();
    sub_23DFE1920(v38, (uint64_t)v7);
    sub_23DFE1920((uint64_t)v7, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) != 1)
    {
      v39 = LightbulbColor.toTemperature.getter();
      v29 = v39;
      v28 = HIWORD(v39) & 1;
      sub_23DF89C7C((uint64_t)v7, &qword_256D1D7F0);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
      swift_release();
      return v29 | (v28 << 16);
    }
    sub_23DF89C7C((uint64_t)v7, &qword_256D1D7F0);
    sub_23DF89C7C((uint64_t)v5, &qword_256D1D7F0);
    swift_release();
    goto LABEL_13;
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

void *LightbulbColor.approximateID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_23E135BD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E135328();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    swift_release();
    return &unk_250EC6560;
  }
  else
  {
    sub_23E0AA750((uint64_t)v4);
    v10 = RGBColor.approximateID.getter();
    v9 = v11;
    (*(void (**)(char *, uint64_t, double))(v2 + 8))(v4, v1, v10);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return (void *)v9;
}

uint64_t sub_23E0A9664(long double a1)
{
  double v1;

  v1 = fmod(a1, 1.0) * 6.0;
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v1 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v1 >= 9.22337204e18)
  {
LABEL_7:
    __break(1u);
    JUMPOUT(0x23E0A97A0);
  }
  return sub_23E135BC8();
}

void sub_23E0A97B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  double v52;
  double v53;
  double v54;
  uint64_t v55;

  v1 = sub_23E135BD4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v55 - v6;
  sub_23E135BB0();
  v9 = v8;
  sub_23E135BA4();
  v11 = v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v12(v7, v0, v1);
  if (v11 <= v9)
  {
    sub_23E135BB0();
    v15 = v14;
    sub_23E135B98();
    v17 = v16;
    v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v7, v1);
    if (v17 <= v15)
    {
      sub_23E135BB0();
      v27 = v31;
      sub_23E135BA4();
      v33 = v32;
      sub_23E135B98();
      if (v33 < v34)
        goto LABEL_10;
LABEL_13:
      sub_23E135B98();
      goto LABEL_14;
    }
  }
  else
  {
    v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v7, v1);
  }
  sub_23E135BA4();
  v19 = v18;
  sub_23E135B98();
  v21 = v20;
  v12(v5, v0, v1);
  if (v21 > v19)
  {
    v13(v5, v1);
    goto LABEL_7;
  }
  sub_23E135BA4();
  v23 = v22;
  sub_23E135BB0();
  v25 = v24;
  v13(v5, v1);
  if (v25 <= v23)
  {
    sub_23E135BA4();
    v27 = v36;
    sub_23E135BB0();
    v38 = v37;
    sub_23E135B98();
    if (v38 < v39)
    {
LABEL_12:
      sub_23E135BB0();
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_7:
  sub_23E135B98();
  v27 = v26;
  sub_23E135BA4();
  v29 = v28;
  sub_23E135BB0();
  if (v29 >= v30)
    goto LABEL_12;
LABEL_10:
  sub_23E135BA4();
LABEL_14:
  v40 = v35;
  v41 = 0.0;
  if (v27 > 0.0)
  {
    v42 = v27 - v40;
    if ((v27 - v40) / v27 != 0.0)
    {
      sub_23E135BB0();
      v44 = v43;
      sub_23E135BA4();
      v46 = (v27 - v45) / v42;
      sub_23E135B98();
      v48 = (v27 - v47) / v42;
      sub_23E135BB0();
      v50 = v49;
      sub_23E135BA4();
      if (v27 == v50)
      {
        if (v40 == v51)
          v41 = v48 + 5.0;
        else
          v41 = 1.0 - v46;
      }
      else
      {
        v52 = (v27 - v44) / v42;
        if (v27 == v51)
        {
          sub_23E135B98();
          if (v40 == v53)
            v41 = v52 + 1.0;
          else
            v41 = 3.0 - v48;
        }
        else
        {
          sub_23E135BB0();
          if (v40 == v54)
            v41 = v46 + 3.0;
          else
            v41 = 5.0 - v52;
        }
      }
    }
  }
  fmod(v41 / 6.0, 1.0);
}

uint64_t LightbulbColor.shortDebugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t result;
  _WORD v30[8];
  _QWORD v31[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v30 - v6;
  v8 = sub_23E135BD4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E135328();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (uint64_t *)((char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v15, v1, v12);
  v16 = (*(uint64_t (**)(uint64_t *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == *MEMORY[0x24BE4DCB0])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, uint64_t *, uint64_t))(v9 + 32))(v11, v15, v8);
    v17 = RGBColor.shortDebugDescription.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v17;
  }
  if (v16 == *MEMORY[0x24BE4DCA8])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    v18 = *v15;
    v19 = v15[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D24308);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_23E138410;
    v21 = MEMORY[0x24BEE13C8];
    v22 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE13C8];
    *(_QWORD *)(v20 + 64) = v22;
    *(_QWORD *)(v20 + 32) = v18;
    *(_QWORD *)(v20 + 96) = v21;
    *(_QWORD *)(v20 + 104) = v22;
    *(_QWORD *)(v20 + 72) = v19;
    return sub_23E13717C();
  }
  if (v16 == *MEMORY[0x24BE4DC88])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    v23 = *(_WORD *)v15;
    v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD16F0]), sel_init);
    sub_23E0AB92C();
    v25 = (void *)sub_23E13741C();
    objc_msgSend(v24, sel_setRoundingIncrement_, v25);

    objc_msgSend(v24, sel_setRoundingMode_, 2);
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_23E137530();
    swift_bridgeObjectRelease();
    strcpy((char *)v31, "Temp: mired(");
    BYTE5(v31[1]) = 0;
    HIWORD(v31[1]) = -5120;
    v30[7] = v23;
    sub_23E1375FC();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    sub_23E1371D0();
    v26 = (void *)sub_23E13732C();
    v27 = objc_msgSend(v24, sel_stringFromNumber_, v26);

    if (v27)
    {
      sub_23E137170();

      sub_23E1371D0();
      swift_bridgeObjectRelease();
      sub_23E1371D0();

      return v31[0];
    }
    __break(1u);
  }
  else if (v16 == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(uint64_t *, uint64_t))(v13 + 96))(v15, v12);
    v28 = swift_projectBox();
    sub_23DFE1920(v28, (uint64_t)v7);
    v31[0] = 0;
    v31[1] = 0xE000000000000000;
    sub_23E137530();
    swift_bridgeObjectRelease();
    strcpy((char *)v31, "AdaptiveLight:");
    HIBYTE(v31[1]) = -18;
    sub_23DFE1920((uint64_t)v7, (uint64_t)v5);
    sub_23E137188();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    v17 = v31[0];
    sub_23DF89C7C((uint64_t)v7, &qword_256D1D7F0);
    swift_release();
    return v17;
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t sub_23E0A9F3C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v2 = sub_23E136BD0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E135BD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E135328();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  if ((*(unsigned int (**)(char *, uint64_t))(v11 + 88))(v13, v10) == *MEMORY[0x24BE4DCA8])
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    v14 = sub_23E136BE8();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  }
  else
  {
    v23 = v6;
    sub_23E0AA750((uint64_t)v9);
    (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3C28], v2);
    sub_23E135BB0();
    v16 = v15;
    sub_23E135BA4();
    v18 = v17;
    sub_23E135B98();
    v14 = MEMORY[0x24264B560](v5, v16, v18, v19, 1.0);
    v20 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v20(a1, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v23);
    v20((uint64_t)v13, v10);
  }
  return v14;
}

uint64_t RGBColor.description.getter()
{
  sub_23E137530();
  swift_bridgeObjectRelease();
  sub_23E135BB0();
  sub_23E1372FC();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  sub_23E1371D0();
  sub_23E135BA4();
  sub_23E1372FC();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  sub_23E1371D0();
  sub_23E135B98();
  sub_23E1372FC();
  sub_23E1371D0();
  swift_bridgeObjectRelease();
  return 0x726F6C6F43424752;
}

uint64_t RGBColor.shortDebugDescription.getter()
{
  uint64_t v0;
  double v1;
  double v2;
  uint64_t v3;
  unint64_t v4;
  double v5;
  double v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24308);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E13C150;
  sub_23E135BB0();
  v2 = v1 * 255.0;
  v3 = MEMORY[0x24BEE50B0];
  *(_QWORD *)(v0 + 56) = MEMORY[0x24BEE50B0];
  v4 = sub_23E0AB968();
  *(_QWORD *)(v0 + 64) = v4;
  *(double *)(v0 + 32) = v2;
  sub_23E135BA4();
  *(_QWORD *)(v0 + 96) = v3;
  *(_QWORD *)(v0 + 104) = v4;
  *(double *)(v0 + 72) = v5 * 255.0;
  sub_23E135B98();
  *(_QWORD *)(v0 + 136) = v3;
  *(_QWORD *)(v0 + 144) = v4;
  *(double *)(v0 + 112) = v6 * 255.0;
  return sub_23E13717C();
}

BOOL sub_23E0AA2E8()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;

  sub_23E135BB0();
  v1 = v0;
  sub_23E135BB0();
  if (vabdd_f64(v1, v2) >= 0.02)
    return 0;
  sub_23E135BA4();
  v4 = v3;
  sub_23E135BA4();
  if (vabdd_f64(v4, v5) >= 0.02)
    return 0;
  sub_23E135B98();
  v7 = v6;
  sub_23E135B98();
  return vabdd_f64(v7, v8) < 0.02;
}

double RGBColor.approximateID.getter()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  uint64_t v6;
  double result;

  sub_23E135BB0();
  v1 = round(v0 * 100.0) / 100.0;
  sub_23E135BA4();
  v3 = round(v2 * 100.0) / 100.0;
  sub_23E135B98();
  v5 = round(v4 * 100.0) / 100.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21FA8);
  v6 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v6 + 16) = xmmword_23E13C150;
  *(double *)(v6 + 32) = v1;
  *(double *)(v6 + 40) = v3;
  *(double *)(v6 + 48) = v5;
  return result;
}

uint64_t sub_23E0AA408(uint64_t a1)
{
  return sub_23E0AA58C(a1, qword_256D24F98);
}

uint64_t static RGBColor.white.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0AA470(&qword_256D1D428, (uint64_t)qword_256D24F98, a1);
}

uint64_t sub_23E0AA43C(uint64_t a1)
{
  return sub_23E0AA58C(a1, qword_256D24FB0);
}

uint64_t static RGBColor.black.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0AA470(&qword_256D1D430, (uint64_t)qword_256D24FB0, a1);
}

uint64_t sub_23E0AA470@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_23E135BD4();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_23E0AA4D8(uint64_t a1)
{
  return sub_23E0AA58C(a1, qword_256D24FC8);
}

uint64_t static RGBColor.red.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0AA470(&qword_256D1D438, (uint64_t)qword_256D24FC8, a1);
}

uint64_t sub_23E0AA50C(uint64_t a1)
{
  return sub_23E0AA58C(a1, qword_256D24FE0);
}

uint64_t static RGBColor.blue.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0AA470(&qword_256D1D440, (uint64_t)qword_256D24FE0, a1);
}

uint64_t sub_23E0AA540(uint64_t a1)
{
  return sub_23E0AA58C(a1, qword_256D24FF8);
}

uint64_t static RGBColor.green.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0AA470(&qword_256D1D448, (uint64_t)qword_256D24FF8, a1);
}

uint64_t sub_23E0AA574(uint64_t a1)
{
  return sub_23E0AA58C(a1, qword_256D25010);
}

uint64_t sub_23E0AA58C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_23E135BD4();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_23E135BE0();
}

uint64_t static RGBColor.yellow.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0AA470(&qword_256D1D450, (uint64_t)qword_256D25010, a1);
}

void *LightbulbColor.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_23E135BD4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E135328();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0, v5);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(char *, uint64_t))(v6 + 96))(v8, v5);
    swift_release();
    return &unk_250EC68C8;
  }
  else
  {
    sub_23E0AA750((uint64_t)v4);
    v9 = sub_23E135BBC();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return (void *)v9;
}

uint64_t sub_23E0AA750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  long double *v18;
  int v19;
  uint64_t result;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  v3 = sub_23E135BD4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v30 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25028);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E135328();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (long double *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(long double *, uint64_t, uint64_t))(v16 + 16))(v18, v1, v15);
  v19 = (*(uint64_t (**)(long double *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == *MEMORY[0x24BE4DCB0])
  {
    (*(void (**)(long double *, uint64_t))(v16 + 96))(v18, v15);
    return (*(uint64_t (**)(uint64_t, long double *, uint64_t))(v4 + 32))(a1, v18, v3);
  }
  else
  {
    v30 = v4;
    v31 = v3;
    v32 = a1;
    if (v19 == *MEMORY[0x24BE4DCA8])
    {
      (*(void (**)(long double *, uint64_t))(v16 + 96))(v18, v15);
      return sub_23E0A9664(*v18);
    }
    else if (v19 == *MEMORY[0x24BE4DC88])
    {
      (*(void (**)(long double *, uint64_t))(v16 + 96))(v18, v15);
      v21 = *(unsigned __int16 *)v18;
      if (v21 <= 1)
        v21 = 1;
      sub_23E0AAF54(0xF4240 / v21, (uint64_t)v14);
      v23 = v30;
      v22 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v14, 1, v31) == 1)
      {
        v24 = v32;
        if (qword_256D1D430 != -1)
          swift_once();
        v25 = __swift_project_value_buffer(v22, (uint64_t)qword_256D24FB0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v25, v22);
        return sub_23DF89C7C((uint64_t)v14, &qword_256D25028);
      }
      else
      {
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v23 + 32))(v32, v14, v22);
      }
    }
    else if (v19 == *MEMORY[0x24BE4DC90])
    {
      (*(void (**)(long double *, uint64_t))(v16 + 96))(v18, v15);
      v26 = swift_projectBox();
      sub_23DFE1920(v26, (uint64_t)v11);
      sub_23DFE1920((uint64_t)v11, (uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v9, 1, v15) == 1)
      {
        sub_23DF89C7C((uint64_t)v9, &qword_256D1D7F0);
        if (qword_256D1D430 != -1)
          swift_once();
        v27 = v31;
        v28 = __swift_project_value_buffer(v31, (uint64_t)qword_256D24FB0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v32, v28, v27);
        sub_23DF89C7C((uint64_t)v11, &qword_256D1D7F0);
      }
      else
      {
        v29 = v33;
        sub_23E0AA750();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v15);
        sub_23DF89C7C((uint64_t)v11, &qword_256D1D7F0);
        (*(void (**)(uint64_t, char *, uint64_t))(v30 + 32))(v32, v29, v31);
      }
      return swift_release();
    }
    else
    {
      result = sub_23E137608();
      __break(1u);
    }
  }
  return result;
}

uint64_t LightbulbColor.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int16 *v15;
  int v16;
  unint64_t v17;
  __int16 v18;
  uint64_t v19;
  uint64_t result;
  _WORD v21[8];
  unint64_t v22;
  unint64_t v23;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v21 - v6;
  v8 = sub_23E135BD4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E135328();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (_WORD *)((char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__int16 *, uint64_t, uint64_t))(v13 + 16))(v15, v1, v12);
  v16 = (*(uint64_t (**)(__int16 *, uint64_t))(v13 + 88))(v15, v12);
  if (v16 == *MEMORY[0x24BE4DCB0])
  {
    (*(void (**)(__int16 *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, __int16 *, uint64_t))(v9 + 32))(v11, v15, v8);
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_23E137530();
    swift_bridgeObjectRelease();
    v22 = 0xD000000000000010;
    v23 = 0x800000023E145790;
    RGBColor.description.getter();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    v17 = v22;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v17;
  }
  if (v16 == *MEMORY[0x24BE4DCA8])
  {
    (*(void (**)(__int16 *, uint64_t))(v13 + 96))(v15, v12);
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_23E137530();
    sub_23E1371D0();
    sub_23E137308();
    sub_23E1371D0();
    sub_23E137308();
    return v22;
  }
  if (v16 == *MEMORY[0x24BE4DC88])
  {
    (*(void (**)(__int16 *, uint64_t))(v13 + 96))(v15, v12);
    v18 = *v15;
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_23E137530();
    swift_bridgeObjectRelease();
    v22 = 0xD00000000000001DLL;
    v23 = 0x800000023E145750;
    v21[7] = v18;
    sub_23E1375FC();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    return v22;
  }
  if (v16 == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(__int16 *, uint64_t))(v13 + 96))(v15, v12);
    v19 = swift_projectBox();
    sub_23DFE1920(v19, (uint64_t)v7);
    v22 = 0;
    v23 = 0xE000000000000000;
    sub_23E137530();
    swift_bridgeObjectRelease();
    v22 = 0xD00000000000001FLL;
    v23 = 0x800000023E145730;
    sub_23DFE1920((uint64_t)v7, (uint64_t)v5);
    sub_23E137188();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    v17 = v22;
    sub_23DF89C7C((uint64_t)v7, &qword_256D1D7F0);
    swift_release();
    return v17;
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t sub_23E0AAF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v9;

  if ((unint64_t)(a1 - 40001) > 0xFFFFFFFFFFFF67A6)
  {
    sub_23E135BC8();
    v9 = sub_23E135BD4();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a2, 0, 1, v9);
  }
  else
  {
    if (qword_256D1D270 != -1)
      swift_once();
    v3 = sub_23E135C10();
    __swift_project_value_buffer(v3, (uint64_t)qword_256D1EAC0);
    v4 = sub_23E135BF8();
    v5 = sub_23E137350();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v6 = 134349056;
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v4, v5, "rgbColorForColorTemperature: Rejecting conversion of %{public}ldK beyond supported bounds.", v6, 0xCu);
      MEMORY[0x24264C628](v6, -1, -1);
    }

    v7 = sub_23E135BD4();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

void *sub_23E0AB190@<X0>(_QWORD *a1@<X8>)
{
  void *result;

  result = LightbulbColor.id.getter();
  *a1 = result;
  return result;
}

uint64_t sub_23E0AB1B8()
{
  double v0;
  double v1;
  double v2;
  double v3;
  double v4;
  double v5;
  double v6;
  _BOOL4 v7;

  sub_23E135BB0();
  v1 = v0;
  sub_23E135BA4();
  v3 = v2;
  sub_23E135B98();
  v5 = v4 * 255.0;
  v6 = (v1 * 255.0 + v3 * 255.0 + v5) / 3.0;
  v7 = v6 >= 216.75;
  if (sqrt(((v5 - v6) * (v5 - v6) + (v1 * 255.0 - v6) * (v1 * 255.0 - v6) + (v3 * 255.0 - v6) * (v3 * 255.0 - v6)) / 3.0) > 20.0)
    v7 = 0;
  return v6 > 242.25 || v7;
}

uint64_t sub_23E0AB274(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_23E0AB344(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_23DF89AD0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_23DF89AD0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_23E0AB344(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_23E1374C4();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_23E0AB4FC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_23E137554();
  if (!v8)
  {
    sub_23E137560();
    __break(1u);
LABEL_17:
    result = sub_23E1375A8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_23E0AB4FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_23E0AB590(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_23E0AB7E0(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_23E0AB7E0(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_23E0AB590(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_23E0AB704(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_23E13753C();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_23E137560();
      __break(1u);
LABEL_10:
      v2 = sub_23E1371DC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_23E1375A8();
    __break(1u);
LABEL_14:
    result = sub_23E137560();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_23E0AB704(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D25038);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_23E0AB768(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_23E137218();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24264BAC4](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

uint64_t sub_23E0AB7E0(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D25038);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_23E1375A8();
  __break(1u);
  return result;
}

unint64_t sub_23E0AB92C()
{
  unint64_t result;

  result = qword_256D20D80;
  if (!qword_256D20D80)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256D20D80);
  }
  return result;
}

unint64_t sub_23E0AB968()
{
  unint64_t result;

  result = qword_256D25030;
  if (!qword_256D25030)
  {
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE5108], MEMORY[0x24BEE50B0]);
    atomic_store(result, (unint64_t *)&qword_256D25030);
  }
  return result;
}

uint64_t sub_23E0AB9B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25040);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Device.Control.Kind(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v31 - v11;
  sub_23E0AE658(a1, (uint64_t)v6);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25048);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v6, 1, v13) == 1)
  {
    result = sub_23DF89C7C((uint64_t)v6, &qword_256D25040);
LABEL_16:
    v30 = 0;
    v28 = 2;
    goto LABEL_17;
  }
  sub_23DF89384((uint64_t)&v6[*(int *)(v13 + 48)], (uint64_t)v12, type metadata accessor for Device.Control.Kind);
  sub_23DF89C7C((uint64_t)v6, &qword_256D1D7E8);
  sub_23DF89384((uint64_t)v12, (uint64_t)v10, type metadata accessor for Device.Control.Kind);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    result = sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control.Kind);
    goto LABEL_16;
  }
  v15 = &v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48)];
  v16 = *v15;
  v17 = v15[1];
  v18 = v15[2];
  v19 = *((unsigned __int16 *)v15 + 2);
  v20 = v15[6];
  v21 = *((unsigned __int16 *)v15 + 4);
  v22 = v15[10];
  result = sub_23DF89C7C((uint64_t)v10, &qword_256D1D5E8);
  v23 = 256;
  if (!v17)
    v23 = 0;
  v24 = v23 | v16;
  if (v18)
    v25 = 0x10000;
  else
    v25 = 0;
  v26 = v24 | v25 | (v19 << 32);
  v27 = 0x1000000000000;
  if (!v20)
    v27 = 0;
  v28 = v26 | v27;
  if (v22)
    v29 = 0x10000;
  else
    v29 = 0;
  v30 = v29 | v21;
LABEL_17:
  *(_QWORD *)a2 = v28;
  *(_WORD *)(a2 + 8) = v30;
  *(_BYTE *)(a2 + 10) = BYTE2(v30);
  return result;
}

uint64_t sub_23E0ABBCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v48 = a2;
  v46 = sub_23E134E9C();
  v11 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E135520();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v41 - v22;
  type metadata accessor for HAPControlSolver.Source();
  sub_23DFB7A04((uint64_t)v23);
  v41 = sub_23E0AFE18(a1);
  v42 = v21;
  v47 = v24;
  v25 = (uint64_t)v21;
  v26 = v13;
  v27 = v46;
  sub_23DF89C1C((uint64_t)v23, v25, &qword_256D1D858);
  v44 = v17;
  v45 = v15;
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v29 = v48;
  v48 = v14;
  v28(v17, v29, v14);
  v30 = *MEMORY[0x24BE4D6A0];
  v43 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 104))(v26, v30, v27);
  sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
  sub_23E13723C();
  sub_23E13723C();
  if (v51 == v49 && v52 == v50)
  {
    swift_bridgeObjectRelease_n();
    v31 = 0x408F400000000000;
  }
  else
  {
    v32 = sub_23E137614();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = 0x408F400000000000;
    if ((v32 & 1) == 0)
      v31 = 0x406F400000000000;
  }
  v34 = v44;
  v33 = v45;
  v35 = (uint64_t)v42;
  v36 = v41;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v27);
  sub_23DF89C7C((uint64_t)v23, &qword_256D1D858);
  sub_23DF89340(v35, a3, &qword_256D1D858);
  v37 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
  v38 = v48;
  *(_QWORD *)(a3 + v37[5]) = v47;
  *(_QWORD *)(a3 + v37[6]) = v36;
  result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(a3 + v37[7], v34, v38);
  *(double *)(a3 + v37[8]) = a4;
  *(double *)(a3 + v37[9]) = a5;
  *(double *)(a3 + v37[10]) = a6;
  v40 = a3 + v37[11];
  *(_QWORD *)v40 = v31;
  *(_BYTE *)(v40 + 8) = 0;
  return result;
}

uint64_t sub_23E0ABED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(unint64_t, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;

  v4 = sub_23E134C80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for Device.Control.Source(0);
  MEMORY[0x24BDAC7A8](v41);
  v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25040);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v39 - v19;
  sub_23E0AE658(a1, (uint64_t)v11);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25048);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v11, 1, v21) == 1)
  {
    sub_23DF89C7C((uint64_t)v11, &qword_256D25040);
    v22 = type metadata accessor for Device.Control(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  else
  {
    v24 = (uint64_t)&v11[*(int *)(v21 + 48)];
    sub_23DF89340((uint64_t)v11, (uint64_t)v20, &qword_256D1D7E8);
    v39 = v14;
    sub_23DF89384(v24, (uint64_t)v14, type metadata accessor for Device.Control.Kind);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
    v25 = a1;
    v26 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_23E138050;
    v28 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
    v40 = v25;
    v28(v27 + v26, v25, v4);
    v29 = sub_23E0E212C(v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *v8 = v29;
    swift_storeEnumTagMultiPayload();
    sub_23DF89C1C((uint64_t)v20, (uint64_t)v18, &qword_256D1D7E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v18, 1, v4) == 1)
    {
      v30 = v42;
      sub_23E134C74();
      sub_23DF89C7C((uint64_t)v20, &qword_256D1D7E8);
      sub_23DF89C7C((uint64_t)v18, &qword_256D1D7E8);
    }
    else
    {
      sub_23DF89C7C((uint64_t)v20, &qword_256D1D7E8);
      v30 = v42;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v42, v18, v4);
    }
    v31 = (int *)type metadata accessor for Device.Control(0);
    sub_23DF89384((uint64_t)v39, a2 + v31[5], type metadata accessor for Device.Control.Kind);
    sub_23DF89384((uint64_t)v8, a2 + v31[6], type metadata accessor for Device.Control.Source);
    v32 = type metadata accessor for HAPControlSolver.Source();
    v33 = *(int *)(v32 + 52);
    v34 = *(_BYTE *)(v40 + *(int *)(v32 + 48));
    v36 = *(_QWORD *)(v40 + v33);
    v35 = *(_QWORD *)(v40 + v33 + 8);
    v37 = (_QWORD *)(a2 + v31[8]);
    v38 = v31[10];
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v30, v4);
    *(_BYTE *)(a2 + v31[7]) = v34;
    *v37 = v36;
    v37[1] = v35;
    *(_WORD *)(a2 + v31[9]) = 1028;
    *(_BYTE *)(a2 + v38) = 12;
    *(_BYTE *)(a2 + v31[11]) = 1;
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v31 - 1) + 56))(a2, 0, 1, v31);
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_23E0AC2E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v26 = a3;
  v27 = a4;
  v28 = a2;
  v29 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E1359AC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for HAPControlSolver.Source();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v15, &qword_256D21B40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    v20 = &qword_256D21B40;
    v21 = (uint64_t)v15;
LABEL_5:
    sub_23DF89C7C(v21, v20);
    v22 = type metadata accessor for Device.Control(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v29, 1, 1, v22);
  }
  sub_23DF89384((uint64_t)v15, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  sub_23DF89C1C(v28, (uint64_t)v8, &qword_256D1D530);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_23DF73E54((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v20 = &qword_256D1D530;
    v21 = (uint64_t)v8;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  v24 = v29;
  sub_23E0AC79C((uint64_t)v19, (uint64_t)v12, v26, v27, v29);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_23DF73E54((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v25 = type metadata accessor for Device.Control(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
}

uint64_t sub_23E0AC544@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v24 = a2;
  v25 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E1359AC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21B40);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for HAPControlSolver.Source();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v13, &qword_256D21B40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    v18 = &qword_256D21B40;
    v19 = (uint64_t)v13;
LABEL_5:
    sub_23DF89C7C(v19, v18);
    v20 = type metadata accessor for Device.Control(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v25, 1, 1, v20);
  }
  sub_23DF89384((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  sub_23DF89C1C(v24, (uint64_t)v6, &qword_256D1D530);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_23DF73E54((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v18 = &qword_256D1D530;
    v19 = (uint64_t)v6;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  v22 = v25;
  sub_23E0AD408((uint64_t)v17, v25);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_23DF73E54((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v23 = type metadata accessor for Device.Control(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
}

uint64_t sub_23E0AC79C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double v37;
  char v38;
  void (*v39)(char *, uint64_t);
  BOOL v40;
  uint64_t v41;
  double v42;
  void (*v43)(_QWORD);
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  double *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char v102;
  double v103;
  double *v104;
  uint64_t v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v120;
  void (*v121)(char *, uint64_t);
  unsigned int v122;
  uint64_t v123;
  void (*v124)(double *, _QWORD, uint64_t);
  char *v125;
  uint64_t v126;
  double *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void (*v133)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  __int128 v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;

  v139 = a4;
  v142 = a3;
  v148 = a5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v7);
  v143 = (uint64_t)&v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v147 = type metadata accessor for Device.Control.Source(0);
  MEMORY[0x24BDAC7A8](v147);
  v150 = (uint64_t *)((char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v136 = sub_23E135520();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x24BDAC7A8](v136);
  v134 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v11);
  v154 = (uint64_t)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v13);
  v140 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_23E135B74();
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x24BDAC7A8](v131);
  v129 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v156 = sub_23E1359AC();
  v151 = *(_QWORD *)(v156 - 8);
  v16 = MEMORY[0x24BDAC7A8](v156);
  v145 = (char *)&v120 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v137 = (char *)&v120 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v19);
  *(_QWORD *)&v138 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = sub_23E134C80();
  v153 = *(_QWORD *)(v157 - 8);
  MEMORY[0x24BDAC7A8](v157);
  v152 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = sub_23E135958();
  v141 = *(_QWORD *)(v146 - 8);
  MEMORY[0x24BDAC7A8](v146);
  v23 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = sub_23E13534C();
  v24 = *(_QWORD *)(v149 - 8);
  v25 = MEMORY[0x24BDAC7A8](v149);
  v127 = (double *)((char *)&v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v25);
  v28 = (double *)((char *)&v120 - v27);
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v120 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = sub_23E1356DC();
  v33 = *(_QWORD *)(v32 - 8);
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v120 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E13597C();
  v144 = type metadata accessor for HAPControlSolver.Source();
  v36 = *(int *)(v144 + 68);
  v155 = a1;
  v123 = a1 + v36;
  v37 = COERCE_DOUBLE(sub_23E135AC0());
  LOBYTE(a1) = v38;
  v39 = *(void (**)(char *, uint64_t))(v33 + 8);
  v125 = v35;
  v126 = v32;
  v121 = v39;
  v39(v35, v32);
  v40 = (a1 & 1) == 0;
  v41 = a2;
  if (v40)
    v42 = v37;
  else
    v42 = 0.0;
  *v28 = v42;
  v43 = *(void (**)(_QWORD))(v24 + 104);
  v122 = *MEMORY[0x24BE4DD08];
  v44 = v149;
  v124 = (void (*)(double *, _QWORD, uint64_t))v43;
  v43(v28);
  sub_23E135964();
  v45 = sub_23E13594C();
  v46 = v23;
  v47 = v156;
  (*(void (**)(char *, uint64_t))(v141 + 8))(v46, v146);
  v128 = v24;
  v48 = v28;
  v49 = v137;
  v50 = v157;
  v51 = v153;
  (*(void (**)(char *, double *, uint64_t))(v24 + 32))(v31, v48, v44);
  v52 = type metadata accessor for Device.Control.IncrementalState(0);
  v31[*(int *)(v52 + 20)] = v45 & 1;
  v132 = *(_QWORD *)(v52 - 8);
  v53 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v132 + 56);
  v146 = (uint64_t)v31;
  v54 = v31;
  v55 = v151;
  v133 = v53;
  v53((uint64_t)v54, 0, 1, v52);
  v56 = v138;
  sub_23DF89C1C(v139, v138, &qword_256D1D7E8);
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v49, v41, v47);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v56, 1, v50) == 1)
  {
    sub_23E135988();
    v57 = *(void (**)(char *, uint64_t))(v55 + 8);
    v57(v49, v47);
    sub_23DF89C7C(v56, &qword_256D1D7E8);
  }
  else
  {
    v57 = *(void (**)(char *, uint64_t))(v55 + 8);
    v57(v49, v47);
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v152, v56, v50);
  }
  v58 = (uint64_t)v140;
  sub_23E1359A0();
  v59 = sub_23E135B8C();
  v60 = *(_QWORD *)(v59 - 8);
  v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59);
  v62 = v155;
  v141 = v52;
  v137 = (char *)v57;
  if (v61 == 1)
  {
    sub_23DF89C7C(v58, &qword_256D1F8F0);
  }
  else
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v60 + 88))(v58, v59) == *MEMORY[0x24BE4EA90])
    {
      (*(void (**)(uint64_t, uint64_t))(v60 + 96))(v58, v59);
      v63 = v130;
      v64 = v129;
      v65 = v131;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v129, v58, v131);
      sub_23E135B50();
      v67 = v66;
      sub_23E135B44();
      v69 = v68;
      sub_23E135B68();
      v71 = v70;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v65);
      goto LABEL_13;
    }
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
  }
  v67 = 0.0;
  v71 = 1.0;
  v69 = 100.0;
LABEL_13:
  v72 = v136;
  v73 = v135;
  v74 = (uint64_t)v134;
  v75 = v157;
  (*(void (**)(char *, _QWORD, uint64_t))(v135 + 104))(v134, *MEMORY[0x24BE4DF18], v136);
  sub_23E0ABBCC(v62, v74, v154, v67, v69, v71);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v72);
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
  v76 = *(int *)(v136 + 48);
  v77 = v150;
  sub_23E13597C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v78 = *(unsigned __int8 *)(v51 + 80);
  v79 = (v78 + 32) & ~v78;
  v140 = (char *)(v79 + *(_QWORD *)(v51 + 72));
  v139 = v78 | 7;
  v80 = swift_allocObject();
  v138 = xmmword_23E138050;
  *(_OWORD *)(v80 + 16) = xmmword_23E138050;
  v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
  v81(v80 + v79, v62, v75);
  v82 = sub_23E0E212C(v80);
  v135 = v41;
  v83 = v75;
  v84 = v82;
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(uint64_t *)((char *)v77 + v76) = v84;
  swift_storeEnumTagMultiPayload();
  v85 = v143;
  sub_23DF89C1C(v142, v143, &qword_256D1D530);
  v86 = v151;
  v87 = v156;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v85, 1, v156) == 1)
  {
    sub_23DF89C7C(v85, &qword_256D1D530);
    v88 = v146;
    v89 = v141;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 32))(v145, v85, v87);
    v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D620);
    v151 = swift_allocBox();
    v92 = v91;
    v143 = v91 + *(int *)(v90 + 48);
    v93 = v136;
    v142 = *(int *)(v136 + 48);
    sub_23E13597C();
    v94 = swift_allocObject();
    *(_OWORD *)(v94 + 16) = v138;
    v81(v94 + v79, v62, v83);
    v95 = sub_23E0E212C(v94);
    swift_setDeallocating();
    v77 = v150;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(_QWORD *)(v92 + v142) = v95;
    swift_storeEnumTagMultiPayload();
    v96 = *(int *)(v93 + 48);
    v97 = v143;
    sub_23E13597C();
    v98 = swift_allocObject();
    *(_OWORD *)(v98 + 16) = v138;
    v81(v98 + v79, v155, v83);
    v99 = sub_23E0E212C(v98);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_23DF73E54((uint64_t)v77, type metadata accessor for Device.Control.Source);
    *(_QWORD *)(v97 + v96) = v99;
    swift_storeEnumTagMultiPayload();
    *v77 = v151;
    swift_storeEnumTagMultiPayload();
    v88 = v146;
    v89 = v141;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v132 + 48))(v146, 1, v141))
    {
      ((void (*)(char *, uint64_t))v137)(v145, v156);
    }
    else
    {
      v100 = v125;
      v101 = v145;
      sub_23E13597C();
      v102 = sub_23E135AA8();
      v121(v100, v126);
      ((void (*)(char *, uint64_t))v137)(v101, v156);
      v103 = 0.0;
      if ((v102 & 1) != 0)
        v103 = v42;
      v104 = v127;
      *v127 = v103;
      v105 = v149;
      v124(v104, v122, v149);
      (*(void (**)(uint64_t, double *, uint64_t))(v128 + 40))(v88, v104, v105);
    }
    v62 = v155;
  }
  v106 = v144;
  if ((*(_BYTE *)(v62 + *(int *)(v144 + 40)) & 1) == 0)
  {
    sub_23DF89C7C(v88, &qword_256D1D5D8);
    v133(v88, 1, 1, v89);
  }
  v107 = (int *)type metadata accessor for Device.Control(0);
  v108 = v148;
  v109 = v148 + v107[5];
  v110 = v109 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
  sub_23DF89C1C(v88, v109, &qword_256D1D5D8);
  sub_23DF89384(v154, v110, type metadata accessor for Device.Control.IncrementalConfig);
  type metadata accessor for Device.Control.Kind(0);
  swift_storeEnumTagMultiPayload();
  sub_23DF89384((uint64_t)v77, v108 + v107[6], type metadata accessor for Device.Control.Source);
  v111 = *(int *)(v106 + 52);
  v112 = *(_BYTE *)(v62 + *(int *)(v106 + 48));
  v113 = v62 + v111;
  v115 = *(_QWORD *)(v62 + v111);
  v114 = *(_QWORD *)(v113 + 8);
  v116 = v88;
  v117 = (_QWORD *)(v108 + v107[8]);
  v118 = v107[10];
  (*(void (**)(uint64_t, char *, uint64_t))(v153 + 32))(v108, v152, v157);
  *(_BYTE *)(v108 + v107[7]) = v112;
  *v117 = v115;
  v117[1] = v114;
  *(_WORD *)(v108 + v107[9]) = 1028;
  *(_BYTE *)(v108 + v118) = 12;
  *(_BYTE *)(v108 + v107[11]) = 1;
  swift_bridgeObjectRetain();
  return sub_23DF89C7C(v116, &qword_256D1D5D8);
}

uint64_t sub_23E0AD408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int *v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;

  v37 = a2;
  v38 = type metadata accessor for Device.Control.Source(0);
  MEMORY[0x24BDAC7A8](v38);
  v42 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v35);
  v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23E134C80();
  v36 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v40 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E1356DC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E13597C();
  v16 = (int *)type metadata accessor for HAPControlSolver.Source();
  v17 = sub_23E135AA8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  v18 = v17 & 1;
  sub_23DFB7A04((uint64_t)v11);
  v19 = sub_23E134E90();
  sub_23DF89C1C((uint64_t)v11, (uint64_t)v8, &qword_256D1D858);
  type metadata accessor for ControlTextModifier.Config(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v8[*(int *)(v6 + 20)] = v19;
  if (!*(_BYTE *)(a1 + v16[10]))
    v18 = 2;
  swift_retain();
  sub_23E135988();
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
  v21 = (uint64_t)&v39[*(int *)(v20 + 48)];
  *v39 = v18;
  sub_23DF73E10((uint64_t)v8, v21, type metadata accessor for Device.Control.BinaryViewConfig);
  swift_storeEnumTagMultiPayload();
  v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650) + 48);
  sub_23E13597C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v22 = v36;
  v23 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_23E138050;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 16))(v24 + v23, a1, v41);
  v25 = sub_23E0E212C(v24);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_release();
  sub_23DF73E54((uint64_t)v8, type metadata accessor for Device.Control.BinaryViewConfig);
  sub_23DF89C7C((uint64_t)v11, &qword_256D1D858);
  v26 = (uint64_t)v42;
  *(_QWORD *)&v42[v35] = v25;
  swift_storeEnumTagMultiPayload();
  LOBYTE(v23) = *(_BYTE *)(a1 + v16[12]);
  v27 = (uint64_t *)(a1 + v16[13]);
  v29 = *v27;
  v28 = v27[1];
  v30 = (int *)type metadata accessor for Device.Control(0);
  v31 = v37;
  v32 = (_QWORD *)(v37 + v30[8]);
  v33 = v30[10];
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v37, v40, v41);
  sub_23DF89384((uint64_t)v39, v31 + v30[5], type metadata accessor for Device.Control.Kind);
  sub_23DF89384(v26, v31 + v30[6], type metadata accessor for Device.Control.Source);
  *(_BYTE *)(v31 + v30[7]) = v23;
  *v32 = v29;
  v32[1] = v28;
  *(_WORD *)(v31 + v30[9]) = 1027;
  *(_BYTE *)(v31 + v33) = 12;
  *(_BYTE *)(v31 + v30[11]) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E0AD840@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  char v21;
  char v22;
  void (*v23)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  _QWORD *v33;
  uint64_t v34;
  _BYTE v36[12];
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;

  v45 = a1;
  v41 = type metadata accessor for Device.Control.Source(0);
  MEMORY[0x24BDAC7A8](v41);
  v42 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v39 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v39);
  v9 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_23E1356DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v36[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = sub_23E134C80();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v44 = &v36[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v19 = &v36[-v18];
  v38 = *(_QWORD *)a3;
  v37 = *(unsigned __int8 *)(a3 + 8);
  sub_23E135988();
  v40 = a2;
  sub_23E13597C();
  v43 = type metadata accessor for HAPControlSolver.Source();
  v20 = sub_23E135A9C();
  LOBYTE(a3) = v21;
  (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  if ((a3 & 1) != 0 || (v45[*(int *)(v43 + 40)] & 1) == 0)
  {
    v20 = 0;
    v22 = 1;
  }
  else
  {
    v22 = 0;
  }
  v23 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v15 + 16);
  v23(v44, v19, v14);
  *(_QWORD *)v9 = v20;
  v9[8] = v22;
  *((_QWORD *)v9 + 2) = v38;
  v9[24] = v37;
  swift_storeEnumTagMultiPayload();
  v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650) + 48);
  swift_bridgeObjectRetain();
  v24 = (uint64_t)v42;
  sub_23E13597C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v25 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_23E138050;
  v27 = v45;
  v23((_BYTE *)(v26 + v25), v45, v14);
  v28 = sub_23E0E212C(v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  (*(void (**)(_BYTE *, uint64_t))(v15 + 8))(v19, v14);
  *(_QWORD *)(v24 + v39) = v28;
  swift_storeEnumTagMultiPayload();
  v29 = (uint64_t *)&v27[*(int *)(v43 + 52)];
  v31 = *v29;
  v30 = v29[1];
  v32 = (int *)type metadata accessor for Device.Control(0);
  v33 = (_QWORD *)(a4 + v32[8]);
  v34 = v32[10];
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v15 + 32))(a4, v44, v14);
  sub_23DF89384((uint64_t)v9, a4 + v32[5], type metadata accessor for Device.Control.Kind);
  sub_23DF89384(v24, a4 + v32[6], type metadata accessor for Device.Control.Source);
  *(_BYTE *)(a4 + v32[7]) = 0;
  *v33 = v31;
  v33[1] = v30;
  *(_WORD *)(a4 + v32[9]) = 1028;
  *(_BYTE *)(a4 + v34) = 12;
  *(_BYTE *)(a4 + v32[11]) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E0ADBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_23E135520();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BE4DF20], v6);
  sub_23E0ABBCC(a1, (uint64_t)v9, (uint64_t)v12, 0.0, 100.0, 1.0);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v13 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(a3, a2, v13);
  v14 = (int *)type metadata accessor for Device.Control(0);
  v15 = a3 + v14[5];
  v16 = v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
  v17 = type metadata accessor for Device.Control.IncrementalState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v15, 1, 1, v17);
  sub_23DF89384((uint64_t)v12, v16, type metadata accessor for Device.Control.IncrementalConfig);
  type metadata accessor for Device.Control.Kind(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Device.Control.Source(0);
  result = swift_storeEnumTagMultiPayload();
  v19 = (_QWORD *)(a3 + v14[8]);
  v20 = v14[10];
  *(_BYTE *)(a3 + v14[7]) = 0;
  *v19 = 0;
  v19[1] = 0;
  *(_WORD *)(a3 + v14[9]) = 1028;
  *(_BYTE *)(a3 + v20) = 12;
  *(_BYTE *)(a3 + v14[11]) = 0;
  return result;
}

uint64_t sub_23E0ADDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  double v32;
  char v33;
  void (*v34)(char *, uint64_t);
  double v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  char v46;
  void (*v47)(char *);
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char v52;
  char *v53;
  void (*v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  void (*v74)(unint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  v107 = a4;
  v120 = a2;
  v114 = a5;
  v112 = type metadata accessor for Device.Control.Source(0);
  MEMORY[0x24BDAC7A8](v112);
  v113 = (uint64_t *)((char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_23E135520();
  v109 = *(_QWORD *)(v8 - 8);
  v110 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v108 = (uint64_t)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v10);
  v115 = (uint64_t)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v12);
  v106 = (uint64_t)&v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_23E134C80();
  v117 = *(_QWORD *)(v14 - 8);
  v118 = v14;
  MEMORY[0x24BDAC7A8](v14);
  v116 = (char *)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_23E1359AC();
  v100 = *(_QWORD *)(v103 - 8);
  v16 = MEMORY[0x24BDAC7A8](v103);
  *(_QWORD *)&v105 = (char *)&v95 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v98 = (char *)&v95 - v18;
  v101 = (_QWORD *)sub_23E135958();
  v99 = *(v101 - 1);
  v19 = MEMORY[0x24BDAC7A8](v101);
  v96 = (char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v95 - v21;
  v97 = sub_23E13534C();
  v23 = *(_QWORD *)(v97 - 8);
  MEMORY[0x24BDAC7A8](v97);
  v25 = (double *)((char *)&v95 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v26);
  v119 = (uint64_t)&v95 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_23E1356DC();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v31 = (char *)&v95 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E13597C();
  v111 = type metadata accessor for HAPControlSolver.Source();
  v121 = a1;
  v32 = COERCE_DOUBLE(sub_23E135AC0());
  LOBYTE(a1) = v33;
  v34 = *(void (**)(char *, uint64_t))(v29 + 8);
  v34(v31, v28);
  if ((a1 & 1) != 0)
    v35 = 0.0;
  else
    v35 = v32;
  sub_23E13597C();
  v36 = v23;
  v37 = sub_23E135AC0();
  v39 = v38;
  v40 = v28;
  v41 = v98;
  v42 = v97;
  v34(v31, v40);
  v43 = v100;
  v44 = *(double *)&v37;
  if ((v39 & 1) != 0)
    v44 = 0.0;
  *v25 = v44;
  v25[1] = v35;
  v45 = *MEMORY[0x24BE4DD00];
  v102 = v36;
  (*(void (**)(double *, uint64_t, uint64_t))(v36 + 104))(v25, v45, v42);
  v104 = a3;
  sub_23E135964();
  v46 = sub_23E13594C();
  v47 = *(void (**)(char *))(v99 + 8);
  v48 = v22;
  v49 = v103;
  v50 = v101;
  v47(v48);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
  v51(v41, v120, v49);
  if ((v46 & 1) != 0)
  {
    v52 = 1;
  }
  else
  {
    v53 = v96;
    sub_23E135964();
    v52 = sub_23E13594C();
    ((void (*)(char *, _QWORD *))v47)(v53, v50);
  }
  v54 = *(void (**)(char *, uint64_t))(v43 + 8);
  v54(v41, v49);
  v55 = v119;
  (*(void (**)(uint64_t, double *, uint64_t))(v102 + 32))(v119, v25, v42);
  v56 = type metadata accessor for Device.Control.IncrementalState(0);
  *(_BYTE *)(v55 + *(int *)(v56 + 20)) = v52 & 1;
  v57 = *(_QWORD **)(*(_QWORD *)(v56 - 8) + 56);
  v102 = v56;
  v101 = v57;
  ((void (*)(uint64_t, _QWORD, uint64_t))v57)(v55, 0, 1);
  v58 = v106;
  sub_23DF89C1C(v107, v106, &qword_256D1D7E8);
  v59 = (char *)v105;
  v51((char *)v105, v120, v49);
  v61 = v117;
  v60 = v118;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v58, 1, v118) == 1)
  {
    sub_23E135988();
    v54(v59, v49);
    sub_23DF89C7C(v58, &qword_256D1D7E8);
  }
  else
  {
    v54(v59, v49);
    (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v116, v58, v60);
  }
  v62 = v60;
  v64 = v108;
  v63 = v109;
  v65 = v110;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v109 + 104))(v108, *MEMORY[0x24BE4DF28], v110);
  v66 = v121;
  sub_23E0ABBCC(v121, v64, v115, 0.0, 100.0, 1.0);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v64, v65);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F0);
  v68 = swift_allocBox();
  v70 = v69;
  v109 = v69 + *(int *)(v67 + 48);
  v110 = v68;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
  v107 = *(int *)(v71 + 48);
  v108 = v71;
  sub_23E13597C();
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v72 = (*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  v73 = swift_allocObject();
  v105 = xmmword_23E138050;
  *(_OWORD *)(v73 + 16) = xmmword_23E138050;
  v74 = *(void (**)(unint64_t, uint64_t, uint64_t))(v61 + 16);
  v74(v73 + v72, v66, v62);
  v75 = v62;
  v76 = sub_23E0E212C(v73);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v70 + v107) = v76;
  swift_storeEnumTagMultiPayload();
  v77 = v109;
  v108 = *(int *)(v108 + 48);
  sub_23E13597C();
  v78 = swift_allocObject();
  *(_OWORD *)(v78 + 16) = v105;
  v79 = v78 + v72;
  v80 = v121;
  v74(v79, v121, v75);
  v81 = sub_23E0E212C(v78);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v77 + v108) = v81;
  swift_storeEnumTagMultiPayload();
  v82 = (uint64_t)v113;
  *v113 = v110;
  swift_storeEnumTagMultiPayload();
  v83 = v111;
  if ((*(_BYTE *)(v80 + *(int *)(v111 + 40)) & 1) == 0)
  {
    v84 = v119;
    sub_23DF89C7C(v119, &qword_256D1D5D8);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v101)(v84, 1, 1, v102);
  }
  v85 = (int *)type metadata accessor for Device.Control(0);
  v86 = v114;
  v87 = v114 + v85[5];
  v88 = v87 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
  sub_23DF89340(v119, v87, &qword_256D1D5D8);
  sub_23DF89384(v115, v88, type metadata accessor for Device.Control.IncrementalConfig);
  type metadata accessor for Device.Control.Kind(0);
  swift_storeEnumTagMultiPayload();
  sub_23DF89384(v82, v86 + v85[6], type metadata accessor for Device.Control.Source);
  v89 = *(int *)(v83 + 52);
  LOBYTE(v88) = *(_BYTE *)(v121 + *(int *)(v83 + 48));
  v91 = *(_QWORD *)(v121 + v89);
  v90 = *(_QWORD *)(v121 + v89 + 8);
  v92 = (_QWORD *)(v86 + v85[8]);
  v93 = v85[10];
  (*(void (**)(uint64_t, char *, uint64_t))(v117 + 32))(v86, v116, v118);
  *(_BYTE *)(v86 + v85[7]) = v88;
  *v92 = v91;
  v92[1] = v90;
  *(_WORD *)(v86 + v85[9]) = 1028;
  *(_BYTE *)(v86 + v93) = 12;
  *(_BYTE *)(v86 + v85[11]) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E0AE658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  void (*v77)(char *, _QWORD, uint64_t);
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t (*v81)(char *, uint64_t, uint64_t);
  int v82;
  _BOOL4 v83;
  uint64_t v84;
  uint64_t v85;
  NSObject *v86;
  os_log_type_t v87;
  uint8_t *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  double v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  char v111;
  char v112;
  void (*v113)(uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  char v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t (*v125)(uint64_t, uint64_t, uint64_t);
  int v126;
  uint64_t v127;
  int v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int v134;
  uint64_t v135;
  int v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  uint64_t v140;
  int v141;
  uint64_t v142;
  unsigned __int16 *v143;
  uint64_t v144;
  int v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  char v154;
  double v155;
  double *v156;
  uint64_t v157;
  char v158;
  double v159;
  uint64_t v160;
  _WORD *v161;
  uint64_t v162;
  NSObject *v163;
  os_log_type_t v164;
  uint8_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char v181;
  BOOL v182;
  char v183;
  char v184;
  uint64_t v185;
  void (*v186)(char *, uint64_t, uint64_t);
  char *v187;
  uint64_t v188;
  uint64_t v189;
  BOOL v190;
  void (*v191)(uint64_t, uint64_t);
  uint64_t v192;
  char *v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _WORD *v201;
  uint64_t v202;
  uint64_t v203;
  _WORD *v204;
  unsigned __int16 *v205;
  int v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  double v225;
  int v226;
  uint64_t v227;
  uint64_t *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  double *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  char v239;
  BOOL v240;
  uint64_t v241;
  uint64_t v242;

  v237 = a1;
  v227 = a2;
  v219 = type metadata accessor for Device.Control.ColorState(0);
  v218 = *(_QWORD *)(v219 - 8);
  MEMORY[0x24BDAC7A8](v219);
  v217 = (char *)&v192 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v3);
  v220 = (uint64_t)&v192 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for HAPControlSolver.Source();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v222 = (uint64_t)&v192 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v224 = (char *)&v192 - v8;
  v232 = sub_23E135328();
  v230 = *(_QWORD *)(v232 - 8);
  v9 = MEMORY[0x24BDAC7A8](v232);
  v204 = (_WORD *)((char *)&v192 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v9);
  v193 = (char *)&v192 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v195 = (char *)&v192 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v14);
  *(_QWORD *)&v225 = (char *)&v192 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v16);
  v210 = (char *)&v192 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_23E135B2C();
  v199 = *(_QWORD *)(v198 - 8);
  MEMORY[0x24BDAC7A8](v198);
  v197 = (char *)&v192 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v19 = MEMORY[0x24BDAC7A8](v203);
  v216 = (uint64_t)&v192 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x24BDAC7A8](v19);
  v202 = (uint64_t)&v192 - v22;
  v23 = MEMORY[0x24BDAC7A8](v21);
  v194 = (uint64_t)&v192 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v196 = (uint64_t)&v192 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v205 = (unsigned __int16 *)((char *)&v192 - v28);
  v29 = MEMORY[0x24BDAC7A8](v27);
  v207 = (uint64_t)&v192 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v214 = (uint64_t)&v192 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v208 = (uint64_t)&v192 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v215 = (uint64_t)&v192 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v213 = (uint64_t)&v192 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v223 = (uint64_t)&v192 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v201 = (_WORD *)((char *)&v192 - v42);
  v43 = MEMORY[0x24BDAC7A8](v41);
  v236 = (uint64_t)&v192 - v44;
  v45 = MEMORY[0x24BDAC7A8](v43);
  v234 = (double *)((char *)&v192 - v46);
  MEMORY[0x24BDAC7A8](v45);
  v228 = (uint64_t *)((char *)&v192 - v47);
  v48 = sub_23E1356DC();
  v49 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)&v192 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  v53 = MEMORY[0x24BDAC7A8](v52);
  v212 = (uint64_t)&v192 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = MEMORY[0x24BDAC7A8](v53);
  v200 = (uint64_t)&v192 - v56;
  v57 = MEMORY[0x24BDAC7A8](v55);
  v211 = (uint64_t)&v192 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v221 = (char *)&v192 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v209 = (char *)&v192 - v62;
  v63 = MEMORY[0x24BDAC7A8](v61);
  v65 = (char *)&v192 - v64;
  v66 = MEMORY[0x24BDAC7A8](v63);
  v68 = (char *)&v192 - v67;
  v69 = MEMORY[0x24BDAC7A8](v66);
  v71 = (char *)&v192 - v70;
  v72 = MEMORY[0x24BDAC7A8](v69);
  v74 = (char *)&v192 - v73;
  MEMORY[0x24BDAC7A8](v72);
  v76 = (char *)&v192 - v75;
  v77 = *(void (**)(char *, _QWORD, uint64_t))(v49 + 104);
  v77(v51, *MEMORY[0x24BE4E340], v48);
  v233 = v5;
  sub_23E135A48();
  v78 = *(void (**)(char *, uint64_t))(v49 + 8);
  v78(v51, v48);
  v77(v51, *MEMORY[0x24BE4E240], v48);
  sub_23E135A48();
  v78(v51, v48);
  v77(v51, *MEMORY[0x24BE4E290], v48);
  sub_23E135A48();
  v78(v51, v48);
  v79 = sub_23E1359AC();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v80 + 48);
  v235 = v71;
  v82 = v81(v71, 1, v79);
  v231 = v76;
  LODWORD(v51) = v81(v76, 1, v79);
  v229 = v74;
  sub_23DF89C1C((uint64_t)v74, (uint64_t)v68, &qword_256D1D530);
  v83 = (_DWORD)v51 != 1 && v81(v68, 1, v79) != 1;
  sub_23DF89C7C((uint64_t)v68, &qword_256D1D530);
  v226 = sub_23E135550();
  if (!v83 && v82 == 1)
  {
    if (qword_256D1D270 != -1)
      swift_once();
    v84 = sub_23E135C10();
    __swift_project_value_buffer(v84, (uint64_t)qword_256D1EAC0);
    v85 = v222;
    sub_23DF73E10(v237, v222, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v86 = sub_23E135BF8();
    v87 = sub_23E137344();
    if (os_log_type_enabled(v86, v87))
    {
      v88 = (uint8_t *)swift_slowAlloc();
      v89 = swift_slowAlloc();
      v242 = v89;
      *(_DWORD *)v88 = 136315138;
      sub_23E134C80();
      sub_23DF73F28(&qword_256D1D810, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAB8]);
      v90 = sub_23E1375FC();
      v241 = sub_23E0AB274(v90, v91, &v242);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      sub_23DF73E54(v85, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      _os_log_impl(&dword_23DF71000, v86, v87, "Service appears to not support HSV or Color Temperature, how is that possible? %s", v88, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24264C628](v89, -1, -1);
      MEMORY[0x24264C628](v88, -1, -1);

    }
    else
    {

      sub_23DF73E54(v85, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    }
    sub_23DF89C7C((uint64_t)v229, &qword_256D1D530);
LABEL_15:
    sub_23DF89C7C((uint64_t)v235, &qword_256D1D530);
    sub_23DF89C7C((uint64_t)v231, &qword_256D1D530);
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25048);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 56))(v227, 1, 1, v96);
  }
  v92 = sub_23DFF15A8();
  v93 = *(char **)(v230 + 56);
  ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v93)(v228, 1, 1, v232);
  LOBYTE(v242) = v226 & 1;
  v240 = v83;
  v239 = 1;
  v238 = 1;
  LOBYTE(v241) = v82 != 1;
  if (v82 == 1)
    goto LABEL_18;
  sub_23DF89C1C((uint64_t)v235, (uint64_t)v65, &qword_256D1D530);
  if (v81(v65, 1, v79) == 1)
  {
    sub_23DF89C7C((uint64_t)v65, &qword_256D1D530);
    v94 = sub_23E135B8C();
    v95 = (uint64_t)v210;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 56))(v210, 1, 1, v94);
LABEL_17:
    sub_23DF89C7C(v95, &qword_256D1F8F0);
LABEL_18:
    LODWORD(v222) = 0;
    LODWORD(v210) = 0;
    v100 = (uint64_t)v224;
    goto LABEL_19;
  }
  v95 = (uint64_t)v210;
  sub_23E1359A0();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v65, v79);
  v98 = sub_23E135B8C();
  v99 = *(_QWORD *)(v98 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v95, 1, v98) == 1)
    goto LABEL_17;
  v145 = (*(uint64_t (**)(uint64_t, uint64_t))(v99 + 88))(v95, v98);
  v100 = (uint64_t)v224;
  if (v145 == *MEMORY[0x24BE4EA78])
  {
    (*(void (**)(uint64_t, uint64_t))(v99 + 96))(v95, v98);
    v146 = v197;
    v147 = v95;
    v148 = v198;
    (*(void (**)(char *, uint64_t, uint64_t))(v199 + 32))(v197, v147, v198);
    v149 = sub_23E135B08();
    if (v149 >= 0xFFFF)
      v150 = 0xFFFFLL;
    else
      v150 = v149;
    LODWORD(v210) = v150 & ~(v150 >> 63);
    v238 = 0;
    v151 = sub_23E135B14();
    if (v151 >= 0xFFFF)
      v152 = 0xFFFFLL;
    else
      v152 = v151;
    LODWORD(v222) = v152 & ~(v152 >> 63);
    (*(void (**)(char *, uint64_t))(v199 + 8))(v146, v148);
    v239 = 0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v95, v98);
    LODWORD(v222) = 0;
    LODWORD(v210) = 0;
  }
LABEL_19:
  v101 = (uint64_t)v221;
  v206 = v82;
  if (v83)
  {
    v102 = (uint64_t)v231;
    v101 = (uint64_t)v209;
  }
  else
  {
    v102 = (uint64_t)v235;
  }
  sub_23DF89C1C(v102, v101, &qword_256D1D530);
  if (v81((char *)v101, 1, v79) == 1)
  {
    sub_23DF89C7C(v101, &qword_256D1D530);
    v103 = sub_23E134C80();
    v104 = *(_QWORD *)&v225;
    (*(void (**)(double, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v103 - 8) + 56))(COERCE_DOUBLE(*(_QWORD *)&v225), 1, 1, v103);
  }
  else
  {
    v104 = *(_QWORD *)&v225;
    sub_23E135988();
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v101, v79);
    v105 = sub_23E134C80();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 56))(v104, 0, 1, v105);
  }
  v106 = v232;
  ((void (*)(double *, uint64_t, uint64_t, uint64_t))v93)(v234, 1, 1, v232);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v93)(v236, 1, 1, v106);
  if (v83)
  {
    v107 = v211;
    sub_23DF89C1C((uint64_t)v231, v211, &qword_256D1D530);
    if (v81((char *)v107, 1, v79) == 1)
      goto LABEL_29;
    *(double *)&v108 = COERCE_DOUBLE(sub_23E135940());
    v109 = v107;
    v110 = *(double *)&v108;
    v112 = v111;
    v113 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v113(v109, v79);
    if ((v112 & 1) != 0)
      goto LABEL_30;
    v107 = v200;
    sub_23DF89C1C((uint64_t)v229, v200, &qword_256D1D530);
    if (v81((char *)v107, 1, v79) == 1)
    {
LABEL_29:
      sub_23DF89C7C(v107, &qword_256D1D530);
    }
    else
    {
      v225 = COERCE_DOUBLE(sub_23E135940());
      v154 = v153;
      v113(v107, v79);
      if ((v154 & 1) == 0)
      {
        v155 = v225;
        v156 = v234;
        sub_23DF89C7C((uint64_t)v234, &qword_256D1D7F0);
        *v156 = v110 / 360.0;
        v156[1] = v155 / 100.0;
        v157 = v232;
        (*(void (**)(double *, _QWORD, uint64_t))(v230 + 104))(v156, *MEMORY[0x24BE4DCA8], v232);
        ((void (*)(double *, _QWORD, uint64_t, uint64_t))v93)(v156, 0, 1, v157);
      }
    }
  }
LABEL_30:
  v114 = v232;
  if (v206 != 1)
  {
    v115 = v212;
    sub_23DF89C1C((uint64_t)v235, v212, &qword_256D1D530);
    if (v81((char *)v115, 1, v79) == 1)
    {
      sub_23DF89C7C(v115, &qword_256D1D530);
    }
    else
    {
      v116 = sub_23E135994();
      v118 = v117;
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v115, v79);
      if ((v118 & 1) == 0)
      {
        v119 = 0xFFFFLL;
        if (v116 < 0xFFFF)
          v119 = v116;
        v120 = v119 & ~(v119 >> 63);
        v121 = v236;
        sub_23DF89C7C(v236, &qword_256D1D7F0);
        v122 = (uint64_t)v201;
        *v201 = v120;
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v230 + 104))(v122, *MEMORY[0x24BE4DC88], v114);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v93)(v122, 0, 1, v114);
        sub_23DF89340(v122, v121, &qword_256D1D7F0);
      }
    }
  }
  v225 = *(double *)&v93;
  v123 = v223;
  sub_23DF89C1C(v236, v223, &qword_256D1D7F0);
  v124 = v230;
  v125 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v230 + 48);
  v126 = v125(v123, 1, v114);
  sub_23DF89C7C(v123, &qword_256D1D7F0);
  if (v126 != 1)
  {
    v127 = v213;
    sub_23DF89C1C((uint64_t)v234, v213, &qword_256D1D7F0);
    v128 = v125(v127, 1, v114);
    sub_23DF89C7C(v127, &qword_256D1D7F0);
    if (v128 == 1)
    {
      v129 = v228;
      sub_23DF89C7C((uint64_t)v228, &qword_256D1D7F0);
      v130 = v236;
      v131 = (uint64_t)v129;
LABEL_66:
      sub_23DF89C1C(v130, v131, &qword_256D1D7F0);
      goto LABEL_67;
    }
  }
  v132 = v100;
  v133 = v215;
  sub_23DF89C1C(v236, v215, &qword_256D1D7F0);
  v134 = v125(v133, 1, v114);
  sub_23DF89C7C(v133, &qword_256D1D7F0);
  v129 = v228;
  if (v134 == 1)
  {
    v135 = v208;
    sub_23DF89C1C((uint64_t)v234, v208, &qword_256D1D7F0);
    v136 = v125(v135, 1, v114);
    sub_23DF89C7C(v135, &qword_256D1D7F0);
    if (v136 != 1)
    {
      sub_23DF89C7C((uint64_t)v129, &qword_256D1D7F0);
      sub_23DF89C1C((uint64_t)v234, (uint64_t)v129, &qword_256D1D7F0);
      v100 = v132;
      goto LABEL_67;
    }
  }
  v137 = v214;
  sub_23DF89C1C(v236, v214, &qword_256D1D7F0);
  v138 = v125(v137, 1, v114);
  sub_23DF89C7C(v137, &qword_256D1D7F0);
  v100 = v132;
  if (v138 != 1)
  {
    v139 = v104;
    v140 = v207;
    sub_23DF89C1C((uint64_t)v234, v207, &qword_256D1D7F0);
    v141 = v125(v140, 1, v114);
    v142 = v140;
    v104 = v139;
    v100 = v132;
    sub_23DF89C7C(v142, &qword_256D1D7F0);
    if (v141 != 1)
    {
      v143 = v205;
      sub_23DF89C1C(v236, (uint64_t)v205, &qword_256D1D7F0);
      if (v125((uint64_t)v143, 1, v114) == 1)
      {
        sub_23DF89C7C((uint64_t)v129, &qword_256D1D7F0);
        v144 = (uint64_t)v143;
LABEL_59:
        sub_23DF89C7C(v144, &qword_256D1D7F0);
LABEL_64:
        v130 = v236;
LABEL_65:
        v131 = (uint64_t)v129;
        goto LABEL_66;
      }
      if ((*(unsigned int (**)(unsigned __int16 *, uint64_t))(v124 + 88))(v143, v114) != *MEMORY[0x24BE4DC88])
      {
        sub_23DF89C7C((uint64_t)v129, &qword_256D1D7F0);
        (*(void (**)(unsigned __int16 *, uint64_t))(v124 + 8))(v143, v114);
        goto LABEL_64;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v124 + 96))(v143, v114);
      if (v239 == 1 || v222 < *v143)
      {
        v144 = (uint64_t)v129;
        goto LABEL_59;
      }
      v185 = v196;
      sub_23DF89C1C(v236, v196, &qword_256D1D7F0);
      if (v125(v185, 1, v114) == 1)
      {
        sub_23DF89C7C((uint64_t)v129, &qword_256D1D7F0);
        sub_23DF89C7C(v185, &qword_256D1D7F0);
LABEL_90:
        v130 = (uint64_t)v234;
        goto LABEL_65;
      }
      v186 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 32);
      v187 = v195;
      v186(v195, v185, v114);
      v188 = v194;
      sub_23DF89C1C((uint64_t)v234, v194, &qword_256D1D7F0);
      if (v125(v188, 1, v114) == 1)
      {
        (*(void (**)(char *, uint64_t))(v124 + 8))(v187, v114);
        v129 = v228;
        sub_23DF89C7C((uint64_t)v228, &qword_256D1D7F0);
        sub_23DF89C7C(v188, &qword_256D1D7F0);
        goto LABEL_90;
      }
      v189 = (uint64_t)v193;
      v186(v193, v188, v114);
      v190 = sub_23E0A88A0(v189);
      v191 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
      v191(v189, v114);
      v129 = v228;
      sub_23DF89C7C((uint64_t)v228, &qword_256D1D7F0);
      if (!v190)
      {
        v191((uint64_t)v187, v114);
        goto LABEL_90;
      }
      v186((char *)v129, (uint64_t)v187, v114);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))&v225)(v129, 0, 1, v114);
    }
  }
LABEL_67:
  sub_23DF73E10(v237, v100, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  if ((v226 & 1) != 0)
  {
    v158 = sub_23E135544();
    sub_23DF73E54(v100, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v159 = v225;
    if ((v158 & 1) != 0)
    {
      if (v206 == 1)
      {
        if (qword_256D1D270 != -1)
          swift_once();
        v162 = sub_23E135C10();
        __swift_project_value_buffer(v162, (uint64_t)qword_256D1EAC0);
        v163 = sub_23E135BF8();
        v164 = sub_23E137350();
        if (os_log_type_enabled(v163, v164))
        {
          v165 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v165 = 0;
          _os_log_impl(&dword_23DF71000, v163, v164, "Service says natural light is enabled, but doesn't support Color Temperature values. This should not be possible and is not supported", v165, 2u);
          MEMORY[0x24264C628](v165, -1, -1);
        }

        sub_23DF89C7C(v236, &qword_256D1D7F0);
        sub_23DF89C7C((uint64_t)v234, &qword_256D1D7F0);
        sub_23DF89C7C(v104, &qword_256D1D7E8);
        sub_23DF89C7C((uint64_t)v129, &qword_256D1D7F0);
        sub_23DF89C7C((uint64_t)v229, &qword_256D1D530);
        goto LABEL_15;
      }
      v160 = v202;
      sub_23DF89340((uint64_t)v129, v202, &qword_256D1D7F0);
      if (v125(v160, 1, v114) == 1)
      {
        v161 = v204;
        *v204 = 370;
        (*(void (**)(_WORD *, _QWORD, uint64_t))(v124 + 104))(v161, *MEMORY[0x24BE4DC88], v114);
        sub_23DF89C7C(v160, &qword_256D1D7F0);
      }
      else
      {
        v161 = v204;
        (*(void (**)(_WORD *, uint64_t, uint64_t))(v124 + 32))(v204, v160, v114);
      }
      v166 = swift_allocBox();
      v168 = v167;
      (*(void (**)(uint64_t, _WORD *, uint64_t))(v124 + 32))(v167, v161, v114);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))&v159)(v168, 0, 1, v114);
      *v129 = v166;
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(v124 + 104))(v129, *MEMORY[0x24BE4DC90], v114);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))&v159)(v129, 0, 1, v114);
    }
  }
  else
  {
    sub_23DF73E54(v100, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    v159 = v225;
  }
  v169 = v216;
  sub_23DF89C1C((uint64_t)v129, v216, &qword_256D1D7F0);
  v170 = (uint64_t)v217;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))&v159)(v217, 1, 1, v114);
  v171 = (uint64_t)v129;
  v172 = v219;
  v173 = v170 + *(int *)(v219 + 20);
  *(_QWORD *)v173 = 0;
  *(_BYTE *)(v173 + 8) = 1;
  sub_23DFF1F1C(v169, v170);
  *(double *)v173 = v92;
  *(_BYTE *)(v173 + 8) = 0;
  v174 = v170;
  v175 = v220;
  sub_23DF89384(v174, v220, type metadata accessor for Device.Control.ColorState);
  sub_23DF89C7C(v236, &qword_256D1D7F0);
  sub_23DF89C7C((uint64_t)v234, &qword_256D1D7F0);
  sub_23DF89C7C(v171, &qword_256D1D7F0);
  sub_23DF89C7C((uint64_t)v229, &qword_256D1D530);
  v176 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v218 + 56);
  v176(v175, 0, 1, v172);
  LOBYTE(v173) = *(_BYTE *)(v237 + *(int *)(v233 + 40));
  sub_23DF89C7C((uint64_t)v235, &qword_256D1D530);
  sub_23DF89C7C((uint64_t)v231, &qword_256D1D530);
  if ((v173 & 1) == 0)
  {
    sub_23DF89C7C(v175, &qword_256D1D5E8);
    v176(v175, 1, 1, v172);
  }
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25048);
  v178 = v227;
  v179 = v227 + *(int *)(v177 + 48);
  sub_23DF89340(v104, v227, &qword_256D1D7E8);
  v180 = v179 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
  sub_23DF89340(v175, v179, &qword_256D1D5E8);
  v181 = v241;
  v182 = v240;
  v183 = v239;
  v184 = v238;
  *(_BYTE *)v180 = v242;
  *(_BYTE *)(v180 + 1) = v181;
  *(_BYTE *)(v180 + 2) = v182;
  *(_WORD *)(v180 + 4) = v222;
  *(_BYTE *)(v180 + 6) = v183;
  *(_WORD *)(v180 + 8) = (_WORD)v210;
  *(_BYTE *)(v180 + 10) = v184;
  type metadata accessor for Device.Control.Kind(0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v177 - 8) + 56))(v178, 0, 1, v177);
}

uint64_t sub_23E0AFE18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v2);
  v39 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_23E135328();
  v40 = *(_QWORD *)(v4 - 8);
  v41 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v37 = (char *)&v37 - v7;
  v42 = type metadata accessor for Device.Control.ColorState(0);
  v8 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v37 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25040);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for Device.Control.Kind(0);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v37 - v24;
  type metadata accessor for HAPControlSolver.Source();
  v26 = sub_23E134E90();
  swift_retain();
  sub_23E0AE658(a1, (uint64_t)v19);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25048);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v19, 1, v27) == 1)
  {
    v28 = &qword_256D25040;
    v29 = (uint64_t)v19;
  }
  else
  {
    sub_23DF89384((uint64_t)&v19[*(int *)(v27 + 48)], (uint64_t)v25, type metadata accessor for Device.Control.Kind);
    sub_23DF89C7C((uint64_t)v19, &qword_256D1D7E8);
    sub_23DF73E10((uint64_t)v25, (uint64_t)v23, type metadata accessor for Device.Control.Kind);
    if (swift_getEnumCaseMultiPayload() != 3)
    {
      sub_23DF73E54((uint64_t)v25, type metadata accessor for Device.Control.Kind);
      sub_23DF73E54((uint64_t)v23, type metadata accessor for Device.Control.Kind);
      return v26;
    }
    sub_23DF89340((uint64_t)v23, (uint64_t)v16, &qword_256D1D5E8);
    sub_23DF89C1C((uint64_t)v16, (uint64_t)v14, &qword_256D1D5E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v42) == 1)
    {
      sub_23DF89C7C((uint64_t)v16, &qword_256D1D5E8);
      sub_23DF73E54((uint64_t)v25, type metadata accessor for Device.Control.Kind);
      v29 = (uint64_t)v14;
      v28 = &qword_256D1D5E8;
    }
    else
    {
      sub_23DF89384((uint64_t)v14, (uint64_t)v10, type metadata accessor for Device.Control.ColorState);
      v31 = v39;
      sub_23DF89C1C((uint64_t)v10, v39, &qword_256D1D7F0);
      v33 = v40;
      v32 = v41;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v31, 1, v41) != 1)
      {
        v34 = v37;
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v37, v31, v32);
        v35 = (uint64_t)v38;
        (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v38, v34, v32);
        v30 = sub_23E0A9F3C(v35);
        swift_release();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
        sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control.ColorState);
        sub_23DF89C7C((uint64_t)v16, &qword_256D1D5E8);
        sub_23DF73E54((uint64_t)v25, type metadata accessor for Device.Control.Kind);
        return v30;
      }
      sub_23DF73E54((uint64_t)v10, type metadata accessor for Device.Control.ColorState);
      sub_23DF89C7C((uint64_t)v16, &qword_256D1D5E8);
      sub_23DF73E54((uint64_t)v25, type metadata accessor for Device.Control.Kind);
      v28 = &qword_256D1D7F0;
      v29 = v31;
    }
  }
  sub_23DF89C7C(v29, v28);
  return v26;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for ElasticEffectModifier()
{
  return &type metadata for ElasticEffectModifier;
}

uint64_t sub_23E0B02A0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0B02B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  BOOL v11;
  double v12;
  char v13;
  _BOOL4 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25050);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = 1.0;
  if ((*(_BYTE *)(v2 + 24) & 1) != 0)
    goto LABEL_12;
  v9 = *(double *)(v2 + 8);
  v10 = *(double *)(v2 + 16);
  v11 = v9 < v10 || v10 < *(double *)v2;
  v8 = v11 ? 1.02 : 1.0;
  v12 = v9 * 0.5;
  sub_23E136FD8();
  v13 = sub_23E136FC0();
  v14 = v10 < v12;
  if ((v13 & 1) != 0)
    v14 = v12 <= v10;
  if (!v14)
LABEL_12:
    sub_23E137068();
  else
    sub_23E137074();
  v17 = v15;
  v18 = v16;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25058);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v7, a1, v19);
  v20 = &v7[*(int *)(v5 + 36)];
  *(_QWORD *)v20 = 0x3FF0000000000000;
  *((double *)v20 + 1) = v8;
  *((_QWORD *)v20 + 2) = v17;
  *((_QWORD *)v20 + 3) = v18;
  return sub_23E0B0400((uint64_t)v7, a2);
}

uint64_t sub_23E0B0400(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for ElasticEffectModifier.Config(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ElasticEffectModifier.Config(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ElasticEffectModifier.Config()
{
  return &type metadata for ElasticEffectModifier.Config;
}

unint64_t sub_23E0B04B4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25060;
  if (!qword_256D25060)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25050);
    v2[0] = sub_23E0B0520();
    v2[1] = MEMORY[0x24BDEBF50];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25060);
  }
  return result;
}

unint64_t sub_23E0B0520()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256D25068;
  if (!qword_256D25068)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25058);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEFB78], v1);
    atomic_store(result, (unint64_t *)&qword_256D25068);
  }
  return result;
}

_QWORD *sub_23E0B0574(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23E135D60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = *(int *)(a3 + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = _s17FavoriteColorCellV5ValueOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = sub_23E135328();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v10, v11, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      v14 = sub_23E1358D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
    *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t _s17FavoriteColorCellV5ValueOMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25178);
}

uint64_t sub_23E0B0714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  _s17FavoriteColorCellV5ValueOMa(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v7 = sub_23E135328();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v7 = sub_23E1358D4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
}

_QWORD *sub_23E0B07D4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23E135D60();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = _s17FavoriteColorCellV5ValueOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v13 = sub_23E135328();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v12 = sub_23E1358D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
    swift_storeEnumTagMultiPayload();
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

_QWORD *sub_23E0B0934(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;

  if (a1 != a2)
  {
    sub_23DF89C7C((uint64_t)a1, &qword_256D1DA20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23E135D60();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_23E0B0AB4((uint64_t)a1 + v7);
    v10 = _s17FavoriteColorCellV5ValueOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v13 = sub_23E135328();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v8, v9, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = sub_23E1358D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
  }
  *((_BYTE *)a1 + *(int *)(a3 + 24)) = *((_BYTE *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_23E0B0AB4(uint64_t a1)
{
  uint64_t v2;

  v2 = _s17FavoriteColorCellV5ValueOMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_23E0B0AF0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23E135D60();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = _s17FavoriteColorCellV5ValueOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v14 = sub_23E135328();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v9, v10, v14);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v13 = sub_23E1358D4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v9, v10, v13);
    swift_storeEnumTagMultiPayload();
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_23E0B0C4C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;

  if (a1 != a2)
  {
    sub_23DF89C7C((uint64_t)a1, &qword_256D1DA20);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23E135D60();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    sub_23E0B0AB4((uint64_t)&a1[v8]);
    v11 = _s17FavoriteColorCellV5ValueOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v14 = sub_23E135328();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v9, v10, v14);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      v13 = sub_23E1358D4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_23E0B0DC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0B0DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v14;

  v6 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = _s17FavoriteColorCellV5ValueOMa(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 2)
    return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_23E0B0E90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0B0E9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256D1E558);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = _s17FavoriteColorCellV5ValueOMa(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t _s17FavoriteColorCellVMa(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D250C8);
}

void sub_23E0B0F58()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DF9A874();
  if (v0 <= 0x3F)
  {
    _s17FavoriteColorCellV5ValueOMa(319);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_23E0B0FE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v10 = sub_23E135328();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v8 = sub_23E1358D4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23E0B10D0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_23E135328();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v3 = sub_23E1358D4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
}

void *sub_23E0B112C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_23E135328();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23E1358D4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23E0B11F0(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23E0B0AB4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_23E135328();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_23E1358D4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_23E0B12C4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v8 = sub_23E135328();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_23E1358D4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_23E0B1388(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_23E0B0AB4((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v8 = sub_23E135328();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v7 = sub_23E1358D4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23E0B145C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_23E1358D4();
  if (v1 <= 0x3F)
  {
    result = sub_23E135328();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unint64_t sub_23E0B14DC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  unint64_t v17;
  unint64_t v18;

  v1 = v0;
  v2 = 0xD00000000000001BLL;
  v3 = sub_23E135328();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E1358D4();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = _s17FavoriteColorCellV5ValueOMa(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v1, (uint64_t)v13, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
      v17 = 0;
      v18 = 0xE000000000000000;
      sub_23E137530();
      swift_bridgeObjectRelease();
      v17 = 0xD000000000000018;
      v18 = 0x800000023E145A00;
      LightbulbColor.description.getter();
      sub_23E1371D0();
      swift_bridgeObjectRelease();
      sub_23E1371D0();
      v2 = v17;
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    v17 = 0;
    v18 = 0xE000000000000000;
    sub_23E137530();
    swift_bridgeObjectRelease();
    v17 = 0xD00000000000001BLL;
    v18 = 0x800000023E145A20;
    sub_23DF73F28(&qword_256D252E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E540], MEMORY[0x24BE4E560]);
    sub_23E1375FC();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    sub_23E1371D0();
    v2 = v17;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v2;
}

uint64_t sub_23E0B1740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v15;

  v1 = sub_23E135328();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E1358D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s17FavoriteColorCellV5ValueOMa(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v0, (uint64_t)v11, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v11, v1);
      sub_23E1376A4();
      sub_23DF73F28(&qword_256D1EF08, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], MEMORY[0x24BE4DCC8]);
      sub_23E13711C();
      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    else
    {
      return sub_23E1376A4();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_23E1376A4();
    sub_23DF73F28(&qword_256D251B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E540], MEMORY[0x24BE4E550]);
    sub_23E13711C();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_23E0B1920@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF73E10(v1, a1, _s17FavoriteColorCellV5ValueOMa);
}

uint64_t sub_23E0B1944()
{
  sub_23E137698();
  sub_23E0B1740();
  return sub_23E1376D4();
}

uint64_t sub_23E0B1984()
{
  sub_23E137698();
  sub_23E0B1740();
  return sub_23E1376D4();
}

uint64_t sub_23E0B19C4()
{
  return sub_23DF73F28(&qword_256D233F0, _s17FavoriteColorCellV5ValueOMa, (uint64_t)&unk_23E1412F0);
}

uint64_t sub_23E0B19F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0B1A00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int EnumCaseMultiPayload;
  CGFloat v33;
  double v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v40;
  uint64_t v41;
  double v42;
  double v43;
  CGFloat v44;
  double v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t KeyPath;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  int v95;
  __int16 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108;

  v84 = a1;
  v89 = a3;
  v74 = sub_23E13636C();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v71 = (char *)&v67 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v5);
  v67 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D251C0);
  v7 = MEMORY[0x24BDAC7A8](v88);
  v70 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v69 = (char *)&v67 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v72 = (uint64_t)&v67 - v11;
  v68 = sub_23E1358D4();
  v79 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v78 = (uint64_t)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D251C8);
  MEMORY[0x24BDAC7A8](v85);
  v87 = (uint64_t)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D251D0);
  MEMORY[0x24BDAC7A8](v80);
  v81 = (uint64_t)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D251D8);
  MEMORY[0x24BDAC7A8](v86);
  v83 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D251E0);
  MEMORY[0x24BDAC7A8](v75);
  v17 = (char *)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D251E8);
  v18 = MEMORY[0x24BDAC7A8](v77);
  v76 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v82 = (uint64_t)&v67 - v20;
  v21 = sub_23E135328();
  v22 = *(_QWORD *)(v21 - 8);
  v23 = MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v67 - v26;
  v28 = _s17FavoriteColorCellV5ValueOMa(0);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = _s17FavoriteColorCellVMa(0);
  sub_23DF73E10(a2 + *(int *)(v31 + 20), (uint64_t)v30, _s17FavoriteColorCellV5ValueOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v27, v30, v21);
      sub_23E135E80();
      sub_23E0B260C((uint64_t)v27, (uint64_t)v17, v33, v34, 1.0);
      v90 = 0;
      v91 = 0xE000000000000000;
      sub_23E137530();
      swift_bridgeObjectRelease();
      v90 = 0xD00000000000001FLL;
      v91 = 0x800000023E1459C0;
      (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, v21);
      sub_23E0A9F3C((uint64_t)v25);
      sub_23E136BC4();
      swift_release();
      sub_23E1371D0();
      swift_bridgeObjectRelease();
      sub_23E0B4230();
      v35 = v76;
      sub_23E136AF8();
      swift_bridgeObjectRelease();
      sub_23DF89C7C((uint64_t)v17, &qword_256D251E0);
      v36 = (uint64_t)v35;
      v37 = v82;
      sub_23DF89340(v36, v82, &qword_256D251E8);
      sub_23DF89C1C(v37, v81, &qword_256D251E8);
      swift_storeEnumTagMultiPayload();
      sub_23E0B41AC(&qword_256D25228, &qword_256D251E8, sub_23E0B4230);
      v38 = (uint64_t)v83;
      sub_23E136480();
      sub_23DF89C1C(v38, v87, &qword_256D251D8);
      swift_storeEnumTagMultiPayload();
      sub_23E0B4130();
      sub_23E0B41AC(&qword_256D25268, &qword_256D251C0, (uint64_t (*)(void))sub_23E0B4094);
      sub_23E136480();
      sub_23DF89C7C(v38, &qword_256D251D8);
      sub_23DF89C7C(v37, &qword_256D251E8);
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    }
    else
    {
      sub_23E135E80();
      sub_23E135E80();
      sub_23E136E04();
      v50 = v104;
      v51 = v105;
      v78 = v104;
      v52 = v106;
      v53 = v107;
      LODWORD(v82) = v108;
      LODWORD(v81) = sub_23E136528();
      v84 = sub_23E136FE4();
      v83 = v54;
      v55 = sub_23E136CB4();
      v80 = v55;
      sub_23E1367D4();
      v56 = sub_23E1367C8();
      v57 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v67, 1, 1, v56);
      v58 = sub_23E136804();
      v79 = v58;
      sub_23DF89C7C(v57, &qword_256D1DBA0);
      KeyPath = swift_getKeyPath();
      v60 = sub_23E136C84();
      v61 = swift_getKeyPath();
      v90 = v50;
      v91 = v51;
      v92 = v52;
      v93 = v53;
      v62 = v53;
      LOBYTE(v50) = v82;
      v94 = v82;
      v95 = v81;
      v96 = 256;
      v97 = v55;
      v98 = KeyPath;
      v99 = v58;
      v100 = v61;
      v101 = v60;
      v102 = v84;
      v103 = v83;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D251F0);
      sub_23E0B4094();
      v63 = (uint64_t)v70;
      sub_23E136AF8();
      sub_23DFB7374(v78, v51, v52, v62, v50);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v64 = v71;
      sub_23E136354();
      v65 = (uint64_t)v69;
      sub_23E135FD0();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v64, v74);
      sub_23DF89C7C(v63, &qword_256D251C0);
      v66 = v72;
      sub_23DF89340(v65, v72, &qword_256D251C0);
      sub_23DF89C1C(v66, v87, &qword_256D251C0);
      swift_storeEnumTagMultiPayload();
      sub_23E0B4130();
      sub_23E0B41AC(&qword_256D25268, &qword_256D251C0, (uint64_t (*)(void))sub_23E0B4094);
      sub_23E136480();
      return sub_23DF89C7C(v66, &qword_256D251C0);
    }
  }
  else
  {
    v40 = v30;
    v41 = v68;
    (*(void (**)(uint64_t, char *, uint64_t))(v79 + 32))(v78, v40, v68);
    sub_23E1358C8();
    sub_23E1358A4();
    v43 = v42;
    sub_23E135E80();
    sub_23E0B260C((uint64_t)v27, (uint64_t)v17, v44, v45, v43);
    v90 = 0;
    v91 = 0xE000000000000000;
    sub_23E137530();
    swift_bridgeObjectRelease();
    v90 = 0xD00000000000001FLL;
    v91 = 0x800000023E1459C0;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v25, v27, v21);
    sub_23E0A9F3C((uint64_t)v25);
    sub_23E136BC4();
    swift_release();
    sub_23E1371D0();
    swift_bridgeObjectRelease();
    sub_23E0B4230();
    v46 = v76;
    sub_23E136AF8();
    swift_bridgeObjectRelease();
    sub_23DF89C7C((uint64_t)v17, &qword_256D251E0);
    v47 = (uint64_t)v46;
    v48 = v82;
    sub_23DF89340(v47, v82, &qword_256D251E8);
    sub_23DF89C1C(v48, v81, &qword_256D251E8);
    swift_storeEnumTagMultiPayload();
    sub_23E0B41AC(&qword_256D25228, &qword_256D251E8, sub_23E0B4230);
    v49 = (uint64_t)v83;
    sub_23E136480();
    sub_23DF89C1C(v49, v87, &qword_256D251D8);
    swift_storeEnumTagMultiPayload();
    sub_23E0B4130();
    sub_23E0B41AC(&qword_256D25268, &qword_256D251C0, (uint64_t (*)(void))sub_23E0B4094);
    sub_23E136480();
    sub_23DF89C7C(v49, &qword_256D251D8);
    sub_23DF89C7C(v48, &qword_256D251E8);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v27, v21);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v78, v41);
  }
}

uint64_t sub_23E0B260C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, CGFloat a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  double v51;
  CGFloat v52;
  void (*v53)(uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  CGFloat v58;
  uint64_t v59;
  double v60;
  CGFloat v61;
  CGColor *GenericRGB;
  NSString *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v6 = v5;
  v87 = a2;
  v86 = sub_23E135BD4();
  v83 = *(_QWORD *)(v86 - 8);
  v11 = MEMORY[0x24BDAC7A8](v86);
  v84 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v82 = (uint64_t)&v69 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v81 = (uint64_t)&v69 - v15;
  v16 = sub_23E136084();
  v79 = *(_QWORD *)(v16 - 8);
  v80 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v77 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = sub_23E13636C();
  v18 = *(_QWORD *)(v75 - 8);
  MEMORY[0x24BDAC7A8](v75);
  v71 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_23E13660C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25258);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25270);
  v73 = *(_QWORD *)(v27 - 8);
  v74 = v27;
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25250);
  MEMORY[0x24BDAC7A8](v30);
  v69 = (char *)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25240);
  MEMORY[0x24BDAC7A8](v78);
  v70 = (char *)&v69 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D251E0);
  MEMORY[0x24BDAC7A8](v33);
  v76 = (char *)&v69 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v26 = sub_23E136FE4();
  v26[1] = v35;
  v36 = (uint64_t)v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D25278) + 44);
  v85 = a1;
  sub_23E0B2CB8(a1, v6, v36, 0.0, 0.0, a3, a4, a5, a3, a3 * 0.03);
  sub_23E1365E8();
  v37 = sub_23DF89B88(&qword_256D25260, &qword_256D25258, MEMORY[0x24BDF4750]);
  v72 = v24;
  v38 = v18;
  sub_23E136AC8();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_23DF89C7C((uint64_t)v26, &qword_256D25258);
  LODWORD(v26) = *(unsigned __int8 *)(v6 + *(int *)(_s17FavoriteColorCellVMa(0) + 24));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9C0);
  if ((_DWORD)v26 == 1)
  {
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_23E138410;
    sub_23E136354();
    sub_23E136330();
  }
  else
  {
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = xmmword_23E138050;
    sub_23E136354();
  }
  v88 = v39;
  sub_23DF73F28(&qword_256D1D9C8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEED88], MEMORY[0x24BDEEDA8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D9D0);
  sub_23DF89B88(&qword_256D1D9D8, &qword_256D1D9D0, MEMORY[0x24BEE12C8]);
  v40 = v71;
  v41 = v75;
  sub_23E1374F4();
  v88 = v72;
  v89 = v37;
  swift_getOpaqueTypeConformance2();
  v42 = (uint64_t)v69;
  v43 = v74;
  sub_23E136AEC();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v43);
  v44 = v77;
  sub_23E136078();
  v45 = (uint64_t)v70;
  v46 = &v70[*(int *)(v78 + 36)];
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F550);
  v49 = v79;
  v48 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(&v46[*(int *)(v47 + 40)], v44, v80);
  *v46 = 0;
  sub_23DF89C1C(v42, v45, &qword_256D25250);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v44, v48);
  sub_23DF89C7C(v42, &qword_256D25250);
  v50 = v81;
  sub_23E0AA750(v81);
  sub_23E135BB0();
  v52 = v51;
  v53 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
  v54 = v50;
  v55 = v86;
  v53(v54, v86);
  v56 = v82;
  sub_23E0AA750(v82);
  sub_23E135BA4();
  v58 = v57;
  v53(v56, v55);
  v59 = v84;
  sub_23E0AA750(v84);
  sub_23E135B98();
  v61 = v60;
  v53(v59, v55);
  GenericRGB = CGColorCreateGenericRGB(v52, v58, v61, 1.0);
  v63 = AXNameFromColor(GenericRGB);

  v64 = sub_23E137170();
  v66 = v65;

  v88 = v64;
  v89 = v66;
  sub_23E0B424C();
  sub_23DF8DC18();
  v67 = (uint64_t)v76;
  sub_23E136A74();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v45, &qword_256D25240);
  return sub_23DF89340(v67, v87, &qword_256D251E0);
}

uint64_t sub_23E0B2CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, double a7@<D3>, double a8@<D4>, double a9@<D5>, double a10@<D7>)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  unsigned int *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  char *v78;
  char v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  double v82;
  uint64_t v83;
  double *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  CGFloat v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, uint64_t, uint64_t);
  char *v119;
  uint64_t v120;
  char *v121;
  char v122;
  void (*v123)(char *, uint64_t);
  uint64_t v124;
  unsigned int v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  void (*v131)(char *, uint64_t);
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  double v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  uint64_t KeyPath;
  uint64_t v144;
  char *v145;
  void (*v146)(char *, uint64_t, uint64_t);
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  int *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  unsigned __int8 v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unsigned __int8 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  void (*v192)(char *, uint64_t, uint64_t);
  void (*v193)(char *, char *, uint64_t);
  uint64_t v194;
  unsigned int v195;
  uint64_t v196;
  uint64_t v197;
  __int128 v198;
  void (*v199)(char *, char *, uint64_t);
  CGFloat v200;
  CGFloat width;
  CGFloat y;
  CGFloat v203;
  double v204;
  double v205;
  double v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  char *v213;
  char *v214;
  char *v215;
  double v216;
  double v217;
  CGFloat height;
  uint64_t v219;
  uint64_t v220;
  CGFloat x;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  double v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  __int128 v238;
  __int128 v239;
  char v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  unsigned __int8 v245;
  __int128 v246;
  uint64_t v247;
  uint64_t v248;
  unsigned __int8 v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  unsigned __int8 v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  __int128 v265;
  __int128 v266;
  char v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  char *v271;
  unsigned __int8 v272;
  double v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  unsigned __int8 v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  _BYTE v283[48];
  CGRect v284;
  CGRect v285;
  CGRect v286;
  CGRect v287;

  v232 = a7;
  v226 = a3;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25280);
  MEMORY[0x24BDAC7A8](v18);
  v213 = (char *)&v192 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25288);
  v20 = MEMORY[0x24BDAC7A8](v210);
  v225 = (uint64_t)&v192 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v211 = (char *)&v192 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v231 = (uint64_t)&v192 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25290);
  v26 = MEMORY[0x24BDAC7A8](v25);
  v236 = (uint64_t)&v192 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v233 = (uint64_t)&v192 - v28;
  v29 = sub_23E135D60();
  v220 = *(_QWORD *)(v29 - 8);
  x = *(double *)&v29;
  v30 = MEMORY[0x24BDAC7A8](v29);
  v215 = (char *)&v192 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x24BDAC7A8](v30);
  v208 = (char *)&v192 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v229 = (char *)&v192 - v35;
  v36 = MEMORY[0x24BDAC7A8](v34);
  v228 = (uint64_t)&v192 - v37;
  MEMORY[0x24BDAC7A8](v36);
  *(_QWORD *)&v217 = (char *)&v192 - v38;
  v39 = sub_23E136F90();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)&v192 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25298);
  v44 = MEMORY[0x24BDAC7A8](v43);
  v214 = (char *)&v192 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v44);
  v47 = (char *)&v192 - v46;
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252A0);
  v48 = MEMORY[0x24BDAC7A8](v219);
  v212 = (char *)&v192 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x24BDAC7A8](v48);
  v224 = (uint64_t)&v192 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v227 = (uint64_t)&v192 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  *(_QWORD *)&v206 = (char *)&v192 - v55;
  MEMORY[0x24BDAC7A8](v54);
  *(_QWORD *)&v216 = (char *)&v192 - v56;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252A8);
  v58 = MEMORY[0x24BDAC7A8](v57);
  v237 = (uint64_t)&v192 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v58);
  v61 = (char *)&v192 - v60;
  v62 = sub_23E135328();
  MEMORY[0x24BDAC7A8](v62);
  v64 = (char *)&v192 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = a1;
  v67 = a2;
  (*(void (**)(char *, uint64_t))(v65 + 16))(v64, v66);
  v68 = sub_23E0A9F3C((uint64_t)v64);
  *(_QWORD *)&height = *(int *)(_s17FavoriteColorCellVMa(0) + 24);
  v69 = *(_BYTE *)(v67 + *(_QWORD *)&height);
  v70 = (unsigned int *)MEMORY[0x24BDEB400];
  v234 = v68;
  v235 = v61;
  v230 = v67;
  v222 = v42;
  v223 = v39;
  v209 = v43;
  v207 = v40;
  if ((v69 & 1) != 0)
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252B8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 56))(v61, 1, 1, v71);
    v72 = *(_QWORD *)&x;
  }
  else
  {
    sub_23E136E04();
    sub_23E136F78();
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(&v47[*(int *)(v43 + 52)], v42, v39);
    v73 = v239;
    *(_OWORD *)v47 = v238;
    *((_OWORD *)v47 + 1) = v73;
    v47[32] = v240;
    *(_WORD *)&v47[*(int *)(v43 + 56)] = 256;
    (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v39);
    v205 = COERCE_DOUBLE(swift_getKeyPath());
    v74 = v228;
    sub_23DF9C970(v228);
    v75 = *v70;
    v72 = *(_QWORD *)&x;
    v76 = *(void (**)(char *, uint64_t, uint64_t))(v220 + 104);
    v77 = v220;
    v78 = v229;
    v76(v229, v75, *(_QWORD *)&x);
    sub_23DF73F28((unint64_t *)&qword_256D1E6A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB440]);
    v79 = sub_23E137158();
    v80 = *(void (**)(char *, uint64_t))(v77 + 8);
    v80(v78, v72);
    v80((char *)v74, v72);
    if ((v79 & 1) != 0)
      v81 = *MEMORY[0x24BDEB3F0];
    else
      v81 = v75;
    v82 = v217;
    v76(*(char **)&v217, v81, v72);
    v83 = *(_QWORD *)&v206;
    v84 = (double *)(*(_QWORD *)&v206 + *(int *)(v219 + 36));
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
    (*(void (**)(char *, double, uint64_t))(v77 + 16))((char *)v84 + *(int *)(v85 + 28), COERCE_DOUBLE(*(_QWORD *)&v82), v72);
    *v84 = v205;
    sub_23DF89C1C((uint64_t)v47, v83, &qword_256D25298);
    v80(*(char **)&v82, v72);
    sub_23DF89C7C((uint64_t)v47, &qword_256D25298);
    v86 = *(_QWORD *)&v216;
    sub_23DF89340(v83, *(uint64_t *)&v216, &qword_256D252A0);
    sub_23E136E04();
    v87 = v241;
    v88 = v242;
    v89 = v243;
    v90 = v244;
    v91 = v245;
    v92 = v227;
    sub_23DF89C1C(v86, v227, &qword_256D252A0);
    sub_23DF89C1C(v92, v237, &qword_256D252A0);
    v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252B0);
    v94 = v237 + *(int *)(v93 + 48);
    *(_QWORD *)v94 = v87;
    *(_QWORD *)(v94 + 8) = v88;
    *(_QWORD *)(v94 + 16) = v89;
    *(_QWORD *)(v94 + 24) = v90;
    *(_BYTE *)(v94 + 32) = v91;
    *(_QWORD *)(v94 + 40) = v234;
    *(_WORD *)(v94 + 48) = 256;
    *(double *)(v94 + 56) = 1.0 - a8;
    sub_23DFB720C(v87, v88, v89, v90, v91);
    swift_retain_n();
    sub_23DF89C7C(v86, &qword_256D252A0);
    v95 = v87;
    v96 = v237;
    sub_23DFB7374(v95, v88, v89, v90, v91);
    swift_release();
    v67 = v230;
    sub_23DF89C7C(v92, &qword_256D252A0);
    v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252B8);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v97 - 8) + 56))(v96, 0, 1, v97);
    sub_23DF89340(v96, (uint64_t)v235, &qword_256D252A8);
  }
  if (*(_BYTE *)(v67 + *(_QWORD *)&height) == 1)
  {
    v206 = a10;
    v204 = a8;
    v284.origin.x = a4;
    v284.origin.y = a5;
    v284.size.width = a6;
    v98 = v232;
    v284.size.height = v232;
    v285 = CGRectInset(v284, a9 * 0.08 * 0.5, a9 * 0.08 * 0.5);
    x = v285.origin.x;
    v216 = a4;
    v217 = a5;
    height = v285.size.height;
    v285.origin.x = a4;
    v285.origin.y = a5;
    v285.size.width = a6;
    v285.size.height = v98;
    v286 = CGRectInset(v285, a9 * 0.12, a9 * 0.12);
    y = v286.origin.y;
    v203 = v286.origin.x;
    v200 = v286.size.height;
    width = v286.size.width;
    sub_23E136E04();
    v198 = v246;
    v196 = v248;
    v197 = v247;
    v195 = v249;
    v99 = v222;
    sub_23E136F78();
    sub_23E135DCC();
    v100 = v250;
    v101 = v252;
    v102 = v253;
    v205 = a6;
    v103 = v254;
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252D0);
    v105 = (uint64_t)v213;
    v106 = &v213[*(int *)(v104 + 52)];
    v107 = v207;
    v199 = *(void (**)(char *, char *, uint64_t))(v207 + 16);
    v108 = v251;
    v109 = v223;
    v199(v106, v99, v223);
    *(_OWORD *)v105 = v198;
    v110 = v196;
    *(_QWORD *)(v105 + 16) = v197;
    *(_QWORD *)(v105 + 24) = v110;
    *(_BYTE *)(v105 + 32) = v195;
    *(_QWORD *)(v105 + 40) = v100;
    *(_QWORD *)(v105 + 48) = v108;
    *(_QWORD *)(v105 + 56) = v101;
    *(_QWORD *)(v105 + 64) = v102;
    *(_QWORD *)(v105 + 72) = v103;
    *(_WORD *)(v105 + *(int *)(v104 + 56)) = 256;
    sub_23E0B43A4((uint64_t)&v246, (uint64_t)v283);
    sub_23E0B43E0((uint64_t)v283, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23DFB720C);
    v111 = sub_23E136FE4();
    v113 = v112;
    v114 = (uint64_t *)(v105 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D252D8) + 36));
    *v114 = v111;
    v114[1] = v113;
    v207 = *(_QWORD *)(v107 + 8);
    ((void (*)(char *, uint64_t))v207)(v99, v109);
    sub_23E0B43E0((uint64_t)&v246, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23DFB7374);
    *(_QWORD *)&v198 = swift_getKeyPath();
    v115 = v228;
    sub_23DF9C970(v228);
    v116 = *MEMORY[0x24BDEB400];
    v117 = v220;
    v118 = *(void (**)(char *, uint64_t, uint64_t))(v220 + 104);
    v119 = v229;
    v118(v229, v116, v72);
    v192 = v118;
    v196 = sub_23DF73F28((unint64_t *)&qword_256D1E6A8, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB418], MEMORY[0x24BDEB440]);
    v120 = v72;
    v121 = v119;
    v122 = sub_23E137158();
    v123 = *(void (**)(char *, uint64_t))(v117 + 8);
    v123(v121, v120);
    v124 = v120;
    v123((char *)v115, v120);
    v125 = *MEMORY[0x24BDEB3F0];
    v195 = *MEMORY[0x24BDEB3F0];
    if ((v122 & 1) != 0)
      v126 = v125;
    else
      v126 = v116;
    v127 = v208;
    v118(v208, v126, v120);
    v128 = (uint64_t)v211;
    v129 = &v211[*(int *)(v210 + 36)];
    v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
    v130 = &v129[*(int *)(v194 + 28)];
    v193 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
    v193(v130, v127, v124);
    *(_QWORD *)v129 = v198;
    sub_23DF89C1C(v105, v128, &qword_256D25280);
    v123(v127, v124);
    v131 = v123;
    sub_23DF89C7C(v105, &qword_256D25280);
    sub_23DF89340(v128, v231, &qword_256D25288);
    sub_23E136E04();
    height = *(double *)&v256;
    v220 = v255;
    x = *(double *)&v257;
    v210 = v258;
    LODWORD(v213) = v259;
    sub_23E135DCC();
    v132 = v260;
    v208 = v262;
    v211 = v263;
    v133 = v264;
    swift_retain();
    v134 = sub_23E136FE4();
    v197 = v135;
    *(_QWORD *)&v198 = v134;
    v136 = 1.0 - v204;
    sub_23E136E04();
    v137 = v222;
    sub_23E136F78();
    v138 = v209;
    v139 = (uint64_t)v214;
    v140 = v261;
    v141 = v223;
    v199(&v214[*(int *)(v209 + 52)], v137, v223);
    v142 = v266;
    *(_OWORD *)v139 = v265;
    *(_OWORD *)(v139 + 16) = v142;
    *(_BYTE *)(v139 + 32) = v267;
    *(_WORD *)(v139 + *(int *)(v138 + 56)) = 256;
    ((void (*)(char *, uint64_t))v207)(v137, v141);
    KeyPath = swift_getKeyPath();
    v144 = v228;
    sub_23DF9C970(v228);
    v145 = v229;
    v146 = v192;
    v192(v229, v116, v124);
    LOBYTE(v138) = sub_23E137158();
    v131(v145, v124);
    v131((char *)v144, v124);
    if ((v138 & 1) != 0)
      v147 = v195;
    else
      v147 = v116;
    v148 = v215;
    v146(v215, v147, v124);
    v149 = (uint64_t)v212;
    v150 = (uint64_t *)&v212[*(int *)(v219 + 36)];
    v193((char *)v150 + *(int *)(v194 + 28), v148, v124);
    *v150 = KeyPath;
    sub_23DF89C1C(v139, v149, &qword_256D25298);
    v131(v148, v124);
    sub_23DF89C7C(v139, &qword_256D25298);
    v151 = v224;
    sub_23DF89340(v149, v224, &qword_256D252A0);
    sub_23E136E04();
    v152 = v268;
    v223 = v268;
    v153 = v270;
    v229 = v271;
    v230 = v269;
    LODWORD(v228) = v272;
    v154 = v225;
    sub_23DF89C1C(v231, v225, &qword_256D25288);
    v155 = v151;
    v156 = v227;
    sub_23DF89C1C(v155, v227, &qword_256D252A0);
    v157 = v236;
    sub_23DF89C1C(v154, v236, &qword_256D25288);
    v158 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D252E0);
    v159 = v157 + v158[12];
    v160 = *(_QWORD *)&height;
    *(_QWORD *)v159 = v220;
    *(_QWORD *)(v159 + 8) = v160;
    v161 = v210;
    v162 = v211;
    *(CGFloat *)(v159 + 16) = x;
    *(_QWORD *)(v159 + 24) = v161;
    v163 = v213;
    *(_BYTE *)(v159 + 32) = (_BYTE)v213;
    *(_QWORD *)(v159 + 40) = v132;
    *(_QWORD *)(v159 + 48) = v140;
    a4 = v216;
    a5 = v217;
    *(_QWORD *)(v159 + 56) = v208;
    *(_QWORD *)(v159 + 64) = v162;
    *(_QWORD *)(v159 + 72) = v133;
    a6 = v205;
    a10 = v206;
    v164 = v234;
    *(_QWORD *)(v159 + 80) = v234;
    *(_WORD *)(v159 + 88) = 256;
    v165 = v197;
    *(_QWORD *)(v159 + 96) = v198;
    *(_QWORD *)(v159 + 104) = v165;
    *(double *)(v159 + 112) = v136;
    sub_23DF89C1C(v156, v157 + v158[16], &qword_256D252A0);
    v166 = v157 + v158[20];
    *(_QWORD *)v166 = v152;
    v168 = (uint64_t)v229;
    v167 = v230;
    *(_QWORD *)(v166 + 8) = v230;
    *(_QWORD *)(v166 + 16) = v153;
    *(_QWORD *)(v166 + 24) = v168;
    LOBYTE(v157) = v228;
    *(_BYTE *)(v166 + 32) = v228;
    *(_QWORD *)(v166 + 40) = v164;
    *(_WORD *)(v166 + 48) = 256;
    *(double *)(v166 + 56) = v136;
    swift_retain();
    sub_23DFB720C(v220, *(uint64_t *)&height, *(uint64_t *)&x, v161, v163);
    swift_bridgeObjectRetain();
    swift_retain();
    v169 = v223;
    sub_23DFB720C(v223, v167, v153, v168, v157);
    swift_retain();
    sub_23DF89C7C(v224, &qword_256D252A0);
    sub_23DF89C7C(v231, &qword_256D25288);
    v170 = v169;
    v171 = v236;
    sub_23DFB7374(v170, v167, v153, v168, v157);
    swift_release();
    sub_23DF89C7C(v227, &qword_256D252A0);
    sub_23DFB7374(v220, *(uint64_t *)&height, *(uint64_t *)&x, v210, v213);
    swift_release();
    swift_bridgeObjectRelease();
    sub_23DF89C7C(v225, &qword_256D25288);
    v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252C0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v172 - 8) + 56))(v171, 0, 1, v172);
    v173 = v233;
    sub_23DF89340(v171, v233, &qword_256D25290);
  }
  else
  {
    v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252C0);
    v173 = v233;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56))(v233, 1, 1, v174);
    v171 = v236;
  }
  v287.origin.x = a4;
  v287.origin.y = a5;
  v287.size.width = a6;
  v287.size.height = v232;
  CGRectInset(v287, a10 * 0.5, a10 * 0.5);
  sub_23E136E04();
  v175 = v274;
  v176 = v275;
  v231 = v276;
  v232 = v273;
  v177 = v277;
  sub_23E135DCC();
  v178 = v278;
  v179 = v280;
  v229 = v281;
  v180 = v282;
  v230 = sub_23E136C24();
  v181 = swift_getKeyPath();
  v182 = v237;
  sub_23DF89C1C((uint64_t)v235, v237, &qword_256D252A8);
  sub_23DF89C1C(v173, v171, &qword_256D25290);
  v183 = v226;
  sub_23DF89C1C(v182, v226, &qword_256D252A8);
  v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252C8);
  sub_23DF89C1C(v171, v183 + *(int *)(v184 + 48), &qword_256D25290);
  v185 = v183 + *(int *)(v184 + 64);
  v187 = v231;
  v186 = *(_QWORD *)&v232;
  sub_23DFB720C(*(uint64_t *)&v232, v175, v176, v231, v177);
  v188 = v229;
  swift_bridgeObjectRetain();
  swift_retain();
  v189 = v230;
  swift_retain();
  swift_release();
  *(_QWORD *)v185 = v186;
  *(_QWORD *)(v185 + 8) = v175;
  *(_QWORD *)(v185 + 16) = v176;
  *(_QWORD *)(v185 + 24) = v187;
  *(_BYTE *)(v185 + 32) = v177;
  v190 = v279;
  *(_QWORD *)(v185 + 40) = v178;
  *(_QWORD *)(v185 + 48) = v190;
  *(_QWORD *)(v185 + 56) = v179;
  *(_QWORD *)(v185 + 64) = v188;
  *(_QWORD *)(v185 + 72) = v180;
  *(_QWORD *)(v185 + 80) = v181;
  *(_QWORD *)(v185 + 88) = v189;
  *(_QWORD *)(v185 + 96) = 0x3FB999999999999ALL;
  sub_23DF89C7C(v233, &qword_256D25290);
  sub_23DF89C7C((uint64_t)v235, &qword_256D252A8);
  sub_23DFB7374(v186, v175, v176, v187, v177);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_23DF89C7C(v236, &qword_256D25290);
  return sub_23DF89C7C(v237, &qword_256D252A8);
}

uint64_t sub_23E0B3E2C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_23DF73E10(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), _s17FavoriteColorCellVMa);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  result = sub_23E0B3FF4((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_23E0B4038;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v7;
  return result;
}

uint64_t sub_23E0B3ED8()
{
  return sub_23DF73F28(&qword_256D251B0, _s17FavoriteColorCellV5ValueOMa, (uint64_t)&unk_23E141218);
}

uint64_t sub_23E0B3F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;

  v1 = _s17FavoriteColorCellVMa(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23E135D60();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v3, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v0 + v3 + *(int *)(v1 + 20);
  _s17FavoriteColorCellV5ValueOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_23E135328();
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = sub_23E1358D4();
LABEL_8:
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  return swift_deallocObject();
}

uint64_t sub_23E0B3FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s17FavoriteColorCellVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0B4038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(_s17FavoriteColorCellVMa(0) - 8) + 80);
  return sub_23E0B1A00(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_23E0B4094()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D251F8;
  if (!qword_256D251F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D251F0);
    v2[0] = sub_23DF89B88(&qword_256D25200, &qword_256D25208, MEMORY[0x24BDEB358]);
    v2[1] = sub_23DF89B88(&qword_256D25210, &qword_256D25218, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D251F8);
  }
  return result;
}

unint64_t sub_23E0B4130()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25220;
  if (!qword_256D25220)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D251D8);
    v2[0] = sub_23E0B41AC(&qword_256D25228, &qword_256D251E8, sub_23E0B4230);
    v2[1] = v2[0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25220);
  }
  return result;
}

uint64_t sub_23E0B41AC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_23E0B4230()
{
  return sub_23E0B41AC(&qword_256D25230, &qword_256D251E0, (uint64_t (*)(void))sub_23E0B424C);
}

unint64_t sub_23E0B424C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25238;
  if (!qword_256D25238)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25240);
    v2[0] = sub_23E0B42D0();
    v2[1] = sub_23DF89B88(&qword_256D1F548, &qword_256D1F550, MEMORY[0x24BDF0960]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25238);
  }
  return result;
}

unint64_t sub_23E0B42D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D25248;
  if (!qword_256D25248)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25250);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25258);
    v2[3] = sub_23DF89B88(&qword_256D25260, &qword_256D25258, MEMORY[0x24BDF4750]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25248);
  }
  return result;
}

uint64_t sub_23E0B43A4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BDF1B28] - 8) + 32))(a2, a1);
  return a2;
}

uint64_t sub_23E0B43E0(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  return a1;
}

uint64_t sub_23E0B4418(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  char *v22;
  char v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = sub_23E135328();
  v28 = *(_QWORD *)(v3 - 8);
  v29 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v27 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E1358D4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = _s17FavoriteColorCellV5ValueOMa(0);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v27 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D252F0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_23DF73E10(a1, (uint64_t)v18, _s17FavoriteColorCellV5ValueOMa);
  sub_23DF73E10(v30, v19, _s17FavoriteColorCellV5ValueOMa);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23DF73E10((uint64_t)v18, (uint64_t)v14, _s17FavoriteColorCellV5ValueOMa);
    if (!swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v19, v5);
      v23 = MEMORY[0x24264A180](v14, v8);
      v24 = *(void (**)(char *, uint64_t))(v6 + 8);
      v24(v8, v5);
      v25 = v14;
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_23DF73E10((uint64_t)v18, (uint64_t)v12, _s17FavoriteColorCellV5ValueOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = v27;
      v21 = v28;
      v5 = v29;
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v27, v19, v29);
      v23 = sub_23E13531C();
      v24 = *(void (**)(char *, uint64_t))(v21 + 8);
      v24(v22, v5);
      v25 = v12;
LABEL_12:
      v24(v25, v5);
      sub_23E0B0AB4((uint64_t)v18);
      return v23 & 1;
    }
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v29);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_23DF89C7C((uint64_t)v18, &qword_256D252F0);
    v23 = 0;
    return v23 & 1;
  }
  sub_23E0B0AB4((uint64_t)v18);
  v23 = 1;
  return v23 & 1;
}

uint64_t sub_23E0B46E0()
{
  return sub_23DF89B88(&qword_256D252F8, &qword_256D25300, MEMORY[0x24BDEC6F8]);
}

uint64_t sub_23E0B470C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  double v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  double v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  double v64;
  int v65;
  int v66;
  uint64_t v67;

  v64 = *(double *)&a1;
  v65 = a2 & 1;
  v66 = a2;
  v44 = sub_23E1370A4();
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v42 = (uint64_t *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_23E137398();
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254E8);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254F0);
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v52 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254F8);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v45 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25500);
  v63 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v62 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254D0);
  v11 = MEMORY[0x24BDAC7A8](v61);
  v60 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v40 - v13;
  v15 = sub_23E1373B0();
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E137380();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v18);
  v20 = sub_23E1370D4();
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v2 + 32) = 0;
  sub_23DF975A0();
  sub_23E1370C8();
  v67 = MEMORY[0x24BEE4AF8];
  sub_23DF73F28(&qword_256D24C40, v19, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C48);
  sub_23DF89B88((unint64_t *)&qword_256D24C50, &qword_256D24C48, MEMORY[0x24BEE12C8]);
  sub_23E1374F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v17, *MEMORY[0x24BEE5750], v58);
  v21 = v59;
  v22 = sub_23E1373D4();
  v23 = v56;
  *(_QWORD *)(v56 + 40) = v22;
  v24 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 120);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254D8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
  sub_23DF89C1C((uint64_t)v14, v60, &qword_256D254D0);
  v26 = v62;
  sub_23E135C64();
  sub_23DF89C7C((uint64_t)v14, &qword_256D254D0);
  v27 = v24;
  v28 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v27, v26, v21);
  *(double *)(v23 + 16) = v28;
  *(_BYTE *)(v23 + 24) = v65;
  if ((v66 & 1) != 0)
    return v23;
  swift_beginAccess();
  v29 = v53;
  sub_23E135C70();
  swift_endAccess();
  sub_23DF89B88(&qword_256D25508, &qword_256D254E8, MEMORY[0x24BDB9EE8]);
  v30 = v52;
  v31 = v55;
  sub_23E135CAC();
  result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v29, v31);
  if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v33 = v28;
  if (v28 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v28 < 9.22337204e18)
  {
    v34 = v42;
    *v42 = (uint64_t)v33;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v41 + 104))(v34, *MEMORY[0x24BEE5410], v44);
    v35 = v49;
    sub_23E1373A4();
    v67 = *(_QWORD *)(v23 + 40);
    sub_23DF89B88(&qword_256D25510, &qword_256D254F0, MEMORY[0x24BDB94C8]);
    sub_23DF73F28(&qword_256D24C38, (uint64_t (*)(uint64_t))sub_23DF975A0, MEMORY[0x24BEE5670]);
    v36 = v45;
    v37 = v46;
    sub_23E135CB8();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v51);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v37);
    sub_23DF89B88(qword_256D25518, &qword_256D254F8, MEMORY[0x24BDB9988]);
    v38 = v48;
    v39 = sub_23E135CC4();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v38);
    *(_QWORD *)(v23 + 32) = v39;
    swift_release();
    return v23;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_23E0B4DB8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, _QWORD, uint64_t);
  double v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t result;
  _QWORD *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  double v53;
  int v54;
  int v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _OWORD v60[2];

  v3 = v2;
  v53 = *(double *)&a1;
  v54 = a2 & 1;
  v55 = a2;
  v37 = sub_23E1370A4();
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v35 = (uint64_t *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = sub_23E137398();
  v43 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v42 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D256B8);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v46 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D256C0);
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v45 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D256C8);
  v40 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v38 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D256D0);
  v52 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23E1373B0();
  v12 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_23E137380();
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v15);
  v17 = sub_23E1370D4();
  MEMORY[0x24BDAC7A8](v17);
  *(_QWORD *)(v3 + 32) = 0;
  v49 = sub_23DF975A0();
  sub_23E1370C8();
  *(_QWORD *)&v56 = MEMORY[0x24BEE4AF8];
  sub_23DF73F28(&qword_256D24C40, v16, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C48);
  sub_23DF89B88((unint64_t *)&qword_256D24C50, &qword_256D24C48, MEMORY[0x24BEE12C8]);
  v18 = v10;
  sub_23E1374F4();
  v19 = *(void (**)(char *, _QWORD, uint64_t))(v12 + 104);
  v20 = v53;
  v19(v14, *MEMORY[0x24BEE5750], v50);
  *(_QWORD *)(v3 + 40) = sub_23E1373D4();
  v21 = v3 + *(_QWORD *)(*(_QWORD *)v3 + 120);
  v59 = 0u;
  memset(v60, 0, 26);
  v57 = 0u;
  v58 = 0u;
  v56 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D256D8);
  v22 = v51;
  sub_23E135C64();
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v21, v22, v18);
  *(double *)(v3 + 16) = v20;
  *(_BYTE *)(v3 + 24) = v54;
  if ((v55 & 1) != 0)
    return v3;
  swift_beginAccess();
  v23 = v46;
  sub_23E135C70();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D256E0);
  sub_23DF89B88(&qword_256D256E8, &qword_256D256B8, MEMORY[0x24BDB9EE8]);
  v24 = v45;
  v25 = v48;
  sub_23E135CAC();
  result = (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v23, v25);
  if ((~*(_QWORD *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v20 < 9.22337204e18)
  {
    v27 = v35;
    *v35 = (uint64_t)v20;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v34 + 104))(v27, *MEMORY[0x24BEE5410], v37);
    v28 = v42;
    sub_23E1373A4();
    *(_QWORD *)&v56 = *(_QWORD *)(v3 + 40);
    sub_23DF89B88(&qword_256D256F0, &qword_256D256C0, MEMORY[0x24BDB94C8]);
    sub_23DF73F28(&qword_256D24C38, (uint64_t (*)(uint64_t))sub_23DF975A0, MEMORY[0x24BEE5670]);
    v29 = v38;
    v30 = v39;
    sub_23E135CB8();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v44);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v30);
    sub_23DF89B88(&qword_256D256F8, &qword_256D256C8, MEMORY[0x24BDB9988]);
    v31 = v41;
    v32 = sub_23E135CC4();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v29, v31);
    *(_QWORD *)(v3 + 32) = v32;
    swift_release();
    return v3;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_23E0B541C(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  double v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t result;
  double v33;
  _QWORD *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  double v64;
  int v65;
  int v66;
  uint64_t v67;

  v64 = *(double *)&a1;
  v65 = a2 & 1;
  v66 = a2;
  v44 = sub_23E1370A4();
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v42 = (uint64_t *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_23E137398();
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25718);
  v54 = *(_QWORD *)(v6 - 8);
  v55 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v53 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25720);
  v43 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v52 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25728);
  v47 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v45 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25730);
  v63 = *(_QWORD *)(v59 - 8);
  MEMORY[0x24BDAC7A8](v59);
  v62 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25700);
  v11 = MEMORY[0x24BDAC7A8](v61);
  v60 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v40 - v13;
  v15 = sub_23E1373B0();
  v57 = *(_QWORD *)(v15 - 8);
  v58 = v15;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E137380();
  v19 = (uint64_t (*)(uint64_t))MEMORY[0x24BEE5688];
  MEMORY[0x24BDAC7A8](v18);
  v20 = sub_23E1370D4();
  MEMORY[0x24BDAC7A8](v20);
  *(_QWORD *)(v2 + 32) = 0;
  sub_23DF975A0();
  sub_23E1370C8();
  v67 = MEMORY[0x24BEE4AF8];
  sub_23DF73F28(&qword_256D24C40, v19, MEMORY[0x24BEE5698]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C48);
  sub_23DF89B88((unint64_t *)&qword_256D24C50, &qword_256D24C48, MEMORY[0x24BEE12C8]);
  sub_23E1374F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v57 + 104))(v17, *MEMORY[0x24BEE5750], v58);
  v21 = v59;
  v22 = sub_23E1373D4();
  v23 = v56;
  *(_QWORD *)(v56 + 40) = v22;
  v24 = v23 + *(_QWORD *)(*(_QWORD *)v23 + 120);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25708);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
  sub_23DF89C1C((uint64_t)v14, v60, &qword_256D25700);
  v26 = v62;
  sub_23E135C64();
  sub_23DF89C7C((uint64_t)v14, &qword_256D25700);
  v27 = v24;
  v28 = v64;
  (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v27, v26, v21);
  *(double *)(v23 + 16) = v28;
  *(_BYTE *)(v23 + 24) = v65;
  if ((v66 & 1) != 0)
    return v23;
  swift_beginAccess();
  v29 = v53;
  sub_23E135C70();
  swift_endAccess();
  sub_23DF89B88(&qword_256D25738, &qword_256D25718, MEMORY[0x24BDB9EE8]);
  v30 = v52;
  v31 = v55;
  sub_23E135CAC();
  result = (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v29, v31);
  if ((~*(_QWORD *)&v28 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  v33 = v28;
  if (v28 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v28 < 9.22337204e18)
  {
    v34 = v42;
    *v42 = (uint64_t)v33;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v41 + 104))(v34, *MEMORY[0x24BEE5410], v44);
    v35 = v49;
    sub_23E1373A4();
    v67 = *(_QWORD *)(v23 + 40);
    sub_23DF89B88(&qword_256D25740, &qword_256D25720, MEMORY[0x24BDB94C8]);
    sub_23DF73F28(&qword_256D24C38, (uint64_t (*)(uint64_t))sub_23DF975A0, MEMORY[0x24BEE5670]);
    v36 = v45;
    v37 = v46;
    sub_23E135CB8();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v51);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v37);
    sub_23DF89B88(&qword_256D25748, &qword_256D25728, MEMORY[0x24BDB9988]);
    v38 = v48;
    v39 = sub_23E135CC4();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v36, v38);
    *(_QWORD *)(v23 + 32) = v39;
    swift_release();
    return v23;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_23E0B5AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23DF89C1C(a1, a2, &qword_256D254D0);
}

uint64_t sub_23E0B5AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23DF89C1C(a1, a2, &qword_256D25700);
}

uint64_t sub_23E0B5B08(uint64_t a1)
{
  return sub_23E0B5B50(a1, &qword_256D1D5E8, &qword_256D254D8, type metadata accessor for Device.Control.ColorState, &qword_256D1ECC0);
}

uint64_t sub_23E0B5B2C(uint64_t a1)
{
  return sub_23E0B5B50(a1, &qword_256D1D5D8, &qword_256D25708, type metadata accessor for Device.Control.IncrementalState, &qword_256D1EC98);
}

uint64_t sub_23E0B5B50(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(_QWORD), uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_23DF73E10(a1 + *(int *)(v12 + 36), (uint64_t)v11, a4);
  v13 = a4(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v11, 0, 1, v13);
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return sub_23E136E70();
}

uint64_t sub_23E0B5C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254D0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254D8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v17, &qword_256D1ECC0);
  v18 = (uint64_t)&v17[*(int *)(v14 + 36)];
  sub_23DF73E10(a2, v18, type metadata accessor for Device.Control.ColorState);
  if (*(_BYTE *)(v2 + 24) == 1 && !*(_QWORD *)(v2 + 16))
  {
    sub_23DF73E10(v18, (uint64_t)v13, type metadata accessor for Device.Control.ColorState);
    v23 = type metadata accessor for Device.Control.ColorState(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 0, 1, v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
    sub_23E136E70();
  }
  else
  {
    sub_23DF89C1C((uint64_t)v17, (uint64_t)v10, &qword_256D254D8);
    v19 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    MEMORY[0x24BDAC7A8](v19);
    v20 = type metadata accessor for Device.Control.ColorState(0);
    *(&v25 - 2) = v20;
    v21 = sub_23DF73F28(&qword_256D254E0, type metadata accessor for Device.Control.ColorState, (uint64_t)&protocol conformance descriptor for Device.Control.ColorState);
    *(&v25 - 1) = v21;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v25 - 2) = v20;
    *(&v25 - 1) = v21;
    swift_getKeyPath();
    sub_23DF89C1C((uint64_t)v10, (uint64_t)v8, &qword_256D254D0);
    swift_retain();
    sub_23E135C88();
    sub_23DF89C7C((uint64_t)v10, &qword_256D254D0);
  }
  return sub_23DF89C7C((uint64_t)v17, &qword_256D254D8);
}

uint64_t sub_23E0B5EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25700);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25708);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v17, &qword_256D1EC98);
  v18 = (uint64_t)&v17[*(int *)(v14 + 36)];
  sub_23DF73E10(a2, v18, type metadata accessor for Device.Control.IncrementalState);
  if (*(_BYTE *)(v2 + 24) == 1 && !*(_QWORD *)(v2 + 16))
  {
    sub_23DF73E10(v18, (uint64_t)v13, type metadata accessor for Device.Control.IncrementalState);
    v23 = type metadata accessor for Device.Control.IncrementalState(0);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v13, 0, 1, v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EC98);
    sub_23E136E70();
  }
  else
  {
    sub_23DF89C1C((uint64_t)v17, (uint64_t)v10, &qword_256D25708);
    v19 = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    MEMORY[0x24BDAC7A8](v19);
    v20 = type metadata accessor for Device.Control.IncrementalState(0);
    *(&v25 - 2) = v20;
    v21 = sub_23DF73F28(&qword_256D25710, type metadata accessor for Device.Control.IncrementalState, (uint64_t)&protocol conformance descriptor for Device.Control.IncrementalState);
    *(&v25 - 1) = v21;
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    *(&v25 - 2) = v20;
    *(&v25 - 1) = v21;
    swift_getKeyPath();
    sub_23DF89C1C((uint64_t)v10, (uint64_t)v8, &qword_256D25700);
    swift_retain();
    sub_23E135C88();
    sub_23DF89C7C((uint64_t)v10, &qword_256D25700);
  }
  return sub_23DF89C7C((uint64_t)v17, &qword_256D25708);
}

uint64_t sub_23E0B61A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t KeyPath;

  if (*(_BYTE *)(v1 + 24) == 1 && !*(_QWORD *)(v1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
    return sub_23E136E70();
  }
  else
  {
    MEMORY[0x24BDAC7A8](a1);
    sub_23E004A4C();
    KeyPath = swift_getKeyPath();
    MEMORY[0x24BDAC7A8](KeyPath);
    swift_getKeyPath();
    sub_23E0BD5E8(a1);
    sub_23E0BD5E8(a1);
    swift_retain();
    sub_23E135C88();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_23E0B63D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  uint64_t v25;
  unsigned __int8 *v26;
  int v27;
  int v28;
  int v29;
  int v30;
  _BYTE *v31;
  unint64_t v32;
  uint64_t v33;
  int *v34;
  _BYTE *v35;
  uint64_t (**v36)();
  BOOL *v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  void (*v42)(_BYTE *, uint64_t);
  _BYTE v44[12];
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  char v58;
  uint64_t v59;
  char v60;

  v57 = a3;
  v5 = (int *)type metadata accessor for ColorViewModifier(0);
  v53 = *((_QWORD *)v5 - 1);
  MEMORY[0x24BDAC7A8](v5);
  v52 = v6;
  v54 = &v44[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v44[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25498);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v56 = &v44[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v11);
  v14 = &v44[-v13];
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254A0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = &v44[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v20 = &v44[-v19];
  v55 = v21;
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v21 + 16);
  v22(&v44[-v19], a1, v15);
  v23 = a2 + v5[7];
  v24 = *(_BYTE *)v23;
  v25 = *(_QWORD *)(v23 + 8);
  v58 = v24;
  v59 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  sub_23E136D98();
  if (v60 == 1)
  {
    sub_23E136E88();
    v26 = (unsigned __int8 *)(a2 + v5[6]);
    v27 = *v26;
    v50 = v26[1];
    v51 = v27;
    v28 = v26[2];
    v48 = *((unsigned __int16 *)v26 + 2);
    v49 = v28;
    v29 = v26[6];
    v46 = *((unsigned __int16 *)v26 + 4);
    v47 = v29;
    v45 = v26[10];
    v30 = *(unsigned __int8 *)(a2 + v5[8]);
    v31 = v54;
    sub_23DF73E10(a2, (uint64_t)v54, type metadata accessor for ColorViewModifier);
    v32 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v33 = swift_allocObject();
    sub_23DF89384((uint64_t)v31, v33 + v32, type metadata accessor for ColorViewModifier);
    sub_23DF89340((uint64_t)v9, (uint64_t)v14, &qword_256D1ECC0);
    v34 = (int *)type metadata accessor for ColorFullScreenView(0);
    v35 = &v14[v34[5]];
    *v35 = v51;
    v35[1] = v50;
    v35[2] = v49;
    *((_WORD *)v35 + 2) = v48;
    v35[6] = v47;
    *((_WORD *)v35 + 4) = v46;
    v35[10] = v45;
    v36 = (uint64_t (**)())&v14[v34[7]];
    *v36 = sub_23E0BB81C;
    v36[1] = (uint64_t (*)())v33;
    v14[v34[6]] = v30;
    v37 = &v14[v34[8]];
    *v37 = v30 != 0;
    *((_QWORD *)v37 + 1) = 0;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(*((_QWORD *)v34 - 1) + 56))(v14, 0, 1, v34);
  }
  else
  {
    v38 = type metadata accessor for ColorFullScreenView(0);
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v14, 1, 1, v38);
  }
  v22(v18, (uint64_t)v20, v15);
  v39 = v56;
  sub_23DF89C1C((uint64_t)v14, (uint64_t)v56, &qword_256D25498);
  v40 = v57;
  v22(v57, (uint64_t)v18, v15);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254A8);
  sub_23DF89C1C((uint64_t)v39, (uint64_t)&v40[*(int *)(v41 + 48)], &qword_256D25498);
  sub_23DF89C7C((uint64_t)v14, &qword_256D25498);
  v42 = *(void (**)(_BYTE *, uint64_t))(v55 + 8);
  v42(v20, v15);
  sub_23DF89C7C((uint64_t)v39, &qword_256D25498);
  return ((uint64_t (*)(_BYTE *, uint64_t))v42)(v18, v15);
}

uint64_t sub_23E0B67B0()
{
  type metadata accessor for ColorViewModifier(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  return sub_23E136DA4();
}

uint64_t sub_23E0B6814@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  *a2 = sub_23E136FE4();
  a2[1] = v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25490);
  return sub_23E0B63D0(a1, v2, (_BYTE *)a2 + *(int *)(v6 + 44));
}

void sub_23E0B6864(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  if (*(_BYTE *)(v1 + 24))
    v2 = 1000;
  *a1 = v2;
}

uint64_t sub_23E0B6880@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  CGFloat v13;
  double v14;
  CGFloat v15;
  void (*v16)(char *, uint64_t);
  double MidX;
  double v18;
  CGFloat v19;
  double v20;
  CGFloat v21;
  double v22;
  CGFloat v23;
  double v24;
  CGFloat v25;
  double MidY;
  uint64_t v27;
  char v28;
  char v29;
  char v30;
  __int16 v31;
  char v32;
  __int16 v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  __int16 v39;
  char v40;
  __int16 v41;
  char v42;
  CGRect v43;
  CGRect v44;

  v4 = sub_23E136498();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1365A0();
  sub_23E135E8C();
  v9 = v8;
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v7, v4);
  v43.origin.x = v9;
  v43.origin.y = v11;
  v43.size.width = v13;
  v43.size.height = v15;
  MidX = CGRectGetMidX(v43);
  sub_23E1365A0();
  sub_23E135E8C();
  v19 = v18;
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v16(v7, v4);
  v44.origin.x = v19;
  v44.origin.y = v21;
  v44.size.width = v23;
  v44.size.height = v25;
  MidY = CGRectGetMidY(v44);
  v27 = a1 + *(int *)(type metadata accessor for ColorFullScreenView(0) + 20);
  v28 = *(_BYTE *)v27;
  v29 = *(_BYTE *)(v27 + 1);
  v30 = *(_BYTE *)(v27 + 2);
  v31 = *(_WORD *)(v27 + 4);
  v32 = *(_BYTE *)(v27 + 6);
  v33 = *(_WORD *)(v27 + 8);
  LOBYTE(v27) = *(_BYTE *)(v27 + 10);
  BYTE4(v38) = v28;
  BYTE5(v38) = v29;
  BYTE6(v38) = v30;
  v39 = v31;
  v40 = v32;
  v41 = v33;
  v42 = v27;
  v34 = (_BYTE *)sub_23DFC37CC((unsigned __int8 *)&v38 + 4);
  *a2 = sub_23E136FE4();
  a2[1] = v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D255D0);
  sub_23E0B6A44(a1, v34, (uint64_t)a2 + *(int *)(v36 + 44), MidX, MidY);
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E0B6A44@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  char v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int16 v45;
  unsigned __int8 v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  int *v52;
  _BYTE *v53;
  __int16 v54;
  int v55;
  _BYTE *v56;
  uint64_t (**v57)();
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  void (*v71)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v72;
  uint64_t v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(_BYTE *, uint64_t);
  _BYTE v79[12];
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  _BYTE *v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  uint64_t v101;
  _BYTE *v102;
  _QWORD *v103;
  uint64_t v104;
  char v105;

  v96 = a2;
  v91 = a1;
  v101 = a3;
  v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v87 = *(_QWORD *)(v86 - 8);
  MEMORY[0x24BDAC7A8](v86);
  v88 = v7;
  v89 = &v79[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v93 = &v79[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D255D8);
  MEMORY[0x24BDAC7A8](v10);
  v100 = &v79[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v94 = &v79[-v13];
  v92 = type metadata accessor for ColorFullScreenView(0);
  v90 = *(_QWORD *)(v92 - 8);
  v14 = *(_QWORD *)(v90 + 64);
  MEMORY[0x24BDAC7A8](v92);
  v85 = &v79[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v15);
  v17 = &v79[-v16];
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D255E0);
  v97 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v98 = &v79[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v19);
  v21 = &v79[-v20];
  v22 = sub_23E136F90();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = &v79[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D255E8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = &v79[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v29);
  v31 = &v79[-v30];
  sub_23E136F6C();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v23 + 16))(v28, v25, v22);
  *(_WORD *)&v28[*(int *)(v26 + 56)] = 256;
  (*(void (**)(_BYTE *, uint64_t))(v23 + 8))(v25, v22);
  v95 = v28;
  v102 = v31;
  v32 = (uint64_t)v31;
  v33 = v91;
  sub_23DF89340((uint64_t)v28, v32, &qword_256D255E8);
  v103 = sub_23E0B71BC(a4, a5);
  sub_23DF73E10(v33, (uint64_t)v17, type metadata accessor for ColorFullScreenView);
  v34 = *(unsigned __int8 *)(v90 + 80);
  v90 = v14;
  v35 = swift_allocObject();
  *(_QWORD *)(v35 + 16) = v96;
  sub_23DF89384((uint64_t)v17, v35 + ((v34 + 24) & ~v34), type metadata accessor for ColorFullScreenView);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D255F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D255F8);
  sub_23DF89B88(&qword_256D25600, &qword_256D255F0, MEMORY[0x24BEE12D8]);
  sub_23E0BCB78();
  sub_23E0BCD70();
  v96 = v21;
  v36 = (int *)v92;
  sub_23E136F18();
  v37 = v33 + v36[8];
  v38 = *(_BYTE *)v37;
  v39 = *(_QWORD *)(v37 + 8);
  LOBYTE(v103) = v38;
  v104 = v39;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  sub_23E136D98();
  if (v105 == 1)
  {
    sub_23E136E88();
    v40 = v36[6];
    v41 = (unsigned __int8 *)(v33 + v36[5]);
    v42 = *v41;
    v83 = *v41;
    v43 = v41[1];
    v44 = v41[2];
    v84 = v44;
    v45 = *((_WORD *)v41 + 2);
    LODWORD(v92) = v45;
    v80 = v41[6];
    v81 = *((unsigned __int16 *)v41 + 4);
    v46 = v41[10];
    LODWORD(v86) = v46;
    v82 = *(unsigned __int8 *)(v33 + v40);
    v47 = v33;
    v48 = v85;
    sub_23DF73E10(v47, (uint64_t)v85, type metadata accessor for ColorFullScreenView);
    v49 = swift_allocObject();
    sub_23DF89384((uint64_t)v48, v49 + ((v34 + 16) & ~v34), type metadata accessor for ColorFullScreenView);
    v51 = v93;
    v50 = v94;
    sub_23DF89C1C((uint64_t)v93, (uint64_t)v94, &qword_256D1ECC0);
    v52 = (int *)type metadata accessor for ColorPickerFullScreenView(0);
    v53 = &v50[v52[5]];
    *v53 = v42;
    v53[1] = v43;
    v53[2] = v44;
    *((_WORD *)v53 + 2) = v45;
    LOBYTE(v48) = v80;
    v53[6] = v80;
    v54 = v81;
    *((_WORD *)v53 + 4) = v81;
    v53[10] = v46;
    v55 = v82;
    v50[v52[6]] = v82;
    LOBYTE(v53) = v55 == 2;
    v56 = &v50[v52[9]];
    *v56 = (_BYTE)v53;
    *((_QWORD *)v56 + 1) = 0;
    v57 = (uint64_t (**)())&v50[v52[7]];
    *v57 = sub_23E0BCEC8;
    v57[1] = (uint64_t (*)())v49;
    v58 = (uint64_t)v51;
    v59 = (uint64_t)v51;
    v60 = v89;
    sub_23DF89C1C(v58, (uint64_t)v89, &qword_256D1ECC0);
    v61 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    v62 = (v88 + v61 + 1) & 0xFFFFFFFFFFFFFFFELL;
    v63 = swift_allocObject();
    sub_23DF89340((uint64_t)v60, v63 + v61, &qword_256D1ECC0);
    v64 = v63 + v62;
    *(_BYTE *)v64 = v83;
    *(_BYTE *)(v64 + 1) = v43;
    *(_BYTE *)(v64 + 2) = v84;
    *(_WORD *)(v64 + 4) = v92;
    *(_BYTE *)(v64 + 6) = (_BYTE)v48;
    *(_WORD *)(v64 + 8) = v54;
    *(_BYTE *)(v64 + 10) = v86;
    sub_23DF89C7C(v59, &qword_256D1ECC0);
    v65 = &v50[v52[8]];
    *(_QWORD *)v65 = sub_23E0BCFC0;
    *((_QWORD *)v65 + 1) = v63;
    v65[16] = 0;
    v66 = v50;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(*((_QWORD *)v52 - 1) + 56))(v50, 0, 1, v52);
  }
  else
  {
    v67 = type metadata accessor for ColorPickerFullScreenView(0);
    v66 = v94;
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v94, 1, 1, v67);
  }
  v68 = (uint64_t)v95;
  sub_23DF89C1C((uint64_t)v102, (uint64_t)v95, &qword_256D255E8);
  v69 = v97;
  v70 = v98;
  v71 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v97 + 16);
  v72 = v96;
  v73 = v99;
  v71(v98, v96, v99);
  v74 = v100;
  sub_23DF89C1C((uint64_t)v66, (uint64_t)v100, &qword_256D255D8);
  v75 = v101;
  sub_23DF89C1C(v68, v101, &qword_256D255E8);
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25668);
  v71((_BYTE *)(v75 + *(int *)(v76 + 48)), v70, v73);
  sub_23DF89C1C((uint64_t)v74, v75 + *(int *)(v76 + 64), &qword_256D255D8);
  sub_23DF89C7C((uint64_t)v66, &qword_256D255D8);
  v77 = *(void (**)(_BYTE *, uint64_t))(v69 + 8);
  v77(v72, v73);
  sub_23DF89C7C((uint64_t)v102, &qword_256D255E8);
  sub_23DF89C7C((uint64_t)v74, &qword_256D255D8);
  v77(v70, v73);
  return sub_23DF89C7C(v68, &qword_256D255E8);
}

_QWORD *sub_23E0B71BC(double a1, double a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  double v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  __double2 v12;
  double v13;
  double v14;
  unint64_t v15;
  unint64_t v16;
  double *v17;
  unint64_t v18;
  unint64_t v19;
  double *v20;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v22;
  unint64_t v23;
  double *v24;

  v4 = sub_23E0BD2CC();
  v5 = v4[2];
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRetain();
  v6 = 0;
  v7 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    v8 = *(double *)&v4[v6 + 4];
    v9 = sub_23E0BD2CC()[2];
    if (!v9)
      goto LABEL_3;
    v10 = 0;
    if ((sub_23E136BA0() & 1) == 0)
    {
      v11 = v9 - 1;
      while (v11 != v10)
      {
        ++v10;
        if ((sub_23E136BA0() & 1) != 0)
          goto LABEL_10;
      }
LABEL_3:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    v12 = __sincos_stret(v8);
    v13 = v12.__cosval * 120.0 + a1;
    v14 = v12.__sinval * 120.0 + a2;
    if (v10 == 3)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_23E0082EC(0, v7[2] + 1, 1, v7);
      v16 = v7[2];
      v15 = v7[3];
      if (v16 >= v15 >> 1)
        v7 = sub_23E0082EC((_QWORD *)(v15 > 1), v16 + 1, 1, v7);
      v7[2] = v16 + 1;
      v17 = (double *)&v7[4 * v16];
      v17[4] = v13;
      v17[5] = v14;
      v17[6] = 0.0;
      *((_BYTE *)v17 + 56) = 1;
    }
    else if (v10 > 3)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_23E0082EC(0, v7[2] + 1, 1, v7);
      v19 = v7[2];
      v18 = v7[3];
      if (v19 >= v18 >> 1)
        v7 = sub_23E0082EC((_QWORD *)(v18 > 1), v19 + 1, 1, v7);
      v7[2] = v19 + 1;
      v20 = (double *)&v7[4 * v19];
      v20[4] = v13;
      v20[5] = v14;
      *((_QWORD *)v20 + 6) = v10 - 1;
      *((_BYTE *)v20 + 56) = 0;
    }
    else
    {
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v7 = sub_23E0082EC(0, v7[2] + 1, 1, v7);
      v23 = v7[2];
      v22 = v7[3];
      if (v23 >= v22 >> 1)
        v7 = sub_23E0082EC((_QWORD *)(v22 > 1), v23 + 1, 1, v7);
      v7[2] = v23 + 1;
      v24 = (double *)&v7[4 * v23];
      v24[4] = v13;
      v24[5] = v14;
      *((_QWORD *)v24 + 6) = v10;
      *((_BYTE *)v24 + 56) = 0;
    }
LABEL_4:
    ++v6;
  }
  while (v6 != v5);
  swift_bridgeObjectRelease_n();
  return v7;
}

uint64_t sub_23E0B744C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  __int128 v17;
  _QWORD *v18;
  _OWORD v20[3];

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25628);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25618);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a1;
  v15 = a1[1];
  sub_23E0B75D0(a1[2], *((unsigned __int8 *)a1 + 24), a2, a3, (uint64_t)v10);
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF89C1C((uint64_t)v10, (uint64_t)v13, &qword_256D25628);
  v16 = &v13[*(int *)(v11 + 36)];
  v17 = v20[1];
  *(_OWORD *)v16 = v20[0];
  *((_OWORD *)v16 + 1) = v17;
  *((_OWORD *)v16 + 2) = v20[2];
  sub_23DF89C7C((uint64_t)v10, &qword_256D25628);
  sub_23DF89C1C((uint64_t)v13, a4, &qword_256D25618);
  v18 = (_QWORD *)(a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D255F8) + 36));
  *v18 = v14;
  v18[1] = v15;
  return sub_23DF89C7C((uint64_t)v13, &qword_256D25618);
}

uint64_t sub_23E0B75D0@<X0>(unint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[12];
  _BOOL4 v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;

  v49 = a4;
  v43 = a3;
  LODWORD(v48) = a2;
  v47 = a5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25658);
  v45 = *(_QWORD *)(v6 - 8);
  v46 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v44 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25670);
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v40[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = sub_23E135328();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v14 = type metadata accessor for ColorFullScreenView(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_QWORD *)(v15 + 64);
  MEMORY[0x24BDAC7A8](v14);
  v17 = &v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25648);
  result = MEMORY[0x24BDAC7A8](v18);
  if ((v48 & 1) != 0)
  {
    sub_23DF73E10(v49, (uint64_t)&v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for ColorFullScreenView);
    v34 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v35 = swift_allocObject();
    sub_23DF89384((uint64_t)&v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)], v35 + v34, type metadata accessor for ColorFullScreenView);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20318);
    sub_23DFE1A28();
    v36 = v44;
    sub_23E136DEC();
    v38 = v45;
    v37 = v46;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v45 + 16))(v10, v36, v46);
    swift_storeEnumTagMultiPayload();
    v39 = MEMORY[0x24BDF43B0];
    sub_23DF89B88(&qword_256D25640, &qword_256D25648, MEMORY[0x24BDF43B0]);
    sub_23DF89B88(&qword_256D25650, &qword_256D25658, v39);
    sub_23E136480();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v38 + 8))(v36, v37);
  }
  else
  {
    v45 = v8;
    v48 = v10;
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(v43 + 16) > a1)
    {
      v23 = *(unsigned __int8 *)(v12 + 80);
      v24 = v43 + ((v23 + 32) & ~v23) + *(_QWORD *)(v12 + 72) * a1;
      v42 = &v40[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
      v43 = v22;
      v25 = v49;
      v44 = v21;
      v41 = sub_23E0B7A54(v49, v24);
      sub_23DF73E10(v25, (uint64_t)&v40[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for ColorFullScreenView);
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v12 + 16))(&v40[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v24, v11);
      v26 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v27 = (v16 + v23 + v26) & ~v23;
      v28 = swift_allocObject();
      sub_23DF89384((uint64_t)v17, v28 + v26, type metadata accessor for ColorFullScreenView);
      v29 = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v12 + 32))(v28 + v27, &v40[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v11);
      MEMORY[0x24BDAC7A8](v29);
      *(_QWORD *)&v40[-16] = v24;
      v40[-8] = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D25678);
      sub_23E0BD230();
      v30 = v42;
      sub_23E136DEC();
      v31 = v43;
      v32 = v44;
      (*(void (**)(_BYTE *, _BYTE *, _BYTE *))(v43 + 16))(v48, v30, v44);
      swift_storeEnumTagMultiPayload();
      v33 = MEMORY[0x24BDF43B0];
      sub_23DF89B88(&qword_256D25640, &qword_256D25648, MEMORY[0x24BDF43B0]);
      sub_23DF89B88(&qword_256D25650, &qword_256D25658, v33);
      sub_23E136480();
      return (*(uint64_t (**)(_BYTE *, _BYTE *))(v31 + 8))(v30, v32);
    }
    __break(1u);
  }
  return result;
}

BOOL sub_23E0B7A54(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Device.Control.ColorState(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24264B734](v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    v14 = &qword_256D1D5E8;
    v15 = (uint64_t)v8;
  }
  else
  {
    sub_23DF89384((uint64_t)v8, (uint64_t)v12, type metadata accessor for Device.Control.ColorState);
    sub_23DF89C1C((uint64_t)v12, (uint64_t)v5, &qword_256D1D7F0);
    v16 = sub_23E135328();
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v16) != 1)
    {
      v18 = sub_23E0A88A0(a2);
      sub_23E0B9C68((uint64_t)v12);
      (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v16);
      return v18;
    }
    sub_23E0B9C68((uint64_t)v12);
    v14 = &qword_256D1D7F0;
    v15 = (uint64_t)v5;
  }
  sub_23DF89C7C(v15, v14);
  return 0;
}

uint64_t sub_23E0B7C18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Device.Control.ColorState(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v29 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v29 - v19;
  MEMORY[0x24264B734](v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_23DF89C7C((uint64_t)v10, &qword_256D1D5E8);
  sub_23DF89384((uint64_t)v10, (uint64_t)v20, type metadata accessor for Device.Control.ColorState);
  if (qword_256D1D458 != -1)
    swift_once();
  v29 = qword_256D25308;
  sub_23E136E88();
  v22 = sub_23E135328();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v4, v30, v22);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v24(v4, 0, 1, v22);
  v25 = &v20[*(int *)(v11 + 20)];
  v26 = *(_QWORD *)v25;
  v27 = v25[8];
  v24(v15, 1, 1, v22);
  v28 = &v15[*(int *)(v11 + 20)];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  sub_23DFF1F1C((uint64_t)v4, (uint64_t)v15);
  *(_QWORD *)v28 = v26;
  v28[8] = v27;
  sub_23DF89384((uint64_t)v15, (uint64_t)v18, type metadata accessor for Device.Control.ColorState);
  sub_23E0B5C18((uint64_t)v7, (uint64_t)v18);
  sub_23E0B9C68((uint64_t)v18);
  sub_23DF89C7C((uint64_t)v7, &qword_256D1ECC0);
  return sub_23E0B9C68((uint64_t)v20);
}

double sub_23E0B7ED8@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double result;
  uint64_t v22;
  _QWORD v23[6];

  v6 = sub_23E135328();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v8, a1);
  v10 = sub_23E0A9F3C((uint64_t)v8);
  if ((a2 & 1) != 0)
    v11 = sub_23E136C48();
  else
    v11 = sub_23E136C30();
  v12 = v11;
  sub_23E135DCC();
  v13 = v23[1];
  v14 = v23[3];
  v15 = v23[4];
  v16 = v23[5];
  v17 = sub_23E136FE4();
  v19 = v18;
  v20 = sub_23E136FE4();
  *(_QWORD *)a3 = v10;
  *(_WORD *)(a3 + 8) = 256;
  result = *(double *)&v23[2];
  *(_QWORD *)(a3 + 16) = v13;
  *(double *)(a3 + 24) = result;
  *(_QWORD *)(a3 + 32) = v14;
  *(_QWORD *)(a3 + 40) = v15;
  *(_QWORD *)(a3 + 48) = v16;
  *(_QWORD *)(a3 + 56) = v12;
  *(_WORD *)(a3 + 64) = 256;
  *(_QWORD *)(a3 + 72) = v17;
  *(_QWORD *)(a3 + 80) = v19;
  *(_QWORD *)(a3 + 88) = v20;
  *(_QWORD *)(a3 + 96) = v22;
  return result;
}

uint64_t sub_23E0B8000()
{
  type metadata accessor for ColorFullScreenView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  return sub_23E136DA4();
}

uint64_t sub_23E0B8068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = sub_23E136CC0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s16ColorPickerStateCMa();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_23E136D2C();
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BDF3FD0], v2);
  v8 = sub_23E136D14();
  swift_release();
  result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *(_QWORD *)a1 = v8;
  *(_QWORD *)(a1 + 8) = 0;
  *(_WORD *)(a1 + 16) = 1;
  return result;
}

uint64_t sub_23E0B8184()
{
  type metadata accessor for ColorFullScreenView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E140);
  return sub_23E136DA4();
}

uint64_t sub_23E0B81E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  sub_23DF73E10(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for ColorFullScreenView);
  v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v7 = swift_allocObject();
  sub_23DF89384((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, type metadata accessor for ColorFullScreenView);
  v8 = sub_23E136000();
  result = sub_23E13672C();
  *(_QWORD *)a2 = sub_23E0BC9C4;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = v8;
  *(_BYTE *)(a2 + 24) = result;
  return result;
}

HomeAccessoryControlUI::ColorPickerFullScreenView::ViewType_optional __swiftcall ColorPickerFullScreenView.ViewType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  HomeAccessoryControlUI::ColorPickerFullScreenView::ViewType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_23E1375B4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t ColorPickerFullScreenView.ViewType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000010;
  else
    return 6449010;
}

HomeAccessoryControlUI::ColorPickerFullScreenView::ViewType_optional sub_23E0B8348(Swift::String *a1)
{
  return ColorPickerFullScreenView.ViewType.init(rawValue:)(*a1);
}

void sub_23E0B8354(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 6449010;
  if (*v1)
    v2 = 0xD000000000000010;
  v3 = 0x800000023E144300;
  if (!*v1)
    v3 = 0xE300000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_23E0B8390()
{
  sub_23E137698();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  return sub_23E1376D4();
}

uint64_t sub_23E0B840C()
{
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E0B8464()
{
  sub_23E137698();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  return sub_23E1376D4();
}

uint64_t sub_23E0B84DC(char *a1, char *a2)
{
  return sub_23E09B06C(*a1, *a2);
}

uint64_t sub_23E0B84E8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  __int16 v11;
  char v12;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24264B734](v8);
  v10 = a2 & 0x1FFFF00010101;
  v12 = BYTE2(a3) & 1;
  v11 = a3;
  _s16ColorPickerStateCMa();
  swift_allocObject();
  return sub_23E0BF140(MEMORY[0x24BEE4AF8], (uint64_t)v7, (uint64_t)&v10);
}

uint64_t ColorPickerFullScreenView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E0B85B8(v1, a1);
}

uint64_t sub_23E0B85B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  int v44;
  __int16 v45;
  __int16 v46;
  __int16 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  __int128 v119;
  char v120;
  uint64_t v121;
  char v122;
  uint64_t v123;
  uint64_t v124;
  ValueMetadata *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  unint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t v133;
  __int128 v134;
  ValueMetadata *v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char v142;

  v114 = a2;
  v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254B0);
  v3 = *(char **)(v115 - 8);
  MEMORY[0x24BDAC7A8](v115);
  v5 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v93 - v7;
  v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254B8);
  MEMORY[0x24BDAC7A8](v112);
  v113 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for ColorPickerFullScreenView(0);
  v107 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v108 = v11;
  v109 = (uint64_t)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v12);
  v104 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v14);
  v101 = (char *)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v93 - v17;
  v19 = type metadata accessor for Device.Control.ColorState(0);
  v105 = *(_QWORD *)(v19 - 8);
  v106 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v102 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v103 = (char *)&v93 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v93 - v24;
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D254C0);
  v26 = *(_QWORD *)(v111 - 8);
  MEMORY[0x24BDAC7A8](v111);
  v99 = (char *)&v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v100 = (char *)&v93 - v29;
  v30 = a1 + *(int *)(v10 + 36);
  v31 = *(_BYTE *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  LOBYTE(v129) = v31;
  *((_QWORD *)&v129 + 1) = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D254C8);
  sub_23E136D98();
  v110 = a1;
  if ((v142 & 1) != 0)
  {
    v98 = v5;
    v99 = v8;
    v100 = v3;
    v33 = *(_QWORD *)(a1 + *(int *)(v10 + 32));
    v34 = _s16ColorPickerStateCMa();
    sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
    v95 = v34;
    v96 = v33;
    v35 = *(_QWORD *)(sub_23E135DB4()
                    + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig);
    swift_release();
    v97 = v35;
    v94 = HIWORD(v35) & 1;
    if (WORD2(v35) <= 0x19u)
      v36 = 25;
    else
      v36 = WORD2(v35);
    v37 = sub_23E135DB4();
    v38 = *(unsigned __int8 *)(v37
                             + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig);
    v39 = *(_BYTE *)(v37 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig + 10);
    v40 = *(unsigned __int16 *)(v37
                              + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig
                              + 8);
    swift_release();
    if (v40 >= 0x3E8)
      LOWORD(v40) = 1000;
    type metadata accessor for SpectrumColorHelper();
    v41 = swift_allocObject();
    v42 = v41;
    if (v97 == 2)
      v43 = 1;
    else
      v43 = v94;
    v44 = v39 & 1;
    if (v97 == 2)
      v45 = 25;
    else
      v45 = v36;
    if (v43)
      v46 = 100;
    else
      v46 = v45;
    if (v38 == 2)
      v44 = 1;
    *(_WORD *)(v41 + 16) = v46;
    if (v38 == 2)
      v47 = 0;
    else
      v47 = v40;
    if (v44)
      v47 = 416;
    *(_WORD *)(v41 + 18) = v47;
    v125 = &_s24ColorTemperatureSpectrumVN;
    v126 = sub_23E040B74();
    v124 = v42;
    v97 = v42;
    swift_retain();
    sub_23E135DB4();
    v116 = 0;
    v117 = 0;
    v118 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223C0);
    sub_23E136D8C();
    v119 = v129;
    v120 = v130;
    v121 = v131;
    LOBYTE(v116) = 0;
    sub_23E136D8C();
    v122 = v129;
    v123 = *((_QWORD *)&v129 + 1);
    v127 = sub_23E135F1C();
    v128 = v48;
    sub_23E137080();
    v50 = v49;
    v52 = v51;
    sub_23DFDF44C((uint64_t)&v119, (uint64_t)&v129);
    v139 = 0x3FF921FB54442D18;
    v140 = v50;
    v141 = v52;
    sub_23E040D30((uint64_t)&v119);
    sub_23E135DB4();
    swift_getKeyPath();
    swift_getKeyPath();
    v53 = (uint64_t)v101;
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    v54 = v106;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v53, 1, v106) == 1)
    {
      v55 = sub_23E135328();
      v56 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
      v57 = (uint64_t)v104;
      v56(v104, 1, 1, v55);
      v58 = (uint64_t)v103;
      v56(v103, 1, 1, v55);
      v59 = v58 + *(int *)(v54 + 20);
      *(_QWORD *)v59 = 0;
      *(_BYTE *)(v59 + 8) = 1;
      sub_23DFF1F1C(v57, v58);
      *(_QWORD *)v59 = 0;
      *(_BYTE *)(v59 + 8) = 1;
      v60 = v102;
      sub_23DF89384(v58, v102, type metadata accessor for Device.Control.ColorState);
      sub_23DF89C7C(v53, &qword_256D1D5E8);
    }
    else
    {
      v60 = v102;
      sub_23DF89384(v53, v102, type metadata accessor for Device.Control.ColorState);
    }
    v68 = v109;
    sub_23DF73E10(v110, v109, type metadata accessor for ColorPickerFullScreenView);
    v69 = (*(unsigned __int8 *)(v107 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    v70 = swift_allocObject();
    sub_23DF89384(v68, v70 + v69, type metadata accessor for ColorPickerFullScreenView);
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D253D8);
    v72 = sub_23E0BA448();
    v73 = sub_23DF73F28(&qword_256D22140, type metadata accessor for Device.Control.ColorState, (uint64_t)&protocol conformance descriptor for Device.Control.ColorState);
    v74 = v98;
    sub_23E136B7C();
    swift_release();
    sub_23E0B9C68(v60);
    sub_23DF89C7C((uint64_t)&v129, &qword_256D253D8);
    v76 = v99;
    v75 = v100;
    v77 = v74;
    v78 = v115;
    (*((void (**)(char *, char *, uint64_t))v100 + 4))(v99, v77, v115);
    (*((void (**)(char *, char *, uint64_t))v75 + 2))(v113, v76, v78);
    swift_storeEnumTagMultiPayload();
    v79 = sub_23E040CEC();
    *(_QWORD *)&v129 = &_s17ColorSpectrumViewVN;
    *((_QWORD *)&v129 + 1) = v54;
    v130 = v79;
    v131 = v73;
    swift_getOpaqueTypeConformance2();
    *(_QWORD *)&v129 = v71;
    *((_QWORD *)&v129 + 1) = v54;
    v130 = v72;
    v131 = v73;
    swift_getOpaqueTypeConformance2();
    sub_23E136480();
    swift_release();
    return (*((uint64_t (**)(char *, uint64_t))v75 + 1))(v76, v78);
  }
  else
  {
    v102 = v26;
    v135 = &_s17FullColorSpectrumVN;
    v136 = sub_23E040D64();
    v134 = xmmword_23E13D1C0;
    _s16ColorPickerStateCMa();
    sub_23DF73F28(&qword_256D22130, (uint64_t (*)(uint64_t))_s16ColorPickerStateCMa, (uint64_t)&unk_23E1417F8);
    sub_23E135DB4();
    v116 = 0;
    v117 = 0;
    v118 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D223C0);
    sub_23E136D8C();
    v129 = v119;
    LOBYTE(v130) = v120;
    v131 = v121;
    LOBYTE(v116) = 0;
    sub_23E136D8C();
    v132 = v119;
    v133 = *((_QWORD *)&v119 + 1);
    v137 = sub_23E135F1C();
    v138 = v61;
    sub_23E135DB4();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    v62 = v106;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v18, 1, v106) == 1)
    {
      v63 = sub_23E135328();
      v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56);
      v65 = (uint64_t)v104;
      v64(v104, 1, 1, v63);
      v66 = (uint64_t)v103;
      v64(v103, 1, 1, v63);
      v67 = v66 + *(int *)(v62 + 20);
      *(_QWORD *)v67 = 0;
      *(_BYTE *)(v67 + 8) = 1;
      sub_23DFF1F1C(v65, v66);
      *(_QWORD *)v67 = 0;
      *(_BYTE *)(v67 + 8) = 1;
      sub_23DF89384(v66, (uint64_t)v25, type metadata accessor for Device.Control.ColorState);
      sub_23DF89C7C((uint64_t)v18, &qword_256D1D5E8);
    }
    else
    {
      sub_23DF89384((uint64_t)v18, (uint64_t)v25, type metadata accessor for Device.Control.ColorState);
    }
    v81 = v102;
    v82 = v109;
    sub_23DF73E10(v110, v109, type metadata accessor for ColorPickerFullScreenView);
    v83 = (*(unsigned __int8 *)(v107 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v107 + 80);
    v84 = swift_allocObject();
    sub_23DF89384(v82, v84 + v83, type metadata accessor for ColorPickerFullScreenView);
    v85 = sub_23E040CEC();
    v86 = sub_23DF73F28(&qword_256D22140, type metadata accessor for Device.Control.ColorState, (uint64_t)&protocol conformance descriptor for Device.Control.ColorState);
    v87 = v99;
    sub_23E136B7C();
    swift_release();
    sub_23E0B9C68((uint64_t)v25);
    sub_23E040D30((uint64_t)&v129);
    v88 = v100;
    v89 = v87;
    v90 = v111;
    (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v100, v89, v111);
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v113, v88, v90);
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v129 = &_s17ColorSpectrumViewVN;
    *((_QWORD *)&v129 + 1) = v62;
    v130 = v85;
    v131 = v86;
    swift_getOpaqueTypeConformance2();
    v91 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D253D8);
    v92 = sub_23E0BA448();
    *(_QWORD *)&v129 = v91;
    *((_QWORD *)&v129 + 1) = v62;
    v130 = v92;
    v131 = v86;
    swift_getOpaqueTypeConformance2();
    sub_23E136480();
    return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v88, v90);
  }
}

unint64_t sub_23E0B9154()
{
  unint64_t result;

  result = qword_256D25310;
  if (!qword_256D25310)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for ColorPickerFullScreenView.ViewType, &type metadata for ColorPickerFullScreenView.ViewType);
    atomic_store(result, (unint64_t *)&qword_256D25310);
  }
  return result;
}

uint64_t sub_23E0B9198()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0B91A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Device.Control.ColorState(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v24 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D1D458 != -1)
    swift_once();
  sub_23E136E88();
  sub_23DF89C1C(v25, (uint64_t)v7, &qword_256D1D7F0);
  MEMORY[0x24264B734](v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8))
  {
    v18 = 0;
    v19 = 1;
  }
  else
  {
    v20 = &v4[*(int *)(v8 + 20)];
    v18 = *(_QWORD *)v20;
    v19 = v20[8];
  }
  sub_23DF89C7C((uint64_t)v4, &qword_256D1D5E8);
  v21 = sub_23E135328();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 1, 1, v21);
  v22 = &v11[*(int *)(v8 + 20)];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  sub_23DFF1F1C((uint64_t)v7, (uint64_t)v11);
  *(_QWORD *)v22 = v18;
  v22[8] = v19;
  sub_23DF89384((uint64_t)v11, (uint64_t)v14, type metadata accessor for Device.Control.ColorState);
  sub_23E0B5C18((uint64_t)v17, (uint64_t)v14);
  sub_23E0B9C68((uint64_t)v14);
  return sub_23DF89C7C((uint64_t)v17, &qword_256D1ECC0);
}

uint64_t sub_23E0B9418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E0B85B8(v1, a1);
}

_QWORD *initializeBufferWithCopyOfBuffer for ColorPickerFullScreenView(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Device.Control.ColorState(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = sub_23E135328();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v10, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
      }
      v17 = *(int *)(v11 + 20);
      v18 = &v9[v17];
      v19 = &v10[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v18[8] = v19[8];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = a3[5];
    v21 = a3[6];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_DWORD *)(v22 + 7) = *(_DWORD *)(v23 + 7);
    *((_BYTE *)a1 + v21) = *((_BYTE *)a2 + v21);
    v24 = a3[7];
    v25 = a3[8];
    v26 = (_QWORD *)((char *)a1 + v24);
    v27 = (_QWORD *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (char *)a1 + v25;
    v30 = *(_QWORD *)((char *)a2 + v25);
    v31 = *(_QWORD *)((char *)a2 + v25 + 8);
    v32 = *((_BYTE *)a2 + v25 + 16);
    swift_retain();
    sub_23E03AB38();
    *(_QWORD *)v29 = v30;
    *((_QWORD *)v29 + 1) = v31;
    v29[16] = v32;
    v33 = a3[9];
    v34 = (char *)a1 + v33;
    v35 = (char *)a2 + v33;
    *v34 = *v35;
    *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  }
  swift_retain();
  return a1;
}

uint64_t destroy for ColorPickerFullScreenView(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v3 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = sub_23E135328();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  swift_release();
  sub_23E03AC08();
  return swift_release();
}

_QWORD *initializeWithCopy for ColorPickerFullScreenView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char *v33;
  char *v34;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Device.Control.ColorState(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_23E135328();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v8, v9, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    }
    v16 = *(int *)(v10 + 20);
    v17 = &v8[v16];
    v18 = &v9[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = a3[5];
  v20 = a3[6];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_DWORD *)(v21 + 7) = *(_DWORD *)(v22 + 7);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  v23 = a3[7];
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v23);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (char *)a1 + v24;
  v29 = *(_QWORD *)((char *)a2 + v24);
  v30 = *(_QWORD *)((char *)a2 + v24 + 8);
  v31 = *((_BYTE *)a2 + v24 + 16);
  swift_retain();
  sub_23E03AB38();
  *(_QWORD *)v28 = v29;
  *((_QWORD *)v28 + 1) = v30;
  v28[16] = v31;
  v32 = a3[9];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *v33 = *v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for ColorPickerFullScreenView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int16 v35;
  __int16 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char *v48;
  char *v49;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Device.Control.ColorState(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_23E0B9C68((uint64_t)v7);
      goto LABEL_7;
    }
    v18 = sub_23E135328();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v7, v8, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_16:
        v28 = *(int *)(v9 + 20);
        v29 = &v7[v28];
        v30 = &v8[v28];
        v31 = *(_QWORD *)v30;
        v29[8] = v30[8];
        *(_QWORD *)v29 = v31;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v7, v8, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  v14 = sub_23E135328();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v23 = *(int *)(v9 + 20);
  v24 = &v7[v23];
  v25 = &v8[v23];
  v26 = *(_QWORD *)v25;
  v24[8] = v25[8];
  *(_QWORD *)v24 = v26;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  v32 = a3[5];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v35 = *((_WORD *)v34 + 2);
  v33[6] = v34[6];
  *((_WORD *)v33 + 2) = v35;
  v36 = *((_WORD *)v34 + 4);
  v33[10] = v34[10];
  *((_WORD *)v33 + 4) = v36;
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v37 = a3[7];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  swift_retain();
  swift_release();
  v41 = a3[8];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *(_QWORD *)v43;
  v45 = *((_QWORD *)v43 + 1);
  v46 = v43[16];
  sub_23E03AB38();
  *(_QWORD *)v42 = v44;
  *((_QWORD *)v42 + 1) = v45;
  v42[16] = v46;
  sub_23E03AC08();
  v47 = a3[9];
  v48 = (char *)a1 + v47;
  v49 = (char *)a2 + v47;
  *v48 = *v49;
  *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23E0B9C68(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Device.Control.ColorState(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *initializeWithTake for ColorPickerFullScreenView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Device.Control.ColorState(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_23E135328();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    }
    v16 = *(int *)(v10 + 20);
    v17 = &v8[v16];
    v18 = &v9[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = a3[5];
  v20 = a3[6];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_DWORD *)(v21 + 7) = *(_DWORD *)(v22 + 7);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  v23 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  return a1;
}

_QWORD *assignWithTake for ColorPickerFullScreenView(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char v37;
  uint64_t v38;
  char *v39;
  char *v40;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Device.Control.ColorState(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_23E0B9C68((uint64_t)v7);
      goto LABEL_7;
    }
    v18 = sub_23E135328();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v7, v8, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_16:
        v27 = *(int *)(v9 + 20);
        v28 = &v7[v27];
        v29 = &v8[v27];
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v28[8] = v29[8];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v7, v8, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  v14 = sub_23E135328();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v23 = *(int *)(v9 + 20);
  v24 = &v7[v23];
  v25 = &v8[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  v30 = a3[5];
  v31 = a3[6];
  v32 = (char *)a1 + v30;
  v33 = (char *)a2 + v30;
  *v32 = *v33;
  v32[1] = v33[1];
  v32[2] = v33[2];
  *((_WORD *)v32 + 2) = *((_WORD *)v33 + 2);
  v32[6] = v33[6];
  *((_WORD *)v32 + 4) = *((_WORD *)v33 + 4);
  v32[10] = v33[10];
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  swift_release();
  v34 = a3[8];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = v36[16];
  *(_OWORD *)v35 = *(_OWORD *)v36;
  v35[16] = v37;
  sub_23E03AC08();
  v38 = a3[9];
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  *v39 = *v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorPickerFullScreenView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ColorPickerFullScreenView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for ColorPickerFullScreenView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25370);
}

void sub_23E0BA1B4()
{
  unint64_t v0;

  sub_23DFC4E20();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for ColorPickerFullScreenView.ViewType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_23E0BA29C + 4 * byte_23E1413C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_23E0BA2D0 + 4 * byte_23E1413C0[v4]))();
}

uint64_t sub_23E0BA2D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0BA2D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E0BA2E0);
  return result;
}

uint64_t sub_23E0BA2EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E0BA2F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_23E0BA2F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0BA300(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorPickerFullScreenView.ViewType()
{
  return &type metadata for ColorPickerFullScreenView.ViewType;
}

uint64_t sub_23E0BA31C()
{
  return sub_23E0BCC68(&qword_256D253B8, &qword_256D253C0, (uint64_t (*)(void))sub_23E0BA348);
}

unint64_t sub_23E0BA348()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  _QWORD v5[6];

  result = qword_256D253C8;
  if (!qword_256D253C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D253D0);
    v2 = type metadata accessor for Device.Control.ColorState(255);
    sub_23E040CEC();
    v3 = sub_23DF73F28(&qword_256D22140, type metadata accessor for Device.Control.ColorState, (uint64_t)&protocol conformance descriptor for Device.Control.ColorState);
    OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    v5[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D253D8);
    v5[3] = v2;
    v5[4] = sub_23E0BA448();
    v5[5] = v3;
    v5[0] = OpaqueTypeConformance2;
    v5[1] = swift_getOpaqueTypeConformance2();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v5);
    atomic_store(result, (unint64_t *)&qword_256D253C8);
  }
  return result;
}

unint64_t sub_23E0BA448()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D253E0;
  if (!qword_256D253E0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D253D8);
    v2[0] = sub_23E040CEC();
    v2[1] = MEMORY[0x24BDED5D8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D253E0);
  }
  return result;
}

_QWORD *sub_23E0BA4B4(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23E135E74();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v9 = a3[5];
    v10 = (_QWORD *)((char *)a1 + v9);
    v11 = (char *)a2 + v9;
    v12 = *(_QWORD *)((char *)a2 + v9 + 8);
    *v10 = *(_QWORD *)((char *)a2 + v9);
    v10[1] = v12;
    swift_retain();
    swift_retain();
    v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
    v14 = (char *)v10 + v13;
    v15 = &v11[v13];
    v16 = type metadata accessor for Device.Control.ColorState(0);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v19 = sub_23E135328();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v15, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v14, v15, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v14, 0, 1, v19);
      }
      v22 = *(int *)(v16 + 20);
      v23 = &v14[v22];
      v24 = &v15[v22];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v25 = a3[6];
    v26 = a3[7];
    v27 = (char *)a1 + v25;
    v28 = (char *)a2 + v25;
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_DWORD *)(v27 + 7) = *(_DWORD *)(v28 + 7);
    v29 = (char *)a1 + v26;
    v30 = (char *)a2 + v26;
    *v29 = *v30;
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_23E0BA708(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23E135E74();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  v5 = a1 + *(int *)(a2 + 20);
  swift_release();
  swift_release();
  v6 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v7 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_23E135328();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  }
  return swift_release();
}

_QWORD *sub_23E0BA814(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_23E135E74();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v7 = a3[5];
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_retain();
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v12 = (char *)v8 + v11;
  v13 = &v9[v11];
  v14 = type metadata accessor for Device.Control.ColorState(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_23E135328();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v12, v13, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
    }
    v20 = *(int *)(v14 + 20);
    v21 = &v12[v20];
    v22 = &v13[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v23 = a3[6];
  v24 = a3[7];
  v25 = (char *)a1 + v23;
  v26 = (char *)a2 + v23;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_DWORD *)(v25 + 7) = *(_DWORD *)(v26 + 7);
  v27 = (char *)a1 + v24;
  v28 = (char *)a2 + v24;
  *v27 = *v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  swift_retain();
  return a1;
}

_QWORD *sub_23E0BAA40(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(char *, uint64_t, uint64_t);
  int v25;
  int v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  __int16 v39;
  __int16 v40;
  uint64_t v41;
  char *v42;
  char *v43;

  if (a1 != a2)
  {
    sub_23DF89C7C((uint64_t)a1, &qword_256D1E710);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_23E135E74();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_QWORD *)((char *)a1 + v7) = *(_QWORD *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
  swift_retain();
  swift_release();
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v11 = &v8[v10];
  v12 = &v9[v10];
  v13 = type metadata accessor for Device.Control.ColorState(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_23E0B9C68((uint64_t)v11);
      goto LABEL_12;
    }
    v22 = sub_23E135328();
    v23 = *(_QWORD *)(v22 - 8);
    v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    v25 = v24(v11, 1, v22);
    v26 = v24(v12, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v11, v12, v22);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v11, 0, 1, v22);
LABEL_21:
        v32 = *(int *)(v13 + 20);
        v33 = &v11[v32];
        v34 = &v12[v32];
        v35 = *(_QWORD *)v34;
        v33[8] = v34[8];
        *(_QWORD *)v33 = v35;
        goto LABEL_22;
      }
    }
    else
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v11, v12, v22);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_21;
  }
  if (v17)
  {
LABEL_12:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_22;
  }
  v18 = sub_23E135328();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v11, v12, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v11, 0, 1, v18);
  }
  v27 = *(int *)(v13 + 20);
  v28 = &v11[v27];
  v29 = &v12[v27];
  v30 = *(_QWORD *)v29;
  v28[8] = v29[8];
  *(_QWORD *)v28 = v30;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_22:
  v36 = a3[6];
  v37 = (char *)a1 + v36;
  v38 = (char *)a2 + v36;
  *v37 = *v38;
  v37[1] = v38[1];
  v37[2] = v38[2];
  v39 = *((_WORD *)v38 + 2);
  v37[6] = v38[6];
  *((_WORD *)v37 + 2) = v39;
  v40 = *((_WORD *)v38 + 4);
  v37[10] = v38[10];
  *((_WORD *)v37 + 4) = v40;
  v41 = a3[7];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  *v42 = *v43;
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  swift_retain();
  swift_release();
  *((_BYTE *)a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
  return a1;
}

char *sub_23E0BADD8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_23E135E74();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = *(_QWORD *)&a2[v8 + 8];
  *(_QWORD *)v9 = *(_QWORD *)&a2[v8];
  *((_QWORD *)v9 + 1) = v11;
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v13 = &v9[v12];
  v14 = &v10[v12];
  v15 = type metadata accessor for Device.Control.ColorState(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v18 = sub_23E135328();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v14, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v13, v14, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    }
    v21 = *(int *)(v15 + 20);
    v22 = &v13[v21];
    v23 = &v14[v21];
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v24 = a3[6];
  v25 = a3[7];
  v26 = &a1[v24];
  v27 = &a2[v24];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_DWORD *)(v26 + 7) = *(_DWORD *)(v27 + 7);
  *(_OWORD *)&a1[v25] = *(_OWORD *)&a2[v25];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_23E0BAFE0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(char *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;

  if (a1 != a2)
  {
    sub_23DF89C7C((uint64_t)a1, &qword_256D1E710);
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_23E135E74();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  *(_QWORD *)&a1[v8] = *(_QWORD *)&a2[v8];
  swift_release();
  *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
  swift_release();
  v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v12 = &v9[v11];
  v13 = &v10[v11];
  v14 = type metadata accessor for Device.Control.ColorState(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (v18)
    {
      sub_23E0B9C68((uint64_t)v12);
      goto LABEL_11;
    }
    v23 = sub_23E135328();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    v26 = v25(v12, 1, v23);
    v27 = v25(v13, 1, v23);
    if (v26)
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v12, v13, v23);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v23);
LABEL_20:
        v32 = *(int *)(v14 + 20);
        v33 = &v12[v32];
        v34 = &v13[v32];
        *(_QWORD *)v33 = *(_QWORD *)v34;
        v33[8] = v34[8];
        goto LABEL_21;
      }
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v12, v13, v23);
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v23);
    }
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_20;
  }
  if (v18)
  {
LABEL_11:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_21;
  }
  v19 = sub_23E135328();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v13, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v12, v13, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v12, 0, 1, v19);
  }
  v28 = *(int *)(v14 + 20);
  v29 = &v12[v28];
  v30 = &v13[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_21:
  v35 = a3[6];
  v36 = a3[7];
  v37 = &a1[v35];
  v38 = &a2[v35];
  *v37 = *v38;
  v37[1] = v38[1];
  v37[2] = v38[2];
  *((_WORD *)v37 + 2) = *((_WORD *)v38 + 2);
  v37[6] = v38[6];
  *((_WORD *)v37 + 4) = *((_WORD *)v38 + 4);
  v37[10] = v38[10];
  v39 = &a1[v36];
  v40 = &a2[v36];
  *v39 = *v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  swift_release();
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_23E0BB358()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0BB364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_23E0BB424()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0BB430(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20830);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for ColorViewModifier(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25440);
}

void sub_23E0BB4F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_23DFEC3F4();
  if (v0 <= 0x3F)
  {
    sub_23DFC4E20();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t storeEnumTagSinglePayload for ColorViewModifier.Destination(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_23E0BB5E0 + 4 * byte_23E1413CF[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_23E0BB614 + 4 * byte_23E1413CA[v4]))();
}

uint64_t sub_23E0BB614(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0BB61C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x23E0BB624);
  return result;
}

uint64_t sub_23E0BB630(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x23E0BB638);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_23E0BB63C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_23E0BB644(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorViewModifier.Destination()
{
  return &type metadata for ColorViewModifier.Destination;
}

unint64_t sub_23E0BB664()
{
  unint64_t result;

  result = qword_256D25488;
  if (!qword_256D25488)
  {
    result = MEMORY[0x24264C55C](&unk_23E1415D0, &type metadata for ColorViewModifier.Destination);
    atomic_store(result, (unint64_t *)&qword_256D25488);
  }
  return result;
}

uint64_t sub_23E0BB6A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for ColorFullScreenView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25578);
}

uint64_t sub_23E0BB6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = type metadata accessor for ColorViewModifier(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 16) & ~v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E710);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_23E135E74();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v3, v4);
  }
  else
  {
    swift_release();
  }
  v5 = v0 + v3 + *(int *)(v1 + 20);
  swift_release();
  swift_release();
  v6 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v7 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v8 = sub_23E135328();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v6, v8);
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0BB81C()
{
  return sub_23E045A8C(type metadata accessor for ColorViewModifier, (uint64_t (*)(uint64_t))sub_23E0B67B0);
}

uint64_t sub_23E0BB830()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(qword_256D1F7A0);
  swift_allocObject();
  result = sub_23E0B470C(0x406F400000000000, 0);
  qword_256D25308 = result;
  return result;
}

uint64_t sub_23E0BB87C()
{
  return sub_23E0A67D0();
}

uint64_t sub_23E0BB89C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E0A6C24(a1, a2, a3, a4);
}

uint64_t objectdestroy_7Tm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorPickerFullScreenView(0) - 8) + 80);
  swift_release();
  swift_release();
  v2 = v0 + ((v1 + 16) & ~v1) + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v3 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = sub_23E135328();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  swift_release();
  sub_23E03AC08();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0BB9F4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ColorPickerFullScreenView(0);
  return sub_23E0B91A8(a1, a2);
}

uint64_t sub_23E0BBA44()
{
  return sub_23E0A67D0();
}

uint64_t sub_23E0BBA64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_23E0A6C24(a1, a2, a3, a4);
}

uint64_t sub_23E0BBA84()
{
  return 16;
}

__n128 sub_23E0BBA90(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_23E0BBA9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_QWORD *)(a1 + 80);
  v13 = *(_WORD *)(a1 + 88);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v5;
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  *(_QWORD *)(a2 + 56) = v9;
  *(_QWORD *)(a2 + 64) = v10;
  *(_QWORD *)(a2 + 72) = v11;
  *(_QWORD *)(a2 + 80) = v12;
  *(_WORD *)(a2 + 88) = v13;
  return sub_23E0BD5BC(v3, v2);
}

uint64_t sub_23E0BBB00()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21010);
  return sub_23E136E70();
}

_QWORD *sub_23E0BBB8C(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  char *v29;
  char *v30;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v7 = a1;
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
    v9 = (char *)v7 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for Device.Control.ColorState(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v14 = sub_23E135328();
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v10, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
      }
      v17 = *(int *)(v11 + 20);
      v18 = &v9[v17];
      v19 = &v10[v17];
      *(_QWORD *)v18 = *(_QWORD *)v19;
      v18[8] = v19[8];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v20 = a3[5];
    v21 = a3[6];
    v22 = (char *)v7 + v20;
    v23 = (char *)a2 + v20;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_DWORD *)(v22 + 7) = *(_DWORD *)(v23 + 7);
    *((_BYTE *)v7 + v21) = *((_BYTE *)a2 + v21);
    v24 = a3[7];
    v25 = a3[8];
    v26 = (_QWORD *)((char *)v7 + v24);
    v27 = (_QWORD *)((char *)a2 + v24);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
    v29 = (char *)v7 + v25;
    v30 = (char *)a2 + v25;
    *v29 = *v30;
    *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_23E0BBD80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v3 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = sub_23E135328();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  swift_release();
  return swift_release();
}

_QWORD *sub_23E0BBE4C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Device.Control.ColorState(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_23E135328();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v8, v9, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    }
    v16 = *(int *)(v10 + 20);
    v17 = &v8[v16];
    v18 = &v9[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = a3[5];
  v20 = a3[6];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_DWORD *)(v21 + 7) = *(_DWORD *)(v22 + 7);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  v23 = a3[7];
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v23);
  v26 = (_QWORD *)((char *)a2 + v23);
  v27 = v26[1];
  *v25 = *v26;
  v25[1] = v27;
  v28 = (char *)a1 + v24;
  v29 = (char *)a2 + v24;
  *v28 = *v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_23E0BC014(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  __int16 v35;
  __int16 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Device.Control.ColorState(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_23E0B9C68((uint64_t)v7);
      goto LABEL_7;
    }
    v18 = sub_23E135328();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v7, v8, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_16:
        v28 = *(int *)(v9 + 20);
        v29 = &v7[v28];
        v30 = &v8[v28];
        v31 = *(_QWORD *)v30;
        v29[8] = v30[8];
        *(_QWORD *)v29 = v31;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v7, v8, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  v14 = sub_23E135328();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v23 = *(int *)(v9 + 20);
  v24 = &v7[v23];
  v25 = &v8[v23];
  v26 = *(_QWORD *)v25;
  v24[8] = v25[8];
  *(_QWORD *)v24 = v26;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  v32 = a3[5];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  *v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v35 = *((_WORD *)v34 + 2);
  v33[6] = v34[6];
  *((_WORD *)v33 + 2) = v35;
  v36 = *((_WORD *)v34 + 4);
  v33[10] = v34[10];
  *((_WORD *)v33 + 4) = v36;
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  v37 = a3[7];
  v38 = (_QWORD *)((char *)a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v40 = v39[1];
  *v38 = *v39;
  v38[1] = v40;
  swift_retain();
  swift_release();
  v41 = a3[8];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  *v42 = *v43;
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_23E0BC33C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for Device.Control.ColorState(0);
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    v13 = sub_23E135328();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v8, v9, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
    }
    v16 = *(int *)(v10 + 20);
    v17 = &v8[v16];
    v18 = &v9[v16];
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v19 = a3[5];
  v20 = a3[6];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *(_DWORD *)(v21 + 7) = *(_DWORD *)(v22 + 7);
  *((_BYTE *)a1 + v20) = *((_BYTE *)a2 + v20);
  v23 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  return a1;
}

_QWORD *sub_23E0BC4D4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = type metadata accessor for Device.Control.ColorState(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_23E0B9C68((uint64_t)v7);
      goto LABEL_7;
    }
    v18 = sub_23E135328();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    v21 = v20(v7, 1, v18);
    v22 = v20(v8, 1, v18);
    if (v21)
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v7, v8, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v7, 0, 1, v18);
LABEL_16:
        v27 = *(int *)(v9 + 20);
        v28 = &v7[v27];
        v29 = &v8[v27];
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v28[8] = v29[8];
        goto LABEL_17;
      }
    }
    else
    {
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 40))(v7, v8, v18);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v18);
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_17;
  }
  v14 = sub_23E135328();
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v8, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v7, 0, 1, v14);
  }
  v23 = *(int *)(v9 + 20);
  v24 = &v7[v23];
  v25 = &v8[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  v24[8] = v25[8];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_17:
  v30 = a3[5];
  v31 = a3[6];
  v32 = (char *)a1 + v30;
  v33 = (char *)a2 + v30;
  *v32 = *v33;
  v32[1] = v33[1];
  v32[2] = v33[2];
  *((_WORD *)v32 + 2) = *((_WORD *)v33 + 2);
  v32[6] = v33[6];
  *((_WORD *)v32 + 4) = *((_WORD *)v33 + 4);
  v32[10] = v33[10];
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  swift_release();
  v34 = a3[8];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  *v35 = *v36;
  *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
  swift_release();
  return a1;
}

uint64_t sub_23E0BC7D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_2(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E0BC864()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_2(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

void sub_23E0BC8F0()
{
  unint64_t v0;

  sub_23DFC4E20();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_23E0BC984()
{
  return sub_23DF89B88(&qword_256D255C0, &qword_256D255C8, MEMORY[0x24BDF4750]);
}

uint64_t sub_23E0BC9B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0BC9C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorFullScreenView(0) - 8) + 80);
  return sub_23E0B6880(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_23E0BCA10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorFullScreenView(0) - 8) + 80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v2 = v0 + ((v1 + 24) & ~v1) + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v3 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = sub_23E135328();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0BCB28@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorFullScreenView(0) - 8) + 80);
  return sub_23E0B744C(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

unint64_t sub_23E0BCB78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25608;
  if (!qword_256D25608)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D255F8);
    v2[0] = sub_23E0BCBE4();
    v2[1] = sub_23E03A6F4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25608);
  }
  return result;
}

unint64_t sub_23E0BCBE4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25610;
  if (!qword_256D25610)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25618);
    v2[0] = sub_23E0BCC68(&qword_256D25620, &qword_256D25628, (uint64_t (*)(void))sub_23E0BCCCC);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25610);
  }
  return result;
}

uint64_t sub_23E0BCC68(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7 = a3();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF3F50], v6, &v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E0BCCCC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D25630;
  if (!qword_256D25630)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25638);
    v2 = MEMORY[0x24BDF43B0];
    v3[0] = sub_23DF89B88(&qword_256D25640, &qword_256D25648, MEMORY[0x24BDF43B0]);
    v3[1] = sub_23DF89B88(&qword_256D25650, &qword_256D25658, v2);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D25630);
  }
  return result;
}

unint64_t sub_23E0BCD70()
{
  unint64_t result;

  result = qword_256D25660;
  if (!qword_256D25660)
  {
    result = MEMORY[0x24264C55C](&unk_23E141760, &type metadata for ColorFullScreenView.CircleInfo);
    atomic_store(result, (unint64_t *)&qword_256D25660);
  }
  return result;
}

uint64_t objectdestroy_20Tm_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ColorFullScreenView(0) - 8) + 80);
  swift_release();
  swift_release();
  v2 = v0 + ((v1 + 16) & ~v1) + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v3 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3))
  {
    v4 = sub_23E135328();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v2, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  }
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0BCEC8()
{
  return sub_23E045A8C(type metadata accessor for ColorFullScreenView, (uint64_t (*)(uint64_t))sub_23E0B8184);
}

uint64_t sub_23E0BCEDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 32);
  v4 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
  {
    v5 = sub_23E135328();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  }
  return swift_deallocObject();
}

uint64_t sub_23E0BCFC0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (unsigned __int8 *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 1) & 0xFFFFFFFFFFFFFFFELL));
  v4 = 0x10000;
  if (!v3[2])
    v4 = 0;
  v5 = 256;
  if (!v3[1])
    v5 = 0;
  return sub_23E0B84E8(v0 + v2, v5 | *v3 | v4 | ((unint64_t)*((unsigned __int16 *)v3 + 2) << 32) | ((unint64_t)v3[6] << 48), *((unsigned __int16 *)v3 + 4) | (v3[10] << 16));
}

uint64_t sub_23E0BD068()
{
  return sub_23E045A8C(type metadata accessor for ColorFullScreenView, (uint64_t (*)(uint64_t))sub_23E0B8000);
}

uint64_t sub_23E0BD07C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(type metadata accessor for ColorFullScreenView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v9 = *(_QWORD *)(v1 + 64);
  v3 = sub_23E135328();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  swift_release();
  v6 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECC0) + 32);
  v7 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7)
    && !(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3))
  {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v6, v3);
  }
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v2 + v9 + v5) & ~v5), v3);
  return swift_deallocObject();
}

uint64_t sub_23E0BD1C4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(type metadata accessor for ColorFullScreenView(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E135328() - 8) + 80);
  return sub_23E0B7C18(v0 + v2, v0 + ((v2 + v3 + v4) & ~v4));
}

double sub_23E0BD224@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E0B7ED8(*(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24), a1);
}

unint64_t sub_23E0BD230()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25680;
  if (!qword_256D25680)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25678);
    v2[0] = sub_23DF89B88(&qword_256D21F90, &qword_256D21F98, MEMORY[0x24BDEB358]);
    v2[1] = sub_23DF89B88(&qword_256D25688, &qword_256D25690, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25680);
  }
  return result;
}

_QWORD *sub_23E0BD2CC()
{
  _QWORD *v0;
  unint64_t v1;
  unint64_t v2;
  int64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v0 = sub_23E0081E0(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v2 = v0[2];
  v1 = v0[3];
  v3 = v1 >> 1;
  v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    v0 = sub_23E0081E0((_QWORD *)(v1 > 1), v2 + 1, 1, v0);
    v1 = v0[3];
    v3 = v1 >> 1;
  }
  v0[2] = v4;
  v0[v2 + 4] = 0xBFF921FB54442D18;
  v5 = v2 + 2;
  if (v3 < (uint64_t)(v2 + 2))
    v0 = sub_23E0081E0((_QWORD *)(v1 > 1), v2 + 2, 1, v0);
  v0[2] = v5;
  v0[v4 + 4] = 0xBFE0C152382D7365;
  v6 = v0[3];
  v7 = v2 + 3;
  if ((uint64_t)(v2 + 3) > (uint64_t)(v6 >> 1))
    v0 = sub_23E0081E0((_QWORD *)(v6 > 1), v2 + 3, 1, v0);
  v0[2] = v7;
  v0[v5 + 4] = 0x3FE0C152382D7365;
  v8 = v0[3];
  v9 = v2 + 4;
  if ((uint64_t)(v2 + 4) > (uint64_t)(v8 >> 1))
    v0 = sub_23E0081E0((_QWORD *)(v8 > 1), v2 + 4, 1, v0);
  v0[2] = v9;
  v0[v7 + 4] = 0x3FF921FB54442D18;
  v10 = v0[3];
  v11 = v2 + 5;
  if ((uint64_t)(v2 + 5) > (uint64_t)(v10 >> 1))
    v0 = sub_23E0081E0((_QWORD *)(v10 > 1), v2 + 5, 1, v0);
  v0[2] = v11;
  v0[v9 + 4] = 0x4004F1A6C638D03FLL;
  v12 = v0[3];
  if ((uint64_t)(v2 + 6) > (uint64_t)(v12 >> 1))
    v0 = sub_23E0081E0((_QWORD *)(v12 > 1), v2 + 6, 1, v0);
  v0[2] = v2 + 6;
  v0[v11 + 4] = 0x400D524FE24F89F2;
  return v0;
}

uint64_t getEnumTagSinglePayload for ColorFullScreenView.CircleInfo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ColorFullScreenView.CircleInfo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ColorFullScreenView.CircleInfo()
{
  return &type metadata for ColorFullScreenView.CircleInfo;
}

unint64_t sub_23E0BD528()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25698;
  if (!qword_256D25698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D256A0);
    v2[0] = sub_23DF89B88(&qword_256D256A8, &qword_256D256B0, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDF1050];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25698);
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorFullScreenView.CircleInfo.Kind()
{
  return &type metadata for ColorFullScreenView.CircleInfo.Kind;
}

uint64_t sub_23E0BD5BC(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23E0BD5E8(uint64_t a1)
{
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23E0BD61C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  uint64_t result;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  int v33;
  int v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  int v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;

  v3 = sub_23E135328();
  v39 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (unsigned __int16 *)((char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_23E1358D4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v29 - v10;
  v12 = *(unsigned __int8 *)(v1 + 2);
  v13 = *(unsigned __int16 *)(v1 + 4);
  LODWORD(v37) = *(unsigned __int8 *)(v1 + 6);
  v30 = *(unsigned __int16 *)(v1 + 8);
  v31 = v13;
  v14 = *(unsigned __int8 *)(v1 + 10);
  v15 = MEMORY[0x24BEE4AF8];
  v44 = MEMORY[0x24BEE4AF8];
  v16 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v16)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return v15;
  }
  v17 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v18 = v7;
  v19 = *(_QWORD *)(v7 + 72);
  v29 = a1;
  v35 = v17;
  v20 = a1 + v17;
  v43 = v18;
  v42 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v41 = *MEMORY[0x24BE4DCB0];
  v38 = *MEMORY[0x24BE4DCA8];
  v34 = *MEMORY[0x24BE4DC88];
  LODWORD(v17) = *MEMORY[0x24BE4DC90];
  v32 = v12 | v37 | v14;
  v33 = v17;
  v37 = v3;
  v21 = v39;
  v36 = v12;
  v42(v11, v20, v6);
  while (1)
  {
    sub_23E1358C8();
    v22 = (*(uint64_t (**)(unsigned __int16 *, uint64_t))(v21 + 88))(v5, v3);
    if (v22 == v41)
    {
      (*(void (**)(unsigned __int16 *, uint64_t))(v21 + 8))(v5, v3);
LABEL_9:
      if (!v12)
        goto LABEL_3;
      goto LABEL_10;
    }
    if (v22 == v38)
      goto LABEL_9;
    if (v22 != v34)
      break;
    (*(void (**)(unsigned __int16 *, uint64_t))(v21 + 96))(v5, v3);
    if ((v32 & 1) == 0)
    {
      v27 = *v5;
      if (v27 < v31 || v30 < v27)
        goto LABEL_3;
    }
LABEL_10:
    v23 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v23(v40, v11, v6);
    v24 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E09E25C(0, *(_QWORD *)(v24 + 16) + 1, 1);
      v24 = v44;
    }
    v26 = *(_QWORD *)(v24 + 16);
    v25 = *(_QWORD *)(v24 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_23E09E25C(v25 > 1, v26 + 1, 1);
      v24 = v44;
    }
    *(_QWORD *)(v24 + 16) = v26 + 1;
    v23((char *)(v24 + v35 + v26 * v19), v40, v6);
    v44 = v24;
    v3 = v37;
    v21 = v39;
    v12 = v36;
LABEL_4:
    v20 += v19;
    if (!--v16)
    {
      v15 = v44;
      goto LABEL_23;
    }
    v42(v11, v20, v6);
  }
  if (v22 == v33)
  {
    (*(void (**)(unsigned __int16 *, uint64_t))(v21 + 96))(v5, v3);
    swift_release();
LABEL_3:
    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v6);
    goto LABEL_4;
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t sub_23E0BD968(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int16 *v9;
  uint64_t v10;
  char *v11;
  int v12;
  unsigned int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  char *v21;
  uint64_t v22;
  void (*v23)(unsigned __int16 *, char *, uint64_t);
  int v24;
  int v25;
  int v26;
  void (*v27)(unsigned __int16 *, char *, uint64_t);
  int v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unsigned int v34;
  uint64_t result;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  void (*v43)(unsigned __int16 *, char *, uint64_t);
  uint64_t v44;
  unint64_t v45;
  int v46;
  int v47;
  char *v48;
  uint64_t v49;

  v3 = sub_23E135328();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v48 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (unsigned __int16 *)((char *)&v36 - v8);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v36 - v10;
  v12 = *(unsigned __int8 *)(v1 + 2);
  v13 = *(unsigned __int16 *)(v1 + 4);
  v14 = *(unsigned __int8 *)(v1 + 6);
  v37 = *(unsigned __int16 *)(v1 + 8);
  v38 = v13;
  v15 = *(unsigned __int8 *)(v1 + 10);
  v16 = MEMORY[0x24BEE4AF8];
  v49 = MEMORY[0x24BEE4AF8];
  v17 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v17)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    return v16;
  }
  v18 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v19 = *(_QWORD *)(v4 + 72);
  v36 = a1;
  v45 = v18;
  v20 = v14;
  v21 = (char *)(a1 + v18);
  v22 = v19;
  v23 = *(void (**)(unsigned __int16 *, char *, uint64_t))(v4 + 16);
  v24 = *MEMORY[0x24BE4DCB0];
  v47 = *MEMORY[0x24BE4DCA8];
  v41 = *MEMORY[0x24BE4DC88];
  v40 = *MEMORY[0x24BE4DC90];
  v39 = v12 | v20 | v15;
  v25 = v24;
  v26 = v12;
  v27 = v23;
  v43 = v23;
  v44 = v22;
  v46 = v26;
  v42 = v24;
  v23((unsigned __int16 *)v11, v21, v3);
  while (1)
  {
    v27(v9, v11, v3);
    v28 = (*(uint64_t (**)(unsigned __int16 *, uint64_t))(v4 + 88))(v9, v3);
    if (v28 == v25)
    {
      (*(void (**)(unsigned __int16 *, uint64_t))(v4 + 8))(v9, v3);
LABEL_9:
      if (!v26)
        goto LABEL_3;
      goto LABEL_10;
    }
    if (v28 == v47)
      goto LABEL_9;
    if (v28 != v41)
      break;
    (*(void (**)(unsigned __int16 *, uint64_t))(v4 + 96))(v9, v3);
    if ((v39 & 1) == 0)
    {
      v34 = *v9;
      if (v34 < v38 || v37 < v34)
        goto LABEL_3;
    }
LABEL_10:
    v29 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v29(v48, v11, v3);
    v30 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_23E09E288(0, *(_QWORD *)(v30 + 16) + 1, 1);
      v30 = v49;
    }
    v32 = *(_QWORD *)(v30 + 16);
    v31 = *(_QWORD *)(v30 + 24);
    if (v32 >= v31 >> 1)
    {
      sub_23E09E288(v31 > 1, v32 + 1, 1);
      v30 = v49;
    }
    *(_QWORD *)(v30 + 16) = v32 + 1;
    v33 = v30 + v45 + v32 * v44;
    v22 = v44;
    v29((char *)v33, v48, v3);
    v49 = v30;
    v26 = v46;
    v27 = v43;
    v25 = v42;
LABEL_4:
    v21 += v22;
    if (!--v17)
    {
      v16 = v49;
      goto LABEL_23;
    }
    v27((unsigned __int16 *)v11, v21, v3);
  }
  if (v28 == v40)
  {
    (*(void (**)(unsigned __int16 *, uint64_t))(v4 + 96))(v9, v3);
    swift_release();
LABEL_3:
    (*(void (**)(char *, uint64_t))(v4 + 8))(v11, v3);
    goto LABEL_4;
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t sub_23E0BDC8C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23E0BDD08()
{
  char v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C88();
  return sub_23E0BE9FC(v1);
}

double sub_23E0BDDD0@<D0>(double *a1@<X8>)
{
  double result;
  double v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  result = v3;
  *a1 = v3;
  return result;
}

void sub_23E0BDE4C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C88();
  sub_23E0BE024();
}

uint64_t sub_23E0BDEC8()
{
  return sub_23E0BE9A0();
}

uint64_t sub_23E0BDEDC()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23E0BDF4C(uint64_t a1)
{
  char v2;
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v2 = sub_23E11D904(v4, a1);
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    sub_23E0C0E54(a1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_23E135C88();
}

void sub_23E0BE024()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  char *v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  double v23;

  v0 = type metadata accessor for Device.Control.ColorState(0);
  v22 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v22 - v10;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v12 = v23;
  if (v23 <= 0.0)
    v12 = 0.0;
  if (v12 <= 1.0)
    v13 = v12;
  else
    v13 = 1.0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  if (v23 == v13)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E135C7C();
    swift_release();
    swift_release();
    v14 = sub_23E135328();
    v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
    v15(v5, 0, 1, v14);
    v15(v2, 1, 1, v14);
    v16 = &v2[*(int *)(v0 + 20)];
    *(_QWORD *)v16 = 0;
    v16[8] = 1;
    sub_23DFF1F1C((uint64_t)v5, (uint64_t)v2);
    *(double *)v16 = v13;
    v16[8] = 0;
    sub_23E0C0D90((uint64_t)v2, (uint64_t)v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 1, v0);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23DF89C1C((uint64_t)v11, (uint64_t)v9, &qword_256D1D5E8);
    swift_retain();
    sub_23E135C88();
    sub_23DF89C7C((uint64_t)v11, &qword_256D1D5E8);
    if (qword_256D1D270 != -1)
      swift_once();
    v17 = sub_23E135C10();
    __swift_project_value_buffer(v17, (uint64_t)qword_256D1EAC0);
    v18 = sub_23E135BF8();
    v19 = sub_23E137368();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v20 = 134349056;
      v23 = v13;
      sub_23E1374B8();
      _os_log_impl(&dword_23DF71000, v18, v19, "ColorPickerState updated brightness %{public}f", v20, 0xCu);
      MEMORY[0x24264C628](v20, -1, -1);
    }

  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    v23 = v13;
    swift_retain();
    v21 = sub_23E135C88();
    sub_23E0BE024(v21);
  }
}

double sub_23E0BE430()
{
  double v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  return v1;
}

void sub_23E0BE4A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  int v16;
  char v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v2 = sub_23E135328();
  v37 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v35 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Device.Control.ColorState(0);
  v33 = *(_QWORD *)(v4 - 8);
  v34 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v32 - v14;
  v16 = sub_23E0C0BFC(a1);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v36 = a1;
  if (v16 != v39)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E135C7C();
    swift_release();
    swift_release();
    v17 = v39;
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v39) = v16;
    swift_retain();
    a1 = v36;
    sub_23E135C88();
    sub_23E0BE9FC(v17);
  }
  v18 = v37;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v19(v9, a1, v2);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v20(v9, 0, 1, v2);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v21 = v39;
  v20(v6, 1, 1, v2);
  v22 = v34;
  v23 = &v6[*(int *)(v34 + 20)];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  sub_23DFF1F1C((uint64_t)v9, (uint64_t)v6);
  *(_QWORD *)v23 = v21;
  v23[8] = 0;
  sub_23E0C0D90((uint64_t)v6, (uint64_t)v15);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v15, 0, 1, v22);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23DF89C1C((uint64_t)v15, (uint64_t)v13, &qword_256D1D5E8);
  swift_retain();
  sub_23E135C88();
  sub_23DF89C7C((uint64_t)v15, &qword_256D1D5E8);
  if (qword_256D1D270 != -1)
    swift_once();
  v24 = sub_23E135C10();
  __swift_project_value_buffer(v24, (uint64_t)qword_256D1EAC0);
  v25 = v35;
  v19(v35, v36, v2);
  v26 = sub_23E135BF8();
  v27 = sub_23E137368();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v39 = v29;
    *(_DWORD *)v28 = 136446210;
    v30 = LightbulbColor.description.getter();
    v38 = sub_23E0AB274(v30, v31, &v39);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v2);
    _os_log_impl(&dword_23DF71000, v26, v27, "ColorPickerState updated selectedColor %{public}s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v29, -1, -1);
    MEMORY[0x24264C628](v28, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v2);
  }

}

uint64_t sub_23E0BE98C()
{
  return sub_23E0BE9A0();
}

uint64_t sub_23E0BE9A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  return swift_release();
}

uint64_t sub_23E0BE9FC(char a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  int v22;
  _DWORD *v23;
  _DWORD *v24;
  void (*v25)(_BYTE *, _BYTE *, uint64_t);
  int v26;
  uint64_t v27;
  uint64_t v28;
  void (*v30)(_BYTE *, uint64_t);
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  _WORD *v34;
  _BYTE *v35;
  int v36;
  __int16 v37;
  _WORD *v38;
  _WORD *v39;
  _BYTE v40[4];
  int v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _BYTE *v45;
  _WORD *v46;
  int v47;
  unsigned __int8 v48;
  int v49;
  char v50;
  char v51;

  v43 = (_BYTE *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v2 = MEMORY[0x24BDAC7A8](v43);
  v44 = &v40[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v2);
  v5 = &v40[-v4];
  v6 = sub_23E135328();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v45 = &v40[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x24BDAC7A8](v8);
  v46 = &v40[-v11];
  v12 = MEMORY[0x24BDAC7A8](v10);
  v42 = &v40[-v13];
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = &v40[-v15];
  MEMORY[0x24BDAC7A8](v14);
  v18 = &v40[-v17];
  if (qword_256D1D270 != -1)
    swift_once();
  v19 = sub_23E135C10();
  __swift_project_value_buffer(v19, (uint64_t)qword_256D1EAC0);
  swift_retain_n();
  v20 = sub_23E135BF8();
  v21 = sub_23E137368();
  v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    v23 = (_DWORD *)swift_slowAlloc();
    v41 = v22;
    v24 = v23;
    *v23 = 67109376;
    v49 = a1 & 1;
    sub_23E1374B8();
    *((_WORD *)v24 + 4) = 1026;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    v47 = v48;
    sub_23E1374B8();
    swift_release();
    _os_log_impl(&dword_23DF71000, v20, (os_log_type_t)v41, "ColorPickerState set adaptiveLightEnabled %{BOOL}d %{BOOL,public}d", (uint8_t *)v24, 0xEu);
    MEMORY[0x24264C628](v24, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  v25 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16);
  v25(v16, v18, v6);
  v26 = (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 88))(v16, v6);
  v27 = *MEMORY[0x24BE4DC90];
  if (v26 == (_DWORD)v27)
  {
    (*(void (**)(_BYTE *, uint64_t))(v7 + 96))(v16, v6);
    v28 = swift_projectBox();
    sub_23DF89C1C(v28, (uint64_t)v5, &qword_256D1D7F0);
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E135C7C();
    swift_release();
    swift_release();
    if (v50 == 1)
    {
      sub_23DF89C7C((uint64_t)v5, &qword_256D1D7F0);
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v18, v6);
    }
    v35 = v44;
    sub_23DF89C1C((uint64_t)v5, (uint64_t)v44, &qword_256D1D7F0);
    v36 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v35, 1, v6);
    v43 = v5;
    if (v36 == 1)
    {
      sub_23DF89C7C((uint64_t)v35, &qword_256D1D7F0);
      v37 = sub_23E135310();
      v38 = v46;
      *v46 = v37;
      (*(void (**)(_WORD *, _QWORD, uint64_t))(v7 + 104))(v38, *MEMORY[0x24BE4DC88], v6);
      sub_23E0BE4A0(v38);
      swift_getKeyPath();
      swift_getKeyPath();
      v25(v45, v38, v6);
      swift_retain();
      sub_23E135C88();
      v30 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    }
    else
    {
      v38 = v42;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v42, v35, v6);
      v39 = v46;
      v25(v46, v38, v6);
      sub_23E0BE4A0(v39);
      swift_getKeyPath();
      swift_getKeyPath();
      v25(v45, v39, v6);
      swift_retain();
      sub_23E135C88();
      v30 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
      v30(v39, v6);
    }
    v30(v38, v6);
    sub_23DF89C7C((uint64_t)v43, &qword_256D1D7F0);
  }
  else
  {
    v30 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v30(v16, v6);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_23E135C7C();
    swift_release();
    swift_release();
    if (v51 == 1)
    {
      v31 = swift_allocBox();
      v33 = v32;
      v25(v32, v18, v6);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v33, 0, 1, v6);
      v34 = v46;
      *(_QWORD *)v46 = v31;
      (*(void (**)(_WORD *, uint64_t, uint64_t))(v7 + 104))(v34, v27, v6);
      sub_23E0BE4A0(v34);
      swift_getKeyPath();
      swift_getKeyPath();
      v25(v45, v34, v6);
      swift_retain();
      sub_23E135C88();
      v30(v34, v6);
    }
  }
  return ((uint64_t (*)(_BYTE *, uint64_t))v30)(v18, v6);
}

uint64_t sub_23E0BF0D0()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_23E0BF140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  void (*v33)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  double v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  NSObject *v40;
  os_log_type_t v41;
  _BOOL4 v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t result;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  _BYTE v93[12];
  int v94;
  uint64_t v95;
  _BYTE *v96;
  uint64_t v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  _BYTE *v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  __int16 v110;
  char v111;

  v4 = v3;
  v103 = a2;
  v106 = a1;
  v102 = sub_23E135328();
  v99 = *(_QWORD *)(v102 - 8);
  v6 = MEMORY[0x24BDAC7A8](v102);
  v100 = &v93[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = MEMORY[0x24BDAC7A8](v6);
  v98 = &v93[-v9];
  MEMORY[0x24BDAC7A8](v8);
  v101 = &v93[-v10];
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D259B0);
  v11 = *(_QWORD *)(v107 - 8);
  MEMORY[0x24BDAC7A8](v107);
  v13 = &v93[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v104 = &v93[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x24BDAC7A8](v15);
  v19 = &v93[-v18];
  MEMORY[0x24BDAC7A8](v17);
  v21 = &v93[-v20];
  v22 = *(_QWORD *)a3;
  v23 = *(unsigned __int8 *)(a3 + 10);
  LODWORD(v105) = *(unsigned __int16 *)(a3 + 8);
  v4[OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_supportsColorTemperature] = 1;
  v24 = &v4[OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState__colorState];
  v25 = type metadata accessor for Device.Control.ColorState(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v21, 1, 1, v25);
  sub_23DF89C1C((uint64_t)v21, (uint64_t)v19, &qword_256D1D5E8);
  v26 = v106;
  sub_23E135C64();
  sub_23DF89C7C((uint64_t)v21, &qword_256D1D5E8);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v24, v13, v107);
  swift_beginAccess();
  v108 = *(double *)&v26;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C20);
  sub_23E135C64();
  swift_endAccess();
  v27 = &v4[OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_deviceConfig];
  v95 = v22;
  *(_QWORD *)v27 = v22;
  v94 = v23;
  v27[10] = v23;
  *((_WORD *)v27 + 4) = v105;
  v28 = v103;
  sub_23DF89C1C(v103, (uint64_t)&v4[OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_initialColorState], &qword_256D1D5E8);
  sub_23DF89C1C(v28, (uint64_t)v21, &qword_256D1D5E8);
  v96 = v21;
  v97 = v14;
  sub_23E135C64();
  v29 = &v4[OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState__colorState];
  swift_beginAccess();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 40))(v29, v13, v107);
  swift_endAccess();
  v30 = v101;
  sub_23E0BFCB4(v28, (uint64_t)v101);
  v32 = v98;
  v31 = v99;
  v33 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v99 + 16);
  v34 = v102;
  v33(v98, v30, v102);
  swift_beginAccess();
  v33(v100, v32, v34);
  sub_23E135C64();
  v35 = *(_QWORD *)(v31 + 8);
  ((void (*)(_BYTE *, uint64_t))v35)(v32, v34);
  swift_endAccess();
  LOBYTE(v29) = sub_23E0C0BFC((uint64_t)v30);
  swift_beginAccess();
  LOBYTE(v108) = v29 & 1;
  sub_23E135C64();
  swift_endAccess();
  v36 = sub_23E0BFF90(v28);
  v100 = v4;
  swift_beginAccess();
  v108 = v36;
  sub_23E135C64();
  swift_endAccess();
  if (qword_256D1D270 != -1)
    goto LABEL_81;
  while (1)
  {
    v37 = sub_23E135C10();
    v38 = __swift_project_value_buffer(v37, (uint64_t)qword_256D1EAC0);
    v39 = v104;
    sub_23DF89C1C(v28, (uint64_t)v104, &qword_256D1D5E8);
    v98 = (_BYTE *)v38;
    v40 = sub_23E135BF8();
    v41 = sub_23E137368();
    v42 = os_log_type_enabled(v40, v41);
    v99 = v35;
    if (v42)
    {
      v43 = v105 | (v94 << 16);
      v44 = swift_slowAlloc();
      v35 = swift_slowAlloc();
      *(_DWORD *)v44 = 136446466;
      v108 = *(double *)&v35;
      v109 = v95;
      v111 = BYTE2(v43);
      v110 = v43;
      __swift_instantiateConcreteTypeFromMangledName(qword_256D259D0);
      v45 = sub_23E137188();
      v109 = sub_23E0AB274(v45, v46, (uint64_t *)&v108);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2082;
      sub_23DF89C1C((uint64_t)v39, (uint64_t)v96, &qword_256D1D5E8);
      v47 = sub_23E137188();
      v109 = sub_23E0AB274(v47, v48, (uint64_t *)&v108);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      v26 = v106;
      sub_23DF89C7C((uint64_t)v39, &qword_256D1D5E8);
      _os_log_impl(&dword_23DF71000, v40, v41, "ColorPickerState init: deviceConfig %{public}s colorState %{public}s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24264C628](v35, -1, -1);
      MEMORY[0x24264C628](v44, -1, -1);
    }
    else
    {
      sub_23DF89C7C((uint64_t)v39, &qword_256D1D5E8);
    }

    v49 = *(_QWORD *)(v26 + 16);
    if (v49)
    {
      v50 = 0;
      v51 = 0;
      while (1)
      {
        v28 = v50 + 1;
        if (__OFADD__(v50, 1))
          break;
        v52 = __OFADD__(v51, 5);
        v51 += 5;
        if (v52)
          v51 = 0x7FFFFFFFFFFFFFFFLL;
        ++v50;
        if (v51 >= v49)
          goto LABEL_13;
      }
      __break(1u);
      goto LABEL_73;
    }
    v28 = 0;
LABEL_13:
    v109 = MEMORY[0x24BEE4AF8];
    result = sub_23E09E2D0(0, v28 & ~(v28 >> 63), 0);
    if (v28 < 0)
    {
      __break(1u);
      return result;
    }
    v54 = v109;
    v107 = v49;
    if (!v28)
      break;
    v35 = 0;
    v55 = 0;
    v56 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E1358D4() - 8) + 80);
    *(_QWORD *)&v105 = v26 + ((v56 + 32) & ~v56);
    v57 = 5;
    while (1)
    {
      v58 = v49 >= v57 ? v57 : v49;
      if (v55 >= (unint64_t)v49)
        break;
      if (v55 == 0x7FFFFFFFFFFFFFFDLL)
        goto LABEL_74;
      if (v49 >= v55 + 5)
        v59 = v55 + 5;
      else
        v59 = v49;
      if (v59 < v55)
        goto LABEL_75;
      v60 = *(_QWORD *)(v26 + 16);
      if (v60 < v55 || (uint64_t)v60 < v59)
        goto LABEL_76;
      sub_23E137620();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v61 = swift_dynamicCastClass();
      if (!v61)
      {
        swift_bridgeObjectRelease();
        v61 = MEMORY[0x24BEE4AF8];
      }
      v62 = *(_QWORD *)(v61 + 16);
      swift_release();
      if (v58 + v35 == v62)
      {
        v63 = swift_dynamicCastClass();
        if (!v63)
        {
          swift_bridgeObjectRelease();
          v63 = MEMORY[0x24BEE4AF8];
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        v63 = sub_23E12E594(v26, v105, v55, (2 * v59) | 1);
      }
      swift_bridgeObjectRelease();
      v109 = v54;
      v65 = *(_QWORD *)(v54 + 16);
      v64 = *(_QWORD *)(v54 + 24);
      if (v65 >= v64 >> 1)
      {
        sub_23E09E2D0(v64 > 1, v65 + 1, 1);
        v54 = v109;
      }
      *(_QWORD *)(v54 + 16) = v65 + 1;
      *(_QWORD *)(v54 + 8 * v65 + 32) = v63;
      v57 += 5;
      v35 -= 5;
      v55 += 5;
      --v28;
      v49 = v107;
      if (!v28)
      {
        if (v55 < v107)
          goto LABEL_41;
        goto LABEL_65;
      }
    }
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    swift_once();
  }
  if (v49)
  {
    v55 = 0;
LABEL_41:
    v66 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E1358D4() - 8) + 80);
    *(_QWORD *)&v105 = v26 + ((v66 + 32) & ~v66);
    v67 = v55 + 5;
    v35 = -v55;
    v68 = v55;
    do
    {
      v28 = v49 >= v67 ? v67 : v49;
      v69 = v68 + 5;
      if (__OFADD__(v68, 5))
        goto LABEL_77;
      if (v49 >= v69)
        v70 = v68 + 5;
      else
        v70 = v49;
      if (v70 < v68)
        goto LABEL_78;
      if (v55 < 0)
        goto LABEL_79;
      v71 = *(_QWORD *)(v26 + 16);
      if (v71 < v68 || (uint64_t)v71 < v70)
        goto LABEL_80;
      sub_23E137620();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain_n();
      v73 = swift_dynamicCastClass();
      if (!v73)
      {
        swift_bridgeObjectRelease();
        v73 = MEMORY[0x24BEE4AF8];
      }
      v74 = *(_QWORD *)(v73 + 16);
      swift_release();
      if (v28 + v35 == v74)
      {
        v75 = swift_dynamicCastClass();
        if (!v75)
        {
          swift_bridgeObjectRelease();
          v75 = MEMORY[0x24BEE4AF8];
        }
      }
      else
      {
        v78 = (2 * v70) | 1;
        v79 = v106;
        swift_bridgeObjectRelease();
        v75 = sub_23E12E594(v79, v105, v68, v78);
      }
      swift_bridgeObjectRelease();
      v109 = v54;
      v77 = *(_QWORD *)(v54 + 16);
      v76 = *(_QWORD *)(v54 + 24);
      if (v77 >= v76 >> 1)
      {
        sub_23E09E2D0(v76 > 1, v77 + 1, 1);
        v54 = v109;
      }
      *(_QWORD *)(v54 + 16) = v77 + 1;
      *(_QWORD *)(v54 + 8 * v77 + 32) = v75;
      v67 += 5;
      v35 -= 5;
      v68 += 5;
      v26 = v106;
      v49 = v107;
    }
    while (v69 < v107);
  }
LABEL_65:
  swift_bridgeObjectRelease();
  v81 = *(_QWORD *)(v54 + 16);
  if (v81)
  {
    v107 = v54;
    v82 = 0;
    *(_QWORD *)&v80 = 134218242;
    v105 = v80;
    v104 = (_BYTE *)(MEMORY[0x24BEE4AD8] + 8);
    v106 = v81;
    do
    {
      swift_retain_n();
      v83 = sub_23E135BF8();
      v84 = sub_23E137368();
      if (os_log_type_enabled(v83, v84))
      {
        v85 = swift_slowAlloc();
        v86 = swift_slowAlloc();
        v109 = v86;
        *(_DWORD *)v85 = v105;
        *(_QWORD *)(v85 + 4) = v82;
        *(_WORD *)(v85 + 12) = 2082;
        v87 = sub_23E1358D4();
        v88 = swift_bridgeObjectRetain();
        v89 = MEMORY[0x24264BB48](v88, v87);
        v91 = v90;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v85 + 14) = sub_23E0AB274(v89, v91, &v109);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_23DF71000, v83, v84, "ColorPickerState favorites, part %ld: %{public}s", (uint8_t *)v85, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x24264C628](v86, -1, -1);
        v92 = v85;
        v81 = v106;
        MEMORY[0x24264C628](v92, -1, -1);

      }
      else
      {

        swift_release_n();
      }
      ++v82;
    }
    while (v81 != v82);
  }
  swift_release();
  sub_23DF89C7C(v103, &qword_256D1D5E8);
  ((void (*)(_BYTE *, uint64_t))v99)(v101, v102);
  return (uint64_t)v100;
}

uint64_t sub_23E0BFCB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_23E135328();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v6, &qword_256D1D5E8);
  v14 = type metadata accessor for Device.Control.ColorState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v6, 1, v14) == 1)
  {
    sub_23DF89C7C((uint64_t)v6, &qword_256D1D5E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  else
  {
    sub_23DF89C1C((uint64_t)v6, (uint64_t)v9, &qword_256D1D7F0);
    sub_23E0B9C68((uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      v22 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v22(v13, v9, v10);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v22)(a2, v13, v10);
    }
  }
  sub_23DF89C7C((uint64_t)v9, &qword_256D1D7F0);
  if (qword_256D1D270 != -1)
    swift_once();
  v15 = sub_23E135C10();
  __swift_project_value_buffer(v15, (uint64_t)qword_256D1EAC0);
  v16 = sub_23E135BF8();
  v17 = sub_23E137350();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v18 = 0;
    _os_log_impl(&dword_23DF71000, v16, v17, "ColorPickerState selectedColor is nil. Defaulting to yellow.", v18, 2u);
    MEMORY[0x24264C628](v18, -1, -1);
  }

  if (qword_256D1D450 != -1)
    swift_once();
  v19 = sub_23E135BD4();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_256D25010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(a2, v20, v19);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(a2, *MEMORY[0x24BE4DCB0], v10);
}

double sub_23E0BFF90(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  double v7;
  int v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v4, &qword_256D1D5E8);
  v5 = type metadata accessor for Device.Control.ColorState(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_23DF89C7C((uint64_t)v4, &qword_256D1D5E8);
  }
  else
  {
    v6 = &v4[*(int *)(v5 + 20)];
    v7 = *(double *)v6;
    v8 = v6[8];
    sub_23E0B9C68((uint64_t)v4);
    if (v8 != 1)
      return v7;
  }
  if (qword_256D1D270 != -1)
    swift_once();
  v9 = sub_23E135C10();
  __swift_project_value_buffer(v9, (uint64_t)qword_256D1EAC0);
  v10 = sub_23E135BF8();
  v11 = sub_23E137350();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v12 = 0;
    _os_log_impl(&dword_23DF71000, v10, v11, "ColorPickerState brightness is nil. Defaulting to 1.0.", v12, 2u);
    MEMORY[0x24264C628](v12, -1, -1);
  }

  return 1.0;
}

uint64_t sub_23E0C0120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[2] = a4;
  v5 = sub_23E135124();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v6 = sub_23E134D7C();
  v4[6] = v6;
  v4[7] = *(_QWORD *)(v6 - 8);
  v4[8] = swift_task_alloc();
  sub_23E1372C0();
  v4[9] = sub_23E1372B4();
  v4[10] = sub_23E1372A8();
  v4[11] = v7;
  return swift_task_switch();
}

uint64_t sub_23E0C01DC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;

  v2 = v0[4];
  v1 = v0[5];
  v3 = v0[3];
  sub_23E134DC4();
  v4 = (void *)sub_23E134DB8();
  sub_23E134D88();

  sub_23E1350DC();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v5 = (_QWORD *)swift_task_alloc();
  v0[12] = v5;
  *v5 = v0;
  v5[1] = sub_23E0C0288;
  return sub_23E134D70();
}

uint64_t sub_23E0C0288()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_23E0C02D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_QWORD *)(v0 + 56);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E0C0334()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v3);
  v8 = (char *)&v26 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - v9;
  v11 = type metadata accessor for Device.Control.ColorState(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v26 - v16;
  sub_23DF89C1C(v1 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_initialColorState, (uint64_t)v10, &qword_256D1D5E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    return sub_23DF89C7C((uint64_t)v10, &qword_256D1D5E8);
  v29 = v5;
  sub_23E0C0D90((uint64_t)v10, (uint64_t)v17);
  if (qword_256D1D270 != -1)
    swift_once();
  v19 = sub_23E135C10();
  __swift_project_value_buffer(v19, (uint64_t)qword_256D1EAC0);
  sub_23E0C0DE4((uint64_t)v17, (uint64_t)v15);
  v20 = sub_23E135BF8();
  v21 = sub_23E137368();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v31 = v27;
    v28 = v1;
    *(_DWORD *)v22 = 136446210;
    v26 = v22 + 4;
    v23 = Device.Control.ColorState.description.getter();
    v30 = sub_23E0AB274(v23, v24, &v31);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    sub_23E0B9C68((uint64_t)v15);
    _os_log_impl(&dword_23DF71000, v20, v21, "ColorPickerState reverting to initial state %{public}s", v22, 0xCu);
    v25 = v27;
    swift_arrayDestroy();
    MEMORY[0x24264C628](v25, -1, -1);
    MEMORY[0x24264C628](v22, -1, -1);
  }
  else
  {
    sub_23E0B9C68((uint64_t)v15);
  }

  sub_23E0C0DE4((uint64_t)v17, (uint64_t)v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23DF89C1C((uint64_t)v8, (uint64_t)v29, &qword_256D1D5E8);
  swift_retain();
  sub_23E135C88();
  sub_23DF89C7C((uint64_t)v8, &qword_256D1D5E8);
  return sub_23E0B9C68((uint64_t)v17);
}

uint64_t sub_23E0C068C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_23DF89C7C(v0 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState_initialColorState, &qword_256D1D5E8);
  v1 = v0 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState__colorState;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D259B0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState__favoriteColors;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D259B8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = v0 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState__brightness;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D259C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v0 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState__selectedColor;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D259C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v0 + OBJC_IVAR____TtCV22HomeAccessoryControlUI11ColorPicker16ColorPickerState__adaptiveLightEnabled;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DFD0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  return swift_deallocClassInstance();
}

uint64_t sub_23E0C07A8()
{
  return _s16ColorPickerStateCMa();
}

uint64_t _s16ColorPickerStateCMa()
{
  uint64_t result;

  result = qword_256D257A8;
  if (!qword_256D257A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_23E0C07EC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_23E0C0964(319, qword_256D1EE98, type metadata accessor for Device.Control.ColorState, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  if (v0 <= 0x3F)
  {
    sub_23E0A85D8(319, &qword_256D257B8, &qword_256D1D5E8);
    if (v1 <= 0x3F)
    {
      sub_23E0A85D8(319, &qword_256D257C0, &qword_256D24C20);
      if (v2 <= 0x3F)
      {
        sub_23DF90518(319, &qword_256D257C8);
        if (v3 <= 0x3F)
        {
          sub_23E0C0964(319, qword_256D257D0, (uint64_t (*)(uint64_t))MEMORY[0x24BE4DCB8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BDB9EF0]);
          if (v4 <= 0x3F)
          {
            sub_23DF90518(319, &qword_256D1DCC8);
            if (v5 <= 0x3F)
              swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

void sub_23E0C0964(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t sub_23E0C09BC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  _s16ColorPickerStateCMa();
  result = sub_23E135C40();
  *a1 = result;
  return result;
}

uint64_t sub_23E0C09F8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_23E0C0A74()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_23E0BDF4C(v0);
}

uint64_t sub_23E0C0A9C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23E135C7C();
  swift_release();
  return swift_release();
}

uint64_t sub_23E0C0B04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v9 - v6;
  sub_23DF89C1C(a1, (uint64_t)&v9 - v6, &qword_256D1D5E8);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_23DF89C1C((uint64_t)v7, (uint64_t)v4, &qword_256D1D5E8);
  swift_retain();
  sub_23E135C88();
  return sub_23DF89C7C((uint64_t)v7, &qword_256D1D5E8);
}

BOOL sub_23E0C0BFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  int v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v13;

  v2 = sub_23E135328();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  v7 = *MEMORY[0x24BE4DC90];
  if (v6 == *MEMORY[0x24BE4DC90])
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    swift_release();
    if (qword_256D1D270 != -1)
      swift_once();
    v8 = sub_23E135C10();
    __swift_project_value_buffer(v8, (uint64_t)qword_256D1EAC0);
    v9 = sub_23E135BF8();
    v10 = sub_23E137368();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_23DF71000, v9, v10, "ColorPickerState selectedColor set natural light", v11, 2u);
      MEMORY[0x24264C628](v11, -1, -1);
    }

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return v6 == v7;
}

uint64_t sub_23E0C0D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Device.Control.ColorState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0C0DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Device.Control.ColorState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0C0E2C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_23E0BDF4C(v0);
}

uint64_t sub_23E0C0E54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_256D1D270 != -1)
    swift_once();
  v5 = sub_23E135C10();
  __swift_project_value_buffer(v5, (uint64_t)qword_256D1EAC0);
  swift_bridgeObjectRetain_n();
  v6 = sub_23E135BF8();
  v7 = sub_23E137368();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v21 = v9;
    *(_DWORD *)v8 = 136446210;
    v10 = sub_23E1358D4();
    v11 = swift_bridgeObjectRetain();
    v12 = MEMORY[0x24264BB48](v11, v10);
    v14 = v13;
    swift_bridgeObjectRelease();
    v20 = sub_23E0AB274(v12, v14, &v21);
    sub_23E1374B8();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_23DF71000, v6, v7, "ColorPickerState updated favorites %{public}s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24264C628](v9, -1, -1);
    MEMORY[0x24264C628](v8, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v15 = sub_23E1372E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v4, 1, 1, v15);
  sub_23E1372C0();
  swift_bridgeObjectRetain();
  v16 = sub_23E1372B4();
  v17 = (_QWORD *)swift_allocObject();
  v18 = MEMORY[0x24BEE6930];
  v17[2] = v16;
  v17[3] = v18;
  v17[4] = a1;
  sub_23DFA2514((uint64_t)v4, (uint64_t)&unk_256D259A8, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_23E0C10D4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E0C1100(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_23DF83188;
  return sub_23E0C0120(a1, v4, v5, v6);
}

uint64_t sub_23E0C116C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(_QWORD *, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char *v53;
  char v54;
  uint64_t v55;
  uint64_t *v56;
  char *v57;
  uint64_t v58;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    v20 = v19 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    v6 = a3;
    *(_QWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_QWORD *)(a1 + 24) = a2[3];
    v7 = *(int *)(a3 + 28);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t)a2 + v7;
    v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    v11 = *(uint64_t *)((char *)a2 + v7 + 24);
    v8[2] = *(uint64_t *)((char *)a2 + v7 + 16);
    v8[3] = v11;
    v12 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
    v13 = (_QWORD *)((char *)v8 + v12);
    v14 = (_QWORD *)(v9 + v12);
    v15 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v16 = *(_QWORD *)(v15 - 8);
    v17 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v22 = v14[1];
      *v13 = *v14;
      v13[1] = v22;
      if (EnumCaseMultiPayload == 1)
      {
        v23 = v14[3];
        v13[2] = v14[2];
        v13[3] = v23;
        swift_bridgeObjectRetain();
      }
      else
      {
        v24 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v57 = (char *)v13 + v24;
        v53 = (char *)v14 + v24;
        v25 = v6;
        v26 = sub_23E135910();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v28 = v26;
        v6 = v25;
        v27(v57, v53, v28);
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v13 + *(int *)(v29 + 48)) = *(_QWORD *)((char *)v14 + *(int *)(v29 + 48));
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    v55 = v6;
    v56 = a2;
    v30 = *(int *)(v6 + 36);
    *(_BYTE *)(a1 + *(int *)(v6 + 32)) = *((_BYTE *)a2 + *(int *)(v6 + 32));
    v31 = a2;
    v32 = a1 + v30;
    v33 = (uint64_t)v31 + v30;
    v34 = *(_QWORD *)v33;
    v35 = *(_QWORD *)(v33 + 8);
    v36 = *(_QWORD *)(v33 + 16);
    v37 = *(_QWORD *)(v33 + 24);
    v38 = *(_QWORD *)(v33 + 32);
    v39 = *(_QWORD *)(v33 + 40);
    v41 = *(_QWORD *)(v33 + 48);
    v40 = *(_QWORD *)(v33 + 56);
    v58 = a1;
    v42 = *(_BYTE *)(v33 + 64);
    v54 = *(_BYTE *)(v33 + 65);
    sub_23DF98590(*(_QWORD *)v33, v35, v36, v37, v38, v39, v41, v40, v42, v54);
    *(_QWORD *)v32 = v34;
    *(_QWORD *)(v32 + 8) = v35;
    *(_QWORD *)(v32 + 16) = v36;
    *(_QWORD *)(v32 + 24) = v37;
    *(_QWORD *)(v32 + 32) = v38;
    *(_QWORD *)(v32 + 40) = v39;
    *(_QWORD *)(v32 + 48) = v41;
    *(_QWORD *)(v32 + 56) = v40;
    *(_BYTE *)(v32 + 64) = v42;
    *(_BYTE *)(v32 + 65) = v54;
    v43 = *(int *)(v55 + 40);
    v44 = v58 + v43;
    v45 = (uint64_t)v56 + v43;
    v46 = *(_QWORD *)v45;
    LOBYTE(v34) = *(_BYTE *)(v45 + 8);
    sub_23DF89F20(*(_QWORD *)v45, v34);
    *(_QWORD *)v44 = v46;
    *(_BYTE *)(v44 + 8) = v34;
    v20 = v58;
    v47 = *(int *)(v55 + 44);
    v48 = (_QWORD *)(v58 + v47);
    v49 = (uint64_t *)((char *)v56 + v47);
    v50 = *v49;
    v51 = v49[1];
    *v48 = v50;
    v48[1] = v51;
  }
  swift_retain();
  return v20;
}

uint64_t sub_23E0C1428(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + a2[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v6 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v9 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  v10 = a1 + a2[9];
  sub_23DF985F0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64), *(_BYTE *)(v10 + 65));
  sub_23DF8A078(*(_QWORD *)(a1 + a2[10]), *(_BYTE *)(a1 + a2[10] + 8));
  return swift_release();
}

uint64_t sub_23E0C1560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(_QWORD *, uint64_t, uint64_t);
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  char *v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v3 = a3;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(_QWORD *)(a2 + v6 + 24);
  v7[2] = *(_QWORD *)(a2 + v6 + 16);
  v7[3] = v10;
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (_QWORD *)((char *)v7 + v11);
  v13 = (_QWORD *)(v8 + v11);
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = v13[1];
    *v12 = *v13;
    v12[1] = v19;
    if (EnumCaseMultiPayload == 1)
    {
      v20 = v13[3];
      v12[2] = v13[2];
      v12[3] = v20;
      swift_bridgeObjectRetain();
    }
    else
    {
      v21 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v50 = (char *)v13 + v21;
      v52 = (char *)v12 + v21;
      v22 = v3;
      v23 = sub_23E135910();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v25 = v23;
      v3 = v22;
      v24(v52, v50, v25);
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v12 + *(int *)(v26 + 48)) = *(_QWORD *)((char *)v13 + *(int *)(v26 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v54 = v3;
  v55 = a2;
  v27 = *(int *)(v3 + 36);
  *(_BYTE *)(a1 + *(int *)(v3 + 32)) = *(_BYTE *)(a2 + *(int *)(v3 + 32));
  v28 = a2;
  v29 = a1 + v27;
  v30 = v28 + v27;
  v31 = *(_QWORD *)v30;
  v32 = *(_QWORD *)(v30 + 8);
  v33 = *(_QWORD *)(v30 + 16);
  v34 = *(_QWORD *)(v30 + 24);
  v35 = *(_QWORD *)(v30 + 32);
  v36 = *(_QWORD *)(v30 + 40);
  v38 = *(_QWORD *)(v30 + 48);
  v37 = *(_QWORD *)(v30 + 56);
  v53 = a1;
  v39 = *(_BYTE *)(v30 + 64);
  v51 = *(_BYTE *)(v30 + 65);
  sub_23DF98590(*(_QWORD *)v30, v32, v33, v34, v35, v36, v38, v37, v39, v51);
  *(_QWORD *)v29 = v31;
  *(_QWORD *)(v29 + 8) = v32;
  *(_QWORD *)(v29 + 16) = v33;
  *(_QWORD *)(v29 + 24) = v34;
  *(_QWORD *)(v29 + 32) = v35;
  *(_QWORD *)(v29 + 40) = v36;
  *(_QWORD *)(v29 + 48) = v38;
  *(_QWORD *)(v29 + 56) = v37;
  *(_BYTE *)(v29 + 64) = v39;
  *(_BYTE *)(v29 + 65) = v51;
  v40 = *(int *)(v54 + 40);
  v41 = v53 + v40;
  v42 = v55 + v40;
  v43 = *(_QWORD *)v42;
  LOBYTE(v31) = *(_BYTE *)(v42 + 8);
  sub_23DF89F20(*(_QWORD *)v42, v31);
  *(_QWORD *)v41 = v43;
  *(_BYTE *)(v41 + 8) = v31;
  v44 = *(int *)(v54 + 44);
  v45 = (_QWORD *)(v53 + v44);
  v46 = (uint64_t *)(v55 + v44);
  v47 = *v46;
  v48 = v46[1];
  *v45 = v47;
  v45[1] = v48;
  swift_retain();
  return v53;
}

_QWORD *sub_23E0C17E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  char *v64;
  uint64_t v65;
  char v66;
  char *v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;

  v3 = a3;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  v6 = *(int *)(a3 + 28);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v10 = (char *)v7 + v9;
  v11 = &v8[v9];
  v12 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  v70 = v3;
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v67 = &v10[v20];
        v21 = &v11[v20];
        v22 = sub_23E135910();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v24 = v21;
        v3 = v70;
        v23(v67, v24, v22);
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v10[*(int *)(v25 + 48)] = *(_QWORD *)&v11[*(int *)(v25 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_14;
    }
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_14;
  }
  if (v16)
  {
    sub_23E0C1BF4((uint64_t)v10);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23E0C1BF4((uint64_t)v10);
    v19 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    if (v19 == 1)
    {
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      v59 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v60 = &v10[v59];
      v61 = &v11[v59];
      v62 = sub_23E135910();
      v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
      swift_bridgeObjectRetain();
      v64 = v61;
      v3 = v70;
      v63(v60, v64, v62);
      v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)&v10[*(int *)(v65 + 48)] = *(_QWORD *)&v11[*(int *)(v65 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  *((_BYTE *)a1 + *(int *)(v3 + 32)) = *((_BYTE *)a2 + *(int *)(v3 + 32));
  v26 = *(int *)(v3 + 36);
  v27 = a2;
  v68 = a1;
  v69 = a2;
  v28 = (char *)a1 + v26;
  v29 = (char *)v27 + v26;
  v30 = *(_QWORD *)v29;
  v31 = *((_QWORD *)v29 + 1);
  v32 = *((_QWORD *)v29 + 2);
  v33 = *((_QWORD *)v29 + 3);
  v34 = *((_QWORD *)v29 + 4);
  v35 = *((_QWORD *)v29 + 5);
  v37 = *((_QWORD *)v29 + 6);
  v36 = *((_QWORD *)v29 + 7);
  v38 = v29[64];
  sub_23DF98590(*(_QWORD *)v29, v31, v32, v33, v34, v35, v37, v36, v38, v29[65]);
  v39 = *(_QWORD *)v28;
  v40 = *((_QWORD *)v28 + 1);
  v41 = *((_QWORD *)v28 + 2);
  v42 = *((_QWORD *)v28 + 3);
  v43 = *((_QWORD *)v28 + 4);
  v44 = *((_QWORD *)v28 + 5);
  v45 = *((_QWORD *)v28 + 6);
  v46 = *((_QWORD *)v28 + 7);
  v47 = v28[64];
  v48 = v28[65];
  *(_QWORD *)v28 = v30;
  *((_QWORD *)v28 + 1) = v31;
  *((_QWORD *)v28 + 2) = v32;
  *((_QWORD *)v28 + 3) = v33;
  *((_QWORD *)v28 + 4) = v34;
  *((_QWORD *)v28 + 5) = v35;
  *((_QWORD *)v28 + 6) = v37;
  *((_QWORD *)v28 + 7) = v36;
  v28[64] = v38;
  v28[65] = v66;
  sub_23DF985F0(v39, v40, v41, v42, v43, v44, v45, v46, v47, v48);
  v49 = *(int *)(v70 + 40);
  v50 = (char *)v68 + v49;
  v51 = (char *)v69 + v49;
  v52 = *(_QWORD *)v51;
  LOBYTE(v30) = v51[8];
  sub_23DF89F20(*(_QWORD *)v51, v30);
  v53 = *(_QWORD *)v50;
  v54 = v50[8];
  *(_QWORD *)v50 = v52;
  v50[8] = v30;
  sub_23DF8A078(v53, v54);
  v55 = *(int *)(v70 + 44);
  v56 = (char *)v68 + v55;
  v57 = (char *)v69 + v55;
  *(_QWORD *)((char *)v68 + v55) = *(_QWORD *)((char *)v69 + v55);
  swift_retain();
  swift_release();
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  return v68;
}

uint64_t sub_23E0C1BF4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_23E0C1C30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (_OWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_OWORD *)(a2 + v6 + 16);
  *v7 = *(_OWORD *)(a2 + v6);
  v7[1] = v9;
  v10 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v11 = (_OWORD *)((char *)v7 + v10);
  v12 = (_OWORD *)(v8 + v10);
  v13 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v11, v12, *(_QWORD *)(v14 + 64));
    }
    else
    {
      *v11 = *v12;
      v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v17 = (char *)v11 + v16;
      v18 = (char *)v12 + v16;
      v19 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v11 + *(int *)(v20 + 48)) = *(_QWORD *)((char *)v12 + *(int *)(v20 + 48));
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v21 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_WORD *)(v22 + 64) = *(_WORD *)(v23 + 64);
  v24 = *(_OWORD *)(v23 + 48);
  *(_OWORD *)(v22 + 32) = *(_OWORD *)(v23 + 32);
  *(_OWORD *)(v22 + 48) = v24;
  v25 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v25;
  v26 = a3[10];
  v27 = a3[11];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  return a1;
}

uint64_t sub_23E0C1DF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_OWORD *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v8 + 24);
  v7[2] = *(_QWORD *)(v8 + 16);
  v7[3] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (_OWORD *)((char *)v7 + v11);
  v13 = (_OWORD *)(v8 + v11);
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23E0C1BF4((uint64_t)v12);
      if (!swift_getEnumCaseMultiPayload())
      {
        *v12 = *v13;
        v52 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v53 = (char *)v12 + v52;
        v54 = (char *)v13 + v52;
        v55 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v12 + *(int *)(v56 + 48)) = *(_QWORD *)((char *)v13 + *(int *)(v56 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v19 = *(_QWORD *)(v15 + 64);
      goto LABEL_8;
    }
    sub_23E0C1BF4((uint64_t)v12);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
LABEL_8:
    memcpy(v12, v13, v19);
    goto LABEL_14;
  }
  if (v18)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(_QWORD *)(v15 + 64));
  }
  else
  {
    *v12 = *v13;
    v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v21 = (char *)v12 + v20;
    v22 = (char *)v13 + v20;
    v23 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)((char *)v12 + *(int *)(v24 + 48)) = *(_QWORD *)((char *)v13 + *(int *)(v24 + 48));
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_14:
  v25 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_BYTE *)(v27 + 64);
  v29 = *(_BYTE *)(v27 + 65);
  v30 = *(_QWORD *)v26;
  v31 = *(_QWORD *)(v26 + 8);
  v32 = *(_QWORD *)(v26 + 16);
  v33 = *(_QWORD *)(v26 + 24);
  v34 = *(_QWORD *)(v26 + 32);
  v35 = *(_QWORD *)(v26 + 40);
  v36 = *(_QWORD *)(v26 + 48);
  v37 = *(_QWORD *)(v26 + 56);
  v38 = *(_BYTE *)(v26 + 64);
  v39 = *(_BYTE *)(v26 + 65);
  v40 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v40;
  v41 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v41;
  *(_BYTE *)(v26 + 64) = v28;
  *(_BYTE *)(v26 + 65) = v29;
  sub_23DF985F0(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39);
  v42 = a3[10];
  v43 = a1 + v42;
  v44 = (uint64_t *)(a2 + v42);
  v45 = *v44;
  LOBYTE(v44) = *((_BYTE *)v44 + 8);
  v46 = *(_QWORD *)v43;
  v47 = *(_BYTE *)(v43 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = (_BYTE)v44;
  sub_23DF8A078(v46, v47);
  v48 = a3[11];
  v49 = a1 + v48;
  v50 = (_QWORD *)(a2 + v48);
  *(_QWORD *)(a1 + v48) = *v50;
  swift_release();
  *(_QWORD *)(v49 + 8) = v50[1];
  return a1;
}

uint64_t sub_23E0C20E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0C20EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 28), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_23E0C2178()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0C2184(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for AccessoryControlsHeaderConfig(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 28), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 44)) = a2;
  return result;
}

uint64_t type metadata accessor for HeaderViewModifier.ScrollView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25A30);
}

uint64_t sub_23E0C2214()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryControlsHeaderConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeaderViewModifier()
{
  return &type metadata for HeaderViewModifier;
}

char *sub_23E0C22D0(char *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  _QWORD *v50;
  char *__dst;
  char *__dsta;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *(_QWORD *)a1 = *a2;
    v20 = v19 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = a2[3];
    *((_QWORD *)a1 + 2) = a2[2];
    *((_QWORD *)a1 + 3) = v6;
    *((_QWORD *)a1 + 4) = a2[4];
    v7 = a3[6];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = *(_QWORD *)((char *)a2 + v7 + 8);
    *(_QWORD *)v8 = *(_QWORD *)((char *)a2 + v7);
    *((_QWORD *)v8 + 1) = v10;
    v11 = *(_QWORD *)((char *)a2 + v7 + 24);
    *((_QWORD *)v8 + 2) = *(_QWORD *)((char *)a2 + v7 + 16);
    *((_QWORD *)v8 + 3) = v11;
    v12 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
    __dst = &v8[v12];
    v13 = &v9[v12];
    v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      v17 = a2;
      v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v22 = *((_QWORD *)v13 + 1);
      v23 = __dst;
      *(_QWORD *)__dst = *(_QWORD *)v13;
      *((_QWORD *)__dst + 1) = v22;
      if (EnumCaseMultiPayload == 1)
      {
        v24 = *((_QWORD *)v13 + 3);
        *((_QWORD *)__dst + 2) = *((_QWORD *)v13 + 2);
        *((_QWORD *)__dst + 3) = v24;
        swift_bridgeObjectRetain();
      }
      else
      {
        v25 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v26 = &__dst[v25];
        v27 = &v13[v25];
        v28 = sub_23E135910();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        swift_bridgeObjectRetain();
        v30 = v27;
        v23 = __dst;
        v29(v26, v30, v28);
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&__dst[*(int *)(v31 + 48)] = *(_QWORD *)&v13[*(int *)(v31 + 48)];
      }
      v17 = a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v23, 0, 1, v14);
    }
    v32 = a3[7];
    v33 = &a1[v32];
    v50 = v17;
    v34 = (char *)v17 + v32;
    v35 = *(_QWORD *)v34;
    v36 = *((_QWORD *)v34 + 1);
    v37 = *((_QWORD *)v34 + 2);
    v38 = *((_QWORD *)v34 + 3);
    v39 = *((_QWORD *)v34 + 4);
    v40 = *((_QWORD *)v34 + 5);
    v42 = *((_QWORD *)v34 + 6);
    v41 = *((_QWORD *)v34 + 7);
    __dsta = a1;
    v43 = v34[64];
    v49 = v34[65];
    sub_23DF98590(*(_QWORD *)v34, v36, v37, v38, v39, v40, v42, v41, v43, v49);
    *(_QWORD *)v33 = v35;
    *((_QWORD *)v33 + 1) = v36;
    *((_QWORD *)v33 + 2) = v37;
    *((_QWORD *)v33 + 3) = v38;
    *((_QWORD *)v33 + 4) = v39;
    *((_QWORD *)v33 + 5) = v40;
    *((_QWORD *)v33 + 6) = v42;
    *((_QWORD *)v33 + 7) = v41;
    v33[64] = v43;
    v33[65] = v49;
    v44 = a3[8];
    v45 = &__dsta[v44];
    v46 = (uint64_t)v50 + v44;
    v47 = *(_QWORD *)v46;
    LOBYTE(v41) = *(_BYTE *)(v46 + 8);
    sub_23DF89F20(*(_QWORD *)v46, v41);
    *(_QWORD *)v45 = v47;
    v45[8] = v41;
    return __dsta;
  }
  return (char *)v20;
}

uint64_t sub_23E0C258C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_release();
  swift_release();
  v4 = a1 + a2[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v6 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v9 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  v10 = a1 + a2[7];
  sub_23DF985F0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64), *(_BYTE *)(v10 + 65));
  return sub_23DF8A078(*(_QWORD *)(a1 + a2[8]), *(_BYTE *)(a1 + a2[8] + 8));
}

char *sub_23E0C26C8(char *a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(_QWORD *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char v46;
  uint64_t v47;
  char *__dst;
  char *__dsta;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v5 = *(_QWORD *)(a2 + 24);
  *((_QWORD *)a1 + 2) = *(_QWORD *)(a2 + 16);
  *((_QWORD *)a1 + 3) = v5;
  *((_QWORD *)a1 + 4) = *(_QWORD *)(a2 + 32);
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *(_QWORD *)v7 = *(_QWORD *)(a2 + v6);
  *((_QWORD *)v7 + 1) = v9;
  v10 = *(_QWORD *)(a2 + v6 + 24);
  *((_QWORD *)v7 + 2) = *(_QWORD *)(a2 + v6 + 16);
  *((_QWORD *)v7 + 3) = v10;
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  __dst = &v7[v11];
  v12 = (_QWORD *)(v8 + v11);
  v13 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v14 + 48);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    v16 = a2;
    v17 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v19 = v12[1];
    v20 = __dst;
    *(_QWORD *)__dst = *v12;
    *((_QWORD *)__dst + 1) = v19;
    if (EnumCaseMultiPayload == 1)
    {
      v21 = v12[3];
      *((_QWORD *)__dst + 2) = v12[2];
      *((_QWORD *)__dst + 3) = v21;
      swift_bridgeObjectRetain();
    }
    else
    {
      v22 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v23 = &__dst[v22];
      v24 = (char *)v12 + v22;
      v25 = sub_23E135910();
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v27 = v24;
      v20 = __dst;
      v26(v23, v27, v25);
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)&__dst[*(int *)(v28 + 48)] = *(_QWORD *)((char *)v12 + *(int *)(v28 + 48));
    }
    v16 = a2;
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
  }
  v29 = a3[7];
  v30 = &a1[v29];
  v47 = v16;
  __dsta = a1;
  v31 = v16 + v29;
  v32 = *(_QWORD *)v31;
  v33 = *(_QWORD *)(v31 + 8);
  v34 = *(_QWORD *)(v31 + 16);
  v35 = *(_QWORD *)(v31 + 24);
  v36 = *(_QWORD *)(v31 + 32);
  v37 = *(_QWORD *)(v31 + 40);
  v39 = *(_QWORD *)(v31 + 48);
  v38 = *(_QWORD *)(v31 + 56);
  v40 = *(_BYTE *)(v31 + 64);
  v46 = *(_BYTE *)(v31 + 65);
  sub_23DF98590(*(_QWORD *)v31, v33, v34, v35, v36, v37, v39, v38, v40, v46);
  *(_QWORD *)v30 = v32;
  *((_QWORD *)v30 + 1) = v33;
  *((_QWORD *)v30 + 2) = v34;
  *((_QWORD *)v30 + 3) = v35;
  *((_QWORD *)v30 + 4) = v36;
  *((_QWORD *)v30 + 5) = v37;
  *((_QWORD *)v30 + 6) = v39;
  *((_QWORD *)v30 + 7) = v38;
  v30[64] = v40;
  v30[65] = v46;
  v41 = a3[8];
  v42 = &__dsta[v41];
  v43 = v47 + v41;
  v44 = *(_QWORD *)v43;
  LOBYTE(v38) = *(_BYTE *)(v43 + 8);
  sub_23DF89F20(*(_QWORD *)v43, v38);
  *(_QWORD *)v42 = v44;
  v42[8] = v38;
  return __dsta;
}

_QWORD *sub_23E0C2950(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v56;
  char *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  char *v62;
  uint64_t v63;
  char v64;
  char *v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;

  v4 = a2;
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = v4[3];
  swift_retain();
  swift_release();
  a1[4] = v4[4];
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)v4 + v6;
  *v7 = *(_QWORD *)((char *)v4 + v6);
  v7[1] = *(_QWORD *)((char *)v4 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v10 = (char *)v7 + v9;
  v11 = &v8[v9];
  v12 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  v68 = a3;
  if (v15)
  {
    if (!v16)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
      if (EnumCaseMultiPayload == 1)
      {
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
        swift_bridgeObjectRetain();
      }
      else
      {
        v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v65 = &v10[v20];
        v21 = v4;
        v22 = &v11[v20];
        v23 = sub_23E135910();
        v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
        swift_bridgeObjectRetain();
        v25 = v22;
        v4 = v21;
        a3 = v68;
        v24(v65, v25, v23);
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)&v10[*(int *)(v26 + 48)] = *(_QWORD *)&v11[*(int *)(v26 + 48)];
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_14;
    }
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_14;
  }
  if (v16)
  {
    sub_23E0C1BF4((uint64_t)v10);
    goto LABEL_7;
  }
  if (a1 != v4)
  {
    sub_23E0C1BF4((uint64_t)v10);
    v19 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v10 = *(_QWORD *)v11;
    *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
    if (v19 == 1)
    {
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      *((_QWORD *)v10 + 3) = *((_QWORD *)v11 + 3);
      swift_bridgeObjectRetain();
    }
    else
    {
      v56 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v57 = &v10[v56];
      v58 = v4;
      v59 = &v11[v56];
      v60 = sub_23E135910();
      v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      v62 = v59;
      v4 = v58;
      a3 = v68;
      v61(v57, v62, v60);
      v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)&v10[*(int *)(v63 + 48)] = *(_QWORD *)&v11[*(int *)(v63 + 48)];
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_14:
  v66 = a1;
  v67 = v4;
  v27 = *(int *)(a3 + 28);
  v28 = (char *)a1 + v27;
  v29 = (char *)v4 + v27;
  v30 = *(_QWORD *)v29;
  v31 = *((_QWORD *)v29 + 1);
  v32 = *((_QWORD *)v29 + 2);
  v33 = *((_QWORD *)v29 + 3);
  v34 = *((_QWORD *)v29 + 4);
  v35 = *((_QWORD *)v29 + 5);
  v37 = *((_QWORD *)v29 + 6);
  v36 = *((_QWORD *)v29 + 7);
  v38 = v29[64];
  sub_23DF98590(*(_QWORD *)v29, v31, v32, v33, v34, v35, v37, v36, v38, v29[65]);
  v39 = *(_QWORD *)v28;
  v40 = *((_QWORD *)v28 + 1);
  v41 = *((_QWORD *)v28 + 2);
  v42 = *((_QWORD *)v28 + 3);
  v43 = *((_QWORD *)v28 + 4);
  v44 = *((_QWORD *)v28 + 5);
  v45 = *((_QWORD *)v28 + 6);
  v46 = *((_QWORD *)v28 + 7);
  v47 = v28[64];
  v48 = v28[65];
  *(_QWORD *)v28 = v30;
  *((_QWORD *)v28 + 1) = v31;
  *((_QWORD *)v28 + 2) = v32;
  *((_QWORD *)v28 + 3) = v33;
  *((_QWORD *)v28 + 4) = v34;
  *((_QWORD *)v28 + 5) = v35;
  *((_QWORD *)v28 + 6) = v37;
  *((_QWORD *)v28 + 7) = v36;
  v28[64] = v38;
  v28[65] = v64;
  sub_23DF985F0(v39, v40, v41, v42, v43, v44, v45, v46, v47, v48);
  v49 = *(int *)(v68 + 32);
  v50 = (char *)v66 + v49;
  v51 = (uint64_t)v67 + v49;
  v52 = *(_QWORD *)v51;
  LOBYTE(v36) = *(_BYTE *)(v51 + 8);
  sub_23DF89F20(*(_QWORD *)v51, v36);
  v53 = *(_QWORD *)v50;
  v54 = v50[8];
  *(_QWORD *)v50 = v52;
  v50[8] = v36;
  sub_23DF8A078(v53, v54);
  return v66;
}

uint64_t sub_23E0C2D54(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = a3[6];
  v8 = (_OWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_OWORD *)(a2 + v7 + 16);
  *v8 = *(_OWORD *)(a2 + v7);
  v8[1] = v10;
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (_OWORD *)((char *)v8 + v11);
  v13 = (_OWORD *)(v9 + v11);
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v12, v13, *(_QWORD *)(v15 + 64));
    }
    else
    {
      *v12 = *v13;
      v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v18 = (char *)v12 + v17;
      v19 = (char *)v13 + v17;
      v20 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v12 + *(int *)(v21 + 48)) = *(_QWORD *)((char *)v13 + *(int *)(v21 + 48));
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v22 = a3[7];
  v23 = a3[8];
  v24 = a1 + v22;
  v25 = a2 + v22;
  v26 = *(_OWORD *)(v25 + 48);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v25 + 32);
  *(_OWORD *)(v24 + 48) = v26;
  *(_WORD *)(v24 + 64) = *(_WORD *)(v25 + 64);
  v27 = *(_OWORD *)(v25 + 16);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 16) = v27;
  v28 = a1 + v23;
  v29 = a2 + v23;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  return a1;
}

uint64_t sub_23E0C2EFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_OWORD *, uint64_t, uint64_t);
  int v17;
  int v18;
  size_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = a3[6];
  v7 = (_QWORD *)(a1 + v6);
  v8 = a2 + v6;
  v9 = *(_QWORD *)(a2 + v6 + 8);
  *v7 = *(_QWORD *)(a2 + v6);
  v7[1] = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v8 + 24);
  v7[2] = *(_QWORD *)(v8 + 16);
  v7[3] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v12 = (_OWORD *)((char *)v7 + v11);
  v13 = (_OWORD *)(v8 + v11);
  v14 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      if (a1 == a2)
        goto LABEL_14;
      sub_23E0C1BF4((uint64_t)v12);
      if (!swift_getEnumCaseMultiPayload())
      {
        *v12 = *v13;
        v49 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v50 = (char *)v12 + v49;
        v51 = (char *)v13 + v49;
        v52 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v12 + *(int *)(v53 + 48)) = *(_QWORD *)((char *)v13 + *(int *)(v53 + 48));
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      v19 = *(_QWORD *)(v15 + 64);
      goto LABEL_8;
    }
    sub_23E0C1BF4((uint64_t)v12);
LABEL_7:
    v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
LABEL_8:
    memcpy(v12, v13, v19);
    goto LABEL_14;
  }
  if (v18)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v12, v13, *(_QWORD *)(v15 + 64));
  }
  else
  {
    *v12 = *v13;
    v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v21 = (char *)v12 + v20;
    v22 = (char *)v13 + v20;
    v23 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)((char *)v12 + *(int *)(v24 + 48)) = *(_QWORD *)((char *)v13 + *(int *)(v24 + 48));
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
LABEL_14:
  v25 = a3[7];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = *(_BYTE *)(v27 + 64);
  v29 = *(_BYTE *)(v27 + 65);
  v30 = *(_QWORD *)v26;
  v31 = *(_QWORD *)(v26 + 8);
  v32 = *(_QWORD *)(v26 + 16);
  v33 = *(_QWORD *)(v26 + 24);
  v34 = *(_QWORD *)(v26 + 32);
  v35 = *(_QWORD *)(v26 + 40);
  v36 = *(_QWORD *)(v26 + 48);
  v37 = *(_QWORD *)(v26 + 56);
  v38 = *(_BYTE *)(v26 + 64);
  v39 = *(_BYTE *)(v26 + 65);
  v40 = *(_OWORD *)(v27 + 16);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *(_OWORD *)(v26 + 16) = v40;
  v41 = *(_OWORD *)(v27 + 48);
  *(_OWORD *)(v26 + 32) = *(_OWORD *)(v27 + 32);
  *(_OWORD *)(v26 + 48) = v41;
  *(_BYTE *)(v26 + 64) = v28;
  *(_BYTE *)(v26 + 65) = v29;
  sub_23DF985F0(v30, v31, v32, v33, v34, v35, v36, v37, v38, v39);
  v42 = a3[8];
  v43 = a1 + v42;
  v44 = (uint64_t *)(a2 + v42);
  v45 = *v44;
  LOBYTE(v44) = *((_BYTE *)v44 + 8);
  v46 = *(_QWORD *)v43;
  v47 = *(_BYTE *)(v43 + 8);
  *(_QWORD *)v43 = v45;
  *(_BYTE *)(v43 + 8) = (_BYTE)v44;
  sub_23DF8A078(v46, v47);
  return a1;
}

uint64_t sub_23E0C31D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0C31E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for AccessoryControlsHeaderConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23E0C325C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0C3268(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for AccessoryControlsHeaderConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for HeaderViewModifier.ScrollViewVStack(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25AD8);
}

uint64_t sub_23E0C32F0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for AccessoryControlsHeaderConfig(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E0C3380()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0C3390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  double v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  double v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t KeyPath;
  int *v42;
  char *v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  unint64_t v50;
  _QWORD *v52;
  uint64_t v53;
  double v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD v69[4];
  __int16 v70;

  v3 = v2;
  v57 = a1;
  v59 = a2;
  v61 = sub_23E13651C();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v58 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  MEMORY[0x24BDAC7A8](v5);
  v56 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25B20);
  MEMORY[0x24BDAC7A8](v55);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for HeaderViewModifier.ScrollView(0);
  v10 = (_QWORD *)((char *)v2 + *(int *)(v9 + 28));
  v11 = *(int *)(v9 + 40);
  v12 = v9;
  v53 = v9;
  v13 = (char *)v3 + v11;
  v14 = *(_QWORD *)v13;
  v15 = v13[8];
  sub_23DF89F20(*(_QWORD *)v13, v15);
  v16 = sub_23DF9CB84(v14, v15);
  sub_23DF8A078(v14, v15);
  v17 = (char *)v3 + *(int *)(v12 + 36);
  v18 = *((_OWORD *)v17 + 3);
  v69[2] = *((_OWORD *)v17 + 2);
  v69[3] = v18;
  v70 = *((_WORD *)v17 + 32);
  v19 = *((_OWORD *)v17 + 1);
  v69[0] = *(_OWORD *)v17;
  v69[1] = v19;
  sub_23DF98EC8((uint64_t)v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v63);
  sub_23DF98EC8((uint64_t)v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v62 = BYTE1(v63);
  v52 = v10;
  v54 = sub_23DFE88E8(v10, &v62, v16);
  sub_23DF89F20(v14, v15);
  v20 = sub_23DF9CB84(v14, v15);
  sub_23DF8A078(v14, v15);
  sub_23DF98EC8((uint64_t)v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v63);
  sub_23DF98EC8((uint64_t)v69, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v62 = BYTE1(v63);
  sub_23DFE8AA0(v10, &v62, v20);
  sub_23E0C3840((uint64_t)v3);
  v22 = v21;
  v23 = sub_23E136FCC();
  v25 = v24;
  sub_23E0C39BC((uint64_t)v3);
  v27 = -v26;
  sub_23E136FE4();
  sub_23E135E5C();
  v28 = v63;
  LOBYTE(v14) = v64;
  v29 = v65;
  v30 = v66;
  v31 = v67;
  v32 = v68;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25B28);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v8, v57, v33);
  v34 = &v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D25B30) + 36)];
  *(_QWORD *)v34 = v23;
  *((_QWORD *)v34 + 1) = v25;
  *((_QWORD *)v34 + 2) = 0;
  *((double *)v34 + 3) = v27;
  *((_QWORD *)v34 + 4) = v28;
  v34[40] = v14;
  *((_QWORD *)v34 + 6) = v29;
  v34[56] = v30;
  *((_QWORD *)v34 + 8) = v31;
  *((_QWORD *)v34 + 9) = v32;
  v35 = sub_23E136378();
  v36 = v55;
  v37 = &v8[*(int *)(v55 + 36)];
  v38 = *v3;
  v39 = v3[3];
  v40 = v56;
  sub_23DF73E10((uint64_t)v52, v56, type metadata accessor for AccessoryControlsHeaderConfig);
  LOBYTE(v14) = *((_BYTE *)v3 + *(int *)(v53 + 32));
  KeyPath = swift_getKeyPath();
  *(_QWORD *)v37 = v38;
  *((_QWORD *)v37 + 1) = v39;
  v42 = (int *)type metadata accessor for HeaderView(0);
  sub_23DF89384(v40, (uint64_t)&v37[v42[6]], type metadata accessor for AccessoryControlsHeaderConfig);
  v37[v42[7]] = v14;
  v43 = &v37[v42[8]];
  *(_QWORD *)v43 = KeyPath;
  *(_OWORD *)(v43 + 8) = 0u;
  *(_OWORD *)(v43 + 24) = 0u;
  *(_OWORD *)(v43 + 40) = 0u;
  *(_OWORD *)(v43 + 50) = 0u;
  v44 = sub_23E135E20();
  LOBYTE(KeyPath) = MEMORY[0x24264B050]((2 * v44));
  v45 = sub_23E13600C();
  v46 = &v37[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D25B38) + 36)];
  *(_QWORD *)v46 = v45;
  *((_QWORD *)v46 + 1) = v22;
  v46[16] = 0;
  v46[17] = KeyPath;
  *((_QWORD *)v46 + 3) = v35;
  v47 = sub_23E136738();
  v48 = *(_QWORD *)&v54 ^ 0x8000000000000000;
  v49 = v58;
  sub_23E136510();
  v50 = sub_23E0C4238();
  MEMORY[0x24264B308](v47, v48, 0, v49, v36, v50);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v49, v61);
  return sub_23DF89C7C((uint64_t)v8, &qword_256D25B20);
}

uint64_t sub_23E0C3840(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  _OWORD v11[4];
  __int16 v12;

  v2 = (int *)type metadata accessor for HeaderViewModifier.ScrollView(0);
  v3 = a1 + v2[9];
  v4 = *(_OWORD *)(v3 + 48);
  v11[2] = *(_OWORD *)(v3 + 32);
  v11[3] = v4;
  v12 = *(_WORD *)(v3 + 64);
  v5 = *(_OWORD *)(v3 + 16);
  v11[0] = *(_OWORD *)v3;
  v11[1] = v5;
  sub_23DF98EC8((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v10);
  result = sub_23DF98EC8((uint64_t)v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (BYTE1(v10) != 1)
  {
    if (*(_QWORD *)(a1 + v2[11]))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_23E135C7C();
      swift_release();
      swift_release();
      result = swift_release();
      if (v10 <= 0.0)
      {
        v7 = a1 + v2[10];
        v8 = *(_QWORD *)v7;
        v9 = *(_BYTE *)(v7 + 8);
        sub_23DF89F20(*(_QWORD *)v7, v9);
        sub_23DF9CB84(v8, v9);
        return sub_23DF8A078(v8, v9);
      }
    }
    else
    {
      type metadata accessor for AnimationModel();
      sub_23E056018();
      result = sub_23E1360C0();
      __break(1u);
    }
  }
  return result;
}

void sub_23E0C39BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _BYTE v11[72];
  _OWORD v12[4];
  __int16 v13;

  v2 = type metadata accessor for HeaderViewModifier.ScrollView(0);
  v3 = a1 + *(int *)(v2 + 36);
  v4 = *(_OWORD *)(v3 + 48);
  v12[2] = *(_OWORD *)(v3 + 32);
  v12[3] = v4;
  v13 = *(_WORD *)(v3 + 64);
  v5 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v5;
  sub_23DF98EC8((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v11);
  sub_23DF98EC8((uint64_t)v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v11[1] != 1)
  {
    v6 = objc_msgSend((id)objc_opt_self(), sel_currentDevice);
    v7 = objc_msgSend(v6, sel_userInterfaceIdiom);

    if (v7)
    {
      v8 = a1 + *(int *)(v2 + 40);
      v9 = *(_QWORD *)v8;
      v10 = *(_BYTE *)(v8 + 8);
      sub_23DF89F20(*(_QWORD *)v8, v10);
      sub_23DF9CB84(v9, v10);
      sub_23DF8A078(v9, v10);
    }
  }
}

uint64_t sub_23E0C3AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  double v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  uint64_t v23;
  uint64_t (*v24)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  uint64_t (*v25)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (**v29)@<X0>(uint64_t@<X0>, uint64_t *@<X8>);
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  char v35;
  unsigned __int8 v36;
  _OWORD v37[4];
  __int16 v38;

  v3 = v2;
  v31[1] = a1;
  v33 = a2;
  v4 = (int *)type metadata accessor for HeaderViewModifier.ScrollViewVStack(0);
  v32 = *((_QWORD *)v4 - 1);
  v5 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D230A0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)(v2 + v4[6]);
  v10 = v2 + v4[8];
  v11 = *(_QWORD *)v10;
  v12 = *(_BYTE *)(v10 + 8);
  sub_23DF89F20(*(_QWORD *)v10, v12);
  v13 = sub_23DF9CB84(v11, v12);
  sub_23DF8A078(v11, v12);
  v14 = v2 + v4[7];
  v15 = *(_OWORD *)(v14 + 48);
  v37[2] = *(_OWORD *)(v14 + 32);
  v37[3] = v15;
  v38 = *(_WORD *)(v14 + 64);
  v16 = *(_OWORD *)(v14 + 16);
  v37[0] = *(_OWORD *)v14;
  v37[1] = v16;
  sub_23DF98EC8((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v35);
  sub_23DF98EC8((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v34 = v36;
  v17 = sub_23DFE88E8(v9, &v34, v13);
  sub_23DF89F20(v11, v12);
  v18 = sub_23DF9CB84(v11, v12);
  sub_23DF8A078(v11, v12);
  sub_23DF98EC8((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v35);
  sub_23DF98EC8((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v34 = v36;
  v19 = sub_23DFE8AA0(v9, &v34, v18);
  sub_23DF98EC8((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v35);
  sub_23DF98EC8((uint64_t)v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if (v36 == 1)
  {
    v20 = 0.0 - v17;
  }
  else
  {
    sub_23DF89F20(v11, v12);
    v21 = sub_23DF9CB84(v11, v12);
    sub_23DF8A078(v11, v12);
    v20 = 0.0 - v19 + v21;
  }
  v22 = v20 + *(double *)(v2 + 8);
  sub_23E136FE4();
  sub_23E04CF60(0.0, 1, 0.0, 1, INFINITY, 0, v22, 0, (uint64_t)v8, 0.0, 1, INFINITY, 0);
  v23 = sub_23E136FE4();
  v25 = v24;
  sub_23DF73E10(v3, (uint64_t)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeaderViewModifier.ScrollViewVStack);
  v26 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v27 = swift_allocObject();
  sub_23DF89384((uint64_t)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v27 + v26, type metadata accessor for HeaderViewModifier.ScrollViewVStack);
  v28 = v33;
  sub_23E0C43B0((uint64_t)v8, v33);
  v29 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))(v28
                                                                   + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D25B70)
                                                                            + 36));
  *v29 = sub_23E0C4364;
  v29[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v27;
  v29[2] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v23;
  v29[3] = v25;
  return sub_23DF89C7C((uint64_t)v8, &qword_256D230A0);
}

uint64_t sub_23E0C3E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD v38[5];
  _BYTE v39[48];

  v37 = sub_23E135EA4();
  v34 = *(_QWORD *)(v37 - 8);
  v6 = *(_QWORD *)(v34 + 64);
  MEMORY[0x24BDAC7A8](v37);
  v36 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for HeaderViewModifier.ScrollViewVStack(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E1364A4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_23E136C30();
  sub_23E1365AC();
  v35 = a1;
  sub_23E135E98();
  v15 = v38[0];
  v16 = v38[1];
  v17 = v38[2];
  v18 = v38[3];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_23E0C43F8((uint64_t)v38, (uint64_t)v39);
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  if ((v39[32] & 1) == 0)
  {
    v19 = v17;
    v20 = v18;
    v21 = v15;
    v22 = v16;
  }
  sub_23DF73E10(a2, (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeaderViewModifier.ScrollViewVStack);
  v23 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v32 = swift_allocObject();
  sub_23DF89384((uint64_t)v10, v32 + v23, type metadata accessor for HeaderViewModifier.ScrollViewVStack);
  sub_23DF73E10(a2, (uint64_t)v10, type metadata accessor for HeaderViewModifier.ScrollViewVStack);
  v24 = v34;
  v25 = v36;
  v26 = v37;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v35, v37);
  v27 = (v23 + v9 + *(unsigned __int8 *)(v24 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v28 = swift_allocObject();
  sub_23DF89384((uint64_t)v10, v28 + v23, type metadata accessor for HeaderViewModifier.ScrollViewVStack);
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v24 + 32))(v28 + v27, v25, v26);
  *a3 = v33;
  a3[1] = v21;
  a3[2] = v22;
  a3[3] = v19;
  a3[4] = v20;
  v30 = v32;
  a3[5] = (uint64_t)sub_23E0C45C4;
  a3[6] = v30;
  a3[7] = (uint64_t)sub_23E0C47E0;
  a3[8] = v28;
  a3[9] = 0;
  a3[10] = 0;
  return result;
}

uint64_t sub_23E0C40E4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D25B80);
  return sub_23E136E70();
}

uint64_t sub_23E0C4138(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[4];
  _BYTE v11[40];
  _BYTE v12[8];
  double v13;
  char v14;

  v2 = sub_23E1364A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1365AC();
  sub_23E135E98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_23E0C43F8((uint64_t)v11, (uint64_t)v12);
  v6 = v13;
  if (v14)
    v6 = 0.0;
  v7 = a1[3];
  v8 = a1[4];
  v10[1] = a1[2];
  v10[2] = v7;
  v10[3] = v8;
  *(double *)v10 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D25B80);
  return sub_23E136E70();
}

uint64_t sub_23E0C4220()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E0C4238()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25B40;
  if (!qword_256D25B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25B20);
    v2[0] = sub_23E0C42BC();
    v2[1] = sub_23DF89B88(&qword_256D25B68, &qword_256D25B38, MEMORY[0x24BDEEC88]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25B40);
  }
  return result;
}

unint64_t sub_23E0C42BC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25B48;
  if (!qword_256D25B48)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25B30);
    v2[0] = sub_23DF89B88(&qword_256D25B50, &qword_256D25B28, MEMORY[0x24BDEFB78]);
    v2[1] = sub_23DF89B88(&qword_256D25B58, &qword_256D25B60, MEMORY[0x24BDEF828]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25B48);
  }
  return result;
}

uint64_t sub_23E0C4364@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeaderViewModifier.ScrollViewVStack(0) - 8) + 80);
  return sub_23E0C3E4C(a1, v2 + ((v5 + 16) & ~v5), a2);
}

uint64_t sub_23E0C43B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D230A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0C43F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_11()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (int *)type metadata accessor for HeaderViewModifier.ScrollViewVStack(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  v4 = v3 + v1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v6 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v9 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
  }
  v10 = v3 + v1[7];
  sub_23DF985F0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64), *(_BYTE *)(v10 + 65));
  sub_23DF8A078(*(_QWORD *)(v3 + v1[8]), *(_BYTE *)(v3 + v1[8] + 8));
  return swift_deallocObject();
}

uint64_t sub_23E0C45C4()
{
  type metadata accessor for HeaderViewModifier.ScrollViewVStack(0);
  return sub_23E0C40E4();
}

uint64_t sub_23E0C4600()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v1 = (int *)type metadata accessor for HeaderViewModifier.ScrollViewVStack(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v18 = *(_QWORD *)(v2 + 64);
  v19 = sub_23E135EA4();
  v4 = *(_QWORD *)(v19 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = v0 + v3;
  swift_release();
  swift_release();
  v7 = v0 + v3 + v1[6];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for AccessoryControlsHeaderConfig(0) + 24);
  v9 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v10 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  v11 = v18;
  if (!v10)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v13 = v8 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v14 = sub_23E135910();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    swift_release();
    v11 = v18;
  }
  v15 = v6 + v1[7];
  v16 = (v3 + v11 + v5) & ~v5;
  sub_23DF985F0(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), *(_QWORD *)(v15 + 32), *(_QWORD *)(v15 + 40), *(_QWORD *)(v15 + 48), *(_QWORD *)(v15 + 56), *(_BYTE *)(v15 + 64), *(_BYTE *)(v15 + 65));
  sub_23DF8A078(*(_QWORD *)(v6 + v1[8]), *(_BYTE *)(v6 + v1[8] + 8));
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v16, v19);
  return swift_deallocObject();
}

uint64_t sub_23E0C47E0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = type metadata accessor for HeaderViewModifier.ScrollViewVStack(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  sub_23E135EA4();
  return sub_23E0C4138((_QWORD *)(v0 + v2));
}

uint64_t sub_23E0C4840()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25B20);
  sub_23E0C4238();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E0C4890()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25B88;
  if (!qword_256D25B88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D25B70);
    v2[0] = sub_23E0C4914();
    v2[1] = sub_23DF89B88(&qword_256D25BA0, &qword_256D25BA8, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25B88);
  }
  return result;
}

unint64_t sub_23E0C4914()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D25B90;
  if (!qword_256D25B90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D230A0);
    v2[0] = sub_23DF89B88(&qword_256D25B98, &qword_256D23098, MEMORY[0x24BDEFB78]);
    v2[1] = MEMORY[0x24BDEDBB8];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D25B90);
  }
  return result;
}

uint64_t sub_23E0C4998@<X0>(uint64_t *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v41 = type metadata accessor for Device.Control.Kind(0);
  MEMORY[0x24BDAC7A8](v41);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v42);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for Device.Control(0);
  v14 = MEMORY[0x24BDAC7A8](v43);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v32 - v15;
  v17 = type metadata accessor for Device.ControlGroup(0);
  result = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a1;
  v23 = a1[1];
  v24 = a1[2];
  v25 = a1[3];
  v26 = a1[4];
  v27 = *a2;
  v28 = v24;
  if (*(_QWORD *)(v24 + 16) == 3)
  {
    v38 = v27;
    v39 = v25;
    v36 = v22;
    v37 = a3;
    v29 = v26;
    v30 = v24 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v40 = *(_QWORD *)(v19 + 72);
    v35 = v23;
    swift_bridgeObjectRetain();
    v34 = v28;
    swift_bridgeObjectRetain_n();
    v33 = v29;
    swift_bridgeObjectRetain();
    sub_23DF73E10(v30, (uint64_t)v21, type metadata accessor for Device.ControlGroup);
    sub_23DF73E10((uint64_t)v21, (uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23DF89384((uint64_t)v13, (uint64_t)v16, type metadata accessor for Device.Control);
      sub_23DF73E10((uint64_t)&v16[*(int *)(v43 + 20)], (uint64_t)v11, type metadata accessor for Device.Control.Kind);
      v31 = (char *)&loc_23E0C4C34 + 4 * byte_23E141B90[swift_getEnumCaseMultiPayload()];
      __asm { BR              X9 }
    }
    sub_23DF73E54((uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
    v22 = v36;
    a3 = v37;
    v28 = v34;
    v23 = v35;
    v26 = v33;
    sub_23DF73E54((uint64_t)v21, type metadata accessor for Device.ControlGroup);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    result = swift_bridgeObjectRelease();
    v25 = v39;
    LOBYTE(v27) = v38;
  }
  *(double *)a3 = a4;
  *(double *)(a3 + 8) = a5;
  *(_QWORD *)(a3 + 16) = v22;
  *(_QWORD *)(a3 + 24) = v23;
  *(_QWORD *)(a3 + 32) = v28;
  *(_QWORD *)(a3 + 40) = v25;
  *(_QWORD *)(a3 + 48) = v26;
  *(_BYTE *)(a3 + 56) = v27;
  *(_QWORD *)(a3 + 64) = 4;
  return result;
}

_QWORD *sub_23E0C4EF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v37[6];

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD **)(v1 + 16);
  if (v2 >= (uint64_t)v3)
  {
    v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8) + 80);
    v8 = v1 + ((v10 + 32) & ~v10);
    swift_bridgeObjectRetain();
    v6 = v1;
    v9 = v3;
    if (v3)
      goto LABEL_11;
  }
  else
  {
    if (v2 < 0)
      goto LABEL_44;
    sub_23E137620();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain_n();
    v4 = swift_dynamicCastClass();
    if (!v4)
    {
      swift_bridgeObjectRelease();
      v4 = MEMORY[0x24BEE4AF8];
    }
    v5 = *(_QWORD *)(v4 + 16);
    swift_release();
    if (v5 != v2)
      goto LABEL_45;
    v6 = swift_dynamicCastClass();
    if (!v6)
    {
      swift_bridgeObjectRelease();
      v6 = MEMORY[0x24BEE4AF8];
    }
    while (1)
    {
      swift_bridgeObjectRelease();
      v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8) + 80);
      v8 = v6 + ((v7 + 32) & ~v7);
      v9 = *(_QWORD **)(v6 + 16);
      if (!v9)
        break;
LABEL_11:
      v11 = 0;
      v12 = (2 * (_QWORD)v9) | 1;
      v32 = v1;
      v33 = (char *)v3 - 1;
      v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v31 = v2;
      while (1)
      {
        sub_23E0C5320(v6, v8, v11, v12, (uint64_t)&v36);
        sub_23E0C96DC((uint64_t)&v36, (uint64_t)v37);
        v13 = v37[0];
        if (!v37[0])
        {
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          return (_QWORD *)MEMORY[0x24BEE4AF8];
        }
        v14 = v37[3];
        v35 = v37[4];
        v15 = *(_QWORD *)(v37[0] + 16);
        if (v15)
        {
          sub_23E057168(&v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E0C9724);
          swift_bridgeObjectRetain();
          v34 = v14;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_23E007CE4(0, v3[2] + 1, 1, v3);
          v16 = 0;
          v17 = v3[2];
          v18 = 2 * v17;
          do
          {
            v19 = *(_QWORD *)(v13 + v16 * 8 + 40);
            v20 = v3[3];
            swift_bridgeObjectRetain();
            if (v17 >= v20 >> 1)
              v3 = sub_23E007CE4((_QWORD *)(v20 > 1), v17 + 1, 1, v3);
            v3[2] = v17 + 1;
            v21 = &v3[v18 + v16];
            v21[4] = v17;
            v21[5] = v19;
            v16 += 2;
            ++v17;
            --v15;
          }
          while (v15);
          swift_bridgeObjectRelease();
          v2 = v31;
          v1 = v32;
          v14 = v34;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
        }
        v11 = (char *)(v35 >> 1);
        v22 = (v35 >> 1) - v14;
        if (__OFSUB__(v35 >> 1, v14))
          break;
        v23 = __OFADD__(v11, v22);
        v24 = &v11[v22];
        if (v23)
          goto LABEL_40;
        v23 = __OFSUB__(v24, 1);
        v25 = (uint64_t)(v24 - 1);
        if (v23)
          goto LABEL_41;
        if ((uint64_t)v33 >= v25)
          v26 = v25;
        else
          v26 = (uint64_t)v33;
        swift_unknownObjectRetain();
        swift_unknownObjectRelease();
        sub_23E057168(&v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_23E0C9750);
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        if (v26 < (uint64_t)v11)
        {
          type metadata accessor for Device.ControlGroup(0);
LABEL_37:
          swift_unknownObjectRelease();
          return v3;
        }
        v27 = *(_QWORD *)(v1 + 16);
        if (v27 < (unint64_t)v11 || v27 <= v26)
          goto LABEL_42;
        if (v26 < -1)
          goto LABEL_43;
        v28 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8) + 80);
        v8 = v1 + ((v28 + 32) & ~v28);
        v12 = 2 * v26 + 3;
        swift_bridgeObjectRetain();
        v6 = v1;
        if (v11 == (char *)(v12 >> 1))
          goto LABEL_37;
      }
      __break(1u);
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      swift_bridgeObjectRelease();
      v30 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Device.ControlGroup(0) - 8) + 80);
      v6 = sub_23E12E5BC(v1, v1 + ((v30 + 32) & ~v30), 0, (2 * v2) | 1);
    }
  }
  swift_unknownObjectRelease();
  return (_QWORD *)MEMORY[0x24BEE4AF8];
}

uint64_t sub_23E0C5320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t result;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  char *v69;
  unint64_t v70;
  double v71;
  double v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int EnumCaseMultiPayload;
  uint64_t v93;
  int64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 *v101;
  unsigned int v102;
  unsigned int v103;
  char v104;
  char v105;
  char v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  int64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 *v118;
  unsigned int v119;
  unsigned int v120;
  char v121;
  char v122;
  char v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 *v130;
  unsigned int v131;
  unsigned int v132;
  char v133;
  char v134;
  char v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  double v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  double v151;
  double v152;
  double v153;
  int v154;
  double v155;
  double v156;
  double v157;
  double v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  _QWORD *v171;
  uint64_t v172;
  unint64_t v173;
  uint64_t v174;
  int v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unsigned int v182;
  char v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  unint64_t v188;
  double v189;
  uint64_t v190;
  double v191;
  int *v192;
  uint64_t v193;
  uint64_t v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  unint64_t v202;
  unint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  int64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  _QWORD *v244;
  char *v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  __int128 v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  _QWORD *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  unint64_t v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *v277;
  uint64_t *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  _QWORD *v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  char *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  __int128 v294;
  uint64_t v295;
  uint64_t v296;
  double v297;
  double v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char v304;
  uint64_t v305;
  uint64_t v306;
  _QWORD v307[5];

  v245 = a3;
  v262 = a2;
  v229 = a1;
  v282 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FEE0);
  v8 = MEMORY[0x24BDAC7A8](v282);
  v279 = (uint64_t)&v228 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v284 = (uint64_t)&v228 - v10;
  *(_QWORD *)&v294 = type metadata accessor for DisplayControl(0);
  v293 = *(_QWORD *)(v294 - 8);
  v11 = MEMORY[0x24BDAC7A8](v294);
  v291 = (uint64_t)&v228 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v285 = (char *)&v228 - v14;
  v15 = MEMORY[0x24BDAC7A8](v13);
  v253 = (uint64_t)&v228 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v290 = (char *)&v228 - v18;
  MEMORY[0x24BDAC7A8](v17);
  v292 = (uint64_t)&v228 - v19;
  v295 = type metadata accessor for Device.Control(0);
  v251 = *(_QWORD *)(v295 - 8);
  v20 = MEMORY[0x24BDAC7A8](v295);
  v289 = (uint64_t)&v228 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v288 = (uint64_t)&v228 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v287 = (uint64_t)&v228 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v286 = (uint64_t)&v228 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v250 = (uint64_t)&v228 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v249 = (uint64_t)&v228 - v30;
  v257 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v257);
  v32 = (char *)&v228 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  v33 = MEMORY[0x24BDAC7A8](v269);
  v278 = (uint64_t *)((char *)&v228 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v35 = MEMORY[0x24BDAC7A8](v33);
  v277 = (uint64_t *)((char *)&v228 - v36);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v276 = (uint64_t)&v228 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v248 = (uint64_t)&v228 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v256 = (uint64_t *)((char *)&v228 - v41);
  v258 = type metadata accessor for Device.ControlGroup(0);
  v259 = *(_QWORD *)(v258 - 8);
  v42 = MEMORY[0x24BDAC7A8](v258);
  v228 = (uint64_t)&v228 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x24BDAC7A8](v42);
  v241 = (uint64_t)&v228 - v45;
  v46 = MEMORY[0x24BDAC7A8](v44);
  v240 = (uint64_t)&v228 - v47;
  v48 = MEMORY[0x24BDAC7A8](v46);
  v239 = (char *)&v228 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v273 = (uint64_t)&v228 - v51;
  v52 = MEMORY[0x24BDAC7A8](v50);
  v272 = (uint64_t)&v228 - v53;
  MEMORY[0x24BDAC7A8](v52);
  v271 = (uint64_t)&v228 - v54;
  v281 = type metadata accessor for DisplayControlGroup(0);
  v266 = *(_QWORD *)(v281 - 8);
  v55 = MEMORY[0x24BDAC7A8](v281);
  v238 = (char *)&v228 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = MEMORY[0x24BDAC7A8](v55);
  v246 = (uint64_t)&v228 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v275 = (uint64_t)&v228 - v60;
  v61 = MEMORY[0x24BDAC7A8](v59);
  v270 = (char *)&v228 - v62;
  result = MEMORY[0x24BDAC7A8](v61);
  v65 = (uint64_t)&v228 - v64;
  v66 = 0;
  v67 = 0;
  v68 = 0;
  v69 = 0;
  v70 = 0;
  v230 = a4;
  v263 = (char *)(a4 >> 1);
  if ((char *)(a4 >> 1) == v245)
    goto LABEL_184;
  v71 = *(double *)v5;
  v72 = *(double *)(v5 + 8);
  v236 = *(_QWORD *)(v5 + 16);
  v235 = *(_QWORD *)(v5 + 24);
  v234 = *(_QWORD *)(v5 + 32);
  v233 = *(_QWORD *)(v5 + 40);
  v232 = *(_QWORD *)(v5 + 48);
  v267 = *(unsigned __int8 *)(v5 + 56);
  v231 = *(_QWORD *)(v5 + 64);
  if (qword_256D1D3B8 != -1)
    goto LABEL_191;
LABEL_3:
  v244 = off_256D23798;
  v73 = *((_QWORD *)off_256D23798 + 2);
  v74 = (uint64_t)v245;
  v75 = v263 - v245;
  v76 = __OFSUB__(v263, v245);
  v283 = (_QWORD *)a5;
  v77 = v292;
  v78 = (_QWORD *)v269;
  v242 = v73;
  if (!v73)
  {
    if (!v76)
    {
      if (v75 == 1)
        goto LABEL_157;
      goto LABEL_179;
    }
    goto LABEL_193;
  }
  if (v76)
  {
    __break(1u);
LABEL_193:
    __break(1u);
LABEL_194:
    __break(1u);
LABEL_195:
    swift_bridgeObjectRelease();
    v208 = sub_23E12E5A8(v65, v74, 0, v67 | 1);
    goto LABEL_164;
  }
  v243 = (char *)(v244 + 4);
  v237 = v75 & ~(v75 >> 63);
  swift_bridgeObjectRetain();
  v79 = 0;
  v255 = v32;
  v252 = xmmword_23E138050;
  v80 = v275;
  v254 = v65;
  v265 = v75;
  do
  {
    if (v79 >= v244[2])
      goto LABEL_188;
    v247 = v79;
    v67 = v243[v79];
    if (v75)
    {
      v297 = MEMORY[0x24BEE4AF8];
      sub_23E09E2FC(0, v237, 0);
      v75 = v265;
      if (v265 < 0)
        goto LABEL_189;
      v81 = 0;
      v82 = (uint64_t)v245;
      while (1)
      {
        v32 = (char *)(v81 + 1);
        if (__OFADD__(v81, 1))
        {
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          swift_once();
          goto LABEL_3;
        }
        if (v82 >= (uint64_t)v263 || v81 >= v75)
          goto LABEL_186;
        v83 = *(_QWORD *)(v259 + 72);
        v280 = v82;
        v84 = v271;
        sub_23DF73E10(v262 + v83 * v82, v271, type metadata accessor for Device.ControlGroup);
        v85 = v84;
        v86 = v272;
        sub_23DF73E10(v85, v272, type metadata accessor for Device.ControlGroup);
        v87 = (uint64_t)v270;
        sub_23DF73E10(v86, (uint64_t)v270, type metadata accessor for Device.ControlGroup);
        *(_BYTE *)(v87 + *(int *)(v281 + 20)) = v67;
        v88 = v86;
        v89 = v273;
        sub_23DF73E10(v88, v273, type metadata accessor for Device.ControlGroup);
        v90 = v89;
        v91 = (uint64_t)v255;
        sub_23DF73E10(v90, (uint64_t)v255, type metadata accessor for Device.ControlGroup.LayoutType);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v274 = v32;
        if (!EnumCaseMultiPayload)
          break;
        if (EnumCaseMultiPayload == 1)
        {
          v93 = *(_QWORD *)v91;
          v94 = *(_QWORD *)(*(_QWORD *)v91 + 16);
          if (v94)
          {
            v307[0] = MEMORY[0x24BEE4AF8];
            sub_23E09E328(0, v94, 0);
            v95 = (*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80);
            v268 = v93;
            v96 = v93 + v95;
            v97 = *(_QWORD *)(v251 + 72);
            v98 = v307[0];
            do
            {
              v99 = v286;
              sub_23DF73E10(v96, v286, type metadata accessor for Device.Control);
              v100 = v287;
              sub_23DF73E10(v99, v287, type metadata accessor for Device.Control);
              v101 = (unsigned __int8 *)(v100 + *(int *)(v295 + 36));
              v102 = *v101;
              v103 = v101[1];
              if (v67 <= v102)
                v104 = v102;
              else
                v104 = v67;
              if (v102 == 4)
                v105 = v67;
              else
                v105 = v104;
              if (v103 >= v67 || v103 == 4)
                v107 = v105;
              else
                v107 = v103;
              sub_23DF89384(v100, v77, type metadata accessor for Device.Control);
              *(_BYTE *)(v77 + *(int *)(v294 + 20)) = v107;
              sub_23DF73E54(v99, type metadata accessor for Device.Control);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_23E09E328(0, *(_QWORD *)(v98 + 16) + 1, 1);
                v98 = v307[0];
              }
              v109 = *(_QWORD *)(v98 + 16);
              v108 = *(_QWORD *)(v98 + 24);
              if (v109 >= v108 >> 1)
              {
                sub_23E09E328(v108 > 1, v109 + 1, 1);
                v98 = v307[0];
              }
              *(_QWORD *)(v98 + 16) = v109 + 1;
              v77 = v292;
              sub_23DF89384(v292, v98+ ((*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80))+ *(_QWORD *)(v293 + 72) * v109, type metadata accessor for DisplayControl);
              v96 += v97;
              --v94;
            }
            while (v94);
          }
          else
          {
            v98 = MEMORY[0x24BEE4AF8];
          }
LABEL_74:
          sub_23DF73E54(v273, type metadata accessor for Device.ControlGroup);
          swift_bridgeObjectRelease();
          v140 = v256;
          *v256 = v98;
          a5 = v269;
          swift_storeEnumTagMultiPayload();
          goto LABEL_75;
        }
        v128 = v249;
        sub_23DF89384(v91, v249, type metadata accessor for Device.Control);
        v129 = v250;
        sub_23DF73E10(v128, v250, type metadata accessor for Device.Control);
        v130 = (unsigned __int8 *)(v129 + *(int *)(v295 + 36));
        v131 = *v130;
        v132 = v130[1];
        if (v67 <= v131)
          v133 = v131;
        else
          v133 = v67;
        if (v131 == 4)
          v134 = v67;
        else
          v134 = v133;
        if (v132 >= v67 || v132 == 4)
          v136 = v134;
        else
          v136 = v132;
        v137 = v129;
        v138 = v248;
        sub_23DF89384(v137, v248, type metadata accessor for Device.Control);
        *(_BYTE *)(v138 + *(int *)(v294 + 20)) = v136;
        sub_23DF73E54(v273, type metadata accessor for Device.ControlGroup);
        sub_23DF73E54(v128, type metadata accessor for Device.Control);
        a5 = (uint64_t)v78;
        swift_storeEnumTagMultiPayload();
        v139 = v138;
        v140 = v256;
        sub_23DF89384(v139, (uint64_t)v256, type metadata accessor for DisplayControlGroup.LayoutType);
LABEL_75:
        v141 = v281;
        v32 = v270;
        sub_23DF89384((uint64_t)v140, (uint64_t)&v270[*(int *)(v281 + 24)], type metadata accessor for DisplayControlGroup.LayoutType);
        v142 = v272;
        v143 = (uint64_t *)(v272 + *(int *)(v258 + 20));
        v145 = *v143;
        v144 = v143[1];
        swift_bridgeObjectRetain();
        sub_23DF73E54(v142, type metadata accessor for Device.ControlGroup);
        v146 = &v32[*(int *)(v141 + 28)];
        *(_QWORD *)v146 = v145;
        *((_QWORD *)v146 + 1) = v144;
        v65 = v254;
        sub_23DF89384((uint64_t)v32, v254, type metadata accessor for DisplayControlGroup);
        sub_23DF73E54(v271, type metadata accessor for Device.ControlGroup);
        v147 = v297;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E09E2FC(0, *(_QWORD *)(*(_QWORD *)&v147 + 16) + 1, 1);
          v147 = v297;
        }
        v75 = v265;
        v149 = *(_QWORD *)(*(_QWORD *)&v147 + 16);
        v148 = *(_QWORD *)(*(_QWORD *)&v147 + 24);
        if (v149 >= v148 >> 1)
        {
          sub_23E09E2FC(v148 > 1, v149 + 1, 1);
          v75 = v265;
          v147 = v297;
        }
        *(_QWORD *)(*(_QWORD *)&v147 + 16) = v149 + 1;
        sub_23DF89384(v65, *(_QWORD *)&v147+ ((*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80))+ *(_QWORD *)(v266 + 72) * v149, type metadata accessor for DisplayControlGroup);
        v82 = v280 + 1;
        if (__OFADD__(v280, 1))
          goto LABEL_187;
        v81 = (uint64_t)v274;
        v80 = v275;
        v78 = (_QWORD *)a5;
        a5 = (uint64_t)v283;
        if (v274 == (char *)v75)
          goto LABEL_83;
      }
      v110 = *(_QWORD *)v91;
      v111 = *(_QWORD *)(*(_QWORD *)v91 + 16);
      if (v111)
      {
        v307[0] = MEMORY[0x24BEE4AF8];
        sub_23E09E328(0, v111, 0);
        v112 = (*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80);
        v268 = v110;
        v113 = v110 + v112;
        v114 = *(_QWORD *)(v251 + 72);
        v98 = v307[0];
        v115 = (uint64_t)v290;
        do
        {
          v116 = v288;
          sub_23DF73E10(v113, v288, type metadata accessor for Device.Control);
          v117 = v289;
          sub_23DF73E10(v116, v289, type metadata accessor for Device.Control);
          v118 = (unsigned __int8 *)(v117 + *(int *)(v295 + 36));
          v119 = *v118;
          v120 = v118[1];
          if (v67 <= v119)
            v121 = v119;
          else
            v121 = v67;
          if (v119 == 4)
            v122 = v67;
          else
            v122 = v121;
          if (v120 >= v67 || v120 == 4)
            v124 = v122;
          else
            v124 = v120;
          sub_23DF89384(v117, v115, type metadata accessor for Device.Control);
          *(_BYTE *)(v115 + *(int *)(v294 + 20)) = v124;
          sub_23DF73E54(v116, type metadata accessor for Device.Control);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E09E328(0, *(_QWORD *)(v98 + 16) + 1, 1);
            v98 = v307[0];
          }
          v126 = *(_QWORD *)(v98 + 16);
          v125 = *(_QWORD *)(v98 + 24);
          v127 = (uint64_t)v290;
          if (v126 >= v125 >> 1)
          {
            sub_23E09E328(v125 > 1, v126 + 1, 1);
            v127 = (uint64_t)v290;
            v98 = v307[0];
          }
          *(_QWORD *)(v98 + 16) = v126 + 1;
          v115 = v127;
          sub_23DF89384(v127, v98+ ((*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80))+ *(_QWORD *)(v293 + 72) * v126, type metadata accessor for DisplayControl);
          v113 += v114;
          --v111;
        }
        while (v111);
        v77 = v292;
      }
      else
      {
        v98 = MEMORY[0x24BEE4AF8];
      }
      goto LABEL_74;
    }
    v147 = MEMORY[0x24BEE4AF8];
LABEL_83:
    v264 = *(_QWORD *)(*(_QWORD *)&v147 + 16);
    if (!v264)
    {
      swift_bridgeObjectRelease();
      v152 = 0.0;
      v151 = 0.0;
      if ((v267 & 1) != 0)
        goto LABEL_135;
LABEL_139:
      if (v152 > v71 || v152 == 0.0)
        goto LABEL_9;
LABEL_141:
      swift_bridgeObjectRelease();
      v190 = v75;
      v191 = MEMORY[0x24BEE4AF8];
      if (v190)
      {
        v297 = MEMORY[0x24BEE4AF8];
        sub_23E09E2FC(0, v237, 0);
        if (v190 < 0)
        {
          __break(1u);
          JUMPOUT(0x23E0C72A4);
        }
        a5 = (uint64_t)v245;
        v192 = (int *)v263;
        if ((uint64_t)v245 > (uint64_t)v263)
          v192 = (int *)v245;
        v295 = (uint64_t)v192;
        v65 = (uint64_t)type metadata accessor for Device.ControlGroup;
        v193 = (uint64_t)v239;
        v194 = (uint64_t)v238;
        v195 = (int *)v281;
        while (v295 != a5)
        {
          sub_23DF73E10(v262 + *(_QWORD *)(v259 + 72) * a5, v193, type metadata accessor for Device.ControlGroup);
          v196 = v240;
          sub_23DF73E10(v193, v240, type metadata accessor for Device.ControlGroup);
          sub_23DF73E10(v196, v194, type metadata accessor for Device.ControlGroup);
          *(_BYTE *)(v194 + v195[5]) = v67;
          v197 = v241;
          sub_23DF73E10(v196, v241, type metadata accessor for Device.ControlGroup);
          LOBYTE(v307[0]) = v67;
          sub_23E0C77D8(v197, (unsigned __int8 *)v307, (_QWORD *)(v194 + v195[6]));
          v198 = (uint64_t *)(v196 + *(int *)(v258 + 20));
          v200 = *v198;
          v199 = v198[1];
          swift_bridgeObjectRetain();
          sub_23DF73E54(v196, type metadata accessor for Device.ControlGroup);
          v201 = (_QWORD *)(v194 + v195[7]);
          *v201 = v200;
          v201[1] = v199;
          sub_23DF89384(v194, v246, type metadata accessor for DisplayControlGroup);
          sub_23DF73E54(v193, type metadata accessor for Device.ControlGroup);
          v191 = v297;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_23E09E2FC(0, *(_QWORD *)(*(_QWORD *)&v191 + 16) + 1, 1);
            v191 = v297;
          }
          v203 = *(_QWORD *)(*(_QWORD *)&v191 + 16);
          v202 = *(_QWORD *)(*(_QWORD *)&v191 + 24);
          v32 = (char *)(v203 + 1);
          if (v203 >= v202 >> 1)
          {
            sub_23E09E2FC(v202 > 1, v203 + 1, 1);
            v191 = v297;
          }
          *(_QWORD *)(*(_QWORD *)&v191 + 16) = v32;
          sub_23DF89384(v246, *(_QWORD *)&v191+ ((*(unsigned __int8 *)(v266 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v266 + 80))+ *(_QWORD *)(v266 + 72) * v203, type metadata accessor for DisplayControlGroup);
          if (v263 == (char *)++a5)
          {
            a5 = (uint64_t)v283;
            goto LABEL_176;
          }
        }
        goto LABEL_190;
      }
LABEL_176:
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D213D0);
      v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = v252;
      *(_QWORD *)(v66 + 32) = 0;
      *(double *)(v66 + 40) = v191;
      goto LABEL_182;
    }
    v150 = v266;
    v261 = *(_QWORD *)&v147
         + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
    swift_bridgeObjectRetain();
    v65 = 0;
    v260 = *(_QWORD *)(v150 + 72);
    v151 = 0.0;
    v152 = 0.0;
    v268 = *(_QWORD *)&v147;
    do
    {
      v274 = (char *)v65;
      sub_23DF73E10(v261 + v260 * v65, v80, type metadata accessor for DisplayControlGroup);
      v280 = v80 + *(int *)(v281 + 24);
      sub_23DF73E10(v280, v276, type metadata accessor for DisplayControlGroup.LayoutType);
      v154 = swift_getEnumCaseMultiPayload();
      if (v154)
      {
        if (v154 == 1)
        {
          swift_bridgeObjectRelease();
          v155 = sub_23E0C8CC0(40.0);
          goto LABEL_97;
        }
        sub_23DF73E54(v276, type metadata accessor for DisplayControlGroup.LayoutType);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v155 = sub_23E0C91B0();
LABEL_97:
      v157 = v155;
      v158 = v156;
      sub_23DF73E10(v280, (uint64_t)v277, type metadata accessor for DisplayControlGroup.LayoutType);
      v159 = swift_getEnumCaseMultiPayload();
      if (v159)
      {
        if (v159 == 1)
        {
          v160 = *v277;
          v161 = *(_QWORD *)(*v277 + 16);
          if (!v161)
            goto LABEL_108;
        }
        else
        {
          v32 = (char *)a5;
          v171 = v78;
          v172 = v253;
          sub_23DF89384((uint64_t)v277, v253, type metadata accessor for DisplayControl);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD70);
          v173 = (*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80);
          v160 = swift_allocObject();
          *(_OWORD *)(v160 + 16) = v252;
          v174 = v172;
          v78 = v171;
          a5 = (uint64_t)v32;
          sub_23DF89384(v174, v160 + v173, type metadata accessor for DisplayControl);
          v161 = *(_QWORD *)(v160 + 16);
          if (!v161)
          {
LABEL_108:
            swift_bridgeObjectRelease();
            goto LABEL_112;
          }
        }
      }
      else
      {
        v160 = *v277;
        v161 = *(_QWORD *)(*v277 + 16);
        if (!v161)
          goto LABEL_108;
      }
      v162 = v160 + ((*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80));
      v163 = *(_QWORD *)(v293 + 72);
      v164 = (uint64_t)v285;
      while (1)
      {
        sub_23DF73E10(v162, v164, type metadata accessor for DisplayControl);
        v165 = *(unsigned __int8 *)(v164 + *(int *)(v295 + 40));
        v166 = v164;
        if (v165 == 12)
        {
          v167 = *(_BYTE *)(v164 + *(int *)(v294 + 20));
          v168 = *(int *)(v282 + 48);
          v169 = v284;
          sub_23DF73E10(v166 + *(int *)(v295 + 20), v284, type metadata accessor for Device.Control.Kind);
          *(_BYTE *)(v169 + v168) = v167;
          type metadata accessor for Device.Control.Kind(0);
          v170 = (char *)&loc_23E0C647C + dword_23E0C72A4[swift_getEnumCaseMultiPayload()];
          __asm { BR              X9 }
        }
        if ((v165 - 6) < 4)
          break;
        sub_23DF73E54(v164, type metadata accessor for DisplayControl);
        v162 += v163;
        if (!--v161)
        {
          swift_bridgeObjectRelease();
          goto LABEL_111;
        }
      }
      sub_23DF73E54(v164, type metadata accessor for DisplayControl);
      swift_bridgeObjectRelease();
      v157 = v71;
LABEL_111:
      v77 = v292;
      v78 = (_QWORD *)v269;
LABEL_112:
      sub_23DF73E10(v280, (uint64_t)v278, type metadata accessor for DisplayControlGroup.LayoutType);
      v175 = swift_getEnumCaseMultiPayload();
      if (v175)
      {
        if (v175 == 1)
        {
          v176 = *v278;
          v177 = *(_QWORD *)(*v278 + 16);
          if (!v177)
            goto LABEL_126;
        }
        else
        {
          v187 = v253;
          sub_23DF89384((uint64_t)v278, v253, type metadata accessor for DisplayControl);
          __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD70);
          v188 = (*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80);
          v32 = (char *)swift_allocObject();
          *((_OWORD *)v32 + 1) = v252;
          sub_23DF89384(v187, (uint64_t)&v32[v188], type metadata accessor for DisplayControl);
          v176 = (uint64_t)v32;
          v177 = *((_QWORD *)v32 + 2);
          if (!v177)
          {
LABEL_126:
            swift_bridgeObjectRelease();
            goto LABEL_128;
          }
        }
      }
      else
      {
        v176 = *v278;
        v177 = *(_QWORD *)(*v278 + 16);
        if (!v177)
          goto LABEL_126;
      }
      v178 = (*(unsigned __int8 *)(v293 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v293 + 80);
      v280 = v176;
      v179 = v176 + v178;
      v180 = *(_QWORD *)(v293 + 72);
      while (1)
      {
        v181 = v291;
        sub_23DF73E10(v179, v291, type metadata accessor for DisplayControl);
        v182 = *(unsigned __int8 *)(v181 + *(int *)(v295 + 40));
        if (v182 <= 0xC)
        {
          if (v182 == 12)
          {
            v183 = *(_BYTE *)(v291 + *(int *)(v294 + 20));
            v184 = *(int *)(v282 + 48);
            v185 = v279;
            sub_23DF73E10(v291 + *(int *)(v295 + 20), v279, type metadata accessor for Device.Control.Kind);
            *(_BYTE *)(v185 + v184) = v183;
            type metadata accessor for Device.Control.Kind(0);
            v186 = (char *)&loc_23E0C6798 + *((int *)qword_23E0C72D0 + swift_getEnumCaseMultiPayload());
            __asm { BR              X9 }
          }
          if (((1 << v182) & 0xFD1) != 0)
            break;
        }
        sub_23DF73E54(v291, type metadata accessor for DisplayControl);
        v179 += v180;
        if (!--v177)
        {
          swift_bridgeObjectRelease();
          goto LABEL_127;
        }
      }
      sub_23DF73E54(v291, type metadata accessor for DisplayControl);
      swift_bridgeObjectRelease();
      v158 = v72;
LABEL_127:
      v78 = (_QWORD *)v269;
LABEL_128:
      v80 = v275;
      if ((v267 & 1) != 0)
      {
        if (v157 > v152)
          v152 = v157;
        v153 = 40.0;
        if (v151 == 0.0)
          v153 = 0.0;
        v151 = v151 + v153 + v158;
      }
      else
      {
        if (v158 > v151)
          v151 = v158;
        v189 = 40.0;
        if (v152 == 0.0)
          v189 = 0.0;
        v152 = v152 + v189 + v157;
      }
      v65 = (uint64_t)(v274 + 1);
      sub_23DF73E54(v275, type metadata accessor for DisplayControlGroup);
    }
    while (v65 != v264);
    swift_bridgeObjectRelease_n();
    v75 = v265;
    if ((v267 & 1) == 0)
      goto LABEL_139;
LABEL_135:
    if (v151 <= v72 && v151 != 0.0)
      goto LABEL_141;
LABEL_9:
    v79 = v247 + 1;
  }
  while (v247 + 1 != v242);
  swift_bridgeObjectRelease();
  v74 = (uint64_t)v245;
  if (v75 != 1)
    goto LABEL_179;
LABEL_157:
  if ((uint64_t)v263 <= v74)
    goto LABEL_194;
  v295 = *(_QWORD *)(v259 + 72);
  v204 = v228;
  sub_23DF73E10(v262 + v295 * v74, v228, type metadata accessor for Device.ControlGroup);
  LOBYTE(v307[0]) = v267;
  v205 = sub_23E0C72EC(v204, (unsigned __int8 *)v307);
  if (!v205)
  {
    sub_23DF73E54(v204, type metadata accessor for Device.ControlGroup);
LABEL_179:
    v297 = v71;
    v298 = v72;
    v299 = v236;
    v300 = v235;
    v301 = v234;
    v302 = v233;
    v303 = v232;
    v304 = v267;
    v305 = v231;
    v220 = sub_23E0C7744(1, v229, v262, v74, v230);
    v222 = v221;
    v224 = v223;
    v226 = v225;
    swift_unknownObjectRetain();
    sub_23E0C5320(v307, v220, v222, v224, v226);
    v66 = v307[0];
    v67 = v307[1];
    v68 = v307[2];
    v69 = (char *)v307[3];
    v70 = v307[4];
    result = swift_unknownObjectRelease();
    goto LABEL_184;
  }
  v65 = v205;
  v67 = *(_QWORD *)(v205 + 16);
  v75 = v67 >> 1;
  v74 = v205 + ((*(unsigned __int8 *)(v251 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v251 + 80));
  sub_23E137620();
  swift_unknownObjectRetain_n();
  v206 = swift_dynamicCastClass();
  if (!v206)
  {
    swift_bridgeObjectRelease();
    v206 = MEMORY[0x24BEE4AF8];
  }
  v207 = *(_QWORD *)(v206 + 16);
  swift_release();
  if (v207 != v75)
    goto LABEL_195;
  v208 = swift_dynamicCastClass();
  if (!v208)
  {
    swift_bridgeObjectRelease();
    v208 = MEMORY[0x24BEE4AF8];
  }
LABEL_164:
  v209 = *(_QWORD *)(v65 + 16);
  if (v209 < v75)
  {
    __break(1u);
  }
  else
  {
    swift_unknownObjectRetain_n();
    v210 = swift_dynamicCastClass();
    if (!v210)
    {
      swift_bridgeObjectRelease();
      v210 = MEMORY[0x24BEE4AF8];
    }
    v211 = *(_QWORD *)(v210 + 16);
    swift_release();
    if (v211 == v209 - v75)
    {
      v212 = swift_dynamicCastClass();
      if (!v212)
      {
        swift_bridgeObjectRelease();
        v212 = MEMORY[0x24BEE4AF8];
      }
      goto LABEL_170;
    }
  }
  swift_bridgeObjectRelease();
  v212 = sub_23E12E5A8(v65, v74, v75, (2 * v209) | 1);
LABEL_170:
  swift_bridgeObjectRelease();
  v213 = v228;
  v214 = sub_23E0C745C(v208, v212, v228);
  swift_release();
  swift_release();
  v296 = MEMORY[0x24BEE4AF8];
  v215 = *(_QWORD *)(v214 + 16);
  if (v215)
  {
    v216 = (*(unsigned __int8 *)(v259 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v259 + 80);
    v217 = v214 + v216;
    v293 = v214;
    swift_bridgeObjectRetain();
    v294 = xmmword_23E138050;
    do
    {
      v297 = v71;
      v298 = v72;
      v299 = v236;
      v300 = v235;
      v301 = v234;
      v302 = v233;
      v303 = v232;
      v304 = v267;
      v305 = v231;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
      v218 = swift_allocObject();
      *(_OWORD *)(v218 + 16) = v294;
      sub_23DF73E10(v217, v218 + v216, type metadata accessor for Device.ControlGroup);
      sub_23E0C5320(&v306, v218, v218 + v216, 0, (2 * *(_QWORD *)(v218 + 16)) | 1);
      swift_bridgeObjectRelease();
      sub_23E0C96DC((uint64_t)&v306, (uint64_t)v307);
      v219 = v307[0];
      if (v307[0])
        swift_unknownObjectRelease();
      else
        v219 = MEMORY[0x24BEE4AF8];
      sub_23DF846BC(v219);
      v217 += v295;
      --v215;
    }
    while (v215);
    swift_bridgeObjectRelease_n();
    v66 = v296;
    v213 = v228;
  }
  else
  {
    swift_bridgeObjectRelease();
    v66 = MEMORY[0x24BEE4AF8];
  }
  v227 = *(_QWORD *)(v66 + 16);
  sub_23DF73E54(v213, type metadata accessor for Device.ControlGroup);
  a5 = (uint64_t)v283;
  if (v227 == 2)
  {
LABEL_182:
    result = swift_unknownObjectRetain();
    v67 = result;
    v68 = v262;
    v69 = v245;
    v70 = v230;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v66 = 0;
    v67 = 0;
    v68 = 0;
    v69 = 0;
    v70 = 0;
  }
LABEL_184:
  *(_QWORD *)a5 = v66;
  *(_QWORD *)(a5 + 8) = v67;
  *(_QWORD *)(a5 + 16) = v68;
  *(_QWORD *)(a5 + 24) = v69;
  *(_QWORD *)(a5 + 32) = v70;
  return result;
}

uint64_t sub_23E0C72EC(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v19;

  v4 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v9 = (uint64_t *)((char *)&v19 - v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256D25BC0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a2;
  v15 = *(int *)(v11 + 48);
  sub_23DF73E10(a1, (uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
  v13[v15] = v14;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23DF73E10((uint64_t)v13, (uint64_t)v7, type metadata accessor for Device.ControlGroup.LayoutType);
    v17 = *v7;
    if (!v14)
      goto LABEL_4;
    goto LABEL_7;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_23DF73E10((uint64_t)v13, (uint64_t)v9, type metadata accessor for Device.ControlGroup.LayoutType);
    v17 = *v9;
    if ((v14 & 1) != 0)
    {
LABEL_4:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
LABEL_7:
    sub_23DF73E54((uint64_t)v13, type metadata accessor for Device.ControlGroup.LayoutType);
    return v17;
  }
LABEL_5:
  sub_23DF89C7C((uint64_t)v13, qword_256D25BC0);
  return 0;
}

uint64_t sub_23E0C745C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v30;

  v6 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(a3, (uint64_t)v11, v12);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v24 = type metadata accessor for Device.ControlGroup(0);
    v25 = *(unsigned __int8 *)(*(_QWORD *)(v24 - 8) + 80);
    v26 = (v25 + 32) & ~v25;
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_23E138050;
    sub_23DF73E10((uint64_t)v8, v17 + v26, type metadata accessor for Device.Control);
    swift_storeEnumTagMultiPayload();
    v27 = (_QWORD *)(v17 + v26 + *(int *)(v24 + 20));
    v28 = (_QWORD *)(v17 + v26 + *(int *)(v24 + 24));
    *v27 = 0;
    v27[1] = 0;
    *v28 = 0;
    v28[1] = 0;
    sub_23DF73E54((uint64_t)v8, type metadata accessor for Device.Control);
  }
  else
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D20C58);
    v13 = type metadata accessor for Device.ControlGroup(0);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(_QWORD *)(v14 + 72);
    v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_23E138410;
    v18 = (_QWORD *)(v17 + v16);
    *v18 = a1;
    swift_storeEnumTagMultiPayload();
    v19 = (_QWORD *)((char *)v18 + *(int *)(v13 + 20));
    v20 = (_QWORD *)((char *)v18 + *(int *)(v13 + 24));
    *v19 = 0;
    v19[1] = 0;
    v21 = (_QWORD *)((char *)v18 + v15);
    *v20 = 0;
    v20[1] = 0;
    *v21 = a2;
    swift_storeEnumTagMultiPayload();
    v22 = (_QWORD *)((char *)v21 + *(int *)(v13 + 20));
    v23 = (_QWORD *)((char *)v21 + *(int *)(v13 + 24));
    *v22 = 0;
    v22[1] = 0;
    *v23 = 0;
    v23[1] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v17;
}

uint64_t sub_23E0C7744(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = a5 >> 1;
  v6 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v7 = v6 - result;
  if (__OFSUB__(v6, result))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v7 < 1)
  {
    v7 = 0;
  }
  else if ((v6 & 0x8000000000000000) == 0)
  {
    v8 = a5 >> 1;
    if (v6 < v7)
    {
LABEL_10:
      if (v8 >= a4)
      {
        if (v5 >= a4)
        {
          if (v5 >= v8)
          {
            if ((v8 & 0x8000000000000000) == 0)
              return a2;
            goto LABEL_21;
          }
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
LABEL_18:
      __break(1u);
      goto LABEL_19;
    }
  }
  v8 = a4 + v7;
  if (!__OFADD__(a4, v7))
    goto LABEL_10;
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_23E0C77D8@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned int v27;
  uint64_t (*v28)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unsigned int v36;
  unsigned int v37;
  char v38;
  char v39;
  char v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  unsigned int v49;
  unsigned int v50;
  char v51;
  char v52;
  char v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  unsigned int v60;
  unsigned int v61;
  char v62;
  char v63;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  v71 = a3;
  v75 = type metadata accessor for Device.Control(0);
  v72 = *(_QWORD *)(v75 - 8);
  v5 = MEMORY[0x24BDAC7A8](v75);
  v69 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v69 - v8;
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (char *)&v69 - v11;
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)&v69 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v69 - v16;
  v18 = type metadata accessor for DisplayControl(0);
  v73 = *(_QWORD *)(v18 - 8);
  v74 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v69 - v22;
  v24 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v24);
  v26 = (char *)&v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *a2;
  v70 = a1;
  sub_23DF73E10(a1, (uint64_t)v26, v28);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v44 = *(_QWORD *)v26;
    v45 = *(_QWORD *)(*(_QWORD *)v26 + 16);
    v32 = MEMORY[0x24BEE4AF8];
    if (v45)
    {
      v76 = MEMORY[0x24BEE4AF8];
      sub_23E09E328(0, v45, 0);
      v46 = *(unsigned __int8 *)(v72 + 80);
      v69 = v44;
      v47 = v44 + ((v46 + 32) & ~v46);
      v72 = *(_QWORD *)(v72 + 72);
      v32 = v76;
      do
      {
        sub_23DF73E10(v47, (uint64_t)v12, type metadata accessor for Device.Control);
        sub_23DF73E10((uint64_t)v12, (uint64_t)v9, type metadata accessor for Device.Control);
        v48 = &v9[*(int *)(v75 + 36)];
        v49 = *v48;
        v50 = v48[1];
        if (v27 <= v49)
          v51 = v49;
        else
          v51 = v27;
        if (v49 == 4)
          v52 = v27;
        else
          v52 = v51;
        if (v50 >= v27 || v50 == 4)
          v54 = v52;
        else
          v54 = v50;
        sub_23DF89384((uint64_t)v9, (uint64_t)v21, type metadata accessor for Device.Control);
        v21[*(int *)(v74 + 20)] = v54;
        sub_23DF73E54((uint64_t)v12, type metadata accessor for Device.Control);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E09E328(0, *(_QWORD *)(v32 + 16) + 1, 1);
          v32 = v76;
        }
        v56 = *(_QWORD *)(v32 + 16);
        v55 = *(_QWORD *)(v32 + 24);
        if (v56 >= v55 >> 1)
        {
          sub_23E09E328(v55 > 1, v56 + 1, 1);
          v32 = v76;
        }
        *(_QWORD *)(v32 + 16) = v56 + 1;
        sub_23DF89384((uint64_t)v21, v32+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(_QWORD *)(v73 + 72) * v56, type metadata accessor for DisplayControl);
        v47 += v72;
        --v45;
      }
      while (v45);
    }
    goto LABEL_56;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v30 = *(_QWORD *)v26;
    v31 = *(_QWORD *)(v30 + 16);
    v32 = MEMORY[0x24BEE4AF8];
    if (v31)
    {
      v76 = MEMORY[0x24BEE4AF8];
      sub_23E09E328(0, v31, 0);
      v33 = *(unsigned __int8 *)(v72 + 80);
      v69 = v30;
      v34 = v30 + ((v33 + 32) & ~v33);
      v72 = *(_QWORD *)(v72 + 72);
      v32 = v76;
      do
      {
        sub_23DF73E10(v34, (uint64_t)v17, type metadata accessor for Device.Control);
        sub_23DF73E10((uint64_t)v17, (uint64_t)v15, type metadata accessor for Device.Control);
        v35 = &v15[*(int *)(v75 + 36)];
        v36 = *v35;
        v37 = v35[1];
        if (v27 <= v36)
          v38 = v36;
        else
          v38 = v27;
        if (v36 == 4)
          v39 = v27;
        else
          v39 = v38;
        if (v37 >= v27 || v37 == 4)
          v41 = v39;
        else
          v41 = v37;
        sub_23DF89384((uint64_t)v15, (uint64_t)v23, type metadata accessor for Device.Control);
        v23[*(int *)(v74 + 20)] = v41;
        sub_23DF73E54((uint64_t)v17, type metadata accessor for Device.Control);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_23E09E328(0, *(_QWORD *)(v32 + 16) + 1, 1);
          v32 = v76;
        }
        v43 = *(_QWORD *)(v32 + 16);
        v42 = *(_QWORD *)(v32 + 24);
        if (v43 >= v42 >> 1)
        {
          sub_23E09E328(v42 > 1, v43 + 1, 1);
          v32 = v76;
        }
        *(_QWORD *)(v32 + 16) = v43 + 1;
        sub_23DF89384((uint64_t)v23, v32+ ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80))+ *(_QWORD *)(v73 + 72) * v43, type metadata accessor for DisplayControl);
        v34 += v72;
        --v31;
      }
      while (v31);
    }
LABEL_56:
    sub_23DF73E54(v70, type metadata accessor for Device.ControlGroup);
    swift_bridgeObjectRelease();
    *v71 = v32;
    type metadata accessor for DisplayControlGroup.LayoutType(0);
    return swift_storeEnumTagMultiPayload();
  }
  sub_23DF73E54(v70, type metadata accessor for Device.ControlGroup);
  v57 = (uint64_t)v26;
  v58 = v69;
  sub_23DF89384(v57, v69, type metadata accessor for Device.Control);
  v59 = (unsigned __int8 *)(v58 + *(int *)(v75 + 36));
  v60 = *v59;
  v61 = v59[1];
  if (v27 <= v60)
    v62 = v60;
  else
    v62 = v27;
  if (v60 == 4)
    v63 = v27;
  else
    v63 = v62;
  if (v61 >= v27 || v61 == 4)
    v65 = v63;
  else
    v65 = v61;
  v66 = v58;
  v67 = v71;
  sub_23DF89384(v66, (uint64_t)v71, type metadata accessor for Device.Control);
  *((_BYTE *)v67 + *(int *)(v74 + 20)) = v65;
  type metadata accessor for DisplayControlGroup.LayoutType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_23E0C7D78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t (*v10)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = type metadata accessor for DisplayControl(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_23DF73E10(v2, (uint64_t)v9, v10);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    v12 = *v9;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    v12 = *v9;
LABEL_5:
    sub_23E1376A4();
    sub_23DFAE344(a1, v12);
    return swift_bridgeObjectRelease();
  }
  sub_23DF89384((uint64_t)v9, (uint64_t)v6, type metadata accessor for DisplayControl);
  sub_23E1376A4();
  Device.Control.hash(into:)(a1);
  sub_23E1376A4();
  return sub_23DF73E54((uint64_t)v6, type metadata accessor for DisplayControl);
}

uint64_t sub_23E0C7EC8(uint64_t a1, uint64_t a2)
{
  return sub_23DFAC060(a1, a2, (void (*)(_BYTE *))sub_23E0C7D78);
}

uint64_t sub_23E0C7ED8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23DFAC0B0(a1, a2, a3, (void (*)(_BYTE *))sub_23E0C7D78);
}

uint64_t sub_23E0C7EE8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FEE0);
  MEMORY[0x24BDAC7A8](v26);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DisplayControl(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - v8;
  v10 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for DisplayControlGroup(0);
  sub_23DF73E10(v0 + *(int *)(v13 + 24), (uint64_t)v12, type metadata accessor for DisplayControlGroup.LayoutType);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v12, (uint64_t)v9, type metadata accessor for DisplayControl);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD70);
    v23 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_23E138050;
    sub_23DF89384((uint64_t)v9, v14 + v23, type metadata accessor for DisplayControl);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
LABEL_3:
      v16 = v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v17 = *(_QWORD *)(v4 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_23DF73E10(v16, (uint64_t)v7, type metadata accessor for DisplayControl);
        v18 = v7[*(int *)(v3 + 20)];
        v19 = type metadata accessor for Device.Control(0);
        v20 = v7[*(int *)(v19 + 40)];
        if (v20 == 12)
        {
          v21 = *(int *)(v26 + 48);
          sub_23DF73E10((uint64_t)&v7[*(int *)(v19 + 20)], (uint64_t)v2, type metadata accessor for Device.Control.Kind);
          v2[v21] = v18;
          type metadata accessor for Device.Control.Kind(0);
          v22 = (char *)&loc_23E0C80E8 + 4 * byte_23E141B97[swift_getEnumCaseMultiPayload()];
          __asm { BR              X9 }
        }
        if ((v20 - 6) < 4)
          break;
        sub_23DF73E54((uint64_t)v7, type metadata accessor for DisplayControl);
        v16 += v17;
        if (!--v15)
        {
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      sub_23DF73E54((uint64_t)v7, type metadata accessor for DisplayControl);
      swift_bridgeObjectRelease_n();
      return 1;
    }
  }
  else
  {
    v14 = *v12;
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23E0C8260()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FEE0);
  MEMORY[0x24BDAC7A8](v26);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DisplayControl(0);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v25 - v8;
  v10 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for DisplayControlGroup(0);
  sub_23DF73E10(v0 + *(int *)(v13 + 24), (uint64_t)v12, type metadata accessor for DisplayControlGroup.LayoutType);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v12, (uint64_t)v9, type metadata accessor for DisplayControl);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD70);
    v23 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_23E138050;
    sub_23DF89384((uint64_t)v9, v14 + v23, type metadata accessor for DisplayControl);
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
LABEL_3:
      v16 = v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      v17 = *(_QWORD *)(v4 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_23DF73E10(v16, (uint64_t)v7, type metadata accessor for DisplayControl);
        v18 = v7[*(int *)(v3 + 20)];
        v19 = type metadata accessor for Device.Control(0);
        v20 = v7[*(int *)(v19 + 40)];
        if (v20 <= 0xC)
        {
          if (v20 == 12)
          {
            v21 = *(int *)(v26 + 48);
            sub_23DF73E10((uint64_t)&v7[*(int *)(v19 + 20)], (uint64_t)v2, type metadata accessor for Device.Control.Kind);
            v2[v21] = v18;
            type metadata accessor for Device.Control.Kind(0);
            v22 = (char *)&loc_23E0C843C + 4 * byte_23E141BA2[swift_getEnumCaseMultiPayload()];
            __asm { BR              X9 }
          }
          if (((1 << v20) & 0xFD1) != 0)
            break;
        }
        sub_23DF73E54((uint64_t)v7, type metadata accessor for DisplayControl);
        v16 += v17;
        if (!--v15)
        {
          swift_bridgeObjectRelease_n();
          return 0;
        }
      }
      sub_23DF73E54((uint64_t)v7, type metadata accessor for DisplayControl);
      swift_bridgeObjectRelease_n();
      return 1;
    }
  }
  else
  {
    v14 = *v12;
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_23E0C85C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  Device.ControlGroup.LayoutType.hash(into:)(a1);
  v3 = type metadata accessor for Device.ControlGroup(0);
  if (*(_QWORD *)(v1 + *(int *)(v3 + 20) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  if (*(_QWORD *)(v1 + *(int *)(v3 + 24) + 8))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  v4 = type metadata accessor for DisplayControlGroup(0);
  sub_23E1376A4();
  sub_23E0C7D78(a1);
  if (!*(_QWORD *)(v1 + *(int *)(v4 + 28) + 8))
    return sub_23E1376B0();
  sub_23E1376B0();
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E0C8730(uint64_t a1, uint64_t a2)
{
  return sub_23DFAC060(a1, a2, (void (*)(_BYTE *))sub_23E0C85C8);
}

uint64_t sub_23E0C8740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23DFAC0B0(a1, a2, a3, (void (*)(_BYTE *))sub_23E0C85C8);
}

uint64_t sub_23E0C8750()
{
  _BYTE v1[72];

  sub_23E137698();
  Device.Control.hash(into:)((uint64_t)v1);
  sub_23E1376A4();
  return sub_23E1376D4();
}

uint64_t sub_23E0C87A0(uint64_t a1)
{
  Device.Control.hash(into:)(a1);
  return sub_23E1376A4();
}

uint64_t sub_23E0C87DC()
{
  _BYTE v1[72];

  sub_23E137698();
  Device.Control.hash(into:)((uint64_t)v1);
  sub_23E1376A4();
  return sub_23E1376D4();
}

BOOL sub_23E0C8828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (_s22HomeAccessoryControlUI6DeviceV0C0V2eeoiySbAE_AEtFZ_0(a1, a2) & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_23E0C8878(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;

  if ((_s22HomeAccessoryControlUI6DeviceV0C5GroupV10LayoutTypeO2eeoiySbAG_AGtFZ_0(a1, a2) & 1) == 0)
    return 0;
  v4 = type metadata accessor for Device.ControlGroup(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  v9 = v8[1];
  if (!v7)
  {
    if (v9)
      return 0;
    goto LABEL_11;
  }
  if (!v9)
    return 0;
  v10 = *v6 == *v8 && v7 == v9;
  if (v10 || (v11 = sub_23E137614(), result = 0, (v11 & 1) != 0))
  {
LABEL_11:
    v13 = *(int *)(v4 + 24);
    v14 = (_QWORD *)(a1 + v13);
    v15 = *(_QWORD *)(a1 + v13 + 8);
    v16 = (_QWORD *)(a2 + v13);
    v17 = v16[1];
    if (v15)
    {
      if (!v17)
        return 0;
      if (*v14 != *v16 || v15 != v17)
      {
        v19 = sub_23E137614();
        result = 0;
        if ((v19 & 1) == 0)
          return result;
      }
    }
    else if (v17)
    {
      return 0;
    }
    v20 = type metadata accessor for DisplayControlGroup(0);
    if (*(unsigned __int8 *)(a1 + *(int *)(v20 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v20 + 20)))
    {
      v21 = v20;
      if (sub_23E0C89D0(a1 + *(int *)(v20 + 24), a2 + *(int *)(v20 + 24)))
      {
        v22 = *(int *)(v21 + 28);
        v23 = (_QWORD *)(a1 + v22);
        v24 = *(_QWORD *)(a1 + v22 + 8);
        v25 = (_QWORD *)(a2 + v22);
        v26 = v25[1];
        if (v24)
        {
          if (v26 && (*v23 == *v25 && v24 == v26 || (sub_23E137614() & 1) != 0))
            return 1;
        }
        else if (!v26)
        {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

BOOL sub_23E0C89D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  BOOL v22;
  uint64_t v24;
  uint64_t v25;

  v25 = type metadata accessor for DisplayControl(0);
  MEMORY[0x24BDAC7A8](v25);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v12 = (uint64_t *)((char *)&v24 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v24 - v13);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25BB0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = (uint64_t *)&v18[*(int *)(v16 + 48)];
  sub_23DF73E10(a1, (uint64_t)v18, type metadata accessor for DisplayControlGroup.LayoutType);
  sub_23DF73E10(a2, (uint64_t)v19, type metadata accessor for DisplayControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23DF73E10((uint64_t)v18, (uint64_t)v14, type metadata accessor for DisplayControlGroup.LayoutType);
    v21 = *v14;
    if (!swift_getEnumCaseMultiPayload())
      goto LABEL_4;
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_23DF73E10((uint64_t)v18, (uint64_t)v9, type metadata accessor for DisplayControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_23DF89384((uint64_t)v19, (uint64_t)v5, type metadata accessor for DisplayControl);
      if ((static Device.Control.== infix(_:_:)(v9, v5) & 1) != 0 && v9[*(int *)(v25 + 20)] == v5[*(int *)(v25 + 20)])
      {
        sub_23DF73E54((uint64_t)v5, type metadata accessor for DisplayControl);
        sub_23DF73E54((uint64_t)v9, type metadata accessor for DisplayControl);
        sub_23DF73E54((uint64_t)v18, type metadata accessor for DisplayControlGroup.LayoutType);
        return 1;
      }
      sub_23DF73E54((uint64_t)v5, type metadata accessor for DisplayControl);
      sub_23DF73E54((uint64_t)v9, type metadata accessor for DisplayControl);
      sub_23DF73E54((uint64_t)v18, type metadata accessor for DisplayControlGroup.LayoutType);
      return 0;
    }
    sub_23DF73E54((uint64_t)v9, type metadata accessor for DisplayControl);
LABEL_12:
    sub_23DF89C7C((uint64_t)v18, &qword_256D25BB0);
    return 0;
  }
  sub_23DF73E10((uint64_t)v18, (uint64_t)v12, type metadata accessor for DisplayControlGroup.LayoutType);
  v21 = *v12;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_4:
  v22 = sub_23E11D31C(v21, *v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23DF73E54((uint64_t)v18, type metadata accessor for DisplayControlGroup.LayoutType);
  return v22;
}

double sub_23E0C8CC0(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v19;
  _QWORD v20[2];
  uint64_t v21;
  char *v22;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FEE0);
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DisplayControl(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)v20 - v9;
  v11 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DisplayControlGroup(0);
  sub_23DF73E10(v1 + *(int *)(v14 + 24), (uint64_t)v13, type metadata accessor for DisplayControlGroup.LayoutType);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v13, (uint64_t)v10, type metadata accessor for DisplayControl);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD70);
    v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_23E138050;
    sub_23DF89384((uint64_t)v10, v15 + v19, type metadata accessor for DisplayControl);
    if (*(_QWORD *)(v15 + 16))
    {
LABEL_3:
      v16 = *(unsigned __int8 *)(v5 + 80);
      v20[1] = v15;
      sub_23DF73E10(v15 + ((v16 + 32) & ~v16), (uint64_t)v8, type metadata accessor for DisplayControl);
      v17 = (char *)&loc_23E0C8E88
          + *((int *)qword_23E0C9150 + v8[*(int *)(type metadata accessor for Device.Control(0) + 40)]);
      __asm { BR              X9 }
    }
  }
  else
  {
    v15 = *(_QWORD *)v13;
    if (*(_QWORD *)(*(_QWORD *)v13 + 16))
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  return (double)-1 * a1 + 0.0;
}

double sub_23E0C91B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v17;
  _QWORD v18[2];
  uint64_t v19;
  char *v20;

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FEE0);
  MEMORY[0x24BDAC7A8](v19);
  v20 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = type metadata accessor for DisplayControl(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v18 - v7;
  v9 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DisplayControlGroup(0);
  sub_23DF73E10(v0 + *(int *)(v12 + 24), (uint64_t)v11, type metadata accessor for DisplayControlGroup.LayoutType);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v11, (uint64_t)v8, type metadata accessor for DisplayControl);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FD70);
    v17 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_23E138050;
    sub_23DF89384((uint64_t)v8, v13 + v17, type metadata accessor for DisplayControl);
    if (*(_QWORD *)(v13 + 16))
    {
LABEL_3:
      v14 = *(unsigned __int8 *)(v3 + 80);
      v18[1] = v13;
      sub_23DF73E10(v13 + ((v14 + 32) & ~v14), (uint64_t)v6, type metadata accessor for DisplayControl);
      v15 = (char *)&loc_23E0C9378
          + *((int *)qword_23E0C9640 + v6[*(int *)(type metadata accessor for Device.Control(0) + 40)]);
      __asm { BR              X9 }
    }
  }
  else
  {
    v13 = *(_QWORD *)v11;
    if (*(_QWORD *)(*(_QWORD *)v11 + 16))
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  return 0.0;
}

uint64_t type metadata accessor for DisplayControl(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25CC8);
}

uint64_t type metadata accessor for DisplayControlGroup.LayoutType(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25C38);
}

uint64_t type metadata accessor for DisplayControlGroup(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D25D58);
}

uint64_t sub_23E0C96DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0C9724(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_23E0C9750(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

_QWORD *sub_23E0C977C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v99)(char *, _BYTE *, uint64_t);
  char *v100;
  char *v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v6 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23E134C80();
      v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for Device.Control(0);
      v10 = v9[5];
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v11 = *v12;
          v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v15 = &v11[v14];
          v16 = &v12[v14];
          v17 = *(_QWORD *)&v12[v14];
          v18 = *((_QWORD *)v16 + 1);
          *v15 = v17;
          v15[1] = v18;
          v19 = type metadata accessor for IconDescriptor();
          v20 = *(int *)(v19 + 20);
          v100 = (char *)v15 + v20;
          v103 = v19;
          v21 = &v16[v20];
          v22 = sub_23E135910();
          v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          swift_bridgeObjectRetain();
          v23(v100, v21, v22);
          v24 = v23;
          v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v26 = (_QWORD *)((char *)v15 + v25);
          v27 = &v16[v25];
          v28 = v27[1];
          *v26 = *v27;
          v26[1] = v28;
          v29 = *(int *)(v103 + 20);
          v30 = (char *)v26 + v29;
          v31 = (char *)v27 + v29;
          swift_bridgeObjectRetain();
          v24(v30, v31, v22);
          v32 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v15 + *(int *)(v32 + 20)) = *(_QWORD *)&v16[*(int *)(v32 + 20)];
          v33 = *(int *)(v32 + 24);
          v34 = (_QWORD *)((char *)v15 + v33);
          v35 = &v16[v33];
          v36 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            v76 = v35[1];
            *v34 = *v35;
            v34[1] = v76;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            *v34 = *v35;
            v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v39 = (char *)v34 + v38;
            v40 = (char *)v35 + v38;
            v41 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_26;
        case 1u:
          v42 = type metadata accessor for Device.Control.IncrementalState(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v43 + 48))(v12, 1, v42))
          {
            v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            v49 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 16))(v11, v12, v49);
            v11[*(int *)(v42 + 20)] = v12[*(int *)(v42 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v11, 0, 1, v42);
          }
          v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v51 = &v11[v50];
          v52 = &v12[v50];
          v53 = *(_QWORD *)&v12[v50 + 8];
          *v51 = *(_QWORD *)&v12[v50];
          v51[1] = v53;
          v54 = type metadata accessor for IconDescriptor();
          v55 = *(int *)(v54 + 20);
          v101 = (char *)v51 + v55;
          v104 = v54;
          v56 = &v52[v55];
          v57 = sub_23E135910();
          v58 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16);
          swift_bridgeObjectRetain();
          v58(v101, v56, v57);
          v59 = v58;
          v60 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v61 = (_QWORD *)((char *)v51 + v60);
          v62 = &v52[v60];
          v63 = v62[1];
          *v61 = *v62;
          v61[1] = v63;
          v64 = *(int *)(v104 + 20);
          v65 = (char *)v61 + v64;
          v66 = (char *)v62 + v64;
          swift_bridgeObjectRetain();
          v59(v65, v66, v57);
          v67 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v51 + v67[5]) = *(_QWORD *)&v52[v67[5]];
          *(_QWORD *)((char *)v51 + v67[6]) = *(_QWORD *)&v52[v67[6]];
          v68 = v67[7];
          v102 = &v52[v68];
          v105 = (char *)v51 + v68;
          v69 = sub_23E135520();
          v99 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v69 - 8) + 16);
          swift_retain();
          swift_retain();
          v99(v105, v102, v69);
          *(_QWORD *)((char *)v51 + v67[8]) = *(_QWORD *)&v52[v67[8]];
          *(_QWORD *)((char *)v51 + v67[9]) = *(_QWORD *)&v52[v67[9]];
          *(_QWORD *)((char *)v51 + v67[10]) = *(_QWORD *)&v52[v67[10]];
          v70 = v67[11];
          v71 = (char *)v51 + v70;
          v72 = &v52[v70];
          v71[8] = v72[8];
          *(_QWORD *)v71 = *(_QWORD *)v72;
          goto LABEL_26;
        case 2u:
          *(_QWORD *)v11 = *(_QWORD *)v12;
          v11[8] = v12[8];
          *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
          v11[24] = v12[24];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 3u:
          v45 = type metadata accessor for Device.Control.ColorState(0);
          v46 = *(_QWORD *)(v45 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v46 + 48))(v12, 1, v45))
          {
            v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            v73 = sub_23E135328();
            v74 = *(_QWORD *)(v73 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v74 + 48))(v12, 1, v73))
            {
              v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v74 + 16))(v11, v12, v73);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v11, 0, 1, v73);
            }
            v77 = *(int *)(v45 + 20);
            v78 = &v11[v77];
            v79 = &v12[v77];
            *(_QWORD *)v78 = *(_QWORD *)v79;
            v78[8] = v79[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v11, 0, 1, v45);
          }
          v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v81 = &v11[v80];
          v82 = &v12[v80];
          *(_QWORD *)v81 = *(_QWORD *)v82;
          *(_DWORD *)(v81 + 7) = *(_DWORD *)(v82 + 7);
          goto LABEL_26;
        case 4u:
          v48 = *((_QWORD *)v12 + 1);
          *(_QWORD *)v11 = *(_QWORD *)v12;
          *((_QWORD *)v11 + 1) = v48;
          v11[16] = v12[16];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 6u:
          v8(v11, v12, v7);
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v83 = v9[6];
      v84 = (_QWORD *)((char *)a1 + v83);
      v85 = (_QWORD *)((char *)a2 + v83);
      v86 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v87 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v84, v85, v87);
          v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v84 + *(int *)(v88 + 48)) = *(_QWORD *)((char *)v85 + *(int *)(v88 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 1u:
          *v84 = *v85;
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 2u:
          *v84 = *v85;
          swift_bridgeObjectRetain();
          v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v90 = (char *)v84 + v89;
          v91 = (char *)v85 + v89;
          v92 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
          goto LABEL_33;
        case 3u:
        case 4u:
        case 5u:
          *v84 = *v85;
          swift_retain();
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + v9[7]) = *((_BYTE *)a2 + v9[7]);
      v93 = v9[8];
      v94 = (_QWORD *)((char *)a1 + v93);
      v95 = (_QWORD *)((char *)a2 + v93);
      v96 = v95[1];
      *v94 = *v95;
      v94[1] = v96;
      *(_WORD *)((char *)a1 + v9[9]) = *(_WORD *)((char *)a2 + v9[9]);
      *((_BYTE *)a1 + v9[10]) = *((_BYTE *)a2 + v9[10]);
      *((_BYTE *)a1 + v9[11]) = *((_BYTE *)a2 + v9[11]);
      v97 = type metadata accessor for DisplayControl(0);
      *((_BYTE *)a1 + *(int *)(v97 + 20)) = *((_BYTE *)a2 + *(int *)(v97 + 20));
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23E0CA004(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  result = swift_getEnumCaseMultiPayload();
  if (result >= 2)
  {
    if ((_DWORD)result != 2)
      return result;
    v3 = sub_23E134C80();
    v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v4(a1, v3);
    v5 = type metadata accessor for Device.Control(0);
    v6 = a1 + *(int *)(v5 + 20);
    type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        swift_bridgeObjectRelease();
        v8 = type metadata accessor for IconDescriptor();
        v9 = v7 + *(int *)(v8 + 20);
        v10 = sub_23E135910();
        v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
        v11(v9, v10);
        v12 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v11(v12 + *(int *)(v8 + 20), v10);
        v13 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        swift_release();
        v14 = v7 + *(int *)(v13 + 24);
        type metadata accessor for ControlTextModifier.Config(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
          goto LABEL_12;
        if (!EnumCaseMultiPayload)
        {
          v16 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v17 = sub_23E134C20();
          goto LABEL_11;
        }
        break;
      case 1u:
        v18 = type metadata accessor for Device.Control.IncrementalState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v6, 1, v18))
        {
          v19 = sub_23E13534C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v6, v19);
        }
        v20 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        swift_bridgeObjectRelease();
        v21 = type metadata accessor for IconDescriptor();
        v22 = v20 + *(int *)(v21 + 20);
        v23 = sub_23E135910();
        v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8);
        v24(v22, v23);
        v25 = v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v24(v25 + *(int *)(v21 + 20), v23);
        v26 = type metadata accessor for Device.Control.IncrementalConfig(0);
        swift_release();
        swift_release();
        v16 = v20 + *(int *)(v26 + 28);
        v17 = sub_23E135520();
LABEL_11:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
        break;
      case 2u:
      case 4u:
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        v27 = type metadata accessor for Device.Control.ColorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v6, 1, v27))
        {
          v28 = sub_23E135328();
          v29 = *(_QWORD *)(v28 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v6, 1, v28))
            (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v6, v28);
        }
        break;
      case 6u:
        v4(v6, v3);
        break;
      default:
        break;
    }
    v30 = a1 + *(int *)(v5 + 24);
    type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v31 = sub_23E1356DC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(v30, v31);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        v32 = v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v33 = sub_23E134E9C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_release();
        break;
      default:
        return swift_bridgeObjectRelease();
    }
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23E0CA40C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void (*v5)(_BYTE *, _BYTE *, uint64_t);
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _BYTE *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  void (*v96)(char *, _BYTE *, uint64_t);
  char *v97;
  char *v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v4 = sub_23E134C80();
    v5 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
    v5(a1, a2, v4);
    v6 = (int *)type metadata accessor for Device.Control(0);
    v7 = v6[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v8 = *v9;
        v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v12 = &v8[v11];
        v13 = &v9[v11];
        v14 = *(_QWORD *)&v9[v11];
        v15 = *((_QWORD *)v13 + 1);
        *v12 = v14;
        v12[1] = v15;
        v16 = type metadata accessor for IconDescriptor();
        v17 = *(int *)(v16 + 20);
        v97 = (char *)v12 + v17;
        v100 = v16;
        v18 = &v13[v17];
        v19 = sub_23E135910();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v97, v18, v19);
        v21 = v20;
        v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v23 = (_QWORD *)((char *)v12 + v22);
        v24 = &v13[v22];
        v25 = v24[1];
        *v23 = *v24;
        v23[1] = v25;
        v26 = *(int *)(v100 + 20);
        v27 = (char *)v23 + v26;
        v28 = (char *)v24 + v26;
        swift_bridgeObjectRetain();
        v21(v27, v28, v19);
        v29 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v12 + *(int *)(v29 + 20)) = *(_QWORD *)&v13[*(int *)(v29 + 20)];
        v30 = *(int *)(v29 + 24);
        v31 = (_QWORD *)((char *)v12 + v30);
        v32 = &v13[v30];
        v33 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v73 = v32[1];
          *v31 = *v32;
          v31[1] = v73;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          *v31 = *v32;
          v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v36 = (char *)v31 + v35;
          v37 = (char *)v32 + v35;
          v38 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_24;
      case 1u:
        v39 = type metadata accessor for Device.Control.IncrementalState(0);
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v40 + 48))(v9, 1, v39))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v46 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v8, v9, v46);
          v8[*(int *)(v39 + 20)] = v9[*(int *)(v39 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v8, 0, 1, v39);
        }
        v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v48 = &v8[v47];
        v49 = &v9[v47];
        v50 = *(_QWORD *)&v9[v47 + 8];
        *v48 = *(_QWORD *)&v9[v47];
        v48[1] = v50;
        v51 = type metadata accessor for IconDescriptor();
        v52 = *(int *)(v51 + 20);
        v98 = (char *)v48 + v52;
        v101 = v51;
        v53 = &v49[v52];
        v54 = sub_23E135910();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v98, v53, v54);
        v56 = v55;
        v57 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v58 = (_QWORD *)((char *)v48 + v57);
        v59 = &v49[v57];
        v60 = v59[1];
        *v58 = *v59;
        v58[1] = v60;
        v61 = *(int *)(v101 + 20);
        v62 = (char *)v58 + v61;
        v63 = (char *)v59 + v61;
        swift_bridgeObjectRetain();
        v56(v62, v63, v54);
        v64 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v48 + v64[5]) = *(_QWORD *)&v49[v64[5]];
        *(_QWORD *)((char *)v48 + v64[6]) = *(_QWORD *)&v49[v64[6]];
        v65 = v64[7];
        v99 = &v49[v65];
        v102 = (char *)v48 + v65;
        v66 = sub_23E135520();
        v96 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
        swift_retain();
        swift_retain();
        v96(v102, v99, v66);
        *(_QWORD *)((char *)v48 + v64[8]) = *(_QWORD *)&v49[v64[8]];
        *(_QWORD *)((char *)v48 + v64[9]) = *(_QWORD *)&v49[v64[9]];
        *(_QWORD *)((char *)v48 + v64[10]) = *(_QWORD *)&v49[v64[10]];
        v67 = v64[11];
        v68 = (char *)v48 + v67;
        v69 = &v49[v67];
        v68[8] = v69[8];
        *(_QWORD *)v68 = *(_QWORD *)v69;
        goto LABEL_24;
      case 2u:
        *(_QWORD *)v8 = *(_QWORD *)v9;
        v8[8] = v9[8];
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v8[24] = v9[24];
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 3u:
        v42 = type metadata accessor for Device.Control.ColorState(0);
        v43 = *(_QWORD *)(v42 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v43 + 48))(v9, 1, v42))
        {
          v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
        }
        else
        {
          v70 = sub_23E135328();
          v71 = *(_QWORD *)(v70 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v71 + 48))(v9, 1, v70))
          {
            v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v71 + 16))(v8, v9, v70);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v8, 0, 1, v70);
          }
          v74 = *(int *)(v42 + 20);
          v75 = &v8[v74];
          v76 = &v9[v74];
          *(_QWORD *)v75 = *(_QWORD *)v76;
          v75[8] = v76[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v8, 0, 1, v42);
        }
        v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v78 = &v8[v77];
        v79 = &v9[v77];
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *(_DWORD *)(v78 + 7) = *(_DWORD *)(v79 + 7);
        goto LABEL_24;
      case 4u:
        v45 = *((_QWORD *)v9 + 1);
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *((_QWORD *)v8 + 1) = v45;
        v8[16] = v9[16];
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 6u:
        v5(v8, v9, v4);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
    v80 = v6[6];
    v81 = (_QWORD *)((char *)a1 + v80);
    v82 = (_QWORD *)((char *)a2 + v80);
    v83 = type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v84 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v84 - 8) + 16))(v81, v82, v84);
        v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v81 + *(int *)(v85 + 48)) = *(_QWORD *)((char *)v82 + *(int *)(v85 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 1u:
        *v81 = *v82;
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 2u:
        *v81 = *v82;
        swift_bridgeObjectRetain();
        v86 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v87 = (char *)v81 + v86;
        v88 = (char *)v82 + v86;
        v89 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v87, v88, v89);
        goto LABEL_31;
      case 3u:
      case 4u:
      case 5u:
        *v81 = *v82;
        swift_retain();
LABEL_31:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
        break;
    }
    *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    v90 = v6[8];
    v91 = (_QWORD *)((char *)a1 + v90);
    v92 = (_QWORD *)((char *)a2 + v90);
    v93 = v92[1];
    *v91 = *v92;
    v91[1] = v93;
    *(_WORD *)((char *)a1 + v6[9]) = *(_WORD *)((char *)a2 + v6[9]);
    *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
    *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
    v94 = type metadata accessor for DisplayControl(0);
    *((_BYTE *)a1 + *(int *)(v94 + 20)) = *((_BYTE *)a2 + *(int *)(v94 + 20));
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23E0CAC68(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  void (*v5)(_BYTE *, _BYTE *, uint64_t);
  int *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  _BYTE *v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  int v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  _QWORD *v89;
  uint64_t v90;
  void (*v92)(char *, _BYTE *, uint64_t);
  char *v93;
  char *v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for DisplayControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v4 = sub_23E134C80();
      v5 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      v6 = (int *)type metadata accessor for Device.Control(0);
      v7 = v6[5];
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v8 = *v9;
          v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v12 = &v8[v11];
          v13 = &v9[v11];
          *v12 = *(_QWORD *)&v9[v11];
          v12[1] = *(_QWORD *)&v9[v11 + 8];
          v14 = type metadata accessor for IconDescriptor();
          v15 = *(int *)(v14 + 20);
          v93 = (char *)v12 + v15;
          v96 = v14;
          v16 = &v13[v15];
          v17 = sub_23E135910();
          v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
          swift_bridgeObjectRetain();
          v18(v93, v16, v17);
          v19 = v18;
          v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v21 = (_QWORD *)((char *)v12 + v20);
          v22 = &v13[v20];
          *v21 = *v22;
          v21[1] = v22[1];
          v23 = *(int *)(v96 + 20);
          v24 = (char *)v21 + v23;
          v25 = (char *)v22 + v23;
          swift_bridgeObjectRetain();
          v19(v24, v25, v17);
          v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v12 + *(int *)(v26 + 20)) = *(_QWORD *)&v13[*(int *)(v26 + 20)];
          v27 = *(int *)(v26 + 24);
          v28 = (_QWORD *)((char *)v12 + v27);
          v29 = &v13[v27];
          v30 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            *v28 = *v29;
            v28[1] = v29[1];
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            *v28 = *v29;
            v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v33 = (char *)v28 + v32;
            v34 = (char *)v29 + v32;
            v35 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_25;
        case 1u:
          v36 = type metadata accessor for Device.Control.IncrementalState(0);
          v37 = *(_QWORD *)(v36 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v37 + 48))(v9, 1, v36))
          {
            v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          }
          else
          {
            v43 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v8, v9, v43);
            v8[*(int *)(v36 + 20)] = v9[*(int *)(v36 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v8, 0, 1, v36);
          }
          v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v45 = &v8[v44];
          v46 = &v9[v44];
          *v45 = *(_QWORD *)&v9[v44];
          v45[1] = *(_QWORD *)&v9[v44 + 8];
          v47 = type metadata accessor for IconDescriptor();
          v48 = *(int *)(v47 + 20);
          v94 = (char *)v45 + v48;
          v97 = v47;
          v49 = &v46[v48];
          v50 = sub_23E135910();
          v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          v51(v94, v49, v50);
          v52 = v51;
          v53 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v54 = (_QWORD *)((char *)v45 + v53);
          v55 = &v46[v53];
          *v54 = *v55;
          v54[1] = v55[1];
          v56 = *(int *)(v97 + 20);
          v57 = (char *)v54 + v56;
          v58 = (char *)v55 + v56;
          swift_bridgeObjectRetain();
          v52(v57, v58, v50);
          v59 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v45 + v59[5]) = *(_QWORD *)&v46[v59[5]];
          *(_QWORD *)((char *)v45 + v59[6]) = *(_QWORD *)&v46[v59[6]];
          v60 = v59[7];
          v95 = &v46[v60];
          v98 = (char *)v45 + v60;
          v61 = sub_23E135520();
          v92 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
          swift_retain();
          swift_retain();
          v92(v98, v95, v61);
          *(_QWORD *)((char *)v45 + v59[8]) = *(_QWORD *)&v46[v59[8]];
          *(_QWORD *)((char *)v45 + v59[9]) = *(_QWORD *)&v46[v59[9]];
          *(_QWORD *)((char *)v45 + v59[10]) = *(_QWORD *)&v46[v59[10]];
          v62 = v59[11];
          v63 = (char *)v45 + v62;
          v64 = &v46[v62];
          v65 = v64[8];
          *(_QWORD *)v63 = *(_QWORD *)v64;
          v63[8] = v65;
          goto LABEL_25;
        case 2u:
          v39 = *(_QWORD *)v9;
          v8[8] = v9[8];
          *(_QWORD *)v8 = v39;
          *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
          v8[24] = v9[24];
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 3u:
          v40 = type metadata accessor for Device.Control.ColorState(0);
          v41 = *(_QWORD *)(v40 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v9, 1, v40))
          {
            v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
          }
          else
          {
            v66 = sub_23E135328();
            v67 = *(_QWORD *)(v66 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v67 + 48))(v9, 1, v66))
            {
              v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v67 + 16))(v8, v9, v66);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v8, 0, 1, v66);
            }
            v69 = *(int *)(v40 + 20);
            v70 = &v8[v69];
            v71 = &v9[v69];
            v72 = *(_QWORD *)v71;
            v70[8] = v71[8];
            *(_QWORD *)v70 = v72;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v8, 0, 1, v40);
          }
          v73 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v74 = &v8[v73];
          v75 = &v9[v73];
          v76 = *(_DWORD *)(v75 + 7);
          *(_QWORD *)v74 = *(_QWORD *)v75;
          *(_DWORD *)(v74 + 7) = v76;
          goto LABEL_25;
        case 4u:
          *(_QWORD *)v8 = *(_QWORD *)v9;
          *((_QWORD *)v8 + 1) = *((_QWORD *)v9 + 1);
          v8[16] = v9[16];
          swift_bridgeObjectRetain();
          goto LABEL_25;
        case 6u:
          v5(v8, v9, v4);
LABEL_25:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          break;
      }
      v77 = v6[6];
      v78 = (_QWORD *)((char *)a1 + v77);
      v79 = (_QWORD *)((char *)a2 + v77);
      v80 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v81 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v81 - 8) + 16))(v78, v79, v81);
          v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v78 + *(int *)(v82 + 48)) = *(_QWORD *)((char *)v79 + *(int *)(v82 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_32;
        case 1u:
          *v78 = *v79;
          swift_bridgeObjectRetain();
          goto LABEL_32;
        case 2u:
          *v78 = *v79;
          swift_bridgeObjectRetain();
          v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v84 = (char *)v78 + v83;
          v85 = (char *)v79 + v83;
          v86 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 16))(v84, v85, v86);
          goto LABEL_32;
        case 3u:
        case 4u:
        case 5u:
          *v78 = *v79;
          swift_retain();
LABEL_32:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
      v87 = v6[8];
      v88 = (_QWORD *)((char *)a1 + v87);
      v89 = (_QWORD *)((char *)a2 + v87);
      *v88 = *v89;
      v88[1] = v89[1];
      *(_WORD *)((char *)a1 + v6[9]) = *(_WORD *)((char *)a2 + v6[9]);
      *((_BYTE *)a1 + v6[10]) = *((_BYTE *)a2 + v6[10]);
      *((_BYTE *)a1 + v6[11]) = *((_BYTE *)a2 + v6[11]);
      v90 = type metadata accessor for DisplayControl(0);
      *((_BYTE *)a1 + *(int *)(v90 + 20)) = *((_BYTE *)a2 + *(int *)(v90 + 20));
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_BYTE *sub_23E0CB514(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  int *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_23E134C80();
    v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = (int *)type metadata accessor for Device.Control(0);
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    v12 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v10 = *v11;
        v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v14 = &v10[v13];
        v15 = &v11[v13];
        *(_OWORD *)&v10[v13] = *(_OWORD *)&v11[v13];
        v16 = type metadata accessor for IconDescriptor();
        v17 = *(int *)(v16 + 20);
        v18 = &v14[v17];
        v19 = &v15[v17];
        v20 = sub_23E135910();
        v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
        v21(v18, v19, v20);
        v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v23 = &v14[v22];
        v24 = &v15[v22];
        *v23 = *v24;
        v21((_BYTE *)v23 + *(int *)(v16 + 20), (_BYTE *)v24 + *(int *)(v16 + 20), v20);
        v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v14[*(int *)(v25 + 20)] = *(_QWORD *)&v15[*(int *)(v25 + 20)];
        v26 = *(int *)(v25 + 24);
        v27 = &v14[v26];
        v28 = &v15[v26];
        v29 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          *v27 = *v28;
          v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v37 = (char *)v27 + v36;
          v38 = (char *)v28 + v36;
          v39 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_20;
      case 1u:
        v30 = type metadata accessor for Device.Control.IncrementalState(0);
        v31 = *(_QWORD *)(v30 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v11, 1, v30))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          v40 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v10, v11, v40);
          v10[*(int *)(v30 + 20)] = v11[*(int *)(v30 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v10, 0, 1, v30);
        }
        v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v42 = &v10[v41];
        v43 = &v11[v41];
        *(_OWORD *)&v10[v41] = *(_OWORD *)&v11[v41];
        v44 = type metadata accessor for IconDescriptor();
        v45 = *(int *)(v44 + 20);
        v46 = &v42[v45];
        v47 = &v43[v45];
        v48 = sub_23E135910();
        v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
        v49(v46, v47, v48);
        v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v51 = &v42[v50];
        v52 = &v43[v50];
        *v51 = *v52;
        v49((_BYTE *)v51 + *(int *)(v44 + 20), (_BYTE *)v52 + *(int *)(v44 + 20), v48);
        v53 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v42[v53[5]] = *(_QWORD *)&v43[v53[5]];
        *(_QWORD *)&v42[v53[6]] = *(_QWORD *)&v43[v53[6]];
        v54 = v53[7];
        v55 = &v42[v54];
        v56 = &v43[v54];
        v57 = sub_23E135520();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
        *(_QWORD *)&v42[v53[8]] = *(_QWORD *)&v43[v53[8]];
        *(_QWORD *)&v42[v53[9]] = *(_QWORD *)&v43[v53[9]];
        *(_QWORD *)&v42[v53[10]] = *(_QWORD *)&v43[v53[10]];
        v58 = v53[11];
        v59 = &v42[v58];
        v60 = &v43[v58];
        v59[8] = v60[8];
        *(_QWORD *)v59 = *(_QWORD *)v60;
        goto LABEL_20;
      case 3u:
        v33 = type metadata accessor for Device.Control.ColorState(0);
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v11, 1, v33))
        {
          v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v61 = sub_23E135328();
          v62 = *(_QWORD *)(v61 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v62 + 48))(v11, 1, v61))
          {
            v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 32))(v10, v11, v61);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v10, 0, 1, v61);
          }
          v64 = *(int *)(v33 + 20);
          v65 = &v10[v64];
          v66 = &v11[v64];
          *(_QWORD *)v65 = *(_QWORD *)v66;
          v65[8] = v66[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v33);
        }
        v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v68 = &v10[v67];
        v69 = &v11[v67];
        *(_QWORD *)v68 = *(_QWORD *)v69;
        *(_DWORD *)(v68 + 7) = *(_DWORD *)(v69 + 7);
        goto LABEL_20;
      case 6u:
        v7(v10, v11, v6);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v70 = v8[6];
    v71 = &a1[v70];
    v72 = &a2[v70];
    v73 = type metadata accessor for Device.Control.Source(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v71 = *v72;
      v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v78 = (char *)v71 + v77;
      v79 = (char *)v72 + v77;
      v80 = sub_23E134E9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
    }
    else
    {
      v75 = sub_23E1356DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v71, v72, v75);
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      *(_QWORD *)((char *)v71 + *(int *)(v76 + 48)) = *(_QWORD *)((char *)v72 + *(int *)(v76 + 48));
      swift_storeEnumTagMultiPayload();
    }
    a1[v8[7]] = a2[v8[7]];
    *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
    *(_WORD *)&a1[v8[9]] = *(_WORD *)&a2[v8[9]];
    a1[v8[10]] = a2[v8[10]];
    a1[v8[11]] = a2[v8[11]];
    v81 = type metadata accessor for DisplayControl(0);
    a1[*(int *)(v81 + 20)] = a2[*(int *)(v81 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_BYTE *sub_23E0CBBE0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  int *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for DisplayControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_23E134C80();
      v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for Device.Control(0);
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      v12 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v10 = *v11;
          v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v14 = &v10[v13];
          v15 = &v11[v13];
          *(_OWORD *)&v10[v13] = *(_OWORD *)&v11[v13];
          v16 = type metadata accessor for IconDescriptor();
          v17 = *(int *)(v16 + 20);
          v18 = &v14[v17];
          v19 = &v15[v17];
          v20 = sub_23E135910();
          v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
          v21(v18, v19, v20);
          v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v23 = &v14[v22];
          v24 = &v15[v22];
          *v23 = *v24;
          v21((_BYTE *)v23 + *(int *)(v16 + 20), (_BYTE *)v24 + *(int *)(v16 + 20), v20);
          v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v14[*(int *)(v25 + 20)] = *(_QWORD *)&v15[*(int *)(v25 + 20)];
          v26 = *(int *)(v25 + 24);
          v27 = &v14[v26];
          v28 = &v15[v26];
          v29 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          }
          else
          {
            *v27 = *v28;
            v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v37 = (char *)v27 + v36;
            v38 = (char *)v28 + v36;
            v39 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_21;
        case 1u:
          v30 = type metadata accessor for Device.Control.IncrementalState(0);
          v31 = *(_QWORD *)(v30 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v11, 1, v30))
          {
            v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            v40 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v10, v11, v40);
            v10[*(int *)(v30 + 20)] = v11[*(int *)(v30 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v10, 0, 1, v30);
          }
          v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v42 = &v10[v41];
          v43 = &v11[v41];
          *(_OWORD *)&v10[v41] = *(_OWORD *)&v11[v41];
          v44 = type metadata accessor for IconDescriptor();
          v45 = *(int *)(v44 + 20);
          v46 = &v42[v45];
          v47 = &v43[v45];
          v48 = sub_23E135910();
          v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
          v49(v46, v47, v48);
          v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v51 = &v42[v50];
          v52 = &v43[v50];
          *v51 = *v52;
          v49((_BYTE *)v51 + *(int *)(v44 + 20), (_BYTE *)v52 + *(int *)(v44 + 20), v48);
          v53 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v42[v53[5]] = *(_QWORD *)&v43[v53[5]];
          *(_QWORD *)&v42[v53[6]] = *(_QWORD *)&v43[v53[6]];
          v54 = v53[7];
          v55 = &v42[v54];
          v56 = &v43[v54];
          v57 = sub_23E135520();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
          *(_QWORD *)&v42[v53[8]] = *(_QWORD *)&v43[v53[8]];
          *(_QWORD *)&v42[v53[9]] = *(_QWORD *)&v43[v53[9]];
          *(_QWORD *)&v42[v53[10]] = *(_QWORD *)&v43[v53[10]];
          v58 = v53[11];
          v59 = &v42[v58];
          v60 = &v43[v58];
          v59[8] = v60[8];
          *(_QWORD *)v59 = *(_QWORD *)v60;
          goto LABEL_21;
        case 3u:
          v33 = type metadata accessor for Device.Control.ColorState(0);
          v34 = *(_QWORD *)(v33 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v11, 1, v33))
          {
            v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
          }
          else
          {
            v61 = sub_23E135328();
            v62 = *(_QWORD *)(v61 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v62 + 48))(v11, 1, v61))
            {
              v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 32))(v10, v11, v61);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v10, 0, 1, v61);
            }
            v64 = *(int *)(v33 + 20);
            v65 = &v10[v64];
            v66 = &v11[v64];
            *(_QWORD *)v65 = *(_QWORD *)v66;
            v65[8] = v66[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v33);
          }
          v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v68 = &v10[v67];
          v69 = &v11[v67];
          *(_QWORD *)v68 = *(_QWORD *)v69;
          *(_DWORD *)(v68 + 7) = *(_DWORD *)(v69 + 7);
          goto LABEL_21;
        case 6u:
          v7(v10, v11, v6);
LABEL_21:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v70 = v8[6];
      v71 = &a1[v70];
      v72 = &a2[v70];
      v73 = type metadata accessor for Device.Control.Source(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v71 = *v72;
        v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v78 = (char *)v71 + v77;
        v79 = (char *)v72 + v77;
        v80 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
      }
      else
      {
        v75 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v71, v72, v75);
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v71 + *(int *)(v76 + 48)) = *(_QWORD *)((char *)v72 + *(int *)(v76 + 48));
        swift_storeEnumTagMultiPayload();
      }
      a1[v8[7]] = a2[v8[7]];
      *(_OWORD *)&a1[v8[8]] = *(_OWORD *)&a2[v8[8]];
      *(_WORD *)&a1[v8[9]] = *(_WORD *)&a2[v8[9]];
      a1[v8[10]] = a2[v8[10]];
      a1[v8[11]] = a2[v8[11]];
      v81 = type metadata accessor for DisplayControl(0);
      a1[*(int *)(v81 + 20)] = a2[*(int *)(v81 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_23E0CC2C4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DisplayControl(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_23E0CC338(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  int EnumCaseMultiPayload;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, _BYTE *, uint64_t);
  uint64_t v72;
  char *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  _BYTE *v83;
  _BYTE *v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD *v96;
  _QWORD *v97;
  uint64_t v98;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v42 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = sub_23E134C80();
    v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Device.Control(0);
    v10 = v9[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v104 = v6;
        *v11 = *v12;
        v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v15 = &v11[v14];
        v16 = &v12[v14];
        v17 = *(_QWORD *)&v12[v14];
        v18 = *((_QWORD *)v16 + 1);
        *v15 = v17;
        v15[1] = v18;
        v101 = type metadata accessor for IconDescriptor();
        v19 = *(int *)(v101 + 20);
        v20 = (char *)v15 + v19;
        v21 = &v16[v19];
        v22 = sub_23E135910();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        v24 = v23;
        v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v26 = (_QWORD *)((char *)v15 + v25);
        v27 = &v16[v25];
        v28 = v27[1];
        *v26 = *v27;
        v26[1] = v28;
        v29 = *(int *)(v101 + 20);
        v30 = (char *)v26 + v29;
        v31 = (char *)v27 + v29;
        swift_bridgeObjectRetain();
        v24(v30, v31, v22);
        v32 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v15 + *(int *)(v32 + 20)) = *(_QWORD *)&v16[*(int *)(v32 + 20)];
        v33 = *(int *)(v32 + 24);
        v34 = (_QWORD *)((char *)v15 + v33);
        v35 = &v16[v33];
        v36 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v78 = v35[1];
          *v34 = *v35;
          v34[1] = v78;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          *v34 = *v35;
          v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v39 = (char *)v34 + v38;
          v40 = (char *)v35 + v38;
          v41 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v39, v40, v41);
          swift_storeEnumTagMultiPayload();
        }
        v6 = v104;
        goto LABEL_25;
      case 1u:
        v43 = type metadata accessor for Device.Control.IncrementalState(0);
        v44 = *(_QWORD *)(v43 - 8);
        v105 = v6;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48))(v12, 1, v43))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          v50 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v11, v12, v50);
          v11[*(int *)(v43 + 20)] = v12[*(int *)(v43 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v11, 0, 1, v43);
        }
        v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v52 = &v11[v51];
        v53 = &v12[v51];
        v54 = *(_QWORD *)&v12[v51 + 8];
        *v52 = *(_QWORD *)&v12[v51];
        v52[1] = v54;
        v102 = type metadata accessor for IconDescriptor();
        v55 = *(int *)(v102 + 20);
        v56 = (char *)v52 + v55;
        v57 = &v53[v55];
        v58 = sub_23E135910();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(v56, v57, v58);
        v60 = v59;
        v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v62 = (_QWORD *)((char *)v52 + v61);
        v63 = &v53[v61];
        v64 = v63[1];
        *v62 = *v63;
        v62[1] = v64;
        v65 = *(int *)(v102 + 20);
        v66 = (char *)v62 + v65;
        v67 = (char *)v63 + v65;
        swift_bridgeObjectRetain();
        v60(v66, v67, v58);
        v68 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v52 + v68[5]) = *(_QWORD *)&v53[v68[5]];
        *(_QWORD *)((char *)v52 + v68[6]) = *(_QWORD *)&v53[v68[6]];
        v69 = v68[7];
        v100 = &v53[v69];
        v103 = (char *)v52 + v69;
        v70 = sub_23E135520();
        v71 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
        swift_retain();
        swift_retain();
        v71(v103, v100, v70);
        *(_QWORD *)((char *)v52 + v68[8]) = *(_QWORD *)&v53[v68[8]];
        *(_QWORD *)((char *)v52 + v68[9]) = *(_QWORD *)&v53[v68[9]];
        *(_QWORD *)((char *)v52 + v68[10]) = *(_QWORD *)&v53[v68[10]];
        v72 = v68[11];
        v73 = (char *)v52 + v72;
        v74 = &v53[v72];
        v73[8] = v74[8];
        *(_QWORD *)v73 = *(_QWORD *)v74;
        swift_storeEnumTagMultiPayload();
        v6 = v105;
        break;
      case 2u:
        *(_QWORD *)v11 = *(_QWORD *)v12;
        v11[8] = v12[8];
        *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
        v11[24] = v12[24];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 3u:
        v46 = type metadata accessor for Device.Control.ColorState(0);
        v47 = *(_QWORD *)(v46 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48))(v12, 1, v46))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v75 = sub_23E135328();
          v76 = *(_QWORD *)(v75 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v76 + 48))(v12, 1, v75))
          {
            v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 16))(v11, v12, v75);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v11, 0, 1, v75);
          }
          v79 = *(int *)(v46 + 20);
          v80 = &v11[v79];
          v81 = &v12[v79];
          *(_QWORD *)v80 = *(_QWORD *)v81;
          v80[8] = v81[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v11, 0, 1, v46);
        }
        v82 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v83 = &v11[v82];
        v84 = &v12[v82];
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *(_DWORD *)(v83 + 7) = *(_DWORD *)(v84 + 7);
        goto LABEL_25;
      case 4u:
        v49 = *((_QWORD *)v12 + 1);
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *((_QWORD *)v11 + 1) = v49;
        v11[16] = v12[16];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 6u:
        v8(v11, v12, v7);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v85 = v9[6];
    v86 = (_QWORD *)((char *)a1 + v85);
    v87 = (_QWORD *)((char *)a2 + v85);
    v88 = type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v89 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v89 - 8) + 16))(v86, v87, v89);
        v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v86 + *(int *)(v90 + 48)) = *(_QWORD *)((char *)v87 + *(int *)(v90 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 1u:
        *v86 = *v87;
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 2u:
        *v86 = *v87;
        swift_bridgeObjectRetain();
        v91 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v92 = (char *)v86 + v91;
        v93 = (char *)v87 + v91;
        v94 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v94 - 8) + 16))(v92, v93, v94);
        goto LABEL_32;
      case 3u:
      case 4u:
      case 5u:
        *v86 = *v87;
        swift_retain();
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
        break;
    }
    *((_BYTE *)a1 + v9[7]) = *((_BYTE *)a2 + v9[7]);
    v95 = v9[8];
    v96 = (_QWORD *)((char *)a1 + v95);
    v97 = (_QWORD *)((char *)a2 + v95);
    v98 = v97[1];
    *v96 = *v97;
    v96[1] = v98;
    *(_WORD *)((char *)a1 + v9[9]) = *(_WORD *)((char *)a2 + v9[9]);
    *((_BYTE *)a1 + v9[10]) = *((_BYTE *)a2 + v9[10]);
    *((_BYTE *)a1 + v9[11]) = *((_BYTE *)a2 + v9[11]);
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)a2 + *(int *)(v6 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23E0CCB58(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = sub_23E134C80();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(a1, v2);
  v4 = type metadata accessor for Device.Control(0);
  v5 = a1 + *(int *)(v4 + 20);
  type metadata accessor for Device.Control.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
      swift_bridgeObjectRelease();
      v7 = type metadata accessor for IconDescriptor();
      v8 = v6 + *(int *)(v7 + 20);
      v9 = sub_23E135910();
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
      v10(v8, v9);
      v11 = v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v10(v11 + *(int *)(v7 + 20), v9);
      v12 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v13 = v6 + *(int *)(v12 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
        goto LABEL_10;
      if (!EnumCaseMultiPayload)
      {
        v15 = v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v16 = sub_23E134C20();
        goto LABEL_9;
      }
      break;
    case 1u:
      v17 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v5, 1, v17))
      {
        v18 = sub_23E13534C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v5, v18);
      }
      v19 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
      swift_bridgeObjectRelease();
      v20 = type metadata accessor for IconDescriptor();
      v21 = v19 + *(int *)(v20 + 20);
      v22 = sub_23E135910();
      v23 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8);
      v23(v21, v22);
      v24 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v23(v24 + *(int *)(v20 + 20), v22);
      v25 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v15 = v19 + *(int *)(v25 + 28);
      v16 = sub_23E135520();
LABEL_9:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      break;
    case 2u:
    case 4u:
LABEL_10:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      v26 = type metadata accessor for Device.Control.ColorState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v5, 1, v26))
      {
        v27 = sub_23E135328();
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v5, 1, v27))
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v5, v27);
      }
      break;
    case 6u:
      v3(v5, v2);
      break;
    default:
      break;
  }
  v29 = a1 + *(int *)(v4 + 24);
  type metadata accessor for Device.Control.Source(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v30 = sub_23E1356DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      swift_bridgeObjectRelease();
      break;
    case 1u:
      swift_bridgeObjectRelease();
      break;
    case 2u:
      swift_bridgeObjectRelease();
      v31 = v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v32 = sub_23E134E9C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
      break;
    case 3u:
    case 4u:
    case 5u:
      swift_release();
      break;
    default:
      return swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23E0CCF34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  int EnumCaseMultiPayload;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, _BYTE *, uint64_t);
  uint64_t v70;
  char *v71;
  _BYTE *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;

  v6 = sub_23E134C80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Device.Control(0);
  v9 = v8[5];
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  v12 = type metadata accessor for Device.Control.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v102 = a3;
      *v10 = *v11;
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
      v14 = &v10[v13];
      v15 = &v11[v13];
      v16 = *(_QWORD *)&v11[v13];
      v17 = *((_QWORD *)v15 + 1);
      *v14 = v16;
      v14[1] = v17;
      v99 = type metadata accessor for IconDescriptor();
      v18 = *(int *)(v99 + 20);
      v19 = (char *)v14 + v18;
      v20 = &v15[v18];
      v21 = sub_23E135910();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
      v23 = v22;
      v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v25 = (_QWORD *)((char *)v14 + v24);
      v26 = &v15[v24];
      v27 = v26[1];
      *v25 = *v26;
      v25[1] = v27;
      v28 = *(int *)(v99 + 20);
      v29 = (char *)v25 + v28;
      v30 = (char *)v26 + v28;
      swift_bridgeObjectRetain();
      v23(v29, v30, v21);
      v31 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      *(_QWORD *)((char *)v14 + *(int *)(v31 + 20)) = *(_QWORD *)&v15[*(int *)(v31 + 20)];
      v32 = *(int *)(v31 + 24);
      v33 = (_QWORD *)((char *)v14 + v32);
      v34 = &v15[v32];
      v35 = type metadata accessor for ControlTextModifier.Config(0);
      swift_retain();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v76 = v34[1];
        *v33 = *v34;
        v33[1] = v76;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        *v33 = *v34;
        v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v38 = (char *)v33 + v37;
        v39 = (char *)v34 + v37;
        v40 = sub_23E134C20();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
        swift_storeEnumTagMultiPayload();
      }
      a3 = v102;
      goto LABEL_23;
    case 1u:
      v41 = type metadata accessor for Device.Control.IncrementalState(0);
      v42 = *(_QWORD *)(v41 - 8);
      v103 = a3;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v42 + 48))(v11, 1, v41))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        v48 = sub_23E13534C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(v10, v11, v48);
        v10[*(int *)(v41 + 20)] = v11[*(int *)(v41 + 20)];
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v10, 0, 1, v41);
      }
      v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
      v50 = &v10[v49];
      v51 = &v11[v49];
      v52 = *(_QWORD *)&v11[v49 + 8];
      *v50 = *(_QWORD *)&v11[v49];
      v50[1] = v52;
      v100 = type metadata accessor for IconDescriptor();
      v53 = *(int *)(v100 + 20);
      v54 = (char *)v50 + v53;
      v55 = &v51[v53];
      v56 = sub_23E135910();
      v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
      swift_bridgeObjectRetain();
      v57(v54, v55, v56);
      v58 = v57;
      v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v60 = (_QWORD *)((char *)v50 + v59);
      v61 = &v51[v59];
      v62 = v61[1];
      *v60 = *v61;
      v60[1] = v62;
      v63 = *(int *)(v100 + 20);
      v64 = (char *)v60 + v63;
      v65 = (char *)v61 + v63;
      swift_bridgeObjectRetain();
      v58(v64, v65, v56);
      v66 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
      *(_QWORD *)((char *)v50 + v66[5]) = *(_QWORD *)&v51[v66[5]];
      *(_QWORD *)((char *)v50 + v66[6]) = *(_QWORD *)&v51[v66[6]];
      v67 = v66[7];
      v98 = &v51[v67];
      v101 = (char *)v50 + v67;
      v68 = sub_23E135520();
      v69 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v68 - 8) + 16);
      swift_retain();
      swift_retain();
      v69(v101, v98, v68);
      *(_QWORD *)((char *)v50 + v66[8]) = *(_QWORD *)&v51[v66[8]];
      *(_QWORD *)((char *)v50 + v66[9]) = *(_QWORD *)&v51[v66[9]];
      *(_QWORD *)((char *)v50 + v66[10]) = *(_QWORD *)&v51[v66[10]];
      v70 = v66[11];
      v71 = (char *)v50 + v70;
      v72 = &v51[v70];
      v71[8] = v72[8];
      *(_QWORD *)v71 = *(_QWORD *)v72;
      swift_storeEnumTagMultiPayload();
      a3 = v103;
      break;
    case 2u:
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v10[8] = v11[8];
      *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
      v10[24] = v11[24];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 3u:
      v44 = type metadata accessor for Device.Control.ColorState(0);
      v45 = *(_QWORD *)(v44 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v45 + 48))(v11, 1, v44))
      {
        v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        v73 = sub_23E135328();
        v74 = *(_QWORD *)(v73 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v74 + 48))(v11, 1, v73))
        {
          v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v74 + 16))(v10, v11, v73);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v10, 0, 1, v73);
        }
        v77 = *(int *)(v44 + 20);
        v78 = &v10[v77];
        v79 = &v11[v77];
        *(_QWORD *)v78 = *(_QWORD *)v79;
        v78[8] = v79[8];
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v10, 0, 1, v44);
      }
      v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
      v81 = &v10[v80];
      v82 = &v11[v80];
      *(_QWORD *)v81 = *(_QWORD *)v82;
      *(_DWORD *)(v81 + 7) = *(_DWORD *)(v82 + 7);
      goto LABEL_23;
    case 4u:
      v47 = *((_QWORD *)v11 + 1);
      *(_QWORD *)v10 = *(_QWORD *)v11;
      *((_QWORD *)v10 + 1) = v47;
      v10[16] = v11[16];
      swift_bridgeObjectRetain();
      goto LABEL_23;
    case 6u:
      v7((uint64_t)v10, (uint64_t)v11, v6);
LABEL_23:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      break;
  }
  v83 = v8[6];
  v84 = (_QWORD *)(a1 + v83);
  v85 = (_QWORD *)(a2 + v83);
  v86 = type metadata accessor for Device.Control.Source(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v87 = sub_23E1356DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v87 - 8) + 16))(v84, v85, v87);
      v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      *(_QWORD *)((char *)v84 + *(int *)(v88 + 48)) = *(_QWORD *)((char *)v85 + *(int *)(v88 + 48));
      swift_bridgeObjectRetain();
      goto LABEL_30;
    case 1u:
      *v84 = *v85;
      swift_bridgeObjectRetain();
      goto LABEL_30;
    case 2u:
      *v84 = *v85;
      swift_bridgeObjectRetain();
      v89 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v90 = (char *)v84 + v89;
      v91 = (char *)v85 + v89;
      v92 = sub_23E134E9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16))(v90, v91, v92);
      goto LABEL_30;
    case 3u:
    case 4u:
    case 5u:
      *v84 = *v85;
      swift_retain();
LABEL_30:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      break;
  }
  *(_BYTE *)(a1 + v8[7]) = *(_BYTE *)(a2 + v8[7]);
  v93 = v8[8];
  v94 = (_QWORD *)(a1 + v93);
  v95 = (_QWORD *)(a2 + v93);
  v96 = v95[1];
  *v94 = *v95;
  v94[1] = v96;
  *(_WORD *)(a1 + v8[9]) = *(_WORD *)(a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *(_BYTE *)(a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E0CD724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  int EnumCaseMultiPayload;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _BYTE *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  uint64_t v56;
  _QWORD *v57;
  _QWORD *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, _BYTE *, uint64_t);
  uint64_t v66;
  char *v67;
  _BYTE *v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _BYTE *v74;
  _BYTE *v75;
  uint64_t v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  int v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = type metadata accessor for Device.Control(0);
  v9 = (int *)v8;
  if (a1 != a2)
  {
    v10 = *(int *)(v8 + 20);
    v11 = (_BYTE *)(a1 + v10);
    v12 = (_BYTE *)(a2 + v10);
    sub_23DF73E54(a1 + v10, type metadata accessor for Device.Control.Kind);
    v13 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v102 = a3;
        *v11 = *v12;
        v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v15 = &v11[v14];
        v16 = &v12[v14];
        *v15 = *(_QWORD *)&v12[v14];
        v15[1] = *(_QWORD *)&v12[v14 + 8];
        v99 = type metadata accessor for IconDescriptor();
        v17 = *(int *)(v99 + 20);
        v18 = (char *)v15 + v17;
        v19 = &v16[v17];
        v20 = sub_23E135910();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        v22 = v21;
        v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v24 = (_QWORD *)((char *)v15 + v23);
        v25 = &v16[v23];
        *v24 = *v25;
        v24[1] = v25[1];
        v26 = *(int *)(v99 + 20);
        v27 = (char *)v24 + v26;
        v28 = (char *)v25 + v26;
        swift_bridgeObjectRetain();
        v22(v27, v28, v20);
        v29 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v15 + *(int *)(v29 + 20)) = *(_QWORD *)&v16[*(int *)(v29 + 20)];
        v30 = *(int *)(v29 + 24);
        v31 = (_QWORD *)((char *)v15 + v30);
        v32 = &v16[v30];
        v33 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          *v31 = *v32;
          v31[1] = v32[1];
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          *v31 = *v32;
          v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v36 = (char *)v31 + v35;
          v37 = (char *)v32 + v35;
          v38 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
          swift_storeEnumTagMultiPayload();
        }
        a3 = v102;
        goto LABEL_24;
      case 1u:
        v39 = type metadata accessor for Device.Control.IncrementalState(0);
        v40 = *(_QWORD *)(v39 - 8);
        v103 = a3;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v40 + 48))(v12, 1, v39))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          v46 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v11, v12, v46);
          v11[*(int *)(v39 + 20)] = v12[*(int *)(v39 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v11, 0, 1, v39);
        }
        v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v48 = &v11[v47];
        v49 = &v12[v47];
        *v48 = *(_QWORD *)&v12[v47];
        v48[1] = *(_QWORD *)&v12[v47 + 8];
        v100 = type metadata accessor for IconDescriptor();
        v50 = *(int *)(v100 + 20);
        v51 = (char *)v48 + v50;
        v52 = &v49[v50];
        v53 = sub_23E135910();
        v54 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
        swift_bridgeObjectRetain();
        v54(v51, v52, v53);
        v55 = v54;
        v56 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v57 = (_QWORD *)((char *)v48 + v56);
        v58 = &v49[v56];
        *v57 = *v58;
        v57[1] = v58[1];
        v59 = *(int *)(v100 + 20);
        v60 = (char *)v57 + v59;
        v61 = (char *)v58 + v59;
        swift_bridgeObjectRetain();
        v55(v60, v61, v53);
        v62 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v48 + v62[5]) = *(_QWORD *)&v49[v62[5]];
        *(_QWORD *)((char *)v48 + v62[6]) = *(_QWORD *)&v49[v62[6]];
        v63 = v62[7];
        v98 = &v49[v63];
        v101 = (char *)v48 + v63;
        v64 = sub_23E135520();
        v65 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        swift_retain();
        swift_retain();
        v65(v101, v98, v64);
        *(_QWORD *)((char *)v48 + v62[8]) = *(_QWORD *)&v49[v62[8]];
        *(_QWORD *)((char *)v48 + v62[9]) = *(_QWORD *)&v49[v62[9]];
        *(_QWORD *)((char *)v48 + v62[10]) = *(_QWORD *)&v49[v62[10]];
        v66 = v62[11];
        v67 = (char *)v48 + v66;
        v68 = &v49[v66];
        v69 = v68[8];
        *(_QWORD *)v67 = *(_QWORD *)v68;
        v67[8] = v69;
        swift_storeEnumTagMultiPayload();
        a3 = v103;
        break;
      case 2u:
        v42 = *(_QWORD *)v12;
        v11[8] = v12[8];
        *(_QWORD *)v11 = v42;
        *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
        v11[24] = v12[24];
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 3u:
        v43 = type metadata accessor for Device.Control.ColorState(0);
        v44 = *(_QWORD *)(v43 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48))(v12, 1, v43))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          v70 = sub_23E135328();
          v71 = *(_QWORD *)(v70 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v71 + 48))(v12, 1, v70))
          {
            v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v71 + 16))(v11, v12, v70);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v11, 0, 1, v70);
          }
          v73 = *(int *)(v43 + 20);
          v74 = &v11[v73];
          v75 = &v12[v73];
          v76 = *(_QWORD *)v75;
          v74[8] = v75[8];
          *(_QWORD *)v74 = v76;
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v11, 0, 1, v43);
        }
        v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v78 = &v11[v77];
        v79 = &v12[v77];
        v80 = *(_DWORD *)(v79 + 7);
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *(_DWORD *)(v78 + 7) = v80;
        goto LABEL_24;
      case 4u:
        *(_QWORD *)v11 = *(_QWORD *)v12;
        *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
        v11[16] = v12[16];
        swift_bridgeObjectRetain();
        goto LABEL_24;
      case 6u:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v11, v12, v6);
LABEL_24:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v81 = v9[6];
    v82 = (_QWORD *)(a1 + v81);
    v83 = (_QWORD *)(a2 + v81);
    sub_23DF73E54(a1 + v81, type metadata accessor for Device.Control.Source);
    v84 = type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v85 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v82, v83, v85);
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v82 + *(int *)(v86 + 48)) = *(_QWORD *)((char *)v83 + *(int *)(v86 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 1u:
        *v82 = *v83;
        swift_bridgeObjectRetain();
        goto LABEL_31;
      case 2u:
        *v82 = *v83;
        swift_bridgeObjectRetain();
        v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v88 = (char *)v82 + v87;
        v89 = (char *)v83 + v87;
        v90 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
        goto LABEL_31;
      case 3u:
      case 4u:
      case 5u:
        *v82 = *v83;
        swift_retain();
LABEL_31:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        break;
    }
  }
  *(_BYTE *)(a1 + v9[7]) = *(_BYTE *)(a2 + v9[7]);
  v91 = v9[8];
  v92 = (_QWORD *)(a1 + v91);
  v93 = (_QWORD *)(a2 + v91);
  *v92 = *v93;
  v92[1] = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v94 = v9[9];
  v95 = (_BYTE *)(a1 + v94);
  v96 = (_BYTE *)(a2 + v94);
  *v95 = *v96;
  v95[1] = v96[1];
  *(_BYTE *)(a1 + v9[10]) = *(_BYTE *)(a2 + v9[10]);
  *(_BYTE *)(a1 + v9[11]) = *(_BYTE *)(a2 + v9[11]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23E0CDF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;
  void (*v21)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  void (*v49)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  int *v53;
  uint64_t v54;
  _BYTE *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  uint64_t v73;
  int EnumCaseMultiPayload;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v82;

  v6 = sub_23E134C80();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = (int *)type metadata accessor for Device.Control(0);
  v9 = v8[5];
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  v12 = type metadata accessor for Device.Control.Kind(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v82 = a3;
      *v10 = *v11;
      v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
      v14 = &v10[v13];
      v15 = &v11[v13];
      *(_OWORD *)&v10[v13] = *(_OWORD *)&v11[v13];
      v16 = type metadata accessor for IconDescriptor();
      v17 = *(int *)(v16 + 20);
      v18 = &v14[v17];
      v19 = &v15[v17];
      v20 = sub_23E135910();
      v21 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 32);
      v21(v18, v19, v20);
      v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v23 = &v14[v22];
      v24 = &v15[v22];
      *v23 = *v24;
      v21((_BYTE *)v23 + *(int *)(v16 + 20), (_BYTE *)v24 + *(int *)(v16 + 20), v20);
      v25 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      *(_QWORD *)&v14[*(int *)(v25 + 20)] = *(_QWORD *)&v15[*(int *)(v25 + 20)];
      v26 = *(int *)(v25 + 24);
      v27 = &v14[v26];
      v28 = &v15[v26];
      v29 = type metadata accessor for ControlTextModifier.Config(0);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        *v27 = *v28;
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v37 = (char *)v27 + v36;
        v38 = (char *)v28 + v36;
        v39 = sub_23E134C20();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_13;
    case 1u:
      v30 = type metadata accessor for Device.Control.IncrementalState(0);
      v31 = *(_QWORD *)(v30 - 8);
      v82 = a3;
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v11, 1, v30))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v40 = sub_23E13534C();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v10, v11, v40);
        v10[*(int *)(v30 + 20)] = v11[*(int *)(v30 + 20)];
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v10, 0, 1, v30);
      }
      v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
      v42 = &v10[v41];
      v43 = &v11[v41];
      *(_OWORD *)&v10[v41] = *(_OWORD *)&v11[v41];
      v44 = type metadata accessor for IconDescriptor();
      v45 = *(int *)(v44 + 20);
      v46 = &v42[v45];
      v47 = &v43[v45];
      v48 = sub_23E135910();
      v49 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v48 - 8) + 32);
      v49(v46, v47, v48);
      v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      v51 = &v42[v50];
      v52 = &v43[v50];
      *v51 = *v52;
      v49((_BYTE *)v51 + *(int *)(v44 + 20), (_BYTE *)v52 + *(int *)(v44 + 20), v48);
      v53 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
      *(_QWORD *)&v42[v53[5]] = *(_QWORD *)&v43[v53[5]];
      *(_QWORD *)&v42[v53[6]] = *(_QWORD *)&v43[v53[6]];
      v54 = v53[7];
      v55 = &v42[v54];
      v56 = &v43[v54];
      v57 = sub_23E135520();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v57 - 8) + 32))(v55, v56, v57);
      *(_QWORD *)&v42[v53[8]] = *(_QWORD *)&v43[v53[8]];
      *(_QWORD *)&v42[v53[9]] = *(_QWORD *)&v43[v53[9]];
      *(_QWORD *)&v42[v53[10]] = *(_QWORD *)&v43[v53[10]];
      v58 = v53[11];
      v59 = &v42[v58];
      v60 = &v43[v58];
      v59[8] = v60[8];
      *(_QWORD *)v59 = *(_QWORD *)v60;
LABEL_13:
      swift_storeEnumTagMultiPayload();
      a3 = v82;
      break;
    case 3u:
      v33 = type metadata accessor for Device.Control.ColorState(0);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v34 + 48))(v11, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        v61 = sub_23E135328();
        v62 = *(_QWORD *)(v61 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v62 + 48))(v11, 1, v61))
        {
          v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v62 + 32))(v10, v11, v61);
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v10, 0, 1, v61);
        }
        v64 = *(int *)(v33 + 20);
        v65 = &v10[v64];
        v66 = &v11[v64];
        *(_QWORD *)v65 = *(_QWORD *)v66;
        v65[8] = v66[8];
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v10, 0, 1, v33);
      }
      v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
      v68 = &v10[v67];
      v69 = &v11[v67];
      *(_QWORD *)v68 = *(_QWORD *)v69;
      *(_DWORD *)(v68 + 7) = *(_DWORD *)(v69 + 7);
      goto LABEL_19;
    case 6u:
      v7((uint64_t)v10, (uint64_t)v11, v6);
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      break;
  }
  v70 = v8[6];
  v71 = (_QWORD *)(a1 + v70);
  v72 = (_QWORD *)(a2 + v70);
  v73 = type metadata accessor for Device.Control.Source(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *v71 = *v72;
    v77 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
    v78 = (char *)v71 + v77;
    v79 = (char *)v72 + v77;
    v80 = sub_23E134E9C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v78, v79, v80);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    v75 = sub_23E1356DC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v71, v72, v75);
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
    *(_QWORD *)((char *)v71 + *(int *)(v76 + 48)) = *(_QWORD *)((char *)v72 + *(int *)(v76 + 48));
    swift_storeEnumTagMultiPayload();
  }
  *(_BYTE *)(a1 + v8[7]) = *(_BYTE *)(a2 + v8[7]);
  *(_OWORD *)(a1 + v8[8]) = *(_OWORD *)(a2 + v8[8]);
  *(_WORD *)(a1 + v8[9]) = *(_WORD *)(a2 + v8[9]);
  *(_BYTE *)(a1 + v8[10]) = *(_BYTE *)(a2 + v8[10]);
  *(_BYTE *)(a1 + v8[11]) = *(_BYTE *)(a2 + v8[11]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23E0CE61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  int *v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  int EnumCaseMultiPayload;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v88;

  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = type metadata accessor for Device.Control(0);
  v9 = (int *)v8;
  if (a1 != a2)
  {
    v10 = *(int *)(v8 + 20);
    v11 = (_BYTE *)(a1 + v10);
    v12 = (_BYTE *)(a2 + v10);
    sub_23DF73E54(a1 + v10, type metadata accessor for Device.Control.Kind);
    v13 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v88 = a3;
        *v11 = *v12;
        v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v15 = &v11[v14];
        v16 = &v12[v14];
        *(_OWORD *)&v11[v14] = *(_OWORD *)&v12[v14];
        v17 = type metadata accessor for IconDescriptor();
        v18 = *(int *)(v17 + 20);
        v19 = &v15[v18];
        v20 = &v16[v18];
        v21 = sub_23E135910();
        v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
        v22(v19, v20, v21);
        v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v24 = &v15[v23];
        v25 = &v16[v23];
        *v24 = *v25;
        v22((_BYTE *)v24 + *(int *)(v17 + 20), (_BYTE *)v25 + *(int *)(v17 + 20), v21);
        v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v15[*(int *)(v26 + 20)] = *(_QWORD *)&v16[*(int *)(v26 + 20)];
        v27 = *(int *)(v26 + 24);
        v28 = &v15[v27];
        v29 = &v16[v27];
        v30 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          *v28 = *v29;
          v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v38 = (char *)v28 + v37;
          v39 = (char *)v29 + v37;
          v40 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_14;
      case 1u:
        v31 = type metadata accessor for Device.Control.IncrementalState(0);
        v32 = *(_QWORD *)(v31 - 8);
        v88 = a3;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v31))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v41 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v11, v12, v41);
          v11[*(int *)(v31 + 20)] = v12[*(int *)(v31 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v11, 0, 1, v31);
        }
        v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v43 = &v11[v42];
        v44 = &v12[v42];
        *(_OWORD *)&v11[v42] = *(_OWORD *)&v12[v42];
        v45 = type metadata accessor for IconDescriptor();
        v46 = *(int *)(v45 + 20);
        v47 = &v43[v46];
        v48 = &v44[v46];
        v49 = sub_23E135910();
        v50 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32);
        v50(v47, v48, v49);
        v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v52 = &v43[v51];
        v53 = &v44[v51];
        *v52 = *v53;
        v50((_BYTE *)v52 + *(int *)(v45 + 20), (_BYTE *)v53 + *(int *)(v45 + 20), v49);
        v54 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v43[v54[5]] = *(_QWORD *)&v44[v54[5]];
        *(_QWORD *)&v43[v54[6]] = *(_QWORD *)&v44[v54[6]];
        v55 = v54[7];
        v56 = &v43[v55];
        v57 = &v44[v55];
        v58 = sub_23E135520();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        *(_QWORD *)&v43[v54[8]] = *(_QWORD *)&v44[v54[8]];
        *(_QWORD *)&v43[v54[9]] = *(_QWORD *)&v44[v54[9]];
        *(_QWORD *)&v43[v54[10]] = *(_QWORD *)&v44[v54[10]];
        v59 = v54[11];
        v60 = &v43[v59];
        v61 = &v44[v59];
        v60[8] = v61[8];
        *(_QWORD *)v60 = *(_QWORD *)v61;
LABEL_14:
        swift_storeEnumTagMultiPayload();
        a3 = v88;
        break;
      case 3u:
        v34 = type metadata accessor for Device.Control.ColorState(0);
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v34))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v62 = sub_23E135328();
          v63 = *(_QWORD *)(v62 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v63 + 48))(v12, 1, v62))
          {
            v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 32))(v11, v12, v62);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v11, 0, 1, v62);
          }
          v65 = *(int *)(v34 + 20);
          v66 = &v11[v65];
          v67 = &v12[v65];
          *(_QWORD *)v66 = *(_QWORD *)v67;
          v66[8] = v67[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v34);
        }
        v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v69 = &v11[v68];
        v70 = &v12[v68];
        *(_QWORD *)v69 = *(_QWORD *)v70;
        *(_DWORD *)(v69 + 7) = *(_DWORD *)(v70 + 7);
        goto LABEL_20;
      case 6u:
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v11, v12, v6);
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v71 = v9[6];
    v72 = (_QWORD *)(a1 + v71);
    v73 = (_QWORD *)(a2 + v71);
    sub_23DF73E54(a1 + v71, type metadata accessor for Device.Control.Source);
    v74 = type metadata accessor for Device.Control.Source(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v72 = *v73;
      v78 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v79 = (char *)v72 + v78;
      v80 = (char *)v73 + v78;
      v81 = sub_23E134E9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      v76 = sub_23E1356DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v72, v73, v76);
      v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      *(_QWORD *)((char *)v72 + *(int *)(v77 + 48)) = *(_QWORD *)((char *)v73 + *(int *)(v77 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  *(_BYTE *)(a1 + v9[7]) = *(_BYTE *)(a2 + v9[7]);
  v82 = v9[8];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (uint64_t *)(a2 + v82);
  v86 = *v84;
  v85 = v84[1];
  *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  *(_WORD *)(a1 + v9[9]) = *(_WORD *)(a2 + v9[9]);
  *(_BYTE *)(a1 + v9[10]) = *(_BYTE *)(a2 + v9[10]);
  *(_BYTE *)(a1 + v9[11]) = *(_BYTE *)(a2 + v9[11]);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_23E0CECE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0CECEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for Device.Control(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 4)
    return v9 - 3;
  else
    return 0;
}

uint64_t sub_23E0CED64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0CED70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Device.Control(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  return result;
}

uint64_t sub_23E0CEDE8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device.Control(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23E0CEE58(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  int *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  int EnumCaseMultiPayload;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  _QWORD *v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v80;
  _BYTE *v81;
  _BYTE *v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  _QWORD *v111;
  uint64_t v112;
  void (*v113)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v114;
  _BYTE *v115;
  uint64_t v116;
  _QWORD *v117;
  _BYTE *v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  _QWORD *v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _BYTE *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  void (*v152)(char *, char *, uint64_t);
  uint64_t v153;
  _QWORD *v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  int *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  _BYTE *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  int *v169;
  void (*v170)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v171;
  _BYTE *v172;
  _BYTE *v173;
  uint64_t v174;
  _BYTE *v175;
  _BYTE *v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  _QWORD *v193;
  uint64_t v194;
  char *v196;
  char *v197;
  void (*v198)(char *, _BYTE *, uint64_t);
  char *v199;
  char *v200;
  void (*v201)(char *, _BYTE *, uint64_t);
  uint64_t v202;
  uint64_t v203;
  _BYTE *v204;
  char *v205;
  char *v206;
  _BYTE *v207;
  int *v208;
  char *v209;
  _QWORD *v210;
  int *v211;
  char *v212;
  char *v213;
  int *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  int *__dst;
  int *__dsta;
  int *__dstb;
  _BYTE *__dstc;
  char *__dstd;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v8 = sub_23E134C80();
      v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(a1, a2, v8);
      v10 = (int *)type metadata accessor for Device.Control(0);
      v11 = v10[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          __dst = v10;
          *v12 = *v13;
          v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v16 = &v12[v15];
          v17 = &v13[v15];
          v18 = *(_QWORD *)&v13[v15];
          v19 = *((_QWORD *)v17 + 1);
          *v16 = v18;
          v16[1] = v19;
          v20 = type metadata accessor for IconDescriptor();
          v21 = *(int *)(v20 + 20);
          v22 = (char *)v16 + v21;
          v205 = &v17[v21];
          v215 = v20;
          v23 = sub_23E135910();
          v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v22, v205, v23);
          v25 = v24;
          v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v27 = (_QWORD *)((char *)v16 + v26);
          v28 = &v17[v26];
          v29 = v28[1];
          *v27 = *v28;
          v27[1] = v29;
          v30 = *(int *)(v215 + 20);
          v31 = (char *)v27 + v30;
          v32 = (char *)v28 + v30;
          swift_bridgeObjectRetain();
          v25(v31, v32, v23);
          v33 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v16 + *(int *)(v33 + 20)) = *(_QWORD *)&v17[*(int *)(v33 + 20)];
          v34 = *(int *)(v33 + 24);
          v35 = (_QWORD *)((char *)v16 + v34);
          v36 = &v17[v34];
          v37 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            v78 = v36[1];
            *v35 = *v36;
            v35[1] = v78;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
          }
          else
          {
            *v35 = *v36;
            v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v40 = (char *)v35 + v39;
            v41 = (char *)v36 + v39;
            v42 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
            swift_storeEnumTagMultiPayload();
          }
          v10 = __dst;
          goto LABEL_27;
        case 1u:
          v43 = type metadata accessor for Device.Control.IncrementalState(0);
          v44 = *(_QWORD *)(v43 - 8);
          __dsta = v10;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48))(v13, 1, v43))
          {
            v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
          }
          else
          {
            v50 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v12, v13, v50);
            v12[*(int *)(v43 + 20)] = v13[*(int *)(v43 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v12, 0, 1, v43);
          }
          v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v52 = &v12[v51];
          v53 = &v13[v51];
          v54 = *(_QWORD *)&v13[v51 + 8];
          *v52 = *(_QWORD *)&v13[v51];
          v52[1] = v54;
          v55 = type metadata accessor for IconDescriptor();
          v56 = *(int *)(v55 + 20);
          v206 = (char *)v52 + v56;
          v216 = v55;
          v57 = &v53[v56];
          v58 = sub_23E135910();
          v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v59(v206, v57, v58);
          v60 = v59;
          v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v62 = (_QWORD *)((char *)v52 + v61);
          v63 = &v53[v61];
          v64 = v63[1];
          *v62 = *v63;
          v62[1] = v64;
          v65 = *(int *)(v216 + 20);
          v66 = (char *)v62 + v65;
          v67 = (char *)v63 + v65;
          swift_bridgeObjectRetain();
          v60(v66, v67, v58);
          v68 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v52 + v68[5]) = *(_QWORD *)&v53[v68[5]];
          *(_QWORD *)((char *)v52 + v68[6]) = *(_QWORD *)&v53[v68[6]];
          v69 = v68[7];
          v207 = &v53[v69];
          v217 = (char *)v52 + v69;
          v70 = sub_23E135520();
          v201 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
          swift_retain();
          swift_retain();
          v201(v217, v207, v70);
          *(_QWORD *)((char *)v52 + v68[8]) = *(_QWORD *)&v53[v68[8]];
          *(_QWORD *)((char *)v52 + v68[9]) = *(_QWORD *)&v53[v68[9]];
          *(_QWORD *)((char *)v52 + v68[10]) = *(_QWORD *)&v53[v68[10]];
          v71 = v68[11];
          v72 = (char *)v52 + v71;
          v73 = &v53[v71];
          v72[8] = v73[8];
          *(_QWORD *)v72 = *(_QWORD *)v73;
          swift_storeEnumTagMultiPayload();
          v10 = __dsta;
          break;
        case 2u:
          *(_QWORD *)v12 = *(_QWORD *)v13;
          v12[8] = v13[8];
          *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
          v12[24] = v13[24];
          swift_bridgeObjectRetain();
          goto LABEL_27;
        case 3u:
          v46 = type metadata accessor for Device.Control.ColorState(0);
          v47 = *(_QWORD *)(v46 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v47 + 48))(v13, 1, v46))
          {
            v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          }
          else
          {
            __dstb = v10;
            v74 = v12;
            v75 = sub_23E135328();
            v76 = *(_QWORD *)(v75 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v76 + 48))(v13, 1, v75))
            {
              v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v12 = v74;
              memcpy(v74, v13, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v76 + 16))(v74, v13, v75);
              v79 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v76 + 56);
              v12 = v74;
              v79(v74, 0, 1, v75);
            }
            v80 = *(int *)(v46 + 20);
            v81 = &v12[v80];
            v82 = &v13[v80];
            *(_QWORD *)v81 = *(_QWORD *)v82;
            v81[8] = v82[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v12, 0, 1, v46);
            v10 = __dstb;
          }
          v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v84 = &v12[v83];
          v85 = &v13[v83];
          *(_QWORD *)v84 = *(_QWORD *)v85;
          *(_DWORD *)(v84 + 7) = *(_DWORD *)(v85 + 7);
          goto LABEL_27;
        case 4u:
          v49 = *((_QWORD *)v13 + 1);
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *((_QWORD *)v12 + 1) = v49;
          v12[16] = v13[16];
          swift_bridgeObjectRetain();
          goto LABEL_27;
        case 6u:
          v9(v12, v13, v8);
LABEL_27:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
          break;
      }
      v86 = v10[6];
      v87 = (_QWORD *)((char *)a1 + v86);
      v88 = (_QWORD *)((char *)a2 + v86);
      v89 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v90 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v87, v88, v90);
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v87 + *(int *)(v91 + 48)) = *(_QWORD *)((char *)v88 + *(int *)(v91 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 1u:
          *v87 = *v88;
          swift_bridgeObjectRetain();
          goto LABEL_34;
        case 2u:
          *v87 = *v88;
          swift_bridgeObjectRetain();
          v92 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v93 = (char *)v87 + v92;
          v94 = (char *)v88 + v92;
          v95 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16))(v93, v94, v95);
          goto LABEL_34;
        case 3u:
        case 4u:
        case 5u:
          *v87 = *v88;
          swift_retain();
LABEL_34:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + v10[7]) = *((_BYTE *)a2 + v10[7]);
      v96 = v10[8];
      v97 = (_QWORD *)((char *)a1 + v96);
      v98 = (_QWORD *)((char *)a2 + v96);
      v99 = v98[1];
      *v97 = *v98;
      v97[1] = v99;
      *(_WORD *)((char *)a1 + v10[9]) = *(_WORD *)((char *)a2 + v10[9]);
      *((_BYTE *)a1 + v10[10]) = *((_BYTE *)a2 + v10[10]);
      *((_BYTE *)a1 + v10[11]) = *((_BYTE *)a2 + v10[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    v100 = type metadata accessor for Device.ControlGroup(0);
    v101 = *(int *)(v100 + 20);
    v102 = (_QWORD *)((char *)a1 + v101);
    v103 = (_QWORD *)((char *)a2 + v101);
    v104 = v103[1];
    *v102 = *v103;
    v102[1] = v104;
    v105 = *(int *)(v100 + 24);
    v106 = (_QWORD *)((char *)a1 + v105);
    v107 = (_QWORD *)((char *)a2 + v105);
    v108 = v107[1];
    *v106 = *v107;
    v106[1] = v108;
    v109 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v110 = (_QWORD *)((char *)a1 + v109);
    v111 = (_QWORD *)((char *)a2 + v109);
    type metadata accessor for DisplayControlGroup.LayoutType(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v112 = sub_23E134C80();
      v113 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
      v113(v110, v111, v112);
      v219 = type metadata accessor for Device.Control(0);
      v114 = *(int *)(v219 + 20);
      __dstc = (char *)v110 + v114;
      v115 = (char *)v111 + v114;
      v218 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *__dstc = *v115;
          v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v117 = &__dstc[v116];
          v118 = &v115[v116];
          v119 = *(_QWORD *)&v115[v116 + 8];
          *v117 = *(_QWORD *)&v115[v116];
          v117[1] = v119;
          v208 = (int *)type metadata accessor for IconDescriptor();
          v120 = v208[5];
          v196 = &v118[v120];
          v199 = (char *)v117 + v120;
          v202 = sub_23E135910();
          v121 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v202 - 8) + 16);
          swift_bridgeObjectRetain();
          v121(v199, v196, v202);
          v122 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v123 = (_QWORD *)((char *)v117 + v122);
          v124 = &v118[v122];
          v125 = v124[1];
          *v123 = *v124;
          v123[1] = v125;
          v126 = v208[5];
          v209 = (char *)v123 + v126;
          v127 = (char *)v124 + v126;
          swift_bridgeObjectRetain();
          v121(v209, v127, v202);
          v128 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v117 + *(int *)(v128 + 20)) = *(_QWORD *)&v118[*(int *)(v128 + 20)];
          v129 = *(int *)(v128 + 24);
          v210 = (_QWORD *)((char *)v117 + v129);
          v130 = &v118[v129];
          v131 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v132 = swift_getEnumCaseMultiPayload();
          if (v132 == 1)
          {
            v168 = v130[1];
            *v210 = *v130;
            v210[1] = v168;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v132)
          {
            memcpy(v210, v130, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
          }
          else
          {
            *v210 = *v130;
            v133 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v134 = (char *)v210 + v133;
            v135 = (char *)v130 + v133;
            v136 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(v134, v135, v136);
            swift_storeEnumTagMultiPayload();
          }
          v169 = (int *)v219;
          swift_storeEnumTagMultiPayload();
          goto LABEL_62;
        case 1u:
          v137 = type metadata accessor for Device.Control.IncrementalState(0);
          v138 = *(_QWORD *)(v137 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v138 + 48))(v115, 1, v137))
          {
            v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            v140 = __dstc;
            memcpy(__dstc, v115, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
          }
          else
          {
            v146 = sub_23E13534C();
            v140 = __dstc;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(__dstc, v115, v146);
            __dstc[*(int *)(v137 + 20)] = v115[*(int *)(v137 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v138 + 56))(__dstc, 0, 1, v137);
          }
          v147 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v148 = &v140[v147];
          v149 = &v115[v147];
          v150 = *(_QWORD *)&v115[v147 + 8];
          *v148 = *(_QWORD *)&v115[v147];
          v148[1] = v150;
          v211 = (int *)type metadata accessor for IconDescriptor();
          v151 = v211[5];
          v197 = &v149[v151];
          v200 = (char *)v148 + v151;
          v203 = sub_23E135910();
          v152 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16);
          swift_bridgeObjectRetain();
          v152(v200, v197, v203);
          v153 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v154 = (_QWORD *)((char *)v148 + v153);
          v155 = &v149[v153];
          v156 = v155[1];
          *v154 = *v155;
          v154[1] = v156;
          v157 = v211[5];
          v158 = (char *)v154 + v157;
          v212 = (char *)v155 + v157;
          swift_bridgeObjectRetain();
          v152(v158, v212, v203);
          v159 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v148 + v159[5]) = *(_QWORD *)&v149[v159[5]];
          *(_QWORD *)((char *)v148 + v159[6]) = *(_QWORD *)&v149[v159[6]];
          v160 = v159[7];
          v204 = &v149[v160];
          v213 = (char *)v148 + v160;
          v161 = sub_23E135520();
          v198 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v161 - 8) + 16);
          swift_retain();
          swift_retain();
          v198(v213, v204, v161);
          *(_QWORD *)((char *)v148 + v159[8]) = *(_QWORD *)&v149[v159[8]];
          *(_QWORD *)((char *)v148 + v159[9]) = *(_QWORD *)&v149[v159[9]];
          *(_QWORD *)((char *)v148 + v159[10]) = *(_QWORD *)&v149[v159[10]];
          v162 = v159[11];
          v163 = (char *)v148 + v162;
          v164 = &v149[v162];
          v163[8] = v164[8];
          *(_QWORD *)v163 = *(_QWORD *)v164;
          goto LABEL_60;
        case 2u:
          *(_QWORD *)__dstc = *(_QWORD *)v115;
          __dstc[8] = v115[8];
          *((_QWORD *)__dstc + 2) = *((_QWORD *)v115 + 2);
          __dstc[24] = v115[24];
          swift_bridgeObjectRetain();
          goto LABEL_60;
        case 3u:
          v141 = type metadata accessor for Device.Control.ColorState(0);
          v142 = *(_QWORD *)(v141 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v142 + 48))(v115, 1, v141))
          {
            v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            v144 = __dstc;
            memcpy(__dstc, v115, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
          }
          else
          {
            v214 = (int *)v141;
            v165 = sub_23E135328();
            v166 = *(_QWORD *)(v165 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v166 + 48))(v115, 1, v165))
            {
              v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v144 = __dstc;
              memcpy(__dstc, v115, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v166 + 16))(__dstc, v115, v165);
              v170 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v166 + 56);
              v144 = __dstc;
              v170(__dstc, 0, 1, v165);
            }
            v171 = v214[5];
            v172 = &v144[v171];
            v173 = &v115[v171];
            *(_QWORD *)v172 = *(_QWORD *)v173;
            v172[8] = v173[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t))(v142 + 56))(v144, 0, 1);
          }
          v174 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v175 = &v144[v174];
          v176 = &v115[v174];
          *(_QWORD *)v175 = *(_QWORD *)v176;
          *(_DWORD *)(v175 + 7) = *(_DWORD *)(v176 + 7);
          goto LABEL_60;
        case 4u:
          v145 = *((_QWORD *)v115 + 1);
          *(_QWORD *)__dstc = *(_QWORD *)v115;
          *((_QWORD *)__dstc + 1) = v145;
          __dstc[16] = v115[16];
          swift_bridgeObjectRetain();
          goto LABEL_60;
        case 6u:
          v113(__dstc, v115, v112);
LABEL_60:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(__dstc, v115, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
          break;
      }
      v169 = (int *)v219;
LABEL_62:
      v177 = v169[6];
      v178 = (_QWORD *)((char *)v110 + v177);
      v179 = (_QWORD *)((char *)v111 + v177);
      v180 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v181 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v181 - 8) + 16))(v178, v179, v181);
          v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v178 + *(int *)(v182 + 48)) = *(_QWORD *)((char *)v179 + *(int *)(v182 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_68;
        case 1u:
          *v178 = *v179;
          swift_bridgeObjectRetain();
          goto LABEL_68;
        case 2u:
          *v178 = *v179;
          swift_bridgeObjectRetain();
          v183 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          __dstd = (char *)v178 + v183;
          v184 = (char *)v179 + v183;
          v185 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(__dstd, v184, v185);
          goto LABEL_68;
        case 3u:
        case 4u:
        case 5u:
          *v178 = *v179;
          swift_retain();
LABEL_68:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v180 - 8) + 64));
          break;
      }
      *((_BYTE *)v110 + v169[7]) = *((_BYTE *)v111 + v169[7]);
      v186 = v169[8];
      v187 = (_QWORD *)((char *)v110 + v186);
      v188 = (_QWORD *)((char *)v111 + v186);
      v189 = v188[1];
      *v187 = *v188;
      v187[1] = v189;
      *(_WORD *)((char *)v110 + v169[9]) = *(_WORD *)((char *)v111 + v169[9]);
      *((_BYTE *)v110 + v169[10]) = *((_BYTE *)v111 + v169[10]);
      *((_BYTE *)v110 + v169[11]) = *((_BYTE *)v111 + v169[11]);
      v190 = type metadata accessor for DisplayControl(0);
      *((_BYTE *)v110 + *(int *)(v190 + 20)) = *((_BYTE *)v111 + *(int *)(v190 + 20));
    }
    else
    {
      *v110 = *v111;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    v191 = a3[7];
    v192 = (_QWORD *)((char *)a1 + v191);
    v193 = (_QWORD *)((char *)a2 + v191);
    v194 = v193[1];
    *v192 = *v193;
    v192[1] = v194;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_23E0CFF94(uint64_t a1, uint64_t a2)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  type metadata accessor for Device.ControlGroup.LayoutType(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload != 2)
      goto LABEL_23;
    v5 = sub_23E134C80();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v6(a1, v5);
    v7 = type metadata accessor for Device.Control(0);
    v8 = a1 + *(int *)(v7 + 20);
    type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v9 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        swift_bridgeObjectRelease();
        v10 = type metadata accessor for IconDescriptor();
        v11 = v9 + *(int *)(v10 + 20);
        v12 = sub_23E135910();
        v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
        v13(v11, v12);
        v14 = v9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v13(v14 + *(int *)(v10 + 20), v12);
        v15 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        swift_release();
        v16 = v9 + *(int *)(v15 + 24);
        type metadata accessor for ControlTextModifier.Config(0);
        v17 = swift_getEnumCaseMultiPayload();
        if (v17 == 1)
          goto LABEL_12;
        if (!v17)
        {
          v18 = v16 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v19 = sub_23E134C20();
          goto LABEL_11;
        }
        break;
      case 1u:
        v20 = type metadata accessor for Device.Control.IncrementalState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v8, 1, v20))
        {
          v21 = sub_23E13534C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v8, v21);
        }
        v22 = v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        swift_bridgeObjectRelease();
        v23 = type metadata accessor for IconDescriptor();
        v24 = v22 + *(int *)(v23 + 20);
        v25 = sub_23E135910();
        v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8);
        v26(v24, v25);
        v27 = v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v26(v27 + *(int *)(v23 + 20), v25);
        v28 = type metadata accessor for Device.Control.IncrementalConfig(0);
        swift_release();
        swift_release();
        v18 = v22 + *(int *)(v28 + 28);
        v19 = sub_23E135520();
LABEL_11:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
        break;
      case 2u:
      case 4u:
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        v29 = type metadata accessor for Device.Control.ColorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v8, 1, v29))
        {
          v30 = sub_23E135328();
          v31 = *(_QWORD *)(v30 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v8, 1, v30))
            (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v8, v30);
        }
        break;
      case 6u:
        v6(v8, v5);
        break;
      default:
        break;
    }
    v32 = a1 + *(int *)(v7 + 24);
    type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v33 = sub_23E1356DC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        v34 = v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v35 = sub_23E134E9C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 8))(v34, v35);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_release();
        break;
      default:
        break;
    }
  }
  swift_bridgeObjectRelease();
LABEL_23:
  type metadata accessor for Device.ControlGroup(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = a1 + *(int *)(a2 + 24);
  type metadata accessor for DisplayControlGroup.LayoutType(0);
  v37 = swift_getEnumCaseMultiPayload();
  if (v37 < 2)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (v37 == 2)
  {
    v38 = sub_23E134C80();
    v39 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8);
    v39(v36, v38);
    v40 = type metadata accessor for Device.Control(0);
    v41 = v36 + *(int *)(v40 + 20);
    type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v42 = v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        swift_bridgeObjectRelease();
        v43 = type metadata accessor for IconDescriptor();
        v44 = v42 + *(int *)(v43 + 20);
        v45 = sub_23E135910();
        v46 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8);
        v46(v44, v45);
        v47 = v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v46(v47 + *(int *)(v43 + 20), v45);
        v48 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        swift_release();
        v49 = v42 + *(int *)(v48 + 24);
        type metadata accessor for ControlTextModifier.Config(0);
        v50 = swift_getEnumCaseMultiPayload();
        if (v50 == 1)
          goto LABEL_34;
        if (!v50)
        {
          v51 = v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v52 = sub_23E134C20();
          goto LABEL_33;
        }
        break;
      case 1u:
        v53 = type metadata accessor for Device.Control.IncrementalState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v41, 1, v53))
        {
          v54 = sub_23E13534C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v41, v54);
        }
        v55 = v41 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        swift_bridgeObjectRelease();
        v56 = type metadata accessor for IconDescriptor();
        v57 = v55 + *(int *)(v56 + 20);
        v58 = sub_23E135910();
        v59 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8);
        v59(v57, v58);
        v60 = v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        swift_bridgeObjectRelease();
        v59(v60 + *(int *)(v56 + 20), v58);
        v61 = type metadata accessor for Device.Control.IncrementalConfig(0);
        swift_release();
        swift_release();
        v51 = v55 + *(int *)(v61 + 28);
        v52 = sub_23E135520();
LABEL_33:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v51, v52);
        break;
      case 2u:
      case 4u:
LABEL_34:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        v62 = type metadata accessor for Device.Control.ColorState(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v41, 1, v62))
        {
          v63 = sub_23E135328();
          v64 = *(_QWORD *)(v63 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v41, 1, v63))
            (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v41, v63);
        }
        break;
      case 6u:
        v39(v41, v38);
        break;
      default:
        break;
    }
    v65 = v36 + *(int *)(v40 + 24);
    type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v66 = sub_23E1356DC();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 8))(v65, v66);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        swift_bridgeObjectRelease();
        break;
      case 1u:
        swift_bridgeObjectRelease();
        break;
      case 2u:
        swift_bridgeObjectRelease();
        v67 = v65 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v68 = sub_23E134E9C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v67, v68);
        break;
      case 3u:
      case 4u:
      case 5u:
        swift_release();
        break;
      default:
        goto LABEL_44;
    }
    goto LABEL_44;
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23E0D07B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  int EnumCaseMultiPayload;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  _BYTE *v79;
  _BYTE *v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  _QWORD *v106;
  uint64_t v107;
  void (*v108)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v109;
  _BYTE *v110;
  _BYTE *v111;
  uint64_t v112;
  _QWORD *v113;
  _BYTE *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  _QWORD *v129;
  uint64_t v130;
  int v131;
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, char *, uint64_t);
  uint64_t v151;
  _QWORD *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  int *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  int *v168;
  uint64_t v169;
  _BYTE *v170;
  _BYTE *v171;
  uint64_t v172;
  _BYTE *v173;
  _BYTE *v174;
  uint64_t v175;
  _QWORD *v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  uint64_t v193;
  char *v195;
  char *v196;
  void (*v197)(char *, char *, uint64_t);
  char *v198;
  char *v199;
  void (*v200)(char *, char *, uint64_t);
  void (*v201)(char *, char *, uint64_t);
  char *v202;
  void (*v203)(char *, _BYTE *, uint64_t);
  uint64_t v204;
  uint64_t v205;
  char *v206;
  char *v207;
  char *v208;
  _BYTE *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  _BYTE *__dst;
  _QWORD *__dsta;
  uint64_t v216;
  int *v217;
  int *v218;
  int *v219;

  type metadata accessor for Device.ControlGroup.LayoutType(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_23E134C80();
    v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = (int *)type metadata accessor for Device.Control(0);
    v9 = v8[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v217 = a3;
        *v10 = *v11;
        v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v14 = &v10[v13];
        v15 = &v11[v13];
        v16 = *(_QWORD *)&v11[v13 + 8];
        *v14 = *(_QWORD *)&v11[v13];
        v14[1] = v16;
        v17 = type metadata accessor for IconDescriptor();
        v18 = *(int *)(v17 + 20);
        v207 = (char *)v14 + v18;
        v211 = v17;
        v19 = &v15[v18];
        v20 = sub_23E135910();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v207, v19, v20);
        v22 = v21;
        v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v24 = (_QWORD *)((char *)v14 + v23);
        v25 = &v15[v23];
        v26 = v25[1];
        *v24 = *v25;
        v24[1] = v26;
        v27 = *(int *)(v211 + 20);
        v28 = (char *)v24 + v27;
        v29 = (char *)v25 + v27;
        swift_bridgeObjectRetain();
        v22(v28, v29, v20);
        v30 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v14 + *(int *)(v30 + 20)) = *(_QWORD *)&v15[*(int *)(v30 + 20)];
        v31 = *(int *)(v30 + 24);
        v32 = (_QWORD *)((char *)v14 + v31);
        v33 = &v15[v31];
        v34 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v73 = v33[1];
          *v32 = *v33;
          v32[1] = v73;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (EnumCaseMultiPayload)
        {
          memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
        }
        else
        {
          *v32 = *v33;
          v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v37 = (char *)v32 + v36;
          v38 = (char *)v33 + v36;
          v39 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
          swift_storeEnumTagMultiPayload();
        }
        a3 = v217;
        goto LABEL_25;
      case 1u:
        v40 = type metadata accessor for Device.Control.IncrementalState(0);
        v41 = *(_QWORD *)(v40 - 8);
        v218 = a3;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v41 + 48))(v11, 1, v40))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          v47 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v47 - 8) + 16))(v10, v11, v47);
          v10[*(int *)(v40 + 20)] = v11[*(int *)(v40 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v10, 0, 1, v40);
        }
        v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v49 = &v10[v48];
        v50 = &v11[v48];
        v51 = *(_QWORD *)&v11[v48 + 8];
        *v49 = *(_QWORD *)&v11[v48];
        v49[1] = v51;
        v212 = type metadata accessor for IconDescriptor();
        v52 = *(int *)(v212 + 20);
        v208 = (char *)v49 + v52;
        v53 = &v50[v52];
        v54 = sub_23E135910();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v208, v53, v54);
        v56 = v55;
        v57 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v58 = (_QWORD *)((char *)v49 + v57);
        v59 = &v50[v57];
        v60 = v59[1];
        *v58 = *v59;
        v58[1] = v60;
        v61 = *(int *)(v212 + 20);
        v62 = (char *)v58 + v61;
        v63 = (char *)v59 + v61;
        swift_bridgeObjectRetain();
        v56(v62, v63, v54);
        v64 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v49 + v64[5]) = *(_QWORD *)&v50[v64[5]];
        *(_QWORD *)((char *)v49 + v64[6]) = *(_QWORD *)&v50[v64[6]];
        v65 = v64[7];
        v209 = &v50[v65];
        v213 = (char *)v49 + v65;
        v66 = sub_23E135520();
        v203 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
        swift_retain();
        swift_retain();
        v203(v213, v209, v66);
        *(_QWORD *)((char *)v49 + v64[8]) = *(_QWORD *)&v50[v64[8]];
        *(_QWORD *)((char *)v49 + v64[9]) = *(_QWORD *)&v50[v64[9]];
        *(_QWORD *)((char *)v49 + v64[10]) = *(_QWORD *)&v50[v64[10]];
        v67 = v64[11];
        v68 = (char *)v49 + v67;
        v69 = &v50[v67];
        v68[8] = v69[8];
        *(_QWORD *)v68 = *(_QWORD *)v69;
        swift_storeEnumTagMultiPayload();
        a3 = v218;
        break;
      case 2u:
        *(_QWORD *)v10 = *(_QWORD *)v11;
        v10[8] = v11[8];
        *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
        v10[24] = v11[24];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 3u:
        v43 = type metadata accessor for Device.Control.ColorState(0);
        v44 = *(_QWORD *)(v43 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v44 + 48))(v11, 1, v43))
        {
          v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
        }
        else
        {
          __dst = v10;
          v70 = sub_23E135328();
          v71 = *(_QWORD *)(v70 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v71 + 48))(v11, 1, v70))
          {
            v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            v10 = __dst;
            memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v71 + 16))(__dst, v11, v70);
            v74 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v71 + 56);
            v10 = __dst;
            v74(__dst, 0, 1, v70);
          }
          v75 = *(int *)(v43 + 20);
          v76 = &v10[v75];
          v77 = &v11[v75];
          *(_QWORD *)v76 = *(_QWORD *)v77;
          v76[8] = v77[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v10, 0, 1, v43);
        }
        v78 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v79 = &v10[v78];
        v80 = &v11[v78];
        *(_QWORD *)v79 = *(_QWORD *)v80;
        *(_DWORD *)(v79 + 7) = *(_DWORD *)(v80 + 7);
        goto LABEL_25;
      case 4u:
        v46 = *((_QWORD *)v11 + 1);
        *(_QWORD *)v10 = *(_QWORD *)v11;
        *((_QWORD *)v10 + 1) = v46;
        v10[16] = v11[16];
        swift_bridgeObjectRetain();
        goto LABEL_25;
      case 6u:
        v7(v10, v11, v6);
LABEL_25:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        break;
    }
    v81 = v8[6];
    v82 = (_QWORD *)((char *)a1 + v81);
    v83 = (_QWORD *)((char *)a2 + v81);
    v84 = type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v85 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v85 - 8) + 16))(v82, v83, v85);
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v82 + *(int *)(v86 + 48)) = *(_QWORD *)((char *)v83 + *(int *)(v86 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 1u:
        *v82 = *v83;
        swift_bridgeObjectRetain();
        goto LABEL_32;
      case 2u:
        *v82 = *v83;
        swift_bridgeObjectRetain();
        v87 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v88 = (char *)v82 + v87;
        v89 = (char *)v83 + v87;
        v90 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16))(v88, v89, v90);
        goto LABEL_32;
      case 3u:
      case 4u:
      case 5u:
        *v82 = *v83;
        swift_retain();
LABEL_32:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
        break;
    }
    *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
    v91 = v8[8];
    v92 = (_QWORD *)((char *)a1 + v91);
    v93 = (_QWORD *)((char *)a2 + v91);
    v94 = v93[1];
    *v92 = *v93;
    v92[1] = v94;
    *(_WORD *)((char *)a1 + v8[9]) = *(_WORD *)((char *)a2 + v8[9]);
    *((_BYTE *)a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
    *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
    swift_bridgeObjectRetain();
  }
  else
  {
    *a1 = *a2;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  v95 = type metadata accessor for Device.ControlGroup(0);
  v96 = *(int *)(v95 + 20);
  v97 = (_QWORD *)((char *)a1 + v96);
  v98 = (_QWORD *)((char *)a2 + v96);
  v99 = v98[1];
  *v97 = *v98;
  v97[1] = v99;
  v100 = *(int *)(v95 + 24);
  v101 = (_QWORD *)((char *)a1 + v100);
  v102 = (_QWORD *)((char *)a2 + v100);
  v103 = v102[1];
  *v101 = *v102;
  v101[1] = v103;
  v104 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v105 = (_QWORD *)((char *)a1 + v104);
  v106 = (_QWORD *)((char *)a2 + v104);
  type metadata accessor for DisplayControlGroup.LayoutType(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v219 = a3;
    v107 = sub_23E134C80();
    v108 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
    v108(v105, v106, v107);
    v216 = type metadata accessor for Device.Control(0);
    v109 = *(int *)(v216 + 20);
    v110 = (char *)v105 + v109;
    v111 = (char *)v106 + v109;
    __dsta = (_QWORD *)type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v110 = *v111;
        v112 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v113 = &v110[v112];
        v114 = &v111[v112];
        v115 = *(_QWORD *)&v111[v112 + 8];
        *v113 = *(_QWORD *)&v111[v112];
        v113[1] = v115;
        v204 = type metadata accessor for IconDescriptor();
        v116 = *(int *)(v204 + 20);
        v195 = &v114[v116];
        v198 = (char *)v113 + v116;
        v117 = sub_23E135910();
        v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16);
        v200 = v118;
        swift_bridgeObjectRetain();
        v118(v198, v195, v117);
        v119 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v120 = (_QWORD *)((char *)v113 + v119);
        v121 = &v114[v119];
        v122 = v121[1];
        *v120 = *v121;
        v120[1] = v122;
        v123 = *(int *)(v204 + 20);
        v124 = (char *)v120 + v123;
        v125 = (char *)v121 + v123;
        swift_bridgeObjectRetain();
        v200(v124, v125, v117);
        v126 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v113 + *(int *)(v126 + 20)) = *(_QWORD *)&v114[*(int *)(v126 + 20)];
        v127 = *(int *)(v126 + 24);
        v128 = (_QWORD *)((char *)v113 + v127);
        v129 = &v114[v127];
        v130 = type metadata accessor for ControlTextModifier.Config(0);
        swift_retain();
        v131 = swift_getEnumCaseMultiPayload();
        if (v131 == 1)
        {
          v167 = v129[1];
          *v128 = *v129;
          v128[1] = v167;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        else if (v131)
        {
          memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
        }
        else
        {
          *v128 = *v129;
          v132 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v133 = (char *)v128 + v132;
          v134 = (char *)v129 + v132;
          v135 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
          swift_storeEnumTagMultiPayload();
        }
        v168 = (int *)v216;
        swift_storeEnumTagMultiPayload();
        goto LABEL_60;
      case 1u:
        v136 = type metadata accessor for Device.Control.IncrementalState(0);
        v137 = *(_QWORD *)(v136 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v137 + 48))(v111, 1, v136))
        {
          v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
        }
        else
        {
          v143 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v110, v111, v143);
          v110[*(int *)(v136 + 20)] = v111[*(int *)(v136 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v137 + 56))(v110, 0, 1, v136);
        }
        v144 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v145 = &v110[v144];
        v146 = &v111[v144];
        v147 = v146[1];
        *v145 = *v146;
        v145[1] = v147;
        v205 = type metadata accessor for IconDescriptor();
        v148 = *(int *)(v205 + 20);
        v196 = (char *)v146 + v148;
        v199 = (char *)v145 + v148;
        v149 = sub_23E135910();
        v150 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v149 - 8) + 16);
        v201 = v150;
        swift_bridgeObjectRetain();
        v150(v199, v196, v149);
        v151 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v152 = (_QWORD *)((char *)v145 + v151);
        v153 = (_QWORD *)((char *)v146 + v151);
        v154 = v153[1];
        *v152 = *v153;
        v152[1] = v154;
        v155 = *(int *)(v205 + 20);
        v156 = (char *)v152 + v155;
        v157 = (char *)v153 + v155;
        swift_bridgeObjectRetain();
        v201(v156, v157, v149);
        v158 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v145 + v158[5]) = *(_QWORD *)((char *)v146 + v158[5]);
        *(_QWORD *)((char *)v145 + v158[6]) = *(_QWORD *)((char *)v146 + v158[6]);
        v159 = v158[7];
        v202 = (char *)v146 + v159;
        v206 = (char *)v145 + v159;
        v160 = sub_23E135520();
        v197 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v160 - 8) + 16);
        swift_retain();
        swift_retain();
        v197(v206, v202, v160);
        *(_QWORD *)((char *)v145 + v158[8]) = *(_QWORD *)((char *)v146 + v158[8]);
        *(_QWORD *)((char *)v145 + v158[9]) = *(_QWORD *)((char *)v146 + v158[9]);
        *(_QWORD *)((char *)v145 + v158[10]) = *(_QWORD *)((char *)v146 + v158[10]);
        v161 = v158[11];
        v162 = (char *)v145 + v161;
        v163 = (char *)v146 + v161;
        v162[8] = v163[8];
        *(_QWORD *)v162 = *(_QWORD *)v163;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *(_QWORD *)v110 = *(_QWORD *)v111;
        v110[8] = v111[8];
        *((_QWORD *)v110 + 2) = *((_QWORD *)v111 + 2);
        v110[24] = v111[24];
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 3u:
        v139 = type metadata accessor for Device.Control.ColorState(0);
        v140 = *(_QWORD *)(v139 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v140 + 48))(v111, 1, v139))
        {
          v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        }
        else
        {
          v210 = v139;
          v164 = sub_23E135328();
          v165 = *(_QWORD *)(v164 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v165 + 48))(v111, 1, v164))
          {
            v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            memcpy(v110, v111, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v165 + 16))(v110, v111, v164);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v110, 0, 1, v164);
          }
          v169 = *(int *)(v210 + 20);
          v170 = &v110[v169];
          v171 = &v111[v169];
          *(_QWORD *)v170 = *(_QWORD *)v171;
          v170[8] = v171[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t))(v140 + 56))(v110, 0, 1);
        }
        v172 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v173 = &v110[v172];
        v174 = &v111[v172];
        *(_QWORD *)v173 = *(_QWORD *)v174;
        *(_DWORD *)(v173 + 7) = *(_DWORD *)(v174 + 7);
        goto LABEL_58;
      case 4u:
        v142 = *((_QWORD *)v111 + 1);
        *(_QWORD *)v110 = *(_QWORD *)v111;
        *((_QWORD *)v110 + 1) = v142;
        v110[16] = v111[16];
        swift_bridgeObjectRetain();
        goto LABEL_58;
      case 6u:
        v108(v110, v111, v107);
LABEL_58:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v110, v111, *(_QWORD *)(*(__dsta - 1) + 64));
        break;
    }
    v168 = (int *)v216;
LABEL_60:
    v175 = v168[6];
    v176 = (_QWORD *)((char *)v105 + v175);
    v177 = (_QWORD *)((char *)v106 + v175);
    v178 = type metadata accessor for Device.Control.Source(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v179 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v179 - 8) + 16))(v176, v177, v179);
        v180 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v176 + *(int *)(v180 + 48)) = *(_QWORD *)((char *)v177 + *(int *)(v180 + 48));
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 1u:
        *v176 = *v177;
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 2u:
        *v176 = *v177;
        swift_bridgeObjectRetain();
        v181 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v182 = (char *)v176 + v181;
        v183 = (char *)v177 + v181;
        v184 = sub_23E134E9C();
        v168 = (int *)v216;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 16))(v182, v183, v184);
        goto LABEL_66;
      case 3u:
      case 4u:
      case 5u:
        *v176 = *v177;
        swift_retain();
LABEL_66:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
        break;
    }
    a3 = v219;
    *((_BYTE *)v105 + v168[7]) = *((_BYTE *)v106 + v168[7]);
    v185 = v168[8];
    v186 = (_QWORD *)((char *)v105 + v185);
    v187 = (_QWORD *)((char *)v106 + v185);
    v188 = v187[1];
    *v186 = *v187;
    v186[1] = v188;
    *(_WORD *)((char *)v105 + v168[9]) = *(_WORD *)((char *)v106 + v168[9]);
    *((_BYTE *)v105 + v168[10]) = *((_BYTE *)v106 + v168[10]);
    *((_BYTE *)v105 + v168[11]) = *((_BYTE *)v106 + v168[11]);
    v189 = type metadata accessor for DisplayControl(0);
    *((_BYTE *)v105 + *(int *)(v189 + 20)) = *((_BYTE *)v106 + *(int *)(v189 + 20));
  }
  else
  {
    *v105 = *v106;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v190 = a3[7];
  v191 = (_QWORD *)((char *)a1 + v190);
  v192 = (_QWORD *)((char *)a2 + v190);
  v193 = v192[1];
  *v191 = *v192;
  v191[1] = v193;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23E0D18B0(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void (*v7)(_BYTE *, _BYTE *, uint64_t);
  int *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _BYTE *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  _BYTE *v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  int v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  _QWORD *v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  void (*v103)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v104;
  _BYTE *v105;
  _BYTE *v106;
  uint64_t v107;
  _QWORD *v108;
  _BYTE *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  void (*v138)(char *, char *, uint64_t);
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  char *v143;
  int *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  int *v154;
  void (*v155)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v156;
  _BYTE *v157;
  _BYTE *v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v161;
  _BYTE *v162;
  int v163;
  uint64_t v164;
  _QWORD *v165;
  _QWORD *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  _QWORD *v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  char *v183;
  char *v184;
  void (*v185)(char *, char *, uint64_t);
  char *v186;
  char *v187;
  void (*v188)(char *, _BYTE *, uint64_t);
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  _BYTE *v194;
  int *v195;
  char *v196;
  _QWORD *v197;
  int *v198;
  char *v199;
  char *v200;
  int *v201;
  int *v202;
  int *v203;
  char *v204;
  _BYTE *v205;
  _BYTE *__dst;
  _QWORD *__dsta;
  uint64_t v208;
  int *v209;
  int *v210;
  int *v211;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for Device.ControlGroup.LayoutType);
    type metadata accessor for Device.ControlGroup.LayoutType(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_23E134C80();
      v7 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = (int *)type metadata accessor for Device.Control(0);
      v9 = v8[5];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v209 = a3;
          *v10 = *v11;
          v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v14 = &v10[v13];
          v15 = &v11[v13];
          *v14 = *(_QWORD *)&v11[v13];
          v14[1] = *(_QWORD *)&v11[v13 + 8];
          v16 = type metadata accessor for IconDescriptor();
          v17 = *(int *)(v16 + 20);
          v192 = (char *)v14 + v17;
          v202 = (int *)v16;
          v18 = &v15[v17];
          v19 = sub_23E135910();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v192, v18, v19);
          v21 = v20;
          v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v23 = (_QWORD *)((char *)v14 + v22);
          v24 = &v15[v22];
          *v23 = *v24;
          v23[1] = v24[1];
          v25 = v202[5];
          v26 = (char *)v23 + v25;
          v27 = (char *)v24 + v25;
          swift_bridgeObjectRetain();
          v21(v26, v27, v19);
          v28 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v14 + *(int *)(v28 + 20)) = *(_QWORD *)&v15[*(int *)(v28 + 20)];
          v29 = *(int *)(v28 + 24);
          v30 = (_QWORD *)((char *)v14 + v29);
          v31 = &v15[v29];
          v32 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            *v30 = *v31;
            v30[1] = v31[1];
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (EnumCaseMultiPayload)
          {
            memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            *v30 = *v31;
            v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v35 = (char *)v30 + v34;
            v36 = (char *)v31 + v34;
            v37 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
            swift_storeEnumTagMultiPayload();
          }
          a3 = v209;
          goto LABEL_26;
        case 1u:
          v38 = type metadata accessor for Device.Control.IncrementalState(0);
          v39 = *(_QWORD *)(v38 - 8);
          v210 = a3;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v39 + 48))(v11, 1, v38))
          {
            v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            v45 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(v10, v11, v45);
            v10[*(int *)(v38 + 20)] = v11[*(int *)(v38 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v10, 0, 1, v38);
          }
          v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v47 = &v10[v46];
          v48 = &v11[v46];
          *v47 = *(_QWORD *)&v11[v46];
          v47[1] = *(_QWORD *)&v11[v46 + 8];
          v203 = (int *)type metadata accessor for IconDescriptor();
          v49 = v203[5];
          v193 = (char *)v47 + v49;
          v50 = &v48[v49];
          v51 = sub_23E135910();
          v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
          swift_bridgeObjectRetain();
          v52(v193, v50, v51);
          v53 = v52;
          v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v55 = (_QWORD *)((char *)v47 + v54);
          v56 = &v48[v54];
          *v55 = *v56;
          v55[1] = v56[1];
          v57 = v203[5];
          v58 = (char *)v55 + v57;
          v59 = (char *)v56 + v57;
          swift_bridgeObjectRetain();
          v53(v58, v59, v51);
          v60 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v47 + v60[5]) = *(_QWORD *)&v48[v60[5]];
          *(_QWORD *)((char *)v47 + v60[6]) = *(_QWORD *)&v48[v60[6]];
          v61 = v60[7];
          v194 = &v48[v61];
          v204 = (char *)v47 + v61;
          v62 = sub_23E135520();
          v188 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
          swift_retain();
          swift_retain();
          v188(v204, v194, v62);
          *(_QWORD *)((char *)v47 + v60[8]) = *(_QWORD *)&v48[v60[8]];
          *(_QWORD *)((char *)v47 + v60[9]) = *(_QWORD *)&v48[v60[9]];
          *(_QWORD *)((char *)v47 + v60[10]) = *(_QWORD *)&v48[v60[10]];
          v63 = v60[11];
          v64 = (char *)v47 + v63;
          v65 = &v48[v63];
          v66 = v65[8];
          *(_QWORD *)v64 = *(_QWORD *)v65;
          v64[8] = v66;
          swift_storeEnumTagMultiPayload();
          a3 = v210;
          break;
        case 2u:
          v41 = *(_QWORD *)v11;
          v10[8] = v11[8];
          *(_QWORD *)v10 = v41;
          *((_QWORD *)v10 + 2) = *((_QWORD *)v11 + 2);
          v10[24] = v11[24];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 3u:
          v42 = type metadata accessor for Device.Control.ColorState(0);
          v43 = *(_QWORD *)(v42 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v43 + 48))(v11, 1, v42))
          {
            v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            __dst = v10;
            v67 = sub_23E135328();
            v68 = *(_QWORD *)(v67 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v68 + 48))(v11, 1, v67))
            {
              v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v10 = __dst;
              memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v68 + 16))(__dst, v11, v67);
              v70 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v68 + 56);
              v10 = __dst;
              v70(__dst, 0, 1, v67);
            }
            v71 = *(int *)(v42 + 20);
            v72 = &v10[v71];
            v73 = &v11[v71];
            v74 = *(_QWORD *)v73;
            v72[8] = v73[8];
            *(_QWORD *)v72 = v74;
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v10, 0, 1, v42);
          }
          v75 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v76 = &v10[v75];
          v77 = &v11[v75];
          v78 = *(_DWORD *)(v77 + 7);
          *(_QWORD *)v76 = *(_QWORD *)v77;
          *(_DWORD *)(v76 + 7) = v78;
          goto LABEL_26;
        case 4u:
          *(_QWORD *)v10 = *(_QWORD *)v11;
          *((_QWORD *)v10 + 1) = *((_QWORD *)v11 + 1);
          v10[16] = v11[16];
          swift_bridgeObjectRetain();
          goto LABEL_26;
        case 6u:
          v7(v10, v11, v6);
LABEL_26:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
          break;
      }
      v79 = v8[6];
      v80 = (_QWORD *)((char *)a1 + v79);
      v81 = (_QWORD *)((char *)a2 + v79);
      v82 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v83 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v83 - 8) + 16))(v80, v81, v83);
          v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v80 + *(int *)(v84 + 48)) = *(_QWORD *)((char *)v81 + *(int *)(v84 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 1u:
          *v80 = *v81;
          swift_bridgeObjectRetain();
          goto LABEL_33;
        case 2u:
          *v80 = *v81;
          swift_bridgeObjectRetain();
          v85 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v86 = (char *)v80 + v85;
          v87 = (char *)v81 + v85;
          v88 = sub_23E134E9C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 16))(v86, v87, v88);
          goto LABEL_33;
        case 3u:
        case 4u:
        case 5u:
          *v80 = *v81;
          swift_retain();
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
          break;
      }
      *((_BYTE *)a1 + v8[7]) = *((_BYTE *)a2 + v8[7]);
      v89 = v8[8];
      v90 = (_QWORD *)((char *)a1 + v89);
      v91 = (_QWORD *)((char *)a2 + v89);
      *v90 = *v91;
      v90[1] = v91[1];
      *(_WORD *)((char *)a1 + v8[9]) = *(_WORD *)((char *)a2 + v8[9]);
      *((_BYTE *)a1 + v8[10]) = *((_BYTE *)a2 + v8[10]);
      *((_BYTE *)a1 + v8[11]) = *((_BYTE *)a2 + v8[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  v92 = type metadata accessor for Device.ControlGroup(0);
  v93 = *(int *)(v92 + 20);
  v94 = (_QWORD *)((char *)a1 + v93);
  v95 = (_QWORD *)((char *)a2 + v93);
  *v94 = *v95;
  v94[1] = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v96 = *(int *)(v92 + 24);
  v97 = (_QWORD *)((char *)a1 + v96);
  v98 = (_QWORD *)((char *)a2 + v96);
  *v97 = *v98;
  v97[1] = v98[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  if (a1 != a2)
  {
    v99 = a3[6];
    v100 = (_QWORD *)((char *)a1 + v99);
    v101 = (_QWORD *)((char *)a2 + v99);
    sub_23DF73E54((uint64_t)a1 + v99, type metadata accessor for DisplayControlGroup.LayoutType);
    type metadata accessor for DisplayControlGroup.LayoutType(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v211 = a3;
      v102 = sub_23E134C80();
      v103 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v102 - 8) + 16);
      v103(v100, v101, v102);
      v208 = type metadata accessor for Device.Control(0);
      v104 = *(int *)(v208 + 20);
      v105 = (char *)v100 + v104;
      v106 = (char *)v101 + v104;
      __dsta = (_QWORD *)type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v105 = *v106;
          v107 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v108 = &v105[v107];
          v109 = &v106[v107];
          *v108 = *(_QWORD *)&v106[v107];
          v108[1] = *(_QWORD *)&v106[v107 + 8];
          v195 = (int *)type metadata accessor for IconDescriptor();
          v110 = v195[5];
          v183 = &v109[v110];
          v186 = (char *)v108 + v110;
          v189 = sub_23E135910();
          v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16);
          swift_bridgeObjectRetain();
          v111(v186, v183, v189);
          v112 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v113 = (_QWORD *)((char *)v108 + v112);
          v114 = &v109[v112];
          *v113 = *v114;
          v113[1] = v114[1];
          v115 = v195[5];
          v196 = (char *)v113 + v115;
          v116 = (char *)v114 + v115;
          swift_bridgeObjectRetain();
          v111(v196, v116, v189);
          v117 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)((char *)v108 + *(int *)(v117 + 20)) = *(_QWORD *)&v109[*(int *)(v117 + 20)];
          v118 = *(int *)(v117 + 24);
          v197 = (_QWORD *)((char *)v108 + v118);
          v119 = &v109[v118];
          v120 = type metadata accessor for ControlTextModifier.Config(0);
          swift_retain();
          v121 = swift_getEnumCaseMultiPayload();
          if (v121 == 1)
          {
            *v197 = *v119;
            v197[1] = v119[1];
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          else if (v121)
          {
            memcpy(v197, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          }
          else
          {
            *v197 = *v119;
            v122 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v123 = (char *)v197 + v122;
            v124 = (char *)v119 + v122;
            v125 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16))(v123, v124, v125);
            swift_storeEnumTagMultiPayload();
          }
          v154 = (int *)v208;
          swift_storeEnumTagMultiPayload();
          goto LABEL_63;
        case 1u:
          v126 = type metadata accessor for Device.Control.IncrementalState(0);
          v127 = *(_QWORD *)(v126 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v127 + 48))(v106, 1, v126))
          {
            v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v128 - 8) + 64));
          }
          else
          {
            v133 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v133 - 8) + 16))(v105, v106, v133);
            v105[*(int *)(v126 + 20)] = v106[*(int *)(v126 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v127 + 56))(v105, 0, 1, v126);
          }
          v134 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v135 = &v105[v134];
          v136 = &v106[v134];
          *v135 = *v136;
          v135[1] = v136[1];
          v198 = (int *)type metadata accessor for IconDescriptor();
          v137 = v198[5];
          v184 = (char *)v136 + v137;
          v187 = (char *)v135 + v137;
          v190 = sub_23E135910();
          v138 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v190 - 8) + 16);
          swift_bridgeObjectRetain();
          v138(v187, v184, v190);
          v139 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v140 = (_QWORD *)((char *)v135 + v139);
          v141 = (_QWORD *)((char *)v136 + v139);
          *v140 = *v141;
          v140[1] = v141[1];
          v142 = v198[5];
          v143 = (char *)v140 + v142;
          v199 = (char *)v141 + v142;
          swift_bridgeObjectRetain();
          v138(v143, v199, v190);
          v144 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v135 + v144[5]) = *(_QWORD *)((char *)v136 + v144[5]);
          *(_QWORD *)((char *)v135 + v144[6]) = *(_QWORD *)((char *)v136 + v144[6]);
          v145 = v144[7];
          v191 = (char *)v136 + v145;
          v200 = (char *)v135 + v145;
          v146 = sub_23E135520();
          v185 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16);
          swift_retain();
          swift_retain();
          v185(v200, v191, v146);
          *(_QWORD *)((char *)v135 + v144[8]) = *(_QWORD *)((char *)v136 + v144[8]);
          *(_QWORD *)((char *)v135 + v144[9]) = *(_QWORD *)((char *)v136 + v144[9]);
          *(_QWORD *)((char *)v135 + v144[10]) = *(_QWORD *)((char *)v136 + v144[10]);
          v147 = v144[11];
          v148 = (char *)v135 + v147;
          v149 = (char *)v136 + v147;
          v150 = v149[8];
          *(_QWORD *)v148 = *(_QWORD *)v149;
          v148[8] = v150;
          goto LABEL_61;
        case 2u:
          v129 = *(_QWORD *)v106;
          v105[8] = v106[8];
          *(_QWORD *)v105 = v129;
          *((_QWORD *)v105 + 2) = *((_QWORD *)v106 + 2);
          v105[24] = v106[24];
          swift_bridgeObjectRetain();
          goto LABEL_61;
        case 3u:
          v130 = type metadata accessor for Device.Control.ColorState(0);
          v131 = *(_QWORD *)(v130 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v131 + 48))(v106, 1, v130))
          {
            v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
          }
          else
          {
            v201 = (int *)v130;
            v205 = v105;
            v151 = sub_23E135328();
            v152 = *(_QWORD *)(v151 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v152 + 48))(v106, 1, v151))
            {
              v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v105 = v205;
              memcpy(v205, v106, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v152 + 16))(v205, v106, v151);
              v155 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v152 + 56);
              v105 = v205;
              v155(v205, 0, 1, v151);
            }
            v156 = v201[5];
            v157 = &v105[v156];
            v158 = &v106[v156];
            v159 = *(_QWORD *)v158;
            v157[8] = v158[8];
            *(_QWORD *)v157 = v159;
            (*(void (**)(_BYTE *, _QWORD, uint64_t))(v131 + 56))(v105, 0, 1);
          }
          v160 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v161 = &v105[v160];
          v162 = &v106[v160];
          v163 = *(_DWORD *)(v162 + 7);
          *(_QWORD *)v161 = *(_QWORD *)v162;
          *(_DWORD *)(v161 + 7) = v163;
          goto LABEL_61;
        case 4u:
          *(_QWORD *)v105 = *(_QWORD *)v106;
          *((_QWORD *)v105 + 1) = *((_QWORD *)v106 + 1);
          v105[16] = v106[16];
          swift_bridgeObjectRetain();
          goto LABEL_61;
        case 6u:
          v103(v105, v106, v102);
LABEL_61:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v105, v106, *(_QWORD *)(*(__dsta - 1) + 64));
          break;
      }
      v154 = (int *)v208;
LABEL_63:
      v164 = v154[6];
      v165 = (_QWORD *)((char *)v100 + v164);
      v166 = (_QWORD *)((char *)v101 + v164);
      v167 = type metadata accessor for Device.Control.Source(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v168 = sub_23E1356DC();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v168 - 8) + 16))(v165, v166, v168);
          v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
          *(_QWORD *)((char *)v165 + *(int *)(v169 + 48)) = *(_QWORD *)((char *)v166 + *(int *)(v169 + 48));
          swift_bridgeObjectRetain();
          goto LABEL_69;
        case 1u:
          *v165 = *v166;
          swift_bridgeObjectRetain();
          goto LABEL_69;
        case 2u:
          *v165 = *v166;
          swift_bridgeObjectRetain();
          v170 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
          v171 = (char *)v165 + v170;
          v172 = (char *)v166 + v170;
          v173 = sub_23E134E9C();
          v174 = v171;
          v154 = (int *)v208;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16))(v174, v172, v173);
          goto LABEL_69;
        case 3u:
        case 4u:
        case 5u:
          *v165 = *v166;
          swift_retain();
LABEL_69:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
          break;
      }
      a3 = v211;
      *((_BYTE *)v100 + v154[7]) = *((_BYTE *)v101 + v154[7]);
      v175 = v154[8];
      v176 = (_QWORD *)((char *)v100 + v175);
      v177 = (_QWORD *)((char *)v101 + v175);
      *v176 = *v177;
      v176[1] = v177[1];
      *(_WORD *)((char *)v100 + v154[9]) = *(_WORD *)((char *)v101 + v154[9]);
      *((_BYTE *)v100 + v154[10]) = *((_BYTE *)v101 + v154[10]);
      *((_BYTE *)v100 + v154[11]) = *((_BYTE *)v101 + v154[11]);
      v178 = type metadata accessor for DisplayControl(0);
      *((_BYTE *)v100 + *(int *)(v178 + 20)) = *((_BYTE *)v101 + *(int *)(v178 + 20));
    }
    else
    {
      *v100 = *v101;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  v179 = a3[7];
  v180 = (_QWORD *)((char *)a1 + v179);
  v181 = (_QWORD *)((char *)a2 + v179);
  *v180 = *v181;
  v180[1] = v181[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *sub_23E0D2A7C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(char *, _BYTE *, uint64_t);
  uint64_t v23;
  char *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _OWORD *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(char *, _BYTE *, uint64_t);
  uint64_t v51;
  char *v52;
  _OWORD *v53;
  int *v54;
  uint64_t v55;
  char *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  int EnumCaseMultiPayload;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  uint64_t v88;
  void (*v89)(_BYTE *, _BYTE *, uint64_t);
  int *v90;
  uint64_t v91;
  _BYTE *v92;
  _BYTE *v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  _BYTE *v99;
  uint64_t v100;
  void (*v101)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v102;
  _OWORD *v103;
  _OWORD *v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  _BYTE *v126;
  uint64_t v127;
  void (*v128)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v129;
  _OWORD *v130;
  _OWORD *v131;
  int *v132;
  uint64_t v133;
  _BYTE *v134;
  _BYTE *v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  _BYTE *v144;
  _BYTE *v145;
  uint64_t v146;
  _BYTE *v147;
  _BYTE *v148;
  uint64_t v149;
  _QWORD *v150;
  _QWORD *v151;
  uint64_t v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  _BYTE *v162;
  _BYTE *v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *__dst;
  _QWORD *__dsta;
  int *v169;
  int *v170;

  v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v7 = sub_23E134C80();
    v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    v9 = (int *)type metadata accessor for Device.Control(0);
    v10 = v9[5];
    v11 = &a1[v10];
    v12 = &a2[v10];
    v13 = type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v169 = a3;
        *v11 = *v12;
        v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v15 = &v11[v14];
        v16 = &v12[v14];
        *v15 = *(_OWORD *)&v12[v14];
        v17 = type metadata accessor for IconDescriptor();
        v18 = *(int *)(v17 + 20);
        v19 = (char *)v15 + v18;
        v20 = &v16[v18];
        v21 = sub_23E135910();
        v22 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
        v22(v19, v20, v21);
        v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v24 = (char *)v15 + v23;
        v25 = &v16[v23];
        *(_OWORD *)v24 = *v25;
        v22(&v24[*(int *)(v17 + 20)], (_BYTE *)v25 + *(int *)(v17 + 20), v21);
        v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)((char *)v15 + *(int *)(v26 + 20)) = *(_QWORD *)&v16[*(int *)(v26 + 20)];
        v27 = *(int *)(v26 + 24);
        v28 = (_QWORD *)((char *)v15 + v27);
        v29 = &v16[v27];
        v30 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
        }
        else
        {
          *v28 = *v29;
          v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v38 = (char *)v28 + v37;
          v39 = (char *)v29 + v37;
          v40 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_15;
      case 1u:
        v31 = type metadata accessor for Device.Control.IncrementalState(0);
        v32 = *(_QWORD *)(v31 - 8);
        v169 = a3;
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v31))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          v41 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v11, v12, v41);
          v11[*(int *)(v31 + 20)] = v12[*(int *)(v31 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v11, 0, 1, v31);
        }
        v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v43 = &v11[v42];
        v44 = &v12[v42];
        *v43 = *(_OWORD *)&v12[v42];
        v45 = type metadata accessor for IconDescriptor();
        v46 = *(int *)(v45 + 20);
        v47 = (char *)v43 + v46;
        v48 = &v44[v46];
        v49 = sub_23E135910();
        v50 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32);
        v50(v47, v48, v49);
        v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v52 = (char *)v43 + v51;
        v53 = &v44[v51];
        *(_OWORD *)v52 = *v53;
        v50(&v52[*(int *)(v45 + 20)], (_BYTE *)v53 + *(int *)(v45 + 20), v49);
        v54 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)((char *)v43 + v54[5]) = *(_QWORD *)&v44[v54[5]];
        *(_QWORD *)((char *)v43 + v54[6]) = *(_QWORD *)&v44[v54[6]];
        v55 = v54[7];
        v56 = (char *)v43 + v55;
        v57 = &v44[v55];
        v58 = sub_23E135520();
        (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
        *(_QWORD *)((char *)v43 + v54[8]) = *(_QWORD *)&v44[v54[8]];
        *(_QWORD *)((char *)v43 + v54[9]) = *(_QWORD *)&v44[v54[9]];
        *(_QWORD *)((char *)v43 + v54[10]) = *(_QWORD *)&v44[v54[10]];
        v59 = v54[11];
        v60 = (char *)v43 + v59;
        v61 = &v44[v59];
        v60[8] = v61[8];
        *(_QWORD *)v60 = *(_QWORD *)v61;
LABEL_15:
        swift_storeEnumTagMultiPayload();
        a3 = v169;
        break;
      case 3u:
        v34 = type metadata accessor for Device.Control.ColorState(0);
        v35 = *(_QWORD *)(v34 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v34))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          __dst = v11;
          v62 = sub_23E135328();
          v63 = *(_QWORD *)(v62 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v63 + 48))(v12, 1, v62))
          {
            v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            v11 = __dst;
            memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 32))(__dst, v12, v62);
            v65 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v63 + 56);
            v11 = __dst;
            v65(__dst, 0, 1, v62);
          }
          v66 = *(int *)(v34 + 20);
          v67 = &v11[v66];
          v68 = &v12[v66];
          *(_QWORD *)v67 = *(_QWORD *)v68;
          v67[8] = v68[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v34);
        }
        v69 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v70 = &v11[v69];
        v71 = &v12[v69];
        *(_QWORD *)v70 = *(_QWORD *)v71;
        *(_DWORD *)(v70 + 7) = *(_DWORD *)(v71 + 7);
        goto LABEL_21;
      case 6u:
        v8(v11, v12, v7);
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
        break;
    }
    v72 = v9[6];
    v73 = &a1[v72];
    v74 = &a2[v72];
    v75 = type metadata accessor for Device.Control.Source(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *v73 = *v74;
      v79 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v80 = (char *)v73 + v79;
      v81 = (char *)v74 + v79;
      v82 = sub_23E134E9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 32))(v80, v81, v82);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
    }
    else
    {
      v77 = sub_23E1356DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v73, v74, v77);
      v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      *(_QWORD *)((char *)v73 + *(int *)(v78 + 48)) = *(_QWORD *)((char *)v74 + *(int *)(v78 + 48));
      swift_storeEnumTagMultiPayload();
    }
    a1[v9[7]] = a2[v9[7]];
    *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
    *(_WORD *)&a1[v9[9]] = *(_WORD *)&a2[v9[9]];
    a1[v9[10]] = a2[v9[10]];
    a1[v9[11]] = a2[v9[11]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v83 = type metadata accessor for Device.ControlGroup(0);
  *(_OWORD *)&a1[*(int *)(v83 + 20)] = *(_OWORD *)&a2[*(int *)(v83 + 20)];
  *(_OWORD *)&a1[*(int *)(v83 + 24)] = *(_OWORD *)&a2[*(int *)(v83 + 24)];
  v84 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v85 = &a1[v84];
  v86 = &a2[v84];
  v87 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v170 = a3;
    v88 = sub_23E134C80();
    v89 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v88 - 8) + 32);
    v89(v85, v86, v88);
    v90 = (int *)type metadata accessor for Device.Control(0);
    v91 = v90[5];
    v92 = &v85[v91];
    v93 = &v86[v91];
    __dsta = (_QWORD *)type metadata accessor for Device.Control.Kind(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v92 = *v93;
        v94 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
        v95 = &v92[v94];
        v96 = &v93[v94];
        *(_OWORD *)&v92[v94] = *(_OWORD *)&v93[v94];
        v97 = type metadata accessor for IconDescriptor();
        v98 = *(int *)(v97 + 20);
        v162 = &v95[v98];
        v164 = v97;
        v99 = &v96[v98];
        v100 = sub_23E135910();
        v101 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v100 - 8) + 32);
        v101(v162, v99, v100);
        v102 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v103 = &v95[v102];
        v104 = &v96[v102];
        *v103 = *v104;
        v101((_BYTE *)v103 + *(int *)(v164 + 20), (_BYTE *)v104 + *(int *)(v164 + 20), v100);
        v105 = type metadata accessor for Device.Control.BinaryViewConfig(0);
        *(_QWORD *)&v95[*(int *)(v105 + 20)] = *(_QWORD *)&v96[*(int *)(v105 + 20)];
        v106 = *(int *)(v105 + 24);
        v107 = &v95[v106];
        v108 = &v96[v106];
        v109 = type metadata accessor for ControlTextModifier.Config(0);
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          *v107 = *v108;
          v116 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
          v117 = (char *)v107 + v116;
          v118 = (char *)v108 + v116;
          v119 = sub_23E134C20();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v119 - 8) + 32))(v117, v118, v119);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_47;
      case 1u:
        v110 = type metadata accessor for Device.Control.IncrementalState(0);
        v111 = *(_QWORD *)(v110 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v111 + 48))(v93, 1, v110))
        {
          v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v112 - 8) + 64));
        }
        else
        {
          v120 = sub_23E13534C();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v92, v93, v120);
          v92[*(int *)(v110 + 20)] = v93[*(int *)(v110 + 20)];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v111 + 56))(v92, 0, 1, v110);
        }
        v121 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
        v122 = &v92[v121];
        v123 = &v93[v121];
        *(_OWORD *)&v92[v121] = *(_OWORD *)&v93[v121];
        v124 = type metadata accessor for IconDescriptor();
        v125 = *(int *)(v124 + 20);
        v163 = &v122[v125];
        v165 = v124;
        v126 = &v123[v125];
        v127 = sub_23E135910();
        v128 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v127 - 8) + 32);
        v128(v163, v126, v127);
        v129 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
        v130 = &v122[v129];
        v131 = &v123[v129];
        *v130 = *v131;
        v128((_BYTE *)v130 + *(int *)(v165 + 20), (_BYTE *)v131 + *(int *)(v165 + 20), v127);
        v132 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
        *(_QWORD *)&v122[v132[5]] = *(_QWORD *)&v123[v132[5]];
        *(_QWORD *)&v122[v132[6]] = *(_QWORD *)&v123[v132[6]];
        v133 = v132[7];
        v134 = &v122[v133];
        v135 = &v123[v133];
        v136 = sub_23E135520();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v136 - 8) + 32))(v134, v135, v136);
        *(_QWORD *)&v122[v132[8]] = *(_QWORD *)&v123[v132[8]];
        *(_QWORD *)&v122[v132[9]] = *(_QWORD *)&v123[v132[9]];
        *(_QWORD *)&v122[v132[10]] = *(_QWORD *)&v123[v132[10]];
        v137 = v132[11];
        v138 = &v122[v137];
        v139 = &v123[v137];
        v138[8] = v139[8];
        *(_QWORD *)v138 = *(_QWORD *)v139;
        goto LABEL_47;
      case 3u:
        v113 = type metadata accessor for Device.Control.ColorState(0);
        v114 = *(_QWORD *)(v113 - 8);
        if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v114 + 48))(v93, 1, v113))
        {
          v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
          memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
        }
        else
        {
          v166 = v92;
          v140 = sub_23E135328();
          v141 = *(_QWORD *)(v140 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v141 + 48))(v93, 1, v140))
          {
            v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
            v92 = v166;
            memcpy(v166, v93, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
          }
          else
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v141 + 32))(v166, v93, v140);
            v92 = v166;
            (*(void (**)(void))(v141 + 56))();
          }
          v143 = *(int *)(v113 + 20);
          v144 = &v92[v143];
          v145 = &v93[v143];
          *(_QWORD *)v144 = *(_QWORD *)v145;
          v144[8] = v145[8];
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v92, 0, 1, v113);
        }
        v146 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
        v147 = &v92[v146];
        v148 = &v93[v146];
        *(_QWORD *)v147 = *(_QWORD *)v148;
        *(_DWORD *)(v147 + 7) = *(_DWORD *)(v148 + 7);
        goto LABEL_47;
      case 6u:
        v89(v92, v93, v88);
LABEL_47:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v92, v93, *(_QWORD *)(*(__dsta - 1) + 64));
        break;
    }
    v149 = v90[6];
    v150 = &v85[v149];
    v151 = &v86[v149];
    v152 = type metadata accessor for Device.Control.Source(0);
    v153 = swift_getEnumCaseMultiPayload();
    if (v153 == 2)
    {
      *v150 = *v151;
      v156 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
      v157 = (char *)v150 + v156;
      v158 = (char *)v151 + v156;
      v159 = sub_23E134E9C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 32))(v157, v158, v159);
      swift_storeEnumTagMultiPayload();
    }
    else if (v153)
    {
      memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
    }
    else
    {
      v154 = sub_23E1356DC();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v154 - 8) + 32))(v150, v151, v154);
      v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      *(_QWORD *)((char *)v150 + *(int *)(v155 + 48)) = *(_QWORD *)((char *)v151 + *(int *)(v155 + 48));
      swift_storeEnumTagMultiPayload();
    }
    a3 = v170;
    v85[v90[7]] = v86[v90[7]];
    *(_OWORD *)&v85[v90[8]] = *(_OWORD *)&v86[v90[8]];
    *(_WORD *)&v85[v90[9]] = *(_WORD *)&v86[v90[9]];
    v85[v90[10]] = v86[v90[10]];
    v85[v90[11]] = v86[v90[11]];
    v160 = type metadata accessor for DisplayControl(0);
    v85[*(int *)(v160 + 20)] = v86[*(int *)(v160 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
  }
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

_BYTE *sub_23E0D3818(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(_BYTE *, _BYTE *, uint64_t);
  int *v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  void (*v22)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  _BYTE *v48;
  uint64_t v49;
  void (*v50)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v51;
  _OWORD *v52;
  _OWORD *v53;
  int *v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  int EnumCaseMultiPayload;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _BYTE *v94;
  _BYTE *v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(_BYTE *, _BYTE *, uint64_t);
  int *v99;
  uint64_t v100;
  _BYTE *v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  _BYTE *v107;
  uint64_t v108;
  void (*v109)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v110;
  _OWORD *v111;
  _OWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _OWORD *v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  void (*v138)(char *, _BYTE *, uint64_t);
  uint64_t v139;
  char *v140;
  _OWORD *v141;
  int *v142;
  uint64_t v143;
  char *v144;
  _BYTE *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  _BYTE *v156;
  uint64_t v157;
  _BYTE *v158;
  _BYTE *v159;
  uint64_t v160;
  _QWORD *v161;
  _QWORD *v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t *v174;
  uint64_t v175;
  uint64_t v176;
  _BYTE *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _BYTE *__dst;
  int *v185;
  int *v186;
  int *v187;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for Device.ControlGroup.LayoutType);
    v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v7 = sub_23E134C80();
      v8 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      v9 = (int *)type metadata accessor for Device.Control(0);
      v10 = v9[5];
      v11 = &a1[v10];
      v12 = &a2[v10];
      v13 = type metadata accessor for Device.Control.Kind(0);
      v185 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *v11 = *v12;
          v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v15 = &v11[v14];
          v16 = &v12[v14];
          *(_OWORD *)&v11[v14] = *(_OWORD *)&v12[v14];
          v17 = type metadata accessor for IconDescriptor();
          v18 = *(int *)(v17 + 20);
          v19 = &v15[v18];
          v20 = &v16[v18];
          v21 = sub_23E135910();
          v22 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v21 - 8) + 32);
          v22(v19, v20, v21);
          v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v24 = &v15[v23];
          v25 = &v16[v23];
          *v24 = *v25;
          v22((_BYTE *)v24 + *(int *)(v17 + 20), (_BYTE *)v25 + *(int *)(v17 + 20), v21);
          v26 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v15[*(int *)(v26 + 20)] = *(_QWORD *)&v16[*(int *)(v26 + 20)];
          v27 = *(int *)(v26 + 24);
          v28 = &v15[v27];
          v29 = &v16[v27];
          v30 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
          }
          else
          {
            *v28 = *v29;
            v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v38 = (char *)v28 + v37;
            v39 = (char *)v29 + v37;
            v40 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_21;
        case 1u:
          v31 = type metadata accessor for Device.Control.IncrementalState(0);
          v32 = *(_QWORD *)(v31 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v32 + 48))(v12, 1, v31))
          {
            v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
          }
          else
          {
            v41 = sub_23E13534C();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v11, v12, v41);
            v11[*(int *)(v31 + 20)] = v12[*(int *)(v31 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v11, 0, 1, v31);
          }
          v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v43 = &v11[v42];
          v44 = &v12[v42];
          *(_OWORD *)&v11[v42] = *(_OWORD *)&v12[v42];
          v45 = type metadata accessor for IconDescriptor();
          v46 = *(int *)(v45 + 20);
          v47 = &v43[v46];
          v48 = &v44[v46];
          v49 = sub_23E135910();
          v50 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v49 - 8) + 32);
          v50(v47, v48, v49);
          v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v52 = &v43[v51];
          v53 = &v44[v51];
          *v52 = *v53;
          v50((_BYTE *)v52 + *(int *)(v45 + 20), (_BYTE *)v53 + *(int *)(v45 + 20), v49);
          v54 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)&v43[v54[5]] = *(_QWORD *)&v44[v54[5]];
          *(_QWORD *)&v43[v54[6]] = *(_QWORD *)&v44[v54[6]];
          v55 = v54[7];
          v56 = &v43[v55];
          v57 = &v44[v55];
          v58 = sub_23E135520();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v56, v57, v58);
          *(_QWORD *)&v43[v54[8]] = *(_QWORD *)&v44[v54[8]];
          *(_QWORD *)&v43[v54[9]] = *(_QWORD *)&v44[v54[9]];
          *(_QWORD *)&v43[v54[10]] = *(_QWORD *)&v44[v54[10]];
          v59 = v54[11];
          v60 = &v43[v59];
          v61 = &v44[v59];
          v60[8] = v61[8];
          *(_QWORD *)v60 = *(_QWORD *)v61;
          goto LABEL_21;
        case 3u:
          v34 = type metadata accessor for Device.Control.ColorState(0);
          v35 = *(_QWORD *)(v34 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v35 + 48))(v12, 1, v34))
          {
            v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            v62 = sub_23E135328();
            v63 = *(_QWORD *)(v62 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v63 + 48))(v12, 1, v62))
            {
              v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
            }
            else
            {
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v63 + 32))(v11, v12, v62);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v63 + 56))(v11, 0, 1, v62);
            }
            v65 = *(int *)(v34 + 20);
            v66 = &v11[v65];
            v67 = &v12[v65];
            *(_QWORD *)v66 = *(_QWORD *)v67;
            v66[8] = v67[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v11, 0, 1, v34);
          }
          v68 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v69 = &v11[v68];
          v70 = &v12[v68];
          *(_QWORD *)v69 = *(_QWORD *)v70;
          *(_DWORD *)(v69 + 7) = *(_DWORD *)(v70 + 7);
          goto LABEL_21;
        case 6u:
          v8(v11, v12, v7);
LABEL_21:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
          break;
      }
      v71 = v9[6];
      v72 = &a1[v71];
      v73 = &a2[v71];
      v74 = type metadata accessor for Device.Control.Source(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *v72 = *v73;
        v78 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v79 = (char *)v72 + v78;
        v80 = (char *)v73 + v78;
        v81 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v79, v80, v81);
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
      }
      else
      {
        v76 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v72, v73, v76);
        v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v72 + *(int *)(v77 + 48)) = *(_QWORD *)((char *)v73 + *(int *)(v77 + 48));
        swift_storeEnumTagMultiPayload();
      }
      a3 = v185;
      a1[v9[7]] = a2[v9[7]];
      *(_OWORD *)&a1[v9[8]] = *(_OWORD *)&a2[v9[8]];
      *(_WORD *)&a1[v9[9]] = *(_WORD *)&a2[v9[9]];
      a1[v9[10]] = a2[v9[10]];
      a1[v9[11]] = a2[v9[11]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v82 = type metadata accessor for Device.ControlGroup(0);
  v83 = *(int *)(v82 + 20);
  v84 = &a1[v83];
  v85 = (uint64_t *)&a2[v83];
  v87 = *v85;
  v86 = v85[1];
  *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  v88 = *(int *)(v82 + 24);
  v89 = &a1[v88];
  v90 = (uint64_t *)&a2[v88];
  v92 = *v90;
  v91 = v90[1];
  *v89 = v92;
  v89[1] = v91;
  swift_bridgeObjectRelease();
  a1[a3[5]] = a2[a3[5]];
  if (a1 != a2)
  {
    v93 = a3[6];
    v94 = &a1[v93];
    v95 = &a2[v93];
    sub_23DF73E54((uint64_t)&a1[v93], type metadata accessor for DisplayControlGroup.LayoutType);
    v96 = type metadata accessor for DisplayControlGroup.LayoutType(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v97 = sub_23E134C80();
      v98 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v97 - 8) + 32);
      v98(v94, v95, v97);
      v99 = (int *)type metadata accessor for Device.Control(0);
      v100 = v99[5];
      __dst = &v94[v100];
      v101 = &v95[v100];
      v183 = type metadata accessor for Device.Control.Kind(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v186 = a3;
          *__dst = *v101;
          v102 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0) + 48);
          v103 = &__dst[v102];
          v104 = &v101[v102];
          *(_OWORD *)&__dst[v102] = *(_OWORD *)&v101[v102];
          v105 = type metadata accessor for IconDescriptor();
          v106 = *(int *)(v105 + 20);
          v107 = &v103[v106];
          v178 = &v104[v106];
          v180 = v105;
          v108 = sub_23E135910();
          v109 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v108 - 8) + 32);
          v109(v107, v178, v108);
          v110 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v111 = &v103[v110];
          v112 = &v104[v110];
          *v111 = *v112;
          v109((_BYTE *)v111 + *(int *)(v180 + 20), (_BYTE *)v112 + *(int *)(v180 + 20), v108);
          v113 = type metadata accessor for Device.Control.BinaryViewConfig(0);
          *(_QWORD *)&v103[*(int *)(v113 + 20)] = *(_QWORD *)&v104[*(int *)(v113 + 20)];
          v114 = *(int *)(v113 + 24);
          v115 = &v103[v114];
          v116 = &v104[v114];
          v117 = type metadata accessor for ControlTextModifier.Config(0);
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
          }
          else
          {
            *v115 = *v116;
            v126 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
            v127 = (char *)v115 + v126;
            v128 = (char *)v116 + v126;
            v129 = sub_23E134C20();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_43;
        case 1u:
          v118 = type metadata accessor for Device.Control.IncrementalState(0);
          v119 = *(_QWORD *)(v118 - 8);
          v186 = a3;
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v119 + 48))(v101, 1, v118))
          {
            v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
            v121 = __dst;
            memcpy(__dst, v101, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
          }
          else
          {
            v130 = sub_23E13534C();
            v121 = __dst;
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v130 - 8) + 32))(__dst, v101, v130);
            __dst[*(int *)(v118 + 20)] = v101[*(int *)(v118 + 20)];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v119 + 56))(__dst, 0, 1, v118);
          }
          v131 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
          v132 = &v121[v131];
          v133 = &v101[v131];
          *v132 = *(_OWORD *)&v101[v131];
          v134 = type metadata accessor for IconDescriptor();
          v135 = *(int *)(v134 + 20);
          v179 = (char *)v132 + v135;
          v181 = v134;
          v136 = &v133[v135];
          v137 = sub_23E135910();
          v138 = *(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v137 - 8) + 32);
          v138(v179, v136, v137);
          v139 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
          v140 = (char *)v132 + v139;
          v141 = &v133[v139];
          *(_OWORD *)v140 = *v141;
          v138(&v140[*(int *)(v181 + 20)], (_BYTE *)v141 + *(int *)(v181 + 20), v137);
          v142 = (int *)type metadata accessor for Device.Control.IncrementalConfig(0);
          *(_QWORD *)((char *)v132 + v142[5]) = *(_QWORD *)&v133[v142[5]];
          *(_QWORD *)((char *)v132 + v142[6]) = *(_QWORD *)&v133[v142[6]];
          v143 = v142[7];
          v144 = (char *)v132 + v143;
          v145 = &v133[v143];
          v146 = sub_23E135520();
          (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v146 - 8) + 32))(v144, v145, v146);
          *(_QWORD *)((char *)v132 + v142[8]) = *(_QWORD *)&v133[v142[8]];
          *(_QWORD *)((char *)v132 + v142[9]) = *(_QWORD *)&v133[v142[9]];
          *(_QWORD *)((char *)v132 + v142[10]) = *(_QWORD *)&v133[v142[10]];
          v147 = v142[11];
          v148 = (char *)v132 + v147;
          v149 = &v133[v147];
          v148[8] = v149[8];
          *(_QWORD *)v148 = *(_QWORD *)v149;
LABEL_43:
          swift_storeEnumTagMultiPayload();
          a3 = v186;
          break;
        case 3u:
          v122 = type metadata accessor for Device.Control.ColorState(0);
          v123 = *(_QWORD *)(v122 - 8);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v123 + 48))(v101, 1, v122))
          {
            v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
            v125 = __dst;
            memcpy(__dst, v101, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
          }
          else
          {
            v187 = a3;
            v150 = sub_23E135328();
            v151 = *(_QWORD *)(v150 - 8);
            if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v151 + 48))(v101, 1, v150))
            {
              v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
              v125 = __dst;
              memcpy(__dst, v101, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
            }
            else
            {
              v153 = v150;
              v182 = v150;
              v125 = __dst;
              (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v151 + 32))(__dst, v101, v153);
              (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v151 + 56))(__dst, 0, 1, v182);
            }
            v154 = *(int *)(v122 + 20);
            v155 = &v125[v154];
            v156 = &v101[v154];
            *(_QWORD *)v155 = *(_QWORD *)v156;
            v155[8] = v156[8];
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v125, 0, 1, v122);
            a3 = v187;
          }
          v157 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D640) + 48);
          v158 = &v125[v157];
          v159 = &v101[v157];
          *(_QWORD *)v158 = *(_QWORD *)v159;
          *(_DWORD *)(v158 + 7) = *(_DWORD *)(v159 + 7);
          goto LABEL_49;
        case 6u:
          v98(__dst, v101, v97);
LABEL_49:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(__dst, v101, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
          break;
      }
      v160 = v99[6];
      v161 = &v94[v160];
      v162 = &v95[v160];
      v163 = type metadata accessor for Device.Control.Source(0);
      v164 = swift_getEnumCaseMultiPayload();
      if (v164 == 2)
      {
        *v161 = *v162;
        v167 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630) + 48);
        v168 = (char *)v161 + v167;
        v169 = (char *)v162 + v167;
        v170 = sub_23E134E9C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v168, v169, v170);
        swift_storeEnumTagMultiPayload();
      }
      else if (v164)
      {
        memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
      }
      else
      {
        v165 = sub_23E1356DC();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v165 - 8) + 32))(v161, v162, v165);
        v166 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
        *(_QWORD *)((char *)v161 + *(int *)(v166 + 48)) = *(_QWORD *)((char *)v162 + *(int *)(v166 + 48));
        swift_storeEnumTagMultiPayload();
      }
      v94[v99[7]] = v95[v99[7]];
      *(_OWORD *)&v94[v99[8]] = *(_OWORD *)&v95[v99[8]];
      *(_WORD *)&v94[v99[9]] = *(_WORD *)&v95[v99[9]];
      v94[v99[10]] = v95[v99[10]];
      v94[v99[11]] = v95[v99[11]];
      v171 = type metadata accessor for DisplayControl(0);
      v94[*(int *)(v171 + 20)] = v95[*(int *)(v171 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    }
  }
  v172 = a3[7];
  v173 = &a1[v172];
  v174 = (uint64_t *)&a2[v172];
  v176 = *v174;
  v175 = v174[1];
  *v173 = v176;
  v173[1] = v175;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_23E0D4644()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0D4650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = type metadata accessor for Device.ControlGroup(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for DisplayControlGroup.LayoutType(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_23E0D4708()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0D4714(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = type metadata accessor for Device.ControlGroup(0);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for DisplayControlGroup.LayoutType(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t sub_23E0D47BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Device.ControlGroup(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DisplayControlGroup.LayoutType(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlRow()
{
  return &type metadata for ControlRow;
}

uint64_t sub_23E0D4860()
{
  return sub_23DF73F28(&qword_256D25D98, type metadata accessor for DisplayControlGroup, (uint64_t)&unk_23E141D44);
}

uint64_t sub_23E0D488C()
{
  return sub_23DF73F28(&qword_256D25DA0, type metadata accessor for DisplayControl, (uint64_t)&unk_23E141DAC);
}

uint64_t sub_23E0D48B8()
{
  return sub_23DF73F28(&qword_256D25DA8, type metadata accessor for DisplayControlGroup.LayoutType, (uint64_t)&unk_23E141E14);
}

uint64_t sub_23E0D48E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t AccessoryControlInfo.binding(state:)(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v2 = v1;
  v4 = type metadata accessor for AccessoryControlInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = *a1;
  sub_23E1372C0();
  v8 = sub_23E1372B4();
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v10;
  *(_BYTE *)(v9 + 32) = v7;
  sub_23DF73E10(v2, (uint64_t)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryControlInfo);
  v11 = sub_23E1372B4();
  v12 = (*(unsigned __int8 *)(v5 + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v10;
  *(_BYTE *)(v13 + 32) = v7;
  sub_23DF89384((uint64_t)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for AccessoryControlInfo);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECA8);
  sub_23E136E94();
  return v15[1];
}

uint64_t sub_23E0D4A48()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_23E0D4A6C(char *a1@<X8>)
{
  uint64_t v1;
  int v2;
  char v3;

  v2 = *(unsigned __int8 *)(v1 + 32);
  if (v2 == 2)
    v3 = 2;
  else
    v3 = v2 & 1;
  *a1 = v3;
}

void sub_23E0D4A84(unsigned __int8 *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t (*v39)();
  unint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)();
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  int v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  char *v81;
  int v82;
  int v83;
  int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;

  v98 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v102 = *(_QWORD *)(v98 - 8);
  MEMORY[0x24BDAC7A8](v98);
  v97 = (uint64_t)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v96 = (uint64_t)&v66 - v10;
  v11 = sub_23E134E9C();
  v100 = *(_QWORD *)(v11 - 8);
  v101 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v99 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v95);
  v103 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AccessoryControlInfo.Writer(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v94 = (uint64_t)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25DB0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  v92 = *(_QWORD *)(v23 - 8);
  v93 = v23;
  MEMORY[0x24BDAC7A8](v23);
  v87 = (uint64_t)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v25);
  v91 = (uint64_t)&v66 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *a1;
  if (v30 != 2)
  {
    v31 = v30 & 1;
    if (a4 == 2 || ((a4 & 1) == 0) == (v31 != 0))
    {
      v32 = *(_QWORD *)(a5 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 44));
      swift_beginAccess();
      v33 = v32;
      v34 = off_256D1ED18;
      v35 = *(_QWORD *)(v33 + 16);
      if (v35)
      {
        v88 = v31;
        v79 = off_256D1ED18;
        v81 = v29;
        v36 = v33 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        v90 = *(_QWORD *)(v18 + 72);
        v89 = *MEMORY[0x24BE4D7C8];
        v85 = *MEMORY[0x24BE4D7B8];
        v84 = *MEMORY[0x24BE4D6E0];
        v83 = *MEMORY[0x24BE4D610];
        v82 = *MEMORY[0x24BE4D778];
        v77 = *MEMORY[0x24BE4D6F0];
        v76 = *MEMORY[0x24BE4D878];
        v75 = *MEMORY[0x24BE4D650];
        v74 = *MEMORY[0x24BE4D810];
        v73 = *MEMORY[0x24BE4D688];
        v72 = *MEMORY[0x24BE4D828];
        v71 = *MEMORY[0x24BE4D590];
        v70 = *MEMORY[0x24BE4D5A0];
        v69 = *MEMORY[0x24BE4D7F8];
        v68 = *MEMORY[0x24BE4D690];
        v67 = *MEMORY[0x24BE4D830];
        v66 = *MEMORY[0x24BE4D6A0];
        v80 = qword_256D1ED20;
        v37 = v33;
        swift_retain();
        v78 = v37;
        swift_bridgeObjectRetain();
        v38 = MEMORY[0x24BEE4AF8];
        v39 = type metadata accessor for HAPControlSolver.Source;
        v86 = a5;
        while (1)
        {
          v40 = v38;
          v41 = v15;
          v42 = a5;
          v43 = v94;
          sub_23DF73E10(v36, v94, type metadata accessor for AccessoryControlInfo.Writer);
          v44 = v43;
          v45 = v103;
          v46 = v39;
          sub_23DF89384(v44, v103, (uint64_t (*)(_QWORD))v39);
          v47 = v45 + *(int *)(v95 + 20);
          v49 = v99;
          v48 = v100;
          v50 = v101;
          (*(void (**)(char *, uint64_t, uint64_t))(v100 + 16))(v99, v47, v101);
          v51 = (*(uint64_t (**)(char *, uint64_t))(v48 + 88))(v49, v50);
          if (v51 == v89)
          {
            v52 = sub_23E0DA478();
            a5 = v42;
            v39 = v46;
            v15 = v41;
            v38 = v40;
            goto LABEL_29;
          }
          a5 = v42;
          v39 = v46;
          v15 = v41;
          v38 = v40;
          if (v51 == v85)
          {
LABEL_11:
            v52 = sub_23E0DA698();
            goto LABEL_29;
          }
          if (v51 == v84)
          {
            v52 = sub_23E0DA4BC();
            goto LABEL_29;
          }
          if (v51 == v83)
          {
            v52 = sub_23E0DA544();
            goto LABEL_29;
          }
          if (v51 == v82)
          {
            v52 = sub_23E0DA654();
            goto LABEL_29;
          }
          if (v51 == v77)
          {
            v52 = sub_23E0DA3F0();
            goto LABEL_29;
          }
          if (v51 == v76)
          {
            v52 = sub_23E0DA5CC();
            goto LABEL_29;
          }
          if (v51 == v75)
          {
            v52 = sub_23E0DA500();
            goto LABEL_29;
          }
          if (v51 == v74)
            goto LABEL_28;
          if (v51 == v73)
          {
            v52 = sub_23E0DA3AC();
            goto LABEL_29;
          }
          if (v51 == v72)
          {
LABEL_28:
            v52 = sub_23E0DA610();
          }
          else if (v51 == v71)
          {
            v52 = sub_23E0DA368();
          }
          else if (v51 == v70)
          {
            v52 = sub_23E0DA588();
          }
          else if (v51 == v69)
          {
            v52 = sub_23E0DA434();
          }
          else
          {
            if (v51 == v68)
              goto LABEL_11;
            if (v51 != v67 && v51 != v66)
            {
              (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v102 + 56))(v15, 1, 1, v98);
              goto LABEL_30;
            }
            v52 = sub_23E0DA478();
          }
LABEL_29:
          v104 = v88;
          (*(void (**)(char *, uint64_t, uint64_t))(v52 + 40))(&v104, a5, v103);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v15, 1, v98) != 1)
          {
            sub_23DF89384((uint64_t)v15, (uint64_t)v22, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            v53 = 0;
            goto LABEL_32;
          }
LABEL_30:
          sub_23DF89C7C((uint64_t)v15, &qword_256D23D20);
          v53 = 1;
LABEL_32:
          v55 = v92;
          v54 = v93;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v22, v53, 1, v93);
          sub_23DF73E54(v103, (uint64_t (*)(_QWORD))v39);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v22, 1, v54) == 1)
          {
            sub_23DF89C7C((uint64_t)v22, &qword_256D25DB0);
          }
          else
          {
            v56 = v91;
            sub_23DF89384((uint64_t)v22, v91, type metadata accessor for AccessoryControlInfo.Writer.Result);
            v57 = v56;
            v58 = v87;
            sub_23DF73E10(v57, v87, type metadata accessor for AccessoryControlInfo.Writer.Result);
            v59 = v58;
            v60 = v96;
            sub_23DF89384(v59, v96, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            sub_23DF73E10(v60, v97, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v38 = sub_23E0083F8(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
            v62 = *(_QWORD *)(v38 + 16);
            v61 = *(_QWORD *)(v38 + 24);
            if (v62 >= v61 >> 1)
              v38 = sub_23E0083F8(v61 > 1, v62 + 1, 1, v38);
            *(_QWORD *)(v38 + 16) = v62 + 1;
            sub_23DF89384(v97, v38+ ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80))+ *(_QWORD *)(v102 + 72) * v62, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            sub_23DF73E54(v96, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            sub_23DF73E54(v91, type metadata accessor for AccessoryControlInfo.Writer.Result);
            a5 = v86;
          }
          v36 += v90;
          if (!--v35)
          {
            swift_bridgeObjectRelease();
            v29 = v81;
            v63 = v80;
            v34 = v79;
            goto LABEL_51;
          }
        }
      }
      v63 = qword_256D1ED20;
      swift_retain();
      v38 = MEMORY[0x24BEE4AF8];
LABEL_51:
      v64 = sub_23E1372E4();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v29, 1, 1, v64);
      v65 = (_QWORD *)swift_allocObject();
      v65[2] = 0;
      v65[3] = 0;
      v65[4] = v34;
      v65[5] = v63;
      v65[6] = v38;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_23DFA2514((uint64_t)v29, (uint64_t)&unk_256D25E48, (uint64_t)v65);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

uint64_t sub_23E0D548C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void (*v4)(unint64_t, uint64_t);
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int EnumCaseMultiPayload;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = type metadata accessor for AccessoryControlInfo(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 33) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = sub_23E134C80();
  v4 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v0 + v2, v3);
  v5 = v0 + v2 + *(int *)(v1 + 20);
  type metadata accessor for AccessoryControlInfo.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for IconDescriptor();
      v7 = v5 + *(int *)(v6 + 20);
      v8 = sub_23E135910();
      v9 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v9(v7, v8);
      v10 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v9(v10 + *(int *)(v6 + 20), v8);
      v11 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v12 = v5 + *(int *)(v11 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
        goto LABEL_12;
      if (!EnumCaseMultiPayload)
      {
        v14 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v15 = sub_23E134C20();
        goto LABEL_7;
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for IconDescriptor();
      v17 = v5 + *(int *)(v16 + 20);
      v18 = sub_23E135910();
      v19 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
      v19(v17, v18);
      v20 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v19(v20 + *(int *)(v16 + 20), v18);
      v21 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v22 = v5 + *(int *)(v21 + 28);
      v23 = sub_23E135520();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      v14 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v24 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24))
      {
        v15 = sub_23E13534C();
LABEL_7:
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      }
      break;
    case 2u:
    case 4u:
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      v25 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v26 = type metadata accessor for Device.Control.ColorState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
      {
        v27 = sub_23E135328();
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27))
          (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v25, v27);
      }
      break;
    case 6u:
      v4(v5, v3);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23E0D5810(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo(0) - 8) + 80);
  sub_23E0D4A84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32), v1 + ((v3 + 33) & ~v3));
}

uint64_t AccessoryControlInfo.binding(state:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;

  v18 = a2;
  v3 = type metadata accessor for AccessoryControlInfo(0);
  v16[0] = *(_QWORD *)(v3 - 8);
  v4 = *(_QWORD *)(v16[0] + 64);
  MEMORY[0x24BDAC7A8](v3);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v5 = *(_QWORD *)(v17 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v17);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v7, &qword_256D1D5D8);
  sub_23E1372C0();
  v8 = sub_23E1372B4();
  v9 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v10 = swift_allocObject();
  v11 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v10 + 16) = v8;
  *(_QWORD *)(v10 + 24) = v11;
  sub_23DF89340((uint64_t)v7, v10 + v9, &qword_256D1D5D8);
  sub_23DF89C1C(a1, (uint64_t)v7, &qword_256D1D5D8);
  sub_23DF73E10(v16[1], (uint64_t)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryControlInfo);
  v12 = sub_23E1372B4();
  v13 = (v9 + v6 + *(unsigned __int8 *)(v16[0] + 80)) & ~(unint64_t)*(unsigned __int8 *)(v16[0] + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  *(_QWORD *)(v14 + 24) = MEMORY[0x24BEE6930];
  sub_23DF89340((uint64_t)v7, v14 + v9, &qword_256D1D5D8);
  sub_23DF89384((uint64_t)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for AccessoryControlInfo);
  return sub_23E136E94();
}

uint64_t sub_23E0D5A38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = type metadata accessor for Device.Control.IncrementalState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    v4 = sub_23E13534C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v0 + v2, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_23E0D5AD8@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0D7E38(&qword_256D1D5D8, a1);
}

uint64_t sub_23E0D5AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  int v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;

  v98 = a5;
  v101 = a4;
  v103 = (char *)a1;
  v110 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v114 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v109 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v108 = (uint64_t)&v79 - v7;
  v8 = sub_23E134E9C();
  v112 = *(_QWORD *)(v8 - 8);
  v113 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v111 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v107);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AccessoryControlInfo.Writer(0);
  v95 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v106 = (uint64_t)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25DB0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  v104 = *(_QWORD *)(v20 - 8);
  v105 = v20;
  MEMORY[0x24BDAC7A8](v20);
  v99 = (uint64_t)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v102 = (uint64_t)&v79 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v24);
  v96 = (char *)&v79 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF18);
  MEMORY[0x24BDAC7A8](v100);
  v27 = (char *)&v79 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v28);
  v97 = (uint64_t)&v79 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v79 - v31;
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v79 - v34;
  v36 = type metadata accessor for Device.Control.IncrementalState(0);
  v37 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v94 = (uint64_t)&v79 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v41 = (char *)&v79 - v40;
  sub_23DF89C1C((uint64_t)v103, (uint64_t)v35, &qword_256D1D5D8);
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  if (v42(v35, 1, v36) == 1)
    return sub_23DF89C7C((uint64_t)v35, &qword_256D1D5D8);
  sub_23DF89384((uint64_t)v35, (uint64_t)v41, type metadata accessor for Device.Control.IncrementalState);
  v103 = v41;
  sub_23DF73E10((uint64_t)v41, (uint64_t)v32, type metadata accessor for Device.Control.IncrementalState);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v32, 0, 1, v36);
  v44 = (uint64_t)&v27[*(int *)(v100 + 48)];
  sub_23DF89C1C((uint64_t)v32, (uint64_t)v27, &qword_256D1D5D8);
  sub_23DF89C1C(v101, v44, &qword_256D1D5D8);
  if (v42(v27, 1, v36) != 1)
  {
    v46 = v97;
    sub_23DF89C1C((uint64_t)v27, v97, &qword_256D1D5D8);
    if (v42((char *)v44, 1, v36) == 1)
    {
      v47 = &qword_256D1EF18;
      v45 = (uint64_t)v103;
    }
    else
    {
      v48 = v94;
      sub_23DF89384(v44, v94, type metadata accessor for Device.Control.IncrementalState);
      v49 = sub_23E135340();
      v45 = (uint64_t)v103;
      if ((v49 & 1) != 0)
      {
        v50 = *(int *)(v36 + 20);
        v51 = v46;
        v52 = *(unsigned __int8 *)(v46 + v50);
        v53 = *(unsigned __int8 *)(v48 + v50);
        sub_23DF73E54(v48, type metadata accessor for Device.Control.IncrementalState);
        sub_23DF89C7C((uint64_t)v32, &qword_256D1D5D8);
        sub_23DF73E54(v51, type metadata accessor for Device.Control.IncrementalState);
        sub_23DF89C7C((uint64_t)v27, &qword_256D1D5D8);
        if (v52 == v53)
          return sub_23DF73E54(v45, type metadata accessor for Device.Control.IncrementalState);
        goto LABEL_15;
      }
      sub_23DF73E54(v48, type metadata accessor for Device.Control.IncrementalState);
      v47 = &qword_256D1D5D8;
    }
    sub_23DF89C7C((uint64_t)v32, &qword_256D1D5D8);
    sub_23DF73E54(v46, type metadata accessor for Device.Control.IncrementalState);
LABEL_14:
    sub_23DF89C7C((uint64_t)v27, v47);
LABEL_15:
    v54 = *(_QWORD *)(v98 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 44));
    swift_beginAccess();
    v56 = off_256D1ED18;
    v55 = qword_256D1ED20;
    v57 = *(_QWORD *)(v54 + 16);
    if (!v57)
    {
      swift_retain();
      v59 = MEMORY[0x24BEE4AF8];
LABEL_62:
      v76 = sub_23E1372E4();
      v77 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v96, 1, 1, v76);
      v78 = (_QWORD *)swift_allocObject();
      v78[2] = 0;
      v78[3] = 0;
      v78[4] = v56;
      v78[5] = v55;
      v78[6] = v59;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_23DFA2514(v77, (uint64_t)&unk_256D25E40, (uint64_t)v78);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return sub_23DF73E54(v45, type metadata accessor for Device.Control.IncrementalState);
    }
    v92 = off_256D1ED18;
    v58 = v54 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
    v101 = *(_QWORD *)(v95 + 72);
    LODWORD(v100) = *MEMORY[0x24BE4D7C8];
    LODWORD(v98) = *MEMORY[0x24BE4D7B8];
    LODWORD(v97) = *MEMORY[0x24BE4D6E0];
    LODWORD(v95) = *MEMORY[0x24BE4D610];
    LODWORD(v94) = *MEMORY[0x24BE4D778];
    v90 = *MEMORY[0x24BE4D6F0];
    v89 = *MEMORY[0x24BE4D878];
    v88 = *MEMORY[0x24BE4D650];
    v87 = *MEMORY[0x24BE4D810];
    v86 = *MEMORY[0x24BE4D688];
    v85 = *MEMORY[0x24BE4D828];
    v84 = *MEMORY[0x24BE4D590];
    v83 = *MEMORY[0x24BE4D5A0];
    v82 = *MEMORY[0x24BE4D7F8];
    v81 = *MEMORY[0x24BE4D690];
    v80 = *MEMORY[0x24BE4D830];
    v79 = *MEMORY[0x24BE4D6A0];
    v93 = qword_256D1ED20;
    swift_retain();
    v91 = v54;
    swift_bridgeObjectRetain();
    v59 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      v60 = v106;
      sub_23DF73E10(v58, v106, type metadata accessor for AccessoryControlInfo.Writer);
      sub_23DF89384(v60, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      v62 = v111;
      v61 = v112;
      v63 = v113;
      (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v111, &v14[*(int *)(v107 + 20)], v113);
      v64 = (*(uint64_t (**)(char *, uint64_t))(v61 + 88))(v62, v63);
      if (v64 == (_DWORD)v100)
      {
        v65 = sub_23E0DA478();
        v45 = (uint64_t)v103;
        goto LABEL_40;
      }
      v45 = (uint64_t)v103;
      if (v64 == (_DWORD)v98)
      {
LABEL_22:
        v65 = sub_23E0DA698();
        goto LABEL_40;
      }
      if (v64 == (_DWORD)v97)
      {
        v65 = sub_23E0DA4BC();
        goto LABEL_40;
      }
      if (v64 == (_DWORD)v95)
      {
        v65 = sub_23E0DA544();
        goto LABEL_40;
      }
      if (v64 == (_DWORD)v94)
      {
        v65 = sub_23E0DA654();
        goto LABEL_40;
      }
      if (v64 == v90)
      {
        v65 = sub_23E0DA3F0();
        goto LABEL_40;
      }
      if (v64 == v89)
      {
        v65 = sub_23E0DA5CC();
        goto LABEL_40;
      }
      if (v64 == v88)
      {
        v65 = sub_23E0DA500();
        goto LABEL_40;
      }
      if (v64 == v87)
        goto LABEL_39;
      if (v64 == v86)
      {
        v65 = sub_23E0DA3AC();
        goto LABEL_40;
      }
      if (v64 == v85)
      {
LABEL_39:
        v65 = sub_23E0DA610();
      }
      else if (v64 == v84)
      {
        v65 = sub_23E0DA368();
      }
      else if (v64 == v83)
      {
        v65 = sub_23E0DA588();
      }
      else if (v64 == v82)
      {
        v65 = sub_23E0DA434();
      }
      else
      {
        if (v64 == v81)
          goto LABEL_22;
        if (v64 != v80 && v64 != v79)
        {
          (*(void (**)(char *, uint64_t))(v112 + 8))(v111, v113);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56))(v12, 1, 1, v110);
          goto LABEL_41;
        }
        v65 = sub_23E0DA478();
      }
LABEL_40:
      (*(void (**)(uint64_t, char *))(v65 + 48))(v45, v14);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48))(v12, 1, v110) != 1)
      {
        sub_23DF89384((uint64_t)v12, (uint64_t)v19, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        v66 = 0;
        goto LABEL_43;
      }
LABEL_41:
      sub_23DF89C7C((uint64_t)v12, &qword_256D23D20);
      v66 = 1;
LABEL_43:
      v68 = v104;
      v67 = v105;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v19, v66, 1, v105);
      sub_23DF73E54((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v19, 1, v67) == 1)
      {
        sub_23DF89C7C((uint64_t)v19, &qword_256D25DB0);
      }
      else
      {
        v69 = v102;
        sub_23DF89384((uint64_t)v19, v102, type metadata accessor for AccessoryControlInfo.Writer.Result);
        v70 = v69;
        v71 = v99;
        sub_23DF73E10(v70, v99, type metadata accessor for AccessoryControlInfo.Writer.Result);
        v72 = v71;
        v73 = v108;
        sub_23DF89384(v72, v108, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        sub_23DF73E10(v73, v109, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v59 = sub_23E0083F8(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
        v75 = *(_QWORD *)(v59 + 16);
        v74 = *(_QWORD *)(v59 + 24);
        if (v75 >= v74 >> 1)
          v59 = sub_23E0083F8(v74 > 1, v75 + 1, 1, v59);
        *(_QWORD *)(v59 + 16) = v75 + 1;
        sub_23DF89384(v109, v59+ ((*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80))+ *(_QWORD *)(v114 + 72) * v75, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        sub_23DF73E54(v108, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        sub_23DF73E54(v102, type metadata accessor for AccessoryControlInfo.Writer.Result);
      }
      v58 += v101;
      if (!--v57)
      {
        swift_bridgeObjectRelease();
        v55 = v93;
        v56 = v92;
        goto LABEL_62;
      }
    }
  }
  sub_23DF89C7C((uint64_t)v32, &qword_256D1D5D8);
  if (v42((char *)v44, 1, v36) != 1)
  {
    v47 = &qword_256D1EF18;
    v45 = (uint64_t)v103;
    goto LABEL_14;
  }
  sub_23DF89C7C((uint64_t)v27, &qword_256D1D5D8);
  v45 = (uint64_t)v103;
  return sub_23DF73E54(v45, type metadata accessor for Device.Control.IncrementalState);
}

uint64_t sub_23E0D67B4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, uint64_t);
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int EnumCaseMultiPayload;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v34)(unint64_t, uint64_t);
  uint64_t v35;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for AccessoryControlInfo(0);
  v5 = (v2 + v3 + *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  swift_unknownObjectRelease();
  v6 = v0 + v2;
  v7 = type metadata accessor for Device.Control.IncrementalState(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v9 = sub_23E13534C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v6, v9);
  }
  v10 = sub_23E134C80();
  v11 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v0 + v5, v10);
  v12 = v0 + v5 + *(int *)(v4 + 20);
  type metadata accessor for AccessoryControlInfo.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for IconDescriptor();
      v14 = v12 + *(int *)(v13 + 20);
      v15 = sub_23E135910();
      v16 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8);
      v16(v14, v15);
      v17 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v16(v17 + *(int *)(v13 + 20), v15);
      v18 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v19 = v12 + *(int *)(v18 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
        goto LABEL_11;
      if (!EnumCaseMultiPayload)
      {
        v21 = v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v22 = sub_23E134C20();
        goto LABEL_10;
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for IconDescriptor();
      v23 = v12 + *(int *)(v35 + 20);
      v24 = sub_23E135910();
      v34 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8);
      v34(v23, v24);
      v25 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v34(v25 + *(int *)(v35 + 20), v24);
      v26 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v27 = v12 + *(int *)(v26 + 28);
      v28 = sub_23E135520();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v27, v28);
      v21 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      if (!v8(v21, 1, v7))
      {
        v22 = sub_23E13534C();
LABEL_10:
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      break;
    case 2u:
    case 4u:
LABEL_11:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      v29 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v30 = type metadata accessor for Device.Control.ColorState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v29, 1, v30))
      {
        v31 = sub_23E135328();
        v32 = *(_QWORD *)(v31 - 8);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v32 + 48))(v29, 1, v31))
          (*(void (**)(unint64_t, uint64_t))(v32 + 8))(v29, v31);
      }
      break;
    case 6u:
      v11(v12, v10);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E0D6B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo(0) - 8) + 80);
  return sub_23E0D5AE4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t AccessoryControlInfo.binding(state:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a2;
  v5 = type metadata accessor for AccessoryControlInfo(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = *a1;
  v9 = *((_BYTE *)a1 + 8);
  sub_23E1372C0();
  v10 = sub_23E1372B4();
  v11 = swift_allocObject();
  v12 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v11 + 16) = v10;
  *(_QWORD *)(v11 + 24) = v12;
  *(_QWORD *)(v11 + 32) = v8;
  *(_BYTE *)(v11 + 40) = v9;
  sub_23DF73E10(v3, (uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryControlInfo);
  v13 = sub_23E1372B4();
  v14 = (*(unsigned __int8 *)(v6 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v12;
  *(_QWORD *)(v15 + 32) = v8;
  *(_BYTE *)(v15 + 40) = v9;
  sub_23DF89384((uint64_t)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + v14, type metadata accessor for AccessoryControlInfo);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECB8);
  return sub_23E136E94();
}

uint64_t sub_23E0D6D58()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

void sub_23E0D6D7C(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_BYTE *)(a1 + 8) = v2;
}

void sub_23E0D6D90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  uint64_t (*v38)();
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  int v58;
  int v59;
  int v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  int v73;
  char *v74;
  int v75;
  int v76;
  int v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v80 = a6;
  v89 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v93 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v88 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v87 = (uint64_t)&v58 - v11;
  v12 = sub_23E134E9C();
  v91 = *(_QWORD *)(v12 - 8);
  v92 = v12;
  MEMORY[0x24BDAC7A8](v12);
  v90 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v86);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AccessoryControlInfo.Writer(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v85 = (uint64_t)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25DB0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  v84 = *(_QWORD *)(v82 - 8);
  MEMORY[0x24BDAC7A8](v82);
  v78 = (uint64_t)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v83 = (uint64_t)&v58 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v28);
  if ((a1[1] & 1) == 0 && ((a5 & 1) != 0 || *a1 != a4))
  {
    v81 = *a1;
    v74 = (char *)&v58 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v30 = *(_QWORD *)(v80 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 44));
    swift_beginAccess();
    v31 = off_256D1ED18;
    v32 = *(_QWORD *)(v30 + 16);
    if (v32)
    {
      v71 = off_256D1ED18;
      v33 = v30;
      v34 = v30 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
      v80 = *(_QWORD *)(v20 + 72);
      v79 = *MEMORY[0x24BE4D7C8];
      v77 = *MEMORY[0x24BE4D7B8];
      v76 = *MEMORY[0x24BE4D6E0];
      v75 = *MEMORY[0x24BE4D610];
      v73 = *MEMORY[0x24BE4D778];
      v69 = *MEMORY[0x24BE4D6F0];
      v68 = *MEMORY[0x24BE4D878];
      v67 = *MEMORY[0x24BE4D650];
      v66 = *MEMORY[0x24BE4D810];
      v65 = *MEMORY[0x24BE4D688];
      v64 = *MEMORY[0x24BE4D828];
      v63 = *MEMORY[0x24BE4D590];
      v62 = *MEMORY[0x24BE4D5A0];
      v61 = *MEMORY[0x24BE4D7F8];
      v60 = *MEMORY[0x24BE4D690];
      v59 = *MEMORY[0x24BE4D830];
      v58 = *MEMORY[0x24BE4D6A0];
      v72 = qword_256D1ED20;
      swift_retain();
      v70 = v33;
      swift_bridgeObjectRetain();
      v35 = MEMORY[0x24BEE4AF8];
      v36 = type metadata accessor for HAPControlSolver.Source;
      while (1)
      {
        v37 = v85;
        sub_23DF73E10(v34, v85, type metadata accessor for AccessoryControlInfo.Writer);
        v38 = v36;
        sub_23DF89384(v37, (uint64_t)v18, (uint64_t (*)(_QWORD))v36);
        v39 = v90;
        v40 = v91;
        v41 = v92;
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v90, &v18[*(int *)(v86 + 20)], v92);
        v42 = (*(uint64_t (**)(char *, uint64_t))(v40 + 88))(v39, v41);
        if (v42 == v79)
        {
          v43 = sub_23E0DA478();
          v36 = v38;
          goto LABEL_29;
        }
        v36 = v38;
        if (v42 == v77)
        {
LABEL_11:
          v43 = sub_23E0DA698();
          goto LABEL_29;
        }
        if (v42 == v76)
        {
          v43 = sub_23E0DA4BC();
          goto LABEL_29;
        }
        if (v42 == v75)
        {
          v43 = sub_23E0DA544();
          goto LABEL_29;
        }
        if (v42 == v73)
        {
          v43 = sub_23E0DA654();
          goto LABEL_29;
        }
        if (v42 == v69)
        {
          v43 = sub_23E0DA3F0();
          goto LABEL_29;
        }
        if (v42 == v68)
        {
          v43 = sub_23E0DA5CC();
          goto LABEL_29;
        }
        if (v42 == v67)
        {
          v43 = sub_23E0DA500();
          goto LABEL_29;
        }
        if (v42 == v66)
          goto LABEL_28;
        if (v42 == v65)
        {
          v43 = sub_23E0DA3AC();
          goto LABEL_29;
        }
        if (v42 == v64)
        {
LABEL_28:
          v43 = sub_23E0DA610();
        }
        else if (v42 == v63)
        {
          v43 = sub_23E0DA368();
        }
        else if (v42 == v62)
        {
          v43 = sub_23E0DA588();
        }
        else if (v42 == v61)
        {
          v43 = sub_23E0DA434();
        }
        else
        {
          if (v42 == v60)
            goto LABEL_11;
          if (v42 != v59 && v42 != v58)
          {
            (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v92);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v93 + 56))(v16, 1, 1, v89);
            goto LABEL_30;
          }
          v43 = sub_23E0DA478();
        }
LABEL_29:
        v94 = v81;
        (*(void (**)(uint64_t *, char *))(v43 + 56))(&v94, v18);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v16, 1, v89) != 1)
        {
          sub_23DF89384((uint64_t)v16, (uint64_t)v24, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
          v44 = 0;
          goto LABEL_32;
        }
LABEL_30:
        sub_23DF89C7C((uint64_t)v16, &qword_256D23D20);
        v44 = 1;
LABEL_32:
        v45 = v84;
        v46 = v82;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v24, v44, 1, v82);
        sub_23DF73E54((uint64_t)v18, (uint64_t (*)(_QWORD))v36);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v24, 1, v46) == 1)
        {
          sub_23DF89C7C((uint64_t)v24, &qword_256D25DB0);
        }
        else
        {
          v47 = v83;
          sub_23DF89384((uint64_t)v24, v83, type metadata accessor for AccessoryControlInfo.Writer.Result);
          v48 = v47;
          v49 = v78;
          sub_23DF73E10(v48, v78, type metadata accessor for AccessoryControlInfo.Writer.Result);
          v50 = v49;
          v51 = v87;
          sub_23DF89384(v50, v87, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
          sub_23DF73E10(v51, v88, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v35 = sub_23E0083F8(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
          v53 = *(_QWORD *)(v35 + 16);
          v52 = *(_QWORD *)(v35 + 24);
          if (v53 >= v52 >> 1)
            v35 = sub_23E0083F8(v52 > 1, v53 + 1, 1, v35);
          *(_QWORD *)(v35 + 16) = v53 + 1;
          sub_23DF89384(v88, v35+ ((*(unsigned __int8 *)(v93 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80))+ *(_QWORD *)(v93 + 72) * v53, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
          sub_23DF73E54(v87, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
          sub_23DF73E54(v83, type metadata accessor for AccessoryControlInfo.Writer.Result);
        }
        v34 += v80;
        if (!--v32)
        {
          swift_bridgeObjectRelease();
          v54 = v72;
          v31 = v71;
          goto LABEL_51;
        }
      }
    }
    v54 = qword_256D1ED20;
    swift_retain();
    v35 = MEMORY[0x24BEE4AF8];
LABEL_51:
    v55 = sub_23E1372E4();
    v56 = (uint64_t)v74;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v74, 1, 1, v55);
    v57 = (_QWORD *)swift_allocObject();
    v57[2] = 0;
    v57[3] = 0;
    v57[4] = v31;
    v57[5] = v54;
    v57[6] = v35;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_23DFA2514(v56, (uint64_t)&unk_256D25E38, (uint64_t)v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_23E0D7740()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void (*v4)(unint64_t, uint64_t);
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int EnumCaseMultiPayload;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = type metadata accessor for AccessoryControlInfo(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = sub_23E134C80();
  v4 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v0 + v2, v3);
  v5 = v0 + v2 + *(int *)(v1 + 20);
  type metadata accessor for AccessoryControlInfo.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for IconDescriptor();
      v7 = v5 + *(int *)(v6 + 20);
      v8 = sub_23E135910();
      v9 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v9(v7, v8);
      v10 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v9(v10 + *(int *)(v6 + 20), v8);
      v11 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v12 = v5 + *(int *)(v11 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
        goto LABEL_12;
      if (!EnumCaseMultiPayload)
      {
        v14 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v15 = sub_23E134C20();
        goto LABEL_7;
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for IconDescriptor();
      v17 = v5 + *(int *)(v16 + 20);
      v18 = sub_23E135910();
      v19 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
      v19(v17, v18);
      v20 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v19(v20 + *(int *)(v16 + 20), v18);
      v21 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v22 = v5 + *(int *)(v21 + 28);
      v23 = sub_23E135520();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      v14 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v24 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24))
      {
        v15 = sub_23E13534C();
LABEL_7:
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      }
      break;
    case 2u:
    case 4u:
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      v25 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v26 = type metadata accessor for Device.Control.ColorState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
      {
        v27 = sub_23E135328();
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27))
          (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v25, v27);
      }
      break;
    case 6u:
      v4(v5, v3);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23E0D7AC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo(0) - 8) + 80);
  sub_23E0D6D90(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 40), v1 + ((v3 + 41) & ~v3));
}

uint64_t AccessoryControlInfo.binding(state:config:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;

  v31 = a3;
  v5 = type metadata accessor for AccessoryControlInfo(0);
  v22[0] = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v22[0] + 64);
  MEMORY[0x24BDAC7A8](v5);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v7 = *(_QWORD *)(v30 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x24BDAC7A8](v30);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a2;
  v28 = a2[1];
  v29 = v10;
  v11 = a2[2];
  v26 = *((unsigned __int16 *)a2 + 2);
  v27 = v11;
  v12 = a2[6];
  v24 = *((unsigned __int16 *)a2 + 4);
  v25 = v12;
  v23 = a2[10];
  sub_23DF89C1C(a1, (uint64_t)v9, &qword_256D1D5E8);
  sub_23E1372C0();
  v13 = sub_23E1372B4();
  v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  v16 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v15 + 16) = v13;
  *(_QWORD *)(v15 + 24) = v16;
  sub_23DF89340((uint64_t)v9, v15 + v14, &qword_256D1D5E8);
  sub_23DF89C1C(a1, (uint64_t)v9, &qword_256D1D5E8);
  sub_23DF73E10(v22[1], (uint64_t)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryControlInfo);
  v17 = sub_23E1372B4();
  v18 = (v14 + v8 + *(unsigned __int8 *)(v22[0] + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22[0] + 80);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v17;
  *(_QWORD *)(v19 + 24) = MEMORY[0x24BEE6930];
  sub_23DF89340((uint64_t)v9, v19 + v14, &qword_256D1D5E8);
  sub_23DF89384((uint64_t)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, type metadata accessor for AccessoryControlInfo);
  v20 = v19 + ((v6 + v18 + 1) & 0xFFFFFFFFFFFFFFFELL);
  *(_BYTE *)v20 = v29;
  *(_BYTE *)(v20 + 1) = v28;
  *(_BYTE *)(v20 + 2) = v27;
  *(_WORD *)(v20 + 4) = v26;
  *(_BYTE *)(v20 + 6) = v25;
  *(_WORD *)(v20 + 8) = v24;
  *(_BYTE *)(v20 + 10) = v23;
  return sub_23E136E94();
}

uint64_t sub_23E0D7D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8) - 8) + 80);
  v2 = (v1 + 32) & ~v1;
  swift_unknownObjectRelease();
  v3 = type metadata accessor for Device.Control.ColorState(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    v4 = sub_23E135328();
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4))
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  return swift_deallocObject();
}

uint64_t sub_23E0D7E2C@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0D7E38(&qword_256D1D5E8, a1);
}

uint64_t sub_23E0D7E38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8) + 80);
  return sub_23DF89C1C(v2 + ((v5 + 32) & ~v5), a2, a1);
}

uint64_t sub_23E0D7E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unsigned int (*v44)(char *, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t (*v54)();
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)();
  uint64_t v58;
  char *v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  BOOL v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  int v82;
  int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  int v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  int v97;
  int v98;
  char *v99;
  char *v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE v124[4];
  __int16 v125;
  char v126;
  __int16 v127;
  char v128;

  v109 = a7;
  v122 = a6;
  v106 = a5;
  v108 = a4;
  v118 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v123 = *(_QWORD *)(v118 - 8);
  MEMORY[0x24BDAC7A8](v118);
  v113 = (uint64_t)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v112 = (uint64_t)&v81 - v10;
  v11 = sub_23E134E9C();
  v120 = *(_QWORD *)(v11 - 8);
  v121 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v119 = (char *)&v81 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v13);
  v99 = (char *)&v81 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v117);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for AccessoryControlInfo.Writer(0);
  v104 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v116 = (uint64_t)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25DB0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  v114 = *(_QWORD *)(v22 - 8);
  v115 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v103 = (uint64_t)&v81 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v111 = (uint64_t)&v81 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v26);
  v100 = (char *)&v81 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF10);
  MEMORY[0x24BDAC7A8](v107);
  v29 = (char *)&v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  MEMORY[0x24BDAC7A8](v30);
  v105 = (uint64_t)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v81 - v33;
  MEMORY[0x24BDAC7A8](v35);
  v37 = (char *)&v81 - v36;
  v38 = type metadata accessor for Device.Control.ColorState(0);
  v39 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v102 = (uint64_t)&v81 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)&v81 - v42;
  sub_23DF89C1C(a1, (uint64_t)v37, &qword_256D1D5E8);
  v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
  if (v44(v37, 1, v38) == 1)
    return sub_23DF89C7C((uint64_t)v37, &qword_256D1D5E8);
  sub_23DF89384((uint64_t)v37, (uint64_t)v43, type metadata accessor for Device.Control.ColorState);
  v110 = v43;
  sub_23DF73E10((uint64_t)v43, (uint64_t)v34, type metadata accessor for Device.Control.ColorState);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v34, 0, 1, v38);
  v46 = (uint64_t)&v29[*(int *)(v107 + 48)];
  sub_23DF89C1C((uint64_t)v34, (uint64_t)v29, &qword_256D1D5E8);
  sub_23DF89C1C(v108, v46, &qword_256D1D5E8);
  if (v44(v29, 1, v38) != 1)
  {
    v47 = v105;
    sub_23DF89C1C((uint64_t)v29, v105, &qword_256D1D5E8);
    if (v44((char *)v46, 1, v38) != 1)
    {
      v75 = v102;
      sub_23DF89384(v46, v102, type metadata accessor for Device.Control.ColorState);
      v76 = _s22HomeAccessoryControlUI6DeviceV0C0V10ColorStateV2eeoiySbAG_AGtFZ_0(v47, v75);
      sub_23DF73E54(v75, type metadata accessor for Device.Control.ColorState);
      sub_23DF89C7C((uint64_t)v34, &qword_256D1D5E8);
      sub_23DF73E54(v47, type metadata accessor for Device.Control.ColorState);
      sub_23DF89C7C((uint64_t)v29, &qword_256D1D5E8);
      if (v76)
        goto LABEL_56;
      goto LABEL_9;
    }
    sub_23DF89C7C((uint64_t)v34, &qword_256D1D5E8);
    sub_23DF73E54(v47, type metadata accessor for Device.Control.ColorState);
LABEL_8:
    sub_23DF89C7C((uint64_t)v29, &qword_256D1EF10);
LABEL_9:
    v48 = *(_QWORD *)(v106 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 44));
    swift_beginAccess();
    v50 = off_256D1ED18;
    v49 = qword_256D1ED20;
    v51 = *(_QWORD *)(v48 + 16);
    if (!v51)
    {
      swift_retain();
      v53 = MEMORY[0x24BEE4AF8];
      v74 = (uint64_t)v110;
LABEL_58:
      v78 = sub_23E1372E4();
      v79 = (uint64_t)v100;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v100, 1, 1, v78);
      v80 = (_QWORD *)swift_allocObject();
      v80[2] = 0;
      v80[3] = 0;
      v80[4] = v50;
      v80[5] = v49;
      v80[6] = v53;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_23DFA2514(v79, (uint64_t)&unk_256D25E30, (uint64_t)v80);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v77 = v74;
      return sub_23DF73E54(v77, type metadata accessor for Device.Control.ColorState);
    }
    v95 = off_256D1ED18;
    v52 = v48 + ((*(unsigned __int8 *)(v104 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v104 + 80));
    v108 = *(_QWORD *)(v104 + 72);
    LODWORD(v107) = *MEMORY[0x24BE4D7C8];
    LODWORD(v102) = *MEMORY[0x24BE4D7B8];
    v101 = *MEMORY[0x24BE4D6E0];
    v98 = *MEMORY[0x24BE4D610];
    v97 = *MEMORY[0x24BE4D778];
    v93 = *MEMORY[0x24BE4D6F0];
    v92 = *MEMORY[0x24BE4D878];
    v91 = *MEMORY[0x24BE4D650];
    v90 = *MEMORY[0x24BE4D810];
    v89 = *MEMORY[0x24BE4D688];
    v88 = *MEMORY[0x24BE4D828];
    v87 = *MEMORY[0x24BE4D590];
    v86 = *MEMORY[0x24BE4D5A0];
    v85 = *MEMORY[0x24BE4D7F8];
    v84 = *MEMORY[0x24BE4D690];
    LODWORD(v106) = v122 & 1;
    v83 = *MEMORY[0x24BE4D830];
    LODWORD(v105) = (v122 >> 8) & 1;
    LODWORD(v104) = WORD1(v122) & 1;
    v82 = *MEMORY[0x24BE4D6A0];
    v96 = qword_256D1ED20;
    swift_retain();
    v94 = v48;
    swift_bridgeObjectRetain();
    v53 = MEMORY[0x24BEE4AF8];
    v54 = type metadata accessor for HAPControlSolver.Source;
    v55 = (uint64_t)v99;
    while (1)
    {
      v56 = v116;
      sub_23DF73E10(v52, v116, type metadata accessor for AccessoryControlInfo.Writer);
      v57 = v54;
      sub_23DF89384(v56, (uint64_t)v16, (uint64_t (*)(_QWORD))v54);
      v59 = v119;
      v58 = v120;
      v60 = v121;
      (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v119, &v16[*(int *)(v117 + 20)], v121);
      v61 = (*(uint64_t (**)(char *, uint64_t))(v58 + 88))(v59, v60);
      if (v61 == (_DWORD)v107)
      {
        v62 = sub_23E0DA478();
        v63 = v110;
        v54 = v57;
        goto LABEL_34;
      }
      v63 = v110;
      v54 = v57;
      if (v61 == (_DWORD)v102)
      {
LABEL_16:
        v62 = sub_23E0DA698();
        goto LABEL_34;
      }
      if (v61 == v101)
      {
        v62 = sub_23E0DA4BC();
        goto LABEL_34;
      }
      if (v61 == v98)
      {
        v62 = sub_23E0DA544();
        goto LABEL_34;
      }
      if (v61 == v97)
      {
        v62 = sub_23E0DA654();
        goto LABEL_34;
      }
      if (v61 == v93)
      {
        v62 = sub_23E0DA3F0();
        goto LABEL_34;
      }
      if (v61 == v92)
      {
        v62 = sub_23E0DA5CC();
        goto LABEL_34;
      }
      if (v61 == v91)
      {
        v62 = sub_23E0DA500();
        goto LABEL_34;
      }
      if (v61 == v90)
        goto LABEL_33;
      if (v61 == v89)
      {
        v62 = sub_23E0DA3AC();
        goto LABEL_34;
      }
      if (v61 == v88)
      {
LABEL_33:
        v62 = sub_23E0DA610();
      }
      else if (v61 == v87)
      {
        v62 = sub_23E0DA368();
      }
      else if (v61 == v86)
      {
        v62 = sub_23E0DA588();
      }
      else if (v61 == v85)
      {
        v62 = sub_23E0DA434();
      }
      else
      {
        if (v61 == v84)
          goto LABEL_16;
        if (v61 != v83 && v61 != v82)
        {
          (*(void (**)(char *, uint64_t))(v120 + 8))(v119, v121);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v55, 1, 1, v118);
          goto LABEL_35;
        }
        v62 = sub_23E0DA478();
      }
LABEL_34:
      v124[0] = v106;
      v124[1] = v105;
      v124[2] = v104;
      v125 = WORD2(v122);
      v126 = BYTE6(v122) & 1;
      v127 = v109;
      v128 = BYTE2(v109) & 1;
      (*(void (**)(char *, _BYTE *, char *))(v62 + 64))(v63, v124, v16);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v123 + 48))(v55, 1, v118) != 1)
      {
        sub_23DF89384(v55, (uint64_t)v21, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        v64 = 0;
        goto LABEL_37;
      }
LABEL_35:
      sub_23DF89C7C(v55, &qword_256D23D20);
      v64 = 1;
LABEL_37:
      v66 = v114;
      v65 = v115;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56))(v21, v64, 1, v115);
      sub_23DF73E54((uint64_t)v16, (uint64_t (*)(_QWORD))v54);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v21, 1, v65) == 1)
      {
        sub_23DF89C7C((uint64_t)v21, &qword_256D25DB0);
      }
      else
      {
        v67 = v111;
        sub_23DF89384((uint64_t)v21, v111, type metadata accessor for AccessoryControlInfo.Writer.Result);
        v68 = v67;
        v69 = v103;
        sub_23DF73E10(v68, v103, type metadata accessor for AccessoryControlInfo.Writer.Result);
        v70 = v69;
        v71 = v112;
        sub_23DF89384(v70, v112, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        sub_23DF73E10(v71, v113, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v53 = sub_23E0083F8(0, *(_QWORD *)(v53 + 16) + 1, 1, v53);
        v73 = *(_QWORD *)(v53 + 16);
        v72 = *(_QWORD *)(v53 + 24);
        if (v73 >= v72 >> 1)
          v53 = sub_23E0083F8(v72 > 1, v73 + 1, 1, v53);
        *(_QWORD *)(v53 + 16) = v73 + 1;
        sub_23DF89384(v113, v53+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(_QWORD *)(v123 + 72) * v73, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        sub_23DF73E54(v112, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
        sub_23DF73E54(v111, type metadata accessor for AccessoryControlInfo.Writer.Result);
      }
      v52 += v108;
      if (!--v51)
      {
        swift_bridgeObjectRelease();
        v74 = (uint64_t)v110;
        v49 = v96;
        v50 = v95;
        goto LABEL_58;
      }
    }
  }
  sub_23DF89C7C((uint64_t)v34, &qword_256D1D5E8);
  if (v44((char *)v46, 1, v38) != 1)
    goto LABEL_8;
  sub_23DF89C7C((uint64_t)v29, &qword_256D1D5E8);
LABEL_56:
  v77 = (uint64_t)v110;
  return sub_23DF73E54(v77, type metadata accessor for Device.Control.ColorState);
}

uint64_t sub_23E0D8BF0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = type metadata accessor for AccessoryControlInfo(0);
  v5 = (v2 + v3 + *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  swift_unknownObjectRelease();
  v6 = v0 + v2;
  v7 = type metadata accessor for Device.Control.ColorState(0);
  v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v9 = sub_23E135328();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v9);
  }
  v11 = v0 + v5;
  v12 = sub_23E134C80();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8);
  v13(v11, v12);
  v14 = v11 + *(int *)(v4 + 20);
  type metadata accessor for AccessoryControlInfo.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v15 = type metadata accessor for IconDescriptor();
      v16 = v14 + *(int *)(v15 + 20);
      v17 = sub_23E135910();
      v18 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8);
      v18(v16, v17);
      v19 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v18(v19 + *(int *)(v15 + 20), v17);
      v20 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v21 = v14 + *(int *)(v20 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
        goto LABEL_12;
      if (!EnumCaseMultiPayload)
      {
        v23 = v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v24 = sub_23E134C20();
        goto LABEL_11;
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v25 = type metadata accessor for IconDescriptor();
      v26 = v14 + *(int *)(v25 + 20);
      v27 = sub_23E135910();
      v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8);
      v28(v26, v27);
      v29 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v28(v29 + *(int *)(v25 + 20), v27);
      v30 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v31 = v14 + *(int *)(v30 + 28);
      v32 = sub_23E135520();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 8))(v31, v32);
      v23 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v33 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v23, 1, v33))
      {
        v24 = sub_23E13534C();
LABEL_11:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v23, v24);
      }
      break;
    case 2u:
    case 4u:
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      v34 = v14 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      if (!v8(v34, 1, v7))
      {
        v35 = sub_23E135328();
        v36 = *(_QWORD *)(v35 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
      }
      break;
    case 6u:
      v13(v14, v12);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E0D8FE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(type metadata accessor for AccessoryControlInfo(0) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = (unsigned __int8 *)(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 1) & 0xFFFFFFFFFFFFFFFELL));
  v9 = 0x10000;
  if (!v8[2])
    v9 = 0;
  v10 = 256;
  if (!v8[1])
    v10 = 0;
  return sub_23E0D7E84(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + v4, v1 + v7, v10 | *v8 | v9 | ((unint64_t)*((unsigned __int16 *)v8 + 2) << 32) | ((unint64_t)v8[6] << 48), *((unsigned __int16 *)v8 + 4) | (v8[10] << 16));
}

uint64_t AccessoryControlInfo.binding(state:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _BYTE v16[40];

  v2 = v1;
  v4 = type metadata accessor for AccessoryControlInfo(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_23DF89340(a1, (uint64_t)v16, &qword_256D1ECB0);
  sub_23E1372C0();
  v8 = sub_23E1372B4();
  v9 = swift_allocObject();
  v10 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v10;
  sub_23DF89340((uint64_t)v16, v9 + 32, &qword_256D1ECB0);
  sub_23DF73E10(v2, (uint64_t)v7, type metadata accessor for AccessoryControlInfo);
  v11 = sub_23E1372B4();
  v12 = (*(unsigned __int8 *)(v5 + 80) + 66) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v11;
  *(_QWORD *)(v13 + 24) = v10;
  sub_23DF89340((uint64_t)v16, v13 + 32, &qword_256D1ECB0);
  sub_23DF89384((uint64_t)v7, v13 + v12, type metadata accessor for AccessoryControlInfo);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECB0);
  return sub_23E136E94();
}

uint64_t sub_23E0D9240()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E0D9264@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23DF89340(v1 + 32, a1, &qword_256D1ECB0);
}

void sub_23E0D9288(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t (*v43)();
  uint64_t v44;
  uint64_t (*v45)();
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  int v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  int v80;
  int v81;
  char *v82;
  int v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  __int16 v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  __int16 v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  __int16 v120;
  _BYTE v121[40];

  v90 = a5;
  sub_23DF89340(a4, (uint64_t)&v116, &qword_256D1ECB0);
  v7 = v117;
  v89 = v116;
  v8 = v119;
  v88 = v118;
  v9 = v120;
  v101 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v105 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v100 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v99 = (uint64_t)&v65 - v12;
  v104 = sub_23E134E9C();
  v103 = *(_QWORD *)(v104 - 8);
  MEMORY[0x24BDAC7A8](v104);
  v102 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D23D20);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = type metadata accessor for HAPControlSolver.Source();
  MEMORY[0x24BDAC7A8](v98);
  v18 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = type metadata accessor for AccessoryControlInfo.Writer(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v97 = (uint64_t)&v65 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25DB0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for AccessoryControlInfo.Writer.Result(0);
  v96 = *(_QWORD *)(v94 - 8);
  MEMORY[0x24BDAC7A8](v94);
  v85 = (uint64_t)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v95 = (uint64_t)&v65 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v28);
  v82 = (char *)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = *((unsigned __int16 *)a1 + 16);
  if (*((_BYTE *)a1 + 32) != 0xFF)
  {
    v31 = a1[2];
    v32 = a1[3];
    v33 = *a1;
    v34 = a1[1];
    v91 = v33;
    v111 = v33;
    v112 = v34;
    v93 = v31;
    v113 = v31;
    v114 = v32;
    v92 = v32;
    v115 = v30;
    sub_23DF89340(a4, (uint64_t)v121, &qword_256D1ECB0);
    if (v121[32] == 0xFF
      || (v106 = v89,
          v107 = v7 & 1,
          v108 = v88,
          v109 = v8,
          v110 = v9,
          !_s22HomeAccessoryControlUI6DeviceV0C0V15ThermostatStateV2eeoiySbAG_AGtFZ_0((uint64_t)&v111, (uint64_t)&v106)))
    {
      v35 = v34;
      v36 = *(_QWORD *)(v90 + *(int *)(type metadata accessor for AccessoryControlInfo(0) + 44));
      swift_beginAccess();
      v37 = off_256D1ED18;
      v38 = *(_QWORD *)(v36 + 16);
      if (v38)
      {
        v78 = off_256D1ED18;
        LODWORD(v88) = v30;
        v39 = *(unsigned __int8 *)(v20 + 80);
        v87 = v30 >> 8;
        v90 = *(_QWORD *)(v20 + 72);
        v40 = v36;
        v41 = v36 + ((v39 + 32) & ~v39);
        LODWORD(v89) = *MEMORY[0x24BE4D7C8];
        v84 = *MEMORY[0x24BE4D7B8];
        v83 = *MEMORY[0x24BE4D6E0];
        v81 = *MEMORY[0x24BE4D610];
        v80 = *MEMORY[0x24BE4D778];
        v76 = *MEMORY[0x24BE4D6F0];
        v75 = *MEMORY[0x24BE4D878];
        v74 = *MEMORY[0x24BE4D650];
        v73 = *MEMORY[0x24BE4D810];
        v72 = *MEMORY[0x24BE4D688];
        v71 = *MEMORY[0x24BE4D828];
        v70 = *MEMORY[0x24BE4D590];
        v69 = *MEMORY[0x24BE4D5A0];
        v68 = *MEMORY[0x24BE4D7F8];
        v67 = *MEMORY[0x24BE4D690];
        v66 = *MEMORY[0x24BE4D830];
        v65 = *MEMORY[0x24BE4D6A0];
        v79 = qword_256D1ED20;
        swift_retain();
        v77 = v40;
        swift_bridgeObjectRetain();
        v42 = MEMORY[0x24BEE4AF8];
        v43 = type metadata accessor for HAPControlSolver.Source;
        v86 = v35 & 1;
        while (1)
        {
          v44 = v97;
          sub_23DF73E10(v41, v97, type metadata accessor for AccessoryControlInfo.Writer);
          v45 = v43;
          sub_23DF89384(v44, (uint64_t)v18, (uint64_t (*)(_QWORD))v43);
          v46 = v103;
          v47 = v102;
          v48 = v104;
          (*(void (**)(char *, char *, uint64_t))(v103 + 16))(v102, &v18[*(int *)(v98 + 20)], v104);
          v49 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v47, v48);
          if (v49 == (_DWORD)v89)
          {
            v50 = sub_23E0DA478();
            v43 = v45;
            goto LABEL_29;
          }
          v43 = v45;
          if (v49 == v84)
          {
LABEL_11:
            v50 = sub_23E0DA698();
            goto LABEL_29;
          }
          if (v49 == v83)
          {
            v50 = sub_23E0DA4BC();
            goto LABEL_29;
          }
          if (v49 == v81)
          {
            v50 = sub_23E0DA544();
            goto LABEL_29;
          }
          if (v49 == v80)
          {
            v50 = sub_23E0DA654();
            goto LABEL_29;
          }
          if (v49 == v76)
          {
            v50 = sub_23E0DA3F0();
            goto LABEL_29;
          }
          if (v49 == v75)
          {
            v50 = sub_23E0DA5CC();
            goto LABEL_29;
          }
          if (v49 == v74)
          {
            v50 = sub_23E0DA500();
            goto LABEL_29;
          }
          if (v49 == v73)
            goto LABEL_28;
          if (v49 == v72)
          {
            v50 = sub_23E0DA3AC();
            goto LABEL_29;
          }
          if (v49 == v71)
          {
LABEL_28:
            v50 = sub_23E0DA610();
          }
          else if (v49 == v70)
          {
            v50 = sub_23E0DA368();
          }
          else if (v49 == v69)
          {
            v50 = sub_23E0DA588();
          }
          else if (v49 == v68)
          {
            v50 = sub_23E0DA434();
          }
          else
          {
            if (v49 == v67)
              goto LABEL_11;
            if (v49 != v66 && v49 != v65)
            {
              (*(void (**)(char *, uint64_t))(v103 + 8))(v102, v104);
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v105 + 56))(v16, 1, 1, v101);
              goto LABEL_30;
            }
            v50 = sub_23E0DA478();
          }
LABEL_29:
          v111 = v91;
          LOBYTE(v112) = v86;
          v113 = v93;
          v114 = v92;
          LOBYTE(v115) = v88;
          HIBYTE(v115) = v87;
          (*(void (**)(uint64_t *, char *))(v50 + 72))(&v111, v18);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v16, 1, v101) != 1)
          {
            sub_23DF89384((uint64_t)v16, (uint64_t)v24, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            v51 = 0;
            goto LABEL_32;
          }
LABEL_30:
          sub_23DF89C7C((uint64_t)v16, &qword_256D23D20);
          v51 = 1;
LABEL_32:
          v52 = v96;
          v53 = v94;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v24, v51, 1, v94);
          sub_23DF73E54((uint64_t)v18, (uint64_t (*)(_QWORD))v43);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v24, 1, v53) == 1)
          {
            sub_23DF89C7C((uint64_t)v24, &qword_256D25DB0);
          }
          else
          {
            v54 = v95;
            sub_23DF89384((uint64_t)v24, v95, type metadata accessor for AccessoryControlInfo.Writer.Result);
            v55 = v54;
            v56 = v85;
            sub_23DF73E10(v55, v85, type metadata accessor for AccessoryControlInfo.Writer.Result);
            v57 = v56;
            v58 = v99;
            sub_23DF89384(v57, v99, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            sub_23DF73E10(v58, v100, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v42 = sub_23E0083F8(0, *(_QWORD *)(v42 + 16) + 1, 1, v42);
            v60 = *(_QWORD *)(v42 + 16);
            v59 = *(_QWORD *)(v42 + 24);
            if (v60 >= v59 >> 1)
              v42 = sub_23E0083F8(v59 > 1, v60 + 1, 1, v42);
            *(_QWORD *)(v42 + 16) = v60 + 1;
            sub_23DF89384(v100, v42+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(_QWORD *)(v105 + 72) * v60, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            sub_23DF73E54(v99, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
            sub_23DF73E54(v95, type metadata accessor for AccessoryControlInfo.Writer.Result);
          }
          v41 += v90;
          if (!--v38)
          {
            swift_bridgeObjectRelease();
            v61 = v79;
            v37 = v78;
            goto LABEL_51;
          }
        }
      }
      v61 = qword_256D1ED20;
      swift_retain();
      v42 = MEMORY[0x24BEE4AF8];
LABEL_51:
      v62 = sub_23E1372E4();
      v63 = (uint64_t)v82;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v82, 1, 1, v62);
      v64 = (_QWORD *)swift_allocObject();
      v64[2] = 0;
      v64[3] = 0;
      v64[4] = v37;
      v64[5] = v61;
      v64[6] = v42;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_23DFA2514(v63, (uint64_t)&unk_256D25DC0, (uint64_t)v64);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
}

uint64_t sub_23E0D9DF8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void (*v4)(unint64_t, uint64_t);
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void (*v9)(unint64_t, uint64_t);
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int EnumCaseMultiPayload;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(unint64_t, uint64_t);
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v1 = type metadata accessor for AccessoryControlInfo(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 66) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_unknownObjectRelease();
  v3 = sub_23E134C80();
  v4 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v0 + v2, v3);
  v5 = v0 + v2 + *(int *)(v1 + 20);
  type metadata accessor for AccessoryControlInfo.State(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for IconDescriptor();
      v7 = v5 + *(int *)(v6 + 20);
      v8 = sub_23E135910();
      v9 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v9(v7, v8);
      v10 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v9(v10 + *(int *)(v6 + 20), v8);
      v11 = type metadata accessor for Device.Control.BinaryViewConfig(0);
      swift_release();
      v12 = v5 + *(int *)(v11 + 24);
      type metadata accessor for ControlTextModifier.Config(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
        goto LABEL_12;
      if (!EnumCaseMultiPayload)
      {
        v14 = v12 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D1D860) + 48);
        v15 = sub_23E134C20();
        goto LABEL_7;
      }
      break;
    case 1u:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for IconDescriptor();
      v17 = v5 + *(int *)(v16 + 20);
      v18 = sub_23E135910();
      v19 = *(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8);
      v19(v17, v18);
      v20 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28);
      swift_bridgeObjectRelease();
      v19(v20 + *(int *)(v16 + 20), v18);
      v21 = type metadata accessor for Device.Control.IncrementalConfig(0);
      swift_release();
      swift_release();
      v22 = v5 + *(int *)(v21 + 28);
      v23 = sub_23E135520();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(v22, v23);
      v14 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30) + 48);
      v24 = type metadata accessor for Device.Control.IncrementalState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v14, 1, v24))
      {
        v15 = sub_23E13534C();
LABEL_7:
        (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      }
      break;
    case 2u:
    case 4u:
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    case 3u:
      v25 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED28) + 48);
      v26 = type metadata accessor for Device.Control.ColorState(0);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
      {
        v27 = sub_23E135328();
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v28 + 48))(v25, 1, v27))
          (*(void (**)(unint64_t, uint64_t))(v28 + 8))(v25, v27);
      }
      break;
    case 6u:
      v4(v5, v3);
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_23E0DA17C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo(0) - 8) + 80);
  sub_23E0D9288(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32, v1 + ((v3 + 66) & ~v3));
}

uint64_t sub_23E0DA1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  v6[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_23E0DA21C()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(_QWORD);

  v1 = *(int **)(v0 + 16);
  sub_23E07CAF0(*(_QWORD *)(v0 + 32), *(unint64_t **)(v0 + 40));
  v4 = (uint64_t (*)(_QWORD))((char *)v1 + *v1);
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 48) = v2;
  *v2 = v0;
  v2[1] = sub_23E0DA284;
  return v4(*(_QWORD *)(v0 + 40));
}

uint64_t sub_23E0DA284()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *(_QWORD *)(*v0 + 40);
  v3 = *v0;
  swift_task_dealloc();
  sub_23DF73E54(v1, type metadata accessor for AccessoryControlInfo.Writer.HAPResult);
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v3 + 8))();
}

uint64_t sub_23E0DA2E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23DFA67E4;
  return sub_23E0DA1C0(a1, v4, v5, v6, v7, v8);
}

unint64_t sub_23E0DA368()
{
  unint64_t result;

  result = qword_256D25DC8;
  if (!qword_256D25DC8)
  {
    result = MEMORY[0x24264C55C](&unk_23E1420F4, &_s10TelevisionVN_0);
    atomic_store(result, (unint64_t *)&qword_256D25DC8);
  }
  return result;
}

unint64_t sub_23E0DA3AC()
{
  unint64_t result;

  result = qword_256D25DD0;
  if (!qword_256D25DD0)
  {
    result = MEMORY[0x24264C55C](&unk_23E143590, &_s14SecuritySystemVN_0);
    atomic_store(result, (unint64_t *)&qword_256D25DD0);
  }
  return result;
}

unint64_t sub_23E0DA3F0()
{
  unint64_t result;

  result = qword_256D25DD8;
  if (!qword_256D25DD8)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CCE4, &_s9SprinklerVN);
    atomic_store(result, (unint64_t *)&qword_256D25DD8);
  }
  return result;
}

unint64_t sub_23E0DA434()
{
  unint64_t result;

  result = qword_256D25DE0;
  if (!qword_256D25DE0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B508, &_s5ValveVN);
    atomic_store(result, (unint64_t *)&qword_256D25DE0);
  }
  return result;
}

unint64_t sub_23E0DA478()
{
  unint64_t result;

  result = qword_256D25DE8;
  if (!qword_256D25DE8)
  {
    result = MEMORY[0x24264C55C](&unk_23E1409AC, &_s27DoorWindowAndWindowCoveringVN);
    atomic_store(result, (unint64_t *)&qword_256D25DE8);
  }
  return result;
}

unint64_t sub_23E0DA4BC()
{
  unint64_t result;

  result = qword_256D25DF0;
  if (!qword_256D25DF0)
  {
    result = MEMORY[0x24264C55C](&unk_23E13AF0C, &_s10GarageDoorVN);
    atomic_store(result, (unint64_t *)&qword_256D25DF0);
  }
  return result;
}

unint64_t sub_23E0DA500()
{
  unint64_t result;

  result = qword_256D25DF8;
  if (!qword_256D25DF8)
  {
    result = MEMORY[0x24264C55C](&unk_23E1403F0, &_s4LockVN_0);
    atomic_store(result, (unint64_t *)&qword_256D25DF8);
  }
  return result;
}

unint64_t sub_23E0DA544()
{
  unint64_t result;

  result = qword_256D25E00;
  if (!qword_256D25E00)
  {
    result = MEMORY[0x24264C55C](&unk_23E13BA74, &_s12HeaterCoolerVN_0);
    atomic_store(result, (unint64_t *)&qword_256D25E00);
  }
  return result;
}

unint64_t sub_23E0DA588()
{
  unint64_t result;

  result = qword_256D25E08;
  if (!qword_256D25E08)
  {
    result = MEMORY[0x24264C55C](&unk_23E13A5C0, &_s10ThermostatVN);
    atomic_store(result, (unint64_t *)&qword_256D25E08);
  }
  return result;
}

unint64_t sub_23E0DA5CC()
{
  unint64_t result;

  result = qword_256D25E10;
  if (!qword_256D25E10)
  {
    result = MEMORY[0x24264C55C](&unk_23E13B3CC, &_s9LightbulbVN);
    atomic_store(result, (unint64_t *)&qword_256D25E10);
  }
  return result;
}

unint64_t sub_23E0DA610()
{
  unint64_t result;

  result = qword_256D25E18;
  if (!qword_256D25E18)
  {
    result = MEMORY[0x24264C55C](&unk_23E138088, &_s12OutletSwitchVN);
    atomic_store(result, (unint64_t *)&qword_256D25E18);
  }
  return result;
}

unint64_t sub_23E0DA654()
{
  unint64_t result;

  result = qword_256D25E20;
  if (!qword_256D25E20)
  {
    result = MEMORY[0x24264C55C](&unk_23E142870, &_s10HumidifierVN_0);
    atomic_store(result, (unint64_t *)&qword_256D25E20);
  }
  return result;
}

unint64_t sub_23E0DA698()
{
  unint64_t result;

  result = qword_256D25E28;
  if (!qword_256D25E28)
  {
    result = MEMORY[0x24264C55C](&unk_23E13CA34, &_s3FanVN_0);
    atomic_store(result, (unint64_t *)&qword_256D25E28);
  }
  return result;
}

uint64_t sub_23E0DA6E0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = v1[5];
  v8 = v1[6];
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_23DF83188;
  return sub_23E0DA1C0(a1, v4, v5, v6, v7, v8);
}

uint64_t objectdestroy_29Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E0DA7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t i;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;

  v4 = sub_23E134C80();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  result = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = 0;
  v16 = a1 + 56;
  v17 = 1 << *(_BYTE *)(a1 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(a1 + 56);
  v25 = (unint64_t)(v17 + 63) >> 6;
  v26 = a2;
  if (!v19)
    goto LABEL_5;
LABEL_4:
  v20 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  for (i = v20 | (v15 << 6); ; i = __clz(__rbit64(v23)) + (v15 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v14, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4) == 1)
      goto LABEL_25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v14, v4);
    sub_23E07CF34((uint64_t)v10, v8);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if (v19)
      goto LABEL_4;
LABEL_5:
    v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v22);
    ++v15;
    if (!v23)
    {
      v15 = v22 + 1;
      if (v22 + 1 >= v25)
        goto LABEL_24;
      v23 = *(_QWORD *)(v16 + 8 * v15);
      if (!v23)
      {
        v15 = v22 + 2;
        if (v22 + 2 >= v25)
          goto LABEL_24;
        v23 = *(_QWORD *)(v16 + 8 * v15);
        if (!v23)
        {
          v15 = v22 + 3;
          if (v22 + 3 >= v25)
            goto LABEL_24;
          v23 = *(_QWORD *)(v16 + 8 * v15);
          if (!v23)
            break;
        }
      }
    }
LABEL_20:
    v19 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v25)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v14, 1, 1, v4);
LABEL_25:
    swift_release();
    return v26;
  }
  v23 = *(_QWORD *)(v16 + 8 * v24);
  if (v23)
  {
    v15 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v15 >= v25)
      goto LABEL_24;
    v23 = *(_QWORD *)(v16 + 8 * v15);
    ++v24;
    if (v23)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_23E0DAA3C@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t result;
  int v18;
  uint64_t v19;
  _BYTE *v20;

  v20 = a3;
  v5 = sub_23E13534C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (double *)((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Device.Control.IncrementalState(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *a1;
  sub_23DF89C1C(a2, (uint64_t)v11, &qword_256D1D5D8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    result = sub_23DF89C7C((uint64_t)v11, &qword_256D1D5D8);
    goto LABEL_7;
  }
  sub_23DF89384((uint64_t)v11, (uint64_t)v15, type metadata accessor for Device.Control.IncrementalState);
  (*(void (**)(double *, char *, uint64_t))(v6 + 32))(v8, v15, v5);
  if ((*(unsigned int (**)(double *, uint64_t))(v6 + 88))(v8, v5) != *MEMORY[0x24BE4DD08])
  {
    result = (*(uint64_t (**)(double *, uint64_t))(v6 + 8))(v8, v5);
LABEL_7:
    v18 = 2;
    if (v16 == 2)
      goto LABEL_11;
    goto LABEL_8;
  }
  result = (*(uint64_t (**)(double *, uint64_t))(v6 + 96))(v8, v5);
  v18 = *v8 > 0.0;
  if (v16 == 2)
    goto LABEL_11;
LABEL_8:
  if (v18 == 2)
    LOBYTE(v18) = v16;
  else
    LOBYTE(v18) = (v16 & 1 | v18) != 0;
LABEL_11:
  *v20 = v18;
  return result;
}

uint64_t sub_23E0DAC28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  int *v29;
  char v30;
  double v31;
  double v32;
  int *v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  double v39;
  double v40;
  char *v41;
  char *v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  BOOL v46;
  void (*v47)(char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v3 = v2;
  v58 = sub_23E136258();
  v53 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v56 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = sub_23E135BD4();
  v57 = *(_QWORD *)(v59 - 8);
  v7 = MEMORY[0x24BDAC7A8](v59);
  v55 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v54 = (char *)&v51 - v9;
  v10 = type metadata accessor for Device.Control.IncrementalConfig(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v60 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v51 - v15;
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)&v51 - v18;
  v20 = MEMORY[0x24BDAC7A8](v17);
  v22 = (char *)&v51 - v21;
  v23 = MEMORY[0x24BDAC7A8](v20);
  v25 = (char *)&v51 - v24;
  MEMORY[0x24BDAC7A8](v23);
  v27 = (char *)&v51 - v26;
  if ((_s22HomeAccessoryControlUI6DeviceV0C0V17IncrementalConfigV2eeoiySbAG_AGtFZ_0(v3, a1) & 1) != 0)
  {
    sub_23DF73E10((uint64_t)v3, a2, type metadata accessor for Device.Control.IncrementalConfig);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  }
  v51 = v11;
  v52 = a2;
  v29 = (int *)v10;
  v30 = sub_23E135508();
  sub_23DF73E10((uint64_t)v3, (uint64_t)v27, type metadata accessor for Device.Control.IncrementalConfig);
  sub_23DF73E10((uint64_t)a1, (uint64_t)v25, type metadata accessor for Device.Control.IncrementalConfig);
  if ((v30 & 1) == 0)
  {
    sub_23DF73E54((uint64_t)v25, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E54((uint64_t)v27, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E10((uint64_t)v3, (uint64_t)v22, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E10((uint64_t)a1, (uint64_t)v19, type metadata accessor for Device.Control.IncrementalConfig);
    v33 = v29;
    goto LABEL_11;
  }
  v31 = *(double *)&v27[v29[8]];
  sub_23DF73E54((uint64_t)v27, type metadata accessor for Device.Control.IncrementalConfig);
  v32 = *(double *)&v25[v29[8]];
  sub_23DF73E54((uint64_t)v25, type metadata accessor for Device.Control.IncrementalConfig);
  sub_23DF73E10((uint64_t)v3, (uint64_t)v22, type metadata accessor for Device.Control.IncrementalConfig);
  sub_23DF73E10((uint64_t)a1, (uint64_t)v19, type metadata accessor for Device.Control.IncrementalConfig);
  v33 = v29;
  if (v31 != v32)
  {
LABEL_11:
    sub_23DF73E54((uint64_t)v19, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E54((uint64_t)v22, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E10((uint64_t)v3, (uint64_t)v16, type metadata accessor for Device.Control.IncrementalConfig);
    v36 = v60;
    sub_23DF73E10((uint64_t)a1, v60, type metadata accessor for Device.Control.IncrementalConfig);
    v37 = v51;
    v38 = v52;
    goto LABEL_12;
  }
  v34 = *(double *)&v22[v29[9]];
  sub_23DF73E54((uint64_t)v22, type metadata accessor for Device.Control.IncrementalConfig);
  v35 = *(double *)&v19[v29[9]];
  sub_23DF73E54((uint64_t)v19, type metadata accessor for Device.Control.IncrementalConfig);
  sub_23DF73E10((uint64_t)v3, (uint64_t)v16, type metadata accessor for Device.Control.IncrementalConfig);
  v36 = v60;
  sub_23DF73E10((uint64_t)a1, v60, type metadata accessor for Device.Control.IncrementalConfig);
  v37 = v51;
  v38 = v52;
  if (v34 != v35)
  {
LABEL_12:
    sub_23DF73E54(v36, type metadata accessor for Device.Control.IncrementalConfig);
    sub_23DF73E54((uint64_t)v16, type metadata accessor for Device.Control.IncrementalConfig);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v37 + 56))(v38, 1, 1, v33);
  }
  v39 = *(double *)&v16[v33[10]];
  sub_23DF73E54((uint64_t)v16, type metadata accessor for Device.Control.IncrementalConfig);
  v40 = *(double *)(v36 + v33[10]);
  sub_23DF73E54(v36, type metadata accessor for Device.Control.IncrementalConfig);
  if (v39 != v40)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v37 + 56))(v38, 1, 1, v33);
  swift_retain();
  v41 = v56;
  sub_23E13624C();
  sub_23E136C78();
  v42 = v54;
  sub_23E135BC8();
  swift_release();
  v43 = *(void (**)(char *, uint64_t))(v53 + 8);
  v44 = v58;
  v43(v41, v58);
  swift_retain();
  sub_23E13624C();
  sub_23E136C78();
  v45 = v55;
  sub_23E135BC8();
  swift_release();
  v43(v41, v44);
  v46 = sub_23E0AA2E8();
  v47 = *(void (**)(char *, uint64_t))(v57 + 8);
  v48 = v59;
  v47(v45, v59);
  v47(v42, v48);
  sub_23DF73E10((uint64_t)v3, v38, type metadata accessor for Device.Control.IncrementalConfig);
  if (!v46)
  {
    v49 = v33[6];
    v50 = *(_QWORD *)(v38 + v33[5]);
    swift_retain();
    swift_release();
    *(_QWORD *)(v38 + v49) = v50;
  }
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(v37 + 56))(v38, 0, 1, v33);
}

uint64_t sub_23E0DB148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unsigned int (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  double *v47;
  void (*v48)(double *);
  uint64_t v49;
  uint64_t (*v50)(double *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(double *, uint64_t);
  double v56;
  int v57;
  double v58;
  double *v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  void (*v64)(double *, uint64_t);
  double v65;
  double v66;
  int v67;
  double *v68;
  uint64_t v69;
  double v70;
  char v71;
  double v72;
  double v73;
  double *v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  double *v80;
  double *v81;
  char *v82;
  double *v83;
  double *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v90 = a2;
  v91 = a3;
  v4 = sub_23E13534C();
  v5 = *(_QWORD *)(v4 - 8);
  v86 = v4;
  v87 = v5;
  v6 = MEMORY[0x24BDAC7A8](v4);
  v83 = (double *)((char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = MEMORY[0x24BDAC7A8](v6);
  v81 = (double *)((char *)&v78 - v9);
  MEMORY[0x24BDAC7A8](v8);
  v80 = (double *)((char *)&v78 - v10);
  v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25E50);
  MEMORY[0x24BDAC7A8](v85);
  v84 = (double *)((char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)&v78 - v17;
  v19 = MEMORY[0x24BDAC7A8](v16);
  v21 = (char *)&v78 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v78 - v22;
  v24 = type metadata accessor for Device.Control.IncrementalState(0);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v82 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x24BDAC7A8](v26);
  v79 = (uint64_t)&v78 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v78 = (uint64_t)&v78 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v88 = (uint64_t)&v78 - v33;
  MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v78 - v34;
  v36 = a1;
  sub_23DF89C1C(a1, (uint64_t)v23, &qword_256D1D5D8);
  v89 = v25;
  v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
  if (v37(v23, 1, v24) == 1)
  {
    v21 = v23;
    v38 = v90;
    goto LABEL_5;
  }
  sub_23DF89384((uint64_t)v23, (uint64_t)v35, type metadata accessor for Device.Control.IncrementalState);
  v38 = v90;
  sub_23DF89C1C(v90, (uint64_t)v21, &qword_256D1D5D8);
  if (v37(v21, 1, v24) != 1)
  {
    v41 = v24;
    v42 = v88;
    sub_23DF89384((uint64_t)v21, v88, type metadata accessor for Device.Control.IncrementalState);
    v43 = (double *)((char *)v84 + *(int *)(v85 + 48));
    v45 = v86;
    v44 = v87;
    v46 = v35;
    v47 = v84;
    v48 = *(void (**)(double *))(v87 + 16);
    v49 = (uint64_t)v46;
    v48(v84);
    ((void (*)(double *, uint64_t, uint64_t))v48)(v43, v42, v45);
    v50 = *(uint64_t (**)(double *, uint64_t))(v44 + 88);
    v51 = v50(v47, v45);
    v52 = v51;
    v53 = *MEMORY[0x24BE4DD08];
    if ((_DWORD)v51 == (_DWORD)v53)
    {
      v54 = v44;
      v55 = *(void (**)(double *, uint64_t))(v44 + 96);
      v55(v47, v45);
      v56 = *v47;
      v57 = v50(v43, v45);
      if (v57 == (_DWORD)v52)
      {
        v55(v43, v45);
        v58 = *v43;
        if (v56 > *v43)
          v58 = v56;
        v59 = v80;
        *v80 = v58;
        (*(void (**)(double *, uint64_t, uint64_t))(v54 + 104))(v59, v52, v45);
        v60 = *(_BYTE *)(v49 + *(int *)(v41 + 20));
        sub_23DF73E54(v49, type metadata accessor for Device.Control.IncrementalState);
        v61 = v54;
        v62 = v78;
        sub_23DF89384(v88, v78, type metadata accessor for Device.Control.IncrementalState);
        if ((v60 & 1) != 0)
          v63 = 1;
        else
          v63 = *(_BYTE *)(v62 + *(int *)(v41 + 20));
        sub_23DF73E54(v62, type metadata accessor for Device.Control.IncrementalState);
        v77 = v91;
        (*(void (**)(uint64_t, double *, uint64_t))(v61 + 32))(v91, v59, v45);
        goto LABEL_37;
      }
      if (v57 == *MEMORY[0x24BE4DD00])
      {
        v55(v43, v45);
        v65 = v43[1];
        v44 = v87;
        goto LABEL_19;
      }
    }
    else if ((_DWORD)v51 == *MEMORY[0x24BE4DD00])
    {
      v64 = *(void (**)(double *, uint64_t))(v44 + 96);
      v64(v47, v45);
      v66 = *v47;
      v65 = v47[1];
      v67 = v50(v43, v45);
      if (v67 == (_DWORD)v53)
      {
        v64(v43, v45);
        v56 = *v43;
LABEL_19:
        v69 = (uint64_t)v82;
        v68 = v83;
        if (v56 > v65)
          v70 = v56;
        else
          v70 = v65;
        *v83 = v70;
        (*(void (**)(double *, uint64_t, uint64_t))(v44 + 104))(v68, v53, v45);
        v71 = *(_BYTE *)(v49 + *(int *)(v41 + 20));
        sub_23DF73E54(v49, type metadata accessor for Device.Control.IncrementalState);
        sub_23DF89384(v88, v69, type metadata accessor for Device.Control.IncrementalState);
        if ((v71 & 1) != 0)
          v63 = 1;
        else
          v63 = *(_BYTE *)(v69 + *(int *)(v41 + 20));
        sub_23DF73E54(v69, type metadata accessor for Device.Control.IncrementalState);
        v77 = v91;
        (*(void (**)(uint64_t, double *, uint64_t))(v44 + 32))(v91, v68, v45);
LABEL_37:
        *(_BYTE *)(v77 + *(int *)(v41 + 20)) = v63;
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 56))(v77, 0, 1, v41);
      }
      if (v67 == (_DWORD)v52)
      {
        v64(v43, v45);
        v72 = *v43;
        v73 = v43[1];
        if (v66 > *v43)
          v72 = v66;
        if (v65 > v73)
          v73 = v65;
        v74 = v81;
        *v81 = v72;
        v74[1] = v73;
        (*(void (**)(double *, uint64_t, uint64_t))(v44 + 104))(v74, v52, v45);
        v75 = *(_BYTE *)(v49 + *(int *)(v41 + 20));
        sub_23DF73E54(v49, type metadata accessor for Device.Control.IncrementalState);
        v76 = v79;
        sub_23DF89384(v88, v79, type metadata accessor for Device.Control.IncrementalState);
        if ((v75 & 1) != 0)
          v63 = 1;
        else
          v63 = *(_BYTE *)(v76 + *(int *)(v41 + 20));
        sub_23DF73E54(v76, type metadata accessor for Device.Control.IncrementalState);
        v77 = v91;
        (*(void (**)(uint64_t, double *, uint64_t))(v44 + 32))(v91, v74, v45);
        goto LABEL_37;
      }
    }
    result = sub_23E137608();
    __break(1u);
    return result;
  }
  sub_23DF73E54((uint64_t)v35, type metadata accessor for Device.Control.IncrementalState);
LABEL_5:
  sub_23DF89C7C((uint64_t)v21, &qword_256D1D5D8);
  sub_23DF89C1C(v36, (uint64_t)v18, &qword_256D1D5D8);
  sub_23DF89C1C(v38, (uint64_t)v15, &qword_256D1D5D8);
  if (v37(v18, 1, v24) == 1)
  {
    sub_23DF89340((uint64_t)v15, v91, &qword_256D1D5D8);
    return sub_23DF89C7C((uint64_t)v18, &qword_256D1D5D8);
  }
  else
  {
    sub_23DF89C7C((uint64_t)v15, &qword_256D1D5D8);
    v40 = v91;
    sub_23DF89384((uint64_t)v18, v91, type metadata accessor for Device.Control.IncrementalState);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v89 + 56))(v40, 0, 1, v24);
  }
}

uint64_t sub_23E0DB810@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;
  unsigned int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  int v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned __int8 v35[4];
  __int16 v36;
  char v37;
  __int16 v38;
  char v39;
  unsigned __int8 v40[4];
  __int16 v41;
  char v42;
  __int16 v43;
  char v44;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  v6 = *((unsigned __int16 *)a1 + 2);
  v7 = a1[6];
  v8 = *((unsigned __int16 *)a1 + 4);
  v9 = a1[10];
  v10 = *v2;
  v11 = v2[1];
  v12 = v2[2];
  v13 = *((unsigned __int16 *)v2 + 2);
  v14 = v2[6];
  v15 = *((unsigned __int16 *)v2 + 4);
  v16 = v2[10];
  v40[0] = v10;
  v40[1] = v11;
  v32 = v7;
  v33 = v12;
  v40[2] = v12;
  v41 = v13;
  v42 = v14;
  v43 = v15;
  v44 = v16;
  v35[0] = v3;
  v30 = v4;
  v31 = v5;
  v35[1] = v4;
  v35[2] = v5;
  v36 = v6;
  v37 = v7;
  v38 = v8;
  v39 = v9;
  result = _s22HomeAccessoryControlUI6DeviceV0C0V17ColorPickerConfigV2eeoiySbAG_AGtFZ_0(v40, v35);
  if ((result & 1) != 0)
  {
    v18 = 256;
    if (!v11)
      v18 = 0;
    v19 = v18 | v10;
    v20 = 0x10000;
    if (!v33)
      v20 = 0;
    v21 = v19 | v20 | (v13 << 32);
    v22 = 0x1000000000000;
    if (!v14)
      v22 = 0;
    v23 = v21 | v22;
  }
  else
  {
    if (v6 <= v13)
      LODWORD(v24) = v13;
    else
      LODWORD(v24) = v6;
    if (v32)
      LODWORD(v24) = v13;
    if (v14)
      v24 = v6;
    else
      v24 = v24;
    if (v8 >= v15)
      v25 = v15;
    else
      v25 = v8;
    if (v9)
      v25 = v15;
    if (v16)
      LOWORD(v15) = v8;
    else
      LOWORD(v15) = v25;
    v16 &= v9;
    v26 = 256;
    if ((v11 & v30) == 0)
      v26 = 0;
    v27 = 0x10000;
    if ((v33 & v31) == 0)
      v27 = 0;
    v28 = v26 | v27;
    v29 = 0x1000000000000;
    if ((v14 & v32) == 0)
      v29 = 0;
    v23 = v28 | v29 | v10 & v3 | (v24 << 32);
  }
  *(_QWORD *)a2 = v23;
  *(_WORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 10) = v16 != 0;
  return result;
}

uint64_t sub_23E0DB9AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  char v54;
  double v55;
  char v56;
  double v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  NSObject *v69;
  os_log_type_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  double v83;
  int v84;
  double *v85;
  double v86;
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v92;
  uint64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162[2];

  v159 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v148 = (char *)&v140 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v150 = (char *)&v140 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v149 = (char *)&v140 - v10;
  v11 = type metadata accessor for Device.Control.ColorState(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v158 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v14 = MEMORY[0x24BDAC7A8](v152);
  v145 = (uint64_t)&v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v144 = (uint64_t)&v140 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v147 = (char *)&v140 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v156 = (uint64_t)&v140 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v154 = (char *)&v140 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v155 = (char *)&v140 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v28 = (char *)&v140 - v27;
  v29 = MEMORY[0x24BDAC7A8](v26);
  v146 = (uint64_t)&v140 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v151 = (uint64_t)&v140 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v143 = (uint64_t)&v140 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v142 = (uint64_t)&v140 - v36;
  v37 = MEMORY[0x24BDAC7A8](v35);
  v153 = (uint64_t)&v140 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (char *)&v140 - v40;
  MEMORY[0x24BDAC7A8](v39);
  v43 = (char *)&v140 - v42;
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1EF10);
  v45 = MEMORY[0x24BDAC7A8](v44);
  v47 = (char *)&v140 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = (uint64_t)&v47[*(int *)(v45 + 48)];
  v160 = a1;
  sub_23DF89C1C(a1, (uint64_t)v47, &qword_256D1D5E8);
  v49 = a2;
  sub_23DF89C1C(a2, v48, &qword_256D1D5E8);
  v157 = v12;
  v50 = *(char **)(v12 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v50)(v47, 1, v11) == 1)
  {
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v50)(v48, 1, v11) == 1)
    {
      sub_23DF89C7C((uint64_t)v47, &qword_256D1D5E8);
LABEL_13:
      v60 = v160;
      return sub_23DF89C1C(v60, v159, &qword_256D1D5E8);
    }
    goto LABEL_6;
  }
  sub_23DF89C1C((uint64_t)v47, (uint64_t)v43, &qword_256D1D5E8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v50)(v48, 1, v11) == 1)
  {
    sub_23DF73E54((uint64_t)v43, type metadata accessor for Device.Control.ColorState);
LABEL_6:
    sub_23DF89C7C((uint64_t)v47, &qword_256D1EF10);
    goto LABEL_7;
  }
  v58 = (uint64_t)v158;
  sub_23DF89384(v48, (uint64_t)v158, type metadata accessor for Device.Control.ColorState);
  v59 = _s22HomeAccessoryControlUI6DeviceV0C0V10ColorStateV2eeoiySbAG_AGtFZ_0((uint64_t)v43, v58);
  sub_23DF73E54(v58, type metadata accessor for Device.Control.ColorState);
  sub_23DF73E54((uint64_t)v43, type metadata accessor for Device.Control.ColorState);
  sub_23DF89C7C((uint64_t)v47, &qword_256D1D5E8);
  if (v59)
    goto LABEL_13;
LABEL_7:
  v51 = v49;
  v52 = v160;
  v53 = sub_23E0E00D0(v49, v160);
  v141 = v11;
  if (!v53)
  {
    sub_23DF89C1C(v52, (uint64_t)v28, &qword_256D1D5E8);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v50)(v28, 1, v11) == 1)
    {
      sub_23DF89C7C((uint64_t)v28, &qword_256D1D5E8);
      v56 = 1;
      v57 = 0.0;
    }
    else
    {
      v64 = &v28[*(int *)(v11 + 20)];
      v57 = *(double *)v64;
      v56 = v64[8];
      sub_23DF73E54((uint64_t)v28, type metadata accessor for Device.Control.ColorState);
    }
    v66 = v155;
    v65 = v156;
    v67 = (uint64_t)v154;
    sub_23DF89C1C(v51, (uint64_t)v155, &qword_256D1D5E8);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v50)(v66, 1, v11) == 1)
    {
      sub_23DF89C7C((uint64_t)v66, &qword_256D1D5E8);
      if ((v56 & 1) != 0)
      {
LABEL_22:
        if (qword_256D1D270 != -1)
          swift_once();
        v68 = sub_23E135C10();
        __swift_project_value_buffer(v68, (uint64_t)qword_256D1EAC0);
        sub_23DF89C1C(v52, v67, &qword_256D1D5E8);
        sub_23DF89C1C(v51, v65, &qword_256D1D5E8);
        v69 = sub_23E135BF8();
        v70 = sub_23E137368();
        if (os_log_type_enabled(v69, v70))
        {
          v71 = swift_slowAlloc();
          v72 = swift_slowAlloc();
          v155 = v50;
          v73 = v72;
          v162[0] = v72;
          *(_DWORD *)v71 = 136446466;
          v74 = v67;
          v75 = v67;
          v76 = v151;
          sub_23DF89C1C(v74, v151, &qword_256D1D5E8);
          v77 = sub_23E137194();
          v161 = sub_23E0AB274(v77, v78, v162);
          sub_23E1374B8();
          swift_bridgeObjectRelease();
          sub_23DF89C7C(v75, &qword_256D1D5E8);
          *(_WORD *)(v71 + 12) = 2082;
          v79 = v156;
          sub_23DF89C1C(v156, v76, &qword_256D1D5E8);
          v80 = sub_23E137194();
          v161 = sub_23E0AB274(v80, v81, v162);
          sub_23E1374B8();
          v52 = v160;
          swift_bridgeObjectRelease();
          sub_23DF89C7C(v79, &qword_256D1D5E8);
          _os_log_impl(&dword_23DF71000, v69, v70, "ColorState.merge: Colors differ, but brightness is the same. state1:%{public}s state2:%{public}s", (uint8_t *)v71, 0x16u);
          swift_arrayDestroy();
          v50 = v155;
          MEMORY[0x24264C628](v73, -1, -1);
          MEMORY[0x24264C628](v71, -1, -1);
        }
        else
        {
          sub_23DF89C7C(v67, &qword_256D1D5E8);
          sub_23DF89C7C(v65, &qword_256D1D5E8);
        }

        v88 = (uint64_t)v150;
        v89 = (uint64_t)v147;
        v90 = sub_23E135328();
        v91 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56);
        v91(v88, 1, 1, v90);
        sub_23DF89C1C(v52, v89, &qword_256D1D5E8);
        v92 = v141;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v50)(v89, 1, v141) == 1)
        {
          sub_23DF89C7C(v89, &qword_256D1D5E8);
          v93 = 0;
          v94 = 1;
        }
        else
        {
          v121 = v89 + *(int *)(v92 + 20);
          v93 = *(_QWORD *)v121;
          v94 = *(_BYTE *)(v121 + 8);
          sub_23DF73E54(v89, type metadata accessor for Device.Control.ColorState);
        }
        v122 = (uint64_t)v158;
        v91((uint64_t)v158, 1, 1, v90);
        v123 = v122 + *(int *)(v92 + 20);
        *(_QWORD *)v123 = 0;
        *(_BYTE *)(v123 + 8) = 1;
        sub_23DFF1F1C(v88, v122);
        *(_QWORD *)v123 = v93;
        *(_BYTE *)(v123 + 8) = v94;
        v124 = v159;
        sub_23DF89384(v122, v159, type metadata accessor for Device.Control.ColorState);
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v157 + 56))(v124, 0, 1, v92);
      }
    }
    else
    {
      v85 = (double *)&v66[*(int *)(v11 + 20)];
      v86 = *v85;
      v87 = *((unsigned __int8 *)v85 + 8);
      sub_23DF73E54((uint64_t)v66, type metadata accessor for Device.Control.ColorState);
      if ((v56 & 1) != 0)
      {
        if (v87)
          goto LABEL_22;
      }
      else
      {
        if (v57 == v86)
          v108 = v87;
        else
          v108 = 1;
        if ((v108 & 1) == 0)
          goto LABEL_22;
      }
    }
    if (qword_256D1D270 != -1)
      swift_once();
    v109 = sub_23E135C10();
    __swift_project_value_buffer(v109, (uint64_t)qword_256D1EAC0);
    v110 = v144;
    sub_23DF89C1C(v52, v144, &qword_256D1D5E8);
    v111 = v145;
    sub_23DF89C1C(v51, v145, &qword_256D1D5E8);
    v112 = sub_23E135BF8();
    v113 = sub_23E137368();
    if (os_log_type_enabled(v112, v113))
    {
      v114 = swift_slowAlloc();
      v160 = swift_slowAlloc();
      v162[0] = v160;
      *(_DWORD *)v114 = 136446466;
      v115 = v151;
      sub_23DF89C1C(v110, v151, &qword_256D1D5E8);
      v116 = sub_23E137194();
      v161 = sub_23E0AB274(v116, v117, v162);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      sub_23DF89C7C(v110, &qword_256D1D5E8);
      *(_WORD *)(v114 + 12) = 2082;
      sub_23DF89C1C(v111, v115, &qword_256D1D5E8);
      v118 = sub_23E137194();
      v161 = sub_23E0AB274(v118, v119, v162);
      sub_23E1374B8();
      swift_bridgeObjectRelease();
      sub_23DF89C7C(v111, &qword_256D1D5E8);
      _os_log_impl(&dword_23DF71000, v112, v113, "ColorState.merge: States are not equivalent. state1:%{public}s state2:%{public}s", (uint8_t *)v114, 0x16u);
      v120 = v160;
      swift_arrayDestroy();
      MEMORY[0x24264C628](v120, -1, -1);
      MEMORY[0x24264C628](v114, -1, -1);
    }
    else
    {
      sub_23DF89C7C(v110, &qword_256D1D5E8);
      sub_23DF89C7C(v111, &qword_256D1D5E8);
    }

    v129 = sub_23E135328();
    v130 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56);
    v131 = (uint64_t)v148;
    v130(v148, 1, 1, v129);
    v132 = (uint64_t)v158;
    v130(v158, 1, 1, v129);
    v133 = v141;
    v134 = v132 + *(int *)(v141 + 20);
    *(_QWORD *)v134 = 0;
    *(_BYTE *)(v134 + 8) = 1;
    sub_23DFF1F1C(v131, v132);
    *(_QWORD *)v134 = 0;
    *(_BYTE *)(v134 + 8) = 1;
    v135 = v159;
    sub_23DF89384(v132, v159, type metadata accessor for Device.Control.ColorState);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v157 + 56))(v135, 0, 1, v133);
  }
  sub_23DF89C1C(v52, (uint64_t)v41, &qword_256D1D5E8);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v50)(v41, 1, v11) == 1)
  {
    sub_23DF89C7C((uint64_t)v41, &qword_256D1D5E8);
    v54 = 1;
    v55 = 0.0;
  }
  else
  {
    v61 = &v41[*(int *)(v11 + 20)];
    v55 = *(double *)v61;
    v54 = v61[8];
    sub_23DF73E54((uint64_t)v41, type metadata accessor for Device.Control.ColorState);
  }
  v62 = v153;
  sub_23DF89C1C(v49, v153, &qword_256D1D5E8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v50)(v62, 1, v11) == 1)
  {
    sub_23DF89C7C(v62, &qword_256D1D5E8);
    if ((v54 & 1) != 0)
    {
LABEL_17:
      v60 = v52;
      return sub_23DF89C1C(v60, v159, &qword_256D1D5E8);
    }
  }
  else
  {
    v82 = v62 + *(int *)(v11 + 20);
    v83 = *(double *)v82;
    v84 = *(unsigned __int8 *)(v82 + 8);
    sub_23DF73E54(v62, type metadata accessor for Device.Control.ColorState);
    if ((v54 & 1) != 0)
    {
      if (v84)
        goto LABEL_17;
    }
    else
    {
      if (v55 == v83)
        v95 = v84;
      else
        v95 = 1;
      if ((v95 & 1) == 0)
        goto LABEL_17;
    }
  }
  v155 = v50;
  if (qword_256D1D270 != -1)
    swift_once();
  v96 = sub_23E135C10();
  __swift_project_value_buffer(v96, (uint64_t)qword_256D1EAC0);
  v97 = v142;
  sub_23DF89C1C(v52, v142, &qword_256D1D5E8);
  v98 = v143;
  sub_23DF89C1C(v49, v143, &qword_256D1D5E8);
  v99 = sub_23E135BF8();
  v100 = sub_23E137368();
  if (os_log_type_enabled(v99, v100))
  {
    v101 = swift_slowAlloc();
    v156 = swift_slowAlloc();
    v162[0] = v156;
    *(_DWORD *)v101 = 136446466;
    v102 = v151;
    sub_23DF89C1C(v97, v151, &qword_256D1D5E8);
    v103 = sub_23E137194();
    v161 = sub_23E0AB274(v103, v104, v162);
    sub_23E1374B8();
    swift_bridgeObjectRelease();
    sub_23DF89C7C(v97, &qword_256D1D5E8);
    *(_WORD *)(v101 + 12) = 2082;
    sub_23DF89C1C(v98, v102, &qword_256D1D5E8);
    v105 = sub_23E137194();
    v161 = sub_23E0AB274(v105, v106, v162);
    sub_23E1374B8();
    v52 = v160;
    swift_bridgeObjectRelease();
    sub_23DF89C7C(v98, &qword_256D1D5E8);
    _os_log_impl(&dword_23DF71000, v99, v100, "ColorState.merge: Colors match, but brightness differ. state1:%{public}s state2:%{public}s", (uint8_t *)v101, 0x16u);
    v107 = v156;
    swift_arrayDestroy();
    MEMORY[0x24264C628](v107, -1, -1);
    MEMORY[0x24264C628](v101, -1, -1);
  }
  else
  {
    sub_23DF89C7C(v97, &qword_256D1D5E8);
    sub_23DF89C7C(v98, &qword_256D1D5E8);
  }

  v125 = v141;
  v126 = (uint64_t)v149;
  v127 = v146;
  sub_23DF89C1C(v52, v146, &qword_256D1D5E8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v155)(v127, 1, v125) == 1)
  {
    sub_23DF89C7C(v127, &qword_256D1D5E8);
    v128 = sub_23E135328();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 56))(v126, 1, 1, v128);
  }
  else
  {
    sub_23DF89C1C(v127, v126, &qword_256D1D7F0);
    sub_23DF73E54(v127, type metadata accessor for Device.Control.ColorState);
  }
  v136 = sub_23E135328();
  v137 = (uint64_t)v158;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 56))(v158, 1, 1, v136);
  v138 = v137 + *(int *)(v125 + 20);
  *(_QWORD *)v138 = 0;
  *(_BYTE *)(v138 + 8) = 1;
  sub_23DFF1F1C(v126, v137);
  *(_QWORD *)v138 = 0;
  *(_BYTE *)(v138 + 8) = 1;
  v139 = v159;
  sub_23DF89384(v137, v159, type metadata accessor for Device.Control.ColorState);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v157 + 56))(v139, 0, 1, v125);
}

uint64_t sub_23E0DC960@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t (*v39)(_QWORD);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  int EnumCaseMultiPayload;
  uint64_t v66;
  uint64_t *v67;
  uint64_t result;
  int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t *v111;

  v111 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v110 = (char *)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v102 = (uint64_t)&v96 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C00);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for Device.Control(0);
  v12 = *(_QWORD *)(v109 - 8);
  v13 = MEMORY[0x24BDAC7A8](v109);
  v108 = (uint64_t)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v97 = (uint64_t)&v96 - v16;
  v17 = MEMORY[0x24BDAC7A8](v15);
  v101 = (uint64_t)&v96 - v18;
  v19 = MEMORY[0x24BDAC7A8](v17);
  v100 = (uint64_t)&v96 - v20;
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v96 - v21;
  v23 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v24 = MEMORY[0x24BDAC7A8](v23);
  v98 = (uint64_t)&v96 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v105 = (uint64_t)&v96 - v27;
  v28 = MEMORY[0x24BDAC7A8](v26);
  v99 = (uint64_t)&v96 - v29;
  v30 = MEMORY[0x24BDAC7A8](v28);
  v104 = (uint64_t)&v96 - v31;
  v32 = MEMORY[0x24BDAC7A8](v30);
  v106 = (uint64_t)&v96 - v33;
  v34 = MEMORY[0x24BDAC7A8](v32);
  v36 = (uint64_t *)((char *)&v96 - v35);
  MEMORY[0x24BDAC7A8](v34);
  v38 = (uint64_t *)((char *)&v96 - v37);
  sub_23DF73E10(a1, (uint64_t)&v96 - v37, v39);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v38, (uint64_t)v22, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
    v41 = a1;
    v42 = a2;
    v43 = v11;
    v44 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_23E138050;
    v45 = v40 + v44;
    v11 = v43;
    a2 = v42;
    a1 = v41;
    sub_23DF89384((uint64_t)v22, v45, type metadata accessor for Device.Control);
  }
  else
  {
    v40 = *v38;
  }
  sub_23DF73E10(a2, (uint64_t)v36, type metadata accessor for Device.ControlGroup.LayoutType);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    sub_23DF89384((uint64_t)v36, (uint64_t)v22, type metadata accessor for Device.Control);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
    v47 = a1;
    v48 = a2;
    v49 = v11;
    v50 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_23E138050;
    v51 = v46 + v50;
    v11 = v49;
    a2 = v48;
    a1 = v47;
    sub_23DF89384((uint64_t)v22, v51, type metadata accessor for Device.Control);
  }
  else
  {
    v46 = *v36;
  }
  v52 = sub_23E0DD1D8(v40, v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(v52 + 16);
  v54 = type metadata accessor for Device.ControlGroup(0);
  v55 = v54;
  if (!v53)
  {
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v111, 1, 1, v54);
    return swift_bridgeObjectRelease();
  }
  v56 = *(int *)(v54 + 20);
  v57 = (uint64_t *)(a1 + v56);
  v58 = *(_QWORD *)(a1 + v56 + 8);
  v59 = (uint64_t *)(a2 + v56);
  v60 = v59[1];
  if (!v58)
    goto LABEL_13;
  v61 = *v57;
  v62 = HIBYTE(v58) & 0xF;
  if ((v58 & 0x2000000000000000) == 0)
    v62 = v61 & 0xFFFFFFFFFFFFLL;
  if (v62)
  {
    v63 = swift_bridgeObjectRetain();
    v103 = v61;
    v107 = v63;
  }
  else
  {
LABEL_13:
    v103 = *v59;
    v107 = v60;
    swift_bridgeObjectRetain();
  }
  v64 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_23DF73E10(a1, (uint64_t)v11, type metadata accessor for Device.ControlGroup.LayoutType);
  sub_23DF73E10(a2, v64, type metadata accessor for Device.ControlGroup.LayoutType);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_23DF73E10((uint64_t)v11, v105, type metadata accessor for Device.ControlGroup.LayoutType);
    swift_bridgeObjectRelease();
    v69 = swift_getEnumCaseMultiPayload();
    v66 = (uint64_t)v110;
    if (!v69)
    {
      sub_23DF73E10(v64, v98, type metadata accessor for Device.ControlGroup.LayoutType);
      swift_bridgeObjectRelease();
      if (v53 < 2)
        goto LABEL_23;
LABEL_29:
      v67 = v111;
      *v111 = v52;
      goto LABEL_30;
    }
LABEL_22:
    if (v53 == 1)
      goto LABEL_23;
    goto LABEL_29;
  }
  v66 = (uint64_t)v110;
  if (EnumCaseMultiPayload == 1)
  {
    sub_23DF73E10((uint64_t)v11, v104, type metadata accessor for Device.ControlGroup.LayoutType);
    swift_bridgeObjectRelease();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_23DF73E10(v64, v99, type metadata accessor for Device.ControlGroup.LayoutType);
      swift_bridgeObjectRelease();
      if (v53 >= 2)
      {
        v67 = v111;
        *v111 = v52;
LABEL_30:
        swift_storeEnumTagMultiPayload();
        v76 = (uint64_t *)((char *)v67 + *(int *)(v55 + 20));
        v77 = (uint64_t *)((char *)v67 + *(int *)(v55 + 24));
        v78 = v107;
        *v76 = v103;
        v76[1] = v78;
        *v77 = 0;
        v77[1] = 0;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v67, 0, 1, v55);
LABEL_34:
        sub_23DF73E54(v64, type metadata accessor for Device.ControlGroup.LayoutType);
        v89 = (uint64_t)v11;
        return sub_23DF73E54(v89, type metadata accessor for Device.ControlGroup.LayoutType);
      }
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v71 = v106;
  sub_23DF73E10((uint64_t)v11, v106, type metadata accessor for Device.ControlGroup.LayoutType);
  v72 = swift_getEnumCaseMultiPayload();
  if (v72 == 2)
  {
    swift_bridgeObjectRelease();
    v73 = v100;
    sub_23DF89384(v71, v100, type metadata accessor for Device.Control);
    v74 = v101;
    sub_23DF89384(v64, v101, type metadata accessor for Device.Control);
    v75 = v102;
    sub_23E0DD53C(v73, v74, v102);
    sub_23DF73E54(v74, type metadata accessor for Device.Control);
    sub_23DF73E54(v73, type metadata accessor for Device.Control);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v75, 1, v109) == 1)
    {
      swift_bridgeObjectRelease();
      sub_23DF89C7C(v75, &qword_256D1D5E0);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v111, 1, 1, v55);
    }
    else
    {
      v90 = v97;
      sub_23DF89384(v75, v97, type metadata accessor for Device.Control);
      v91 = v90;
      v92 = v111;
      sub_23DF89384(v91, (uint64_t)v111, type metadata accessor for Device.Control);
      swift_storeEnumTagMultiPayload();
      v93 = (uint64_t *)((char *)v92 + *(int *)(v55 + 20));
      v94 = (uint64_t *)((char *)v92 + *(int *)(v55 + 24));
      v95 = v107;
      *v93 = v103;
      v93[1] = v95;
      *v94 = 0;
      v94[1] = 0;
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v92, 0, 1, v55);
    }
    v89 = (uint64_t)v11;
    return sub_23DF73E54(v89, type metadata accessor for Device.ControlGroup.LayoutType);
  }
  sub_23DF73E54(v71, type metadata accessor for Device.Control);
  if (v53 != 1)
    goto LABEL_29;
LABEL_23:
  if (*(_QWORD *)(v52 + 16))
  {
    sub_23DF73E10(v52 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80)), v66, type metadata accessor for Device.Control);
    v70 = 0;
  }
  else
  {
    v70 = 1;
  }
  v79 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
  v80 = v12;
  v81 = v109;
  v79(v66, v70, 1, v109);
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v66, 1, v81);
  if ((_DWORD)result != 1)
  {
    v82 = v66;
    v83 = v108;
    sub_23DF89384(v82, v108, type metadata accessor for Device.Control);
    v84 = v83;
    v85 = v111;
    sub_23DF89384(v84, (uint64_t)v111, type metadata accessor for Device.Control);
    swift_storeEnumTagMultiPayload();
    v86 = (uint64_t *)((char *)v85 + *(int *)(v55 + 20));
    v87 = (uint64_t *)((char *)v85 + *(int *)(v55 + 24));
    v88 = v107;
    *v86 = v103;
    v86[1] = v88;
    *v87 = 0;
    v87[1] = 0;
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v85, 0, 1, v55);
    goto LABEL_34;
  }
  __break(1u);
  return result;
}

uint64_t sub_23E0DD1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD v33[2];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for Device.Control(0);
  v7 = MEMORY[0x24BDAC7A8](v42);
  v34 = (uint64_t)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v36 = (uint64_t)v33 - v10;
  v11 = MEMORY[0x24BDAC7A8](v9);
  v35 = (uint64_t)v33 - v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)v33 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v18 = (char *)v33 - v17;
  v43 = a2;
  v40 = *(_QWORD *)(a1 + 16);
  if (v40)
  {
    v37 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    v39 = a1 + v37;
    v19 = v16;
    v20 = *(_QWORD *)(v16 + 72);
    swift_bridgeObjectRetain();
    v33[1] = a1;
    swift_bridgeObjectRetain();
    v21 = 0;
    v38 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      result = sub_23DF73E10(v39 + v20 * v21, (uint64_t)v18, type metadata accessor for Device.Control);
      v24 = v43;
      v25 = *(_QWORD *)(v43 + 16);
      if (v25)
        break;
LABEL_5:
      ++v21;
      sub_23DF73E54((uint64_t)v18, type metadata accessor for Device.Control);
      if (v21 == v40)
      {
        swift_bridgeObjectRelease();
        v32 = v38;
        goto LABEL_19;
      }
    }
    v41 = v21;
    v26 = 0;
    v27 = v43 + v37;
    while (v26 < *(_QWORD *)(v24 + 16))
    {
      sub_23DF73E10(v27, (uint64_t)v15, type metadata accessor for Device.Control);
      sub_23E0DD53C((uint64_t)v18, (uint64_t)v15, (uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v42) != 1)
      {
        v28 = v35;
        sub_23DF89384((uint64_t)v6, v35, type metadata accessor for Device.Control);
        sub_23DF73E10(v28, v36, type metadata accessor for Device.Control);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          v29 = v38;
        else
          v29 = sub_23E007818(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
        v31 = *(_QWORD *)(v29 + 16);
        v30 = *(_QWORD *)(v29 + 24);
        if (v31 >= v30 >> 1)
          v29 = sub_23E007818(v30 > 1, v31 + 1, 1, v29);
        *(_QWORD *)(v29 + 16) = v31 + 1;
        v38 = v29;
        sub_23DF89384(v36, v29 + v37 + v31 * v20, type metadata accessor for Device.Control);
        v22 = v34;
        sub_23DFB9B34(v26, v34);
        sub_23DF73E54(v22, type metadata accessor for Device.Control);
        sub_23DF73E54(v35, type metadata accessor for Device.Control);
        sub_23DF73E54((uint64_t)v15, type metadata accessor for Device.Control);
LABEL_4:
        v21 = v41;
        goto LABEL_5;
      }
      ++v26;
      sub_23DF73E54((uint64_t)v15, type metadata accessor for Device.Control);
      result = sub_23DF89C7C((uint64_t)v6, &qword_256D1D5E0);
      v27 += v20;
      if (v25 == v26)
        goto LABEL_4;
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    v32 = MEMORY[0x24BEE4AF8];
LABEL_19:
    swift_bridgeObjectRelease();
    return v32;
  }
  return result;
}

uint64_t sub_23E0DD53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int v73;
  char *v74;
  unsigned int v75;
  char v76;
  unsigned int v77;
  unsigned int v78;
  char v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  int v85;
  char v86;
  char v88;
  char v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;

  v108 = a3;
  v5 = sub_23E134C80();
  v98 = *(_QWORD *)(v5 - 8);
  v99 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v97 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25E58);
  MEMORY[0x24BDAC7A8](v7);
  v106 = (uint64_t)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for Device.Control.Kind(0);
  v104 = *(_QWORD *)(v9 - 8);
  v105 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v96 = (uint64_t)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for Device.Control(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v100 = (uint64_t)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x24BDAC7A8](v13);
  v107 = (uint64_t)&v95 - v16;
  MEMORY[0x24BDAC7A8](v15);
  v103 = (uint64_t)&v95 - v17;
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D620);
  MEMORY[0x24BDAC7A8](v101);
  v102 = (uint64_t)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25E60);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v95 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for Device.Control.Source(0);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v95 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v24);
  v29 = (char *)&v95 - v28;
  MEMORY[0x24BDAC7A8](v27);
  v31 = (char *)&v95 - v30;
  v32 = *(int *)(v11 + 24);
  v109 = a1;
  v110 = a2;
  v33 = a1 + v32;
  sub_23E0DDC90(v33, a2 + v32, v21);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_23DF89C7C((uint64_t)v21, &qword_256D25E60);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v108, 1, 1, v11);
  }
  else
  {
    v95 = v12;
    sub_23DF89384((uint64_t)v21, (uint64_t)v31, type metadata accessor for Device.Control.Source);
    sub_23DF73E10(v33, (uint64_t)v29, type metadata accessor for Device.Control.Source);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      v35 = swift_projectBox();
      v36 = v102;
      v37 = *(int *)(v101 + 48);
      v38 = v102 + v37;
      v39 = v35 + v37;
      sub_23DF73E10(v35, v102, type metadata accessor for Device.Control.Source);
      sub_23DF73E10(v39, v38, type metadata accessor for Device.Control.Source);
      sub_23DF73E54(v38, type metadata accessor for Device.Control.Source);
      sub_23DF73E54(v36, type metadata accessor for Device.Control.Source);
      swift_release();
      v40 = v110;
      v41 = v103;
      sub_23DF73E10(v110, v103, type metadata accessor for Device.Control);
      v42 = 1;
      v43 = v109;
      v44 = v106;
      v45 = (int *)v11;
    }
    else
    {
      sub_23DF73E54((uint64_t)v29, type metadata accessor for Device.Control.Source);
      v40 = v110;
      v41 = v103;
      sub_23DF73E10(v110, v103, type metadata accessor for Device.Control);
      v45 = (int *)v11;
      sub_23DF73E10(v41 + *(int *)(v11 + 24), (uint64_t)v26, type metadata accessor for Device.Control.Source);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v46 = swift_projectBox();
        v47 = v102;
        v48 = *(int *)(v101 + 48);
        v49 = v102 + v48;
        v50 = v46 + v48;
        sub_23DF73E10(v46, v102, type metadata accessor for Device.Control.Source);
        sub_23DF73E10(v50, v49, type metadata accessor for Device.Control.Source);
        v40 = v110;
        sub_23DF73E54(v49, type metadata accessor for Device.Control.Source);
        sub_23DF73E54(v47, type metadata accessor for Device.Control.Source);
        swift_release();
        v42 = 1;
      }
      else
      {
        sub_23DF73E54((uint64_t)v26, type metadata accessor for Device.Control.Source);
        v42 = 0;
      }
      v43 = v109;
      v44 = v106;
    }
    sub_23DF73E54(v41, type metadata accessor for Device.Control);
    sub_23E0DEDF8(v43 + v45[5], v40 + v45[5], v42, v44);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v44, 1, v105) == 1)
    {
      sub_23DF73E54((uint64_t)v31, type metadata accessor for Device.Control.Source);
      sub_23DF89C7C(v44, &qword_256D25E58);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v95 + 56))(v108, 1, 1, v45);
    }
    else
    {
      v51 = v96;
      sub_23DF89384(v44, v96, type metadata accessor for Device.Control.Kind);
      v52 = sub_23E134C68();
      v53 = sub_23E134C68();
      v55 = v97;
      v54 = v98;
      v56 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
      if (v52 >= v53)
        v57 = v110;
      else
        v57 = v109;
      v58 = v99;
      v56(v97, v57, v99);
      v59 = v107;
      v56((char *)v107, (uint64_t)v55, v58);
      sub_23DF73E10(v51, v59 + v45[5], type metadata accessor for Device.Control.Kind);
      sub_23DF73E10((uint64_t)v31, v59 + v45[6], type metadata accessor for Device.Control.Source);
      v60 = v31;
      v61 = (uint64_t *)(v59 + v45[8]);
      v62 = v45[10];
      v104 = v45[7];
      v105 = v62;
      *(_BYTE *)(v59 + v104) = 0;
      *v61 = 0;
      v61[1] = 0;
      v63 = v59 + v45[9];
      *(_WORD *)v63 = 1028;
      *(_BYTE *)(v59 + v62) = 12;
      v106 = v45[11];
      *(_BYTE *)(v59 + v106) = 1;
      v64 = sub_23E0DFFA8(v109, v110);
      v66 = v65;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v58);
      sub_23DF73E54(v51, type metadata accessor for Device.Control.Kind);
      v67 = (uint64_t)v60;
      v68 = v110;
      sub_23DF73E54(v67, type metadata accessor for Device.Control.Source);
      swift_bridgeObjectRelease();
      v69 = 0;
      *v61 = v64;
      v61[1] = v66;
      v70 = v109;
      v71 = v45[9];
      v72 = v109 + v71;
      v73 = *(unsigned __int8 *)(v109 + v71);
      v74 = (char *)(v68 + v71);
      v75 = *v74;
      if (v73 <= v75)
        v76 = *v74;
      else
        v76 = v73;
      if (v75 == 4)
        v76 = v73;
      v77 = *(unsigned __int8 *)(v72 + 1);
      v78 = v74[1];
      if (v73 == 4)
        v79 = v75;
      else
        v79 = v76;
      if (v77 >= v78)
        v80 = v78;
      else
        v80 = v77;
      if (v78 == 4)
        v80 = v77;
      if (v77 != 4)
        LOBYTE(v78) = v80;
      *(_BYTE *)v63 = v79;
      *(_BYTE *)(v63 + 1) = v78;
      v81 = v45[7];
      if (*(_BYTE *)(v70 + v81) == 1)
        v69 = *(_BYTE *)(v68 + v81);
      v82 = v107;
      *(_BYTE *)(v107 + v104) = v69;
      v83 = v45[10];
      v84 = *(unsigned __int8 *)(v70 + v83);
      v85 = *(unsigned __int8 *)(v68 + v83);
      if (v84 == v85)
        v86 = v84;
      else
        v86 = 12;
      if (v85 == 12 || v84 == 12)
        v88 = 12;
      else
        v88 = v86;
      *(_BYTE *)(v82 + v105) = v88;
      v89 = *(_BYTE *)(v70 + v45[11]);
      v90 = v100;
      sub_23DF73E10(v68, v100, type metadata accessor for Device.Control);
      if ((v89 & 1) != 0)
        v91 = 1;
      else
        v91 = *(_BYTE *)(v90 + v45[11]);
      v92 = v108;
      v93 = v95;
      sub_23DF73E54(v90, type metadata accessor for Device.Control);
      v94 = v107;
      *(_BYTE *)(v107 + v106) = v91;
      sub_23DF73E10(v94, v92, type metadata accessor for Device.Control);
      (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v93 + 56))(v92, 0, 1, v45);
      return sub_23DF73E54(v94, type metadata accessor for Device.Control);
    }
  }
}

uint64_t sub_23E0DDC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(char *, char *, uint64_t);
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(uint64_t, uint64_t, uint64_t);
  uint64_t *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  int EnumCaseMultiPayload;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  int v113;
  uint64_t *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unsigned int (*v131)(uint64_t, uint64_t, uint64_t);
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v137)(char *, char *, uint64_t);
  uint64_t v138;
  uint64_t *v139;
  char v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  char *v148;
  uint64_t v149;
  void (*v150)(char *, uint64_t);
  void (*v151)(char *, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t *v157;
  void (*v158)(char *, uint64_t);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;

  v198 = a1;
  v199 = (uint64_t *)a2;
  v196 = a3;
  v189 = sub_23E134E9C();
  v195 = *(_QWORD *)(v189 - 8);
  v3 = MEMORY[0x24BDAC7A8](v189);
  v187 = (char *)&v169 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v188 = (char *)&v169 - v5;
  v190 = sub_23E1356DC();
  v194 = *(_QWORD *)(v190 - 8);
  v6 = MEMORY[0x24BDAC7A8](v190);
  v185 = (char *)&v169 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v186 = (char *)&v169 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25E60);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v171 = (char *)&v169 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v179 = (char *)&v169 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v193 = (char *)&v169 - v15;
  v16 = MEMORY[0x24BDAC7A8](v14);
  v173 = (char *)&v169 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v182 = (char *)&v169 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25E70);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v169 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for Device.Control.Source(0);
  v197 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v169 = (uint64_t)&v169 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x24BDAC7A8](v23);
  v178 = (uint64_t)&v169 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v174 = (uint64_t)&v169 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v175 = (uint64_t)&v169 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v176 = (uint64_t)&v169 - v32;
  v33 = MEMORY[0x24BDAC7A8](v31);
  v177 = (uint64_t)&v169 - v34;
  v35 = MEMORY[0x24BDAC7A8](v33);
  v183 = (uint64_t *)((char *)&v169 - v36);
  v37 = MEMORY[0x24BDAC7A8](v35);
  v184 = (uint64_t)&v169 - v38;
  v39 = MEMORY[0x24BDAC7A8](v37);
  v41 = (uint64_t *)((char *)&v169 - v40);
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)&v169 - v43;
  v45 = MEMORY[0x24BDAC7A8](v42);
  v170 = (uint64_t)&v169 - v46;
  v47 = MEMORY[0x24BDAC7A8](v45);
  v172 = (uint64_t)&v169 - v48;
  v49 = MEMORY[0x24BDAC7A8](v47);
  v51 = (char *)&v169 - v50;
  v52 = MEMORY[0x24BDAC7A8](v49);
  v180 = (uint64_t)&v169 - v53;
  v54 = MEMORY[0x24BDAC7A8](v52);
  v56 = (char *)&v169 - v55;
  v57 = MEMORY[0x24BDAC7A8](v54);
  v181 = (uint64_t)&v169 - v58;
  v59 = MEMORY[0x24BDAC7A8](v57);
  v61 = (char *)&v169 - v60;
  v62 = MEMORY[0x24BDAC7A8](v59);
  v64 = (uint64_t *)((char *)&v169 - v63);
  v65 = MEMORY[0x24BDAC7A8](v62);
  v192 = (char *)&v169 - v66;
  MEMORY[0x24BDAC7A8](v65);
  v191 = (uint64_t)&v169 - v67;
  v68 = (uint64_t *)((char *)v21 + *(int *)(v19 + 48));
  sub_23DF73E10(v198, (uint64_t)v21, type metadata accessor for Device.Control.Source);
  sub_23DF73E10((uint64_t)v199, (uint64_t)v68, type metadata accessor for Device.Control.Source);
  v198 = v22;
  v199 = v21;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v69 = (uint64_t)v199;
      sub_23DF73E10((uint64_t)v199, (uint64_t)v44, type metadata accessor for Device.Control.Source);
      v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D650);
      v71 = *(int *)(v70 + 48);
      v72 = *(_QWORD *)&v44[v71];
      v73 = v198;
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v194 + 8))(v44, v190);
        goto LABEL_16;
      }
      v195 = *(uint64_t *)((char *)v68 + v71);
      v137 = *(void (**)(char *, char *, uint64_t))(v194 + 32);
      v138 = v190;
      v137(v186, v44, v190);
      v137(v185, (char *)v68, v138);
      sub_23DF73F28(qword_256D25E78, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E370], MEMORY[0x24BE4E390]);
      sub_23E13723C();
      sub_23E13723C();
      if (v202 == v200 && v203 == v201)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v144 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v144 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v158 = *(void (**)(char *, uint64_t))(v194 + 8);
          v158(v185, v138);
          v158(v186, v138);
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v197 + 56))(v196, 1, 1, v73);
          goto LABEL_52;
        }
      }
      v145 = *(int *)(v70 + 48);
      v146 = v194;
      v147 = v196;
      v148 = v186;
      (*(void (**)(uint64_t *, char *, uint64_t))(v194 + 16))(v196, v186, v138);
      v149 = sub_23E0DA7A0(v195, v72);
      v150 = *(void (**)(char *, uint64_t))(v146 + 8);
      v150(v185, v138);
      v150(v148, v138);
      *(uint64_t *)((char *)v147 + v145) = v149;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v147, 0, 1, v73);
LABEL_52:
      v79 = v69;
      return sub_23DF73E54(v79, type metadata accessor for Device.Control.Source);
    case 1u:
      v74 = (uint64_t)v199;
      sub_23DF73E10((uint64_t)v199, (uint64_t)v64, type metadata accessor for Device.Control.Source);
      v75 = *v64;
      v76 = v198;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_15;
      v77 = sub_23E0DA7A0(*v68, v75);
      v78 = v196;
      *v196 = v77;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v78, 0, 1, v76);
      v79 = v74;
      return sub_23DF73E54(v79, type metadata accessor for Device.Control.Source);
    case 2u:
      sub_23DF73E10((uint64_t)v199, (uint64_t)v41, type metadata accessor for Device.Control.Source);
      v80 = *v41;
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D630);
      v82 = *(int *)(v81 + 48);
      v83 = v198;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v84 = *v68;
        v85 = *(void (**)(char *, char *, uint64_t))(v195 + 32);
        v86 = v189;
        v85(v188, (char *)v41 + v82, v189);
        v85(v187, (char *)v68 + v82, v86);
        sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
        sub_23E13723C();
        sub_23E13723C();
        if (v202 == v200 && v203 == v201)
        {
          swift_bridgeObjectRelease_n();
          v87 = v196;
          v88 = (uint64_t)v199;
        }
        else
        {
          v140 = sub_23E137614();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v87 = v196;
          v88 = (uint64_t)v199;
          if ((v140 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v151 = *(void (**)(char *, uint64_t))(v195 + 8);
            v151(v187, v86);
            v151(v188, v86);
            (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v197 + 56))(v87, 1, 1, v83);
            goto LABEL_49;
          }
        }
        v141 = (char *)v87 + *(int *)(v81 + 48);
        v142 = sub_23E0DA7A0(v84, v80);
        (*(void (**)(char *, uint64_t))(v195 + 8))(v187, v86);
        *v87 = v142;
        v85(v141, v188, v86);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v87, 0, 1, v83);
LABEL_49:
        v79 = v88;
        return sub_23DF73E54(v79, type metadata accessor for Device.Control.Source);
      }
      (*(void (**)(char *, uint64_t))(v195 + 8))((char *)v41 + v82, v189);
LABEL_15:
      swift_bridgeObjectRelease();
LABEL_16:
      v108 = v198;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 3)
      {
        if (EnumCaseMultiPayload == 6)
        {
          v111 = v199;
          v113 = swift_getEnumCaseMultiPayload();
          v110 = v197;
          if (v113 == 6)
          {
            v114 = v196;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v114, 0, 1, v108);
            v79 = (uint64_t)v68;
            return sub_23DF73E54(v79, type metadata accessor for Device.Control.Source);
          }
        }
        else
        {
          v110 = v197;
          v111 = v199;
          if (EnumCaseMultiPayload == 4)
          {
            sub_23DF73E10((uint64_t)v68, v184, type metadata accessor for Device.Control.Source);
            v91 = swift_projectBox();
            v112 = (uint64_t)v111;
            goto LABEL_26;
          }
        }
LABEL_31:
        if (swift_getEnumCaseMultiPayload() != 6)
        {
          if (swift_getEnumCaseMultiPayload() != 6)
          {
            sub_23DF89C7C((uint64_t)v111, &qword_256D25E70);
            return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v196, 1, 1, v108);
          }
          v68 = v111;
        }
        v139 = v196;
        sub_23DF73E54((uint64_t)v68, type metadata accessor for Device.Control.Source);
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v110 + 56))(v139, 1, 1, v108);
      }
      v115 = v183;
      sub_23DF73E10((uint64_t)v68, (uint64_t)v183, type metadata accessor for Device.Control.Source);
      v116 = *v115;
      v111 = v199;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_release();
        v110 = v197;
        goto LABEL_31;
      }
      v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D610);
      v195 = v116;
      v118 = swift_projectBox();
      v199 = (uint64_t *)*v111;
      v119 = swift_projectBox();
      v120 = *(int *)(v117 + 48);
      v121 = v119 + v120;
      v122 = *(int *)(v117 + 64);
      v123 = *(_QWORD *)(v119 + v122);
      v124 = v118 + v120;
      v193 = *(char **)(v118 + v122);
      v194 = v123;
      v125 = v177;
      sub_23DF73E10(v119, v177, type metadata accessor for Device.Control.Source);
      v126 = v176;
      sub_23DF73E10(v118, v176, type metadata accessor for Device.Control.Source);
      v127 = v175;
      sub_23DF73E10(v121, v175, type metadata accessor for Device.Control.Source);
      v128 = v174;
      sub_23DF73E10(v124, v174, type metadata accessor for Device.Control.Source);
      v129 = (uint64_t)v179;
      sub_23E0DDC90(v125, v126);
      v130 = v197;
      v131 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v197 + 48);
      if (v131(v129, 1, v108) == 1)
      {
        sub_23DF73E54(v128, type metadata accessor for Device.Control.Source);
        sub_23DF73E54(v127, type metadata accessor for Device.Control.Source);
        sub_23DF73E54(v126, type metadata accessor for Device.Control.Source);
        v132 = v196;
      }
      else
      {
        sub_23DF89384(v129, v178, type metadata accessor for Device.Control.Source);
        v129 = (uint64_t)v171;
        sub_23E0DDC90(v127, v128);
        sub_23DF73E54(v128, type metadata accessor for Device.Control.Source);
        sub_23DF73E54(v127, type metadata accessor for Device.Control.Source);
        sub_23DF73E54(v126, type metadata accessor for Device.Control.Source);
        sub_23DF73E54(v125, type metadata accessor for Device.Control.Source);
        if (v131(v129, 1, v108) != 1)
        {
          v159 = v169;
          sub_23DF89384(v129, v169, type metadata accessor for Device.Control.Source);
          v160 = v197;
          if ((char *)v194 != v193)
          {
            v161 = v194;
            v162 = swift_allocBox();
            v164 = v163;
            v165 = v163 + *(int *)(v117 + 48);
            v166 = *(int *)(v117 + 64);
            sub_23DF89384(v178, v163, type metadata accessor for Device.Control.Source);
            sub_23DF89384(v159, v165, type metadata accessor for Device.Control.Source);
            *(_QWORD *)(v164 + v166) = v161;
            v167 = v196;
            *v196 = v162;
            v168 = v198;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v160 + 56))(v167, 0, 1, v168);
            swift_release();
            goto LABEL_47;
          }
          sub_23DF73E54(v159, type metadata accessor for Device.Control.Source);
          sub_23DF73E54(v178, type metadata accessor for Device.Control.Source);
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v160 + 56))(v196, 1, 1, v198);
LABEL_46:
          swift_release();
LABEL_47:
          swift_release();
          v79 = (uint64_t)v68;
          return sub_23DF73E54(v79, type metadata accessor for Device.Control.Source);
        }
        v125 = v178;
        v132 = v196;
        v130 = v197;
      }
      sub_23DF73E54(v125, type metadata accessor for Device.Control.Source);
      sub_23DF89C7C(v129, &qword_256D25E60);
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v130 + 56))(v132, 1, 1, v198);
      goto LABEL_46;
    case 4u:
      v89 = (uint64_t)v199;
      sub_23DF73E10((uint64_t)v199, (uint64_t)v61, type metadata accessor for Device.Control.Source);
      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D620);
      v91 = swift_projectBox();
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        v92 = *(int *)(v90 + 48);
        v93 = v91 + v92;
        v195 = *v68;
        v94 = swift_projectBox();
        v95 = v94 + v92;
        v96 = v91;
        v97 = v181;
        sub_23DF73E10(v96, v181, type metadata accessor for Device.Control.Source);
        v98 = v94;
        v99 = v198;
        sub_23DF73E10(v98, (uint64_t)v56, type metadata accessor for Device.Control.Source);
        v100 = v93;
        v101 = v90;
        v102 = v180;
        sub_23DF73E10(v100, v180, type metadata accessor for Device.Control.Source);
        sub_23DF73E10(v95, (uint64_t)v51, type metadata accessor for Device.Control.Source);
        v103 = (uint64_t)v182;
        sub_23E0DDC90(v97, v56);
        v104 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v197 + 48);
        if (v104(v103, 1, v99) == 1)
        {
          sub_23DF73E54((uint64_t)v51, type metadata accessor for Device.Control.Source);
          sub_23DF73E54(v102, type metadata accessor for Device.Control.Source);
          sub_23DF73E54((uint64_t)v56, type metadata accessor for Device.Control.Source);
          v105 = v196;
          v106 = (uint64_t)v199;
          v107 = v97;
        }
        else
        {
          v194 = v101;
          v143 = v172;
          sub_23DF89384(v103, v172, type metadata accessor for Device.Control.Source);
          v103 = (uint64_t)v173;
          sub_23E0DDC90(v102, v51);
          sub_23DF73E54((uint64_t)v51, type metadata accessor for Device.Control.Source);
          sub_23DF73E54(v102, type metadata accessor for Device.Control.Source);
          sub_23DF73E54((uint64_t)v56, type metadata accessor for Device.Control.Source);
          sub_23DF73E54(v97, type metadata accessor for Device.Control.Source);
          if (v104(v103, 1, v99) != 1)
          {
            v152 = v170;
            sub_23DF89384(v103, v170, type metadata accessor for Device.Control.Source);
            v153 = v194;
            v154 = swift_allocBox();
            v156 = v155 + *(int *)(v153 + 48);
            sub_23DF89384(v143, v155, type metadata accessor for Device.Control.Source);
            sub_23DF89384(v152, v156, type metadata accessor for Device.Control.Source);
            v157 = v196;
            *v196 = v154;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v157, 0, 1, v99);
            swift_release();
            swift_release();
            v79 = (uint64_t)v199;
            return sub_23DF73E54(v79, type metadata accessor for Device.Control.Source);
          }
          v107 = v143;
          v105 = v196;
          v106 = (uint64_t)v199;
        }
        sub_23DF73E54(v107, type metadata accessor for Device.Control.Source);
        sub_23DF89C7C(v103, &qword_256D25E60);
        (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v197 + 56))(v105, 1, 1, v99);
        swift_release();
        swift_release();
        v79 = v106;
        return sub_23DF73E54(v79, type metadata accessor for Device.Control.Source);
      }
      v112 = (uint64_t)v68;
      v68 = (uint64_t *)v89;
LABEL_26:
      v134 = (uint64_t)v192;
      v133 = (uint64_t)v193;
      v135 = v191;
      sub_23DF73E10(v91, v191, type metadata accessor for Device.Control.Source);
      sub_23DF89384(v112, v134, type metadata accessor for Device.Control.Source);
      swift_release();
      sub_23DF73E54((uint64_t)v68, type metadata accessor for Device.Control.Source);
      sub_23E0DDC90(v135, v134);
      sub_23DF73E54(v134, type metadata accessor for Device.Control.Source);
      sub_23DF73E54(v135, type metadata accessor for Device.Control.Source);
      return sub_23DF89340(v133, (uint64_t)v196, &qword_256D25E60);
    default:
      goto LABEL_16;
  }
}

void sub_23E0DEDF8(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  int v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;

  v77 = a3;
  v84 = a1;
  v82 = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v75 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v76 = (char *)&v55 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F318);
  MEMORY[0x24BDAC7A8](v9);
  v74 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = type metadata accessor for Device.Control.IncrementalConfig(0);
  v70 = *(_QWORD *)(v71 - 8);
  v11 = MEMORY[0x24BDAC7A8](v71);
  v57 = (char *)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v72 = (char *)&v55 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v73 = (char *)&v55 - v15;
  v16 = type metadata accessor for Device.Control.Kind(0);
  v81 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v78 = (char *)&v55 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v80 = (char *)&v55 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v23 = MEMORY[0x24BDAC7A8](v22);
  v64 = (char *)&v55 - v24;
  v25 = MEMORY[0x24BDAC7A8](v23);
  v63 = (char *)&v55 - v26;
  v27 = MEMORY[0x24BDAC7A8](v25);
  v79 = (char *)&v55 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v61 = (char *)&v55 - v30;
  v31 = MEMORY[0x24BDAC7A8](v29);
  v59 = (char *)&v55 - v32;
  MEMORY[0x24BDAC7A8](v31);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D25E68);
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&v55 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5D8);
  v37 = MEMORY[0x24BDAC7A8](v36);
  v60 = (char *)&v55 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x24BDAC7A8](v37);
  v65 = (char *)&v55 - v40;
  v41 = MEMORY[0x24BDAC7A8](v39);
  v67 = (char *)&v55 - v42;
  v43 = MEMORY[0x24BDAC7A8](v41);
  v58 = (char *)&v55 - v44;
  MEMORY[0x24BDAC7A8](v43);
  v69 = (char *)&v55 - v45;
  v56 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  v46 = MEMORY[0x24BDAC7A8](v56);
  v47 = MEMORY[0x24BDAC7A8](v46);
  v48 = MEMORY[0x24BDAC7A8](v47);
  v66 = (char *)&v55 - v49;
  v50 = MEMORY[0x24BDAC7A8](v48);
  v68 = (char *)&v55 - v51;
  MEMORY[0x24BDAC7A8](v50);
  v62 = (char *)&v55 - v52;
  v53 = (uint64_t)&v35[*(int *)(v33 + 48)];
  sub_23DF73E10(v84, (uint64_t)v35, type metadata accessor for Device.Control.Kind);
  sub_23DF73E10(a2, v53, type metadata accessor for Device.Control.Kind);
  v83 = v35;
  v84 = v16;
  v54 = (char *)sub_23E0DF318 + 4 * word_23E141F4E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E0DF318()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  unsigned __int8 *v10;
  int v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _BYTE *v30;
  uint64_t v31;
  uint64_t v32;

  sub_23DF73E10(v3, (uint64_t)v2, type metadata accessor for Device.Control.Kind);
  v5 = *v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
  v7 = (uint64_t)&v2[*(int *)(v6 + 48)];
  v8 = v0;
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v20 = *(_QWORD *)(v4 - 432);
    sub_23DF73E10(v0, v20, type metadata accessor for Device.Control.Kind);
    v21 = v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5F8) + 48);
    v22 = *(_QWORD *)(v4 - 456);
    sub_23DF89340(v20, v22, &qword_256D1D5D8);
    sub_23DF89384(v7, v1, type metadata accessor for Device.Control.BinaryViewConfig);
    if ((*(_DWORD *)(v4 - 304) & 1) != 0)
    {
      v25 = v1;
      v26 = *(_QWORD *)(v4 - 424);
      sub_23DF89384(v25, v26, type metadata accessor for Device.Control.BinaryViewConfig);
      v27 = *(_QWORD *)(v4 - 368);
      sub_23DF89340(v22, v27, &qword_256D1D5D8);
      sub_23DF73E54(v21, type metadata accessor for Device.Control.IncrementalConfig);
      sub_23DF73E54(v8, type metadata accessor for Device.Control.Kind);
      sub_23DF73E54(v3, type metadata accessor for Device.Control.Kind);
      *(_BYTE *)(v4 - 224) = v5;
      sub_23E0DAA3C((unsigned __int8 *)(v4 - 224), v27, (_BYTE *)(v4 - 168));
      sub_23DF89C7C(v27, &qword_256D1D5D8);
      v28 = *(_BYTE *)(v4 - 168);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E0);
      v30 = *(_BYTE **)(v4 - 264);
      v31 = (uint64_t)&v30[*(int *)(v29 + 48)];
      *v30 = v28;
      sub_23DF89384(v26, v31, type metadata accessor for Device.Control.BinaryViewConfig);
      v32 = *(_QWORD *)(v4 - 248);
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 272) + 56))(v30, 0, 1, v32);
    }
    sub_23DF73E54(v1, type metadata accessor for Device.Control.BinaryViewConfig);
    sub_23DF89C7C(v22, &qword_256D1D5D8);
    v23 = type metadata accessor for Device.Control.IncrementalConfig;
    v24 = v21;
    goto LABEL_23;
  }
  if (EnumCaseMultiPayload)
  {
    v23 = type metadata accessor for Device.Control.BinaryViewConfig;
    v24 = v7;
LABEL_23:
    sub_23DF73E54(v24, v23);
    sub_23DF89C7C(v3, &qword_256D25E68);
    return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 - 272) + 56))(*(_QWORD *)(v4 - 264), 1, 1, *(_QWORD *)(v4 - 248));
  }
  v10 = *(unsigned __int8 **)(v4 - 448);
  sub_23DF73E10(v0, (uint64_t)v10, type metadata accessor for Device.Control.Kind);
  v11 = *v10;
  v12 = (uint64_t)&v10[*(int *)(v6 + 48)];
  v13 = *(_QWORD **)(v4 - 376);
  sub_23DF89384(v7, (uint64_t)v13, type metadata accessor for Device.Control.BinaryViewConfig);
  v14 = *(_QWORD **)(v4 - 392);
  sub_23DF89384(v12, (uint64_t)v14, type metadata accessor for Device.Control.BinaryViewConfig);
  if ((*v13 == *v14 && v13[1] == v14[1] || (sub_23E137614() & 1) != 0)
    && (type metadata accessor for IconDescriptor(), (sub_23E135904() & 1) != 0)
    && ((v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28),
         *(_QWORD *)((char *)v13 + v15) == *(_QWORD *)((char *)v14 + v15))
     && *(_QWORD *)((char *)v13 + v15 + 8) == *(_QWORD *)((char *)v14 + v15 + 8)
     || (sub_23E137614() & 1) != 0)
    && (sub_23E135904() & 1) != 0
    && (sub_23E136BDC() & 1) != 0
    && (v16 = *(int *)(*(_QWORD *)(v4 - 472) + 24),
        (_s22HomeAccessoryControlUI0C12TextModifierV6ConfigO2eeoiySbAE_AEtFZ_0((uint64_t)v13 + v16, (uint64_t)v14 + v16) & 1) != 0))
  {
    sub_23DF73E54((uint64_t)v14, type metadata accessor for Device.Control.BinaryViewConfig);
    v17 = v11;
    if (v5 != 2)
    {
      v17 = v5;
      if (v11 != 2)
        v17 = (v5 | v11) & 1;
    }
    v18 = *(_BYTE **)(v4 - 264);
    *v18 = v17;
    sub_23DF89384((uint64_t)v13, (uint64_t)&v18[*(int *)(v6 + 48)], type metadata accessor for Device.Control.BinaryViewConfig);
    v19 = *(_QWORD *)(v4 - 248);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 272) + 56))(v18, 0, 1, v19);
  }
  else
  {
    sub_23DF73E54((uint64_t)v14, type metadata accessor for Device.Control.BinaryViewConfig);
    sub_23DF73E54((uint64_t)v13, type metadata accessor for Device.Control.BinaryViewConfig);
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4 - 272) + 56))(*(_QWORD *)(v4 - 264), 1, 1, *(_QWORD *)(v4 - 248));
  }
  sub_23DF73E54(v0, type metadata accessor for Device.Control.Kind);
  return sub_23DF73E54(v3, type metadata accessor for Device.Control.Kind);
}

uint64_t sub_23E0DFFA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];

  v4 = type metadata accessor for Device.Control(0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(int *)(v5 + 32);
  v9 = (uint64_t *)(a1 + v8);
  v10 = *(_QWORD *)(a1 + v8 + 8);
  if (!v10)
  {
    sub_23DF73E10(a2, (uint64_t)v7, type metadata accessor for Device.Control);
    v11 = *(_QWORD *)&v7[*(int *)(v4 + 32)];
    swift_bridgeObjectRetain();
LABEL_6:
    swift_bridgeObjectRetain();
    sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control);
    return v11;
  }
  v11 = *v9;
  if (!*(_QWORD *)(a2 + v8 + 8))
  {
    sub_23DF73E10(a2, (uint64_t)v7, type metadata accessor for Device.Control);
    goto LABEL_6;
  }
  v13[0] = *v9;
  v13[1] = v10;
  swift_bridgeObjectRetain();
  sub_23E1371D0();
  sub_23E1371D0();
  return v13[0];
}

BOOL sub_23E0E00D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  void (*v27)(char *, uint64_t);
  uint64_t v28;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E8);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v28 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7F0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v28 - v14;
  v16 = sub_23E135328();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF89C1C(a1, (uint64_t)v9, &qword_256D1D5E8);
  v20 = type metadata accessor for Device.Control.ColorState(0);
  v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
  if (v21(v9, 1, v20) == 1)
  {
    sub_23DF89C7C((uint64_t)v9, &qword_256D1D5E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_4:
    v23 = &qword_256D1D7F0;
    v24 = (uint64_t)v15;
    goto LABEL_5;
  }
  sub_23DF89C1C((uint64_t)v9, (uint64_t)v15, &qword_256D1D7F0);
  sub_23DF73E54((uint64_t)v9, type metadata accessor for Device.Control.ColorState);
  v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v22(v15, 1, v16) == 1)
    goto LABEL_4;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  sub_23DF89C1C(a2, (uint64_t)v7, &qword_256D1D5E8);
  if (v21(v7, 1, v20) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v23 = &qword_256D1D5E8;
    v24 = (uint64_t)v7;
  }
  else
  {
    sub_23DF89C1C((uint64_t)v7, (uint64_t)v13, &qword_256D1D7F0);
    sub_23DF73E54((uint64_t)v7, type metadata accessor for Device.Control.ColorState);
    if (v22(v13, 1, v16) != 1)
    {
      v25 = sub_23E0A88A0((uint64_t)v19);
      v27 = *(void (**)(char *, uint64_t))(v17 + 8);
      v27(v19, v16);
      v27(v13, v16);
      return v25;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    v23 = &qword_256D1D7F0;
    v24 = (uint64_t)v13;
  }
LABEL_5:
  sub_23DF89C7C(v24, v23);
  return 0;
}

uint64_t sub_23E0E03A0()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_23E0E03A8()
{
  return swift_release();
}

uint64_t sub_23E0E03B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_retain();
  return a1;
}

uint64_t sub_23E0E03F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_23E0E0444(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t sub_23E0E048C(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_23E0E04D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for Stack(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Stack);
}

uint64_t sub_23E0E0528()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0E055C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _QWORD v37[2];

  v33 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = sub_23E136E1C();
  v27 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v28 = (uint64_t)&v26 - v9;
  v10 = sub_23E136E4C();
  v26 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v26 - v14;
  v16 = sub_23E13648C();
  v31 = *(_QWORD *)(v16 - 8);
  v32 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v30 = (char *)&v26 - v17;
  v29 = &v26;
  LOBYTE(v17) = *v2;
  v34 = v3;
  v35 = v4;
  v36 = v2;
  if ((v17 & 1) != 0)
  {
    sub_23E136378();
    sub_23E136E40();
    MEMORY[0x24264C55C](MEMORY[0x24BDF4700], v10);
    sub_23DFFA8C8((uint64_t)v12, v10, (uint64_t)v15);
    v21 = *(void (**)(char *, uint64_t))(v26 + 8);
    v21(v12, v10);
    sub_23DFF8E5C((uint64_t)v15, v10, (uint64_t)v12);
    MEMORY[0x24264C55C](MEMORY[0x24BDF4498], v5);
    v20 = (uint64_t)v30;
    sub_23DFF8E74((uint64_t)v12, v10);
    v21(v12, v10);
    v21(v15, v10);
  }
  else
  {
    sub_23E1362D0();
    sub_23E136E10();
    MEMORY[0x24264C55C](MEMORY[0x24BDF4498], v5);
    v18 = v28;
    sub_23DFFA8C8((uint64_t)v7, v5, v28);
    v19 = *(void (**)(char *, uint64_t))(v27 + 8);
    v19(v7, v5);
    sub_23DFF8E5C(v18, v5, (uint64_t)v7);
    MEMORY[0x24264C55C](MEMORY[0x24BDF4700], v10);
    v20 = (uint64_t)v30;
    sub_23DFF8F38((uint64_t)v7, v10, v5);
    v19(v7, v5);
    v19((char *)v18, v5);
  }
  v22 = MEMORY[0x24264C55C](MEMORY[0x24BDF4700], v10);
  v23 = MEMORY[0x24264C55C](MEMORY[0x24BDF4498], v5);
  v37[0] = v22;
  v37[1] = v23;
  v24 = v32;
  MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v32, v37);
  sub_23DFF8E5C(v20, v24, v33);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v20, v24);
}

uint64_t sub_23E0E08C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v5 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v15 - v10;
  (*(void (**)(__n128))(v12 + 24))(v9);
  sub_23DFFA8C8((uint64_t)v7, a2, (uint64_t)v11);
  v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, a2);
  sub_23DFF8E5C((uint64_t)v11, a2, a3);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, a2);
}

uint64_t sub_23E0E09A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_23E0E055C(a1, a2);
}

uint64_t sub_23E0E09D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E0E08C8(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_23E0E09F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v0 = sub_23E136E4C();
  v1 = sub_23E136E1C();
  v2 = sub_23E13648C();
  v4[0] = MEMORY[0x24264C55C](MEMORY[0x24BDF4700], v0);
  v4[1] = MEMORY[0x24264C55C](MEMORY[0x24BDF4498], v1);
  return MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v2, v4);
}

uint64_t dispatch thunk of AlarmAndTimerUIViewBuilder.presentTimerCreationViewController(parentContainerUUID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of AlarmAndTimerUIViewBuilder.presentAlarmEditViewController(alarmID:parentContainerUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of AlarmAndTimerUIViewBuilder.alarmUnresponsiveDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of AlarmAndTimerUIViewBuilder.timerUnresponsiveDescription.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_23E0E0ABC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for EmptyAlarmAndTimerUIViewBuilder()
{
  return objc_opt_self();
}

uint64_t sub_23E0E0B08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_23E0E0B38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static IconAccessibilityLabel.accessibilityLabelForIconName(name:)(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  _QWORD *v6;
  unint64_t v7;
  char v8;

  if (qword_256D1D460 != -1)
    swift_once();
  swift_beginAccess();
  if (!*((_QWORD *)off_256D25FB8 + 2))
    goto LABEL_10;
  swift_bridgeObjectRetain();
  sub_23DF84E3C(a1, a2);
  v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
    goto LABEL_10;
  swift_beginAccess();
  v6 = off_256D25FB8;
  if (!*((_QWORD *)off_256D25FB8 + 2))
  {
LABEL_9:
    swift_endAccess();
LABEL_10:
    swift_bridgeObjectRetain();
    return a1;
  }
  swift_bridgeObjectRetain();
  v7 = sub_23DF84E3C(a1, a2);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  a1 = *(_QWORD *)(v6[7] + 16 * v7);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_23E0E0C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *result;

  __swift_instantiateConcreteTypeFromMangledName(qword_256D25FC8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_23E142050;
  *(_QWORD *)(v0 + 32) = 0xD000000000000011;
  *(_QWORD *)(v0 + 40) = 0x800000023E145BA0;
  *(_QWORD *)(v0 + 48) = sub_23E1371A0();
  *(_QWORD *)(v0 + 56) = v1;
  *(_QWORD *)(v0 + 64) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 72) = 0x800000023E145BE0;
  *(_QWORD *)(v0 + 80) = sub_23E1371A0();
  *(_QWORD *)(v0 + 88) = v2;
  *(_QWORD *)(v0 + 96) = 0xD000000000000011;
  *(_QWORD *)(v0 + 104) = 0x800000023E145C20;
  *(_QWORD *)(v0 + 112) = sub_23E1371A0();
  *(_QWORD *)(v0 + 120) = v3;
  *(_QWORD *)(v0 + 128) = 0xD000000000000014;
  *(_QWORD *)(v0 + 136) = 0x800000023E145C60;
  *(_QWORD *)(v0 + 144) = sub_23E1371A0();
  *(_QWORD *)(v0 + 152) = v4;
  *(_QWORD *)(v0 + 160) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 168) = 0x800000023E145CA0;
  *(_QWORD *)(v0 + 176) = sub_23E1371A0();
  *(_QWORD *)(v0 + 184) = v5;
  *(_QWORD *)(v0 + 192) = 0xD00000000000001FLL;
  *(_QWORD *)(v0 + 200) = 0x800000023E145CE0;
  *(_QWORD *)(v0 + 208) = sub_23E1371A0();
  *(_QWORD *)(v0 + 216) = v6;
  *(_QWORD *)(v0 + 224) = 0xD000000000000012;
  *(_QWORD *)(v0 + 232) = 0x800000023E145D20;
  *(_QWORD *)(v0 + 240) = sub_23E1371A0();
  *(_QWORD *)(v0 + 248) = v7;
  *(_QWORD *)(v0 + 256) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 264) = 0x800000023E145D60;
  *(_QWORD *)(v0 + 272) = sub_23E1371A0();
  *(_QWORD *)(v0 + 280) = v8;
  *(_QWORD *)(v0 + 288) = 0xD000000000000016;
  *(_QWORD *)(v0 + 296) = 0x800000023E145D80;
  *(_QWORD *)(v0 + 304) = sub_23E1371A0();
  *(_QWORD *)(v0 + 312) = v9;
  *(_QWORD *)(v0 + 320) = 0xD000000000000015;
  *(_QWORD *)(v0 + 328) = 0x800000023E145DC0;
  *(_QWORD *)(v0 + 336) = sub_23E1371A0();
  *(_QWORD *)(v0 + 344) = v10;
  *(_QWORD *)(v0 + 352) = 0xD00000000000001DLL;
  *(_QWORD *)(v0 + 360) = 0x800000023E145DE0;
  *(_QWORD *)(v0 + 368) = sub_23E1371A0();
  *(_QWORD *)(v0 + 376) = v11;
  *(_QWORD *)(v0 + 384) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 392) = 0x800000023E145E00;
  *(_QWORD *)(v0 + 400) = sub_23E1371A0();
  *(_QWORD *)(v0 + 408) = v12;
  *(_QWORD *)(v0 + 416) = 0xD000000000000016;
  *(_QWORD *)(v0 + 424) = 0x800000023E145E20;
  *(_QWORD *)(v0 + 432) = sub_23E1371A0();
  *(_QWORD *)(v0 + 440) = v13;
  *(_QWORD *)(v0 + 448) = 0xD000000000000012;
  *(_QWORD *)(v0 + 456) = 0x800000023E145E60;
  *(_QWORD *)(v0 + 464) = sub_23E1371A0();
  *(_QWORD *)(v0 + 472) = v14;
  *(_QWORD *)(v0 + 480) = 0x6C69662E6B636F6CLL;
  *(_QWORD *)(v0 + 488) = 0xE90000000000006CLL;
  *(_QWORD *)(v0 + 496) = sub_23E1371A0();
  *(_QWORD *)(v0 + 504) = v15;
  *(_QWORD *)(v0 + 512) = 0xD000000000000017;
  *(_QWORD *)(v0 + 520) = 0x800000023E145EA0;
  *(_QWORD *)(v0 + 528) = sub_23E1371A0();
  *(_QWORD *)(v0 + 536) = v16;
  *(_QWORD *)(v0 + 544) = 0xD000000000000017;
  *(_QWORD *)(v0 + 552) = 0x800000023E145EC0;
  *(_QWORD *)(v0 + 560) = sub_23E1371A0();
  *(_QWORD *)(v0 + 568) = v17;
  *(_QWORD *)(v0 + 576) = 0xD000000000000017;
  *(_QWORD *)(v0 + 584) = 0x800000023E145F00;
  *(_QWORD *)(v0 + 592) = sub_23E1371A0();
  *(_QWORD *)(v0 + 600) = v18;
  *(_QWORD *)(v0 + 608) = 0xD000000000000017;
  *(_QWORD *)(v0 + 616) = 0x800000023E145F20;
  *(_QWORD *)(v0 + 624) = sub_23E1371A0();
  *(_QWORD *)(v0 + 632) = v19;
  *(_QWORD *)(v0 + 640) = 0xD000000000000017;
  *(_QWORD *)(v0 + 648) = 0x800000023E145F40;
  *(_QWORD *)(v0 + 656) = sub_23E1371A0();
  *(_QWORD *)(v0 + 664) = v20;
  *(_QWORD *)(v0 + 672) = 0xD000000000000017;
  *(_QWORD *)(v0 + 680) = 0x800000023E145F60;
  *(_QWORD *)(v0 + 688) = sub_23E1371A0();
  *(_QWORD *)(v0 + 696) = v21;
  *(_QWORD *)(v0 + 704) = 0xD000000000000017;
  *(_QWORD *)(v0 + 712) = 0x800000023E145F80;
  *(_QWORD *)(v0 + 720) = sub_23E1371A0();
  *(_QWORD *)(v0 + 728) = v22;
  *(_QWORD *)(v0 + 736) = 0xD000000000000017;
  *(_QWORD *)(v0 + 744) = 0x800000023E145FA0;
  *(_QWORD *)(v0 + 752) = sub_23E1371A0();
  *(_QWORD *)(v0 + 760) = v23;
  *(_QWORD *)(v0 + 768) = 0xD000000000000014;
  *(_QWORD *)(v0 + 776) = 0x800000023E145FC0;
  *(_QWORD *)(v0 + 784) = sub_23E1371A0();
  *(_QWORD *)(v0 + 792) = v24;
  *(_QWORD *)(v0 + 800) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 808) = 0x800000023E146000;
  *(_QWORD *)(v0 + 816) = sub_23E1371A0();
  *(_QWORD *)(v0 + 824) = v25;
  *(_QWORD *)(v0 + 832) = 0x6B7365642E6E6166;
  *(_QWORD *)(v0 + 840) = 0xE800000000000000;
  *(_QWORD *)(v0 + 848) = sub_23E1371A0();
  *(_QWORD *)(v0 + 856) = v26;
  *(_QWORD *)(v0 + 864) = 0xD000000000000010;
  *(_QWORD *)(v0 + 872) = 0x800000023E146040;
  *(_QWORD *)(v0 + 880) = sub_23E1371A0();
  *(_QWORD *)(v0 + 888) = v27;
  *(_QWORD *)(v0 + 896) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 904) = 0x800000023E146060;
  *(_QWORD *)(v0 + 912) = sub_23E1371A0();
  *(_QWORD *)(v0 + 920) = v28;
  *(_QWORD *)(v0 + 928) = 0x6F6F6C662E6E6166;
  *(_QWORD *)(v0 + 936) = 0xE900000000000072;
  *(_QWORD *)(v0 + 944) = sub_23E1371A0();
  *(_QWORD *)(v0 + 952) = v29;
  strcpy((char *)(v0 + 960), "lightbulb.fill");
  *(_BYTE *)(v0 + 975) = -18;
  *(_QWORD *)(v0 + 976) = sub_23E1371A0();
  *(_QWORD *)(v0 + 984) = v30;
  *(_QWORD *)(v0 + 992) = 0xD000000000000010;
  *(_QWORD *)(v0 + 1000) = 0x800000023E1460A0;
  *(_QWORD *)(v0 + 1008) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1016) = v31;
  *(_QWORD *)(v0 + 1024) = 0xD000000000000012;
  *(_QWORD *)(v0 + 1032) = 0x800000023E1460C0;
  *(_QWORD *)(v0 + 1040) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1048) = v32;
  *(_QWORD *)(v0 + 1056) = 0xD000000000000017;
  *(_QWORD *)(v0 + 1064) = 0x800000023E1460E0;
  *(_QWORD *)(v0 + 1072) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1080) = v33;
  *(_QWORD *)(v0 + 1088) = 0xD000000000000015;
  *(_QWORD *)(v0 + 1096) = 0x800000023E146100;
  *(_QWORD *)(v0 + 1104) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1112) = v34;
  *(_QWORD *)(v0 + 1120) = 0xD000000000000011;
  *(_QWORD *)(v0 + 1128) = 0x800000023E146120;
  *(_QWORD *)(v0 + 1136) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1144) = v35;
  strcpy((char *)(v0 + 1152), "lamp.desk.fill");
  *(_BYTE *)(v0 + 1167) = -18;
  *(_QWORD *)(v0 + 1168) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1176) = v36;
  *(_QWORD *)(v0 + 1184) = 0x6F6C662E706D616CLL;
  *(_QWORD *)(v0 + 1192) = 0xEF6C6C69662E726FLL;
  *(_QWORD *)(v0 + 1200) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1208) = v37;
  *(_QWORD *)(v0 + 1216) = 0xD000000000000011;
  *(_QWORD *)(v0 + 1224) = 0x800000023E146140;
  *(_QWORD *)(v0 + 1232) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1240) = v38;
  *(_QWORD *)(v0 + 1248) = 0x6261742E706D616CLL;
  *(_QWORD *)(v0 + 1256) = 0xEF6C6C69662E656CLL;
  *(_QWORD *)(v0 + 1264) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1272) = v39;
  *(_QWORD *)(v0 + 1280) = 0xD000000000000013;
  *(_QWORD *)(v0 + 1288) = 0x800000023E146160;
  *(_QWORD *)(v0 + 1296) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1304) = v40;
  *(_QWORD *)(v0 + 1312) = 0xD000000000000010;
  *(_QWORD *)(v0 + 1320) = 0x800000023E146180;
  *(_QWORD *)(v0 + 1328) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1336) = v41;
  *(_QWORD *)(v0 + 1344) = 0xD00000000000001ELL;
  *(_QWORD *)(v0 + 1352) = 0x800000023E1461A0;
  *(_QWORD *)(v0 + 1360) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1368) = v42;
  *(_QWORD *)(v0 + 1376) = 0xD000000000000012;
  *(_QWORD *)(v0 + 1384) = 0x800000023E1461C0;
  *(_QWORD *)(v0 + 1392) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1400) = v43;
  *(_QWORD *)(v0 + 1408) = 0x696C65646E616863;
  *(_QWORD *)(v0 + 1416) = 0xEF6C6C69662E7265;
  *(_QWORD *)(v0 + 1424) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1432) = v44;
  *(_QWORD *)(v0 + 1440) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1448) = 0x800000023E1461E0;
  *(_QWORD *)(v0 + 1456) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1464) = v45;
  *(_QWORD *)(v0 + 1472) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1480) = 0x800000023E146220;
  *(_QWORD *)(v0 + 1488) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1496) = v46;
  *(_QWORD *)(v0 + 1504) = 0xD000000000000015;
  *(_QWORD *)(v0 + 1512) = 0x800000023E146240;
  *(_QWORD *)(v0 + 1520) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1528) = v47;
  *(_QWORD *)(v0 + 1536) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1544) = 0x800000023E146260;
  *(_QWORD *)(v0 + 1552) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1560) = v48;
  *(_QWORD *)(v0 + 1568) = 0xD000000000000013;
  *(_QWORD *)(v0 + 1576) = 0x800000023E146280;
  *(_QWORD *)(v0 + 1584) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1592) = v49;
  *(_QWORD *)(v0 + 1600) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1608) = 0x800000023E1462A0;
  *(_QWORD *)(v0 + 1616) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1624) = v50;
  *(_QWORD *)(v0 + 1632) = 0xD000000000000018;
  *(_QWORD *)(v0 + 1640) = 0x800000023E1462E0;
  *(_QWORD *)(v0 + 1648) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1656) = v51;
  *(_QWORD *)(v0 + 1664) = 0xD000000000000013;
  *(_QWORD *)(v0 + 1672) = 0x800000023E146300;
  *(_QWORD *)(v0 + 1680) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1688) = v52;
  *(_QWORD *)(v0 + 1696) = 0xD000000000000012;
  *(_QWORD *)(v0 + 1704) = 0x800000023E146340;
  *(_QWORD *)(v0 + 1712) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1720) = v53;
  *(_QWORD *)(v0 + 1728) = 0x736E696174727563;
  *(_QWORD *)(v0 + 1736) = 0xEF6465736F6C632ELL;
  *(_QWORD *)(v0 + 1744) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1752) = v54;
  *(_QWORD *)(v0 + 1760) = 0xD000000000000014;
  *(_QWORD *)(v0 + 1768) = 0x800000023E146380;
  *(_QWORD *)(v0 + 1776) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1784) = v55;
  *(_QWORD *)(v0 + 1792) = 0xD000000000000016;
  *(_QWORD *)(v0 + 1800) = 0x800000023E1463C0;
  *(_QWORD *)(v0 + 1808) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1816) = v56;
  *(_QWORD *)(v0 + 1824) = 30324;
  *(_QWORD *)(v0 + 1832) = 0xE200000000000000;
  *(_QWORD *)(v0 + 1840) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1848) = v57;
  *(_QWORD *)(v0 + 1856) = 0xD000000000000010;
  *(_QWORD *)(v0 + 1864) = 0x800000023E146420;
  *(_QWORD *)(v0 + 1872) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1880) = v58;
  *(_QWORD *)(v0 + 1888) = 0xD000000000000014;
  *(_QWORD *)(v0 + 1896) = 0x800000023E146470;
  *(_QWORD *)(v0 + 1904) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1912) = v59;
  *(_QWORD *)(v0 + 1920) = 0xD000000000000013;
  *(_QWORD *)(v0 + 1928) = 0x800000023E146490;
  *(_QWORD *)(v0 + 1936) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1944) = v60;
  *(_QWORD *)(v0 + 1952) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 1960) = 0x800000023E1464B0;
  *(_QWORD *)(v0 + 1968) = sub_23E1371A0();
  *(_QWORD *)(v0 + 1976) = v61;
  *(_QWORD *)(v0 + 1984) = 0xD00000000000001CLL;
  *(_QWORD *)(v0 + 1992) = 0x800000023E1464D0;
  *(_QWORD *)(v0 + 2000) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2008) = v62;
  *(_QWORD *)(v0 + 2016) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2024) = 0x800000023E1464F0;
  *(_QWORD *)(v0 + 2032) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2040) = v63;
  *(_QWORD *)(v0 + 2048) = 0xD000000000000010;
  *(_QWORD *)(v0 + 2056) = 0x800000023E146510;
  *(_QWORD *)(v0 + 2064) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2072) = v64;
  *(_QWORD *)(v0 + 2080) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 2088) = 0x800000023E146530;
  *(_QWORD *)(v0 + 2096) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2104) = v65;
  strcpy((char *)(v0 + 2112), "lock.open.fill");
  *(_BYTE *)(v0 + 2127) = -18;
  *(_QWORD *)(v0 + 2128) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2136) = v66;
  *(_QWORD *)(v0 + 2144) = 0xD000000000000013;
  *(_QWORD *)(v0 + 2152) = 0x800000023E146550;
  *(_QWORD *)(v0 + 2160) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2168) = v67;
  *(_QWORD *)(v0 + 2176) = 0xD00000000000001ALL;
  *(_QWORD *)(v0 + 2184) = 0x800000023E146570;
  *(_QWORD *)(v0 + 2192) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2200) = v68;
  *(_QWORD *)(v0 + 2208) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2216) = 0x800000023E146590;
  *(_QWORD *)(v0 + 2224) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2232) = v69;
  *(_QWORD *)(v0 + 2240) = 0xD000000000000011;
  *(_QWORD *)(v0 + 2248) = 0x800000023E1465B0;
  *(_QWORD *)(v0 + 2256) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2264) = v70;
  strcpy((char *)(v0 + 2272), "window.ceiling");
  *(_BYTE *)(v0 + 2287) = -18;
  *(_QWORD *)(v0 + 2288) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2296) = v71;
  *(_QWORD *)(v0 + 2304) = 0x632E776F646E6977;
  *(_QWORD *)(v0 + 2312) = 0xEF746E656D657361;
  *(_QWORD *)(v0 + 2320) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2328) = v72;
  strcpy((char *)(v0 + 2336), "window.awning");
  *(_WORD *)(v0 + 2350) = -4864;
  *(_QWORD *)(v0 + 2352) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2360) = v73;
  *(_QWORD *)(v0 + 2368) = 0xD000000000000011;
  *(_QWORD *)(v0 + 2376) = 0x800000023E1465D0;
  *(_QWORD *)(v0 + 2384) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2392) = v74;
  *(_QWORD *)(v0 + 2400) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2408) = 0x800000023E1465F0;
  *(_QWORD *)(v0 + 2416) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2424) = v75;
  *(_QWORD *)(v0 + 2432) = 0xD000000000000016;
  *(_QWORD *)(v0 + 2440) = 0x800000023E146610;
  *(_QWORD *)(v0 + 2448) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2456) = v76;
  *(_QWORD *)(v0 + 2464) = 0xD000000000000011;
  *(_QWORD *)(v0 + 2472) = 0x800000023E146630;
  *(_QWORD *)(v0 + 2480) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2488) = v77;
  *(_QWORD *)(v0 + 2496) = 0xD000000000000010;
  *(_QWORD *)(v0 + 2504) = 0x800000023E146650;
  *(_QWORD *)(v0 + 2512) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2520) = v78;
  strcpy((char *)(v0 + 2528), "curtains.open");
  *(_WORD *)(v0 + 2542) = -4864;
  *(_QWORD *)(v0 + 2544) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2552) = v79;
  *(_QWORD *)(v0 + 2560) = 0xD00000000000001BLL;
  *(_QWORD *)(v0 + 2568) = 0x800000023E146670;
  *(_QWORD *)(v0 + 2576) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2584) = v80;
  *(_QWORD *)(v0 + 2592) = 0xD000000000000014;
  *(_QWORD *)(v0 + 2600) = 0x800000023E146690;
  *(_QWORD *)(v0 + 2608) = sub_23E1371A0();
  *(_QWORD *)(v0 + 2616) = v81;
  result = (void *)sub_23E0ECBA4(v0);
  off_256D25FB8 = result;
  return result;
}

uint64_t static IconAccessibilityLabel.== infix(_:_:)()
{
  return 1;
}

uint64_t IconAccessibilityLabel.hashValue.getter()
{
  sub_23E137698();
  return sub_23E1376D4();
}

uint64_t sub_23E0E1E2C()
{
  sub_23E137698();
  return sub_23E1376D4();
}

uint64_t sub_23E0E1E60()
{
  sub_23E137698();
  return sub_23E1376D4();
}

unint64_t sub_23E0E1E94()
{
  unint64_t result;

  result = qword_256D25FC0;
  if (!qword_256D25FC0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for IconAccessibilityLabel, &type metadata for IconAccessibilityLabel);
    atomic_store(result, (unint64_t *)&qword_256D25FC0);
  }
  return result;
}

ValueMetadata *type metadata accessor for IconAccessibilityLabel()
{
  return &type metadata for IconAccessibilityLabel;
}

ValueMetadata *_s10TelevisionVMa_0()
{
  return &_s10TelevisionVN_0;
}

uint64_t sub_23E0E1EF8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v27;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v11 = *(unsigned __int8 *)(*(_QWORD *)(v10 - 8) + 80);
  v12 = (v11 + 32) & ~v11;
  v13 = swift_allocObject();
  v27 = xmmword_23E138050;
  *(_OWORD *)(v13 + 16) = xmmword_23E138050;
  v14 = v13 + v12;
  v15 = (_QWORD *)(v14 + *(int *)(v10 + 48));
  v16 = *MEMORY[0x24BE4E288];
  v17 = sub_23E1356DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v14, v16, v17);
  v15[3] = MEMORY[0x24BEE1768];
  *v15 = v9;
  v18 = sub_23E0ECA08(v13);
  v19 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v8, 1, 1, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v20 = sub_23E134C80();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 16))(v23 + v22, a2, v20);
  v24 = sub_23E0E212C(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v18;
  a3[1] = 0;
  v25 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v25 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v25 + 28)) = v24;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(a3, 0, 1, v25);
}

uint64_t sub_23E0E212C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_23E134C80();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D23ED0);
    v10 = sub_23E137524();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v14 = sub_23E137110();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_23DF73F28(&qword_256D1D848, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v20 = sub_23E137158();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_23E0E2394(uint64_t a1)
{
  return sub_23E0E2614(a1, (uint64_t *)&unk_256D23F00);
}

uint64_t sub_23E0E23A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = sub_23E1356DC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D26020);
    v10 = sub_23E137524();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_23DF73F28(&qword_256D1D760, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E370], MEMORY[0x24BE4E380]);
      v14 = sub_23E137110();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_23DF73F28(&qword_256D1D768, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E370], MEMORY[0x24BE4E388]);
          v20 = sub_23E137158();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B08];
  }
  return result;
}

uint64_t sub_23E0E2608(uint64_t a1)
{
  return sub_23E0E2614(a1, &qword_256D23EF0);
}

uint64_t sub_23E0E2614(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = sub_23E137524();
    v5 = 0;
    v6 = v4 + 56;
    v7 = a1 + 32;
    while (1)
    {
      v8 = *(_QWORD *)(v7 + 8 * v5);
      sub_23E137698();
      sub_23E1376A4();
      result = sub_23E1376D4();
      v10 = -1 << *(_BYTE *)(v4 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      v15 = *(_QWORD *)(v4 + 48);
      if (((1 << v11) & v13) != 0)
      {
        if (*(_QWORD *)(v15 + 8 * v11) == v8)
          goto LABEL_3;
        v16 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v16;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v6 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          if (*(_QWORD *)(v15 + 8 * v11) == v8)
            goto LABEL_3;
        }
      }
      *(_QWORD *)(v6 + 8 * v12) = v14 | v13;
      *(_QWORD *)(v15 + 8 * v11) = v8;
      v17 = *(_QWORD *)(v4 + 16);
      v18 = __OFADD__(v17, 1);
      v19 = v17 + 1;
      if (v18)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v4 + 16) = v19;
LABEL_3:
      if (++v5 == v2)
        return v4;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_23E0E2750(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __n128 v27;
  uint64_t v28;
  void (*v29)(_QWORD, __n128);
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t);
  char v35;
  int v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  int *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char v70;
  char *v71;
  int *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  _QWORD *v78;
  unint64_t v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, _QWORD, uint64_t);
  void (*v87)(char *, uint64_t);
  unint64_t *v88;
  int v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  int v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, _QWORD, uint64_t);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char v104;
  int v105;
  BOOL v107;
  char v108;
  void (*v109)(char *, uint64_t);
  char v110;
  uint64_t v111;
  char v112;
  char v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  _QWORD *v133;
  _QWORD *v134;
  void (*v135)(char *, uint64_t);
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  _QWORD v147[3];
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, char *, uint64_t);
  uint64_t v152;
  __int128 v153;
  char *v154;
  uint64_t (*v155)(uint64_t, uint64_t, uint64_t);
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  unsigned int v163;
  uint64_t v164;
  unsigned int v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  unsigned int v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  void (*v176)(char *, _QWORD, uint64_t);
  unsigned int v177;
  uint64_t v178;
  void (*v179)(char *, uint64_t);
  int *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183[2];

  v168 = a1;
  v1 = sub_23E134E9C();
  v175 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v147 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for HAPControlSolver.Source();
  v178 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v161 = (uint64_t)v147 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v147 - v7;
  v157 = type metadata accessor for AccessoryControlInfo(0);
  MEMORY[0x24BDAC7A8](v157);
  v154 = (char *)v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v162 = (uint64_t)v147 - v11;
  v12 = sub_23E1356DC();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v147 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v16);
  v156 = (uint64_t)v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v159 = (uint64_t)v147 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)v147 - v21;
  v23 = sub_23E1359AC();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v158 = (char *)v147 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v26);
  v167 = (char *)v147 - v28;
  v29 = *(void (**)(_QWORD, __n128))(v13 + 104);
  v163 = *MEMORY[0x24BE4E368];
  v176 = (void (*)(char *, _QWORD, uint64_t))v29;
  v29(v15, v27);
  v180 = (int *)v4;
  v30 = v168 + *(int *)(v4 + 68);
  sub_23E135A48();
  v31 = *(void (**)(char *, uint64_t))(v13 + 8);
  v31(v15, v12);
  v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  v164 = v23;
  v155 = v32;
  if (v32((uint64_t)v22, 1, v23) == 1)
  {
    sub_23DF73DD0((uint64_t)v22);
    return MEMORY[0x24BEE4AF8];
  }
  v152 = v24;
  v151 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  v151(v167, v22, v164);
  v34 = v176;
  v176(v15, v163, v12);
  v35 = sub_23E135AA8();
  v31(v15, v12);
  v36 = v35 & 1;
  if (v35 == 2)
    v36 = 2;
  v177 = v36;
  v34(v15, v163, v12);
  v172 = v30;
  sub_23E135AA8();
  v173 = v15;
  v31(v15, v12);
  v174 = v12;
  v179 = v31;
  sub_23E1371A0();
  swift_bridgeObjectRelease();
  v37 = v162;
  sub_23E135988();
  v38 = (int *)v157;
  v39 = v37 + *(int *)(v157 + 20);
  v171 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED40) + 48);
  v40 = (_QWORD *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1D858) + 28));
  v41 = (char *)v40 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v42 = *MEMORY[0x24BE4E5C8];
  v43 = sub_23E135910();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 104))(v41, v42, v43);
  *v40 = 30324;
  v40[1] = 0xE200000000000000;
  sub_23DF73E10((uint64_t)v40, v39, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  v44 = sub_23E136C48();
  v45 = type metadata accessor for Device.Control.BinaryViewConfig(0);
  type metadata accessor for ControlTextModifier.Config(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)(v39 + *(int *)(v45 + 20)) = v44;
  *(_BYTE *)(v39 + v171) = v177;
  v150 = type metadata accessor for AccessoryControlInfo.State(0);
  swift_storeEnumTagMultiPayload();
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
  v47 = *(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8);
  v48 = *(_QWORD *)(v47 + 72);
  v49 = *(unsigned __int8 *)(v47 + 80);
  v50 = (v49 + 32) & ~v49;
  v149 = v46;
  v147[2] = v50 + v48;
  v147[1] = v49 | 7;
  v51 = swift_allocObject();
  v153 = xmmword_23E138050;
  *(_OWORD *)(v51 + 16) = xmmword_23E138050;
  v148 = v50;
  v52 = v51 + v50;
  v53 = v168;
  sub_23DF73E10(v168, v52, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v54 = (_QWORD *)(v37 + v38[7]);
  v55 = v38[9];
  *(_QWORD *)(v37 + v38[11]) = v51;
  *(_BYTE *)(v37 + v38[6]) = 0;
  *v54 = 0;
  v54[1] = 0;
  *(_WORD *)(v37 + v38[8]) = 1027;
  *(_BYTE *)(v37 + v55) = 12;
  *(_BYTE *)(v37 + v38[10]) = 1;
  v56 = v180;
  v57 = *(_QWORD *)(v53 + v180[16]);
  v58 = *(_QWORD *)(v57 + 16);
  if (v58)
  {
    v59 = v57 + ((*(unsigned __int8 *)(v178 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80));
    v178 = *(_QWORD *)(v178 + 72);
    v177 = *MEMORY[0x24BE4D5D8];
    v170 = *MEMORY[0x24BE4E2F0];
    v165 = *MEMORY[0x24BE4E258];
    v147[0] = v57;
    swift_bridgeObjectRetain_n();
    v169 = MEMORY[0x24BEE4AF8];
    v60 = v175;
    while (1)
    {
      sub_23DF73E10(v59, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      (*(void (**)(char *, _QWORD, uint64_t))(v60 + 104))(v3, v177, v1);
      sub_23DF73F28(&qword_256D1D820, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8B8]);
      sub_23E13723C();
      sub_23E13723C();
      if (v183[0] == v181 && v183[1] == v182)
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v3, v1);
      }
      else
      {
        v62 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v3, v1);
        if ((v62 & 1) == 0)
          goto LABEL_7;
      }
      v63 = &v8[v180[14]];
      if ((v63[8] & 1) == 0)
      {
        v171 = *(_QWORD *)v63;
        v64 = v173;
        v65 = v174;
        v176(v173, v170, v174);
        v66 = sub_23E135AA8();
        v67 = v64;
        v60 = v175;
        v179(v67, v65);
        if ((v66 & 1) != 0)
        {
          v68 = v173;
          v69 = v174;
          v176(v173, v165, v174);
          v70 = sub_23E135AA8();
          v71 = v68;
          v60 = v175;
          v179(v71, v69);
          if ((v70 & 1) != 0)
          {
            v72 = v180;
            v73 = &v8[v180[8]];
            v74 = *((_QWORD *)v73 + 1);
            v166 = *(_QWORD *)v73;
            v75 = v161;
            sub_23DF73E10((uint64_t)v8, v161, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
            if (v74)
            {
              v160 = v74;
            }
            else
            {
              v76 = (uint64_t *)(v75 + v72[7]);
              v77 = v76[1];
              v166 = *v76;
              v160 = v77;
              swift_bridgeObjectRetain();
            }
            swift_bridgeObjectRetain();
            sub_23DF73E54(v75, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
            sub_23DF73E54((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
            v78 = (_QWORD *)v169;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v78 = sub_23E0075D8(0, v78[2] + 1, 1, v78);
            v80 = v78[2];
            v79 = v78[3];
            if (v80 >= v79 >> 1)
              v78 = sub_23E0075D8((_QWORD *)(v79 > 1), v80 + 1, 1, v78);
            v78[2] = v80 + 1;
            v169 = (uint64_t)v78;
            v81 = &v78[4 * v80];
            v82 = v166;
            v81[4] = v171;
            v81[5] = v82;
            v81[6] = v160;
            v81[7] = 0;
            goto LABEL_8;
          }
        }
      }
LABEL_7:
      sub_23DF73E54((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
LABEL_8:
      v59 += v178;
      --v58;
      v56 = v180;
      if (!v58)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
    }
  }
  v169 = MEMORY[0x24BEE4AF8];
LABEL_29:
  v83 = sub_23E13555C();
  v84 = v164;
  v85 = v159;
  v86 = v176;
  v87 = v179;
  if (v83)
  {
    v88 = (unint64_t *)v83;
    v183[0] = v169;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_23E020514(v183, v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    v169 = v183[0];
  }
  v89 = *MEMORY[0x24BE4E288];
  v91 = v173;
  v90 = v174;
  v86(v173, *MEMORY[0x24BE4E288], v174);
  sub_23E135A48();
  v87(v91, v90);
  v92 = v156;
  sub_23E0E35D4(v85, v156);
  v93 = v155(v92, 1, v84);
  v94 = v158;
  if (v93 == 1)
  {
    swift_bridgeObjectRelease();
    sub_23DF73DD0(v92);
LABEL_49:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v136 = type metadata accessor for AccessoryControlGroup(0);
    v137 = *(unsigned __int8 *)(*(_QWORD *)(v136 - 8) + 80);
    v138 = (v137 + 32) & ~v137;
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v153;
    v139 = v33 + v138;
    v140 = v162;
    sub_23DF73E10(v162, v139, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v141 = (uint64_t *)(v168 + v56[7]);
    v143 = *v141;
    v142 = v141[1];
    v144 = (_QWORD *)(v139 + *(int *)(v136 + 24));
    v145 = (_QWORD *)(v139 + *(int *)(v136 + 20));
    *v145 = v143;
    v145[1] = v142;
    *v144 = 0;
    v144[1] = 0;
    swift_bridgeObjectRetain();
    sub_23DF73DD0(v85);
    sub_23DF73E54(v140, type metadata accessor for AccessoryControlInfo);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v167, v84);
    return v33;
  }
  LODWORD(v178) = v89;
  v151(v158, (char *)v92, v84);
  v95 = v84;
  v96 = v169;
  v97 = *(_QWORD *)(v169 + 16);
  if (!v97)
  {
    (*(void (**)(char *, uint64_t))(v152 + 8))(v94, v95);
    swift_bridgeObjectRelease();
    v84 = v95;
    goto LABEL_49;
  }
  swift_bridgeObjectRetain();
  v98 = v86;
  v99 = v97 - 1;
  v100 = v96 + 56;
  v101 = v174;
  do
  {
    v102 = *(_QWORD *)(v100 - 24);
    v86(v91, v178, v101);
    swift_retain();
    swift_bridgeObjectRetain();
    v103 = sub_23E135A9C();
    v105 = v104 & 1;
    v179(v91, v101);
    swift_release();
    swift_bridgeObjectRelease();
    v107 = v102 == v103 && v105 == 0 || v99-- == 0;
    v100 += 32;
  }
  while (!v107);
  swift_bridgeObjectRelease();
  v86(v91, v163, v101);
  v108 = sub_23E135AA8();
  v109 = v179;
  v179(v91, v101);
  v110 = v108 & 1;
  v98(v91, v178, v101);
  v111 = sub_23E135A9C();
  v113 = v112;
  v109(v91, v101);
  v114 = v168;
  if ((v113 & 1) != 0 || (*(_BYTE *)(v168 + v180[10]) & 1) == 0)
  {
    v111 = 0;
    v115 = 1;
  }
  else
  {
    v115 = 0;
  }
  v116 = v164;
  v117 = (uint64_t)v154;
  v118 = v158;
  sub_23E135988();
  v119 = (int *)v157;
  v120 = v117 + *(int *)(v157 + 20);
  *(_QWORD *)v120 = v169;
  *(_BYTE *)(v120 + 8) = v110;
  *(_QWORD *)(v120 + 16) = v111;
  *(_BYTE *)(v120 + 24) = v115;
  swift_storeEnumTagMultiPayload();
  v121 = swift_allocObject();
  *(_OWORD *)(v121 + 16) = v153;
  sub_23DF73E10(v114, v121 + v148, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v122 = (_QWORD *)(v117 + v119[7]);
  v123 = v119[9];
  *(_QWORD *)(v117 + v119[11]) = v121;
  *(_BYTE *)(v117 + v119[6]) = 0;
  *v122 = 0;
  v122[1] = 0;
  *(_WORD *)(v117 + v119[8]) = 1028;
  *(_BYTE *)(v117 + v123) = 11;
  *(_BYTE *)(v117 + v119[10]) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
  v124 = type metadata accessor for AccessoryControlGroup(0);
  v125 = *(unsigned __int8 *)(*(_QWORD *)(v124 - 8) + 80);
  v126 = (v125 + 32) & ~v125;
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v153;
  v127 = v33 + v126;
  v128 = v127 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
  v129 = v162;
  sub_23DF73E10(v162, v127, type metadata accessor for AccessoryControlInfo);
  sub_23DF73E10(v117, v128, type metadata accessor for AccessoryControlInfo);
  type metadata accessor for AccessoryControlGroup.LayoutType(0);
  swift_storeEnumTagMultiPayload();
  v130 = (uint64_t *)(v114 + v180[7]);
  v132 = *v130;
  v131 = v130[1];
  v133 = (_QWORD *)(v127 + *(int *)(v124 + 24));
  v134 = (_QWORD *)(v127 + *(int *)(v124 + 20));
  *v134 = v132;
  v134[1] = v131;
  *v133 = 0;
  v133[1] = 0;
  swift_bridgeObjectRetain();
  sub_23DF73E54(v117, type metadata accessor for AccessoryControlInfo);
  v135 = *(void (**)(char *, uint64_t))(v152 + 8);
  v135(v118, v116);
  sub_23DF73DD0(v159);
  sub_23DF73E54(v129, type metadata accessor for AccessoryControlInfo);
  v135(v167, v116);
  return v33;
}

uint64_t sub_23E0E35D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s6LayoutVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s6LayoutVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *_s6LayoutVMa()
{
  return &_s6LayoutVN;
}

uint64_t sub_23E0E3680()
{
  sub_23E1376C8();
  sub_23E136BAC();
  sub_23E136BAC();
  sub_23E1376C8();
  return sub_23E1376C8();
}

uint64_t sub_23E0E36E8()
{
  sub_23E137698();
  sub_23E0E3680();
  return sub_23E1376D4();
}

uint64_t sub_23E0E3728()
{
  sub_23E137698();
  sub_23E0E3680();
  return sub_23E1376D4();
}

uint64_t sub_23E0E3760(double *a1, double *a2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  unsigned int v6;

  if (*a1 != *a2)
    return 0;
  v3 = a1[3];
  v2 = a1[4];
  v5 = a2[3];
  v4 = a2[4];
  if ((sub_23E136BA0() & 1) == 0)
    return 0;
  v6 = sub_23E136BA0() & (v3 == v5);
  if (v2 == v4)
    return v6;
  else
    return 0;
}

unint64_t sub_23E0E37DC()
{
  unint64_t result;

  result = qword_256D26028;
  if (!qword_256D26028)
  {
    result = MEMORY[0x24264C55C](&unk_23E142118, &_s6LayoutVN);
    atomic_store(result, (unint64_t *)&qword_256D26028);
  }
  return result;
}

uint64_t *sub_23E0E3820(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(_QWORD *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 24);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v16 = v9[1];
      *v8 = *v9;
      v8[1] = v16;
      if (EnumCaseMultiPayload == 1)
      {
        v17 = v9[3];
        v8[2] = v9[2];
        v8[3] = v17;
        swift_bridgeObjectRetain();
      }
      else
      {
        v18 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v19 = (char *)v8 + v18;
        v20 = (char *)v9 + v18;
        v21 = sub_23E135910();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        v22(v19, v20, v21);
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v8 + *(int *)(v23 + 48)) = *(_QWORD *)((char *)v9 + *(int *)(v23 + 48));
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t type metadata accessor for AccessoryControlsHeaderConfig.Image(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D26140);
}

uint64_t sub_23E0E39D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload != 1)
    {
      v8 = v4 + *(int *)(type metadata accessor for IconDescriptor() + 20);
      v9 = sub_23E135910();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    }
    return swift_release();
  }
  return result;
}

_QWORD *sub_23E0E3AB0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(_QWORD *, uint64_t, uint64_t);
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v14 = v8[1];
    *v7 = *v8;
    v7[1] = v14;
    if (EnumCaseMultiPayload == 1)
    {
      v15 = v8[3];
      v7[2] = v8[2];
      v7[3] = v15;
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v17 = (char *)v7 + v16;
      v18 = (char *)v8 + v16;
      v19 = sub_23E135910();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v7 + *(int *)(v21 + 48)) = *(_QWORD *)((char *)v8 + *(int *)(v21 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_23E0E3C28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *, uint64_t, uint64_t);
  int v12;
  int v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v7 = *v8;
      v7[1] = v8[1];
      if (EnumCaseMultiPayload == 1)
      {
        v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
      }
      else
      {
        v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v18 = (char *)v7 + v17;
        v19 = (char *)v8 + v17;
        v20 = sub_23E135910();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v7 + *(int *)(v22 + 48)) = *(_QWORD *)((char *)v8 + *(int *)(v22 + 48));
      }
      swift_retain();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      return a1;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  if (v13)
  {
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v16 = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    v7[1] = v8[1];
    if (v16 == 1)
    {
      v7[2] = v8[2];
      v7[3] = v8[3];
      swift_bridgeObjectRetain();
    }
    else
    {
      v24 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v25 = (char *)v7 + v24;
      v26 = (char *)v8 + v24;
      v27 = sub_23E135910();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v7 + *(int *)(v29 + 48)) = *(_QWORD *)((char *)v8 + *(int *)(v29 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23E0E3EE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (_OWORD *)((char *)a1 + v5);
  v7 = (_OWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v6, v7, *(_QWORD *)(v9 + 64));
    }
    else
    {
      *v6 = *v7;
      v11 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v12 = (char *)v6 + v11;
      v13 = (char *)v7 + v11;
      v14 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)v6 + *(int *)(v15 + 48)) = *(_QWORD *)((char *)v7 + *(int *)(v15 + 48));
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_23E0E401C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_OWORD *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = (_OWORD *)((char *)a1 + v8);
  v10 = (_OWORD *)((char *)a2 + v8);
  v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      if (a1 == a2)
        return a1;
      sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
      if (!swift_getEnumCaseMultiPayload())
      {
        *v9 = *v10;
        v23 = *(int *)(type metadata accessor for IconDescriptor() + 20);
        v24 = (char *)v9 + v23;
        v25 = (char *)v10 + v23;
        v26 = sub_23E135910();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
        *(_QWORD *)((char *)v9 + *(int *)(v27 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v27 + 48));
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v16 = *(_QWORD *)(v12 + 64);
      goto LABEL_8;
    }
    sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_7:
    v16 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(qword_256D203B8) - 8) + 64);
LABEL_8:
    memcpy(v9, v10, v16);
    return a1;
  }
  if (v15)
    goto LABEL_7;
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(_QWORD *)(v12 + 64));
  }
  else
  {
    *v9 = *v10;
    v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v18 = (char *)v9 + v17;
    v19 = (char *)v10 + v17;
    v20 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)((char *)v9 + *(int *)(v21 + 48)) = *(_QWORD *)((char *)v10 + *(int *)(v21 + 48));
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t sub_23E0E4238()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0E4244(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23E0E42C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0E42D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for AccessoryControlsHeaderConfig(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D26088);
}

void sub_23E0E435C()
{
  unint64_t v0;

  sub_23E0E43D8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23E0E43D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D26098[0])
  {
    type metadata accessor for AccessoryControlsHeaderConfig.Image(255);
    v0 = sub_23E1374A0();
    if (!v1)
      atomic_store(v0, qword_256D26098);
  }
}

uint64_t *sub_23E0E442C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      v10 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_23E135910();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(uint64_t *)((char *)a1 + *(int *)(v15 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_23E0E4548(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload != 1)
  {
    v3 = a1 + *(int *)(type metadata accessor for IconDescriptor() + 20);
    v4 = sub_23E135910();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
  }
  return swift_release();
}

_QWORD *sub_23E0E45C8(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_23E135910();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)((char *)a1 + *(int *)(v12 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v12 + 48));
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_23E0E46B0(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
    }
    else
    {
      v5 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_23E135910();
      v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)a1 + *(int *)(v10 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v10 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23E0E47C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23E135910();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    *(_QWORD *)((char *)a1 + *(int *)(v10 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v10 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_23E0E4884(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for IconDescriptor() + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_23E135910();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
      *(_QWORD *)((char *)a1 + *(int *)(v10 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v10 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_23E0E4960()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for IconDescriptor();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = " ";
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_23E0E49E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t *v25;

  v25 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  MEMORY[0x24BDAC7A8](v3);
  v24 = (uint64_t)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Device();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_23E135700();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_23E1356F4();
  v12 = sub_23E1356E8();
  v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v15 = (uint64_t *)(a1 + *(int *)(v5 + 68));
  v16 = *v15;
  v17 = v15[1];
  sub_23DF73E10(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  if (v17)
  {
    v18 = v17;
  }
  else
  {
    v19 = &v7[*(int *)(v5 + 64)];
    v16 = *(_QWORD *)v19;
    v18 = *((_QWORD *)v19 + 1);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_23DF73E54((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v20 = v24;
  sub_23E0E4FF4(a1, v24);
  sub_23DF73E54(a1, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v21 = v25;
  *v25 = v12;
  v21[1] = v14;
  v21[2] = v16;
  v21[3] = v18;
  v22 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  return sub_23E0E57BC(v20, (uint64_t)v21 + *(int *)(v22 + 24));
}

uint64_t sub_23E0E4BD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = v0;
  v2 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23E1376A4();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
    sub_23E136C18();
    sub_23E1376C8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
    sub_23DF89384((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    sub_23E1376A4();
    sub_23E1371C4();
    sub_23E135910();
    sub_23DF73F28(&qword_256D1ED48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E5D8], MEMORY[0x24BE4E5F0]);
    sub_23E13711C();
    sub_23E136C18();
    sub_23DF73E54((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  }
  return swift_release();
}

uint64_t sub_23E0E4D8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 24))
  {
    sub_23E1376B0();
    swift_bridgeObjectRetain();
    sub_23E1371C4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_23E1376B0();
  }
  v8 = type metadata accessor for AccessoryControlsHeaderConfig(0);
  sub_23E0E4FAC(v0 + *(int *)(v8 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
    return sub_23E1376B0();
  sub_23DF89384((uint64_t)v7, (uint64_t)v4, type metadata accessor for AccessoryControlsHeaderConfig.Image);
  sub_23E1376B0();
  sub_23E0E4BD4();
  return sub_23DF73E54((uint64_t)v4, type metadata accessor for AccessoryControlsHeaderConfig.Image);
}

uint64_t sub_23E0E4F14(uint64_t a1, uint64_t a2)
{
  return sub_23DFAC060(a1, a2, (void (*)(_BYTE *))sub_23E0E4BD4);
}

uint64_t sub_23E0E4F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23DFAC0B0(a1, a2, a3, (void (*)(_BYTE *))sub_23E0E4BD4);
}

uint64_t sub_23E0E4F34()
{
  return sub_23DF73F28(&qword_256D26178, type metadata accessor for AccessoryControlsHeaderConfig.Image, (uint64_t)&unk_23E1421F0);
}

uint64_t sub_23E0E4F60(uint64_t a1, uint64_t a2)
{
  return sub_23DFAC060(a1, a2, (void (*)(_BYTE *))sub_23E0E4D8C);
}

uint64_t sub_23E0E4F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_23DFAC0B0(a1, a2, a3, (void (*)(_BYTE *))sub_23E0E4D8C);
}

uint64_t sub_23E0E4F80()
{
  return sub_23DF73F28(&qword_256D26180, type metadata accessor for AccessoryControlsHeaderConfig, (uint64_t)&unk_23E142258);
}

uint64_t sub_23E0E4FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0E4FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;

  v4 = (int *)type metadata accessor for Device();
  v5 = v4;
  v6 = (uint64_t *)(a1 + v4[7]);
  v7 = v6[1];
  if (v7)
  {
    v8 = *v6;
    v9 = *(_QWORD *)(a1 + v4[14]);
    v10 = 0.5;
    if (*(_BYTE *)(a1 + v4[15]))
      v10 = 0.0;
    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v7;
    *(_QWORD *)(a2 + 16) = v9;
    *(double *)(a2 + 24) = v10;
    v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0) + 48);
    sub_23DF73E10(a1 + v5[6], a2, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    *(_QWORD *)(a2 + v12) = *(_QWORD *)(a1 + v5[14]);
    v11 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
    swift_storeEnumTagMultiPayload();
  }
  swift_retain();
  type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 0, 1, v11);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E0E5108(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  char v23;
  BOOL v24;
  char v25;
  char v26;
  uint64_t v28;

  v4 = type metadata accessor for IconDescriptor();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v28 - v11);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256D26190);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v15[*(int *)(v16 + 48)];
  sub_23DF73E10(a1, (uint64_t)v15, type metadata accessor for AccessoryControlsHeaderConfig.Image);
  sub_23DF73E10(a2, v17, type metadata accessor for AccessoryControlsHeaderConfig.Image);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_23DF73E10((uint64_t)v15, (uint64_t)v9, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v19 = *(_QWORD *)v9;
    v18 = *((_QWORD *)v9 + 1);
    v20 = *((double *)v9 + 3);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = *(double *)(v17 + 24);
      if (v19 == *(_QWORD *)v17 && v18 == *(_QWORD *)(v17 + 8))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v23 = sub_23E137614();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          swift_release();
LABEL_21:
          swift_release();
LABEL_26:
          sub_23DF73E54((uint64_t)v15, type metadata accessor for AccessoryControlsHeaderConfig.Image);
          goto LABEL_27;
        }
      }
      v26 = sub_23E136BDC();
      swift_release();
      swift_release();
      if ((v26 & 1) == 0)
        goto LABEL_26;
      v25 = v20 == v21;
      goto LABEL_25;
    }
    swift_bridgeObjectRelease();
    swift_release();
LABEL_12:
    sub_23DF89C7C((uint64_t)v15, qword_256D26190);
LABEL_27:
    v25 = 0;
    return v25 & 1;
  }
  sub_23DF73E10((uint64_t)v15, (uint64_t)v12, type metadata accessor for AccessoryControlsHeaderConfig.Image);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D203B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_23DF73E54((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    goto LABEL_12;
  }
  sub_23DF89384(v17, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  v24 = *v12 == *v6 && v12[1] == v6[1];
  if (!v24 && (sub_23E137614() & 1) == 0 || (sub_23E135904() & 1) == 0)
  {
    sub_23DF73E54((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    sub_23DF73E54((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
    swift_release();
    goto LABEL_21;
  }
  sub_23DF73E54((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
  v25 = sub_23E136BDC();
  swift_release();
  swift_release();
  sub_23DF73E54((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for IconDescriptor);
LABEL_25:
  sub_23DF73E54((uint64_t)v15, type metadata accessor for AccessoryControlsHeaderConfig.Image);
  return v25 & 1;
}

BOOL sub_23E0E5480(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char v20;
  _BOOL8 result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  char v29;
  uint64_t v30;
  char *v31;

  v4 = type metadata accessor for AccessoryControlsHeaderConfig.Image(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26188);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v30 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v30 - v18;
  if (*a1 == *a2 && a1[1] == a2[1] || (v20 = sub_23E137614(), result = 0, (v20 & 1) != 0))
  {
    v22 = a1[3];
    v23 = a2[3];
    if (v22)
    {
      if (!v23)
        return 0;
      if (a1[2] != a2[2] || v22 != v23)
      {
        v24 = sub_23E137614();
        result = 0;
        if ((v24 & 1) == 0)
          return result;
      }
    }
    else if (v23)
    {
      return 0;
    }
    v31 = v7;
    v25 = type metadata accessor for AccessoryControlsHeaderConfig(0);
    sub_23E0E4FAC((uint64_t)a1 + *(int *)(v25 + 24), (uint64_t)v19);
    sub_23E0E4FAC((uint64_t)a2 + *(int *)(v25 + 24), (uint64_t)v16);
    v26 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_23E0E4FAC((uint64_t)v19, (uint64_t)v10);
    sub_23E0E4FAC((uint64_t)v16, v26);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v27((uint64_t)v10, 1, v4) == 1)
    {
      sub_23DF89C7C((uint64_t)v16, qword_256D203B8);
      sub_23DF89C7C((uint64_t)v19, qword_256D203B8);
      if (v27(v26, 1, v4) == 1)
      {
        sub_23DF89C7C((uint64_t)v10, qword_256D203B8);
        return 1;
      }
      goto LABEL_16;
    }
    sub_23E0E4FAC((uint64_t)v10, (uint64_t)v13);
    if (v27(v26, 1, v4) == 1)
    {
      sub_23DF89C7C((uint64_t)v16, qword_256D203B8);
      sub_23DF89C7C((uint64_t)v19, qword_256D203B8);
      sub_23DF73E54((uint64_t)v13, type metadata accessor for AccessoryControlsHeaderConfig.Image);
LABEL_16:
      sub_23DF89C7C((uint64_t)v10, &qword_256D26188);
      return 0;
    }
    v28 = (uint64_t)v31;
    sub_23DF89384(v26, (uint64_t)v31, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    v29 = sub_23E0E5108((uint64_t)v13, v28);
    sub_23DF73E54(v28, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    sub_23DF89C7C((uint64_t)v16, qword_256D203B8);
    sub_23DF89C7C((uint64_t)v19, qword_256D203B8);
    sub_23DF73E54((uint64_t)v13, type metadata accessor for AccessoryControlsHeaderConfig.Image);
    sub_23DF89C7C((uint64_t)v10, qword_256D203B8);
    return (v29 & 1) != 0;
  }
  return result;
}

uint64_t sub_23E0E57BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_256D203B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_23E0E5804(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  void *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  id v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = (void *)a2[1];
    *a1 = *a2;
    a1[1] = (uint64_t)v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23E134C80();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    v11 = v5;
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_23E0E589C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23E134C80();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_23E0E58E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  id v10;

  v4 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E134C80();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_23E0E5950(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = (void *)a2[1];
  v7 = (void *)a1[1];
  a1[1] = v6;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

_OWORD *sub_23E0E59C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_23E0E5A24(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  v7 = (void *)a1[1];
  *a1 = *a2;
  a1[1] = v6;

  v8 = *(int *)(a3 + 20);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_23E0E5A90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0E5A9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Device.Control.AlarmAndTimerConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_23E0E5B18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0E5B24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Device.Control.AlarmAndTimerConfig(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for AlarmAndTimerControlView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D261F0);
}

uint64_t sub_23E0E5BAC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E0E5C20()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0E5C30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  id v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unsigned __int8 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;

  v78 = a1;
  v73 = sub_23E1372E4();
  v71 = *(_QWORD *)(v73 - 8);
  MEMORY[0x24BDAC7A8](v73);
  v72 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for AlarmAndTimerControlView(0);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  v68 = *(_QWORD *)(v3 - 8);
  v69 = v4;
  MEMORY[0x24BDAC7A8](v3);
  v67 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E134C80();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for Device.Control.AlarmAndTimerConfig(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for AlarmAndTimerControlContentView(0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26228);
  MEMORY[0x24BDAC7A8](v65);
  v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26230);
  MEMORY[0x24BDAC7A8](v70);
  v66 = (char *)&v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26238);
  MEMORY[0x24BDAC7A8](v74);
  v77 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26240);
  MEMORY[0x24BDAC7A8](v75);
  v76 = (uint64_t)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void **)(v1 + 8);
  v22 = v1 + *(int *)(v3 + 20);
  v64 = v1;
  sub_23DF73E10(v22, (uint64_t)v12, type metadata accessor for Device.Control.AlarmAndTimerConfig);
  v23 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v23(v9, v12, v6);
  *(_QWORD *)v15 = swift_getKeyPath();
  v15[40] = 0;
  sub_23E134D28();
  sub_23DF73F28(&qword_256D1FE38, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D340], MEMORY[0x24BE4D318]);
  v24 = v21;
  *((_QWORD *)v15 + 6) = sub_23E135F1C();
  *((_QWORD *)v15 + 7) = v25;
  v23(&v15[*(int *)(v13 + 24)], v9, v6);
  v26 = &v15[*(int *)(v13 + 28)];
  *(_QWORD *)v26 = swift_getKeyPath();
  *(_OWORD *)(v26 + 8) = 0u;
  *(_OWORD *)(v26 + 24) = 0u;
  *(_OWORD *)(v26 + 40) = 0u;
  *(_OWORD *)(v26 + 50) = 0u;
  v27 = v67;
  sub_23DF73E10(v1, v67, type metadata accessor for AlarmAndTimerControlView);
  v28 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  v69 += v28;
  v29 = swift_allocObject();
  sub_23DF89384(v27, v29 + v28, type metadata accessor for AlarmAndTimerControlView);
  v30 = v72;
  sub_23E1372CC();
  v31 = &v17[*(int *)(v65 + 36)];
  v32 = sub_23E135ED4();
  v33 = v71;
  v34 = v73;
  (*(void (**)(char *, char *, uint64_t))(v71 + 16))(&v31[*(int *)(v32 + 20)], v30, v73);
  *(_QWORD *)v31 = &unk_256D26250;
  *((_QWORD *)v31 + 1) = v29;
  sub_23DF73E10((uint64_t)v15, (uint64_t)v17, type metadata accessor for AlarmAndTimerControlContentView);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v34);
  v35 = (uint64_t)v15;
  v36 = (uint64_t)v66;
  sub_23DF73E54(v35, type metadata accessor for AlarmAndTimerControlContentView);
  sub_23DF73E10(v64, v27, type metadata accessor for AlarmAndTimerControlView);
  v37 = swift_allocObject();
  sub_23DF89384(v27, v37 + v28, type metadata accessor for AlarmAndTimerControlView);
  sub_23DF89C1C((uint64_t)v17, v36, &qword_256D26228);
  v38 = (_QWORD *)(v36 + *(int *)(v70 + 36));
  *v38 = 0;
  v38[1] = 0;
  v38[2] = sub_23E0E6868;
  v38[3] = v37;
  sub_23DF89C7C((uint64_t)v17, &qword_256D26228);
  LOBYTE(v13) = sub_23E136750();
  v39 = sub_23E136768();
  v40 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v13)
    v40 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v39)
    v40 = sub_23E13675C();
  v41 = (uint64_t)v77;
  sub_23E135D00();
  v43 = v42;
  v45 = v44;
  v47 = v46;
  v49 = v48;
  sub_23DF89C1C(v36, v41, &qword_256D26230);
  v50 = v41 + *(int *)(v74 + 36);
  *(_BYTE *)v50 = v40;
  *(_QWORD *)(v50 + 8) = v43;
  *(_QWORD *)(v50 + 16) = v45;
  *(_QWORD *)(v50 + 24) = v47;
  *(_QWORD *)(v50 + 32) = v49;
  *(_BYTE *)(v50 + 40) = 0;
  sub_23DF89C7C(v36, &qword_256D26230);
  v51 = sub_23E136738();
  v52 = sub_23E13675C();
  sub_23E13675C();
  if (sub_23E13675C() != v51)
    v52 = sub_23E13675C();
  sub_23E135D00();
  v54 = v53;
  v56 = v55;
  v58 = v57;
  v60 = v59;
  v61 = v76;
  sub_23DF89C1C(v41, v76, &qword_256D26238);
  v62 = v61 + *(int *)(v75 + 36);
  *(_BYTE *)v62 = v52;
  *(_QWORD *)(v62 + 8) = v54;
  *(_QWORD *)(v62 + 16) = v56;
  *(_QWORD *)(v62 + 24) = v58;
  *(_QWORD *)(v62 + 32) = v60;
  *(_BYTE *)(v62 + 40) = 0;
  sub_23DF89C7C(v41, &qword_256D26238);
  return sub_23E0E6894(v61, v78);
}

uint64_t sub_23E0E623C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  v1[12] = a1;
  type metadata accessor for Device.Control.AlarmAndTimerConfig(0);
  v1[13] = swift_task_alloc();
  sub_23E1372C0();
  v1[14] = sub_23E1372B4();
  v1[15] = sub_23E1372A8();
  v1[16] = v2;
  return swift_task_switch();
}

uint64_t sub_23E0E62C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(void **)(v1 + 8);
  *(_QWORD *)(v0 + 136) = v3;
  v4 = type metadata accessor for AlarmAndTimerControlView(0);
  sub_23DF73E10(v1 + *(int *)(v4 + 20), v2, type metadata accessor for Device.Control.AlarmAndTimerConfig);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_23E0E6378;
  return sub_23E134D1C();
}

uint64_t sub_23E0E6378()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(void **)(*v0 + 136);
  v3 = *(_QWORD *)(*v0 + 104);
  swift_task_dealloc();

  sub_23DF89C7C(v1 + 16, qword_256D26268);
  v4 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_task_switch();
}

uint64_t sub_23E0E6404()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_23E0E643C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for AlarmAndTimerControlView(0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E8C8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E1372E4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  sub_23DF73E10(a1, (uint64_t)v5, type metadata accessor for AlarmAndTimerControlView);
  sub_23E1372C0();
  v10 = sub_23E1372B4();
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v12 = swift_allocObject();
  v13 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v12 + 16) = v10;
  *(_QWORD *)(v12 + 24) = v13;
  sub_23DF89384((uint64_t)v5, v12 + v11, type metadata accessor for AlarmAndTimerControlView);
  sub_23DFA2514((uint64_t)v8, (uint64_t)&unk_256D26260, v12);
  return swift_release();
}

uint64_t sub_23E0E6580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[12] = a4;
  type metadata accessor for Device.Control.AlarmAndTimerConfig(0);
  v4[13] = swift_task_alloc();
  sub_23E1372C0();
  v4[14] = sub_23E1372B4();
  v4[15] = sub_23E1372A8();
  v4[16] = v5;
  return swift_task_switch();
}

uint64_t sub_23E0E660C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(void **)(v1 + 8);
  *(_QWORD *)(v0 + 136) = v3;
  v4 = type metadata accessor for AlarmAndTimerControlView(0);
  sub_23DF73E10(v1 + *(int *)(v4 + 20), v2, type metadata accessor for Device.Control.AlarmAndTimerConfig);
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  v3;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 144) = v5;
  *v5 = v0;
  v5[1] = sub_23E0E66BC;
  return sub_23E134D1C();
}

uint64_t sub_23E0E66BC()
{
  uint64_t *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = *(void **)(*v0 + 136);
  v3 = *(_QWORD *)(*v0 + 104);
  swift_task_dealloc();

  sub_23DF89C7C(v1 + 16, qword_256D26268);
  v4 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_task_switch();
}

uint64_t type metadata accessor for AlarmAndTimerControlContentView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D262C8);
}

uint64_t sub_23E0E6774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AlarmAndTimerControlView(0) - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_23DF83188;
  return sub_23E0E623C(v3);
}

uint64_t objectdestroyTm_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for AlarmAndTimerControlView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);

  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_23E0E6868()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AlarmAndTimerControlView(0) - 8) + 80);
  return sub_23E0E643C(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_23E0E6894(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E0E68DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AlarmAndTimerControlView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  swift_unknownObjectRelease();
  v4 = v0 + v3;

  v5 = v4 + *(int *)(v1 + 20);
  v6 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocObject();
}

uint64_t sub_23E0E6970(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AlarmAndTimerControlView(0) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_23DFA67E4;
  return sub_23E0E6580(a1, v5, v6, v7);
}

uint64_t sub_23E0E69F4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  char v7;
  __int128 v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  char v30;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *((_BYTE *)a2 + 40);
    if ((v7 & 1) != 0)
    {
      v8 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v8 - 8))(a1, a2);
    }
    else
    {
      *(_QWORD *)a1 = *a2;
      swift_retain();
    }
    *(_BYTE *)(v4 + 40) = v7;
    v10 = (void *)a2[7];
    *(_QWORD *)(v4 + 48) = a2[6];
    *(_QWORD *)(v4 + 56) = v10;
    v11 = *(int *)(a3 + 24);
    v12 = v4 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_23E134C80();
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    v16 = v10;
    v15(v12, v13, v14);
    v17 = *(int *)(a3 + 28);
    v18 = v4 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = *(_QWORD *)v19;
    v21 = *(_QWORD *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    v23 = *(_QWORD *)(v19 + 24);
    v24 = *(_QWORD *)(v19 + 32);
    v25 = *(_QWORD *)(v19 + 40);
    v26 = *(_QWORD *)(v19 + 48);
    v27 = *(_QWORD *)(v19 + 56);
    v29 = *(_BYTE *)(v19 + 64);
    v30 = *(_BYTE *)(v19 + 65);
    sub_23DF98590(*(_QWORD *)v19, v21, v22, v23, v24, v25, v26, v27, v29, v30);
    *(_QWORD *)v18 = v20;
    *(_QWORD *)(v18 + 8) = v21;
    *(_QWORD *)(v18 + 16) = v22;
    *(_QWORD *)(v18 + 24) = v23;
    *(_QWORD *)(v18 + 32) = v24;
    *(_QWORD *)(v18 + 40) = v25;
    *(_QWORD *)(v18 + 48) = v26;
    *(_QWORD *)(v18 + 56) = v27;
    *(_BYTE *)(v18 + 64) = v29;
    *(_BYTE *)(v18 + 65) = v30;
  }
  return v4;
}

uint64_t sub_23E0E6B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(a1);
  else
    swift_release();

  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 28);
  return sub_23DF985F0(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_BYTE *)(v6 + 64), *(_BYTE *)(v6 + 65));
}

uint64_t sub_23E0E6C00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6;
  __int128 v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char v28;

  v6 = *(_BYTE *)(a2 + 40);
  if ((v6 & 1) != 0)
  {
    v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain();
  }
  *(_BYTE *)(a1 + 40) = v6;
  v8 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23E134C80();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v8;
  v13(v10, v11, v12);
  v15 = *(int *)(a3 + 28);
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_QWORD *)v17;
  v19 = *(_QWORD *)(v17 + 8);
  v20 = *(_QWORD *)(v17 + 16);
  v21 = *(_QWORD *)(v17 + 24);
  v22 = *(_QWORD *)(v17 + 32);
  v23 = *(_QWORD *)(v17 + 40);
  v24 = *(_QWORD *)(v17 + 48);
  v25 = *(_QWORD *)(v17 + 56);
  v27 = *(_BYTE *)(v17 + 64);
  v28 = *(_BYTE *)(v17 + 65);
  sub_23DF98590(*(_QWORD *)v17, v19, v20, v21, v22, v23, v24, v25, v27, v28);
  *(_QWORD *)v16 = v18;
  *(_QWORD *)(v16 + 8) = v19;
  *(_QWORD *)(v16 + 16) = v20;
  *(_QWORD *)(v16 + 24) = v21;
  *(_QWORD *)(v16 + 32) = v22;
  *(_QWORD *)(v16 + 40) = v23;
  *(_QWORD *)(v16 + 48) = v24;
  *(_QWORD *)(v16 + 56) = v25;
  *(_BYTE *)(v16 + 64) = v27;
  *(_BYTE *)(v16 + 65) = v28;
  return a1;
}

uint64_t sub_23E0E6D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v36;
  char v37;

  if (a1 != a2)
  {
    sub_23DF89C7C(a1, qword_256D1E720);
    if ((*(_BYTE *)(a2 + 40) & 1) != 0)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 40) = 1;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_BYTE *)(a1 + 40) = 0;
      swift_retain();
    }
  }
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v7 = *(void **)(a2 + 56);
  v8 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v7;
  v9 = v7;

  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  v14 = *(int *)(a3 + 28);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = *(_QWORD *)v16;
  v18 = *(_QWORD *)(v16 + 8);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = *(_QWORD *)(v16 + 24);
  v21 = *(_QWORD *)(v16 + 32);
  v22 = *(_QWORD *)(v16 + 40);
  v23 = *(_QWORD *)(v16 + 48);
  v24 = *(_QWORD *)(v16 + 56);
  v36 = *(_BYTE *)(v16 + 64);
  v37 = *(_BYTE *)(v16 + 65);
  sub_23DF98590(*(_QWORD *)v16, v18, v19, v20, v21, v22, v23, v24, v36, v37);
  v25 = *(_QWORD *)v15;
  v26 = *(_QWORD *)(v15 + 8);
  v27 = *(_QWORD *)(v15 + 16);
  v28 = *(_QWORD *)(v15 + 24);
  v29 = *(_QWORD *)(v15 + 32);
  v30 = *(_QWORD *)(v15 + 40);
  v31 = *(_QWORD *)(v15 + 48);
  v32 = *(_QWORD *)(v15 + 56);
  v33 = *(_BYTE *)(v15 + 64);
  v34 = *(_BYTE *)(v15 + 65);
  *(_QWORD *)v15 = v17;
  *(_QWORD *)(v15 + 8) = v18;
  *(_QWORD *)(v15 + 16) = v19;
  *(_QWORD *)(v15 + 24) = v20;
  *(_QWORD *)(v15 + 32) = v21;
  *(_QWORD *)(v15 + 40) = v22;
  *(_QWORD *)(v15 + 48) = v23;
  *(_QWORD *)(v15 + 56) = v24;
  *(_BYTE *)(v15 + 64) = v36;
  *(_BYTE *)(v15 + 65) = v37;
  sub_23DF985F0(v25, v26, v27, v28, v29, v30, v31, v32, v33, v34);
  return a1;
}

_OWORD *sub_23E0E6ECC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  __int128 v14;
  __int128 v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  *(_OWORD *)((char *)a1 + 25) = *(_OWORD *)((char *)a2 + 25);
  a1[3] = a2[3];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = *((_OWORD *)v13 + 3);
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  *((_OWORD *)v12 + 3) = v14;
  *((_WORD *)v12 + 32) = *((_WORD *)v13 + 32);
  v15 = *((_OWORD *)v13 + 1);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v15;
  return a1;
}

uint64_t sub_23E0E6F6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  __int128 v28;
  __int128 v29;

  if (a1 != a2)
  {
    sub_23DF89C7C(a1, qword_256D1E720);
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  }
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;

  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = *(int *)(a3 + 28);
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_BYTE *)(v15 + 64);
  v17 = *(_BYTE *)(v15 + 65);
  v18 = *(_QWORD *)v14;
  v19 = *(_QWORD *)(v14 + 8);
  v20 = *(_QWORD *)(v14 + 16);
  v21 = *(_QWORD *)(v14 + 24);
  v22 = *(_QWORD *)(v14 + 32);
  v23 = *(_QWORD *)(v14 + 40);
  v24 = *(_QWORD *)(v14 + 48);
  v25 = *(_QWORD *)(v14 + 56);
  v26 = *(_BYTE *)(v14 + 64);
  v27 = *(_BYTE *)(v14 + 65);
  v28 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v28;
  v29 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v14 + 48) = v29;
  *(_BYTE *)(v14 + 64) = v16;
  *(_BYTE *)(v14 + 65) = v17;
  sub_23DF985F0(v18, v19, v20, v21, v22, v23, v24, v25, v26, v27);
  return a1;
}

uint64_t sub_23E0E7060()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0E706C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 56);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23E134C80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23E0E70E8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0E70F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 56) = (a2 - 1);
  }
  else
  {
    v7 = sub_23E134C80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23E0E7168()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E134C80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E0E71EC()
{
  return sub_23DF8E904(&qword_256D26308, &qword_256D26240, sub_23E0E7220, MEMORY[0x24BDECC60]);
}

uint64_t sub_23E0E7220()
{
  return sub_23DF8E904(&qword_256D26310, &qword_256D26238, sub_23E0E7244, MEMORY[0x24BDECC60]);
}

uint64_t sub_23E0E7244()
{
  return sub_23DF8E904(&qword_256D26318, &qword_256D26230, (uint64_t (*)(void))sub_23E0E7268, MEMORY[0x24BDF0910]);
}

unint64_t sub_23E0E7268()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26320;
  if (!qword_256D26320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26228);
    v2[0] = sub_23DF73F28(&qword_256D26328, type metadata accessor for AlarmAndTimerControlContentView, (uint64_t)&unk_23E1423F0);
    v2[1] = sub_23DF73F28(&qword_256D26330, (uint64_t (*)(uint64_t))MEMORY[0x24BDEC4E0], MEMORY[0x24BDEC4C8]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26320);
  }
  return result;
}

uint64_t sub_23E0E7304()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0E7314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t);
  void (*v72)(char *, uint64_t, uint64_t);
  char *v73;
  uint64_t v74;
  char v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  void (*v80)(char *, uint64_t, uint64_t);
  char v81;
  void (*v82)(char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  __int128 v91;
  _OWORD *v92;
  char *v93;
  void (*v94)(char *, uint64_t, uint64_t);
  char *v95;
  uint64_t v96;
  char *v97;
  void (*v98)(char *, uint64_t, uint64_t);
  char v99;
  id v100;
  char *v101;
  char *v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  __int128 v114;
  _OWORD *v115;
  char v116;
  uint64_t v117;
  __int128 *v118;
  __int128 v119;
  __int128 v120;
  char v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  int v125;
  uint64_t v126;
  char *v127;
  char v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  char v145;
  void (*v146)(char *, uint64_t);
  char *v147;
  char *v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  __int128 *v152;
  __int128 v153;
  __int128 v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char v170;
  uint64_t *v171;
  uint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void (*v185)(char *, uint64_t);
  void (*v186)(char *, char *, uint64_t);
  uint64_t *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unsigned int v192;
  void (*v193)(char *, uint64_t, uint64_t);
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  char *v213;
  void (*v214)(char *, uint64_t);
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  _OWORD *v222;
  char *v223;
  void (*v224)(char *, uint64_t);
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  _BYTE v235[56];
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int16 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int16 v245;

  v231 = a2;
  v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26338);
  MEMORY[0x24BDAC7A8](v221);
  v4 = (char *)&v184 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26340);
  MEMORY[0x24BDAC7A8](v210);
  v206 = (uint64_t *)((char *)&v184 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26348);
  MEMORY[0x24BDAC7A8](v201);
  v202 = (uint64_t *)((char *)&v184 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26350);
  MEMORY[0x24BDAC7A8](v211);
  v203 = (char *)&v184 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26358);
  MEMORY[0x24BDAC7A8](v200);
  v195 = (uint64_t)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26360);
  MEMORY[0x24BDAC7A8](v9);
  v212 = (uint64_t)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v207 = (char *)&v184 - v12;
  v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26368);
  MEMORY[0x24BDAC7A8](v204);
  v14 = (char *)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26370);
  MEMORY[0x24BDAC7A8](v197);
  v198 = (uint64_t *)((char *)&v184 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26378);
  MEMORY[0x24BDAC7A8](v205);
  v199 = (char *)&v184 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26380);
  MEMORY[0x24BDAC7A8](v196);
  v194 = (uint64_t)&v184 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26388);
  MEMORY[0x24BDAC7A8](v18);
  v209 = (uint64_t)&v184 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v217 = (uint64_t)&v184 - v21;
  v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26390);
  MEMORY[0x24BDAC7A8](v219);
  v222 = (_OWORD *)((char *)&v184 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v227 = sub_23E134CF8();
  v224 = *(void (**)(char *, uint64_t))(v227 - 8);
  MEMORY[0x24BDAC7A8](v227);
  v226 = (char *)&v184 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v225 = (char *)&v184 - v25;
  v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26398);
  MEMORY[0x24BDAC7A8](v230);
  v220 = (char *)&v184 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D263A0);
  MEMORY[0x24BDAC7A8](v228);
  v229 = (uint64_t *)((char *)&v184 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v234 = sub_23E134D4C();
  v28 = *(_QWORD *)(v234 - 8);
  MEMORY[0x24BDAC7A8](v234);
  v208 = (char *)&v184 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&v184 - v31;
  MEMORY[0x24BDAC7A8](v33);
  v216 = (char *)&v184 - v34;
  MEMORY[0x24BDAC7A8](v35);
  v223 = (char *)&v184 - v36;
  MEMORY[0x24BDAC7A8](v37);
  v232 = (char *)&v184 - v38;
  v39 = sub_23E135934();
  v40 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v215 = (char *)&v184 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)&v184 - v43;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D263A8);
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)&v184 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v48);
  v233 = (uint64_t)&v184 - v49;
  v50 = *(id *)(a1 + 56);
  sub_23E134CD4();

  v51 = sub_23E13591C();
  v214 = *(void (**)(char *, uint64_t))(v40 + 8);
  v214(v44, v39);
  v52 = type metadata accessor for AlarmAndTimerControlContentView(0);
  v53 = *(int *)(v52 + 24);
  v218 = a1;
  v54 = a1 + v53;
  v55 = *(_QWORD *)(v51 + 16);
  v213 = v4;
  if (v55 && (v56 = sub_23DF84CA8(v54), (v57 & 1) != 0))
  {
    v58 = v233;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 16))(v233, *(_QWORD *)(v51 + 56) + *(_QWORD *)(v28 + 72) * v56, v234);
    v59 = 0;
  }
  else
  {
    v59 = 1;
    v58 = v233;
  }
  v60 = v234;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v58, v59, 1, v234);
  swift_bridgeObjectRelease();
  sub_23DF89C1C(v58, (uint64_t)v47, &qword_256D263A8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v47, 1, v60) == 1)
  {
    sub_23DF89C7C((uint64_t)v47, &qword_256D263A8);
    v61 = sub_23E1371A0();
    v63 = v62;
    v64 = sub_23E1371A0();
    v66 = v65;
    swift_bridgeObjectRelease_n();
    v67 = v229;
    *v229 = v61;
    v67[1] = v63;
    v67[2] = 0;
    v67[3] = 0;
    v67[4] = v64;
    v67[5] = v66;
    v67[6] = 0;
    v67[7] = 0;
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D263B0);
    sub_23E0E99E8();
    sub_23DF89B88(&qword_256D263E0, &qword_256D263B0, MEMORY[0x24BDF5428]);
    sub_23E136480();
    return sub_23DF89C7C(v58, &qword_256D263A8);
  }
  v189 = v54;
  v190 = v39;
  v188 = v32;
  v191 = v52;
  v187 = (uint64_t *)v14;
  v69 = v232;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v232, v47, v60);
  v70 = v225;
  sub_23E134D34();
  v71 = v224;
  v72 = (void (*)(_QWORD))*((_QWORD *)v224 + 13);
  v73 = v226;
  v192 = *MEMORY[0x24BE4D2C8];
  v74 = v227;
  v193 = (void (*)(char *, uint64_t, uint64_t))v72;
  v72(v226);
  v75 = MEMORY[0x2426495BC](v70, v73);
  v76 = (void (*)(char *, uint64_t))*((_QWORD *)v71 + 1);
  v77 = v69;
  v76(v73, v74);
  v76(v70, v74);
  v78 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  v79 = v223;
  v78(v223, v77, v60);
  if ((v75 & 1) == 0)
  {
    v186 = v78;
    sub_23E134D40();
    v80 = v193;
    v193(v73, v192, v74);
    v81 = MEMORY[0x2426495BC](v70, v73);
    v76(v73, v74);
    v76(v70, v74);
    v82 = *(void (**)(char *, uint64_t))(v28 + 8);
    v82(v79, v60);
    v224 = v82;
    if ((v81 & 1) != 0)
      goto LABEL_10;
    v94 = v80;
    v95 = v77;
    sub_23E134D34();
    v96 = *MEMORY[0x24BE4D2E0];
    v94(v73, v96, v74);
    LOBYTE(v94) = MEMORY[0x2426495BC](v70, v73);
    v76(v73, v74);
    v76(v70, v74);
    v97 = v216;
    v186(v216, v95, v60);
    if ((v94 & 1) != 0)
    {
      v82(v97, v60);
      v98 = v193;
    }
    else
    {
      sub_23E134D40();
      v98 = v193;
      v193(v73, v96, v74);
      v99 = MEMORY[0x2426495BC](v70, v73);
      v76(v73, v74);
      v76(v70, v74);
      v82(v97, v60);
      if ((v99 & 1) == 0)
        goto LABEL_16;
    }
    v100 = *(id *)(v218 + 56);
    v101 = v215;
    sub_23E134CD4();

    LODWORD(v100) = sub_23E135928();
    v214(v101, v190);
    if ((_DWORD)v100 != 2)
    {
      v107 = sub_23E1371A0();
      v109 = v108;
      v110 = sub_23E1371A0();
      v112 = v111;
      swift_bridgeObjectRelease();
      *(_QWORD *)&v236 = v107;
      *((_QWORD *)&v236 + 1) = v109;
      *(_QWORD *)&v237 = v110;
      *((_QWORD *)&v237 + 1) = v112;
      LOBYTE(v238) = 1;
      sub_23E0E9AD0();
      sub_23E136480();
      v113 = v243;
      v114 = v242;
      v115 = v222;
      *v222 = v241;
      v115[1] = v114;
      *((_BYTE *)v115 + 32) = v113;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D263C8);
      sub_23E0E9A6C();
      sub_23DF89B88(&qword_256D263D8, &qword_256D26338, MEMORY[0x24BDF5428]);
      v84 = (uint64_t)v220;
      sub_23E136480();
      v93 = v232;
      v83 = (uint64_t)v229;
      goto LABEL_11;
    }
LABEL_16:
    v102 = v232;
    sub_23E134D34();
    v103 = *MEMORY[0x24BE4D2F0];
    v104 = v227;
    v98(v73, *MEMORY[0x24BE4D2F0], v227);
    LODWORD(v216) = MEMORY[0x2426495BC](v70, v73);
    v76(v73, v104);
    v76(v70, v104);
    v105 = v60;
    v106 = v188;
    v186(v188, v102, v105);
    v185 = v76;
    LODWORD(v223) = v103;
    if ((v216 & 1) != 0)
    {
      v82(v106, v105);
    }
    else
    {
      sub_23E134D34();
      v116 = sub_23E134CE0();
      v76(v70, v104);
      v82(v106, v105);
      if ((v116 & 1) == 0)
      {
        sub_23E134D34();
        v193(v73, *MEMORY[0x24BE4D2F8], v104);
        v128 = MEMORY[0x2426495BC](v70, v73);
        v76(v73, v104);
        v76(v70, v104);
        v129 = v187;
        if ((v128 & 1) != 0)
        {
          v130 = sub_23E1371A0();
          v131 = v198;
          *v198 = v130;
          v131[1] = v132;
          v131[2] = 0;
          v131[3] = 0;
          swift_storeEnumTagMultiPayload();
          sub_23E0E9B14();
          sub_23E0E9AD0();
          v133 = (uint64_t)v199;
          sub_23E136480();
          sub_23DF89C1C(v133, (uint64_t)v129, &qword_256D26378);
          swift_storeEnumTagMultiPayload();
          sub_23E0E9C34(&qword_256D263E8, &qword_256D26378, (uint64_t (*)(void))sub_23E0E9B14);
          sub_23E136480();
          sub_23DF89C7C(v133, &qword_256D26378);
        }
        else
        {
          v134 = sub_23E1371A0();
          v136 = v135;
          sub_23DF9C9A0((uint64_t)&v241);
          v137 = *((_QWORD *)&v242 + 1);
          v138 = v243;
          __swift_project_boxed_opaque_existential_1(&v241, *((uint64_t *)&v242 + 1));
          v139 = (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 24))(v137, v138);
          v141 = v140;
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v241);
          *v129 = v134;
          v129[1] = v136;
          v129[2] = v139;
          v129[3] = v141;
          swift_storeEnumTagMultiPayload();
          sub_23E0E9C34(&qword_256D263E8, &qword_256D26378, (uint64_t (*)(void))sub_23E0E9B14);
          sub_23E0E9AD0();
          sub_23E136480();
        }
        v127 = v232;
LABEL_25:
        v83 = (uint64_t)v229;
        v142 = v225;
        sub_23E134D40();
        v143 = v226;
        v144 = v227;
        v193(v226, v223, v227);
        v145 = MEMORY[0x2426495BC](v142, v143);
        v146 = v185;
        v185(v143, v144);
        v146(v142, v144);
        v147 = v208;
        v148 = v127;
        v149 = v234;
        v186(v208, v148, v234);
        if ((v145 & 1) != 0)
        {
          v224(v147, v149);
        }
        else
        {
          sub_23E134D40();
          v150 = sub_23E134CE0();
          v146(v142, v144);
          v224(v147, v149);
          if ((v150 & 1) == 0)
          {
            sub_23E134D40();
            v169 = v226;
            v193(v226, *MEMORY[0x24BE4D2F8], v144);
            v170 = MEMORY[0x2426495BC](v142, v169);
            v146(v169, v144);
            v146(v142, v144);
            v160 = (uint64_t)v207;
            v171 = v206;
            if ((v170 & 1) == 0)
            {
              v176 = sub_23E1371A0();
              v178 = v177;
              sub_23DF9C9A0((uint64_t)&v236);
              v179 = *((_QWORD *)&v237 + 1);
              v180 = v238;
              __swift_project_boxed_opaque_existential_1(&v236, *((uint64_t *)&v237 + 1));
              v181 = (*(uint64_t (**)(uint64_t, uint64_t))(v180 + 32))(v179, v180);
              v183 = v182;
              __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v236);
              *v171 = v176;
              v171[1] = v178;
              v171[2] = v181;
              v171[3] = v183;
              swift_storeEnumTagMultiPayload();
              sub_23E0E9C34(&qword_256D26430, &qword_256D26350, (uint64_t (*)(void))sub_23E0E9CA0);
              sub_23E0E9AD0();
              sub_23E136480();
              goto LABEL_30;
            }
            v172 = sub_23E1371A0();
            v173 = v202;
            *v202 = v172;
            v173[1] = v174;
            v173[2] = 0;
            v173[3] = 0;
            swift_storeEnumTagMultiPayload();
            sub_23E0E9CA0();
            sub_23E0E9AD0();
            v175 = (uint64_t)v203;
            sub_23E136480();
            sub_23DF89C1C(v175, (uint64_t)v171, &qword_256D26350);
            swift_storeEnumTagMultiPayload();
            sub_23E0E9C34(&qword_256D26430, &qword_256D26350, (uint64_t (*)(void))sub_23E0E9CA0);
            sub_23E136480();
            v161 = v175;
            v162 = &qword_256D26350;
LABEL_29:
            sub_23DF89C7C(v161, v162);
LABEL_30:
            v163 = v217;
            v164 = v209;
            sub_23DF89C1C(v217, v209, &qword_256D26388);
            v165 = v212;
            sub_23DF89C1C(v160, v212, &qword_256D26360);
            v166 = (uint64_t)v213;
            sub_23DF89C1C(v164, (uint64_t)v213, &qword_256D26388);
            v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26478);
            sub_23DF89C1C(v165, v166 + *(int *)(v167 + 48), &qword_256D26360);
            sub_23DF89C7C(v165, &qword_256D26360);
            sub_23DF89C7C(v164, &qword_256D26388);
            v168 = v160;
            sub_23DF89C1C(v166, (uint64_t)v222, &qword_256D26338);
            swift_storeEnumTagMultiPayload();
            __swift_instantiateConcreteTypeFromMangledName(&qword_256D263C8);
            sub_23E0E9A6C();
            sub_23DF89B88(&qword_256D263D8, &qword_256D26338, MEMORY[0x24BDF5428]);
            v84 = (uint64_t)v220;
            sub_23E136480();
            sub_23DF89C7C(v166, &qword_256D26338);
            sub_23DF89C7C(v168, &qword_256D26360);
            sub_23DF89C7C(v163, &qword_256D26388);
            v93 = v232;
            goto LABEL_11;
          }
        }
        v151 = v218;
        v152 = (__int128 *)(v218 + *(int *)(v191 + 28));
        v153 = v152[3];
        v238 = v152[2];
        v239 = v153;
        v240 = *((_WORD *)v152 + 32);
        v154 = v152[1];
        v236 = *v152;
        v237 = v154;
        sub_23DF98EC8((uint64_t)&v236, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
        sub_23DF9C754((uint64_t)v235);
        sub_23DF98EC8((uint64_t)&v236, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
        v155 = v235[49];
        v156 = sub_23E136714();
        MEMORY[0x24BDAC7A8](v156);
        *(&v184 - 2) = (uint64_t)v232;
        *(&v184 - 1) = v151;
        v157 = v195;
        sub_23E0E8F1C(v155, v158, (void (*)(__n128))sub_23E0E9DC0, (uint64_t)(&v184 - 4), v195);
        sub_23DF89C1C(v157, (uint64_t)v202, &qword_256D26358);
        swift_storeEnumTagMultiPayload();
        sub_23E0E9CA0();
        sub_23E0E9AD0();
        v159 = (uint64_t)v203;
        sub_23E136480();
        sub_23DF89C1C(v159, (uint64_t)v206, &qword_256D26350);
        swift_storeEnumTagMultiPayload();
        sub_23E0E9C34(&qword_256D26430, &qword_256D26350, (uint64_t (*)(void))sub_23E0E9CA0);
        v160 = (uint64_t)v207;
        sub_23E136480();
        sub_23DF89C7C(v159, &qword_256D26350);
        v161 = v157;
        v162 = &qword_256D26358;
        goto LABEL_29;
      }
    }
    v117 = v218;
    v118 = (__int128 *)(v218 + *(int *)(v191 + 28));
    v119 = v118[3];
    v243 = v118[2];
    v244 = v119;
    v245 = *((_WORD *)v118 + 32);
    v120 = v118[1];
    v241 = *v118;
    v242 = v120;
    sub_23DF98EC8((uint64_t)&v241, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    sub_23DF9C754((uint64_t)&v236);
    sub_23DF98EC8((uint64_t)&v241, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    v121 = BYTE1(v239);
    v122 = sub_23E136714();
    MEMORY[0x24BDAC7A8](v122);
    v123 = v232;
    *(&v184 - 2) = (uint64_t)v232;
    *(&v184 - 1) = v117;
    v124 = v194;
    sub_23E0E8CC4(v121, v125, (void (*)(__n128))sub_23E0E9DF8, (uint64_t)(&v184 - 4), v194);
    sub_23DF89C1C(v124, (uint64_t)v198, &qword_256D26380);
    swift_storeEnumTagMultiPayload();
    sub_23E0E9B14();
    sub_23E0E9AD0();
    v126 = (uint64_t)v199;
    sub_23E136480();
    sub_23DF89C1C(v126, (uint64_t)v187, &qword_256D26378);
    swift_storeEnumTagMultiPayload();
    sub_23E0E9C34(&qword_256D263E8, &qword_256D26378, (uint64_t (*)(void))sub_23E0E9B14);
    sub_23E136480();
    sub_23DF89C7C(v126, &qword_256D26378);
    sub_23DF89C7C(v124, &qword_256D26380);
    v127 = v123;
    goto LABEL_25;
  }
  v224 = *(void (**)(char *, uint64_t))(v28 + 8);
  v224(v79, v60);
LABEL_10:
  v83 = (uint64_t)v229;
  v84 = (uint64_t)v220;
  v85 = sub_23E1371A0();
  v87 = v86;
  v88 = sub_23E1371A0();
  *(_QWORD *)&v236 = v85;
  *((_QWORD *)&v236 + 1) = v87;
  *(_QWORD *)&v237 = v88;
  *((_QWORD *)&v237 + 1) = v89;
  LOBYTE(v238) = 0;
  sub_23E0E9AD0();
  sub_23E136480();
  v90 = v243;
  v91 = v242;
  v92 = v222;
  *v222 = v241;
  v92[1] = v91;
  *((_BYTE *)v92 + 32) = v90;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D263C8);
  sub_23E0E9A6C();
  sub_23DF89B88(&qword_256D263D8, &qword_256D26338, MEMORY[0x24BDF5428]);
  sub_23E136480();
  v93 = v232;
LABEL_11:
  sub_23DF89C1C(v84, v83, &qword_256D26398);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D263B0);
  sub_23E0E99E8();
  sub_23DF89B88(&qword_256D263E0, &qword_256D263B0, MEMORY[0x24BDF5428]);
  sub_23E136480();
  sub_23DF89C7C(v84, &qword_256D26398);
  sub_23DF89C7C(v233, &qword_256D263A8);
  return ((uint64_t (*)(char *, uint64_t))v224)(v93, v234);
}

uint64_t sub_23E0E8CC4@<X0>(char a1@<W0>, int a2@<W1>, void (*a3)(__n128)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  _QWORD v21[2];
  int v22;
  uint64_t v23;

  v22 = a2;
  v23 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26410);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26480);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26400);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v21[1] = v21;
    MEMORY[0x24BDAC7A8](v16);
    v21[-2] = a3;
    v21[-1] = a4;
    sub_23E0E9B98();
    sub_23E135D3C();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v19, v14);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D263F8, &qword_256D26400, MEMORY[0x24BDEB238]);
    sub_23E136480();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }
  else
  {
    a3(v17);
    sub_23DF89C1C((uint64_t)v10, (uint64_t)v13, &qword_256D26410);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D263F8, &qword_256D26400, MEMORY[0x24BDEB238]);
    sub_23E0E9B98();
    sub_23E136480();
    return sub_23DF89C7C((uint64_t)v10, &qword_256D26410);
  }
}

uint64_t sub_23E0E8F1C@<X0>(char a1@<W0>, int a2@<W1>, void (*a3)(__n128)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  char *v19;
  _QWORD v21[2];
  int v22;
  uint64_t v23;

  v22 = a2;
  v23 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26458);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26488);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26448);
  v15 = *(_QWORD *)(v14 - 8);
  v17 = MEMORY[0x24BDAC7A8](v14);
  v19 = (char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v21[1] = v21;
    MEMORY[0x24BDAC7A8](v16);
    v21[-2] = a3;
    v21[-1] = a4;
    sub_23E0E9D24();
    sub_23E135D3C();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v13, v19, v14);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D26440, &qword_256D26448, MEMORY[0x24BDEB238]);
    sub_23E136480();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v19, v14);
  }
  else
  {
    a3(v17);
    sub_23DF89C1C((uint64_t)v10, (uint64_t)v13, &qword_256D26458);
    swift_storeEnumTagMultiPayload();
    sub_23DF89B88(&qword_256D26440, &qword_256D26448, MEMORY[0x24BDEB238]);
    sub_23E0E9D24();
    sub_23E136480();
    return sub_23DF89C7C((uint64_t)v10, &qword_256D26458);
  }
}

uint64_t sub_23E0E9174@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(_QWORD, __n128)@<X2>, uint64_t (*a3)(__n128)@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t (*v30)(void);
  void (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;

  v34 = a6;
  v35 = a5;
  v30 = (uint64_t (*)(void))a3;
  v31 = a4;
  v9 = sub_23E134CF8();
  v32 = *(_QWORD *)(v9 - 8);
  v33 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_23E134C80();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a2(0, v14);
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v30 - v19;
  v21 = a3(v18);
  v22 = type metadata accessor for AlarmAndTimerControlContentView(0);
  v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1 + *(int *)(v22 + 24), v12);
  v31(v23);
  KeyPath = swift_getKeyPath();
  *((_QWORD *)v20 + 9) = swift_getKeyPath();
  v20[112] = 0;
  *(_QWORD *)v20 = KeyPath;
  *(_OWORD *)(v20 + 24) = 0u;
  *(_OWORD *)(v20 + 40) = 0u;
  *(_OWORD *)(v20 + 50) = 0u;
  *(_OWORD *)(v20 + 8) = 0u;
  *((_QWORD *)v20 + 15) = v21;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v20[*(int *)(v17 + 28)], v16, v12);
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v20[*(int *)(v17 + 32)], v11, v33);
  v25 = sub_23E137020();
  v26 = v30();
  v27 = v34;
  sub_23DF73E10((uint64_t)v20, v34, (uint64_t (*)(_QWORD))a2);
  v28 = (uint64_t *)(v27 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v35) + 36));
  *v28 = v25;
  v28[1] = v26;
  return sub_23DF73E54((uint64_t)v20, (uint64_t (*)(_QWORD))a2);
}

uint64_t sub_23E0E935C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  _BYTE v15[72];
  _OWORD v16[4];
  __int16 v17;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v7 = v2 + *(int *)(v6 + 28);
  v8 = *(_OWORD *)(v7 + 48);
  v16[2] = *(_OWORD *)(v7 + 32);
  v16[3] = v8;
  v17 = *(_WORD *)(v7 + 64);
  v9 = *(_OWORD *)(v7 + 16);
  v16[0] = *(_OWORD *)v7;
  v16[1] = v9;
  sub_23DF98EC8((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v15);
  sub_23DF98EC8((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v10 = v15[49];
  sub_23DF73E10(v2, (uint64_t)&v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], type metadata accessor for AlarmAndTimerControlContentView);
  v11 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v12 = swift_allocObject();
  result = sub_23DF89384((uint64_t)&v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8], v12 + v11, type metadata accessor for AlarmAndTimerControlContentView);
  *(_BYTE *)a2 = (v10 & 1) == 0;
  *(_QWORD *)(a2 + 8) = 0x4034000000000000;
  *(_BYTE *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = sub_23E0E99AC;
  *(_QWORD *)(a2 + 32) = v12;
  return result;
}

uint64_t sub_23E0E9488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  int *v36;
  char *v37;
  char v38;
  char *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t KeyPath;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char v69;
  char v70;
  uint64_t v71;
  uint64_t v72;

  v62 = a5;
  v68 = sub_23E136F00();
  v66 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v65 = (char *)&v54 - v11;
  sub_23E136EF4();
  v71 = a1;
  v72 = a2;
  sub_23DF8DC18();
  swift_bridgeObjectRetain();
  v12 = sub_23E13693C();
  v14 = v13;
  v16 = v15 & 1;
  sub_23E136828();
  sub_23E1367B0();
  swift_release();
  v17 = sub_23E136900();
  v60 = v18;
  v61 = v17;
  v20 = v19;
  v64 = v21;
  swift_release();
  sub_23DFA055C(v12, v14, v16);
  swift_bridgeObjectRelease();
  KeyPath = swift_getKeyPath();
  if (a4)
  {
    v71 = a3;
    v72 = a4;
    swift_bridgeObjectRetain();
    v22 = sub_23E13693C();
    v24 = v23;
    v26 = v25 & 1;
    sub_23E136828();
    v27 = sub_23E136900();
    v58 = v28;
    v59 = v27;
    v30 = v29;
    v57 = v31;
    swift_release();
    v56 = v30 & 1;
    sub_23DFA055C(v22, v24, v26);
    swift_bridgeObjectRelease();
    v55 = swift_getKeyPath();
    LOBYTE(a4) = 1;
  }
  else
  {
    v58 = 0;
    v59 = 0;
    v56 = 0;
    v57 = 0;
    v55 = 0;
  }
  v32 = v67;
  v33 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
  v34 = v68;
  v33(v67, v65, v68);
  LOBYTE(v71) = 0;
  v70 = v20 & 1;
  v69 = 0;
  v35 = v62;
  v33(v62, v32, v34);
  v36 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256D264B8);
  v37 = &v35[v36[12]];
  v38 = v71;
  *(_QWORD *)v37 = 0x4049000000000000;
  v37[8] = v38;
  v39 = &v35[v36[16]];
  v40 = v70;
  v41 = v60;
  v42 = v61;
  *(_QWORD *)v39 = v61;
  *((_QWORD *)v39 + 1) = v41;
  v39[16] = v40;
  v43 = KeyPath;
  *((_QWORD *)v39 + 3) = v64;
  *((_QWORD *)v39 + 4) = v43;
  v39[40] = 1;
  v44 = &v35[v36[20]];
  v45 = v69;
  *(_QWORD *)v44 = 0x4024000000000000;
  v44[8] = v45;
  v46 = &v35[v36[24]];
  v47 = v58;
  v48 = v59;
  *(_QWORD *)v46 = v59;
  *((_QWORD *)v46 + 1) = v47;
  v50 = v56;
  v49 = v57;
  *((_QWORD *)v46 + 2) = v56;
  *((_QWORD *)v46 + 3) = v49;
  *((_QWORD *)v46 + 4) = v55;
  v46[40] = a4;
  sub_23DFA056C(v42, v41, v40);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23E0E9FB8(v48, v47, v50, v49);
  v51 = *(void (**)(char *, uint64_t))(v66 + 8);
  v52 = v68;
  v51(v65, v68);
  sub_23E0E9FF4(v48, v47, v50, v49);
  sub_23DFA055C(v42, v41, v70);
  swift_release();
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v51)(v67, v52);
}

uint64_t sub_23E0E97E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D264A0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = v1[1];
  v9 = v1[2];
  v8 = v1[3];
  *(_QWORD *)v5 = sub_23E136378();
  *((_QWORD *)v5 + 1) = 0;
  v5[16] = 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D264A8);
  sub_23E0E9488(v6, v7, v9, v8, &v5[*(int *)(v10 + 44)]);
  sub_23DF89C1C((uint64_t)v5, a1, &qword_256D264A0);
  *(_WORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D264B0) + 36)) = 256;
  return sub_23DF89C7C((uint64_t)v5, &qword_256D264A0);
}

uint64_t sub_23E0E98D0()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for AlarmAndTimerControlContentView(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + v2;
  if ((*(_BYTE *)(v0 + v2 + 40) & 1) != 0)
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + v2);
  else
    swift_release();

  v4 = v3 + *(int *)(v1 + 24);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v3 + *(int *)(v1 + 28);
  sub_23DF985F0(*(_QWORD *)v6, *(_QWORD *)(v6 + 8), *(_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 24), *(_QWORD *)(v6 + 32), *(_QWORD *)(v6 + 40), *(_QWORD *)(v6 + 48), *(_QWORD *)(v6 + 56), *(_BYTE *)(v6 + 64), *(_BYTE *)(v6 + 65));
  return swift_deallocObject();
}

uint64_t sub_23E0E99AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AlarmAndTimerControlContentView(0) - 8) + 80);
  return sub_23E0E7314(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_23E0E99E8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D263B8;
  if (!qword_256D263B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26398);
    v2[0] = sub_23E0E9A6C();
    v2[1] = sub_23DF89B88(&qword_256D263D8, &qword_256D26338, MEMORY[0x24BDF5428]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D263B8);
  }
  return result;
}

unint64_t sub_23E0E9A6C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D263C0;
  if (!qword_256D263C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D263C8);
    v2[0] = sub_23E0E9AD0();
    v2[1] = v2[0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D263C0);
  }
  return result;
}

unint64_t sub_23E0E9AD0()
{
  unint64_t result;

  result = qword_256D263D0;
  if (!qword_256D263D0)
  {
    result = MEMORY[0x24264C55C](&unk_23E142454, &type metadata for NoneResponsiveView);
    atomic_store(result, (unint64_t *)&qword_256D263D0);
  }
  return result;
}

unint64_t sub_23E0E9B14()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D263F0;
  if (!qword_256D263F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26380);
    v2[0] = sub_23DF89B88(&qword_256D263F8, &qword_256D26400, MEMORY[0x24BDEB238]);
    v2[1] = sub_23E0E9B98();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D263F0);
  }
  return result;
}

unint64_t sub_23E0E9B98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26408;
  if (!qword_256D26408)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26410);
    v2[0] = sub_23DF73F28(&qword_256D26418, (uint64_t (*)(uint64_t))type metadata accessor for AlarmsControlView, (uint64_t)&unk_23E13DB38);
    v2[1] = sub_23DF89B88(&qword_256D26420, &qword_256D26428, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26408);
  }
  return result;
}

uint64_t sub_23E0E9C34(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_23E0E9AD0();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E0E9CA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26438;
  if (!qword_256D26438)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26358);
    v2[0] = sub_23DF89B88(&qword_256D26440, &qword_256D26448, MEMORY[0x24BDEB238]);
    v2[1] = sub_23E0E9D24();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26438);
  }
  return result;
}

unint64_t sub_23E0E9D24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26450;
  if (!qword_256D26450)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26458);
    v2[0] = sub_23DF73F28(&qword_256D26460, (uint64_t (*)(uint64_t))type metadata accessor for TimersControlView, (uint64_t)&unk_23E139668);
    v2[1] = sub_23DF89B88(&qword_256D26468, &qword_256D26470, MEMORY[0x24BDEEC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26450);
  }
  return result;
}

uint64_t sub_23E0E9DC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E0E9174(*(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD, __n128))type metadata accessor for TimersControlView, MEMORY[0x24BE4D378], (void (*)(uint64_t))MEMORY[0x24BE4D368], &qword_256D26458, a1);
}

uint64_t sub_23E0E9DF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_23E0E9174(*(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD, __n128))type metadata accessor for AlarmsControlView, MEMORY[0x24BE4D370], (void (*)(uint64_t))MEMORY[0x24BE4D360], &qword_256D26410, a1);
}

uint64_t sub_23E0E9E30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t destroy for NoneResponsiveView()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for NoneResponsiveView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for NoneResponsiveView(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for NoneResponsiveView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for NoneResponsiveView()
{
  return &type metadata for NoneResponsiveView;
}

uint64_t sub_23E0E9F74()
{
  return sub_23DF89B88(&qword_256D26490, &qword_256D26498, (uint64_t)&unk_23E141F98);
}

uint64_t sub_23E0E9FA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0E9FB8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23DFA056C(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_23E0E9FF4(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_23DFA055C(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_23E0EA034()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D264C0;
  if (!qword_256D264C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D264B0);
    v2[0] = sub_23DF89B88(&qword_256D264C8, &qword_256D264A0, MEMORY[0x24BDF4700]);
    v2[1] = MEMORY[0x24BDEDB80];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D264C0);
  }
  return result;
}

uint64_t IconDescriptor.init(name:renderingMode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  char *v5;
  uint64_t v6;

  *a4 = a1;
  a4[1] = a2;
  v5 = (char *)a4 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v6 = sub_23E135910();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t type metadata accessor for IconDescriptor()
{
  uint64_t result;

  result = qword_256D26530;
  if (!qword_256D26530)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t static IconDescriptor.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (sub_23E137614() & 1) == 0)
    return 0;
  type metadata accessor for IconDescriptor();
  return sub_23E135904();
}

uint64_t IconDescriptor.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IconDescriptor.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*IconDescriptor.name.modify())()
{
  return CGPointMake;
}

uint64_t IconDescriptor.renderingMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v4 = sub_23E135910();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t IconDescriptor.renderingMode.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v4 = sub_23E135910();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

double (*IconDescriptor.renderingMode.modify())(_QWORD)
{
  type metadata accessor for IconDescriptor();
  return CGPointMake;
}

uint64_t IconDescriptor.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_23E1371C4();
  swift_bridgeObjectRelease();
  type metadata accessor for IconDescriptor();
  sub_23E135910();
  sub_23DF73F28(&qword_256D1ED48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E5D8], MEMORY[0x24BE4E5F0]);
  return sub_23E13711C();
}

uint64_t IconDescriptor.hashValue.getter()
{
  sub_23E137698();
  sub_23E1371C4();
  type metadata accessor for IconDescriptor();
  sub_23E135910();
  sub_23DF73F28(&qword_256D1ED48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E5D8], MEMORY[0x24BE4E5F0]);
  sub_23E13711C();
  return sub_23E1376D4();
}

uint64_t sub_23E0EA3F4(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_23E137614() & 1) != 0)
    return sub_23E135904();
  else
    return 0;
}

uint64_t sub_23E0EA464()
{
  sub_23E137698();
  sub_23E1371C4();
  sub_23E135910();
  sub_23DF73F28(&qword_256D1ED48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E5D8], MEMORY[0x24BE4E5F0]);
  sub_23E13711C();
  return sub_23E1376D4();
}

uint64_t sub_23E0EA4E8()
{
  sub_23E1371C4();
  sub_23E135910();
  sub_23DF73F28(&qword_256D1ED48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E5D8], MEMORY[0x24BE4E5F0]);
  return sub_23E13711C();
}

uint64_t sub_23E0EA558()
{
  sub_23E137698();
  sub_23E1371C4();
  sub_23E135910();
  sub_23DF73F28(&qword_256D1ED48, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E5D8], MEMORY[0x24BE4E5F0]);
  sub_23E13711C();
  return sub_23E1376D4();
}

uint64_t sub_23E0EA5D8()
{
  return sub_23DF73F28(&qword_256D264D0, (uint64_t (*)(uint64_t))type metadata accessor for IconDescriptor, (uint64_t)&protocol conformance descriptor for IconDescriptor);
}

uint64_t *initializeBufferWithCopyOfBuffer for IconDescriptor(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23E135910();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for IconDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23E135910();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for IconDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_23E135910();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for IconDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for IconDescriptor(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for IconDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconDescriptor()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0EA8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_23E135910();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for IconDescriptor()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0EA930(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_23E135910();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_23E0EA9A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_23E135910();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_23E0EAA18(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  int *v64;
  __int128 v65;
  void *v66;
  _OWORD *v67;
  _OWORD *v68;
  void *v69;
  id v70;
  __int128 v71;
  uint64_t v72;
  id v73;
  __int128 v74;
  __int128 v75;
  void *v76;
  uint64_t v77;
  _OWORD *v78;
  _OWORD *v79;
  void *v80;
  id v81;
  __int128 v82;
  uint64_t v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char v101;
  uint64_t v103;
  char v106;
  _QWORD *v107;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a3[6];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_23E134C80();
    v107 = a1;
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
    v11 = (int *)type metadata accessor for Device();
    v12 = v11[5];
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    v16 = v11[6];
    v17 = &v7[v16];
    v18 = &v8[v16];
    v19 = *(_QWORD *)&v8[v16 + 8];
    *(_QWORD *)v17 = *(_QWORD *)&v8[v16];
    *((_QWORD *)v17 + 1) = v19;
    v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v21 = &v17[v20];
    v22 = &v18[v20];
    v23 = sub_23E135910();
    v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24(v21, v22, v23);
    v25 = v11[7];
    v26 = &v7[v25];
    v27 = &v8[v25];
    v28 = *((_QWORD *)v27 + 1);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *((_QWORD *)v26 + 1) = v28;
    v29 = v11[8];
    v30 = &v7[v29];
    v31 = &v8[v29];
    v103 = *((_QWORD *)v31 + 1);
    *(_QWORD *)v30 = *(_QWORD *)v31;
    *((_QWORD *)v30 + 1) = v103;
    *(_QWORD *)&v7[v11[9]] = *(_QWORD *)&v8[v11[9]];
    v7[v11[10]] = v8[v11[10]];
    v7[v11[11]] = v8[v11[11]];
    v7[v11[12]] = v8[v11[12]];
    v7[v11[13]] = v8[v11[13]];
    *(_QWORD *)&v7[v11[14]] = *(_QWORD *)&v8[v11[14]];
    v7[v11[15]] = v8[v11[15]];
    v32 = v11[16];
    v33 = &v7[v32];
    v34 = &v8[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v36 = v11[17];
    v37 = &v7[v36];
    v38 = &v8[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = v11[18];
    v41 = &v7[v40];
    v42 = &v8[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v7[v11[19]] = v8[v11[19]];
    v7[v11[20]] = v8[v11[20]];
    v44 = v11[21];
    v45 = &v7[v44];
    v46 = &v8[v44];
    v47 = *((_QWORD *)v46 + 1);
    *(_QWORD *)v45 = *(_QWORD *)v46;
    *((_QWORD *)v45 + 1) = v47;
    v48 = a3[7];
    v49 = a3[8];
    v50 = (_QWORD *)((char *)v107 + v48);
    v51 = (_QWORD *)((char *)a2 + v48);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v50[2] = v51[2];
    v53 = (_QWORD *)((char *)v107 + v49);
    v54 = (_QWORD *)((char *)a2 + v49);
    v55 = *(_QWORD *)((char *)a2 + v49 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    if (!v55)
    {
      memcpy(v53, v54, 0x190uLL);
      v63 = a2;
      v62 = v107;
      v64 = a3;
LABEL_17:
      v90 = v64[9];
      v91 = (uint64_t)v62 + v90;
      v92 = (char *)v63 + v90;
      v93 = *(_QWORD *)v92;
      v94 = *((_QWORD *)v92 + 1);
      v95 = *((_QWORD *)v92 + 2);
      v96 = *((_QWORD *)v92 + 3);
      v97 = *((_QWORD *)v92 + 4);
      v98 = *((_QWORD *)v92 + 5);
      v99 = *((_QWORD *)v92 + 6);
      v100 = *((_QWORD *)v92 + 7);
      v101 = v92[64];
      v106 = v92[65];
      sub_23DF98590(*(_QWORD *)v92, v94, v95, v96, v97, v98, v99, v100, v101, v106);
      *(_QWORD *)v91 = v93;
      *(_QWORD *)(v91 + 8) = v94;
      v61 = v107;
      *(_QWORD *)(v91 + 16) = v95;
      *(_QWORD *)(v91 + 24) = v96;
      *(_QWORD *)(v91 + 32) = v97;
      *(_QWORD *)(v91 + 40) = v98;
      *(_QWORD *)(v91 + 48) = v99;
      *(_QWORD *)(v91 + 56) = v100;
      *(_BYTE *)(v91 + 64) = v101;
      *(_BYTE *)(v91 + 65) = v106;
      return v61;
    }
    *v53 = *v54;
    *(_OWORD *)(v53 + 1) = *(_OWORD *)(v54 + 1);
    *(_OWORD *)(v53 + 3) = *(_OWORD *)(v54 + 3);
    v53[5] = v54[5];
    *((_WORD *)v53 + 24) = *((_WORD *)v54 + 24);
    v56 = v54[8];
    v57 = v54[9];
    v53[7] = v55;
    v53[8] = v56;
    v53[9] = v57;
    *((_BYTE *)v53 + 80) = *((_BYTE *)v54 + 80);
    v58 = v54[12];
    swift_retain();
    swift_retain();
    swift_retain();
    if (v58)
    {
      v53[11] = v54[11];
      v53[12] = v58;
      v59 = v54[14];
      v53[13] = v54[13];
      v53[14] = v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v65 = *(_OWORD *)(v54 + 13);
      *(_OWORD *)(v53 + 11) = *(_OWORD *)(v54 + 11);
      *(_OWORD *)(v53 + 13) = v65;
    }
    v66 = (void *)v54[15];
    v53[15] = v66;
    v67 = v53 + 16;
    v68 = v54 + 16;
    v69 = (void *)v54[21];
    v70 = v66;
    if (v69)
    {
      v71 = *((_OWORD *)v54 + 9);
      *v67 = *v68;
      *((_OWORD *)v53 + 9) = v71;
      v53[20] = v54[20];
      v53[21] = v69;
      v72 = v54[23];
      v53[22] = v54[22];
      v53[23] = v72;
      *((_BYTE *)v53 + 192) = *((_BYTE *)v54 + 192);
      v73 = v69;
      swift_retain();
      swift_retain();
    }
    else
    {
      v74 = *((_OWORD *)v54 + 11);
      *((_OWORD *)v53 + 10) = *((_OWORD *)v54 + 10);
      *((_OWORD *)v53 + 11) = v74;
      *((_BYTE *)v53 + 192) = *((_BYTE *)v54 + 192);
      v75 = *((_OWORD *)v54 + 9);
      *v67 = *v68;
      *((_OWORD *)v53 + 9) = v75;
    }
    *(_OWORD *)(v53 + 25) = *(_OWORD *)(v54 + 25);
    *(_OWORD *)(v53 + 27) = *(_OWORD *)(v54 + 27);
    v76 = (void *)v54[30];
    v53[29] = v54[29];
    v53[30] = v76;
    v77 = v54[32];
    v53[31] = v54[31];
    v53[32] = v77;
    *((_BYTE *)v53 + 264) = *((_BYTE *)v54 + 264);
    v78 = v53 + 34;
    v79 = v54 + 34;
    v80 = (void *)v54[39];
    v81 = v76;
    swift_retain();
    swift_retain();
    if (v80)
    {
      v82 = *((_OWORD *)v54 + 18);
      *v78 = *v79;
      *((_OWORD *)v53 + 18) = v82;
      v53[38] = v54[38];
      v53[39] = v80;
      v83 = v54[41];
      v53[40] = v54[40];
      v53[41] = v83;
      *((_BYTE *)v53 + 336) = *((_BYTE *)v54 + 336);
      v84 = v80;
      swift_retain();
      swift_retain();
      v85 = v54[43];
      if (v85)
      {
LABEL_13:
        v86 = v54[44];
        v53[43] = v85;
        v53[44] = v86;
        swift_retain();
        swift_retain();
LABEL_16:
        v63 = a2;
        v62 = v107;
        v64 = a3;
        *((_BYTE *)v53 + 360) = *((_BYTE *)v54 + 360);
        v89 = *((_OWORD *)v54 + 24);
        *((_OWORD *)v53 + 23) = *((_OWORD *)v54 + 23);
        *((_OWORD *)v53 + 24) = v89;
        goto LABEL_17;
      }
    }
    else
    {
      v87 = *((_OWORD *)v54 + 20);
      *((_OWORD *)v53 + 19) = *((_OWORD *)v54 + 19);
      *((_OWORD *)v53 + 20) = v87;
      *((_BYTE *)v53 + 336) = *((_BYTE *)v54 + 336);
      v88 = *((_OWORD *)v54 + 18);
      *v78 = *v79;
      *((_OWORD *)v53 + 18) = v88;
      v85 = v54[43];
      if (v85)
        goto LABEL_13;
    }
    *(_OWORD *)(v53 + 43) = *(_OWORD *)(v54 + 43);
    goto LABEL_16;
  }
  v60 = *a2;
  *a1 = *a2;
  v61 = (_QWORD *)(v60 + ((v4 + 16) & ~(unint64_t)v4));
  swift_retain();
  return v61;
}

uint64_t sub_23E0EAF3C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;

  swift_release();
  v4 = a1 + a2[6];
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v7 = v4 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v9 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = a1 + a2[8];
  if (*(_QWORD *)(v10 + 56))
  {
    swift_release();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v10 + 96))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    v11 = *(void **)(v10 + 168);
    if (v11)
    {

      swift_release();
      swift_release();
    }

    swift_release();
    swift_release();
    v12 = *(void **)(v10 + 312);
    if (v12)
    {

      swift_release();
      swift_release();
    }
    if (*(_QWORD *)(v10 + 344))
    {
      swift_release();
      swift_release();
    }
  }
  v13 = a1 + a2[9];
  return sub_23DF985F0(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(_BYTE *)(v13 + 64), *(_BYTE *)(v13 + 65));
}

_QWORD *sub_23E0EB160(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  int *v59;
  __int128 v60;
  void *v61;
  _OWORD *v62;
  _OWORD *v63;
  void *v64;
  id v65;
  __int128 v66;
  uint64_t v67;
  id v68;
  __int128 v69;
  __int128 v70;
  void *v71;
  uint64_t v72;
  _OWORD *v73;
  _OWORD *v74;
  void *v75;
  id v76;
  __int128 v77;
  uint64_t v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  uint64_t v98;
  char v101;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a3[6];
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23E134C80();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  v9 = (int *)type metadata accessor for Device();
  v10 = v9[5];
  v11 = &v5[v10];
  v12 = &v6[v10];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = v9[6];
  v15 = &v5[v14];
  v16 = &v6[v14];
  v17 = *(_QWORD *)&v6[v14 + 8];
  *(_QWORD *)v15 = *(_QWORD *)&v6[v14];
  *((_QWORD *)v15 + 1) = v17;
  v18 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v19 = &v15[v18];
  v20 = &v16[v18];
  v21 = sub_23E135910();
  v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v22(v19, v20, v21);
  v23 = v9[7];
  v24 = &v5[v23];
  v25 = &v6[v23];
  v26 = *((_QWORD *)v25 + 1);
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = v26;
  v27 = v9[8];
  v28 = &v5[v27];
  v29 = &v6[v27];
  v98 = *((_QWORD *)v29 + 1);
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = v98;
  *(_QWORD *)&v5[v9[9]] = *(_QWORD *)&v6[v9[9]];
  v5[v9[10]] = v6[v9[10]];
  v5[v9[11]] = v6[v9[11]];
  v5[v9[12]] = v6[v9[12]];
  v5[v9[13]] = v6[v9[13]];
  *(_QWORD *)&v5[v9[14]] = *(_QWORD *)&v6[v9[14]];
  v5[v9[15]] = v6[v9[15]];
  v30 = v9[16];
  v31 = &v5[v30];
  v32 = &v6[v30];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v34 = v9[17];
  v35 = &v5[v34];
  v36 = &v6[v34];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  v38 = v9[18];
  v39 = &v5[v38];
  v40 = &v6[v38];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  v5[v9[19]] = v6[v9[19]];
  v5[v9[20]] = v6[v9[20]];
  v42 = v9[21];
  v43 = &v5[v42];
  v44 = &v6[v42];
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = v45;
  v46 = a3[7];
  v47 = a3[8];
  v48 = (_QWORD *)((char *)a1 + v46);
  v49 = (_QWORD *)((char *)a2 + v46);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v48[2] = v49[2];
  v51 = (char *)a1 + v47;
  v52 = (char *)a2 + v47;
  v53 = *(_QWORD *)((char *)a2 + v47 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v53)
  {
    *(_QWORD *)v51 = *(_QWORD *)v52;
    *(_OWORD *)(v51 + 8) = *(_OWORD *)(v52 + 8);
    *(_OWORD *)(v51 + 24) = *(_OWORD *)(v52 + 24);
    *((_QWORD *)v51 + 5) = *((_QWORD *)v52 + 5);
    *((_WORD *)v51 + 24) = *((_WORD *)v52 + 24);
    v54 = *((_QWORD *)v52 + 8);
    v55 = *((_QWORD *)v52 + 9);
    *((_QWORD *)v51 + 7) = v53;
    *((_QWORD *)v51 + 8) = v54;
    *((_QWORD *)v51 + 9) = v55;
    v51[80] = v52[80];
    v56 = *((_QWORD *)v52 + 12);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v56)
    {
      *((_QWORD *)v51 + 11) = *((_QWORD *)v52 + 11);
      *((_QWORD *)v51 + 12) = v56;
      v57 = *((_QWORD *)v52 + 14);
      *((_QWORD *)v51 + 13) = *((_QWORD *)v52 + 13);
      *((_QWORD *)v51 + 14) = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v60 = *(_OWORD *)(v52 + 104);
      *(_OWORD *)(v51 + 88) = *(_OWORD *)(v52 + 88);
      *(_OWORD *)(v51 + 104) = v60;
    }
    v61 = (void *)*((_QWORD *)v52 + 15);
    *((_QWORD *)v51 + 15) = v61;
    v62 = v51 + 128;
    v63 = v52 + 128;
    v64 = (void *)*((_QWORD *)v52 + 21);
    v65 = v61;
    if (v64)
    {
      v66 = *((_OWORD *)v52 + 9);
      *v62 = *v63;
      *((_OWORD *)v51 + 9) = v66;
      *((_QWORD *)v51 + 20) = *((_QWORD *)v52 + 20);
      *((_QWORD *)v51 + 21) = v64;
      v67 = *((_QWORD *)v52 + 23);
      *((_QWORD *)v51 + 22) = *((_QWORD *)v52 + 22);
      *((_QWORD *)v51 + 23) = v67;
      v51[192] = v52[192];
      v68 = v64;
      swift_retain();
      swift_retain();
    }
    else
    {
      v69 = *((_OWORD *)v52 + 11);
      *((_OWORD *)v51 + 10) = *((_OWORD *)v52 + 10);
      *((_OWORD *)v51 + 11) = v69;
      v51[192] = v52[192];
      v70 = *((_OWORD *)v52 + 9);
      *v62 = *v63;
      *((_OWORD *)v51 + 9) = v70;
    }
    *(_OWORD *)(v51 + 200) = *(_OWORD *)(v52 + 200);
    *(_OWORD *)(v51 + 216) = *(_OWORD *)(v52 + 216);
    v71 = (void *)*((_QWORD *)v52 + 30);
    *((_QWORD *)v51 + 29) = *((_QWORD *)v52 + 29);
    *((_QWORD *)v51 + 30) = v71;
    v72 = *((_QWORD *)v52 + 32);
    *((_QWORD *)v51 + 31) = *((_QWORD *)v52 + 31);
    *((_QWORD *)v51 + 32) = v72;
    v51[264] = v52[264];
    v73 = v51 + 272;
    v74 = v52 + 272;
    v75 = (void *)*((_QWORD *)v52 + 39);
    v76 = v71;
    swift_retain();
    swift_retain();
    if (v75)
    {
      v77 = *((_OWORD *)v52 + 18);
      *v73 = *v74;
      *((_OWORD *)v51 + 18) = v77;
      *((_QWORD *)v51 + 38) = *((_QWORD *)v52 + 38);
      *((_QWORD *)v51 + 39) = v75;
      v78 = *((_QWORD *)v52 + 41);
      *((_QWORD *)v51 + 40) = *((_QWORD *)v52 + 40);
      *((_QWORD *)v51 + 41) = v78;
      v51[336] = v52[336];
      v79 = v75;
      swift_retain();
      swift_retain();
      v80 = *((_QWORD *)v52 + 43);
      if (v80)
      {
LABEL_11:
        v81 = *((_QWORD *)v52 + 44);
        *((_QWORD *)v51 + 43) = v80;
        *((_QWORD *)v51 + 44) = v81;
        swift_retain();
        swift_retain();
LABEL_14:
        v59 = a3;
        v58 = a2;
        v51[360] = v52[360];
        v84 = *((_OWORD *)v52 + 24);
        *((_OWORD *)v51 + 23) = *((_OWORD *)v52 + 23);
        *((_OWORD *)v51 + 24) = v84;
        goto LABEL_15;
      }
    }
    else
    {
      v82 = *((_OWORD *)v52 + 20);
      *((_OWORD *)v51 + 19) = *((_OWORD *)v52 + 19);
      *((_OWORD *)v51 + 20) = v82;
      v51[336] = v52[336];
      v83 = *((_OWORD *)v52 + 18);
      *v73 = *v74;
      *((_OWORD *)v51 + 18) = v83;
      v80 = *((_QWORD *)v52 + 43);
      if (v80)
        goto LABEL_11;
    }
    *(_OWORD *)(v51 + 344) = *(_OWORD *)(v52 + 344);
    goto LABEL_14;
  }
  memcpy(v51, v52, 0x190uLL);
  v59 = a3;
  v58 = a2;
LABEL_15:
  v85 = v59[9];
  v86 = (char *)a1 + v85;
  v87 = (char *)v58 + v85;
  v88 = *(_QWORD *)v87;
  v89 = *((_QWORD *)v87 + 1);
  v90 = *((_QWORD *)v87 + 2);
  v91 = *((_QWORD *)v87 + 3);
  v92 = *((_QWORD *)v87 + 4);
  v93 = *((_QWORD *)v87 + 5);
  v94 = *((_QWORD *)v87 + 6);
  v95 = *((_QWORD *)v87 + 7);
  v96 = v87[64];
  v101 = v87[65];
  sub_23DF98590(*(_QWORD *)v87, v89, v90, v91, v92, v93, v94, v95, v96, v101);
  *(_QWORD *)v86 = v88;
  *((_QWORD *)v86 + 1) = v89;
  *((_QWORD *)v86 + 2) = v90;
  *((_QWORD *)v86 + 3) = v91;
  *((_QWORD *)v86 + 4) = v92;
  *((_QWORD *)v86 + 5) = v93;
  *((_QWORD *)v86 + 6) = v94;
  *((_QWORD *)v86 + 7) = v95;
  v86[64] = v96;
  v86[65] = v101;
  return a1;
}

_QWORD *sub_23E0EB64C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  _OWORD *v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  void *v54;
  _OWORD *v55;
  _OWORD *v56;
  uint64_t v57;
  id v58;
  __int128 v59;
  void *v60;
  id v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  void *v66;
  _OWORD *v67;
  _OWORD *v68;
  uint64_t v69;
  id v70;
  __int128 v71;
  void *v72;
  id v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  void *v80;
  void *v81;
  id v82;
  _OWORD *v83;
  _OWORD *v84;
  void *v85;
  uint64_t v86;
  void *v87;
  id v88;
  __int128 v89;
  void *v90;
  id v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  void *v98;
  void *v99;
  id v100;
  _OWORD *v101;
  _OWORD *v102;
  void *v103;
  uint64_t v104;
  void *v105;
  id v106;
  __int128 v107;
  void *v108;
  id v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char v137;
  char v138;
  char v140;
  _QWORD *v141;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
  *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v18 = &v15[v17];
  v19 = &v16[v17];
  v20 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v10[7];
  v22 = &v7[v21];
  v23 = &v8[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v10[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_retain();
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v27 = v10[16];
  v28 = &v7[v27];
  v29 = &v8[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v10[17];
  v31 = &v7[v30];
  v32 = &v8[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = v10[18];
  v34 = &v7[v33];
  v35 = &v8[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v36 = v10[21];
  v37 = &v7[v36];
  v38 = &v8[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[7];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[8];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = *(_QWORD *)((char *)a1 + v42 + 56);
  v46 = *(_QWORD *)((char *)a2 + v42 + 56);
  if (v45)
  {
    if (v46)
    {
      *(_QWORD *)v43 = *(_QWORD *)v44;
      *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
      *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
      *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
      *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
      *((_QWORD *)v43 + 5) = *((_QWORD *)v44 + 5);
      v43[48] = v44[48];
      v43[49] = v44[49];
      *((_QWORD *)v43 + 7) = *((_QWORD *)v44 + 7);
      swift_retain();
      swift_release();
      *((_QWORD *)v43 + 8) = *((_QWORD *)v44 + 8);
      swift_retain();
      swift_release();
      *((_QWORD *)v43 + 9) = *((_QWORD *)v44 + 9);
      swift_retain();
      swift_release();
      v43[80] = v44[80];
      v47 = v43 + 88;
      v48 = v44 + 88;
      v49 = *((_QWORD *)v44 + 12);
      if (*((_QWORD *)v43 + 12))
      {
        if (v49)
        {
          *((_QWORD *)v43 + 11) = *((_QWORD *)v44 + 11);
          *((_QWORD *)v43 + 12) = *((_QWORD *)v44 + 12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *((_QWORD *)v43 + 13) = *((_QWORD *)v44 + 13);
          *((_QWORD *)v43 + 14) = *((_QWORD *)v44 + 14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_23DF89C7C((uint64_t)(v43 + 88), &qword_256D22C80);
          v52 = *(_OWORD *)(v44 + 104);
          *v47 = *v48;
          *(_OWORD *)(v43 + 104) = v52;
        }
      }
      else if (v49)
      {
        *((_QWORD *)v43 + 11) = *((_QWORD *)v44 + 11);
        *((_QWORD *)v43 + 12) = *((_QWORD *)v44 + 12);
        *((_QWORD *)v43 + 13) = *((_QWORD *)v44 + 13);
        *((_QWORD *)v43 + 14) = *((_QWORD *)v44 + 14);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v79 = *(_OWORD *)(v44 + 104);
        *v47 = *v48;
        *(_OWORD *)(v43 + 104) = v79;
      }
      v80 = (void *)*((_QWORD *)v43 + 15);
      v81 = (void *)*((_QWORD *)v44 + 15);
      *((_QWORD *)v43 + 15) = v81;
      v82 = v81;

      v83 = v43 + 128;
      v84 = v44 + 128;
      v85 = (void *)*((_QWORD *)v43 + 21);
      v86 = *((_QWORD *)v44 + 21);
      if (v85)
      {
        if (v86)
        {
          *((_QWORD *)v43 + 16) = *((_QWORD *)v44 + 16);
          *((_QWORD *)v43 + 17) = *((_QWORD *)v44 + 17);
          *((_QWORD *)v43 + 18) = *((_QWORD *)v44 + 18);
          *((_QWORD *)v43 + 19) = *((_QWORD *)v44 + 19);
          *((_QWORD *)v43 + 20) = *((_QWORD *)v44 + 20);
          v87 = (void *)*((_QWORD *)v44 + 21);
          *((_QWORD *)v43 + 21) = v87;
          v88 = v87;

          *((_QWORD *)v43 + 22) = *((_QWORD *)v44 + 22);
          swift_retain();
          swift_release();
          *((_QWORD *)v43 + 23) = *((_QWORD *)v44 + 23);
          swift_retain();
          swift_release();
          v43[192] = v44[192];
        }
        else
        {
          sub_23E053CFC((uint64_t)(v43 + 128));
          *v83 = *v84;
          v93 = *((_OWORD *)v44 + 10);
          v92 = *((_OWORD *)v44 + 11);
          v94 = *((_OWORD *)v44 + 9);
          v43[192] = v44[192];
          *((_OWORD *)v43 + 10) = v93;
          *((_OWORD *)v43 + 11) = v92;
          *((_OWORD *)v43 + 9) = v94;
        }
      }
      else if (v86)
      {
        v89 = *((_OWORD *)v44 + 9);
        *v83 = *v84;
        *((_OWORD *)v43 + 9) = v89;
        *((_QWORD *)v43 + 20) = *((_QWORD *)v44 + 20);
        v90 = (void *)*((_QWORD *)v44 + 21);
        *((_QWORD *)v43 + 21) = v90;
        *((_QWORD *)v43 + 22) = *((_QWORD *)v44 + 22);
        *((_QWORD *)v43 + 23) = *((_QWORD *)v44 + 23);
        v43[192] = v44[192];
        v91 = v90;
        swift_retain();
        swift_retain();
      }
      else
      {
        *v83 = *v84;
        v95 = *((_OWORD *)v44 + 9);
        v96 = *((_OWORD *)v44 + 10);
        v97 = *((_OWORD *)v44 + 11);
        v43[192] = v44[192];
        *((_OWORD *)v43 + 10) = v96;
        *((_OWORD *)v43 + 11) = v97;
        *((_OWORD *)v43 + 9) = v95;
      }
      *((_QWORD *)v43 + 25) = *((_QWORD *)v44 + 25);
      *((_QWORD *)v43 + 26) = *((_QWORD *)v44 + 26);
      *((_QWORD *)v43 + 27) = *((_QWORD *)v44 + 27);
      *((_QWORD *)v43 + 28) = *((_QWORD *)v44 + 28);
      *((_QWORD *)v43 + 29) = *((_QWORD *)v44 + 29);
      v98 = (void *)*((_QWORD *)v44 + 30);
      v99 = (void *)*((_QWORD *)v43 + 30);
      *((_QWORD *)v43 + 30) = v98;
      v100 = v98;

      *((_QWORD *)v43 + 31) = *((_QWORD *)v44 + 31);
      swift_retain();
      swift_release();
      *((_QWORD *)v43 + 32) = *((_QWORD *)v44 + 32);
      swift_retain();
      swift_release();
      v43[264] = v44[264];
      v101 = v43 + 272;
      v102 = v44 + 272;
      v103 = (void *)*((_QWORD *)v43 + 39);
      v104 = *((_QWORD *)v44 + 39);
      if (v103)
      {
        if (v104)
        {
          *((_QWORD *)v43 + 34) = *((_QWORD *)v44 + 34);
          *((_QWORD *)v43 + 35) = *((_QWORD *)v44 + 35);
          *((_QWORD *)v43 + 36) = *((_QWORD *)v44 + 36);
          *((_QWORD *)v43 + 37) = *((_QWORD *)v44 + 37);
          *((_QWORD *)v43 + 38) = *((_QWORD *)v44 + 38);
          v105 = (void *)*((_QWORD *)v44 + 39);
          *((_QWORD *)v43 + 39) = v105;
          v106 = v105;

          *((_QWORD *)v43 + 40) = *((_QWORD *)v44 + 40);
          swift_retain();
          swift_release();
          *((_QWORD *)v43 + 41) = *((_QWORD *)v44 + 41);
          swift_retain();
          swift_release();
          v43[336] = v44[336];
        }
        else
        {
          sub_23E053CFC((uint64_t)(v43 + 272));
          *v101 = *v102;
          v111 = *((_OWORD *)v44 + 19);
          v110 = *((_OWORD *)v44 + 20);
          v112 = *((_OWORD *)v44 + 18);
          v43[336] = v44[336];
          *((_OWORD *)v43 + 19) = v111;
          *((_OWORD *)v43 + 20) = v110;
          *((_OWORD *)v43 + 18) = v112;
        }
      }
      else if (v104)
      {
        v107 = *((_OWORD *)v44 + 18);
        *v101 = *v102;
        *((_OWORD *)v43 + 18) = v107;
        *((_QWORD *)v43 + 38) = *((_QWORD *)v44 + 38);
        v108 = (void *)*((_QWORD *)v44 + 39);
        *((_QWORD *)v43 + 39) = v108;
        *((_QWORD *)v43 + 40) = *((_QWORD *)v44 + 40);
        *((_QWORD *)v43 + 41) = *((_QWORD *)v44 + 41);
        v43[336] = v44[336];
        v109 = v108;
        swift_retain();
        swift_retain();
      }
      else
      {
        *v101 = *v102;
        v113 = *((_OWORD *)v44 + 18);
        v114 = *((_OWORD *)v44 + 19);
        v115 = *((_OWORD *)v44 + 20);
        v43[336] = v44[336];
        *((_OWORD *)v43 + 19) = v114;
        *((_OWORD *)v43 + 20) = v115;
        *((_OWORD *)v43 + 18) = v113;
      }
      v116 = *((_QWORD *)v44 + 43);
      if (*((_QWORD *)v43 + 43))
      {
        if (v116)
        {
          *((_QWORD *)v43 + 43) = v116;
          swift_retain();
          swift_release();
          *((_QWORD *)v43 + 44) = *((_QWORD *)v44 + 44);
          swift_retain();
          swift_release();
LABEL_46:
          v43[360] = v44[360];
          *((_QWORD *)v43 + 46) = *((_QWORD *)v44 + 46);
          *((_QWORD *)v43 + 47) = *((_QWORD *)v44 + 47);
          *((_QWORD *)v43 + 48) = *((_QWORD *)v44 + 48);
          *((_QWORD *)v43 + 49) = *((_QWORD *)v44 + 49);
          goto LABEL_47;
        }
        sub_23E053D28((uint64_t)(v43 + 344));
      }
      else if (v116)
      {
        *((_QWORD *)v43 + 43) = v116;
        *((_QWORD *)v43 + 44) = *((_QWORD *)v44 + 44);
        swift_retain();
        swift_retain();
        goto LABEL_46;
      }
      *(_OWORD *)(v43 + 344) = *(_OWORD *)(v44 + 344);
      goto LABEL_46;
    }
    sub_23E0871F4((uint64_t)v43);
    goto LABEL_10;
  }
  if (v46)
  {
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v50 = *(_OWORD *)(v44 + 8);
    *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
    *(_OWORD *)(v43 + 8) = v50;
    *((_QWORD *)v43 + 5) = *((_QWORD *)v44 + 5);
    v43[48] = v44[48];
    v43[49] = v44[49];
    *((_QWORD *)v43 + 7) = *((_QWORD *)v44 + 7);
    *((_QWORD *)v43 + 8) = *((_QWORD *)v44 + 8);
    *((_QWORD *)v43 + 9) = *((_QWORD *)v44 + 9);
    v43[80] = v44[80];
    v51 = *((_QWORD *)v44 + 12);
    swift_retain();
    swift_retain();
    swift_retain();
    if (v51)
    {
      *((_QWORD *)v43 + 11) = *((_QWORD *)v44 + 11);
      *((_QWORD *)v43 + 12) = *((_QWORD *)v44 + 12);
      *((_QWORD *)v43 + 13) = *((_QWORD *)v44 + 13);
      *((_QWORD *)v43 + 14) = *((_QWORD *)v44 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v53 = *(_OWORD *)(v44 + 104);
      *(_OWORD *)(v43 + 88) = *(_OWORD *)(v44 + 88);
      *(_OWORD *)(v43 + 104) = v53;
    }
    v54 = (void *)*((_QWORD *)v44 + 15);
    *((_QWORD *)v43 + 15) = v54;
    v55 = v43 + 128;
    v56 = v44 + 128;
    v57 = *((_QWORD *)v44 + 21);
    v58 = v54;
    if (v57)
    {
      v59 = *((_OWORD *)v44 + 9);
      *v55 = *v56;
      *((_OWORD *)v43 + 9) = v59;
      *((_QWORD *)v43 + 20) = *((_QWORD *)v44 + 20);
      v60 = (void *)*((_QWORD *)v44 + 21);
      *((_QWORD *)v43 + 21) = v60;
      *((_QWORD *)v43 + 22) = *((_QWORD *)v44 + 22);
      *((_QWORD *)v43 + 23) = *((_QWORD *)v44 + 23);
      v43[192] = v44[192];
      v61 = v60;
      swift_retain();
      swift_retain();
    }
    else
    {
      *v55 = *v56;
      v62 = *((_OWORD *)v44 + 9);
      v63 = *((_OWORD *)v44 + 10);
      v64 = *((_OWORD *)v44 + 11);
      v43[192] = v44[192];
      *((_OWORD *)v43 + 10) = v63;
      *((_OWORD *)v43 + 11) = v64;
      *((_OWORD *)v43 + 9) = v62;
    }
    v65 = *(_OWORD *)(v44 + 200);
    *(_OWORD *)(v43 + 216) = *(_OWORD *)(v44 + 216);
    *(_OWORD *)(v43 + 200) = v65;
    *((_QWORD *)v43 + 29) = *((_QWORD *)v44 + 29);
    v66 = (void *)*((_QWORD *)v44 + 30);
    *((_QWORD *)v43 + 30) = v66;
    *((_QWORD *)v43 + 31) = *((_QWORD *)v44 + 31);
    *((_QWORD *)v43 + 32) = *((_QWORD *)v44 + 32);
    v43[264] = v44[264];
    v67 = v43 + 272;
    v68 = v44 + 272;
    v69 = *((_QWORD *)v44 + 39);
    v70 = v66;
    swift_retain();
    swift_retain();
    if (v69)
    {
      v71 = *((_OWORD *)v44 + 18);
      *v67 = *v68;
      *((_OWORD *)v43 + 18) = v71;
      *((_QWORD *)v43 + 38) = *((_QWORD *)v44 + 38);
      v72 = (void *)*((_QWORD *)v44 + 39);
      *((_QWORD *)v43 + 39) = v72;
      *((_QWORD *)v43 + 40) = *((_QWORD *)v44 + 40);
      *((_QWORD *)v43 + 41) = *((_QWORD *)v44 + 41);
      v43[336] = v44[336];
      v73 = v72;
      swift_retain();
      swift_retain();
      v74 = *((_QWORD *)v44 + 43);
      if (v74)
      {
LABEL_20:
        *((_QWORD *)v43 + 43) = v74;
        *((_QWORD *)v43 + 44) = *((_QWORD *)v44 + 44);
        swift_retain();
        swift_retain();
LABEL_23:
        v43[360] = v44[360];
        v78 = *((_OWORD *)v44 + 24);
        *((_OWORD *)v43 + 23) = *((_OWORD *)v44 + 23);
        *((_OWORD *)v43 + 24) = v78;
        goto LABEL_47;
      }
    }
    else
    {
      *v67 = *v68;
      v75 = *((_OWORD *)v44 + 18);
      v76 = *((_OWORD *)v44 + 19);
      v77 = *((_OWORD *)v44 + 20);
      v43[336] = v44[336];
      *((_OWORD *)v43 + 19) = v76;
      *((_OWORD *)v43 + 20) = v77;
      *((_OWORD *)v43 + 18) = v75;
      v74 = *((_QWORD *)v44 + 43);
      if (v74)
        goto LABEL_20;
    }
    *(_OWORD *)(v43 + 344) = *(_OWORD *)(v44 + 344);
    goto LABEL_23;
  }
LABEL_10:
  memcpy(v43, v44, 0x190uLL);
LABEL_47:
  v117 = a3[9];
  v118 = (char *)a1 + v117;
  v119 = (char *)a2 + v117;
  v120 = *(_QWORD *)v119;
  v121 = *((_QWORD *)v119 + 1);
  v122 = *((_QWORD *)v119 + 2);
  v123 = *((_QWORD *)v119 + 3);
  v124 = *((_QWORD *)v119 + 4);
  v125 = *((_QWORD *)v119 + 5);
  v126 = *((_QWORD *)v119 + 6);
  v127 = *((_QWORD *)v119 + 7);
  v141 = a1;
  v128 = v119[64];
  sub_23DF98590(*(_QWORD *)v119, v121, v122, v123, v124, v125, v126, v127, v128, v119[65]);
  v129 = *(_QWORD *)v118;
  v130 = *((_QWORD *)v118 + 1);
  v131 = *((_QWORD *)v118 + 2);
  v132 = *((_QWORD *)v118 + 3);
  v133 = *((_QWORD *)v118 + 4);
  v134 = *((_QWORD *)v118 + 5);
  v135 = *((_QWORD *)v118 + 6);
  v136 = *((_QWORD *)v118 + 7);
  v137 = v118[64];
  v138 = v118[65];
  *(_QWORD *)v118 = v120;
  *((_QWORD *)v118 + 1) = v121;
  *((_QWORD *)v118 + 2) = v122;
  *((_QWORD *)v118 + 3) = v123;
  *((_QWORD *)v118 + 4) = v124;
  *((_QWORD *)v118 + 5) = v125;
  *((_QWORD *)v118 + 6) = v126;
  *((_QWORD *)v118 + 7) = v127;
  v118[64] = v128;
  v118[65] = v140;
  sub_23DF985F0(v129, v130, v131, v132, v133, v134, v135, v136, v137, v138);
  return v141;
}

_QWORD *sub_23E0EC12C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = (int *)type metadata accessor for Device();
  *(_OWORD *)&v8[v11[5]] = *(_OWORD *)&v9[v11[5]];
  v12 = v11[6];
  v13 = &v8[v12];
  v14 = &v9[v12];
  *(_OWORD *)&v8[v12] = *(_OWORD *)&v9[v12];
  v15 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v16 = &v13[v15];
  v17 = &v14[v15];
  v18 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  *(_OWORD *)&v8[v11[7]] = *(_OWORD *)&v9[v11[7]];
  *(_OWORD *)&v8[v11[8]] = *(_OWORD *)&v9[v11[8]];
  *(_QWORD *)&v8[v11[9]] = *(_QWORD *)&v9[v11[9]];
  v8[v11[10]] = v9[v11[10]];
  v8[v11[11]] = v9[v11[11]];
  v8[v11[12]] = v9[v11[12]];
  v8[v11[13]] = v9[v11[13]];
  *(_QWORD *)&v8[v11[14]] = *(_QWORD *)&v9[v11[14]];
  v8[v11[15]] = v9[v11[15]];
  *(_OWORD *)&v8[v11[16]] = *(_OWORD *)&v9[v11[16]];
  *(_OWORD *)&v8[v11[17]] = *(_OWORD *)&v9[v11[17]];
  *(_OWORD *)&v8[v11[18]] = *(_OWORD *)&v9[v11[18]];
  v8[v11[19]] = v9[v11[19]];
  v8[v11[20]] = v9[v11[20]];
  *(_OWORD *)&v8[v11[21]] = *(_OWORD *)&v9[v11[21]];
  v19 = a3[7];
  v20 = a3[8];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  memcpy((char *)a1 + v20, (char *)a2 + v20, 0x190uLL);
  v23 = a3[9];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v26;
  *((_WORD *)v24 + 32) = *((_WORD *)v25 + 32);
  v27 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v27;
  return a1;
}

_QWORD *sub_23E0EC304(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  _OWORD *v59;
  char *v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  void *v66;
  void *v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  void *v72;
  void *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  char v94;
  __int128 v95;
  __int128 v96;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = a3[6];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = (int *)type metadata accessor for Device();
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = v11[6];
  v18 = &v8[v17];
  v19 = &v9[v17];
  v20 = *(_QWORD *)&v9[v17 + 8];
  *(_QWORD *)v18 = *(_QWORD *)&v9[v17];
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  v21 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v22 = &v18[v21];
  v23 = &v19[v21];
  v24 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = v11[7];
  v26 = &v8[v25];
  v27 = &v9[v25];
  v29 = *(_QWORD *)v27;
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  v30 = v11[8];
  v31 = &v8[v30];
  v32 = &v9[v30];
  v34 = *(_QWORD *)v32;
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v8[v11[9]] = *(_QWORD *)&v9[v11[9]];
  swift_bridgeObjectRelease();
  v8[v11[10]] = v9[v11[10]];
  v8[v11[11]] = v9[v11[11]];
  v8[v11[12]] = v9[v11[12]];
  v8[v11[13]] = v9[v11[13]];
  *(_QWORD *)&v8[v11[14]] = *(_QWORD *)&v9[v11[14]];
  swift_release();
  v8[v11[15]] = v9[v11[15]];
  v35 = v11[16];
  v36 = &v8[v35];
  v37 = &v9[v35];
  v39 = *(_QWORD *)v37;
  v38 = *((_QWORD *)v37 + 1);
  *(_QWORD *)v36 = v39;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  v40 = v11[17];
  v41 = &v8[v40];
  v42 = &v9[v40];
  v44 = *(_QWORD *)v42;
  v43 = *((_QWORD *)v42 + 1);
  *(_QWORD *)v41 = v44;
  *((_QWORD *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  v45 = v11[18];
  v46 = &v8[v45];
  v47 = &v9[v45];
  v49 = *(_QWORD *)v47;
  v48 = *((_QWORD *)v47 + 1);
  *(_QWORD *)v46 = v49;
  *((_QWORD *)v46 + 1) = v48;
  swift_bridgeObjectRelease();
  v8[v11[19]] = v9[v11[19]];
  v8[v11[20]] = v9[v11[20]];
  v50 = v11[21];
  v51 = &v8[v50];
  v52 = &v9[v50];
  v54 = *(_QWORD *)v52;
  v53 = *((_QWORD *)v52 + 1);
  *(_QWORD *)v51 = v54;
  *((_QWORD *)v51 + 1) = v53;
  swift_bridgeObjectRelease();
  v55 = a3[7];
  v56 = (char *)a1 + v55;
  v57 = (char *)a2 + v55;
  *(_QWORD *)((char *)a1 + v55) = *(_QWORD *)((char *)a2 + v55);
  swift_release();
  *((_QWORD *)v56 + 1) = *((_QWORD *)v57 + 1);
  swift_release();
  *((_QWORD *)v56 + 2) = *((_QWORD *)v57 + 2);
  swift_bridgeObjectRelease();
  v58 = a3[8];
  v59 = (_OWORD *)((char *)a1 + v58);
  v60 = (char *)a2 + v58;
  if (*(_QWORD *)((char *)a1 + v58 + 56))
  {
    v61 = *((_QWORD *)v60 + 7);
    if (v61)
    {
      v62 = *((_OWORD *)v60 + 1);
      *v59 = *(_OWORD *)v60;
      v59[1] = v62;
      v59[2] = *((_OWORD *)v60 + 2);
      *((_BYTE *)v59 + 48) = v60[48];
      *((_BYTE *)v59 + 49) = v60[49];
      *((_QWORD *)v59 + 7) = v61;
      swift_release();
      *((_QWORD *)v59 + 8) = *((_QWORD *)v60 + 8);
      swift_release();
      *((_QWORD *)v59 + 9) = *((_QWORD *)v60 + 9);
      swift_release();
      *((_BYTE *)v59 + 80) = v60[80];
      if (*((_QWORD *)v59 + 12))
      {
        v63 = *((_QWORD *)v60 + 12);
        if (v63)
        {
          *((_QWORD *)v59 + 11) = *((_QWORD *)v60 + 11);
          *((_QWORD *)v59 + 12) = v63;
          swift_bridgeObjectRelease();
          v64 = *((_QWORD *)v60 + 14);
          *((_QWORD *)v59 + 13) = *((_QWORD *)v60 + 13);
          *((_QWORD *)v59 + 14) = v64;
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        sub_23DF89C7C((uint64_t)v59 + 88, &qword_256D22C80);
      }
      v65 = *(_OWORD *)(v60 + 104);
      *(_OWORD *)((char *)v59 + 88) = *(_OWORD *)(v60 + 88);
      *(_OWORD *)((char *)v59 + 104) = v65;
LABEL_10:
      v66 = (void *)*((_QWORD *)v59 + 15);
      *((_QWORD *)v59 + 15) = *((_QWORD *)v60 + 15);

      v67 = (void *)*((_QWORD *)v59 + 21);
      if (v67)
      {
        v68 = *((_QWORD *)v60 + 21);
        if (v68)
        {
          v69 = *((_OWORD *)v60 + 9);
          v59[8] = *((_OWORD *)v60 + 8);
          v59[9] = v69;
          *((_QWORD *)v59 + 20) = *((_QWORD *)v60 + 20);
          *((_QWORD *)v59 + 21) = v68;

          *((_QWORD *)v59 + 22) = *((_QWORD *)v60 + 22);
          swift_release();
          *((_QWORD *)v59 + 23) = *((_QWORD *)v60 + 23);
          swift_release();
          *((_BYTE *)v59 + 192) = v60[192];
          goto LABEL_15;
        }
        sub_23E053CFC((uint64_t)(v59 + 8));
      }
      v70 = *((_OWORD *)v60 + 11);
      v59[10] = *((_OWORD *)v60 + 10);
      v59[11] = v70;
      *((_BYTE *)v59 + 192) = v60[192];
      v71 = *((_OWORD *)v60 + 9);
      v59[8] = *((_OWORD *)v60 + 8);
      v59[9] = v71;
LABEL_15:
      *(_OWORD *)((char *)v59 + 200) = *(_OWORD *)(v60 + 200);
      *(_OWORD *)((char *)v59 + 216) = *(_OWORD *)(v60 + 216);
      *((_QWORD *)v59 + 29) = *((_QWORD *)v60 + 29);
      v72 = (void *)*((_QWORD *)v59 + 30);
      *((_QWORD *)v59 + 30) = *((_QWORD *)v60 + 30);

      *((_QWORD *)v59 + 31) = *((_QWORD *)v60 + 31);
      swift_release();
      *((_QWORD *)v59 + 32) = *((_QWORD *)v60 + 32);
      swift_release();
      *((_BYTE *)v59 + 264) = v60[264];
      v73 = (void *)*((_QWORD *)v59 + 39);
      if (v73)
      {
        v74 = *((_QWORD *)v60 + 39);
        if (v74)
        {
          v75 = *((_OWORD *)v60 + 18);
          v59[17] = *((_OWORD *)v60 + 17);
          v59[18] = v75;
          *((_QWORD *)v59 + 38) = *((_QWORD *)v60 + 38);
          *((_QWORD *)v59 + 39) = v74;

          *((_QWORD *)v59 + 40) = *((_QWORD *)v60 + 40);
          swift_release();
          *((_QWORD *)v59 + 41) = *((_QWORD *)v60 + 41);
          swift_release();
          *((_BYTE *)v59 + 336) = v60[336];
          goto LABEL_20;
        }
        sub_23E053CFC((uint64_t)(v59 + 17));
      }
      v76 = *((_OWORD *)v60 + 20);
      v59[19] = *((_OWORD *)v60 + 19);
      v59[20] = v76;
      *((_BYTE *)v59 + 336) = v60[336];
      v77 = *((_OWORD *)v60 + 18);
      v59[17] = *((_OWORD *)v60 + 17);
      v59[18] = v77;
LABEL_20:
      if (*((_QWORD *)v59 + 43))
      {
        v78 = *((_QWORD *)v60 + 43);
        if (v78)
        {
          *((_QWORD *)v59 + 43) = v78;
          swift_release();
          *((_QWORD *)v59 + 44) = *((_QWORD *)v60 + 44);
          swift_release();
LABEL_25:
          *((_BYTE *)v59 + 360) = v60[360];
          v79 = *((_OWORD *)v60 + 24);
          v59[23] = *((_OWORD *)v60 + 23);
          v59[24] = v79;
          goto LABEL_26;
        }
        sub_23E053D28((uint64_t)v59 + 344);
      }
      *(_OWORD *)((char *)v59 + 344) = *(_OWORD *)(v60 + 344);
      goto LABEL_25;
    }
    sub_23E0871F4((uint64_t)v59);
  }
  memcpy(v59, v60, 0x190uLL);
LABEL_26:
  v80 = a3[9];
  v81 = (char *)a1 + v80;
  v82 = (char *)a2 + v80;
  v83 = v82[64];
  v84 = v82[65];
  v85 = *(_QWORD *)v81;
  v86 = *((_QWORD *)v81 + 1);
  v87 = *((_QWORD *)v81 + 2);
  v88 = *((_QWORD *)v81 + 3);
  v89 = *((_QWORD *)v81 + 4);
  v90 = *((_QWORD *)v81 + 5);
  v91 = *((_QWORD *)v81 + 6);
  v92 = *((_QWORD *)v81 + 7);
  v93 = v81[64];
  v94 = v81[65];
  v95 = *((_OWORD *)v82 + 1);
  *(_OWORD *)v81 = *(_OWORD *)v82;
  *((_OWORD *)v81 + 1) = v95;
  v96 = *((_OWORD *)v82 + 3);
  *((_OWORD *)v81 + 2) = *((_OWORD *)v82 + 2);
  *((_OWORD *)v81 + 3) = v96;
  v81[64] = v83;
  v81[65] = v84;
  sub_23DF985F0(v85, v86, v87, v88, v89, v90, v91, v92, v93, v94);
  return a1;
}

uint64_t sub_23E0EC83C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0EC848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Device();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_23E0EC8C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0EC8D0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Device();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for AccessoryControlContainerView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D265C0);
}

uint64_t sub_23E0EC958()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E0EC9F8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E0ECA08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26708);
  v6 = sub_23E13759C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23DF89C1C(v12, (uint64_t)v5, &qword_256D1D520);
    result = sub_23DF84C10((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23E1356DC();
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = (unint64_t)sub_23DF89AC0(v9, (_OWORD *)(v7[7] + 32 * v16));
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E0ECBA4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_256D26720);
  v2 = (_QWORD *)sub_23E13759C();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_23DF84E3C(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E0ECCC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26638);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26630);
  v6 = sub_23E13759C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23DF89C1C(v12, (uint64_t)v5, &qword_256D26638);
    result = sub_23DF84CA8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23E134C80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = (_OWORD *)(v7[7] + 32 * v16);
    v20 = *((_OWORD *)v9 + 1);
    *v19 = *(_OWORD *)v9;
    v19[1] = v20;
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_23E0ECE60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26830);
  v6 = sub_23E13759C();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_23DF89C1C(v12, (uint64_t)v5, &qword_256D21DC8);
    result = sub_23DF84CA8((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_23E134C80();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_23E0ECFF4(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, char *);
  uint64_t v29;

  v28 = a2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC0);
  MEMORY[0x24BDAC7A8](v27);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v25 - v10;
  v29 = a1;
  v12 = *(_QWORD *)(a4 + 64);
  v25 = a4 + 64;
  v13 = 1 << *(_BYTE *)(a4 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v26 = (unint64_t)(v13 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  if (!v15)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    v23 = *(_QWORD *)(a4 + 48);
    v24 = sub_23E134C80();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v23 + *(_QWORD *)(*(_QWORD *)(v24 - 8) + 72) * i, v24);
    *(_QWORD *)&v11[*(int *)(v27 + 48)] = *(_QWORD *)(*(_QWORD *)(a4 + 56) + 8 * i);
    sub_23DF89340((uint64_t)v11, (uint64_t)v8, &qword_256D21DC0);
    swift_retain();
    v28(&v29, v8);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_23DF89C7C((uint64_t)v8, &qword_256D21DC0);
      return swift_release();
    }
    result = sub_23DF89C7C((uint64_t)v8, &qword_256D21DC0);
    if (v15)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v17);
    if (!v21)
      break;
LABEL_17:
    v15 = (v21 - 1) & v21;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 2;
  if (v17 + 2 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 3;
  if (v17 + 3 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
    goto LABEL_16;
  v22 = v17 + 4;
  if (v17 + 4 >= v26)
  {
LABEL_26:
    swift_release();
    return v29;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
LABEL_16:
    v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_17;
  }
LABEL_28:
  __break(1u);
  return result;
}

double sub_23E0ED29C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  double v34;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  _QWORD *v44;

  v2 = type metadata accessor for Device.Control(0);
  v39 = *(_QWORD *)(v2 - 8);
  v40 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v41 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v36 = (uint64_t)&v36 - v5;
  v37 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v37);
  v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D5E0);
  MEMORY[0x24BDAC7A8](v8);
  v38 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_256D21B48);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v36 - v17;
  v19 = (uint64_t *)(a1 + *(int *)(type metadata accessor for AccessoryControlContainerView(0) + 28));
  v42 = *v19;
  v43 = *(_OWORD *)(v19 + 1);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26700);
  MEMORY[0x24264B734](&v44, v20);
  if (v44[2])
  {
    v22 = v44[4];
    v21 = v44[5];
    v23 = v44[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v23)
    {
      swift_bridgeObjectRetain();
      sub_23E0F27E4(v22, v21, v23);
      v24 = *(_QWORD *)(v23 + 16);
      v25 = type metadata accessor for Device.ControlGroup(0);
      v26 = *(_QWORD *)(v25 - 8);
      if (v24)
      {
        sub_23DF73E10(v23 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)), (uint64_t)v18, type metadata accessor for Device.ControlGroup);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56))(v18, 1, 1, v25);
      }
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v25 = type metadata accessor for Device.ControlGroup(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 1, 1, v25);
LABEL_9:
  sub_23DF89C1C((uint64_t)v18, (uint64_t)v15, qword_256D21B48);
  type metadata accessor for Device.ControlGroup(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v15, 1, v25) == 1)
  {
    sub_23DF89C7C((uint64_t)v15, qword_256D21B48);
    v28 = v39;
    v27 = v40;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v39 + 56))(v12, 1, 1, v40);
    v29 = (uint64_t)v41;
    v30 = (uint64_t)v38;
  }
  else
  {
    sub_23DF73E10((uint64_t)v15, (uint64_t)v7, type metadata accessor for Device.ControlGroup.LayoutType);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      v32 = v36;
      sub_23DF89384((uint64_t)v7, v36, type metadata accessor for Device.Control);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D600);
      v28 = v39;
      v33 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_23E138050;
      sub_23DF89384(v32, v31 + v33, type metadata accessor for Device.Control);
      v27 = v40;
      v29 = (uint64_t)v41;
    }
    else
    {
      v31 = *v7;
      v27 = v40;
      v29 = (uint64_t)v41;
      v28 = v39;
    }
    v30 = (uint64_t)v38;
    sub_23DF73E54((uint64_t)v15, type metadata accessor for Device.ControlGroup);
    if (*(_QWORD *)(v31 + 16))
    {
      sub_23DF73E10(v31 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80)), (uint64_t)v12, type metadata accessor for Device.Control);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v12, 0, 1, v27);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v12, 1, 1, v27);
    }
    swift_bridgeObjectRelease();
  }
  sub_23DF89C1C((uint64_t)v12, v30, &qword_256D1D5E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v27) == 1)
  {
    sub_23DF89C7C((uint64_t)v12, &qword_256D1D5E0);
    sub_23DF89C7C((uint64_t)v18, qword_256D21B48);
    sub_23DF89C7C(v30, &qword_256D1D5E0);
    return 20.0;
  }
  else
  {
    sub_23DF89384(v30, v29, type metadata accessor for Device.Control);
    LOBYTE(v44) = 3;
    Device.Control.viewType(with:)((char *)&v44, &v42);
    if (v42 <= 0xAu && ((1 << v42) & 0x411) != 0)
      v34 = 32.0;
    else
      v34 = 0.0;
    sub_23DF73E54(v29, type metadata accessor for Device.Control);
    sub_23DF89C7C((uint64_t)v12, &qword_256D1D5E0);
    sub_23DF89C7C((uint64_t)v18, qword_256D21B48);
  }
  return v34;
}

uint64_t sub_23E0ED7D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *(**v37)(uint64_t *);
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  v40 = a2;
  v46 = a3;
  v7 = sub_23E135EA4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  v44 = v7;
  v45 = v9;
  MEMORY[0x24BDAC7A8](v7);
  v43 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for AccessoryControlContainerView(0);
  v42 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v42 + 64);
  MEMORY[0x24BDAC7A8](v11);
  v41 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26608);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26610);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26618);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v15 = sub_23E136F9C();
  v15[1] = v22;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26620);
  sub_23E0EDB3C(a2, (uint64_t *)((char *)v15 + *(int *)(v23 + 44)), a4);
  sub_23E135E80();
  sub_23E135E80();
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF89C1C((uint64_t)v15, (uint64_t)v18, &qword_256D26608);
  v24 = &v18[*(int *)(v16 + 36)];
  v25 = v48;
  *(_OWORD *)v24 = v47;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v49;
  sub_23DF89C7C((uint64_t)v15, &qword_256D26608);
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v26 = sub_23E1360CC();
  v28 = v27;
  sub_23DF89C1C((uint64_t)v18, (uint64_t)v21, &qword_256D26610);
  v29 = (uint64_t *)&v21[*(int *)(v19 + 36)];
  *v29 = v26;
  v29[1] = v28;
  sub_23DF89C7C((uint64_t)v18, &qword_256D26610);
  v30 = v41;
  sub_23DF73E10((uint64_t)v40, v41, type metadata accessor for AccessoryControlContainerView);
  v32 = v43;
  v31 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v43, a1, v44);
  v33 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v34 = (v12 + *(unsigned __int8 *)(v8 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v35 = swift_allocObject();
  sub_23DF89384(v30, v35 + v33, type metadata accessor for AccessoryControlContainerView);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v35 + v34, v32, v31);
  v36 = v46;
  sub_23DF89C1C((uint64_t)v21, v46, &qword_256D26618);
  v37 = (uint64_t *(**)(uint64_t *))(v36
                                            + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D26628)
                                                     + 36));
  *v37 = sub_23E0EF7D0;
  v37[1] = (uint64_t *(*)(uint64_t *))v35;
  return sub_23DF89C7C((uint64_t)v21, &qword_256D26618);
}

uint64_t sub_23E0EDB3C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char *v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int16 v52;
  char v53;
  char v54;
  char v55;
  uint64_t v56;
  char v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t KeyPath;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  int v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  _BYTE v141[65];
  _BYTE v142[7];
  BOOL v143;
  int v144;
  __int16 v145;
  char v146;
  _OWORD v147[4];
  __int16 v148;
  _OWORD v149[3];
  __int128 v150;
  __int16 v151;
  _OWORD v152[4];
  __int16 v153;
  _OWORD v154[4];
  __int16 v155;
  _BYTE v156[400];
  __int16 v157;
  char v158;
  __int128 v159;
  __int128 v160;
  char v161;
  char v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;

  v138 = a2;
  v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26640);
  MEMORY[0x24BDAC7A8](v136);
  v137 = (uint64_t)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_23E135D60();
  v111 = *(_QWORD *)(v6 - 8);
  v112 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v110 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26648);
  MEMORY[0x24BDAC7A8](v135);
  v113 = (char *)&v110 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v139 = type metadata accessor for AccessoryControlContainerView(0);
  MEMORY[0x24BDAC7A8](v139);
  v124 = (char *)&v110 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26650);
  MEMORY[0x24BDAC7A8](v120);
  v123 = (uint64_t)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26658);
  MEMORY[0x24BDAC7A8](v122);
  v116 = (uint64_t)&v110 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = type metadata accessor for AccessoryControlContainerView.SheetView(0);
  MEMORY[0x24BDAC7A8](v126);
  v13 = (uint64_t *)((char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26660);
  MEMORY[0x24BDAC7A8](v140);
  v121 = (uint64_t)&v110 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26668);
  MEMORY[0x24BDAC7A8](v130);
  v119 = (char *)&v110 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v131 = (uint64_t)&v110 - v17;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26670);
  MEMORY[0x24BDAC7A8](v18);
  v134 = (uint64_t)&v110 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v125 = (char *)&v110 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v128 = (uint64_t)&v110 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v133 = (uint64_t)&v110 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26678);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (uint64_t *)((char *)&v110 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26680);
  MEMORY[0x24BDAC7A8](v29);
  v132 = (uint64_t)&v110 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&v110 - v32;
  MEMORY[0x24BDAC7A8](v34);
  v36 = (char *)&v110 - v35;
  v129 = sub_23E136C30();
  *v28 = sub_23E136FE4();
  v28[1] = v37;
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26688);
  sub_23E0EE6C4(a1, (uint64_t)v28 + *(int *)(v38 + 44), a3);
  v39 = sub_23E136000();
  v40 = sub_23E13672C();
  sub_23DF89C1C((uint64_t)v28, (uint64_t)v33, &qword_256D26678);
  v41 = &v33[*(int *)(v29 + 36)];
  *(_QWORD *)v41 = v39;
  v41[8] = v40;
  sub_23DF89C7C((uint64_t)v28, &qword_256D26678);
  v127 = v36;
  sub_23DF89340((uint64_t)v33, (uint64_t)v36, &qword_256D26680);
  v118 = *a1;
  v42 = (int *)v139;
  v43 = (uint64_t)a1;
  v44 = v126;
  sub_23DF73E10((uint64_t)a1 + *(int *)(v139 + 24), (uint64_t)v13 + *(int *)(v126 + 20), (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v45 = (uint64_t *)((char *)a1 + v42[7]);
  v46 = *v45;
  v47 = v45[1];
  v48 = v45[2];
  v49 = v43 + v42[9];
  v50 = *(_OWORD *)(v49 + 48);
  v154[2] = *(_OWORD *)(v49 + 32);
  v154[3] = v50;
  v155 = *(_WORD *)(v49 + 64);
  v51 = *(_OWORD *)(v49 + 16);
  v154[0] = *(_OWORD *)v49;
  v154[1] = v51;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23DF98EC8((uint64_t)v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)&v157);
  sub_23DF98EC8((uint64_t)v154, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v52 = v157;
  v53 = v158;
  v54 = v161;
  v55 = v162;
  v56 = v163;
  v57 = v164;
  *v13 = v118;
  v58 = (uint64_t *)((char *)v13 + *(int *)(v44 + 24));
  *v58 = v46;
  v58[1] = v47;
  v58[2] = v48;
  v59 = *(int *)(v44 + 28);
  v60 = (uint64_t)v13;
  v61 = (char *)v13 + v59;
  *(_WORD *)v61 = v52;
  v61[8] = v53;
  v62 = v160;
  *((_OWORD *)v61 + 1) = v159;
  *((_OWORD *)v61 + 2) = v62;
  v61[48] = v54;
  v61[49] = v55;
  *((_QWORD *)v61 + 7) = v56;
  v61[64] = v57;
  v63 = v42[8];
  v126 = v43;
  sub_23DF89340(v43 + v63, (uint64_t)v156, &qword_256D1EC28);
  sub_23DF89340((uint64_t)v156, (uint64_t)&v157, &qword_256D1EC28);
  v64 = sub_23DFA625C((uint64_t)&v157);
  v65 = 0;
  v66 = 0;
  v67 = 0;
  v68 = 0;
  if (v64 != 1)
  {
    v65 = v165;
    v66 = v166;
    v67 = v167;
    v68 = v168;
  }
  v117 = v67;
  v118 = v68;
  v69 = v64 == 1;
  KeyPath = swift_getKeyPath();
  v71 = type metadata accessor for AnimationModel();
  v114 = sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v115 = v71;
  v72 = sub_23E1360CC();
  v74 = v73;
  v146 = 0;
  v143 = v69;
  v75 = v121;
  sub_23DF73E10(v60, v121, type metadata accessor for AccessoryControlContainerView.SheetView);
  v76 = v75 + *(int *)(v140 + 36);
  *(_QWORD *)v76 = KeyPath;
  *(_OWORD *)(v76 + 8) = 0u;
  *(_OWORD *)(v76 + 24) = 0u;
  *(_OWORD *)(v76 + 40) = 0u;
  *(_OWORD *)(v76 + 49) = 0u;
  *(_BYTE *)(v76 + 65) = v146;
  *(_DWORD *)(v76 + 66) = v144;
  *(_WORD *)(v76 + 70) = v145;
  *(_QWORD *)(v76 + 72) = v65;
  *(_QWORD *)(v76 + 80) = v66;
  *(_QWORD *)(v76 + 88) = v117;
  *(_QWORD *)(v76 + 96) = v118;
  *(_BYTE *)(v76 + 104) = v143;
  *(_DWORD *)(v76 + 108) = *(_DWORD *)&v142[3];
  *(_DWORD *)(v76 + 105) = *(_DWORD *)v142;
  *(_QWORD *)(v76 + 112) = v72;
  *(_QWORD *)(v76 + 120) = v74;
  sub_23DF73E54(v60, type metadata accessor for AccessoryControlContainerView.SheetView);
  v77 = *(_OWORD *)(v49 + 48);
  v152[2] = *(_OWORD *)(v49 + 32);
  v152[3] = v77;
  v153 = *(_WORD *)(v49 + 64);
  v78 = *(_OWORD *)(v49 + 16);
  v152[0] = *(_OWORD *)v49;
  v152[1] = v78;
  sub_23DF98EC8((uint64_t)v152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v149);
  sub_23DF98EC8((uint64_t)v152, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  if ((BYTE8(v150) & 2) != 0)
  {
    v80 = sub_23E1360CC();
    v82 = v81;
    v83 = v116;
    sub_23DF89C1C(v75, v116, &qword_256D26660);
    v84 = v123;
    v85 = (uint64_t *)(v83 + *(int *)(v122 + 36));
    *v85 = v80;
    v85[1] = v82;
    sub_23DF89C1C(v83, v84, &qword_256D26658);
    swift_storeEnumTagMultiPayload();
    sub_23E0F2358();
    sub_23E0F23C4();
    v79 = (uint64_t)v119;
    sub_23E136480();
    sub_23DF89C7C(v83, &qword_256D26658);
  }
  else
  {
    sub_23DF89C1C(v75, v123, &qword_256D26660);
    swift_storeEnumTagMultiPayload();
    sub_23E0F2358();
    sub_23E0F23C4();
    v79 = (uint64_t)v119;
    sub_23E136480();
  }
  v86 = v131;
  v87 = (uint64_t)v124;
  v88 = (uint64_t)v125;
  sub_23DF89340(v79, v131, &qword_256D26668);
  sub_23DF89C7C(v75, &qword_256D26660);
  v89 = *(_OWORD *)(v49 + 48);
  v149[2] = *(_OWORD *)(v49 + 32);
  v150 = v89;
  v151 = *(_WORD *)(v49 + 64);
  v90 = *(_OWORD *)(v49 + 16);
  v149[0] = *(_OWORD *)v49;
  v149[1] = v90;
  sub_23DF98EC8((uint64_t)v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v147);
  sub_23DF98EC8((uint64_t)v149, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v91 = LOBYTE(v147[0]);
  sub_23DF73E10(v126, v87, type metadata accessor for AccessoryControlContainerView);
  if (v91 == 1)
  {
    sub_23DF73E54(v87, type metadata accessor for AccessoryControlContainerView);
  }
  else
  {
    v92 = v87 + *(int *)(v139 + 36);
    v93 = *(_OWORD *)(v92 + 32);
    v147[3] = *(_OWORD *)(v92 + 48);
    v148 = *(_WORD *)(v92 + 64);
    v94 = *(_OWORD *)v92;
    v147[1] = *(_OWORD *)(v92 + 16);
    v147[2] = v93;
    v147[0] = v94;
    sub_23DF98EC8((uint64_t)v147, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    sub_23DF9C754((uint64_t)v141);
    sub_23DF98EC8((uint64_t)v147, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    sub_23DF73E54(v87, type metadata accessor for AccessoryControlContainerView);
    if (v141[64] != 3)
    {
      v95 = swift_getKeyPath();
      v97 = v110;
      v96 = v111;
      v98 = v112;
      (*(void (**)(char *, _QWORD, uint64_t))(v111 + 104))(v110, *MEMORY[0x24BDEB3F0], v112);
      v99 = (uint64_t)v113;
      v100 = (uint64_t *)&v113[*(int *)(v135 + 36)];
      v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1E6B0);
      (*(void (**)(char *, char *, uint64_t))(v96 + 16))((char *)v100 + *(int *)(v101 + 28), v97, v98);
      *v100 = v95;
      sub_23DF89C1C(v86, v99, &qword_256D26668);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v98);
      sub_23DF89C1C(v99, v137, &qword_256D26648);
      swift_storeEnumTagMultiPayload();
      sub_23E0F2580();
      sub_23E0F2604();
      sub_23E136480();
      sub_23DF89C7C(v99, &qword_256D26648);
      goto LABEL_11;
    }
  }
  sub_23DF89C1C(v86, v137, &qword_256D26668);
  swift_storeEnumTagMultiPayload();
  sub_23E0F2580();
  sub_23E0F2604();
  sub_23E136480();
LABEL_11:
  v102 = v128;
  sub_23DF89340(v88, v128, &qword_256D26670);
  sub_23DF89C7C(v86, &qword_256D26668);
  v103 = v133;
  sub_23DF89340(v102, v133, &qword_256D26670);
  v104 = (uint64_t)v127;
  v105 = v132;
  sub_23DF89C1C((uint64_t)v127, v132, &qword_256D26680);
  v106 = v134;
  sub_23DF89C1C(v103, v134, &qword_256D26670);
  v107 = v138;
  *v138 = v129;
  *((_WORD *)v107 + 4) = 256;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D266E0);
  sub_23DF89C1C(v105, (uint64_t)v107 + *(int *)(v108 + 48), &qword_256D26680);
  sub_23DF89C1C(v106, (uint64_t)v107 + *(int *)(v108 + 64), &qword_256D26670);
  swift_retain_n();
  sub_23DF89C7C(v103, &qword_256D26670);
  sub_23DF89C7C(v104, &qword_256D26680);
  swift_release();
  sub_23DF89C7C(v106, &qword_256D26670);
  sub_23DF89C7C(v105, &qword_256D26680);
  return swift_release();
}

uint64_t sub_23E0EE6C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[50];
  _QWORD v53[50];
  __int128 v54;
  __int128 v55;
  __int128 v56;
  _BYTE v57[400];
  _QWORD v58[51];

  v6 = type metadata accessor for TransitionTileView();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D266E8);
  MEMORY[0x24BDAC7A8](v47);
  v48 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D266F0);
  MEMORY[0x24BDAC7A8](v49);
  v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D266F8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v50 = (uint64_t)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for AccessoryControlContainerView(0);
  sub_23DF89340((uint64_t)a1 + *(int *)(v15 + 32), (uint64_t)v57, &qword_256D1EC28);
  sub_23DF89340((uint64_t)v57, (uint64_t)v58, &qword_256D1EC28);
  if (sub_23DFA625C((uint64_t)v58) == 1)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(a2, 1, 1, v12);
  v46 = a2;
  v17 = *a1;
  sub_23DF73E10((uint64_t)a1 + *(int *)(v15 + 24), (uint64_t)v8 + *(int *)(v6 + 24), (uint64_t (*)(_QWORD))type metadata accessor for Device);
  *v8 = v17;
  memcpy(v8 + 1, v58, 0x190uLL);
  v18 = (char *)v8 + *(int *)(v6 + 28);
  *(_QWORD *)v18 = swift_getKeyPath();
  *(_OWORD *)(v18 + 8) = 0u;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(_OWORD *)(v18 + 50) = 0u;
  sub_23DF89340((uint64_t)v57, (uint64_t)v52, &qword_256D1EC28);
  sub_23DF89340((uint64_t)v57, (uint64_t)v53, &qword_256D1EC28);
  sub_23E0F2678(v53);
  sub_23E0F2678(v52);
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v19 = sub_23E1360CC();
  v42 = v20;
  v43 = v19;
  v21 = sub_23E1360CC();
  v22 = (uint64_t)v48;
  v41 = v21;
  v44 = v12;
  v24 = v23;
  v51 = 1;
  sub_23E136D8C();
  v45 = v13;
  v25 = v54;
  v26 = *((_QWORD *)&v54 + 1);
  v27 = *a1;
  v28 = sub_23E1360CC();
  v30 = v29;
  sub_23DF73E10((uint64_t)v8, v22, (uint64_t (*)(_QWORD))type metadata accessor for TransitionTileView);
  v31 = v22 + *(int *)(v47 + 36);
  v32 = v42;
  *(_QWORD *)v31 = v43;
  *(_QWORD *)(v31 + 8) = v32;
  *(_QWORD *)(v31 + 16) = v41;
  *(_QWORD *)(v31 + 24) = v24;
  *(double *)(v31 + 32) = a3;
  *(_BYTE *)(v31 + 40) = v25;
  *(_QWORD *)(v31 + 48) = v26;
  *(_QWORD *)(v31 + 56) = v28;
  *(_QWORD *)(v31 + 64) = v30;
  *(_QWORD *)(v31 + 72) = v27;
  sub_23DF73E54((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for TransitionTileView);
  v33 = v58[46];
  v34 = v58[47];
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF89C1C(v22, (uint64_t)v11, &qword_256D266E8);
  v35 = &v11[*(int *)(v49 + 36)];
  v36 = v55;
  *(_OWORD *)v35 = v54;
  *((_OWORD *)v35 + 1) = v36;
  *((_OWORD *)v35 + 2) = v56;
  sub_23DF89C7C(v22, &qword_256D266E8);
  sub_23DFA638C((uint64_t)v57);
  v37 = v50;
  sub_23DF89C1C((uint64_t)v11, v50, &qword_256D266F0);
  v38 = v44;
  v39 = (_QWORD *)(v37 + *(int *)(v44 + 36));
  *v39 = v33;
  v39[1] = v34;
  sub_23DF89C7C((uint64_t)v11, &qword_256D266F0);
  v40 = v46;
  sub_23DF89340(v37, v46, &qword_256D266F8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v45 + 56))(v40, 0, 1, v38);
}

uint64_t *sub_23E0EEAEC(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[6];

  if (byte_256D34708 == 1)
  {
    v4 = *result;
    v5 = *(_QWORD *)(a2 + 8);
    v6 = sub_23E0ECCC4(MEMORY[0x24BEE4AF8]);
    MEMORY[0x24BDAC7A8](v6);
    v8[2] = a3;
    *(_QWORD *)(v5 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_controlViewFrames) = sub_23E0ECFF4(v7, (void (*)(uint64_t *, char *))sub_23E0EF838, (uint64_t)v8, v4);
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_23E0EEB9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  char isUniquelyReferenced_nonNull_native;
  void (*v22)(char *, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;

  v24[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D21DC0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v24 - v9;
  v12 = *(int *)(v11 + 48);
  v13 = sub_23E134C80();
  v25 = *(_QWORD *)(v13 - 8);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v14(v10, a2, v13);
  v15 = *(_QWORD *)(a2 + v12);
  *(_QWORD *)&v10[v12] = v15;
  v16 = *(int *)(v5 + 48);
  v14(v7, a2, v13);
  *(_QWORD *)&v7[v16] = v15;
  type metadata accessor for CGRect(0);
  swift_retain();
  sub_23E135EB0();
  swift_release();
  v17 = v26;
  v18 = v27;
  v19 = v28;
  v20 = v29;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30 = *a1;
  *a1 = 0x8000000000000000;
  sub_23E0F14C8((uint64_t)v10, isUniquelyReferenced_nonNull_native, v17, v18, v19, v20);
  *a1 = v30;
  swift_bridgeObjectRelease();
  v22 = *(void (**)(char *, uint64_t))(v25 + 8);
  v22(v10, v13);
  return ((uint64_t (*)(char *, uint64_t))v22)(v7, v13);
}

uint64_t sub_23E0EED40@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t *v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v41 = a1;
  v2 = (int *)type metadata accessor for AccessoryControlHorizontalSheetView();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - v6;
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D267D0);
  MEMORY[0x24BDAC7A8](v39);
  v40 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for AccessoryControlSheetView(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v39 - v13;
  v15 = (int *)type metadata accessor for AccessoryControlContainerView.SheetView(0);
  v16 = *v1;
  v17 = (uint64_t)v1 + v15[5];
  if ((*((_BYTE *)v1 + v15[7] + 49) & 1) != 0)
  {
    sub_23DF73E10(v17, (uint64_t)v4 + v2[5], (uint64_t (*)(_QWORD))type metadata accessor for Device);
    v18 = (_QWORD *)((char *)v1 + v15[6]);
    v19 = *v18;
    v20 = v18[1];
    v21 = v18[2];
    *v4 = v16;
    v22 = (_QWORD *)((char *)v4 + v2[6]);
    *v22 = v19;
    v22[1] = v20;
    v22[2] = v21;
    v23 = (_QWORD *)((char *)v4 + v2[7]);
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    *v23 = sub_23E1360CC();
    v23[1] = v24;
    v25 = (char *)v4 + v2[8];
    *(_QWORD *)v25 = swift_getKeyPath();
    *(_OWORD *)(v25 + 8) = 0u;
    *(_OWORD *)(v25 + 24) = 0u;
    *(_OWORD *)(v25 + 40) = 0u;
    *(_OWORD *)(v25 + 50) = 0u;
    v26 = (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlHorizontalSheetView;
    sub_23DF89384((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlHorizontalSheetView);
    sub_23DF73E10((uint64_t)v7, v40, (uint64_t (*)(_QWORD))type metadata accessor for AccessoryControlHorizontalSheetView);
    swift_storeEnumTagMultiPayload();
    sub_23DF73F28(&qword_256D267D8, type metadata accessor for AccessoryControlSheetView, (uint64_t)&unk_23E1429D8);
    sub_23DF73F28(&qword_256D267E0, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlHorizontalSheetView, (uint64_t)&unk_23E1431E0);
    sub_23E136480();
    v27 = (uint64_t)v7;
  }
  else
  {
    sub_23DF73E10(v17, (uint64_t)v11 + v9[5], (uint64_t (*)(_QWORD))type metadata accessor for Device);
    v28 = (_QWORD *)((char *)v1 + v15[6]);
    v29 = *v28;
    v30 = v28[1];
    v31 = v28[2];
    *v11 = v16;
    v32 = (_QWORD *)((char *)v11 + v9[6]);
    *v32 = v29;
    v32[1] = v30;
    v32[2] = v31;
    v33 = (_QWORD *)((char *)v11 + v9[7]);
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    *v33 = sub_23E1360CC();
    v33[1] = v34;
    v35 = (char *)v11 + v9[8];
    *(_QWORD *)v35 = swift_getKeyPath();
    *(_OWORD *)(v35 + 8) = 0u;
    *(_OWORD *)(v35 + 24) = 0u;
    *(_OWORD *)(v35 + 40) = 0u;
    *(_OWORD *)(v35 + 50) = 0u;
    v36 = (_QWORD *)((char *)v11 + v9[9]);
    v42 = 0;
    sub_23E136D8C();
    v37 = v44;
    *v36 = v43;
    v36[1] = v37;
    v26 = type metadata accessor for AccessoryControlSheetView;
    sub_23DF89384((uint64_t)v11, (uint64_t)v14, type metadata accessor for AccessoryControlSheetView);
    sub_23DF73E10((uint64_t)v14, v40, type metadata accessor for AccessoryControlSheetView);
    swift_storeEnumTagMultiPayload();
    sub_23DF73F28(&qword_256D267D8, type metadata accessor for AccessoryControlSheetView, (uint64_t)&unk_23E1429D8);
    sub_23DF73F28(&qword_256D267E0, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlHorizontalSheetView, (uint64_t)&unk_23E1431E0);
    sub_23E136480();
    v27 = (uint64_t)v14;
  }
  return sub_23DF73E54(v27, v26);
}

uint64_t sub_23E0EF17C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v4 = *(_QWORD *)(a1 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v6 = sub_23E0ED29C(v2);
  sub_23DF73E10(v2, (uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryControlContainerView);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  result = sub_23DF89384((uint64_t)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, type metadata accessor for AccessoryControlContainerView);
  *(double *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  *a2 = sub_23E0EF4C4;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v8;
  return result;
}

uint64_t sub_23E0EF254()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;

  v1 = (int *)type metadata accessor for AccessoryControlContainerView(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  v4 = v3 + v1[6];
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v7 = v4 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v9 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v10 = v3 + v1[8];
  if (*(_QWORD *)(v10 + 56))
  {
    swift_release();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v10 + 96))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    v11 = *(void **)(v10 + 168);
    if (v11)
    {

      swift_release();
      swift_release();
    }

    swift_release();
    swift_release();
    v12 = *(void **)(v10 + 312);
    if (v12)
    {

      swift_release();
      swift_release();
    }
    if (*(_QWORD *)(v10 + 344))
    {
      swift_release();
      swift_release();
    }
  }
  v13 = v3 + v1[9];
  sub_23DF985F0(*(_QWORD *)v13, *(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(_BYTE *)(v13 + 64), *(_BYTE *)(v13 + 65));
  return swift_deallocObject();
}

uint64_t sub_23E0EF4C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(type metadata accessor for AccessoryControlContainerView(0) - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_23E0ED7D8(a1, (uint64_t *)(v2 + v6), a2, *(double *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_23E0EF524()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;
  void *v14;
  unint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = (int *)type metadata accessor for AccessoryControlContainerView(0);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = *(_QWORD *)(v2 + 64);
  v18 = sub_23E135EA4();
  v4 = *(_QWORD *)(v18 - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  swift_release();
  v6 = v0 + v3 + v1[6];
  v7 = sub_23E134C80();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v9 = v6 + *(int *)(v8 + 24);
  swift_bridgeObjectRelease();
  v10 = v9 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v11 = sub_23E135910();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v12 = v0 + v3 + v1[8];
  if (*(_QWORD *)(v12 + 56))
  {
    swift_release();
    swift_release();
    swift_release();
    if (*(_QWORD *)(v12 + 96))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }

    v13 = *(void **)(v12 + 168);
    if (v13)
    {

      swift_release();
      swift_release();
    }

    swift_release();
    swift_release();
    v14 = *(void **)(v12 + 312);
    if (v14)
    {

      swift_release();
      swift_release();
    }
    if (*(_QWORD *)(v12 + 344))
    {
      swift_release();
      swift_release();
    }
  }
  v15 = v0 + v3 + v1[9];
  sub_23DF985F0(*(_QWORD *)v15, *(_QWORD *)(v15 + 8), *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), *(_QWORD *)(v15 + 32), *(_QWORD *)(v15 + 40), *(_QWORD *)(v15 + 48), *(_QWORD *)(v15 + 56), *(_BYTE *)(v15 + 64), *(_BYTE *)(v15 + 65));
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + ((v3 + v17 + v5) & ~v5), v18);
  return swift_deallocObject();
}

uint64_t *sub_23E0EF7D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(type metadata accessor for AccessoryControlContainerView(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_23E135EA4() - 8) + 80);
  return sub_23E0EEAEC(a1, v1 + v4, v1 + ((v4 + v5 + v6) & ~v6));
}

uint64_t sub_23E0EF838(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_23E0EEB9C(a1, a2, *(_QWORD *)(v2 + 16));
}

double sub_23E0EF850@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _OWORD *v5;
  double result;
  __int128 v7;
  __int128 v8;
  __int128 v9;

  sub_23E135E80();
  sub_23E135E80();
  sub_23E136FE4();
  sub_23E135E5C();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26870);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  v5 = (_OWORD *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D26878) + 36));
  *v5 = v7;
  v5[1] = v8;
  result = *(double *)&v9;
  v5[2] = v9;
  return result;
}

uint64_t sub_23E0EF900@<X0>(uint64_t a1@<X0>, double (**a2)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26870);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x24BDAC7A8](v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4, v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *a2 = sub_23E0F3F60;
  a2[1] = (double (*)@<D0>(uint64_t@<X8>))v9;
  return result;
}

uint64_t sub_23E0EF9D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, CGFloat a3@<D0>, CGFloat a4@<D1>, CGFloat a5@<D2>, CGFloat a6@<D3>)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  __int128 v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  double *v25;
  _OWORD v27[3];
  CGRect v28;
  CGRect v29;

  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26860);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26868);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135E80();
  sub_23E136FE4();
  sub_23E135E5C();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26858);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v14, a1, v18);
  v19 = &v14[*(int *)(v12 + 36)];
  v20 = v27[1];
  *(_OWORD *)v19 = v27[0];
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v27[2];
  sub_23E135E80();
  v28.origin.x = a3;
  v28.origin.y = a4;
  v28.size.width = a5;
  v28.size.height = a6;
  CGRectGetMidX(v28);
  v29.origin.x = a3;
  v29.origin.y = a4;
  v29.size.width = a5;
  v29.size.height = a6;
  CGRectGetMidY(v29);
  v22 = CGPointMake(v21);
  v24 = v23;
  sub_23DF89C1C((uint64_t)v14, (uint64_t)v17, &qword_256D26860);
  v25 = (double *)&v17[*(int *)(v15 + 36)];
  *v25 = v22;
  *((_QWORD *)v25 + 1) = v24;
  sub_23DF89C7C((uint64_t)v14, &qword_256D26860);
  return sub_23DF89340((uint64_t)v17, a2, &qword_256D26868);
}

double sub_23E0EFC08@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  double result;
  __int128 v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26858);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v15 = *v2;
  v8 = *((_QWORD *)v2 + 2);
  v9 = *((_QWORD *)v2 + 3);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  v12 = v11 + ((v7 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(_OWORD *)v12 = v15;
  *(_QWORD *)(v12 + 16) = v8;
  *(_QWORD *)(v12 + 24) = v9;
  v13 = sub_23E13672C();
  *(_QWORD *)a2 = sub_23E0F3E90;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v13;
  result = 0.0;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_BYTE *)(a2 + 56) = 1;
  return result;
}

uint64_t sub_23E0EFD28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE v49[72];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D267E8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D267F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D267F8);
  MEMORY[0x24BDAC7A8](v11);
  if ((*(_BYTE *)(v2 + 104) & 1) != 0)
    goto LABEL_3;
  v14 = *(_QWORD *)(v2 + 88);
  v13 = *(_QWORD *)(v2 + 96);
  v16 = *(_QWORD *)(v2 + 72);
  v15 = *(_QWORD *)(v2 + 80);
  v47 = a2;
  v17 = *(_BYTE *)(v2 + 65);
  v18 = *(_BYTE *)(v2 + 64);
  v48 = v5;
  v20 = *(_QWORD *)(v2 + 48);
  v19 = *(_QWORD *)(v2 + 56);
  v43 = v8;
  v42 = a1;
  v21 = *(_QWORD *)(v2 + 32);
  v22 = *(_QWORD *)(v2 + 40);
  v46 = v10;
  v44 = v7;
  v24 = *(_QWORD *)(v2 + 16);
  v23 = *(_QWORD *)(v2 + 24);
  v41 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = v11;
  v26 = *(_QWORD *)(v2 + 8);
  v50 = *(_QWORD *)v2;
  v25 = v50;
  v51 = v26;
  v52 = v24;
  v53 = v23;
  v54 = v21;
  v55 = v22;
  v56 = v20;
  v57 = v19;
  v40 = v19;
  v58 = v18;
  v59 = v17;
  sub_23DF98590(v50, v26, v24, v23, v21, v22, v20, v19, v18, v17);
  sub_23DF9C754((uint64_t)v49);
  v27 = v25;
  v28 = v45;
  v29 = v26;
  v30 = (uint64_t)v41;
  v31 = v24;
  v7 = v44;
  v32 = v23;
  v10 = v46;
  v33 = v21;
  a1 = v42;
  sub_23DF985F0(v27, v29, v31, v32, v33, v22, v20, v40, v18, v17);
  if ((v49[8] & 1) != 0)
  {
LABEL_3:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26800);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v7, a1, v34);
    v35 = &qword_256D267E8;
    sub_23DF89C1C((uint64_t)v7, (uint64_t)v10, &qword_256D267E8);
    swift_storeEnumTagMultiPayload();
    sub_23E0F3B94(&qword_256D26808, &qword_256D267F8, (uint64_t (*)(void))sub_23E0F3C18);
    sub_23E0F3B94(&qword_256D26820, &qword_256D267E8, (uint64_t (*)(void))sub_23E0F3C5C);
    sub_23E136480();
    v36 = (uint64_t)v7;
  }
  else
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26800);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v30, a1, v37);
    v38 = (_QWORD *)(v30 + *(int *)(v28 + 36));
    *v38 = v16;
    v38[1] = v15;
    v38[2] = v14;
    v38[3] = v13;
    v35 = &qword_256D267F8;
    sub_23DF89C1C(v30, (uint64_t)v10, &qword_256D267F8);
    swift_storeEnumTagMultiPayload();
    sub_23E0F3B94(&qword_256D26808, &qword_256D267F8, (uint64_t (*)(void))sub_23E0F3C18);
    sub_23E0F3B94(&qword_256D26820, &qword_256D267E8, (uint64_t (*)(void))sub_23E0F3C5C);
    sub_23E136480();
    v36 = v30;
  }
  return sub_23DF89C7C(v36, v35);
}

uint64_t sub_23E0F00E0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;

  v3 = v2;
  v5 = sub_23E134E9C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26710);
  v10 = sub_23E137590();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_39;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v42 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v40 = v2;
  v41 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  v44 = v9;
  result = swift_retain();
  v18 = 0;
  HIDWORD(v39) = a2;
  v19 = 16;
  if ((a2 & 1) != 0)
    v19 = 32;
  v43 = v19;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    if (__OFADD__(v18++, 1))
      goto LABEL_41;
    if (v18 >= v41)
      break;
    v24 = v42;
    v25 = v42[v18];
    if (!v25)
    {
      v26 = v18 + 1;
      if (v18 + 1 >= v41)
      {
LABEL_31:
        v37 = v44;
        swift_release();
        v3 = v40;
        if ((v39 & 0x100000000) == 0)
          goto LABEL_39;
        goto LABEL_35;
      }
      v25 = v42[v26];
      if (!v25)
      {
        while (1)
        {
          v18 = v26 + 1;
          if (__OFADD__(v26, 1))
            break;
          if (v18 >= v41)
            goto LABEL_31;
          v25 = v42[v18];
          ++v26;
          if (v25)
            goto LABEL_21;
        }
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      ++v18;
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = v44;
    v28 = *(_QWORD *)(v6 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + v43))(v8, *(_QWORD *)(v44 + 48) + v28 * v22, v5);
    v29 = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v22);
    sub_23DF73F28(&qword_256D1D780, (uint64_t (*)(uint64_t))MEMORY[0x24BE4D888], MEMORY[0x24BE4D8A8]);
    result = sub_23E137110();
    v30 = -1 << *(_BYTE *)(v11 + 32);
    v31 = result & ~v30;
    v32 = v31 >> 6;
    if (((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      v20 = __clz(__rbit64((-1 << v31) & ~*(_QWORD *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        v35 = v32 == v34;
        if (v32 == v34)
          v32 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v16 + 8 * v32);
      }
      while (v36 == -1);
      v20 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(_QWORD *)(v16 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v28 * v20, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v20) = v29;
    ++*(_QWORD *)(v11 + 16);
  }
  v37 = v44;
  swift_release();
  v3 = v40;
  v24 = v42;
  if ((v39 & 0x100000000) == 0)
    goto LABEL_39;
LABEL_35:
  v38 = 1 << *(_BYTE *)(v37 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v37 + 16) = 0;
LABEL_39:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23E0F0458(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int64_t v37;
  _QWORD *v38;
  int v39;
  _OWORD v40[2];

  v3 = v2;
  v5 = sub_23E1356DC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26708);
  v39 = a2;
  v10 = sub_23E137590();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v38 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v36 = v2;
  v37 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v37)
      break;
    v23 = v38;
    v24 = v38[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v37)
        goto LABEL_34;
      v24 = v38[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_34:
          swift_release();
          v3 = v36;
          if ((v39 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v37)
              goto LABEL_34;
            v24 = v38[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v39 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_23DF89AC0((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v21), v40);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_23DF89AD0(*(_QWORD *)(v9 + 56) + 32 * v21, (uint64_t)v40);
    }
    sub_23DF73F28(&qword_256D1D760, (uint64_t (*)(uint64_t))MEMORY[0x24BE4E370], MEMORY[0x24BE4E380]);
    result = sub_23E137110();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = (uint64_t)sub_23DF89AC0(v40, (_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v19));
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v36;
  v23 = v38;
  if ((v39 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23E0F07F4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for Device.Control(0);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E134C80();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26718);
  v48 = a2;
  v12 = sub_23E137590();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_23DF89384(v31 + v32 * v24, v49, type metadata accessor for Device.Control);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_23DF73E10(v33 + v32 * v24, v49, type metadata accessor for Device.Control);
    }
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E137110();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_23DF89384(v49, *(_QWORD *)(v13 + 56) + v32 * v22, type metadata accessor for Device.Control);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_23E0F0C10(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = sub_23E134C80();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26830);
  v42 = a2;
  v10 = sub_23E137590();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v21);
      swift_retain();
    }
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E137110();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_23E0F0FA4(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;

  v4 = sub_23E134C80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = v2;
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26630);
  v9 = sub_23E137590();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
  {
    result = swift_release();
    v40 = v44;
LABEL_42:
    *v40 = v10;
    return result;
  }
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v46 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v45 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  v43 = a2;
  v18 = 16;
  if ((a2 & 1) != 0)
    v18 = 32;
  v47 = v18;
  while (1)
  {
    if (v14)
    {
      v21 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v22 = v21 | (v17 << 6);
      goto LABEL_24;
    }
    v23 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v23 >= v45)
    {
      swift_release();
      v40 = v44;
      v24 = v46;
      if ((v43 & 1) != 0)
      {
LABEL_37:
        v41 = 1 << *(_BYTE *)(v8 + 32);
        if (v41 >= 64)
          bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v24 = -1 << v41;
        *(_QWORD *)(v8 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v24 = v46;
    v25 = v46[v23];
    ++v17;
    if (!v25)
    {
      v17 = v23 + 1;
      if (v23 + 1 >= v45)
        goto LABEL_34;
      v25 = v46[v17];
      if (!v25)
        break;
    }
LABEL_23:
    v14 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v17 << 6);
LABEL_24:
    v27 = *(_QWORD *)(v5 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + v47))(v7, *(_QWORD *)(v8 + 48) + v27 * v22, v4);
    v28 = (uint64_t *)(*(_QWORD *)(v8 + 56) + 32 * v22);
    v30 = v28[2];
    v29 = v28[3];
    v32 = *v28;
    v31 = v28[1];
    sub_23DF73F28(&qword_256D1D570, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_23E137110();
    v33 = -1 << *(_BYTE *)(v10 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      v19 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v15 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32))(*(_QWORD *)(v10 + 48) + v27 * v19, v7, v4);
    v20 = (_QWORD *)(*(_QWORD *)(v10 + 56) + 32 * v19);
    *v20 = v32;
    v20[1] = v31;
    v20[2] = v30;
    v20[3] = v29;
    ++*(_QWORD *)(v10 + 16);
  }
  v26 = v23 + 2;
  if (v26 >= v45)
  {
LABEL_34:
    swift_release();
    v40 = v44;
    if ((v43 & 1) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v25 = v46[v26];
  if (v25)
  {
    v17 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v17 >= v45)
      goto LABEL_34;
    v25 = v46[v17];
    ++v26;
    if (v25)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

_OWORD *sub_23E0F134C(_OWORD *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  _OWORD *v21;
  _OWORD *result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = sub_23E1356DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_23DF84C10(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (_OWORD *)(v20[7] + 32 * v14);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v21);
        return sub_23DF89AC0(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_23E0F19B4();
      goto LABEL_7;
    }
    sub_23E0F0458(v17, a3 & 1);
    v23 = sub_23DF84C10(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_23E0F1648(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = (_OWORD *)sub_23E137638();
  __break(1u);
  return result;
}

uint64_t sub_23E0F14C8(uint64_t a1, char a2, double a3, double a4, double a5, double a6)
{
  _QWORD *v6;
  _QWORD **v7;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD *v18;
  char v19;
  unint64_t v20;
  uint64_t v21;
  _BOOL8 v22;
  uint64_t result;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  double *v27;
  char v28;
  uint64_t v29;

  v7 = (_QWORD **)v6;
  v14 = sub_23E134C80();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)*v6;
  v20 = sub_23DF84CA8(a1);
  v21 = v18[2];
  v22 = (v19 & 1) == 0;
  result = v21 + v22;
  if (__OFADD__(v21, v22))
  {
    __break(1u);
  }
  else
  {
    v24 = v19;
    v25 = v18[3];
    if (v25 >= result && (a2 & 1) != 0)
    {
LABEL_7:
      v26 = *v7;
      if ((v24 & 1) != 0)
      {
LABEL_8:
        v27 = (double *)(v26[7] + 32 * v20);
        *v27 = a3;
        v27[1] = a4;
        v27[2] = a5;
        v27[3] = a6;
        return result;
      }
      goto LABEL_11;
    }
    if (v25 >= result && (a2 & 1) == 0)
    {
      result = (uint64_t)sub_23E0F20E8();
      goto LABEL_7;
    }
    sub_23E0F0FA4(result, a2 & 1);
    result = sub_23DF84CA8(a1);
    if ((v24 & 1) == (v28 & 1))
    {
      v20 = result;
      v26 = *v7;
      if ((v24 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
      return sub_23E0F16E8(v20, (uint64_t)v17, v26, a3, a4, a5, a6);
    }
  }
  result = sub_23E137638();
  __break(1u);
  return result;
}

_OWORD *sub_23E0F1648(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  _OWORD *result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_23E1356DC();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_23DF89AC0(a3, (_OWORD *)(a4[7] + 32 * a1));
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_23E0F16E8(unint64_t a1, uint64_t a2, _QWORD *a3, double a4, double a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  double *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  a3[(a1 >> 6) + 8] |= 1 << a1;
  v14 = a3[6];
  v15 = sub_23E134C80();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, a2, v15);
  v17 = (double *)(a3[7] + 32 * a1);
  *v17 = a4;
  v17[1] = a5;
  v17[2] = a6;
  v17[3] = a7;
  v18 = a3[2];
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
    __break(1u);
  else
    a3[2] = v20;
  return result;
}

void *sub_23E0F179C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int64_t v27;

  v1 = v0;
  v2 = sub_23E134E9C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26710);
  v6 = *v0;
  v7 = sub_23E137584();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_26:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v26 = v6 + 64;
  v27 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v17 = v16 | (v12 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v12++, 1))
      goto LABEL_28;
    if (v12 >= v27)
    {
LABEL_24:
      result = (void *)swift_release();
      v1 = v25;
      goto LABEL_26;
    }
    v22 = *(_QWORD *)(v26 + 8 * v12);
    if (!v22)
      break;
LABEL_23:
    v15 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v18 = *(_QWORD *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v2);
    v19 = 8 * v17;
    v20 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + v19);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v2);
    *(_QWORD *)(*(_QWORD *)(v8 + 56) + v19) = v20;
  }
  v23 = v12 + 1;
  if (v12 + 1 >= v27)
    goto LABEL_24;
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    ++v12;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v27)
      goto LABEL_24;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_23;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E0F19B4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  uint64_t v25;
  _OWORD v26[2];

  v1 = v0;
  v2 = sub_23E1356DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26708);
  v6 = *v0;
  v7 = sub_23E137584();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v25 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    sub_23DF89AD0(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = sub_23DF89AC0(v26, (_OWORD *)(*(_QWORD *)(v8 + 56) + v20));
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v25 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_23E0F1BF0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for Device.Control(0);
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_23E134C80();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26718);
  v30 = v0;
  v5 = *v0;
  v6 = sub_23E137584();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38; ; result = (void *)sub_23DF89384(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for Device.Control))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_23DF73E10(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for Device.Control);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_23E0F1EB8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_23E134C80();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26830);
  v24 = v0;
  v5 = *v0;
  v6 = sub_23E137584();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v25 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
    result = (void *)swift_retain();
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_23E0F20E8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t (*v25)(unint64_t, char *, uint64_t);
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  uint64_t *v30;
  uint64_t v31;
  __int128 v32;

  v1 = v0;
  v2 = sub_23E134C80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26630);
  v6 = *v0;
  v7 = sub_23E137584();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v30 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v31 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v27 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v16)
      goto LABEL_26;
    v28 = *(_QWORD *)(v31 + 8 * v27);
    ++v12;
    if (!v28)
    {
      v12 = v27 + 1;
      if (v27 + 1 >= v16)
        goto LABEL_26;
      v28 = *(_QWORD *)(v31 + 8 * v12);
      if (!v28)
        break;
    }
LABEL_25:
    v15 = (v28 - 1) & v28;
    v18 = __clz(__rbit64(v28)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 32 * v18;
    v21 = *(_QWORD *)(v6 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 24);
    v24 = *(_QWORD *)(v8 + 48) + v19;
    v25 = *(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
    v32 = *(_OWORD *)(v21 + 8);
    result = (void *)v25(v24, v5, v2);
    v26 = *(_QWORD *)(v8 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_OWORD *)(v26 + 8) = v32;
    *(_QWORD *)(v26 + 24) = v23;
  }
  v29 = v27 + 2;
  if (v29 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v30;
    goto LABEL_28;
  }
  v28 = *(_QWORD *)(v31 + 8 * v29);
  if (v28)
  {
    v12 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v28 = *(_QWORD *)(v31 + 8 * v12);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AccessoryControlContainerView.SheetView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D26780);
}

unint64_t sub_23E0F2358()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26690;
  if (!qword_256D26690)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26658);
    v2[0] = sub_23E0F23C4();
    v2[1] = sub_23E0F253C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26690);
  }
  return result;
}

unint64_t sub_23E0F23C4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26698;
  if (!qword_256D26698)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26660);
    v2[0] = sub_23DF73F28(&qword_256D266A0, type metadata accessor for AccessoryControlContainerView.SheetView, (uint64_t)&unk_23E142738);
    v2[1] = sub_23E0F2448();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26698);
  }
  return result;
}

unint64_t sub_23E0F2448()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D266A8;
  if (!qword_256D266A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D266B0);
    v2[0] = sub_23E0F24B4();
    v2[1] = sub_23E0F24F8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED2F8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D266A8);
  }
  return result;
}

unint64_t sub_23E0F24B4()
{
  unint64_t result;

  result = qword_256D266B8;
  if (!qword_256D266B8)
  {
    result = MEMORY[0x24264C55C](&unk_23E1426E8, &type metadata for AccessoryControlSheetFrameModifier);
    atomic_store(result, (unint64_t *)&qword_256D266B8);
  }
  return result;
}

unint64_t sub_23E0F24F8()
{
  unint64_t result;

  result = qword_256D266C0;
  if (!qword_256D266C0)
  {
    result = MEMORY[0x24264C55C](&unk_23E138E70, &type metadata for AnimationModel.Presentation.SheetView);
    atomic_store(result, (unint64_t *)&qword_256D266C0);
  }
  return result;
}

unint64_t sub_23E0F253C()
{
  unint64_t result;

  result = qword_256D266C8;
  if (!qword_256D266C8)
  {
    result = MEMORY[0x24264C55C](&unk_23E138E20, &type metadata for AnimationModel.SwipeDownDismissal);
    atomic_store(result, (unint64_t *)&qword_256D266C8);
  }
  return result;
}

unint64_t sub_23E0F2580()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D266D0;
  if (!qword_256D266D0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26648);
    v2[0] = sub_23E0F2604();
    v2[1] = sub_23DF89B88(&qword_256D20628, &qword_256D1E6B0, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D266D0);
  }
  return result;
}

unint64_t sub_23E0F2604()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D266D8;
  if (!qword_256D266D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26668);
    v2[0] = sub_23E0F2358();
    v2[1] = sub_23E0F23C4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D266D8);
  }
  return result;
}

_QWORD *sub_23E0F2678(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = a1[11];
  v3 = a1[12];
  v4 = (void *)a1[15];
  v5 = a1[18];
  v12 = a1[17];
  v13 = a1[16];
  v10 = a1[20];
  v11 = a1[19];
  v9 = (void *)a1[21];
  v14 = (void *)a1[30];
  v19 = a1[35];
  v20 = a1[34];
  v18 = a1[36];
  v16 = a1[38];
  v17 = a1[37];
  v15 = (void *)a1[39];
  v21 = a1[43];
  swift_retain();
  swift_retain();
  swift_retain();
  sub_23E052158(v2, v3);
  v6 = v4;
  sub_23E052584(v13, v12, v5, v11, v10, v9);
  v7 = v14;
  swift_retain();
  swift_retain();
  sub_23E052584(v20, v19, v18, v17, v16, v15);
  sub_23E052824(v21);
  return a1;
}

uint64_t sub_23E0F27E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t destroy for AccessoryControlSheetFrameModifier(uint64_t a1)
{
  return sub_23DF985F0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64), *(_BYTE *)(a1 + 65));
}

uint64_t initializeWithCopy for AccessoryControlSheetFrameModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char v14;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v13 = *(_BYTE *)(a2 + 64);
  v14 = *(_BYTE *)(a2 + 65);
  sub_23DF98590(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v13, v14);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v13;
  *(_BYTE *)(a1 + 65) = v14;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for AccessoryControlSheetFrameModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  __int128 v22;
  __int128 v23;
  char v25;
  char v26;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_QWORD *)(a2 + 48);
  v11 = *(_QWORD *)(a2 + 56);
  v25 = *(_BYTE *)(a2 + 64);
  v26 = *(_BYTE *)(a2 + 65);
  sub_23DF98590(*(_QWORD *)a2, v5, v6, v7, v8, v9, v10, v11, v25, v26);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  v21 = *(_BYTE *)(a1 + 65);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v25;
  *(_BYTE *)(a1 + 65) = v26;
  sub_23DF985F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  v22 = *(_OWORD *)(a2 + 72);
  v23 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v23;
  *(_OWORD *)(a1 + 72) = v22;
  return a1;
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for AccessoryControlSheetFrameModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;

  v4 = *(_BYTE *)(a2 + 64);
  v5 = *(_BYTE *)(a2 + 65);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_BYTE *)(a1 + 64);
  v15 = *(_BYTE *)(a1 + 65);
  v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(_BYTE *)(a1 + 64) = v4;
  *(_BYTE *)(a1 + 65) = v5;
  sub_23DF985F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlSheetFrameModifier(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 65);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlSheetFrameModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
      *(_BYTE *)(result + 65) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlSheetFrameModifier()
{
  return &type metadata for AccessoryControlSheetFrameModifier;
}

uint64_t *sub_23E0F2B8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v57;

  v3 = a1;
  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v55 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v55 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = a3[5];
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23E134C80();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    v9 = (int *)type metadata accessor for Device();
    v10 = v9[5];
    v11 = &v6[v10];
    v12 = &v7[v10];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = v9[6];
    v15 = &v6[v14];
    v16 = &v7[v14];
    v17 = *(_QWORD *)&v7[v14 + 8];
    *(_QWORD *)v15 = *(_QWORD *)&v7[v14];
    *((_QWORD *)v15 + 1) = v17;
    v18 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v19 = &v15[v18];
    v20 = &v16[v18];
    v21 = sub_23E135910();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    v23 = v9[7];
    v24 = &v6[v23];
    v25 = &v7[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = v9[8];
    v28 = &v6[v27];
    v29 = &v7[v27];
    v57 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v57;
    *(_QWORD *)&v6[v9[9]] = *(_QWORD *)&v7[v9[9]];
    v6[v9[10]] = v7[v9[10]];
    v6[v9[11]] = v7[v9[11]];
    v6[v9[12]] = v7[v9[12]];
    v6[v9[13]] = v7[v9[13]];
    *(_QWORD *)&v6[v9[14]] = *(_QWORD *)&v7[v9[14]];
    v6[v9[15]] = v7[v9[15]];
    v30 = v9[16];
    v31 = &v6[v30];
    v32 = &v7[v30];
    v33 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v33;
    v34 = v9[17];
    v35 = &v6[v34];
    v36 = &v7[v34];
    v37 = *((_QWORD *)v36 + 1);
    *(_QWORD *)v35 = *(_QWORD *)v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = v9[18];
    v39 = &v6[v38];
    v40 = &v7[v38];
    v41 = *((_QWORD *)v40 + 1);
    *(_QWORD *)v39 = *(_QWORD *)v40;
    *((_QWORD *)v39 + 1) = v41;
    v6[v9[19]] = v7[v9[19]];
    v6[v9[20]] = v7[v9[20]];
    v42 = v9[21];
    v43 = &v6[v42];
    v44 = &v7[v42];
    v45 = *((_QWORD *)v44 + 1);
    *(_QWORD *)v43 = *(_QWORD *)v44;
    *((_QWORD *)v43 + 1) = v45;
    v46 = a3[6];
    v47 = a3[7];
    v48 = (uint64_t *)((char *)v3 + v46);
    v49 = (uint64_t *)((char *)a2 + v46);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    v48[2] = v49[2];
    v51 = (char *)v3 + v47;
    v52 = (char *)a2 + v47;
    v53 = *((_OWORD *)v52 + 3);
    *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
    *((_OWORD *)v51 + 3) = v53;
    v51[64] = v52[64];
    v54 = *((_OWORD *)v52 + 1);
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *((_OWORD *)v51 + 1) = v54;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_23E0F2E34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  v4 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v5 = v2 + *(int *)(v4 + 24);
  swift_bridgeObjectRelease();
  v6 = v5 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v7 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23E0F2F74(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  __int128 v53;
  __int128 v54;

  *a1 = *a2;
  v4 = a3[5];
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  v8 = (int *)type metadata accessor for Device();
  v9 = v8[5];
  v10 = &v5[v9];
  v11 = &v6[v9];
  v12 = *((_QWORD *)v11 + 1);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *((_QWORD *)v10 + 1) = v12;
  v13 = v8[6];
  v14 = &v5[v13];
  v15 = &v6[v13];
  v16 = *(_QWORD *)&v6[v13 + 8];
  *(_QWORD *)v14 = *(_QWORD *)&v6[v13];
  *((_QWORD *)v14 + 1) = v16;
  v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v18 = &v14[v17];
  v19 = &v15[v17];
  v20 = sub_23E135910();
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  v22 = v8[7];
  v23 = &v5[v22];
  v24 = &v6[v22];
  v25 = *((_QWORD *)v24 + 1);
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *((_QWORD *)v23 + 1) = v25;
  v26 = v8[8];
  v27 = &v5[v26];
  v28 = &v6[v26];
  v29 = *((_QWORD *)v28 + 1);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = v29;
  *(_QWORD *)&v5[v8[9]] = *(_QWORD *)&v6[v8[9]];
  v5[v8[10]] = v6[v8[10]];
  v5[v8[11]] = v6[v8[11]];
  v5[v8[12]] = v6[v8[12]];
  v5[v8[13]] = v6[v8[13]];
  *(_QWORD *)&v5[v8[14]] = *(_QWORD *)&v6[v8[14]];
  v5[v8[15]] = v6[v8[15]];
  v30 = v8[16];
  v31 = &v5[v30];
  v32 = &v6[v30];
  v33 = *((_QWORD *)v32 + 1);
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = v33;
  v34 = v8[17];
  v35 = &v5[v34];
  v36 = &v6[v34];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  v38 = v8[18];
  v39 = &v5[v38];
  v40 = &v6[v38];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  v5[v8[19]] = v6[v8[19]];
  v5[v8[20]] = v6[v8[20]];
  v42 = v8[21];
  v43 = &v5[v42];
  v44 = &v6[v42];
  v45 = *((_QWORD *)v44 + 1);
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *((_QWORD *)v43 + 1) = v45;
  v46 = a3[6];
  v47 = a3[7];
  v48 = (_QWORD *)((char *)a1 + v46);
  v49 = (_QWORD *)((char *)a2 + v46);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v48[2] = v49[2];
  v51 = (char *)a1 + v47;
  v52 = (char *)a2 + v47;
  v53 = *((_OWORD *)v52 + 3);
  *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
  *((_OWORD *)v51 + 3) = v53;
  v51[64] = v52[64];
  v54 = *((_OWORD *)v52 + 1);
  *(_OWORD *)v51 = *(_OWORD *)v52;
  *((_OWORD *)v51 + 1) = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23E0F31EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
  *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v18 = &v15[v17];
  v19 = &v16[v17];
  v20 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v10[7];
  v22 = &v7[v21];
  v23 = &v8[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v10[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_retain();
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v27 = v10[16];
  v28 = &v7[v27];
  v29 = &v8[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v10[17];
  v31 = &v7[v30];
  v32 = &v8[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = v10[18];
  v34 = &v7[v33];
  v35 = &v8[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v36 = v10[21];
  v37 = &v7[v36];
  v38 = &v8[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[6];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[7];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  *v43 = *v44;
  v43[1] = v44[1];
  v43[8] = v44[8];
  *((_QWORD *)v43 + 2) = *((_QWORD *)v44 + 2);
  *((_QWORD *)v43 + 3) = *((_QWORD *)v44 + 3);
  *((_QWORD *)v43 + 4) = *((_QWORD *)v44 + 4);
  *((_QWORD *)v43 + 5) = *((_QWORD *)v44 + 5);
  v43[48] = v44[48];
  v43[49] = v44[49];
  *((_QWORD *)v43 + 7) = *((_QWORD *)v44 + 7);
  v43[64] = v44[64];
  return a1;
}

_QWORD *sub_23E0F354C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  v11 = v10[6];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_OWORD *)&v7[v11] = *(_OWORD *)&v8[v11];
  v14 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)&v7[v10[7]] = *(_OWORD *)&v8[v10[7]];
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  v7[v10[15]] = v8[v10[15]];
  *(_OWORD *)&v7[v10[16]] = *(_OWORD *)&v8[v10[16]];
  *(_OWORD *)&v7[v10[17]] = *(_OWORD *)&v8[v10[17]];
  *(_OWORD *)&v7[v10[18]] = *(_OWORD *)&v8[v10[18]];
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  *(_OWORD *)&v7[v10[21]] = *(_OWORD *)&v8[v10[21]];
  v18 = a3[6];
  v19 = a3[7];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  v22 = (char *)a1 + v19;
  v23 = (char *)a2 + v19;
  v24 = *((_OWORD *)v23 + 3);
  *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
  *((_OWORD *)v22 + 3) = v24;
  v22[64] = v23[64];
  v25 = *((_OWORD *)v23 + 1);
  *(_OWORD *)v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v25;
  return a1;
}

_QWORD *sub_23E0F3710(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  __int128 v60;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *(_QWORD *)&v8[v16 + 8];
  *(_QWORD *)v17 = *(_QWORD *)&v8[v16];
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v23 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = v10[7];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v29 = v10[8];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v34 = v10[16];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v38 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = v38;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  v39 = v10[17];
  v40 = &v7[v39];
  v41 = &v8[v39];
  v43 = *(_QWORD *)v41;
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = v43;
  *((_QWORD *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  v44 = v10[18];
  v45 = &v7[v44];
  v46 = &v8[v44];
  v48 = *(_QWORD *)v46;
  v47 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v45 = v48;
  *((_QWORD *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v49 = v10[21];
  v50 = &v7[v49];
  v51 = &v8[v49];
  v53 = *(_QWORD *)v51;
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = v53;
  *((_QWORD *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  v54 = a3[6];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *(_QWORD *)((char *)a1 + v54) = *(_QWORD *)((char *)a2 + v54);
  swift_release();
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_release();
  *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
  swift_bridgeObjectRelease();
  v57 = a3[7];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *(_WORD *)v58 = *(_WORD *)v59;
  v58[8] = v59[8];
  v60 = *((_OWORD *)v59 + 2);
  *((_OWORD *)v58 + 1) = *((_OWORD *)v59 + 1);
  *((_OWORD *)v58 + 2) = v60;
  v58[48] = v59[48];
  v58[49] = v59[49];
  *((_QWORD *)v58 + 7) = *((_QWORD *)v59 + 7);
  v58[64] = v59[64];
  return a1;
}

uint64_t sub_23E0F39A0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0F39AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Device();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E0F3A30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0F3A3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Device();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E0F3ABC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E0F3B48()
{
  return sub_23DF89B88(&qword_256D267C0, &qword_256D267C8, MEMORY[0x24BDEC6F8]);
}

uint64_t sub_23E0F3B74()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0F3B84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0F3B94(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = sub_23DF89B88(&qword_256D26810, &qword_256D26800, MEMORY[0x24BDEFB78]);
    v7[1] = a3();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E0F3C18()
{
  unint64_t result;

  result = qword_256D26818;
  if (!qword_256D26818)
  {
    result = MEMORY[0x24264C55C](&unk_23E142814, &type metadata for AccessoryControlSheetFrameModifier.CardFrameModifier);
    atomic_store(result, (unint64_t *)&qword_256D26818);
  }
  return result;
}

unint64_t sub_23E0F3C5C()
{
  unint64_t result;

  result = qword_256D26828;
  if (!qword_256D26828)
  {
    result = MEMORY[0x24264C55C](&unk_23E1427C4, &type metadata for AccessoryControlSheetFrameModifier.FullScreenFrameModifier);
    atomic_store(result, (unint64_t *)&qword_256D26828);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlSheetFrameModifier.FullScreenFrameModifier()
{
  return &type metadata for AccessoryControlSheetFrameModifier.FullScreenFrameModifier;
}

ValueMetadata *type metadata accessor for AccessoryControlSheetFrameModifier.CardFrameModifier()
{
  return &type metadata for AccessoryControlSheetFrameModifier.CardFrameModifier;
}

unint64_t sub_23E0F3CC4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26838;
  if (!qword_256D26838)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26840);
    v2[0] = sub_23DF73F28(&qword_256D267D8, type metadata accessor for AccessoryControlSheetView, (uint64_t)&unk_23E1429D8);
    v2[1] = sub_23DF73F28(&qword_256D267E0, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlHorizontalSheetView, (uint64_t)&unk_23E1431E0);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26838);
  }
  return result;
}

unint64_t sub_23E0F3D64()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26848;
  if (!qword_256D26848)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26850);
    v2[0] = sub_23E0F3B94(&qword_256D26808, &qword_256D267F8, (uint64_t (*)(void))sub_23E0F3C18);
    v2[1] = sub_23E0F3B94(&qword_256D26820, &qword_256D267E8, (uint64_t (*)(void))sub_23E0F3C5C);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26848);
  }
  return result;
}

uint64_t sub_23E0F3E00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0F3E10()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0F3E20()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26858);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_23E0F3E90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  CGFloat *v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D26858) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (CGFloat *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_23E0EF9D0(v1 + v4, a1, *v5, v5[1], v5[2], v5[3]);
}

uint64_t sub_23E0F3EFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26870);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

double sub_23E0F3F60@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D26870) - 8) + 80);
  return sub_23E0EF850(v1 + ((v3 + 16) & ~v3), a1);
}

unint64_t sub_23E0F3FB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26880;
  if (!qword_256D26880)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26888);
    v2[0] = sub_23DF89B88(&qword_256D26890, &qword_256D26898, MEMORY[0x24BDEC6F8]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26880);
  }
  return result;
}

uint64_t sub_23E0F4038()
{
  return sub_23DF89B88(&qword_256D268A0, qword_256D268A8, MEMORY[0x24BDEC6F8]);
}

ValueMetadata *_s10HumidifierVMa_0()
{
  return &_s10HumidifierVN_0;
}

uint64_t sub_23E0F4074@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, void (*a4)(_QWORD, _QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v68)(_QWORD, _QWORD);
  void (*v69)(char *, char *, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char *v72;
  void (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(_QWORD, _QWORD);
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void (*v99)(char *, uint64_t, uint64_t);
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  double v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  char *v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int *v140;
  _QWORD *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  double v145;
  char v146;
  char v147;
  void (*v148)(char *, uint64_t);
  double v149;
  double v150;
  double v151;
  char v152;
  char v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  double *v158;
  char *v159;
  void (*v160)(char *, uint64_t);
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  char *v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  char v182;
  uint64_t *v183;
  uint64_t v184;
  uint64_t v185;
  int *v186;
  _QWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  char *v193;
  char *v194;
  char *v195;
  char *v196;
  void (*v197)(uint64_t, char *, uint64_t);
  char *v198;
  char *v199;
  char *v200;
  char *v201;
  double *v202;
  char *v203;
  uint64_t v204;
  char *v205;
  void (*v206)(char *, uint64_t, uint64_t);
  char *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  char *v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  double *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  void (*v230)(_QWORD, _QWORD);
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;

  v230 = a4;
  v232 = a3;
  v233 = a5;
  LODWORD(v231) = a2;
  v208 = sub_23E135958();
  v213 = *(_QWORD *)(v208 - 8);
  MEMORY[0x24BDAC7A8](v208);
  v212 = (char *)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v200 = (char *)&v189 - v8;
  v215 = sub_23E13534C();
  v223 = *(_QWORD *)(v215 - 8);
  MEMORY[0x24BDAC7A8](v215);
  v222 = (double *)((char *)&v189 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v10);
  v202 = (double *)((char *)&v189 - v11);
  v224 = type metadata accessor for Device.Control.IncrementalState(0);
  v229 = *(_QWORD *)(v224 - 8);
  MEMORY[0x24BDAC7A8](v224);
  v210 = (char *)&v189 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v201 = (char *)&v189 - v14;
  v220 = sub_23E1356DC();
  v216 = *(_QWORD *)(v220 - 8);
  MEMORY[0x24BDAC7A8](v220);
  v217 = (char *)&v189 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v16);
  v209 = (char *)&v189 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v221 = (uint64_t)&v189 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v205 = (char *)&v189 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v206 = (void (*)(char *, uint64_t, uint64_t))((char *)&v189 - v23);
  v24 = sub_23E1359AC();
  v25 = *(_QWORD *)(v24 - 8);
  v218 = v24;
  v219 = v25;
  MEMORY[0x24BDAC7A8](v24);
  v199 = (char *)&v189 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v203 = (char *)&v189 - v28;
  MEMORY[0x24BDAC7A8](v29);
  v207 = (char *)&v189 - v30;
  v228 = type metadata accessor for AccessoryControlInfo.State(0);
  MEMORY[0x24BDAC7A8](v228);
  v211 = (uint64_t)&v189 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v32);
  v204 = (uint64_t)&v189 - v33;
  MEMORY[0x24BDAC7A8](v34);
  v214 = (char *)&v189 - v35;
  v36 = sub_23E135520();
  v226 = *(_QWORD *)(v36 - 8);
  v227 = v36;
  MEMORY[0x24BDAC7A8](v36);
  v225 = (char *)&v189 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = type metadata accessor for Device.Control.IncrementalConfig(0);
  MEMORY[0x24BDAC7A8](v38);
  v40 = (char *)&v189 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v41);
  v43 = (char *)&v189 - v42;
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v189 - v45;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)&v189 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_23E134C80();
  v51 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)&v189 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v54);
  v56 = (char *)&v189 - v55;
  MEMORY[0x24BDAC7A8](v57);
  v59 = (char *)&v189 - v58;
  MEMORY[0x24BDAC7A8](v60);
  v62 = (char *)&v189 - v61;
  v63 = a1;
  v65 = v64;
  sub_23DF89C1C(v63, (uint64_t)v49, &qword_256D1D7E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v65) == 1)
  {
    sub_23DF89C7C((uint64_t)v49, &qword_256D1D7E8);
    v66 = type metadata accessor for AccessoryControlInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v233, 1, 1, v66);
  }
  v198 = v59;
  v194 = v46;
  v68 = v230;
  v193 = v56;
  v192 = v43;
  v195 = v53;
  v196 = v40;
  v69 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  v69(v62, v49, v65);
  v197 = (void (*)(uint64_t, char *, uint64_t))v69;
  if ((v231 & 1) == 0)
  {
    v81 = (uint64_t)v225;
    v80 = v226;
    v82 = v227;
    (*(void (**)(char *, _QWORD, uint64_t))(v226 + 104))(v225, *MEMORY[0x24BE4DF20], v227);
    v83 = (uint64_t)v194;
    v84 = v232;
    sub_23E0ABBCC(v232, v81, (uint64_t)v194, 0.0, 100.0, 1.0);
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v81, v82);
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v198, v62, v65);
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30);
    v86 = v65;
    v87 = (unsigned int (*)(_QWORD, _QWORD))v214;
    v88 = &v214[*(int *)(v85 + 48)];
    sub_23DF73E10(v83, (uint64_t)v214, type metadata accessor for Device.Control.IncrementalConfig);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v229 + 56))(v88, 1, 1, v224);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
    v89 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
    v90 = (v89 + 32) & ~v89;
    v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_23E138050;
    sub_23DF73E10(v84, v91 + v90, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
    sub_23DF73E54(v83, type metadata accessor for Device.Control.IncrementalConfig);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v62, v86);
    v92 = (int *)type metadata accessor for AccessoryControlInfo(0);
    v93 = v233;
    v94 = (_QWORD *)(v233 + v92[7]);
    v95 = v92[9];
    v197(v233, v198, v86);
    sub_23DF89384((uint64_t)v87, v93 + v92[5], type metadata accessor for AccessoryControlInfo.State);
    *(_QWORD *)(v93 + v92[11]) = v91;
    *(_BYTE *)(v93 + v92[6]) = 0;
    *v94 = 0;
    v94[1] = 0;
    *(_WORD *)(v93 + v92[8]) = 1028;
    *(_BYTE *)(v93 + v95) = 12;
    *(_BYTE *)(v93 + v92[10]) = 0;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v92 - 1) + 56))(v93, 0, 1, v92);
  }
  v231 = v51;
  v190 = v65;
  v191 = v62;
  if (v68)
  {
    if (v68 == (void (*)(_QWORD, _QWORD))1)
    {
      v70 = *MEMORY[0x24BE4E2D0];
      v71 = v216;
      v72 = v217;
      v73 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 104);
      v74 = v220;
      v73(v217, v70, v220);
      type metadata accessor for HAPControlSolver.Source();
      v75 = v232;
      v76 = v221;
      sub_23E135A48();
      v77 = *(void (**)(char *, uint64_t))(v71 + 8);
      v77(v72, v74);
      v73(v72, v70, v74);
      v78 = v233;
      v79 = (uint64_t)v209;
LABEL_14:
      v110 = sub_23E135AC0();
      v112 = v111;
      v77(v72, v74);
      v114 = (uint64_t)v225;
      v113 = v226;
      v115 = v227;
      (*(void (**)(char *, _QWORD, uint64_t))(v226 + 104))(v225, *MEMORY[0x24BE4DF20], v227);
      sub_23E0ABBCC(v75, v114, (uint64_t)v196, 0.0, 100.0, 1.0);
      (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v114, v115);
      v116 = *(double *)&v110;
      if ((v112 & 1) != 0)
        v116 = 0.0;
      *v222 = v116;
      v117 = v215;
      (*(void (**)(void))(v223 + 104))();
      sub_23DF89C1C(v76, v79, &qword_256D1D530);
      v118 = v218;
      v119 = v219;
      v120 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v219 + 48))(v79, 1, v218);
      v121 = v212;
      v122 = v213;
      if (v120 == 1)
      {
        sub_23DF89C7C(v79, &qword_256D1D530);
        v123 = 0;
      }
      else
      {
        sub_23E135964();
        (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v79, v118);
        v123 = sub_23E13594C();
        (*(void (**)(char *, uint64_t))(v122 + 8))(v121, v208);
      }
      v124 = v190;
      v125 = v224;
      v126 = v231;
      v127 = v232;
      v128 = (uint64_t)v210;
      v129 = v195;
      (*(void (**)(char *, double *, uint64_t))(v223 + 32))(v210, v222, v117);
      *(_BYTE *)(v128 + *(int *)(v125 + 20)) = v123 & 1;
      v130 = v191;
      (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v129, v191, v124);
      v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30);
      v132 = v211;
      v133 = v211 + *(int *)(v131 + 48);
      v134 = (uint64_t)v196;
      sub_23DF73E10((uint64_t)v196, v211, type metadata accessor for Device.Control.IncrementalConfig);
      v135 = type metadata accessor for HAPControlSolver.Source();
      v136 = 1;
      if (*(_BYTE *)(v127 + *(int *)(v135 + 40)) == 1)
      {
        sub_23DF73E10(v128, v133, type metadata accessor for Device.Control.IncrementalState);
        v136 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v229 + 56))(v133, v136, 1, v125);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
      v137 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
      v138 = (v137 + 32) & ~v137;
      v139 = swift_allocObject();
      *(_OWORD *)(v139 + 16) = xmmword_23E138050;
      sub_23DF73E10(v127, v139 + v138, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
      sub_23DF73E54(v128, type metadata accessor for Device.Control.IncrementalState);
      sub_23DF73E54(v134, type metadata accessor for Device.Control.IncrementalConfig);
      sub_23DF89C7C(v221, &qword_256D1D530);
      (*(void (**)(char *, uint64_t))(v126 + 8))(v130, v124);
      v140 = (int *)type metadata accessor for AccessoryControlInfo(0);
      v141 = (_QWORD *)(v78 + v140[7]);
      v142 = v140[9];
      v197(v78, v195, v124);
      sub_23DF89384(v132, v78 + v140[5], type metadata accessor for AccessoryControlInfo.State);
      *(_QWORD *)(v78 + v140[11]) = v139;
      *(_BYTE *)(v78 + v140[6]) = 0;
      *v141 = 0;
      v141[1] = 0;
      *(_WORD *)(v78 + v140[8]) = 1028;
      *(_BYTE *)(v78 + v142) = 12;
      *(_BYTE *)(v78 + v140[10]) = 1;
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v140 - 1) + 56))(v78, 0, 1, v140);
    }
    v96 = *MEMORY[0x24BE4E2E8];
    v108 = v216;
    v99 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 104);
    v75 = v232;
    v78 = v233;
    v76 = v221;
    v79 = (uint64_t)v209;
LABEL_13:
    v72 = v217;
    v109 = v220;
    v99(v217, v96, v220);
    type metadata accessor for HAPControlSolver.Source();
    sub_23E135A48();
    v77 = *(void (**)(char *, uint64_t))(v108 + 8);
    v77(v72, v109);
    v99(v72, v96, v109);
    v74 = v109;
    goto LABEL_14;
  }
  v96 = *MEMORY[0x24BE4E2E8];
  v97 = v216;
  v98 = v217;
  v99 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 104);
  v100 = v220;
  v99(v217, v96, v220);
  v101 = type metadata accessor for HAPControlSolver.Source();
  v102 = (uint64_t)v206;
  sub_23E135A48();
  v230 = *(void (**)(_QWORD, _QWORD))(v97 + 8);
  v230(v98, v100);
  v103 = v219;
  v104 = v218;
  v214 = *(char **)(v219 + 48);
  if (((unsigned int (*)(uint64_t, uint64_t))v214)(v102, 1) == 1)
  {
LABEL_11:
    sub_23DF89C7C(v102, &qword_256D1D530);
    v75 = v232;
    v78 = v233;
    v76 = v221;
    v79 = (uint64_t)v209;
    v108 = v216;
    goto LABEL_13;
  }
  v198 = (char *)v101;
  v105 = v104;
  v206 = *(void (**)(char *, uint64_t, uint64_t))(v103 + 32);
  v206(v207, v102, v104);
  v106 = *MEMORY[0x24BE4E2D0];
  v107 = v220;
  v99(v98, v106, v220);
  v102 = (uint64_t)v205;
  sub_23E135A48();
  v230(v98, v107);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v214)(v102, 1, v105) == 1)
  {
    (*(void (**)(char *, uint64_t))(v219 + 8))(v207, v105);
    goto LABEL_11;
  }
  v143 = v203;
  v206(v203, v102, v105);
  v144 = v220;
  v99(v98, v96, v220);
  v145 = COERCE_DOUBLE(sub_23E135AC0());
  v147 = v146;
  v148 = (void (*)(char *, uint64_t))v230;
  v230(v98, v144);
  v149 = 0.0;
  if ((v147 & 1) != 0)
    v150 = 0.0;
  else
    v150 = v145;
  v99(v98, v106, v144);
  v151 = COERCE_DOUBLE(sub_23E135AC0());
  v153 = v152;
  v148(v98, v144);
  if ((v153 & 1) == 0)
    v149 = v151;
  v155 = (uint64_t)v225;
  v154 = v226;
  v156 = v227;
  (*(void (**)(char *, _QWORD, uint64_t))(v226 + 104))(v225, *MEMORY[0x24BE4DF28], v227);
  v157 = (uint64_t)v192;
  sub_23E0ABBCC(v232, v155, (uint64_t)v192, 0.0, 100.0, 1.0);
  (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v155, v156);
  v158 = v202;
  *v202 = v149;
  v158[1] = v150;
  (*(void (**)(void))(v223 + 104))();
  v159 = v200;
  sub_23E135964();
  LOBYTE(v156) = sub_23E13594C();
  v160 = *(void (**)(char *, uint64_t))(v213 + 8);
  v161 = v208;
  v160(v159, v208);
  v162 = v105;
  v163 = v199;
  (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v199, v143, v162);
  v164 = v233;
  v165 = v224;
  v166 = v231;
  if ((v156 & 1) != 0)
  {
    v167 = 1;
  }
  else
  {
    v168 = v212;
    sub_23E135964();
    v167 = sub_23E13594C();
    v160(v168, v161);
  }
  v169 = *(void (**)(char *, uint64_t))(v219 + 8);
  v169(v163, v218);
  v170 = (uint64_t)v201;
  (*(void (**)(char *, double *, uint64_t))(v223 + 32))(v201, v202, v215);
  *(_BYTE *)(v170 + *(int *)(v165 + 20)) = v167 & 1;
  v171 = v166;
  (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v193, v191, v190);
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ED30);
  v173 = v204 + *(int *)(v172 + 48);
  sub_23DF73E10(v157, v204, type metadata accessor for Device.Control.IncrementalConfig);
  v174 = v198;
  v175 = 1;
  if (*(_BYTE *)(v232 + *((int *)v198 + 10)) == 1)
  {
    sub_23DF73E10(v170, v173, type metadata accessor for Device.Control.IncrementalState);
    v175 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v229 + 56))(v173, v175, 1, v165);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
  v176 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
  v177 = (v176 + 32) & ~v176;
  v178 = swift_allocObject();
  *(_OWORD *)(v178 + 16) = xmmword_23E138050;
  v179 = v232;
  sub_23DF73E10(v232, v178 + v177, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  sub_23DF73E54(v170, type metadata accessor for Device.Control.IncrementalState);
  sub_23DF73E54(v157, type metadata accessor for Device.Control.IncrementalConfig);
  v180 = v218;
  v169(v203, v218);
  v169(v207, v180);
  v181 = v190;
  (*(void (**)(char *, uint64_t))(v171 + 8))(v191, v190);
  v182 = *(_BYTE *)(v179 + *((int *)v174 + 12));
  v183 = (uint64_t *)(v179 + *((int *)v174 + 13));
  v185 = *v183;
  v184 = v183[1];
  v186 = (int *)type metadata accessor for AccessoryControlInfo(0);
  v187 = (_QWORD *)(v164 + v186[7]);
  v188 = v186[9];
  v197(v164, v193, v181);
  sub_23DF89384(v204, v164 + v186[5], type metadata accessor for AccessoryControlInfo.State);
  *(_QWORD *)(v164 + v186[11]) = v178;
  *(_BYTE *)(v164 + v186[6]) = v182;
  *v187 = v185;
  v187[1] = v184;
  *(_WORD *)(v164 + v186[8]) = 1028;
  *(_BYTE *)(v164 + v188) = 12;
  *(_BYTE *)(v164 + v186[10]) = 1;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v186 - 1) + 56))(v164, 0, 1, v186);
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E0F5244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  __n128 v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  v40 = sub_23E135B2C();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v39 = (char *)&v35 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1 = sub_23E1356DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F8F0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E135B8C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v35 - v17;
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v2 + 104))(v4, *MEMORY[0x24BE4E330], v1, v16);
  type metadata accessor for HAPControlSolver.Source();
  sub_23E135A48();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  v19 = sub_23E1359AC();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v7, 1, v19) == 1)
  {
    sub_23DF89C7C((uint64_t)v7, &qword_256D1D530);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
LABEL_4:
    sub_23DF89C7C((uint64_t)v10, &qword_256D1F8F0);
    return sub_23E0E2394((uint64_t)&unk_250EC6600);
  }
  v37 = v18;
  sub_23E1359A0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    goto LABEL_4;
  v23 = v37;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v37, v10, v11);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v23, v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) != *MEMORY[0x24BE4EA78])
  {
    v34 = *(void (**)(char *, uint64_t))(v12 + 8);
    v34(v23, v11);
    v34(v14, v11);
    return sub_23E0E2394((uint64_t)&unk_250EC6600);
  }
  v35 = v12;
  v36 = v11;
  (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
  v24 = v39;
  v25 = v40;
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v39, v14, v40);
  v26 = sub_23E135AFC();
  v27 = *(_QWORD *)(v26 + 16);
  if (v27)
  {
    v28 = (uint64_t *)(v26 + 32);
    v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v25 = v40;
    do
    {
      v31 = *v28++;
      v30 = v31;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v29 = sub_23E0075CC(0, v29[2] + 1, 1, v29);
      v33 = v29[2];
      v32 = v29[3];
      if (v33 >= v32 >> 1)
        v29 = sub_23E0075CC((_QWORD *)(v32 > 1), v33 + 1, 1, v29);
      v29[2] = v33 + 1;
      v29[v33 + 4] = v30;
      --v27;
      v24 = v39;
    }
    while (v27);
  }
  else
  {
    v29 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  v21 = sub_23E073EA4((uint64_t)v29);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v36);
  return v21;
}

uint64_t sub_23E0F5650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __n128 v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  unsigned int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(void);
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;

  v2 = sub_23E13534C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (uint64_t *)((char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, a1, v2, v4);
  v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 88))(v6, v2);
  if (v7 == *MEMORY[0x24BE4DD08])
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    v8 = *v6;
    type metadata accessor for HAPControlSolver.Source();
    v9 = MEMORY[0x24264A360]();
    if ((v10 & 1) == 0)
    {
      if (v9 == 2)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
        v33 = *(unsigned __int8 *)(*(_QWORD *)(v32 - 8) + 80);
        v34 = (v33 + 32) & ~v33;
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_23E138050;
        v15 = v14 + v34;
        v16 = (_QWORD *)(v15 + *(int *)(v32 + 48));
        v17 = (unsigned int *)MEMORY[0x24BE4E2E8];
        goto LABEL_10;
      }
      if (v9 == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
        v12 = *(unsigned __int8 *)(*(_QWORD *)(v11 - 8) + 80);
        v13 = (v12 + 32) & ~v12;
        v14 = swift_allocObject();
        *(_OWORD *)(v14 + 16) = xmmword_23E138050;
        v15 = v14 + v13;
        v16 = (_QWORD *)(v15 + *(int *)(v11 + 48));
        v17 = (unsigned int *)MEMORY[0x24BE4E2D0];
LABEL_10:
        v35 = *v17;
        v36 = sub_23E1356DC();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v15, v35, v36);
        v16[3] = MEMORY[0x24BEE13C8];
        *v16 = v8;
        goto LABEL_11;
      }
    }
    v31 = MEMORY[0x24BEE4AF8];
    return sub_23E0ECA08(v31);
  }
  if (v7 == *MEMORY[0x24BE4DD00])
  {
    (*(void (**)(uint64_t *, uint64_t))(v3 + 96))(v6, v2);
    v19 = *v6;
    v18 = v6[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
    v21 = *(_QWORD *)(v20 - 8);
    v22 = *(_QWORD *)(v21 + 72);
    v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_23E138410;
    v24 = v14 + v23;
    v25 = (_QWORD *)(v24 + *(int *)(v20 + 48));
    v26 = *MEMORY[0x24BE4E2D0];
    v27 = sub_23E1356DC();
    v28 = *(void (**)(void))(*(_QWORD *)(v27 - 8) + 104);
    ((void (*)(unint64_t, uint64_t, uint64_t))v28)(v24, v26, v27);
    v29 = MEMORY[0x24BEE13C8];
    v25[3] = MEMORY[0x24BEE13C8];
    *v25 = v19;
    v30 = (_QWORD *)(v24 + v22 + *(int *)(v20 + 48));
    v28();
    v30[3] = v29;
    *v30 = v18;
LABEL_11:
    v31 = v14;
    return sub_23E0ECA08(v31);
  }
  result = sub_23E137608();
  __break(1u);
  return result;
}

uint64_t sub_23E0F5960@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E0F5AE8(*a1);
  v10 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v11 = sub_23E134C80();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23E138050;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v14 + v13, a2, v11);
  v15 = sub_23E0E212C(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v9;
  a3[1] = 0;
  v16 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v16 + 24));
  *(unint64_t *)((char *)a3 + *(int *)(v16 + 28)) = v15;
  return (*(uint64_t (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 0, 1, v16);
}

unint64_t sub_23E0F5AE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(void);
  unint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D518);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D520);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = swift_allocObject();
  if (a1 == 100)
  {
    *(_OWORD *)(v6 + 16) = xmmword_23E138050;
    v7 = v6 + v5;
    v8 = v6 + v5 + *(int *)(v2 + 48);
    v9 = *MEMORY[0x24BE4E368];
    v10 = sub_23E1356DC();
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v7, v9, v10);
    *(_QWORD *)(v8 + 24) = MEMORY[0x24BEE1328];
    *(_BYTE *)v8 = 0;
  }
  else
  {
    *(_OWORD *)(v6 + 16) = xmmword_23E138410;
    v11 = v6 + v5;
    v12 = (_QWORD *)(v11 + *(int *)(v2 + 48));
    v13 = *MEMORY[0x24BE4E330];
    v14 = sub_23E1356DC();
    v15 = *(void (**)(void))(*(_QWORD *)(v14 - 8) + 104);
    ((void (*)(unint64_t, uint64_t, uint64_t))v15)(v11, v13, v14);
    v12[3] = MEMORY[0x24BEE1768];
    *v12 = a1;
    v16 = v11 + v4 + *(int *)(v2 + 48);
    v15();
    *(_QWORD *)(v16 + 24) = MEMORY[0x24BEE1328];
    *(_BYTE *)v16 = 1;
  }
  return sub_23E0ECA08(v6);
}

uint64_t sub_23E0F5C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D510);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_23E0F5650(a1);
  v10 = sub_23E135538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D528);
  v11 = sub_23E134C80();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_23E138050;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16))(v14 + v13, a2, v11);
  v15 = sub_23E0E212C(v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *a3 = v9;
  a3[1] = 0;
  v16 = type metadata accessor for AccessoryControlInfo.Writer.HAPResult(0);
  sub_23DF73D88((uint64_t)v8, (uint64_t)a3 + *(int *)(v16 + 24));
  *(uint64_t *)((char *)a3 + *(int *)(v16 + 28)) = v15;
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 0, 1, v16);
}

uint64_t sub_23E0F5E04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, _QWORD, uint64_t, __n128);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t inited;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;

  v92 = type metadata accessor for AccessoryControlInfo(0);
  v91 = *(_QWORD *)(v92 - 8);
  MEMORY[0x24BDAC7A8](v92);
  v89 = (uint64_t)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v94 = (char *)&v82 - v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F300);
  MEMORY[0x24BDAC7A8](v5);
  v90 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v96 = (uint64_t)&v82 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D7E8);
  MEMORY[0x24BDAC7A8](v9);
  v95 = (uint64_t)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E1356DC();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D530);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_23E1359AC();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v82 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(void (**)(char *, _QWORD, uint64_t, __n128))(v12 + 104);
  v23(v14, *MEMORY[0x24BE4E330], v11, v20);
  v93 = type metadata accessor for HAPControlSolver.Source();
  v24 = a1;
  sub_23E135A48();
  v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v25(v14, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_23DF89C7C((uint64_t)v17, &qword_256D1D530);
    return MEMORY[0x24BEE4AF8];
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v17, v18);
  ((void (*)(char *, _QWORD, uint64_t))v23)(v14, *MEMORY[0x24BE4E368], v11);
  v26 = sub_23E135AA8();
  v27 = ((uint64_t (*)(char *, uint64_t))v25)(v14, v11);
  if (v26 == 2 || (v28 = v22, v29 = MEMORY[0x24264A360](v27), (v30 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v18);
    return MEMORY[0x24BEE4AF8];
  }
  v31 = (char *)v29;
  v32 = v95;
  v33 = v24;
  sub_23E016D24(v95);
  v88 = v31;
  sub_23E0F4074(v32, v26 & 1, v24, (void (*)(_QWORD, _QWORD))v31, v96);
  v34 = sub_23E1371A0();
  v85 = v35;
  v84 = sub_23E1371A0();
  v83 = v36;
  v37 = sub_23E1371A0();
  v39 = v38;
  v87 = sub_23E1371A0();
  *(_QWORD *)&v86 = v40;
  v41 = sub_23E0F5244();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D21358);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_23E13C150;
  *(_QWORD *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = v34;
  *(_QWORD *)(inited + 48) = v85;
  *(_OWORD *)(inited + 56) = xmmword_23E13C7B0;
  v43 = v83;
  *(_QWORD *)(inited + 72) = v84;
  *(_QWORD *)(inited + 80) = v43;
  *(_OWORD *)(inited + 88) = xmmword_23E13C7C0;
  *(_QWORD *)(inited + 104) = v37;
  *(_QWORD *)(inited + 112) = v39;
  *(_QWORD *)(inited + 120) = 0;
  v44 = (_QWORD *)sub_23E022FA0(inited, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v44 = sub_23E0075D8(0, v44[2] + 1, 1, v44);
  v46 = v44[2];
  v45 = v44[3];
  v47 = v33;
  if (v46 >= v45 >> 1)
    v44 = sub_23E0075D8((_QWORD *)(v45 > 1), v46 + 1, 1, v44);
  v44[2] = v46 + 1;
  v48 = &v44[4 * v46];
  v49 = v87;
  v48[4] = 100;
  v48[5] = v49;
  v48[6] = v86;
  v48[7] = 0;
  if ((v26 & 1) != 0)
    v50 = (uint64_t)v88;
  else
    v50 = 100;
  v51 = (uint64_t)v94;
  v88 = v28;
  sub_23E135988();
  v52 = (int *)v92;
  v53 = v51 + *(int *)(v92 + 20);
  *(_QWORD *)v53 = v44;
  *(_BYTE *)(v53 + 8) = 1;
  *(_QWORD *)(v53 + 16) = v50;
  *(_BYTE *)(v53 + 24) = 0;
  type metadata accessor for AccessoryControlInfo.State(0);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D538);
  v54 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlInfo.Writer(0) - 8) + 80);
  v55 = (v54 + 32) & ~v54;
  v56 = swift_allocObject();
  v86 = xmmword_23E138050;
  *(_OWORD *)(v56 + 16) = xmmword_23E138050;
  v87 = v47;
  sub_23DF73E10(v47, v56 + v55, (uint64_t (*)(_QWORD))type metadata accessor for HAPControlSolver.Source);
  v57 = (_QWORD *)(v51 + v52[7]);
  v58 = v52[9];
  *(_QWORD *)(v51 + v52[11]) = v56;
  *(_BYTE *)(v51 + v52[6]) = 0;
  *v57 = 0;
  v57[1] = 0;
  *(_WORD *)(v51 + v52[8]) = 1028;
  *(_BYTE *)(v51 + v58) = 10;
  *(_BYTE *)(v51 + v52[10]) = 1;
  v59 = v96;
  v60 = v90;
  sub_23DF89C1C(v96, v90, &qword_256D1F300);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v91 + 48))(v60, 1, v52) == 1)
  {
    sub_23DF89C7C(v60, &qword_256D1F300);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v61 = type metadata accessor for AccessoryControlGroup(0);
    v62 = *(unsigned __int8 *)(*(_QWORD *)(v61 - 8) + 80);
    v63 = (v62 + 32) & ~v62;
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = v86;
    sub_23DF73E10(v51, v64 + v63, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v65 = (uint64_t *)(v87 + *(int *)(v93 + 28));
    v67 = *v65;
    v66 = v65[1];
    v68 = (_QWORD *)(v64 + v63 + *(int *)(v61 + 24));
    v69 = (_QWORD *)(v64 + v63 + *(int *)(v61 + 20));
    *v69 = v67;
    v69[1] = v66;
    *v68 = 0;
    v68[1] = 0;
    swift_bridgeObjectRetain();
    sub_23DF73E54(v51, type metadata accessor for AccessoryControlInfo);
    v70 = v59;
  }
  else
  {
    v72 = v89;
    sub_23DF89384(v60, v89, type metadata accessor for AccessoryControlInfo);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1D540);
    v73 = type metadata accessor for AccessoryControlGroup(0);
    v74 = *(unsigned __int8 *)(*(_QWORD *)(v73 - 8) + 80);
    v75 = (v74 + 32) & ~v74;
    v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = v86;
    v76 = v64 + v75 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1EED0) + 48);
    sub_23DF73E10(v72, v64 + v75, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E10(v51, v76, type metadata accessor for AccessoryControlInfo);
    type metadata accessor for AccessoryControlGroup.LayoutType(0);
    swift_storeEnumTagMultiPayload();
    v77 = (uint64_t *)(v87 + *(int *)(v93 + 28));
    v79 = *v77;
    v78 = v77[1];
    v80 = (_QWORD *)(v64 + v75 + *(int *)(v73 + 24));
    v81 = (_QWORD *)(v64 + v75 + *(int *)(v73 + 20));
    *v81 = v79;
    v81[1] = v78;
    *v80 = 0;
    v80[1] = 0;
    swift_bridgeObjectRetain();
    sub_23DF73E54(v72, type metadata accessor for AccessoryControlInfo);
    sub_23DF73E54(v51, type metadata accessor for AccessoryControlInfo);
    v70 = v96;
  }
  sub_23DF89C7C(v70, &qword_256D1F300);
  sub_23DF89C7C(v95, &qword_256D1D7E8);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v88, v18);
  return v64;
}

uint64_t destroy for WheelPickerControlView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_23DF985F0(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_BYTE *)(a1 + 112), *(_BYTE *)(a1 + 113));
}

uint64_t initializeWithCopy for WheelPickerControlView(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_QWORD *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  v14 = *(_QWORD *)(a2 + 104);
  v15 = *(_QWORD *)(a2 + 48);
  v9 = *(_BYTE *)(a2 + 112);
  v10 = *(_BYTE *)(a2 + 113);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_23DF98590(v15, v4, v5, v6, v7, v8, v13, v14, v9, v10);
  *(_QWORD *)(a1 + 48) = v15;
  *(_QWORD *)(a1 + 56) = v4;
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v8;
  *(_QWORD *)(a1 + 96) = v13;
  *(_QWORD *)(a1 + 104) = v14;
  *(_BYTE *)(a1 + 112) = v9;
  *(_BYTE *)(a1 + 113) = v12;
  return a1;
}

uint64_t assignWithCopy for WheelPickerControlView(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v24;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *((_BYTE *)v2 + 8);
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = v2[3];
  swift_retain();
  swift_release();
  v4 = v2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)v2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = v2[6];
  v6 = v2[7];
  v7 = v2[8];
  v8 = v2[9];
  v9 = v2[10];
  v10 = v2[11];
  v11 = v2[12];
  v12 = v2[13];
  v24 = *((_BYTE *)v2 + 112);
  LOBYTE(v2) = *((_BYTE *)v2 + 113);
  sub_23DF98590(v5, v6, v7, v8, v9, v10, v11, v12, v24, (char)v2);
  v13 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  v17 = *(_QWORD *)(a1 + 80);
  v18 = *(_QWORD *)(a1 + 88);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_BYTE *)(a1 + 112);
  v22 = *(_BYTE *)(a1 + 113);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  *(_QWORD *)(a1 + 104) = v12;
  *(_BYTE *)(a1 + 112) = v24;
  *(_BYTE *)(a1 + 113) = (_BYTE)v2;
  sub_23DF985F0(v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  return a1;
}

__n128 __swift_memcpy114_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_WORD *)(a1 + 112) = *((_WORD *)a2 + 56);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for WheelPickerControlView(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(_BYTE *)(a2 + 112);
  v5 = *(_BYTE *)(a2 + 113);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_QWORD *)(a1 + 96);
  v13 = *(_QWORD *)(a1 + 104);
  v14 = *(_BYTE *)(a1 + 112);
  v15 = *(_BYTE *)(a1 + 113);
  v16 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v16;
  v17 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v17;
  *(_BYTE *)(a1 + 112) = v4;
  *(_BYTE *)(a1 + 113) = v5;
  sub_23DF985F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for WheelPickerControlView(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 114))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WheelPickerControlView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 112) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 114) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 114) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WheelPickerControlView()
{
  return &type metadata for WheelPickerControlView;
}

uint64_t sub_23E0F6A84()
{
  return swift_getOpaqueTypeConformance2();
}

void (*sub_23E0F6A94(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[8] = v4;
  v3[9] = v5;
  v6 = *(_QWORD *)(v1 + 32);
  v3[10] = v6;
  v7 = *(_BYTE *)(v1 + 40);
  *((_BYTE *)v3 + 25) = v7;
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  *((_BYTE *)v3 + 24) = v7;
  swift_retain();
  swift_retain();
  v3[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_256D269D8);
  MEMORY[0x24264B734]();
  return sub_23E0F6B24;
}

void sub_23E0F6B24(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD **)a1;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v3 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 25);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  *v1 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  v1[1] = v6;
  v1[2] = v5;
  *((_BYTE *)v1 + 24) = v4;
  v1[6] = v2;
  *((_BYTE *)v1 + 56) = v3;
  sub_23E136E70();
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_23E0F6B8C()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (**v6)@<X0>(uint64_t@<X8>);
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _OWORD v16[3];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int16 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int16 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int16 v34;
  _OWORD v35[4];
  __int16 v36;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26900);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26908);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t (**)@<X0>(uint64_t@<X8>))((char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = *((_WORD *)v0 + 56);
  v7 = v0[6];
  v27 = v0[5];
  v28 = v7;
  v8 = v0[4];
  v9 = v0[1];
  v22 = *v0;
  v23 = v9;
  v10 = v0[3];
  v24 = v0[2];
  v25 = v10;
  v26 = v8;
  v35[2] = v27;
  v35[3] = v7;
  v36 = v29;
  v35[0] = v10;
  v35[1] = v8;
  v34 = v29;
  v32 = v27;
  v33 = v7;
  v30 = v10;
  v31 = v8;
  sub_23E0F7A74((uint64_t)&v22);
  sub_23DF98EC8((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v16);
  sub_23DF98EC8((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  sub_23E0F7B28((uint64_t)&v22);
  if ((BYTE1(v17) & 1) != 0)
  {
    v18 = v26;
    v19 = v27;
    v20 = v28;
    v21 = v29;
    v16[0] = v22;
    v16[1] = v23;
    v16[2] = v24;
    v17 = v25;
    sub_23E0F6E48((uint64_t)v3);
    sub_23DF89C1C((uint64_t)v3, (uint64_t)v6, &qword_256D26900);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D26910);
    sub_23DF89B88(&qword_256D26918, &qword_256D26910, MEMORY[0x24BDEC6F8]);
    sub_23E0F7BD8();
    sub_23E136480();
    return sub_23DF89C7C((uint64_t)v3, &qword_256D26900);
  }
  else
  {
    v12 = swift_allocObject();
    v13 = v27;
    *(_OWORD *)(v12 + 80) = v26;
    *(_OWORD *)(v12 + 96) = v13;
    *(_OWORD *)(v12 + 112) = v28;
    *(_WORD *)(v12 + 128) = v29;
    v14 = v23;
    *(_OWORD *)(v12 + 16) = v22;
    *(_OWORD *)(v12 + 32) = v14;
    v15 = v25;
    *(_OWORD *)(v12 + 48) = v24;
    *(_OWORD *)(v12 + 64) = v15;
    *v6 = sub_23E0F7D98;
    v6[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v12;
    swift_storeEnumTagMultiPayload();
    sub_23E0F7A74((uint64_t)&v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D26910);
    sub_23DF89B88(&qword_256D26918, &qword_256D26910, MEMORY[0x24BDEC6F8]);
    sub_23E0F7BD8();
    return sub_23E136480();
  }
}

uint64_t sub_23E0F6E48@<X0>(uint64_t a1@<X8>)
{
  __int128 *v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t KeyPath;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 *v58;
  _OWORD v59[2];
  uint64_t v60;
  char v61;
  __int128 v62;
  _BYTE v63[32];
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int16 v68;

  v57 = a1;
  v50 = sub_23E136048();
  v52 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v3 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26948);
  v48 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26958);
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26940);
  MEMORY[0x24BDAC7A8](v51);
  v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26930);
  MEMORY[0x24BDAC7A8](v55);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26900);
  MEMORY[0x24BDAC7A8](v56);
  v49 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1[5];
  v65 = v1[4];
  v66 = v14;
  v67 = v1[6];
  v68 = *((_WORD *)v1 + 56);
  v15 = v1[1];
  v62 = *v1;
  *(_OWORD *)v63 = v15;
  v16 = v1[3];
  *(_OWORD *)&v63[16] = v1[2];
  v64 = v16;
  sub_23E1372C0();
  sub_23E0F7A74((uint64_t)&v62);
  v17 = sub_23E1372B4();
  v18 = swift_allocObject();
  v19 = MEMORY[0x24BEE6930];
  *(_QWORD *)(v18 + 16) = v17;
  *(_QWORD *)(v18 + 24) = v19;
  v20 = v66;
  *(_OWORD *)(v18 + 96) = v65;
  *(_OWORD *)(v18 + 112) = v20;
  *(_OWORD *)(v18 + 128) = v67;
  *(_WORD *)(v18 + 144) = v68;
  v21 = *(_OWORD *)v63;
  *(_OWORD *)(v18 + 32) = v62;
  *(_OWORD *)(v18 + 48) = v21;
  v22 = v64;
  *(_OWORD *)(v18 + 64) = *(_OWORD *)&v63[16];
  *(_OWORD *)(v18 + 80) = v22;
  sub_23E0F7A74((uint64_t)&v62);
  v23 = sub_23E1372B4();
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = v23;
  *(_QWORD *)(v24 + 24) = v19;
  v25 = v66;
  *(_OWORD *)(v24 + 96) = v65;
  *(_OWORD *)(v24 + 112) = v25;
  *(_OWORD *)(v24 + 128) = v67;
  *(_WORD *)(v24 + 144) = v68;
  v26 = *(_OWORD *)v63;
  *(_OWORD *)(v24 + 32) = v62;
  *(_OWORD *)(v24 + 48) = v26;
  v27 = v64;
  *(_OWORD *)(v24 + 64) = *(_OWORD *)&v63[16];
  *(_OWORD *)(v24 + 80) = v27;
  sub_23E136E94();
  v58 = &v62;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26960);
  sub_23E0F7E48();
  sub_23E136E28();
  sub_23E13603C();
  sub_23DF89B88(&qword_256D26950, &qword_256D26948, MEMORY[0x24BDF4570]);
  v28 = v50;
  sub_23E13699C();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v3, v28);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v6, v4);
  if ((BYTE8(v62) & 1) != 0)
  {
    v59[0] = *(_OWORD *)v63;
    *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)&v63[9];
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D269D8);
    MEMORY[0x24264B734](&v60, v30);
    v29 = v61 ^ 1;
  }
  else
  {
    v29 = 0;
  }
  v31 = v53;
  v32 = v54;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v10, v8, v54);
  v10[*(int *)(v51 + 36)] = v29 & 1;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
  v59[0] = *(_OWORD *)v63;
  *(_OWORD *)((char *)v59 + 9) = *(_OWORD *)&v63[9];
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D269D8);
  MEMORY[0x24264B734](&v60, v33);
  LOBYTE(v31) = v61;
  KeyPath = swift_getKeyPath();
  v35 = swift_allocObject();
  *(_BYTE *)(v35 + 16) = v31;
  sub_23DF89C1C((uint64_t)v10, (uint64_t)v12, &qword_256D26940);
  v36 = (uint64_t *)&v12[*(int *)(v55 + 36)];
  *v36 = KeyPath;
  v36[1] = (uint64_t)sub_23DFD4188;
  v36[2] = v35;
  sub_23DF89C7C((uint64_t)v10, &qword_256D26940);
  LOBYTE(KeyPath) = sub_23E136774();
  sub_23E135D00();
  v38 = v37;
  v40 = v39;
  v42 = v41;
  v44 = v43;
  v45 = v49;
  sub_23DF89C1C((uint64_t)v12, v49, &qword_256D26930);
  swift_release();
  swift_release();
  v46 = v45 + *(int *)(v56 + 36);
  *(_BYTE *)v46 = KeyPath;
  *(_QWORD *)(v46 + 8) = v38;
  *(_QWORD *)(v46 + 16) = v40;
  *(_QWORD *)(v46 + 24) = v42;
  *(_QWORD *)(v46 + 32) = v44;
  *(_BYTE *)(v46 + 40) = 0;
  sub_23DF89C7C((uint64_t)v12, &qword_256D26930);
  return sub_23DF89340(v45, v57, &qword_256D26900);
}

_QWORD *sub_23E0F7430@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D269D8);
  result = MEMORY[0x24264B734](&v5, v2);
  if ((v6 & 1) != 0)
    v4 = 0;
  else
    v4 = v5;
  *a1 = v4;
  return result;
}

uint64_t sub_23E0F7494(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  char v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int16 v27;

  v4 = *a1;
  v5 = *(_OWORD *)(a4 + 80);
  v24 = *(_OWORD *)(a4 + 64);
  v25 = v5;
  v26 = *(_OWORD *)(a4 + 96);
  v27 = *(_WORD *)(a4 + 112);
  v6 = *(_OWORD *)(a4 + 16);
  v20 = *(_OWORD *)a4;
  v21 = v6;
  v7 = *(_OWORD *)(a4 + 48);
  v22 = *(_OWORD *)(a4 + 32);
  v23 = v7;
  sub_23E0F7A74(a4);
  v9 = sub_23E0F6A94(v19);
  if (*(_BYTE *)(v8 + 8) != 1)
    *(_QWORD *)v8 = v4;
  ((void (*)(_QWORD *, _QWORD))v9)(v19, 0);
  v10 = v24;
  v17 = *((_QWORD *)&v23 + 1);
  v18 = v23;
  v11 = *((_QWORD *)&v24 + 1);
  v12 = v25;
  v13 = v26;
  v14 = v27;
  v15 = HIBYTE(v27);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return sub_23DF985F0(v18, v17, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, v15);
}

uint64_t sub_23E0F7598(uint64_t a1)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  uint64_t v7;
  char v8;

  v7 = *(_QWORD *)a1;
  v8 = *(_BYTE *)(a1 + 8);
  v2 = swift_allocObject();
  v3 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v2 + 80) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v2 + 96) = v3;
  *(_OWORD *)(v2 + 112) = *(_OWORD *)(a1 + 96);
  *(_WORD *)(v2 + 128) = *(_WORD *)(a1 + 112);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v4;
  v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v2 + 64) = v5;
  sub_23E0F8198((uint64_t)&v7);
  sub_23E0F7A74(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D269E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26978);
  sub_23DF89B88(&qword_256D269E8, &qword_256D269E0, MEMORY[0x24BEE12D8]);
  sub_23E0F7EAC();
  sub_23E0F81C0();
  return sub_23E136F18();
}

uint64_t sub_23E0F76B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t KeyPath;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[72];
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;

  v40 = a2;
  v47 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DBA0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26980);
  v42 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D269F8);
  v45 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v39 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26978);
  MEMORY[0x24BDAC7A8](v44);
  v43 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *a1;
  v11 = a1[1];
  v13 = a1[2];
  *(_QWORD *)&v49 = v11;
  *((_QWORD *)&v49 + 1) = v13;
  sub_23DF8DC18();
  swift_bridgeObjectRetain();
  v14 = sub_23E13693C();
  v16 = v15;
  v18 = v17;
  v38[1] = v17;
  v20 = v19 & 1;
  v21 = sub_23E1367C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v6, 1, 1, v21);
  v22 = sub_23E136804();
  sub_23DF89C7C((uint64_t)v6, &qword_256D1DBA0);
  KeyPath = swift_getKeyPath();
  *(_QWORD *)&v49 = v14;
  *((_QWORD *)&v49 + 1) = v16;
  LOBYTE(v50) = v20;
  *((_QWORD *)&v50 + 1) = v18;
  *(_QWORD *)&v51 = v12;
  BYTE8(v51) = 0;
  *(_QWORD *)&v52 = v12;
  WORD4(v52) = 0;
  v53 = KeyPath;
  v54 = v22;
  sub_23E1367F8();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26988);
  v25 = sub_23E0F7F88();
  sub_23E136960();
  v26 = v16;
  v27 = v39;
  sub_23DFA055C(v14, v26, v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v49 = v24;
  *((_QWORD *)&v49 + 1) = v25;
  swift_getOpaqueTypeConformance2();
  v28 = v41;
  sub_23E136B64();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v8, v28);
  v29 = v40;
  v30 = *(_OWORD *)(v40 + 96);
  v51 = *(_OWORD *)(v40 + 80);
  v52 = v30;
  LOWORD(v53) = *(_WORD *)(v40 + 112);
  v31 = *(_OWORD *)(v40 + 64);
  v49 = *(_OWORD *)(v40 + 48);
  v50 = v31;
  sub_23E0F7A74(v40);
  sub_23DF98EC8((uint64_t)&v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v48);
  sub_23DF98EC8((uint64_t)&v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  sub_23E0F7B28(v29);
  if (v48[0] == 1)
    v32 = sub_23E136C6C();
  else
    v32 = sub_23E136C48();
  v33 = v32;
  v34 = v45;
  v35 = (uint64_t)v43;
  v36 = v46;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v43, v27, v46);
  *(_QWORD *)(v35 + *(int *)(v44 + 36)) = v33;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v36);
  return sub_23DF89340(v35, v47, &qword_256D26978);
}

uint64_t sub_23E0F7A74(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_BYTE *)(a1 + 113);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23DF98590(v12, v11, v2, v3, v4, v5, v6, v10, v7, v8);
  return a1;
}

uint64_t sub_23E0F7B28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 48);
  v3 = *(_QWORD *)(a1 + 72);
  v4 = *(_QWORD *)(a1 + 80);
  v5 = *(_QWORD *)(a1 + 88);
  v6 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 104);
  v7 = *(_BYTE *)(a1 + 112);
  v8 = *(_BYTE *)(a1 + 113);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_23DF985F0(v12, v11, v2, v3, v4, v5, v6, v10, v7, v8);
  return a1;
}

unint64_t sub_23E0F7BD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26920;
  if (!qword_256D26920)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26900);
    v2[0] = sub_23E0F7C44();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26920);
  }
  return result;
}

unint64_t sub_23E0F7C44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26928;
  if (!qword_256D26928)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26930);
    v2[0] = sub_23E0F7CC8();
    v2[1] = sub_23DF89B88(&qword_256D1FD50, &qword_256D1FD58, MEMORY[0x24BDF1248]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26928);
  }
  return result;
}

unint64_t sub_23E0F7CC8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256D26938;
  if (!qword_256D26938)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26940);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26948);
    v2[3] = sub_23E136048();
    v2[4] = sub_23DF89B88(&qword_256D26950, &qword_256D26948, MEMORY[0x24BDF4570]);
    v2[5] = MEMORY[0x24BDEDB38];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23E0484C0();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26938);
  }
  return result;
}

uint64_t sub_23E0F7D98@<X0>(uint64_t a1@<X8>)
{
  return sub_23E0F6E48(a1);
}

_QWORD *sub_23E0F7DBC@<X0>(_QWORD *a1@<X8>)
{
  return sub_23E0F7430(a1);
}

uint64_t objectdestroy_2Tm_0()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_23DF985F0(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_BYTE *)(v0 + 144), *(_BYTE *)(v0 + 145));
  return swift_deallocObject();
}

uint64_t sub_23E0F7E34(uint64_t *a1)
{
  uint64_t v1;

  return sub_23E0F7494(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + 32);
}

uint64_t sub_23E0F7E40()
{
  uint64_t v0;

  return sub_23E0F7598(*(_QWORD *)(v0 + 16));
}

unint64_t sub_23E0F7E48()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D26968;
  if (!qword_256D26968)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26960);
    v2 = sub_23E0F7EAC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D26968);
  }
  return result;
}

unint64_t sub_23E0F7EAC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_256D26970;
  if (!qword_256D26970)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26978);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26980);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26988);
    sub_23E0F7F88();
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_23DF89B88(&qword_256D20610, &qword_256D20618, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D26970);
  }
  return result;
}

unint64_t sub_23E0F7F88()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26990;
  if (!qword_256D26990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26988);
    v2[0] = sub_23E0F800C();
    v2[1] = sub_23DF89B88(&qword_256D1E920, &qword_256D1E928, MEMORY[0x24BDF1028]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26990);
  }
  return result;
}

unint64_t sub_23E0F800C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26998;
  if (!qword_256D26998)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D269A0);
    v2[0] = sub_23E0F8090();
    v2[1] = sub_23DF89B88(&qword_256D269C8, &qword_256D269D0, MEMORY[0x24BDEFB48]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26998);
  }
  return result;
}

unint64_t sub_23E0F8090()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_256D269A8;
  if (!qword_256D269A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D269B0);
    v2 = sub_23DF89B88(&qword_256D269B8, &qword_256D269C0, MEMORY[0x24BDEFB48]);
    v3[0] = MEMORY[0x24BDF1F80];
    v3[1] = v2;
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v3);
    atomic_store(result, (unint64_t *)&qword_256D269A8);
  }
  return result;
}

uint64_t sub_23E0F811C()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm_13()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_23DF985F0(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_BYTE *)(v0 + 128), *(_BYTE *)(v0 + 129));
  return swift_deallocObject();
}

uint64_t sub_23E0F8190@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_23E0F76B0(a1, v2 + 16, a2);
}

uint64_t sub_23E0F8198(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_23E0F81C0()
{
  unint64_t result;

  result = qword_256D269F0;
  if (!qword_256D269F0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.Control.PickerViewConfig.Option, &type metadata for Device.Control.PickerViewConfig.Option);
    atomic_store(result, (unint64_t *)&qword_256D269F0);
  }
  return result;
}

unint64_t sub_23E0F8210()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26A00;
  if (!qword_256D26A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256D26A08);
    v2[0] = sub_23DF89B88(&qword_256D26918, &qword_256D26910, MEMORY[0x24BDEC6F8]);
    v2[1] = sub_23E0F7BD8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26A00);
  }
  return result;
}

uint64_t *sub_23E0F8294(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v62 = *a2;
    *a1 = *a2;
    v57 = (uint64_t *)(v62 + ((v4 + 16) & ~(unint64_t)v4));
  }
  else
  {
    *a1 = *a2;
    v5 = a3[5];
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23E134C80();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    v9 = (int *)type metadata accessor for Device();
    v10 = v9[5];
    v11 = &v6[v10];
    v12 = &v7[v10];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = v9[6];
    v15 = &v6[v14];
    v16 = &v7[v14];
    v17 = *(_QWORD *)&v7[v14 + 8];
    *(_QWORD *)v15 = *(_QWORD *)&v7[v14];
    *((_QWORD *)v15 + 1) = v17;
    v18 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v19 = &v15[v18];
    v20 = &v16[v18];
    v21 = sub_23E135910();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    v23 = v9[7];
    v24 = &v6[v23];
    v25 = &v7[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = v9[8];
    v28 = &v6[v27];
    v29 = &v7[v27];
    v75 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v75;
    *(_QWORD *)&v6[v9[9]] = *(_QWORD *)&v7[v9[9]];
    v6[v9[10]] = v7[v9[10]];
    v6[v9[11]] = v7[v9[11]];
    v6[v9[12]] = v7[v9[12]];
    v6[v9[13]] = v7[v9[13]];
    *(_QWORD *)&v6[v9[14]] = *(_QWORD *)&v7[v9[14]];
    v6[v9[15]] = v7[v9[15]];
    v30 = v9[16];
    v31 = &v6[v30];
    v32 = &v7[v30];
    v74 = *((_QWORD *)v32 + 1);
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_QWORD *)v31 + 1) = v74;
    v33 = v9[17];
    v34 = &v6[v33];
    v35 = &v7[v33];
    v72 = *((_QWORD *)v35 + 1);
    *(_QWORD *)v34 = *(_QWORD *)v35;
    *((_QWORD *)v34 + 1) = v72;
    v36 = v9[18];
    v37 = &v6[v36];
    v38 = &v7[v36];
    v39 = *((_QWORD *)v38 + 1);
    *(_QWORD *)v37 = *(_QWORD *)v38;
    *((_QWORD *)v37 + 1) = v39;
    v6[v9[19]] = v7[v9[19]];
    v6[v9[20]] = v7[v9[20]];
    v40 = v9[21];
    v41 = &v6[v40];
    v42 = &v7[v40];
    v43 = *((_QWORD *)v42 + 1);
    *(_QWORD *)v41 = *(_QWORD *)v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = a3[6];
    v45 = a3[7];
    v46 = (uint64_t *)((char *)a1 + v44);
    v47 = (uint64_t *)((char *)a2 + v44);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    v46[2] = v47[2];
    v49 = (uint64_t *)((char *)a1 + v45);
    v50 = (uint64_t *)((char *)a2 + v45);
    v52 = *v50;
    v51 = v50[1];
    *v49 = v52;
    v49[1] = v51;
    v53 = a3[8];
    v54 = (char *)a1 + v53;
    v55 = (char *)a2 + v53;
    v70 = *((_QWORD *)v55 + 1);
    v71 = *(_QWORD *)v55;
    v68 = *((_QWORD *)v55 + 3);
    v69 = *((_QWORD *)v55 + 2);
    v73 = a1;
    v56 = *((_QWORD *)v55 + 5);
    v66 = *((_QWORD *)v55 + 6);
    v67 = *((_QWORD *)v55 + 4);
    v65 = *((_QWORD *)v55 + 7);
    LOBYTE(v20) = v55[64];
    LOBYTE(v22) = v55[65];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_23DF98590(v71, v70, v69, v68, v67, v56, v66, v65, (char)v20, (char)v22);
    *(_QWORD *)v54 = v71;
    *((_QWORD *)v54 + 1) = v70;
    *((_QWORD *)v54 + 2) = v69;
    *((_QWORD *)v54 + 3) = v68;
    *((_QWORD *)v54 + 4) = v67;
    *((_QWORD *)v54 + 5) = v56;
    v57 = v73;
    *((_QWORD *)v54 + 6) = v66;
    *((_QWORD *)v54 + 7) = v65;
    v54[64] = (char)v20;
    v54[65] = v64;
    v58 = a3[9];
    v59 = (uint64_t *)((char *)v73 + v58);
    v60 = (uint64_t *)((char *)a2 + v58);
    v61 = v60[1];
    *v59 = *v60;
    v59[1] = v61;
  }
  swift_retain();
  return v57;
}

uint64_t sub_23E0F85FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v7 = v4 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v9 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v10 = a1 + *(int *)(a2 + 32);
  sub_23DF985F0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64), *(_BYTE *)(v10 + 65));
  return swift_release();
}

_QWORD *sub_23E0F878C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  *a1 = *a2;
  v3 = a3[5];
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v6 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
  v7 = (int *)type metadata accessor for Device();
  v8 = v7[5];
  v9 = &v4[v8];
  v10 = &v5[v8];
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *((_QWORD *)v9 + 1) = v11;
  v12 = v7[6];
  v13 = &v4[v12];
  v14 = &v5[v12];
  v15 = *(_QWORD *)&v5[v12 + 8];
  *(_QWORD *)v13 = *(_QWORD *)&v5[v12];
  *((_QWORD *)v13 + 1) = v15;
  v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = sub_23E135910();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  v21 = v7[7];
  v22 = &v4[v21];
  v23 = &v5[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = v7[8];
  v26 = &v4[v25];
  v27 = &v5[v25];
  v71 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v71;
  *(_QWORD *)&v4[v7[9]] = *(_QWORD *)&v5[v7[9]];
  v4[v7[10]] = v5[v7[10]];
  v4[v7[11]] = v5[v7[11]];
  v4[v7[12]] = v5[v7[12]];
  v4[v7[13]] = v5[v7[13]];
  *(_QWORD *)&v4[v7[14]] = *(_QWORD *)&v5[v7[14]];
  v4[v7[15]] = v5[v7[15]];
  v28 = v7[16];
  v29 = &v4[v28];
  v30 = &v5[v28];
  v70 = *((_QWORD *)v30 + 1);
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = v70;
  v31 = v7[17];
  v32 = &v4[v31];
  v33 = &v5[v31];
  v69 = *((_QWORD *)v33 + 1);
  *(_QWORD *)v32 = *(_QWORD *)v33;
  *((_QWORD *)v32 + 1) = v69;
  v34 = v7[18];
  v35 = &v4[v34];
  v36 = &v5[v34];
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *((_QWORD *)v35 + 1) = v37;
  v4[v7[19]] = v5[v7[19]];
  v4[v7[20]] = v5[v7[20]];
  v38 = v7[21];
  v39 = &v4[v38];
  v40 = &v5[v38];
  v41 = *((_QWORD *)v40 + 1);
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = v41;
  v42 = a3[6];
  v43 = a3[7];
  v44 = (_QWORD *)((char *)a1 + v42);
  v45 = (_QWORD *)((char *)a2 + v42);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v44[2] = v45[2];
  v47 = (_QWORD *)((char *)a1 + v43);
  v48 = (_QWORD *)((char *)a2 + v43);
  v50 = *v48;
  v49 = v48[1];
  *v47 = v50;
  v47[1] = v49;
  v51 = a3[8];
  v52 = (char *)a1 + v51;
  v53 = (char *)a2 + v51;
  v63 = *(_QWORD *)v53;
  v64 = *((_QWORD *)v53 + 1);
  v54 = *((_QWORD *)v53 + 3);
  v55 = *((_QWORD *)v53 + 4);
  v65 = *((_QWORD *)v53 + 2);
  v66 = *((_QWORD *)v53 + 6);
  v67 = *((_QWORD *)v53 + 7);
  v68 = *((_QWORD *)v53 + 5);
  v56 = v53[64];
  v62 = v53[65];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_23DF98590(v63, v64, v65, v54, v55, v68, v66, v67, v56, v62);
  *(_QWORD *)v52 = v63;
  *((_QWORD *)v52 + 1) = v64;
  *((_QWORD *)v52 + 2) = v65;
  *((_QWORD *)v52 + 3) = v54;
  *((_QWORD *)v52 + 4) = v55;
  *((_QWORD *)v52 + 5) = v68;
  *((_QWORD *)v52 + 6) = v66;
  *((_QWORD *)v52 + 7) = v67;
  v52[64] = v56;
  v52[65] = v62;
  v57 = a3[9];
  v58 = (_QWORD *)((char *)a1 + v57);
  v59 = (_QWORD *)((char *)a2 + v57);
  v60 = v59[1];
  *v58 = *v59;
  v58[1] = v60;
  swift_retain();
  return a1;
}

_QWORD *sub_23E0F8AC4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  char *v5;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  char v70;
  _QWORD *v71;
  int *v72;
  _QWORD *v73;

  *a1 = *a2;
  v3 = a3[5];
  v5 = (char *)a1 + v3;
  v7 = (char *)a2 + v3;
  v8 = a2;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v5, v7, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v5[v11];
  v13 = &v7[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &v5[v14];
  v16 = &v7[v14];
  *(_QWORD *)v15 = *(_QWORD *)&v7[v14];
  *((_QWORD *)v15 + 1) = *(_QWORD *)&v7[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v18 = &v15[v17];
  v19 = &v16[v17];
  v20 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v10[7];
  v22 = &v5[v21];
  v23 = &v7[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v10[8];
  v25 = &v5[v24];
  v26 = &v7[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[v10[9]] = *(_QWORD *)&v7[v10[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[v10[10]] = v7[v10[10]];
  v5[v10[11]] = v7[v10[11]];
  v5[v10[12]] = v7[v10[12]];
  v5[v10[13]] = v7[v10[13]];
  *(_QWORD *)&v5[v10[14]] = *(_QWORD *)&v7[v10[14]];
  swift_retain();
  swift_release();
  v5[v10[15]] = v7[v10[15]];
  v27 = v10[16];
  v28 = &v5[v27];
  v29 = &v7[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v10[17];
  v31 = &v5[v30];
  v32 = &v7[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = v10[18];
  v34 = &v5[v33];
  v35 = &v7[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[v10[19]] = v7[v10[19]];
  v5[v10[20]] = v7[v10[20]];
  v36 = v10[21];
  v37 = &v5[v36];
  v38 = &v7[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v71 = a1;
  v72 = a3;
  v39 = a3[6];
  v40 = (char *)a1 + v39;
  v73 = v8;
  v41 = (char *)v8 + v39;
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)v8 + v39);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[7];
  v43 = (char *)a1 + v42;
  v44 = (char *)v8 + v42;
  *(_QWORD *)((char *)a1 + v42) = *(_QWORD *)((char *)v8 + v42);
  swift_retain();
  swift_release();
  *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
  v45 = a3[8];
  v46 = (char *)a1 + v45;
  v47 = (char *)v8 + v45;
  v48 = *(_QWORD *)v47;
  v49 = *((_QWORD *)v47 + 1);
  v50 = *((_QWORD *)v47 + 2);
  v51 = *((_QWORD *)v47 + 3);
  v52 = *((_QWORD *)v47 + 4);
  v53 = *((_QWORD *)v47 + 5);
  v55 = *((_QWORD *)v47 + 6);
  v54 = *((_QWORD *)v47 + 7);
  LOBYTE(v8) = v47[64];
  sub_23DF98590(*(_QWORD *)v47, v49, v50, v51, v52, v53, v55, v54, (char)v8, v47[65]);
  v56 = *(_QWORD *)v46;
  v57 = *((_QWORD *)v46 + 1);
  v58 = *((_QWORD *)v46 + 2);
  v59 = *((_QWORD *)v46 + 3);
  v60 = *((_QWORD *)v46 + 4);
  v61 = *((_QWORD *)v46 + 5);
  v62 = *((_QWORD *)v46 + 6);
  v63 = *((_QWORD *)v46 + 7);
  v64 = v46[64];
  v65 = v46[65];
  *(_QWORD *)v46 = v48;
  *((_QWORD *)v46 + 1) = v49;
  *((_QWORD *)v46 + 2) = v50;
  *((_QWORD *)v46 + 3) = v51;
  *((_QWORD *)v46 + 4) = v52;
  *((_QWORD *)v46 + 5) = v53;
  *((_QWORD *)v46 + 6) = v55;
  *((_QWORD *)v46 + 7) = v54;
  v46[64] = (char)v8;
  v46[65] = v70;
  sub_23DF985F0(v56, v57, v58, v59, v60, v61, v62, v63, v64, v65);
  v66 = v72[9];
  v67 = (_QWORD *)((char *)v71 + v66);
  v68 = (_QWORD *)((char *)v73 + v66);
  *v67 = *v68;
  v67[1] = v68[1];
  swift_retain();
  swift_release();
  return v71;
}

_QWORD *sub_23E0F8EC4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  __int128 v27;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  v11 = v10[6];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_OWORD *)&v7[v11] = *(_OWORD *)&v8[v11];
  v14 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)&v7[v10[7]] = *(_OWORD *)&v8[v10[7]];
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  v7[v10[15]] = v8[v10[15]];
  *(_OWORD *)&v7[v10[16]] = *(_OWORD *)&v8[v10[16]];
  *(_OWORD *)&v7[v10[17]] = *(_OWORD *)&v8[v10[17]];
  *(_OWORD *)&v7[v10[18]] = *(_OWORD *)&v8[v10[18]];
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  *(_OWORD *)&v7[v10[21]] = *(_OWORD *)&v8[v10[21]];
  v18 = a3[6];
  v19 = a3[7];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  v22 = a3[8];
  v23 = a3[9];
  v24 = (char *)a1 + v22;
  v25 = (char *)a2 + v22;
  *((_WORD *)v24 + 32) = *((_WORD *)v25 + 32);
  v26 = *((_OWORD *)v25 + 3);
  *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
  *((_OWORD *)v24 + 3) = v26;
  v27 = *((_OWORD *)v25 + 1);
  *(_OWORD *)v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v27;
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  return a1;
}

_QWORD *sub_23E0F909C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  char v74;
  __int128 v75;
  __int128 v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *(_QWORD *)&v8[v16 + 8];
  *(_QWORD *)v17 = *(_QWORD *)&v8[v16];
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v23 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = v10[7];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v29 = v10[8];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v34 = v10[16];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v38 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = v38;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  v39 = v10[17];
  v40 = &v7[v39];
  v41 = &v8[v39];
  v43 = *(_QWORD *)v41;
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = v43;
  *((_QWORD *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  v44 = v10[18];
  v45 = &v7[v44];
  v46 = &v8[v44];
  v48 = *(_QWORD *)v46;
  v47 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v45 = v48;
  *((_QWORD *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v49 = v10[21];
  v50 = &v7[v49];
  v51 = &v8[v49];
  v53 = *(_QWORD *)v51;
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = v53;
  *((_QWORD *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  v54 = a3[6];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *(_QWORD *)((char *)a1 + v54) = *(_QWORD *)((char *)a2 + v54);
  swift_release();
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_release();
  *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
  swift_bridgeObjectRelease();
  v57 = a3[7];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *(_QWORD *)((char *)a1 + v57) = *(_QWORD *)((char *)a2 + v57);
  swift_release();
  *((_QWORD *)v58 + 1) = *((_QWORD *)v59 + 1);
  v60 = a3[8];
  v61 = (char *)a1 + v60;
  v62 = (char *)a2 + v60;
  v63 = v62[64];
  v64 = v62[65];
  v65 = *(_QWORD *)v61;
  v66 = *((_QWORD *)v61 + 1);
  v67 = *((_QWORD *)v61 + 2);
  v68 = *((_QWORD *)v61 + 3);
  v69 = *((_QWORD *)v61 + 4);
  v70 = *((_QWORD *)v61 + 5);
  v71 = *((_QWORD *)v61 + 6);
  v72 = *((_QWORD *)v61 + 7);
  v73 = v61[64];
  v74 = v61[65];
  v75 = *((_OWORD *)v62 + 1);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *((_OWORD *)v61 + 1) = v75;
  v76 = *((_OWORD *)v62 + 3);
  *((_OWORD *)v61 + 2) = *((_OWORD *)v62 + 2);
  *((_OWORD *)v61 + 3) = v76;
  v61[64] = v63;
  v61[65] = v64;
  sub_23DF985F0(v65, v66, v67, v68, v69, v70, v71, v72, v73, v74);
  v77 = a3[9];
  v78 = (_QWORD *)((char *)a1 + v77);
  v79 = (_QWORD *)((char *)a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  swift_release();
  return a1;
}

uint64_t sub_23E0F9388()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E0F9398()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for AccessoryControlSheetView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D26A68);
}

uint64_t sub_23E0F93BC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_23E0F9454()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0F9464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  int EnumCaseMultiPayload;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  int *v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;

  v4 = type metadata accessor for Device.Control(0);
  MEMORY[0x24BDAC7A8](v4);
  v46 = (uint64_t)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  v48 = (uint64_t *)((char *)&v45 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v47 = (uint64_t *)((char *)&v45 - v12);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C00);
  MEMORY[0x24BDAC7A8](v52);
  v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = (int *)type metadata accessor for DisplayControlGroup(0);
  MEMORY[0x24BDAC7A8](v45);
  v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = *(_QWORD *)(a2 + 16);
  if (!v51)
    return 0;
  v18 = 0;
  v19 = a2 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  v50 = *(_QWORD *)(v15 + 72);
  v49 = v9;
  while (1)
  {
    sub_23DF73E10(v19, (uint64_t)v17, type metadata accessor for DisplayControlGroup);
    v22 = (uint64_t *)&v14[*(int *)(v52 + 48)];
    sub_23DF73E10((uint64_t)v17, (uint64_t)v14, type metadata accessor for Device.ControlGroup.LayoutType);
    sub_23DF73E10(a1, (uint64_t)v22, type metadata accessor for Device.ControlGroup.LayoutType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      v20 = v47;
      sub_23DF73E10((uint64_t)v14, (uint64_t)v47, type metadata accessor for Device.ControlGroup.LayoutType);
      v21 = *v20;
      if (swift_getEnumCaseMultiPayload())
        goto LABEL_4;
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload != 1)
    {
      sub_23DF73E10((uint64_t)v14, (uint64_t)v9, type metadata accessor for Device.ControlGroup.LayoutType);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v26 = v46;
        sub_23DF89384((uint64_t)v22, v46, type metadata accessor for Device.Control);
        v27 = _s22HomeAccessoryControlUI6DeviceV0C0V2eeoiySbAE_AEtFZ_0((uint64_t)v9, v26);
        sub_23DF73E54(v26, type metadata accessor for Device.Control);
        sub_23DF73E54((uint64_t)v9, type metadata accessor for Device.Control);
        sub_23DF73E54((uint64_t)v14, type metadata accessor for Device.ControlGroup.LayoutType);
        if ((v27 & 1) == 0)
          goto LABEL_6;
        goto LABEL_14;
      }
      sub_23DF73E54((uint64_t)v9, type metadata accessor for Device.Control);
LABEL_5:
      sub_23DF89C7C((uint64_t)v14, &qword_256D24C00);
      goto LABEL_6;
    }
    v24 = v48;
    sub_23DF73E10((uint64_t)v14, (uint64_t)v48, type metadata accessor for Device.ControlGroup.LayoutType);
    v21 = *v24;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
LABEL_4:
      swift_bridgeObjectRelease();
      v9 = v49;
      goto LABEL_5;
    }
LABEL_10:
    v25 = sub_23E11D080(v21, *v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_23DF73E54((uint64_t)v14, type metadata accessor for Device.ControlGroup.LayoutType);
    v9 = v49;
    if ((v25 & 1) == 0)
      goto LABEL_6;
LABEL_14:
    v28 = type metadata accessor for Device.ControlGroup(0);
    v29 = *(int *)(v28 + 20);
    v30 = &v17[v29];
    v31 = *(_QWORD *)&v17[v29 + 8];
    v32 = (_QWORD *)(a1 + v29);
    v33 = v32[1];
    if (v31)
    {
      if (!v33 || (*(_QWORD *)v30 != *v32 || v31 != v33) && (sub_23E137614() & 1) == 0)
        goto LABEL_6;
    }
    else if (v33)
    {
      goto LABEL_6;
    }
    v34 = *(int *)(v28 + 24);
    v35 = &v17[v34];
    v36 = *(_QWORD *)&v17[v34 + 8];
    v37 = (_QWORD *)(a1 + v34);
    v38 = v37[1];
    if (v36)
    {
      if (!v38 || (*(_QWORD *)v35 != *v37 || v36 != v38) && (sub_23E137614() & 1) == 0)
        goto LABEL_6;
    }
    else if (v38)
    {
      goto LABEL_6;
    }
    if (v17[v45[5]] != *(_BYTE *)(a1 + v45[5]) || !sub_23E0C89D0((uint64_t)&v17[v45[6]], a1 + v45[6]))
      goto LABEL_6;
    v39 = v45[7];
    v40 = &v17[v39];
    v41 = *(_QWORD *)&v17[v39 + 8];
    v42 = (_QWORD *)(a1 + v39);
    v43 = v42[1];
    if (v41)
      break;
    if (!v43)
      goto LABEL_38;
LABEL_6:
    sub_23DF73E54((uint64_t)v17, type metadata accessor for DisplayControlGroup);
    ++v18;
    v19 += v50;
    if (v51 == v18)
      return 0;
  }
  if (!v43 || (*(_QWORD *)v40 != *v42 || v41 != v43) && (sub_23E137614() & 1) == 0)
    goto LABEL_6;
LABEL_38:
  sub_23DF73E54((uint64_t)v17, type metadata accessor for DisplayControlGroup);
  return v18;
}

uint64_t sub_23E0F991C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int v22;
  int v23;
  unsigned __int8 *v24;
  int v25;
  int v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v31;

  v4 = type metadata accessor for DisplayControl(0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a2 + 16);
  if (!v8)
    return 0;
  v9 = 0;
  v10 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v11 = *(_QWORD *)(v5 + 72);
  while (1)
  {
    sub_23DF73E10(v10, (uint64_t)v7, type metadata accessor for DisplayControl);
    if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) == 0)
      goto LABEL_4;
    v12 = (int *)type metadata accessor for Device.Control(0);
    _s22HomeAccessoryControlUI6DeviceV0C0V4KindO2eeoiySbAG_AGtFZ_0((uint64_t)&v7[v12[5]], a1 + v12[5]);
    if ((v13 & 1) == 0)
      goto LABEL_4;
    static Device.Control.Source.== infix(_:_:)((uint64_t)&v7[v12[6]], a1 + v12[6]);
    if ((v14 & 1) == 0 || v7[v12[7]] != *(_BYTE *)(a1 + v12[7]))
      goto LABEL_4;
    v15 = v12[8];
    v16 = &v7[v15];
    v17 = *(_QWORD *)&v7[v15 + 8];
    v18 = (_QWORD *)(a1 + v15);
    v19 = v18[1];
    if (v17)
    {
      if (!v19)
        goto LABEL_4;
      v20 = *(_QWORD *)v16 == *v18 && v17 == v19;
      if (!v20 && (sub_23E137614() & 1) == 0)
        goto LABEL_4;
    }
    else if (v19)
    {
      goto LABEL_4;
    }
    v21 = v12[9];
    v22 = v7[v21];
    v23 = v7[v21 + 1];
    v24 = (unsigned __int8 *)(a1 + v21);
    v25 = *v24;
    v26 = v24[1];
    if (v22 == 4)
    {
      if (v25 != 4)
        goto LABEL_4;
    }
    else if (v25 == 4 || v22 != v25)
    {
      goto LABEL_4;
    }
    if (v23 == 4)
    {
      if (v26 != 4)
        goto LABEL_4;
    }
    else if (v26 == 4 || v23 != v26)
    {
      goto LABEL_4;
    }
    v27 = v12[10];
    v28 = v7[v27];
    v29 = *(unsigned __int8 *)(a1 + v27);
    if (v28 != 12)
      break;
    if (v29 == 12)
      goto LABEL_31;
LABEL_4:
    sub_23DF73E54((uint64_t)v7, type metadata accessor for DisplayControl);
    ++v9;
    v10 += v11;
    if (v8 == v9)
      return 0;
  }
  if (v29 == 12 || v28 != v29)
    goto LABEL_4;
LABEL_31:
  if (v7[v12[11]] != *(_BYTE *)(a1 + v12[11]) || v7[*(int *)(v4 + 20)] != *(_BYTE *)(a1 + *(int *)(v4 + 20)))
    goto LABEL_4;
  sub_23DF73E54((uint64_t)v7, type metadata accessor for DisplayControl);
  return v9;
}

uint64_t sub_23E0F9B68(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t result;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  int v70;
  int v71;
  unsigned __int8 *v72;
  int v73;
  int v74;
  uint64_t v75;
  int v76;
  int v77;
  uint64_t v78;
  int v79;
  int v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char v90;
  char v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  int v99;
  unsigned __int8 *v100;
  int v101;
  int v102;
  uint64_t v103;
  int v104;
  int v105;
  uint64_t v106;
  int v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  char v113;
  char v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  int v122;
  unsigned __int8 *v123;
  int v124;
  int v125;
  uint64_t v126;
  int v127;
  int v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  BOOL v140;
  char v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t *v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;

  v176 = (int *)type metadata accessor for Device.Control(0);
  v146 = *((_QWORD *)v176 - 1);
  MEMORY[0x24BDAC7A8](v176);
  v148 = (uint64_t)&v142 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v175 = (uint64_t)&v142 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v168 = (uint64_t)&v142 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v142 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v142 - v13;
  v15 = type metadata accessor for Device.ControlGroup.LayoutType(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v142 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v151 = (uint64_t *)((char *)&v142 - v19);
  MEMORY[0x24BDAC7A8](v20);
  v150 = (uint64_t *)((char *)&v142 - v21);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D24C00);
  MEMORY[0x24BDAC7A8](v161);
  v171 = (uint64_t)&v142 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v165 = type metadata accessor for Device.ControlGroup(0);
  v163 = *(_QWORD *)(v165 - 8);
  MEMORY[0x24BDAC7A8](v165);
  v174 = (uint64_t)&v142 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v173 = (uint64_t)&v142 - v25;
  v26 = *(_QWORD *)(a2 + 16);
  if (!v26)
    return 0;
  v149 = v14;
  v159 = v15;
  v142 = v11;
  v27 = 0;
  v29 = *a1;
  v28 = a1[1];
  v172 = a1[2];
  v145 = a1[3];
  v153 = a1[4];
  v30 = a2 + 32;
  v169 = v28;
  v170 = a2 + 32;
  v143 = v17;
  v164 = v26;
  v167 = v29;
LABEL_5:
  v31 = (_QWORD *)(v30 + 40 * v27);
  v33 = v31[1];
  v32 = v31[2];
  v34 = v31[3];
  v35 = v31[4];
  if (v33)
  {
    if (!v28)
      goto LABEL_4;
    v36 = *v31 == v29 && v33 == v28;
    if (!v36)
    {
      v37 = sub_23E137614();
      v30 = v170;
      if ((v37 & 1) == 0)
        goto LABEL_4;
    }
  }
  else if (v28)
  {
    goto LABEL_4;
  }
  v38 = *(_QWORD *)(v32 + 16);
  if (v38 != *(_QWORD *)(v172 + 16))
    goto LABEL_4;
  v162 = v34;
  v39 = (uint64_t)v17;
  if (!v38)
  {
    swift_bridgeObjectRetain();
LABEL_149:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35)
      goto LABEL_141;
LABEL_150:
    swift_bridgeObjectRelease();
    if (!v153)
      goto LABEL_171;
    swift_bridgeObjectRelease();
    goto LABEL_153;
  }
  v160 = v38;
  v40 = *(unsigned __int8 *)(v163 + 80);
  swift_bridgeObjectRetain();
  if (v32 == v172)
    goto LABEL_149;
  v41 = (v40 + 32) & ~v40;
  v42 = v32 + v41;
  v43 = v172 + v41;
  v44 = *(_QWORD *)(v163 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v45 = 0;
  v155 = v32;
  v154 = v35;
  v157 = v43;
  v158 = v42;
  v156 = v44;
  while (1)
  {
    v166 = v45;
    v46 = v44 * v45;
    v47 = v173;
    sub_23DF73E10(v42 + v46, v173, type metadata accessor for Device.ControlGroup);
    v48 = v174;
    sub_23DF73E10(v43 + v46, v174, type metadata accessor for Device.ControlGroup);
    v49 = (uint64_t *)(v171 + *(int *)(v161 + 48));
    sub_23DF73E10(v47, v171, type metadata accessor for Device.ControlGroup.LayoutType);
    sub_23DF73E10(v48, (uint64_t)v49, type metadata accessor for Device.ControlGroup.LayoutType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
      break;
    v17 = (char *)v39;
    if (EnumCaseMultiPayload == 1)
    {
      v51 = v33;
      v52 = v151;
      sub_23DF73E10(v171, (uint64_t)v151, type metadata accessor for Device.ControlGroup.LayoutType);
      v53 = *v52;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_161;
      v54 = *v49;
      v55 = *(_QWORD *)(v53 + 16);
      v26 = v164;
      v29 = v167;
      if (v55 != *(_QWORD *)(v54 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_156:
        sub_23DF73E54(v171, type metadata accessor for Device.ControlGroup.LayoutType);
        v28 = v169;
        goto LABEL_165;
      }
      if (v55)
      {
        if (v53 != v54)
        {
          v152 = v53;
          v56 = 0;
          v57 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
          v147 = *(_QWORD *)(v146 + 72);
          while (1)
          {
            v58 = v168;
            result = sub_23DF73E10(v152 + v57, v168, type metadata accessor for Device.Control);
            if (v56 >= *(_QWORD *)(v54 + 16))
              break;
            sub_23DF73E10(v54 + v57, v175, type metadata accessor for Device.Control);
            v60 = v58;
            if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) == 0)
              goto LABEL_154;
            _s22HomeAccessoryControlUI6DeviceV0C0V4KindO2eeoiySbAG_AGtFZ_0(v58 + v176[5], v175 + v176[5]);
            v60 = v168;
            if ((v61 & 1) == 0)
              goto LABEL_154;
            static Device.Control.Source.== infix(_:_:)(v168 + v176[6], v175 + v176[6]);
            v60 = v168;
            if ((v62 & 1) == 0 || *(unsigned __int8 *)(v168 + v176[7]) != *(unsigned __int8 *)(v175 + v176[7]))
              goto LABEL_154;
            v63 = v176[8];
            v64 = (_QWORD *)(v168 + v63);
            v65 = *(_QWORD *)(v168 + v63 + 8);
            v66 = (_QWORD *)(v175 + v63);
            v67 = v66[1];
            if (v65)
            {
              if (!v67 || (*v64 != *v66 || v65 != v67) && (v68 = sub_23E137614(), v60 = v168, (v68 & 1) == 0))
              {
LABEL_154:
                sub_23DF73E54(v175, type metadata accessor for Device.Control);
                sub_23DF73E54(v60, type metadata accessor for Device.Control);
LABEL_155:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v17 = v143;
                v26 = v164;
                v29 = v167;
                goto LABEL_156;
              }
            }
            else if (v67)
            {
              goto LABEL_154;
            }
            v69 = v176[9];
            v70 = *(unsigned __int8 *)(v60 + v69);
            v71 = *(unsigned __int8 *)(v60 + v69 + 1);
            v72 = (unsigned __int8 *)(v175 + v69);
            v73 = *v72;
            v74 = v72[1];
            if (v70 == 4)
            {
              if (v73 != 4)
                goto LABEL_154;
            }
            else if (v73 == 4 || v70 != v73)
            {
              goto LABEL_154;
            }
            if (v71 == 4)
            {
              if (v74 != 4)
                goto LABEL_154;
            }
            else if (v74 == 4 || v71 != v74)
            {
              goto LABEL_154;
            }
            v75 = v176[10];
            v76 = *(unsigned __int8 *)(v60 + v75);
            v77 = *(unsigned __int8 *)(v175 + v75);
            if (v76 == 12)
            {
              if (v77 != 12)
                goto LABEL_154;
            }
            else if (v77 == 12 || v76 != v77)
            {
              goto LABEL_154;
            }
            v78 = v176[11];
            v79 = *(unsigned __int8 *)(v60 + v78);
            v80 = *(unsigned __int8 *)(v175 + v78);
            sub_23DF73E54(v175, type metadata accessor for Device.Control);
            sub_23DF73E54(v60, type metadata accessor for Device.Control);
            if (v79 != v80)
              goto LABEL_155;
            ++v56;
            v57 += v147;
            v35 = v154;
            if (v55 == v56)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v17 = v143;
              v26 = v164;
              v29 = v167;
              goto LABEL_121;
            }
          }
          __break(1u);
          goto LABEL_173;
        }
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_121:
      v28 = v169;
      v42 = v158;
      v33 = v51;
    }
    else
    {
      sub_23DF73E10(v171, v39, type metadata accessor for Device.ControlGroup.LayoutType);
      v109 = swift_getEnumCaseMultiPayload();
      v28 = v169;
      if (v109 != 2)
      {
        sub_23DF73E54(v39, type metadata accessor for Device.Control);
        v26 = v164;
        v29 = v167;
        goto LABEL_164;
      }
      v110 = (uint64_t)v49;
      v111 = v148;
      sub_23DF89384(v110, v148, type metadata accessor for Device.Control);
      v112 = _s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0();
      v26 = v164;
      v29 = v167;
      if ((v112 & 1) == 0)
        goto LABEL_160;
      _s22HomeAccessoryControlUI6DeviceV0C0V4KindO2eeoiySbAG_AGtFZ_0(v39 + v176[5], v111 + v176[5]);
      if ((v113 & 1) == 0)
        goto LABEL_160;
      static Device.Control.Source.== infix(_:_:)(v39 + v176[6], v111 + v176[6]);
      if ((v114 & 1) == 0 || *(unsigned __int8 *)(v39 + v176[7]) != *(unsigned __int8 *)(v111 + v176[7]))
        goto LABEL_160;
      v115 = v176[8];
      v116 = (_QWORD *)(v39 + v115);
      v117 = *(_QWORD *)(v39 + v115 + 8);
      v118 = (_QWORD *)(v111 + v115);
      v119 = v118[1];
      if (v117)
      {
        if (!v119 || (*v116 != *v118 || v117 != v119) && (sub_23E137614() & 1) == 0)
        {
LABEL_160:
          sub_23DF73E54(v111, type metadata accessor for Device.Control);
          sub_23DF73E54(v39, type metadata accessor for Device.Control);
          sub_23DF73E54(v171, type metadata accessor for Device.ControlGroup.LayoutType);
LABEL_165:
          sub_23DF73E54(v174, type metadata accessor for Device.ControlGroup);
          sub_23DF73E54(v173, type metadata accessor for Device.ControlGroup);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = v170;
          goto LABEL_4;
        }
      }
      else if (v119)
      {
        goto LABEL_160;
      }
      v120 = v176[9];
      v121 = *(unsigned __int8 *)(v39 + v120);
      v122 = *(unsigned __int8 *)(v39 + v120 + 1);
      v123 = (unsigned __int8 *)(v111 + v120);
      v124 = *v123;
      v125 = v123[1];
      if (v121 == 4)
      {
        if (v124 != 4)
          goto LABEL_160;
      }
      else if (v124 == 4 || v121 != v124)
      {
        goto LABEL_160;
      }
      if (v122 == 4)
      {
        if (v125 != 4)
          goto LABEL_160;
      }
      else if (v125 == 4 || v122 != v125)
      {
        goto LABEL_160;
      }
      v126 = v176[10];
      v127 = *(unsigned __int8 *)(v39 + v126);
      v128 = *(unsigned __int8 *)(v111 + v126);
      if (v127 == 12)
      {
        if (v128 != 12)
          goto LABEL_160;
      }
      else if (v128 == 12 || v127 != v128)
      {
        goto LABEL_160;
      }
      if (*(unsigned __int8 *)(v39 + v176[11]) != *(unsigned __int8 *)(v111 + v176[11]))
        goto LABEL_160;
      sub_23DF73E54(v111, type metadata accessor for Device.Control);
      sub_23DF73E54(v39, type metadata accessor for Device.Control);
      v42 = v158;
    }
LABEL_124:
    sub_23DF73E54(v171, type metadata accessor for Device.ControlGroup.LayoutType);
    v129 = *(int *)(v165 + 20);
    v130 = (_QWORD *)(v173 + v129);
    v131 = *(_QWORD *)(v173 + v129 + 8);
    v132 = (_QWORD *)(v174 + v129);
    v133 = v132[1];
    if (v131)
    {
      if (!v133 || (*v130 != *v132 || v131 != v133) && (sub_23E137614() & 1) == 0)
        goto LABEL_165;
    }
    else if (v133)
    {
      goto LABEL_165;
    }
    v134 = *(int *)(v165 + 24);
    v135 = (_QWORD *)(v173 + v134);
    v136 = *(_QWORD *)(v173 + v134 + 8);
    v137 = (_QWORD *)(v174 + v134);
    v138 = v137[1];
    if (v136)
    {
      if (!v138 || (*v135 != *v137 || v136 != v138) && (sub_23E137614() & 1) == 0)
        goto LABEL_165;
    }
    else if (v138)
    {
      goto LABEL_165;
    }
    v39 = (uint64_t)v17;
    v139 = v166 + 1;
    sub_23DF73E54(v174, type metadata accessor for Device.ControlGroup);
    sub_23DF73E54(v173, type metadata accessor for Device.ControlGroup);
    v36 = v139 == v160;
    v45 = v139;
    v44 = v156;
    v43 = v157;
    if (v36)
    {
      if (!v35)
        goto LABEL_150;
LABEL_141:
      if (v153)
      {
        v140 = v162 == v145 && v35 == v153;
        v28 = v169;
        if (!v140)
        {
          v17 = (char *)v39;
          v141 = sub_23E137614();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v30 = v170;
          if ((v141 & 1) != 0)
            return v27;
LABEL_4:
          if (++v27 == v26)
            return 0;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
LABEL_171:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v27;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_153:
      swift_bridgeObjectRelease();
      v28 = v169;
      v30 = v170;
      v17 = (char *)v39;
      goto LABEL_4;
    }
  }
  v152 = v33;
  v81 = v150;
  sub_23DF73E10(v171, (uint64_t)v150, type metadata accessor for Device.ControlGroup.LayoutType);
  v82 = *v81;
  v17 = (char *)v39;
  if (swift_getEnumCaseMultiPayload())
  {
LABEL_161:
    swift_bridgeObjectRelease();
    v26 = v164;
    v29 = v167;
    v28 = v169;
LABEL_164:
    sub_23DF89C7C(v171, &qword_256D24C00);
    goto LABEL_165;
  }
  v83 = *v49;
  v84 = *(_QWORD *)(v82 + 16);
  v26 = v164;
  v29 = v167;
  v28 = v169;
  if (v84 != *(_QWORD *)(v83 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_159:
    sub_23DF73E54(v171, type metadata accessor for Device.ControlGroup.LayoutType);
    goto LABEL_165;
  }
  if (!v84)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_123:
    v42 = v158;
    v33 = v152;
    goto LABEL_124;
  }
  if (v82 == v83)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_123;
  }
  v85 = 0;
  v86 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
  v144 = *(_QWORD *)(v146 + 72);
  v87 = (uint64_t)v142;
  v147 = v82;
  while (1)
  {
    v88 = v82 + v86;
    v89 = (uint64_t)v149;
    result = sub_23DF73E10(v88, (uint64_t)v149, type metadata accessor for Device.Control);
    if (v85 >= *(_QWORD *)(v83 + 16))
      break;
    sub_23DF73E10(v83 + v86, v87, type metadata accessor for Device.Control);
    if ((_s22HomeAccessoryControlUI6DeviceV0C0V19AlarmAndTimerConfigV2eeoiySbAG_AGtFZ_0() & 1) == 0)
      goto LABEL_157;
    _s22HomeAccessoryControlUI6DeviceV0C0V4KindO2eeoiySbAG_AGtFZ_0(v89 + v176[5], v87 + v176[5]);
    if ((v90 & 1) == 0)
      goto LABEL_157;
    static Device.Control.Source.== infix(_:_:)(v89 + v176[6], v87 + v176[6]);
    if ((v91 & 1) == 0 || *(unsigned __int8 *)(v89 + v176[7]) != *(unsigned __int8 *)(v87 + v176[7]))
      goto LABEL_157;
    v92 = v176[8];
    v93 = (_QWORD *)(v89 + v92);
    v94 = *(_QWORD *)(v89 + v92 + 8);
    v95 = (_QWORD *)(v87 + v92);
    v96 = v95[1];
    if (v94)
    {
      if (!v96 || (*v93 != *v95 || v94 != v96) && (sub_23E137614() & 1) == 0)
      {
LABEL_157:
        sub_23DF73E54(v87, type metadata accessor for Device.Control);
        sub_23DF73E54(v89, type metadata accessor for Device.Control);
LABEL_158:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = v143;
        v26 = v164;
        goto LABEL_159;
      }
    }
    else if (v96)
    {
      goto LABEL_157;
    }
    v97 = v176[9];
    v98 = *(unsigned __int8 *)(v89 + v97);
    v99 = *(unsigned __int8 *)(v89 + v97 + 1);
    v100 = (unsigned __int8 *)(v87 + v97);
    v101 = *v100;
    v102 = v100[1];
    if (v98 == 4)
    {
      if (v101 != 4)
        goto LABEL_157;
    }
    else if (v101 == 4 || v98 != v101)
    {
      goto LABEL_157;
    }
    if (v99 == 4)
    {
      if (v102 != 4)
        goto LABEL_157;
    }
    else if (v102 == 4 || v99 != v102)
    {
      goto LABEL_157;
    }
    v103 = v176[10];
    v104 = *(unsigned __int8 *)(v89 + v103);
    v105 = *(unsigned __int8 *)(v87 + v103);
    if (v104 == 12)
    {
      if (v105 != 12)
        goto LABEL_157;
    }
    else if (v105 == 12 || v104 != v105)
    {
      goto LABEL_157;
    }
    v106 = v176[11];
    v107 = *(unsigned __int8 *)(v89 + v106);
    v108 = *(unsigned __int8 *)(v87 + v106);
    sub_23DF73E54(v87, type metadata accessor for Device.Control);
    sub_23DF73E54(v89, type metadata accessor for Device.Control);
    v36 = v107 == v108;
    v28 = v169;
    v29 = v167;
    if (!v36)
      goto LABEL_158;
    ++v85;
    v86 += v144;
    v82 = v147;
    if (v84 == v85)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = v143;
      v26 = v164;
      v35 = v154;
      goto LABEL_123;
    }
  }
LABEL_173:
  __break(1u);
  return result;
}

uint64_t sub_23E0FAAC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  int v12;
  _BYTE *v13;
  __int128 v14;
  __int128 v15;
  int v16;
  _BYTE *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _BYTE v22[72];
  _BYTE v23[72];
  _OWORD v24[4];
  __int16 v25;
  _OWORD v26[4];
  __int16 v27;
  _OWORD v28[4];
  __int16 v29;

  v1 = v0;
  v2 = type metadata accessor for AccessoryControlSheetView(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v22[-v6];
  v9 = v0 + *(int *)(v8 + 32);
  v10 = *(_OWORD *)(v9 + 48);
  v28[2] = *(_OWORD *)(v9 + 32);
  v28[3] = v10;
  v29 = *(_WORD *)(v9 + 64);
  v11 = *(_OWORD *)(v9 + 16);
  v28[0] = *(_OWORD *)v9;
  v28[1] = v11;
  sub_23DF98EC8((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v23);
  sub_23DF98EC8((uint64_t)v28, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v12 = v23[8];
  sub_23DF73E10(v1, (uint64_t)v7, type metadata accessor for AccessoryControlSheetView);
  if (v12 == 1)
  {
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlSheetView);
    sub_23DF73E10(v1, (uint64_t)v4, type metadata accessor for AccessoryControlSheetView);
  }
  else
  {
    v13 = &v7[*(int *)(v2 + 32)];
    v14 = *((_OWORD *)v13 + 3);
    v26[2] = *((_OWORD *)v13 + 2);
    v26[3] = v14;
    v27 = *((_WORD *)v13 + 32);
    v15 = *((_OWORD *)v13 + 1);
    v26[0] = *(_OWORD *)v13;
    v26[1] = v15;
    sub_23DF98EC8((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
    sub_23DF9C754((uint64_t)v24);
    sub_23DF98EC8((uint64_t)v26, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
    sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlSheetView);
    v16 = v25;
    sub_23DF73E10(v1, (uint64_t)v4, type metadata accessor for AccessoryControlSheetView);
    if ((v16 - 1) > 1)
    {
      sub_23DF73E54((uint64_t)v4, type metadata accessor for AccessoryControlSheetView);
      return 0;
    }
  }
  v17 = &v4[*(int *)(v2 + 32)];
  v18 = *((_OWORD *)v17 + 3);
  v24[2] = *((_OWORD *)v17 + 2);
  v24[3] = v18;
  v25 = *((_WORD *)v17 + 32);
  v19 = *((_OWORD *)v17 + 1);
  v24[0] = *(_OWORD *)v17;
  v24[1] = v19;
  sub_23DF98EC8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v22);
  sub_23DF98EC8((uint64_t)v24, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v20 = v22[56] & 1;
  sub_23DF73E54((uint64_t)v4, type metadata accessor for AccessoryControlSheetView);
  return v20;
}

uint64_t sub_23E0FACF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t KeyPath;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  __n128 *v71;
  __n128 v72;
  __n128 v73;
  __n128 v74;
  __n128 v75;
  __n128 v76;
  __n128 v77;
  __n128 v78;
  unint64_t v79;
  __n128 v80;
  __n128 v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t result;
  uint64_t *v99[3];
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  unint64_t *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  unint64_t v136;
  __n128 v137[14];
  unint64_t v138;

  v132 = a3;
  v5 = type metadata accessor for AccessoryControlSheetView(0);
  v129 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v130 = v6;
  v131 = (uint64_t)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_23E1364D4();
  v127 = *(_QWORD *)(v7 - 8);
  v128 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v126 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v110 = sub_23E13651C();
  v108 = *(_QWORD *)(v110 - 8);
  MEMORY[0x24BDAC7A8](v110);
  v106 = (char *)v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for HeaderViewModifier.ScrollView(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AC0);
  v102 = *(_QWORD *)(v13 - 8);
  v103 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AC8);
  MEMORY[0x24BDAC7A8](v104);
  v100 = (char *)v99 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AD0);
  v111 = *(_QWORD *)(v17 - 8);
  v112 = v17;
  MEMORY[0x24BDAC7A8](v17);
  v109 = (char *)v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AD8);
  MEMORY[0x24BDAC7A8](v105);
  v115 = (char *)v99 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AE0);
  MEMORY[0x24BDAC7A8](v107);
  v116 = (uint64_t)v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AE8);
  MEMORY[0x24BDAC7A8](v119);
  v118 = (uint64_t)v99 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AF0);
  v124 = *(_QWORD *)(v22 - 8);
  v125 = v22;
  MEMORY[0x24BDAC7A8](v22);
  v123 = (char *)v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AF8);
  v121 = *(_QWORD *)(v24 - 8);
  v122 = v24;
  MEMORY[0x24BDAC7A8](v24);
  v120 = (char *)v99 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = a2;
  v134 = a1;
  sub_23E136714();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26B00);
  sub_23DF89B88(&qword_256D26B08, &qword_256D26B00, MEMORY[0x24BDF4750]);
  v101 = v15;
  sub_23E135D3C();
  v26 = *a2;
  sub_23E135E80();
  v28 = v27;
  v30 = v29;
  v31 = (unint64_t *)((char *)a2 + *(int *)(v5 + 36));
  v32 = *v31;
  v114 = v31;
  v33 = v31[1];
  v137[0].n128_u64[0] = v32;
  v137[0].n128_u64[1] = v33;
  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26B10);
  sub_23E136D98();
  v117 = v5;
  if (*(uint64_t *)((char *)a2 + *(int *)(v5 + 28)))
  {
    v34 = a2;
    v35 = v135;
    v36 = (uint64_t *)((char *)v12 + v10[7]);
    swift_retain();
    sub_23E0A80D4(v36);
    swift_release();
    v37 = sub_23E0FAAC4();
    v99[2] = (uint64_t *)type metadata accessor for AnimationModel();
    v99[1] = (uint64_t *)sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    v38 = sub_23E1360CC();
    v40 = v39;
    *v12 = v26;
    v12[1] = v28;
    v12[2] = v30;
    v12[3] = v35;
    *((_BYTE *)v12 + v10[8]) = v37 & 1;
    v41 = (char *)v12 + v10[9];
    *(_QWORD *)v41 = swift_getKeyPath();
    *(_OWORD *)(v41 + 8) = 0u;
    *(_OWORD *)(v41 + 24) = 0u;
    *(_OWORD *)(v41 + 40) = 0u;
    *(_OWORD *)(v41 + 50) = 0u;
    v42 = (char *)v12 + v10[10];
    *(_QWORD *)v42 = swift_getKeyPath();
    v42[8] = 0;
    v43 = (uint64_t *)((char *)v12 + v10[11]);
    *v43 = v38;
    v43[1] = v40;
    v45 = v101;
    v44 = v102;
    v46 = (uint64_t)v100;
    v47 = v103;
    (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v100, v101, v103);
    v48 = v104;
    sub_23DF89384((uint64_t)v12, v46 + *(int *)(v104 + 36), type metadata accessor for HeaderViewModifier.ScrollView);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v47);
    v49 = sub_23E136744();
    v50 = v106;
    sub_23E136510();
    v51 = sub_23E0FD274();
    v52 = v109;
    MEMORY[0x24264B308](v49, 0x4034000000000000, 0, v50, v48, v51);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v50, v110);
    sub_23DF89C7C(v46, &qword_256D26AC8);
    v110 = sub_23E136FE4();
    v108 = v53;
    v99[0] = v34;
    v54 = *v34;
    v55 = (char *)v34 + *(int *)(v117 + 20);
    v56 = v55[*(int *)(type metadata accessor for Device() + 76)];
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    v57 = sub_23E1360CC();
    v59 = v58;
    KeyPath = swift_getKeyPath();
    v61 = v111;
    v62 = v112;
    v63 = (uint64_t)v115;
    (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v115, v52, v112);
    v64 = v63 + *(int *)(v105 + 36);
    *(_QWORD *)v64 = v54;
    *(_BYTE *)(v64 + 8) = v56;
    *(_QWORD *)(v64 + 16) = KeyPath;
    *(_OWORD *)(v64 + 24) = 0u;
    *(_OWORD *)(v64 + 40) = 0u;
    *(_OWORD *)(v64 + 56) = 0u;
    *(_OWORD *)(v64 + 66) = 0u;
    *(_QWORD *)(v64 + 88) = v57;
    *(_QWORD *)(v64 + 96) = v59;
    v65 = v108;
    *(_QWORD *)(v64 + 104) = v110;
    *(_QWORD *)(v64 + 112) = v65;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v52, v62);
    v66 = sub_23E136FE4();
    v68 = v67;
    v69 = v99[0];
    sub_23E0FBC88(v99[0], v137);
    v70 = v116;
    sub_23DF89C1C(v63, v116, &qword_256D26AD8);
    v71 = (__n128 *)(v70 + *(int *)(v107 + 36));
    v72 = v137[11];
    v73 = v137[13];
    v71[12] = v137[12];
    v71[13] = v73;
    v74 = v137[7];
    v75 = v137[9];
    v76 = v137[10];
    v71[8] = v137[8];
    v71[9] = v75;
    v71[10] = v76;
    v71[11] = v72;
    v77 = v137[5];
    v78 = v137[6];
    v71[4] = v137[4];
    v71[5] = v77;
    v79 = v138;
    v71[6] = v78;
    v71[7] = v74;
    v80 = v137[1];
    *v71 = v137[0];
    v71[1] = v80;
    v81 = v137[3];
    v71[2] = v137[2];
    v71[3] = v81;
    v71[14].n128_u64[0] = v79;
    v71[14].n128_u64[1] = v66;
    v71[15].n128_u64[0] = v68;
    sub_23DF89C7C(v63, &qword_256D26AD8);
    v82 = sub_23E1360CC();
    v84 = v83;
    v85 = v118;
    sub_23DF89C1C(v70, v118, &qword_256D26AE0);
    v86 = v119;
    v87 = (uint64_t *)(v85 + *(int *)(v119 + 36));
    *v87 = v82;
    v87[1] = v84;
    sub_23DF89C7C(v70, &qword_256D26AE0);
    v88 = v126;
    sub_23E1364C8();
    LOBYTE(v84) = sub_23E136714();
    sub_23E136708();
    sub_23E136708();
    v89 = (uint64_t)v69;
    if (sub_23E136708() != v84)
      sub_23E136708();
    v90 = sub_23E0FD310();
    v91 = v123;
    sub_23E136AE0();
    (*(void (**)(char *, uint64_t))(v127 + 8))(v88, v128);
    sub_23DF89C7C(v85, &qword_256D26AE8);
    v92 = v114[1];
    v135 = *v114;
    v136 = v92;
    sub_23E136D98();
    v93 = v131;
    sub_23DF73E10(v89, v131, type metadata accessor for AccessoryControlSheetView);
    v94 = (*(unsigned __int8 *)(v129 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
    v95 = swift_allocObject();
    sub_23DF89384(v93, v95 + v94, type metadata accessor for AccessoryControlSheetView);
    v135 = v86;
    v136 = v90;
    swift_getOpaqueTypeConformance2();
    sub_23E035B40();
    v96 = v120;
    v97 = v125;
    sub_23E136B7C();
    swift_release();
    (*(void (**)(char *, uint64_t))(v124 + 8))(v91, v97);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v121 + 32))(v132, v96, v122);
  }
  else
  {
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23E0FB650@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  *a2 = sub_23E136FE4();
  a2[1] = v4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26BC8);
  return sub_23E0FB6A4(a1, (uint64_t *)((char *)a2 + *(int *)(v5 + 44)));
}

uint64_t sub_23E0FB6A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t result;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v4 = (int *)type metadata accessor for HeaderViewModifier.ScrollViewVStack(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26BD0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26BD8);
  MEMORY[0x24BDAC7A8](v47);
  v49 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v43 - v12;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v43 - v15;
  if ((sub_23E0FAAC4() & 1) != 0)
  {
    sub_23E135E80();
    v48 = v17;
    v18 = sub_23E13672C();
    type metadata accessor for AnimationModel();
    sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
    v45 = sub_23E1360CC();
    v46 = v19;
    v43 = 0x3F747AE147AE147BLL;
    v44 = (unint64_t)v18 << 8;
  }
  else
  {
    v48 = 0;
    v43 = 0;
    v44 = 0;
    v45 = 1;
    v46 = 0;
  }
  *(_QWORD *)v9 = sub_23E136378();
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26BE0);
  sub_23E0FBAAC(a1, (uint64_t)&v9[*(int *)(v20 + 44)]);
  sub_23E135E80();
  v22 = v21;
  v24 = v23;
  v25 = type metadata accessor for AccessoryControlSheetView(0);
  v26 = (uint64_t *)((char *)a1 + *(int *)(v25 + 36));
  v27 = *v26;
  v28 = v26[1];
  v50 = v27;
  v51 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26B10);
  sub_23E136DB0();
  if (*(uint64_t *)((char *)a1 + *(int *)(v25 + 28)))
  {
    v30 = v52;
    v29 = v53;
    v31 = v54;
    v32 = (_QWORD *)((char *)v6 + v4[6]);
    swift_retain();
    sub_23E0A80D4(v32);
    swift_release();
    *v6 = v22;
    v6[1] = v24;
    v6[2] = v30;
    v6[3] = v29;
    v6[4] = v31;
    v33 = (char *)v6 + v4[7];
    *(_QWORD *)v33 = swift_getKeyPath();
    *(_OWORD *)(v33 + 8) = 0u;
    *(_OWORD *)(v33 + 24) = 0u;
    *(_OWORD *)(v33 + 40) = 0u;
    *(_OWORD *)(v33 + 50) = 0u;
    v34 = (char *)v6 + v4[8];
    *(_QWORD *)v34 = swift_getKeyPath();
    v34[8] = 0;
    sub_23DF89C1C((uint64_t)v9, (uint64_t)v13, &qword_256D26BD0);
    sub_23DF89384((uint64_t)v6, (uint64_t)&v13[*(int *)(v47 + 36)], type metadata accessor for HeaderViewModifier.ScrollViewVStack);
    sub_23DF89C7C((uint64_t)v9, &qword_256D26BD0);
    sub_23DF89340((uint64_t)v13, (uint64_t)v16, &qword_256D26BD8);
    v35 = v49;
    sub_23DF89C1C((uint64_t)v16, v49, &qword_256D26BD8);
    v36 = v48;
    v38 = v43;
    v37 = v44;
    *a2 = v48;
    a2[1] = v37;
    v40 = v45;
    v39 = v46;
    a2[2] = v38;
    a2[3] = v40;
    a2[4] = v39;
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26BE8);
    sub_23DF89C1C(v35, (uint64_t)a2 + *(int *)(v41 + 48), &qword_256D26BD8);
    sub_23E0FD974(v36, v37, v38, v40);
    sub_23DF89C7C((uint64_t)v16, &qword_256D26BD8);
    sub_23DF89C7C(v35, &qword_256D26BD8);
    return sub_23E0FD988(v36, v37, v38, v40);
  }
  else
  {
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23E0FBAAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v27;

  v4 = (int *)type metadata accessor for AccessoryControlSheetView.ControlsView(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v27 - v8);
  v10 = *a1;
  v11 = type metadata accessor for AccessoryControlSheetView(0);
  sub_23DF73E10((uint64_t)a1 + *(int *)(v11 + 20), (uint64_t)v9 + v4[5], (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v12 = (uint64_t *)((char *)a1 + *(int *)(v11 + 24));
  v13 = *v12;
  v14 = v12[1];
  v15 = v12[2];
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_23E135E80();
  *v9 = v10;
  v16 = (_QWORD *)((char *)v9 + v4[6]);
  *v16 = v13;
  v16[1] = v14;
  v16[2] = v15;
  v17 = (_QWORD *)((char *)v9 + v4[7]);
  *v17 = v18;
  v17[1] = v19;
  type metadata accessor for AccessoryControlsModel();
  sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
  v20 = sub_23E1360CC();
  v22 = v21;
  sub_23DF73E10((uint64_t)v9, (uint64_t)v6, type metadata accessor for AccessoryControlSheetView.ControlsView);
  *(_QWORD *)a2 = 0x4044000000000000;
  *(_BYTE *)(a2 + 8) = 0;
  v23 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_256D26BF0);
  sub_23DF73E10((uint64_t)v6, a2 + v23[12], type metadata accessor for AccessoryControlSheetView.ControlsView);
  v24 = a2 + v23[16];
  *(_QWORD *)v24 = 0x4044000000000000;
  *(_BYTE *)(v24 + 8) = 0;
  v25 = (uint64_t *)(a2 + v23[20]);
  *v25 = v20;
  v25[1] = v22;
  swift_retain();
  sub_23DF73E54((uint64_t)v9, type metadata accessor for AccessoryControlSheetView.ControlsView);
  swift_release();
  return sub_23DF73E54((uint64_t)v6, type metadata accessor for AccessoryControlSheetView.ControlsView);
}

__n128 sub_23E0FBC88@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  char *v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t KeyPath;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __n128 v15;
  __n128 v16;
  __n128 v17;
  __n128 v18;
  __n128 v19;
  __n128 v20;
  __n128 result;
  uint64_t v22;
  uint64_t v23;
  unsigned __int8 v24;
  uint64_t v25;
  _BYTE v26[209];
  unsigned __int8 v27;
  _BYTE v28[7];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  _BYTE v35[25];
  char v36;
  int v37;
  __int16 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[25];
  char v45;
  int v46;
  __int16 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __n128 v51[14];
  unsigned __int8 v52;
  _OWORD v53[4];
  __int16 v54;
  int v55;
  __int16 v56;
  char v57;
  int v58;
  __int16 v59;
  char v60;
  int v61;
  __int16 v62;
  int v63;
  __int16 v64;
  _DWORD v65[5];

  v4 = (char *)a1 + *(int *)(type metadata accessor for AccessoryControlSheetView(0) + 32);
  v5 = *((_OWORD *)v4 + 3);
  v53[2] = *((_OWORD *)v4 + 2);
  v53[3] = v5;
  v54 = *((_WORD *)v4 + 32);
  v6 = *((_OWORD *)v4 + 1);
  v53[0] = *(_OWORD *)v4;
  v53[1] = v6;
  sub_23DF98EC8((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF98590);
  sub_23DF9C754((uint64_t)v51);
  sub_23DF98EC8((uint64_t)v53, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _WORD))sub_23DF985F0);
  v24 = v51[0].n128_u8[0];
  v25 = *a1;
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v7 = sub_23E1360CC();
  v9 = v8;
  KeyPath = swift_getKeyPath();
  v22 = sub_23E1360CC();
  v23 = v11;
  v12 = swift_getKeyPath();
  v60 = 0;
  v57 = 0;
  v63 = v58;
  v64 = v59;
  v61 = v55;
  v62 = v56;
  if ((sub_23E0FAAC4() & 1) != 0)
  {
    v13 = sub_23E1360CC();
    *(_DWORD *)v28 = v65[0];
    *(_DWORD *)&v28[3] = *(_DWORD *)((char *)v65 + 3);
    v37 = v63;
    v38 = v64;
    v46 = v61;
    v47 = v62;
    v27 = v24;
    v29 = v7;
    v30 = v9;
    v31 = v25;
    v32 = KeyPath;
    memset(v35, 0, sizeof(v35));
    v34 = 0u;
    v33 = 0u;
    v36 = 0;
    v39 = v22;
    v40 = v23;
    v41 = v12;
    v43 = 0u;
    memset(v44, 0, sizeof(v44));
    v42 = 0u;
    v45 = 0;
    v48 = xmmword_23E142960;
    v49 = v13;
    v50 = v14;
    sub_23E0FD96C((uint64_t)&v27);
  }
  else
  {
    v27 = v24;
    *(_DWORD *)v28 = v65[0];
    *(_DWORD *)&v28[3] = *(_DWORD *)((char *)v65 + 3);
    v29 = v7;
    v30 = v9;
    v31 = v25;
    v32 = KeyPath;
    v33 = 0u;
    v34 = 0u;
    memset(v35, 0, sizeof(v35));
    v36 = 0;
    v38 = v59;
    v37 = v58;
    v39 = v22;
    v40 = v23;
    v41 = v12;
    v42 = 0u;
    v43 = 0u;
    memset(v44, 0, sizeof(v44));
    v45 = 0;
    v46 = v55;
    v47 = v56;
    v48 = xmmword_23E142960;
    sub_23E0FD70C((uint64_t)&v27);
  }
  sub_23DF89340((uint64_t)&v27, (uint64_t)v26, &qword_256D26B70);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26B78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26B80);
  sub_23E0FD718();
  sub_23E0FD784();
  sub_23E136480();
  v15 = v51[13];
  a2[12] = v51[12];
  a2[13] = v15;
  a2[14].n128_u8[0] = v52;
  v16 = v51[9];
  a2[8] = v51[8];
  a2[9] = v16;
  v17 = v51[11];
  a2[10] = v51[10];
  a2[11] = v17;
  v18 = v51[5];
  a2[4] = v51[4];
  a2[5] = v18;
  v19 = v51[7];
  a2[6] = v51[6];
  a2[7] = v19;
  v20 = v51[1];
  *a2 = v51[0];
  a2[1] = v20;
  result = v51[3];
  a2[2] = v51[2];
  a2[3] = result;
  return result;
}

uint64_t sub_23E0FC008(uint64_t a1, double *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for AccessoryControlSheetView(0);
  v6 = *(_QWORD *)(a3 + *(int *)(result + 28));
  if (v6)
  {
    *(_BYTE *)(v6 + OBJC_IVAR____TtC22HomeAccessoryControlUI22AccessoryControlsModel_allowsSwipeDownDismissal) = *a2 <= 1.0;
  }
  else
  {
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23E0FC0A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t KeyPath;
  int *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE v47[32];
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD v51[2];
  uint64_t v52;
  uint64_t v53;

  v40 = a2;
  v6 = type metadata accessor for Device();
  MEMORY[0x24BDAC7A8](v6);
  v9 = *a1;
  v8 = a1[1];
  v11 = a1[3];
  v45 = a1[2];
  v10 = v45;
  v46 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = v9;
  v42 = v11;
  v12 = a1[5];
  v43 = a1[4];
  v13 = v43;
  v44 = v12;
  v39 = a1[6];
  v14 = (int *)type metadata accessor for AccessoryControlSheetView.ControlsView(0);
  v15 = (char *)a2 + v14[6];
  *(_QWORD *)v47 = *(_QWORD *)v15;
  *(_OWORD *)&v47[8] = *(_OWORD *)(v15 + 8);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26700);
  MEMORY[0x24264B734](&v53, v16);
  v17 = v53;
  *(_QWORD *)v47 = v9;
  *(_QWORD *)&v47[8] = v8;
  v18 = v8;
  *(_QWORD *)&v47[16] = v10;
  *(_QWORD *)&v47[24] = v11;
  v48 = v13;
  v49 = v12;
  v19 = v39;
  v50 = v39;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1ECD0);
  MEMORY[0x24264B734](v51, v20);
  *(_OWORD *)v47 = v51[0];
  *(_OWORD *)&v47[16] = v51[1];
  v48 = v52;
  v21 = sub_23E0F9B68((uint64_t *)v47, v17);
  LOBYTE(v10) = v22;
  sub_23E0FF020((uint64_t)v47);
  swift_bridgeObjectRelease();
  v23 = *v40;
  v24 = v40;
  v25 = v46;
  sub_23DF73E10((uint64_t)v40 + v14[5], v46, (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v27 = (v10 & 1) == 0 && v21 == 0;
  v28 = (_QWORD *)((char *)v24 + v14[7]);
  v29 = *v28;
  v30 = v28[1];
  KeyPath = swift_getKeyPath();
  *a3 = v23;
  v32 = (int *)type metadata accessor for ControlModuleView();
  sub_23DF89384(v25, (uint64_t)a3 + v32[5], (uint64_t (*)(_QWORD))type metadata accessor for Device);
  v33 = (_QWORD *)((char *)a3 + v32[6]);
  v34 = v42;
  *v33 = v41;
  v33[1] = v18;
  v33[2] = v45;
  v33[3] = v34;
  v35 = v44;
  v33[4] = v43;
  v33[5] = v35;
  v33[6] = v19;
  *((_BYTE *)a3 + v32[7]) = v27;
  v36 = (_QWORD *)((char *)a3 + v32[8]);
  *v36 = v29;
  v36[1] = v30;
  v37 = (char *)a3 + v32[9];
  *(_QWORD *)v37 = KeyPath;
  *(_OWORD *)(v37 + 8) = 0u;
  *(_OWORD *)(v37 + 24) = 0u;
  *(_OWORD *)(v37 + 40) = 0u;
  *(_OWORD *)(v37 + 50) = 0u;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_23E0FC2FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD v11[4];

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (_QWORD *)(v1 + *(int *)(v4 + 24));
  v6 = v5[1];
  v7 = v5[2];
  v11[1] = *v5;
  v11[2] = v6;
  v11[3] = v7;
  sub_23DF73E10(v1, (uint64_t)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryControlSheetView.ControlsView);
  v8 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v9 = swift_allocObject();
  sub_23DF89384((uint64_t)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for AccessoryControlSheetView.ControlsView);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26700);
  __swift_instantiateConcreteTypeFromMangledName(qword_256D24520);
  type metadata accessor for ControlModuleView();
  sub_23E0FEED4();
  sub_23DF73F28(&qword_256D26CE0, (uint64_t (*)(uint64_t))type metadata accessor for ControlModuleView, (uint64_t)&unk_23E13A6B8);
  sub_23E0FEF78();
  return sub_23E136F18();
}

uint64_t sub_23E0FC478()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _BYTE *v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _BYTE *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t result;
  _BYTE v50[4];
  int v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  int v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  int *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;

  v1 = (int *)type metadata accessor for AccessoryControlDecorationButton.Config(0);
  v66 = *((_QWORD *)v1 - 1);
  MEMORY[0x24BDAC7A8](v1);
  v63 = &v50[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v3);
  v65 = &v50[-v4];
  MEMORY[0x24BDAC7A8](v5);
  v7 = &v50[-v6];
  MEMORY[0x24BDAC7A8](v8);
  v68 = &v50[-v9];
  MEMORY[0x24BDAC7A8](v10);
  v64 = &v50[-v11];
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v50[-v13];
  v57 = *(_QWORD *)(v0 + 16);
  v15 = *(_QWORD *)(v0 + 32);
  v67 = *(int **)(v0 + 24);
  v17 = *(_QWORD *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 48);
  v59 = *(_QWORD *)(v0 + 56);
  v60 = *(_QWORD *)(v0 + 64);
  v58 = *(_QWORD *)(v0 + 72);
  v56 = *(unsigned __int8 *)(v0 + 80);
  v55 = *(unsigned __int8 *)(v0 + 81);
  if (!*(_QWORD *)(v0 + 88))
  {
LABEL_35:
    sub_23DF98590(v57, (uint64_t)v67, v15, v17, v16, v59, v60, v58, v56, v55);
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    result = sub_23E1360C0();
    __break(1u);
    return result;
  }
  v51 = *(unsigned __int8 *)(v0 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_23E135C7C();
  swift_release();
  swift_release();
  swift_release();
  v61 = v70;
  v18 = v57;
  v70 = v57;
  v71 = (uint64_t)v67;
  v72 = v15;
  v73 = v17;
  v74 = v16;
  v19 = v17;
  v54 = v17;
  v20 = v15;
  v52 = v15;
  v21 = v16;
  v53 = v16;
  v16 = v59;
  v22 = v60;
  v75 = v59;
  v76 = v60;
  v23 = v58;
  v77 = v58;
  v15 = v56;
  v78 = v56;
  v24 = v55;
  v79 = v55;
  sub_23DF98590(v57, (uint64_t)v67, v20, v19, v21, v59, v60, v58, v56, v55);
  sub_23DF9C754((uint64_t)&v69);
  sub_23DF985F0(v18, (uint64_t)v67, v52, v54, v53, v16, v22, v23, v15, v24);
  v67 = v1;
  if (BYTE1(v69) == 1)
  {
    v25 = MEMORY[0x24BEE4AF8];
    v69 = MEMORY[0x24BEE4AF8];
    v26 = v61;
    v27 = *(_QWORD *)(v61 + 16);
    if (v27)
    {
      v17 = 0;
      v28 = MEMORY[0x24BEE4AF8];
      v29 = (uint64_t)v67;
      v62 = v7;
      while (v17 < *(_QWORD *)(v26 + 16))
      {
        v30 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
        v16 = *(_QWORD *)(v66 + 72);
        v15 = v26;
        sub_23DF73E10(v26 + v30 + v16 * v17, (uint64_t)v14, type metadata accessor for AccessoryControlDecorationButton.Config);
        if ((v14[*(int *)(v29 + 44)] & 1) != 0)
        {
          sub_23DF73E54((uint64_t)v14, type metadata accessor for AccessoryControlDecorationButton.Config);
        }
        else
        {
          sub_23DF89384((uint64_t)v14, (uint64_t)v64, type metadata accessor for AccessoryControlDecorationButton.Config);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_23E09E418(0, *(_QWORD *)(v28 + 16) + 1, 1);
          v28 = v69;
          v32 = *(_QWORD *)(v69 + 16);
          v31 = *(_QWORD *)(v69 + 24);
          if (v32 >= v31 >> 1)
          {
            sub_23E09E418(v31 > 1, v32 + 1, 1);
            v28 = v69;
          }
          *(_QWORD *)(v28 + 16) = v32 + 1;
          sub_23DF89384((uint64_t)v64, v28 + v30 + v32 * v16, type metadata accessor for AccessoryControlDecorationButton.Config);
          v29 = (uint64_t)v67;
          v7 = v62;
        }
        ++v17;
        v26 = v15;
        if (v27 == v17)
        {
          v25 = v69;
          goto LABEL_16;
        }
      }
      __break(1u);
      goto LABEL_35;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    v33 = v25;
    v1 = v67;
  }
  else
  {
    v33 = v61;
  }
  if (!v51)
    return v33;
  v34 = *(_QWORD *)(v33 + 16);
  if (v34)
  {
    v69 = MEMORY[0x24BEE4AF8];
    v35 = v33;
    sub_23E09E418(0, v34, 0);
    v36 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    v61 = v35;
    v37 = v35 + v36;
    v38 = *(_QWORD *)(v66 + 72);
    do
    {
      sub_23DF73E10(v37, (uint64_t)v7, type metadata accessor for AccessoryControlDecorationButton.Config);
      if (v7[v1[13]] == 1)
      {
        v39 = v63;
        sub_23DF73E10((uint64_t)v7, (uint64_t)v63, type metadata accessor for AccessoryControlDecorationButton.Config);
        v40 = v39;
        v39[v1[8]] = 1;
        v41 = v1[12];
        v42 = *(_QWORD *)&v7[v41 + 8];
        if (v42)
        {
          v43 = *(_QWORD *)&v7[v41];
          v44 = &v40[v41];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v40 = v63;
          *v44 = v43;
          v44[1] = v42;
        }
        v45 = v65;
        sub_23DF89384((uint64_t)v40, (uint64_t)v65, type metadata accessor for AccessoryControlDecorationButton.Config);
      }
      else
      {
        v45 = v65;
        sub_23DF73E10((uint64_t)v7, (uint64_t)v65, type metadata accessor for AccessoryControlDecorationButton.Config);
      }
      sub_23DF89384((uint64_t)v45, (uint64_t)v68, type metadata accessor for AccessoryControlDecorationButton.Config);
      sub_23DF73E54((uint64_t)v7, type metadata accessor for AccessoryControlDecorationButton.Config);
      v46 = v69;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_23E09E418(0, *(_QWORD *)(v46 + 16) + 1, 1);
        v46 = v69;
      }
      v48 = *(_QWORD *)(v46 + 16);
      v47 = *(_QWORD *)(v46 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_23E09E418(v47 > 1, v48 + 1, 1);
        v46 = v69;
      }
      *(_QWORD *)(v46 + 16) = v48 + 1;
      sub_23DF89384((uint64_t)v68, v46 + v36 + v48 * v38, type metadata accessor for AccessoryControlDecorationButton.Config);
      v37 += v38;
      --v34;
      v1 = v67;
    }
    while (v34);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x24BEE4AF8];
  }
  return v46;
}

uint64_t sub_23E0FCB28@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _BYTE v36[16];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;
  uint64_t v49;
  uint64_t v50;

  v3 = *v1;
  v4 = v1[2];
  v5 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  v8 = v1[8];
  v26 = v1[3];
  v24 = v1[9];
  v25 = v1[7];
  v9 = *((_BYTE *)v1 + 80);
  v35 = *((_BYTE *)v1 + 81);
  v10 = v1[11];
  v11 = v1[12];
  v31 = v10;
  v34 = sub_23E136C30();
  v45 = v8;
  v46 = v24;
  v47 = v9;
  v48 = v35;
  v49 = v31;
  v50 = v11;
  v12 = sub_23E0FC478();
  v13 = swift_bridgeObjectRetain();
  v27 = sub_23E010524(v13);
  swift_bridgeObjectRelease();
  type metadata accessor for AnimationModel();
  sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
  v14 = sub_23E1360CC();
  v32 = v15;
  v33 = v14;
  v16 = sub_23E1360CC();
  v29 = v17;
  v30 = v16;
  v28 = sub_23E136744();
  v37 = v4;
  v38 = v26;
  v39 = v5;
  v40 = v6;
  v41 = v7;
  v42 = v25;
  v43 = v8;
  v44 = v24;
  LOBYTE(v45) = v9;
  BYTE1(v45) = v35;
  sub_23DF98590(v4, v26, v5, v6, v7, v25, v8, v24, v9, v35);
  sub_23DF9C754((uint64_t)v36);
  sub_23DF985F0(v4, v26, v5, v6, v7, v25, v8, v24, v9, v35);
  v18 = v36[8];
  if (qword_256D1D370 != -1)
    swift_once();
  if (v18 == byte_256D224A0)
    sub_23E1364B0();
  result = sub_23E135D00();
  *(_QWORD *)a1 = v34;
  *(_WORD *)(a1 + 8) = 256;
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v27;
  *(_QWORD *)(a1 + 32) = v33;
  *(_QWORD *)(a1 + 40) = v32;
  *(_QWORD *)(a1 + 48) = v30;
  *(_QWORD *)(a1 + 56) = v29;
  *(_QWORD *)(a1 + 64) = v3;
  *(_BYTE *)(a1 + 72) = v28;
  *(_QWORD *)(a1 + 80) = v20;
  *(_QWORD *)(a1 + 88) = v21;
  *(_QWORD *)(a1 + 96) = v22;
  *(_QWORD *)(a1 + 104) = v23;
  *(_BYTE *)(a1 + 112) = 0;
  return result;
}

uint64_t sub_23E0FCE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t KeyPath;
  id v4;
  id v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char v14;

  if (a1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_23E135C7C();
    swift_release();
    swift_release();
    swift_release();
    if ((_QWORD)v7)
    {
      KeyPath = swift_getKeyPath();
      type metadata accessor for AnimationModel();
      sub_23DF73F28((unint64_t *)&qword_256D1DA28, (uint64_t (*)(uint64_t))type metadata accessor for AnimationModel, (uint64_t)&unk_23E138AF4);
      v4 = (id)v7;
      sub_23E1360CC();
      v5 = v4;
      sub_23DF98590(KeyPath, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D26CA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D26CA8);
      sub_23E0FEBF0();
      sub_23E0FECA0();
      sub_23E136480();

      sub_23DF985F0(KeyPath, 0, 0, 0, 0, 0, 0, 0, 0, 0);
      result = swift_release();
    }
    else
    {
      sub_23E136FE4();
      sub_23E135E5C();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D26CA0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D26CA8);
      sub_23E0FEBF0();
      sub_23E0FECA0();
      result = sub_23E136480();
    }
    *(_OWORD *)a2 = v7;
    *(_OWORD *)(a2 + 16) = v8;
    *(_OWORD *)(a2 + 32) = v9;
    *(_OWORD *)(a2 + 48) = v10;
    *(_OWORD *)(a2 + 64) = v11;
    *(_OWORD *)(a2 + 80) = v12;
    *(_QWORD *)(a2 + 96) = v13;
    *(_BYTE *)(a2 + 104) = v14;
  }
  else
  {
    type metadata accessor for AccessoryControlsModel();
    sub_23DF73F28((unint64_t *)&qword_256D20ED8, (uint64_t (*)(uint64_t))type metadata accessor for AccessoryControlsModel, (uint64_t)&unk_23E140F38);
    result = sub_23E1360C0();
    __break(1u);
  }
  return result;
}

uint64_t sub_23E0FD0EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_23E0FCE04(*v1, a1);
}

uint64_t sub_23E0FD0F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[2];

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x24BDAC7A8](a1);
  v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23DF73E10(v1, (uint64_t)v4, type metadata accessor for AccessoryControlSheetView);
  v5 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v6 = swift_allocObject();
  sub_23DF89384((uint64_t)v4, v6 + v5, type metadata accessor for AccessoryControlSheetView);
  v8[0] = sub_23E0FD210;
  v8[1] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26AB0);
  sub_23DF89B88(&qword_256D26AB8, &qword_256D26AB0, MEMORY[0x24BDEC6F8]);
  sub_23E136AF8();
  return swift_release();
}

uint64_t sub_23E0FD210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlSheetView(0) - 8) + 80);
  return sub_23E0FACF0(a1, (uint64_t *)(v2 + ((v5 + 16) & ~v5)), a2);
}

uint64_t sub_23E0FD25C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_23E0FB650(*(uint64_t **)(v1 + 16), a1);
}

unint64_t sub_23E0FD274()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26B18;
  if (!qword_256D26B18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26AC8);
    v2[0] = sub_23DF89B88(&qword_256D26B20, &qword_256D26AC0, MEMORY[0x24BDEB238]);
    v2[1] = sub_23DF73F28(&qword_256D26B28, type metadata accessor for HeaderViewModifier.ScrollView, (uint64_t)&unk_23E141AD0);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26B18);
  }
  return result;
}

unint64_t sub_23E0FD310()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26B30;
  if (!qword_256D26B30)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26AE8);
    v2[0] = sub_23E0FD37C();
    v2[1] = sub_23E0FD4AC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26B30);
  }
  return result;
}

unint64_t sub_23E0FD37C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26B38;
  if (!qword_256D26B38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26AE0);
    v2[0] = sub_23E0FD400();
    v2[1] = sub_23DF89B88(&qword_256D26B58, &qword_256D26B60, MEMORY[0x24BDEF370]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26B38);
  }
  return result;
}

unint64_t sub_23E0FD400()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_256D26B40;
  if (!qword_256D26B40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26AD8);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26AC8);
    v2[3] = sub_23E0FD274();
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_23DF89B88(&qword_256D26B48, &qword_256D26B50, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26B40);
  }
  return result;
}

unint64_t sub_23E0FD4AC()
{
  unint64_t result;

  result = qword_256D26B68;
  if (!qword_256D26B68)
  {
    result = MEMORY[0x24264C55C](&unk_23E138F90, &type metadata for AnimationModel.Presentation.BackgroundView);
    atomic_store(result, (unint64_t *)&qword_256D26B68);
  }
  return result;
}

uint64_t objectdestroyTm_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for AccessoryControlSheetView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = v3 + *(int *)(v1 + 20);
  v5 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v7 = v4 + *(int *)(v6 + 24);
  swift_bridgeObjectRelease();
  v8 = v7 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v9 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v10 = v3 + *(int *)(v1 + 32);
  sub_23DF985F0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_QWORD *)(v10 + 16), *(_QWORD *)(v10 + 24), *(_QWORD *)(v10 + 32), *(_QWORD *)(v10 + 40), *(_QWORD *)(v10 + 48), *(_QWORD *)(v10 + 56), *(_BYTE *)(v10 + 64), *(_BYTE *)(v10 + 65));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_23E0FD6C0(uint64_t a1, double *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlSheetView(0) - 8) + 80);
  return sub_23E0FC008(a1, a2, v2 + ((v5 + 16) & ~v5));
}

uint64_t sub_23E0FD70C(uint64_t result)
{
  *(_BYTE *)(result + 224) = 1;
  return result;
}

unint64_t sub_23E0FD718()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26B88;
  if (!qword_256D26B88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26B78);
    v2[0] = sub_23E0FD784();
    v2[1] = sub_23E0FD928();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26B88);
  }
  return result;
}

unint64_t sub_23E0FD784()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26B90;
  if (!qword_256D26B90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26B80);
    v2[0] = sub_23E0FD7F0();
    v2[1] = sub_23E0FD834();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26B90);
  }
  return result;
}

unint64_t sub_23E0FD7F0()
{
  unint64_t result;

  result = qword_256D26B98;
  if (!qword_256D26B98)
  {
    result = MEMORY[0x24264C55C](&unk_23E13F7A4, &type metadata for SheetBackgroundView);
    atomic_store(result, (unint64_t *)&qword_256D26B98);
  }
  return result;
}

unint64_t sub_23E0FD834()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26BA0;
  if (!qword_256D26BA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26BA8);
    v2[0] = sub_23E0FD8A0();
    v2[1] = sub_23E0FD8E4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED2F8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26BA0);
  }
  return result;
}

unint64_t sub_23E0FD8A0()
{
  unint64_t result;

  result = qword_256D26BB0;
  if (!qword_256D26BB0)
  {
    result = MEMORY[0x24264C55C](&unk_23E138F40, &type metadata for AnimationModel.MatchedGeometryEffect.Background);
    atomic_store(result, (unint64_t *)&qword_256D26BB0);
  }
  return result;
}

unint64_t sub_23E0FD8E4()
{
  unint64_t result;

  result = qword_256D26BB8;
  if (!qword_256D26BB8)
  {
    result = MEMORY[0x24264C55C](&unk_23E138EF0, &type metadata for AnimationModel.SwipeDownDismissal.BackgroundOpacity);
    atomic_store(result, (unint64_t *)&qword_256D26BB8);
  }
  return result;
}

unint64_t sub_23E0FD928()
{
  unint64_t result;

  result = qword_256D26BC0;
  if (!qword_256D26BC0)
  {
    result = MEMORY[0x24264C55C](&unk_23E138A3C, &type metadata for AnimationModel.BackgroundTapDismissal);
    atomic_store(result, (unint64_t *)&qword_256D26BC0);
  }
  return result;
}

uint64_t sub_23E0FD96C(uint64_t result)
{
  *(_BYTE *)(result + 224) = 0;
  return result;
}

uint64_t sub_23E0FD974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 1)
    return swift_retain();
  return result;
}

uint64_t sub_23E0FD988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 1)
    return swift_release();
  return result;
}

uint64_t type metadata accessor for AccessoryControlSheetView.ControlsView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D26C50);
}

ValueMetadata *type metadata accessor for AccessoryControlSheetView.BottomView()
{
  return &type metadata for AccessoryControlSheetView.BottomView;
}

uint64_t destroy for AccessoryControlSheetView.DecorationButtonOverlay(uint64_t a1)
{
  sub_23DF985F0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80), *(_BYTE *)(a1 + 81));
  return swift_release();
}

uint64_t initializeWithCopy for AccessoryControlSheetView.DecorationButtonOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v14 = *(_BYTE *)(a2 + 80);
  v15 = *(_BYTE *)(a2 + 81);
  sub_23DF98590(v4, v5, v6, v7, v8, v9, v10, v11, v14, v15);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v14;
  *(_BYTE *)(a1 + 81) = v15;
  v12 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for AccessoryControlSheetView.DecorationButtonOverlay(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  char v23;
  char v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(_QWORD *)(a2 + 56);
  v10 = *(_QWORD *)(a2 + 64);
  v11 = *(_QWORD *)(a2 + 72);
  v23 = *(_BYTE *)(a2 + 80);
  v24 = *(_BYTE *)(a2 + 81);
  sub_23DF98590(v4, v5, v6, v7, v8, v9, v10, v11, v23, v24);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  v17 = *(_QWORD *)(a1 + 56);
  v18 = *(_QWORD *)(a1 + 64);
  v19 = *(_QWORD *)(a1 + 72);
  v20 = *(_BYTE *)(a1 + 80);
  v21 = *(_BYTE *)(a1 + 81);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v23;
  *(_BYTE *)(a1 + 81) = v24;
  sub_23DF985F0(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t assignWithTake for AccessoryControlSheetView.DecorationButtonOverlay(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  __int128 v16;
  __int128 v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_BYTE *)(a2 + 80);
  v5 = *(_BYTE *)(a2 + 81);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  v14 = *(_BYTE *)(a1 + 80);
  v15 = *(_BYTE *)(a1 + 81);
  v16 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v16;
  v17 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v17;
  *(_BYTE *)(a1 + 80) = v4;
  *(_BYTE *)(a1 + 81) = v5;
  sub_23DF985F0(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccessoryControlSheetView.DecorationButtonOverlay(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 104))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 88);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AccessoryControlSheetView.DecorationButtonOverlay(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 0;
    if (a2)
      *(_QWORD *)(result + 88) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryControlSheetView.DecorationButtonOverlay()
{
  return &type metadata for AccessoryControlSheetView.DecorationButtonOverlay;
}

uint64_t *sub_23E0FDD5C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = a1;
  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v52 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v52 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = a3[5];
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_23E134C80();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    v9 = (int *)type metadata accessor for Device();
    v10 = v9[5];
    v11 = &v6[v10];
    v12 = &v7[v10];
    v13 = *((_QWORD *)v12 + 1);
    *(_QWORD *)v11 = *(_QWORD *)v12;
    *((_QWORD *)v11 + 1) = v13;
    v14 = v9[6];
    v15 = &v6[v14];
    v16 = &v7[v14];
    v17 = *(_QWORD *)&v7[v14 + 8];
    *(_QWORD *)v15 = *(_QWORD *)&v7[v14];
    *((_QWORD *)v15 + 1) = v17;
    v18 = *(int *)(type metadata accessor for IconDescriptor() + 20);
    v19 = &v15[v18];
    v20 = &v16[v18];
    v21 = sub_23E135910();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    v23 = v9[7];
    v24 = &v6[v23];
    v25 = &v7[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = v9[8];
    v28 = &v6[v27];
    v29 = &v7[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    *(_QWORD *)&v6[v9[9]] = *(_QWORD *)&v7[v9[9]];
    v6[v9[10]] = v7[v9[10]];
    v6[v9[11]] = v7[v9[11]];
    v6[v9[12]] = v7[v9[12]];
    v6[v9[13]] = v7[v9[13]];
    *(_QWORD *)&v6[v9[14]] = *(_QWORD *)&v7[v9[14]];
    v6[v9[15]] = v7[v9[15]];
    v31 = v9[16];
    v32 = &v6[v31];
    v33 = &v7[v31];
    v34 = *((_QWORD *)v33 + 1);
    *(_QWORD *)v32 = *(_QWORD *)v33;
    *((_QWORD *)v32 + 1) = v34;
    v35 = v9[17];
    v36 = &v6[v35];
    v37 = &v7[v35];
    v38 = *((_QWORD *)v37 + 1);
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *((_QWORD *)v36 + 1) = v38;
    v39 = v9[18];
    v40 = &v6[v39];
    v41 = &v7[v39];
    v42 = *((_QWORD *)v41 + 1);
    *(_QWORD *)v40 = *(_QWORD *)v41;
    *((_QWORD *)v40 + 1) = v42;
    v6[v9[19]] = v7[v9[19]];
    v6[v9[20]] = v7[v9[20]];
    v43 = v9[21];
    v44 = &v6[v43];
    v45 = &v7[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = a3[6];
    v48 = a3[7];
    v49 = (uint64_t *)((char *)v3 + v47);
    v50 = (uint64_t *)((char *)a2 + v47);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v49[2] = v50[2];
    *(_OWORD *)((char *)v3 + v48) = *(_OWORD *)((char *)a2 + v48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

_QWORD *sub_23E0FDFE8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v3;
  char *v4;
  char *v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;

  *a1 = *a2;
  v3 = a3[5];
  v4 = (char *)a1 + v3;
  v5 = (char *)a2 + v3;
  v6 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v4, v5, v6);
  v7 = (int *)type metadata accessor for Device();
  v8 = v7[5];
  v9 = &v4[v8];
  v10 = &v5[v8];
  v11 = *((_QWORD *)v10 + 1);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *((_QWORD *)v9 + 1) = v11;
  v12 = v7[6];
  v13 = &v4[v12];
  v14 = &v5[v12];
  v15 = *(_QWORD *)&v5[v12 + 8];
  *(_QWORD *)v13 = *(_QWORD *)&v5[v12];
  *((_QWORD *)v13 + 1) = v15;
  v16 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v17 = &v13[v16];
  v18 = &v14[v16];
  v19 = sub_23E135910();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  v21 = v7[7];
  v22 = &v4[v21];
  v23 = &v5[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = v7[8];
  v26 = &v4[v25];
  v27 = &v5[v25];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  *(_QWORD *)&v4[v7[9]] = *(_QWORD *)&v5[v7[9]];
  v4[v7[10]] = v5[v7[10]];
  v4[v7[11]] = v5[v7[11]];
  v4[v7[12]] = v5[v7[12]];
  v4[v7[13]] = v5[v7[13]];
  *(_QWORD *)&v4[v7[14]] = *(_QWORD *)&v5[v7[14]];
  v4[v7[15]] = v5[v7[15]];
  v29 = v7[16];
  v30 = &v4[v29];
  v31 = &v5[v29];
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = v32;
  v33 = v7[17];
  v34 = &v4[v33];
  v35 = &v5[v33];
  v36 = *((_QWORD *)v35 + 1);
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = v36;
  v37 = v7[18];
  v38 = &v4[v37];
  v39 = &v5[v37];
  v40 = *((_QWORD *)v39 + 1);
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *((_QWORD *)v38 + 1) = v40;
  v4[v7[19]] = v5[v7[19]];
  v4[v7[20]] = v5[v7[20]];
  v41 = v7[21];
  v42 = &v4[v41];
  v43 = &v5[v41];
  v44 = *((_QWORD *)v43 + 1);
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *((_QWORD *)v42 + 1) = v44;
  v45 = a3[6];
  v46 = a3[7];
  v47 = (_QWORD *)((char *)a1 + v45);
  v48 = (_QWORD *)((char *)a2 + v45);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v47[2] = v48[2];
  *(_OWORD *)((char *)a1 + v46) = *(_OWORD *)((char *)a2 + v46);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23E0FE24C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = v10[6];
  v15 = &v7[v14];
  v16 = &v8[v14];
  *(_QWORD *)v15 = *(_QWORD *)&v8[v14];
  *((_QWORD *)v15 + 1) = *(_QWORD *)&v8[v14 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v18 = &v15[v17];
  v19 = &v16[v17];
  v20 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v21 = v10[7];
  v22 = &v7[v21];
  v23 = &v8[v21];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v10[8];
  v25 = &v7[v24];
  v26 = &v8[v24];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_retain();
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v27 = v10[16];
  v28 = &v7[v27];
  v29 = &v8[v27];
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *((_QWORD *)v28 + 1) = *((_QWORD *)v29 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30 = v10[17];
  v31 = &v7[v30];
  v32 = &v8[v30];
  *(_QWORD *)v31 = *(_QWORD *)v32;
  *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v33 = v10[18];
  v34 = &v7[v33];
  v35 = &v8[v33];
  *(_QWORD *)v34 = *(_QWORD *)v35;
  *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v36 = v10[21];
  v37 = &v7[v36];
  v38 = &v8[v36];
  *(_QWORD *)v37 = *(_QWORD *)v38;
  *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[6];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  *(_QWORD *)((char *)a1 + v39) = *(_QWORD *)((char *)a2 + v39);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 1) = *((_QWORD *)v41 + 1);
  swift_retain();
  swift_release();
  *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[7];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  return a1;
}

_QWORD *sub_23E0FE564(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  *(_OWORD *)&v7[v10[5]] = *(_OWORD *)&v8[v10[5]];
  v11 = v10[6];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *(_OWORD *)&v7[v11] = *(_OWORD *)&v8[v11];
  v14 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v15 = &v12[v14];
  v16 = &v13[v14];
  v17 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)&v7[v10[7]] = *(_OWORD *)&v8[v10[7]];
  *(_OWORD *)&v7[v10[8]] = *(_OWORD *)&v8[v10[8]];
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  v7[v10[15]] = v8[v10[15]];
  *(_OWORD *)&v7[v10[16]] = *(_OWORD *)&v8[v10[16]];
  *(_OWORD *)&v7[v10[17]] = *(_OWORD *)&v8[v10[17]];
  *(_OWORD *)&v7[v10[18]] = *(_OWORD *)&v8[v10[18]];
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  *(_OWORD *)&v7[v10[21]] = *(_OWORD *)&v8[v10[21]];
  v18 = a3[6];
  v19 = a3[7];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *((_QWORD *)v20 + 2) = *((_QWORD *)v21 + 2);
  *(_OWORD *)((char *)a1 + v19) = *(_OWORD *)((char *)a2 + v19);
  return a1;
}

_QWORD *sub_23E0FE710(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_23E134C80();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for Device();
  v11 = v10[5];
  v12 = &v7[v11];
  v13 = &v8[v11];
  v15 = *(_QWORD *)v13;
  v14 = *((_QWORD *)v13 + 1);
  *(_QWORD *)v12 = v15;
  *((_QWORD *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  v16 = v10[6];
  v17 = &v7[v16];
  v18 = &v8[v16];
  v19 = *(_QWORD *)&v8[v16 + 8];
  *(_QWORD *)v17 = *(_QWORD *)&v8[v16];
  *((_QWORD *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  v20 = *(int *)(type metadata accessor for IconDescriptor() + 20);
  v21 = &v17[v20];
  v22 = &v18[v20];
  v23 = sub_23E135910();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  v24 = v10[7];
  v25 = &v7[v24];
  v26 = &v8[v24];
  v28 = *(_QWORD *)v26;
  v27 = *((_QWORD *)v26 + 1);
  *(_QWORD *)v25 = v28;
  *((_QWORD *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  v29 = v10[8];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v33 = *(_QWORD *)v31;
  v32 = *((_QWORD *)v31 + 1);
  *(_QWORD *)v30 = v33;
  *((_QWORD *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v10[9]] = *(_QWORD *)&v8[v10[9]];
  swift_bridgeObjectRelease();
  v7[v10[10]] = v8[v10[10]];
  v7[v10[11]] = v8[v10[11]];
  v7[v10[12]] = v8[v10[12]];
  v7[v10[13]] = v8[v10[13]];
  *(_QWORD *)&v7[v10[14]] = *(_QWORD *)&v8[v10[14]];
  swift_release();
  v7[v10[15]] = v8[v10[15]];
  v34 = v10[16];
  v35 = &v7[v34];
  v36 = &v8[v34];
  v38 = *(_QWORD *)v36;
  v37 = *((_QWORD *)v36 + 1);
  *(_QWORD *)v35 = v38;
  *((_QWORD *)v35 + 1) = v37;
  swift_bridgeObjectRelease();
  v39 = v10[17];
  v40 = &v7[v39];
  v41 = &v8[v39];
  v43 = *(_QWORD *)v41;
  v42 = *((_QWORD *)v41 + 1);
  *(_QWORD *)v40 = v43;
  *((_QWORD *)v40 + 1) = v42;
  swift_bridgeObjectRelease();
  v44 = v10[18];
  v45 = &v7[v44];
  v46 = &v8[v44];
  v48 = *(_QWORD *)v46;
  v47 = *((_QWORD *)v46 + 1);
  *(_QWORD *)v45 = v48;
  *((_QWORD *)v45 + 1) = v47;
  swift_bridgeObjectRelease();
  v7[v10[19]] = v8[v10[19]];
  v7[v10[20]] = v8[v10[20]];
  v49 = v10[21];
  v50 = &v7[v49];
  v51 = &v8[v49];
  v53 = *(_QWORD *)v51;
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = v53;
  *((_QWORD *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  v54 = a3[6];
  v55 = (char *)a1 + v54;
  v56 = (char *)a2 + v54;
  *(_QWORD *)((char *)a1 + v54) = *(_QWORD *)((char *)a2 + v54);
  swift_release();
  *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
  swift_release();
  *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_23E0FE968()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Device();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E0FE9FC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_3(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Device();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_23E0FEA8C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Device();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_23E0FEB1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26C90;
  if (!qword_256D26C90)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26C98);
    v2[0] = sub_23DF89B88(&qword_256D26AB8, &qword_256D26AB0, MEMORY[0x24BDEC6F8]);
    v2[1] = sub_23DF73F28(&qword_256D1F520, MEMORY[0x24BDF1088], MEMORY[0x24BDF1078]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26C90);
  }
  return result;
}

uint64_t sub_23E0FEBB8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0FEBC8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E0FEBD8()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E0FEBF0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26CB0;
  if (!qword_256D26CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26CA0);
    v2[0] = sub_23DF9D28C();
    v2[1] = sub_23E0FEC5C();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26CB0);
  }
  return result;
}

unint64_t sub_23E0FEC5C()
{
  unint64_t result;

  result = qword_256D26CB8;
  if (!qword_256D26CB8)
  {
    result = MEMORY[0x24264C55C](&unk_23E139194, &type metadata for AnimationModel.Visibility.BottomViewControllerHostingView);
    atomic_store(result, (unint64_t *)&qword_256D26CB8);
  }
  return result;
}

unint64_t sub_23E0FECA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26CC0;
  if (!qword_256D26CC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26CA8);
    v2[0] = MEMORY[0x24BDF4610];
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26CC0);
  }
  return result;
}

uint64_t sub_23E0FED0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = type metadata accessor for AccessoryControlSheetView.ControlsView(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2) + *(int *)(v1 + 20);
  v4 = sub_23E134C80();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  v5 = type metadata accessor for Device();
  swift_bridgeObjectRelease();
  v6 = v3 + *(int *)(v5 + 24);
  swift_bridgeObjectRelease();
  v7 = v6 + *(int *)(type metadata accessor for IconDescriptor() + 20);
  v8 = sub_23E135910();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E0FEE88@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for AccessoryControlSheetView.ControlsView(0) - 8)
                          + 80);
  return sub_23E0FC0A4(a1, (_QWORD *)(v2 + ((v5 + 16) & ~v5)), a2);
}

unint64_t sub_23E0FEED4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26CC8;
  if (!qword_256D26CC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26700);
    v2[0] = sub_23DF89B88(&qword_256D26CD0, &qword_256D1EC60, MEMORY[0x24BEE12B8]);
    v2[1] = sub_23DF89B88(&qword_256D26CD8, &qword_256D1EC60, MEMORY[0x24BEE12D8]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF48A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26CC8);
  }
  return result;
}

unint64_t sub_23E0FEF78()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D26CE8;
  if (!qword_256D26CE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1ECD0);
    v2 = sub_23E0FEFDC();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF48B8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D26CE8);
  }
  return result;
}

unint64_t sub_23E0FEFDC()
{
  unint64_t result;

  result = qword_256D26CF0;
  if (!qword_256D26CF0)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for Device.ControlModule, &type metadata for Device.ControlModule);
    atomic_store(result, (unint64_t *)&qword_256D26CF0);
  }
  return result;
}

uint64_t sub_23E0FF020(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23E0FF068()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26CF8;
  if (!qword_256D26CF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26D00);
    v2[0] = sub_23E0FEBF0();
    v2[1] = sub_23E0FECA0();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26CF8);
  }
  return result;
}

unint64_t sub_23E0FF0D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26D08;
  if (!qword_256D26D08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26D10);
    v2[0] = sub_23E0FF144();
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26D08);
  }
  return result;
}

unint64_t sub_23E0FF144()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26D18;
  if (!qword_256D26D18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26D20);
    v2[0] = sub_23DF89B88(&qword_256D219B0, &qword_256D219B8, MEMORY[0x24BDEB358]);
    v2[1] = sub_23E0FF1C8();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26D18);
  }
  return result;
}

unint64_t sub_23E0FF1C8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26D28;
  if (!qword_256D26D28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26D30);
    v2[0] = sub_23E0FF234();
    v2[1] = sub_23E0FF328();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED2F8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26D28);
  }
  return result;
}

unint64_t sub_23E0FF234()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26D38;
  if (!qword_256D26D38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26D40);
    v2[0] = sub_23E0FF2A0();
    v2[1] = sub_23E0FF2E4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED2F8], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26D38);
  }
  return result;
}

unint64_t sub_23E0FF2A0()
{
  unint64_t result;

  result = qword_256D26D48;
  if (!qword_256D26D48)
  {
    result = MEMORY[0x24264C55C](&protocol conformance descriptor for AccessoryControlDecorationButton.OverlayModifier, &type metadata for AccessoryControlDecorationButton.OverlayModifier);
    atomic_store(result, (unint64_t *)&qword_256D26D48);
  }
  return result;
}

unint64_t sub_23E0FF2E4()
{
  unint64_t result;

  result = qword_256D26D50;
  if (!qword_256D26D50)
  {
    result = MEMORY[0x24264C55C](&unk_23E1390F4, &type metadata for AnimationModel.Visibility.DecorationButtonView);
    atomic_store(result, (unint64_t *)&qword_256D26D50);
  }
  return result;
}

unint64_t sub_23E0FF328()
{
  unint64_t result;

  result = qword_256D26D58;
  if (!qword_256D26D58)
  {
    result = MEMORY[0x24264C55C](&unk_23E139144, &type metadata for AnimationModel.MatchedGeometryEffect.Button);
    atomic_store(result, (unint64_t *)&qword_256D26D58);
  }
  return result;
}

unint64_t sub_23E0FF370()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D26D60;
  if (!qword_256D26D60)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256D26D68);
    v2 = sub_23DF73F28(&qword_256D26CE0, (uint64_t (*)(uint64_t))type metadata accessor for ControlModuleView, (uint64_t)&unk_23E13A6B8);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF4A08], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D26D60);
  }
  return result;
}

Swift::Double __swiftcall Double.clamped(low:high:)(Swift::Double low, Swift::Double high)
{
  double v2;

  if (high >= v2)
    high = v2;
  if (high >= low)
    return high;
  return low;
}

double CGRect.leftCenter.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_23E0FF418((double (*)(void))MEMORY[0x24BDBF010], a1, a2, a3, a4);
}

double CGRect.rightCenter.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_23E0FF418((double (*)(void))MEMORY[0x24BDBEFF0], a1, a2, a3, a4);
}

double sub_23E0FF418(double (*a1)(void), CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v9;
  CGRect v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;

  v9 = a1();
  v11.origin.x = a2;
  v11.origin.y = a3;
  v11.size.width = a4;
  v11.size.height = a5;
  CGRectGetMinX(v11);
  v12.origin.x = a2;
  v12.origin.y = a3;
  v12.size.width = a4;
  v12.size.height = a5;
  CGRectGetWidth(v12);
  v13.origin.x = a2;
  v13.origin.y = a3;
  v13.size.width = a4;
  v13.size.height = a5;
  CGRectGetMinY(v13);
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetHeight(v14);
  return v9;
}

double CGRect.topCenter.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_23E0FF4D4((void (*)(double, double, double, double))MEMORY[0x24BDBF018], a1, a2, a3, a4);
}

double CGRect.bottomCenter.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_23E0FF4D4((void (*)(double, double, double, double))MEMORY[0x24BDBEFF8], a1, a2, a3, a4);
}

double sub_23E0FF4D4(void (*a1)(double, double, double, double), CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double MinX;
  double v11;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  MinX = CGRectGetMinX(*(CGRect *)&a2);
  v13.origin.x = a2;
  v13.origin.y = a3;
  v13.size.width = a4;
  v13.size.height = a5;
  v11 = MinX + CGRectGetWidth(v13) * 0.5;
  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  CGRectGetMinY(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  CGRectGetHeight(v15);
  a1(a2, a3, a4, a5);
  return v11;
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MinX;
  double v9;
  CGRect v11;
  CGRect v12;
  CGRect v13;

  MinX = CGRectGetMinX(*(CGRect *)&a1);
  v11.origin.x = a1;
  v11.origin.y = a2;
  v11.size.width = a3;
  v11.size.height = a4;
  v9 = MinX + CGRectGetWidth(v11) * 0.5;
  v12.origin.x = a1;
  v12.origin.y = a2;
  v12.size.width = a3;
  v12.size.height = a4;
  CGRectGetMinY(v12);
  v13.origin.x = a1;
  v13.origin.y = a2;
  v13.size.width = a3;
  v13.size.height = a4;
  CGRectGetHeight(v13);
  return v9;
}

double static CGVector.vector(from:to:)(double a1, double a2, double a3)
{
  return a3 - a1;
}

double CGVector.magnitude.getter(double a1, double a2)
{
  return sqrt(a1 * a1 + a2 * a2);
}

double CGRect.topLeft.getter(double a1, double a2, double a3, double a4)
{
  return sub_23E0FF694((double (*)(void))MEMORY[0x24BDBF010], (void (*)(double, double, double, double))MEMORY[0x24BDBF018], a1, a2, a3, a4);
}

double CGRect.topRight.getter(double a1, double a2, double a3, double a4)
{
  return sub_23E0FF694((double (*)(void))MEMORY[0x24BDBEFF0], (void (*)(double, double, double, double))MEMORY[0x24BDBF018], a1, a2, a3, a4);
}

double CGRect.bottomLeft.getter(double a1, double a2, double a3, double a4)
{
  return sub_23E0FF694((double (*)(void))MEMORY[0x24BDBF010], (void (*)(double, double, double, double))MEMORY[0x24BDBEFF8], a1, a2, a3, a4);
}

double CGRect.bottomRight.getter(double a1, double a2, double a3, double a4)
{
  return sub_23E0FF694((double (*)(void))MEMORY[0x24BDBEFF0], (void (*)(double, double, double, double))MEMORY[0x24BDBEFF8], a1, a2, a3, a4);
}

double sub_23E0FF694(double (*a1)(void), void (*a2)(double, double, double, double), double a3, double a4, double a5, double a6)
{
  double v11;

  v11 = a1();
  a2(a3, a4, a5, a6);
  return v11;
}

double Angle.positiveDegrees.getter(double a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  double v18;
  double v19;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  int v26;
  uint64_t v27;

  v27 = *MEMORY[0x24BDAC8D0];
  MEMORY[0x24264BD58](a1 * 57.2957795);
  sub_23E134AAC();
  v1 = (unsigned __int128)0 >> 112;
  sub_23E137440();
  v21 = (unsigned __int128)0 >> 96;
  v2 = sub_23E137458();
  v4 = sub_23E137440();
  v6 = v5;
  if ((v2 & 1) != 0)
  {
    v7 = v3;
    sub_23E13744C();
    sub_23E137440();
    sub_23E137458();
    sub_23E134AAC();
    v8 = MEMORY[0x24264BD34](0, 0, 0, v4, v6, v7);
    MEMORY[0x24264BD4C](0, (v21 << 32) | (v1 << 48), 0, v8, v9, v10);
    sub_23E137440();
    sub_23E137470();
  }
  else if ((sub_23E137458() & 1) != 0)
  {
    v11 = sub_23E137440();
    v23 = v12;
    v24 = v11;
    v22 = v13;
    sub_23E13744C();
    sub_23E137440();
    sub_23E137458();
    sub_23E134AAC();
    v14 = MEMORY[0x24264BD34](0, 0, 0, v24, v23, v22);
    MEMORY[0x24264BD4C](0, (v21 << 32) | (v1 << 48), 0, v14, v15, v16);
  }
  v25 = 0uLL;
  v26 = 0;
  sub_23E134AAC();
  LODWORD(v25) = 0;
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1518]), sel_initWithDecimal_, &v25);
  objc_msgSend(v17, sel_doubleValue);
  v19 = v18;

  return v19;
}

Swift::Double __swiftcall Double.init(_:)(NSDecimal *a1)
{
  uint64_t v1;
  int v2;
  id v3;
  double v4;
  double v5;
  NSDecimal *v7;
  uint64_t v8;
  int v9;

  v7 = a1;
  v8 = v1;
  v9 = v2;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1518]), sel_initWithDecimal_, &v7);
  objc_msgSend(v3, sel_doubleValue);
  v5 = v4;

  return v5;
}

uint64_t *sub_23E0FFC3C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  int *v6;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  uint64_t v79;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  void (*v90)(char *, char *, uint64_t);
  char *v91;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v95;
  char *v96;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return a1;
  }
  v6 = a3;
  a1[1] = a2[1];
  swift_retain();
  swift_retain();
  v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v16 = sub_23E134C80();
      v17 = *(_QWORD *)(v16 - 8);
      v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      v89 = v16;
      v84 = v17;
      v86 = v6;
      if (v88(v10, 2, v16))
      {
        v18 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v9, v10, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 2, v16);
      }
      v30 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v30[5]] = *(_QWORD *)&v10[v30[5]];
      *(_QWORD *)&v9[v30[6]] = *(_QWORD *)&v10[v30[6]];
      v9[v30[7]] = v10[v30[7]];
      v9[v30[8]] = v10[v30[8]];
      v31 = v30[9];
      __dst = &v9[v31];
      v32 = &v10[v31];
      v33 = _s4KnobV10IconConfigVMa(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      v36 = v33;
      swift_retain();
      v95 = v36;
      v87 = v35;
      v85 = v34;
      if (v35(v32, 1, v36))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v45 = *((_QWORD *)v32 + 1);
        *(_QWORD *)__dst = *(_QWORD *)v32;
        *((_QWORD *)__dst + 1) = v45;
        v46 = *(int *)(v95 + 20);
        v82 = &v32[v46];
        v83 = &__dst[v46];
        v47 = sub_23E136CFC();
        v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v81(v83, v82, v47);
        *(_QWORD *)&__dst[*(int *)(v95 + 24)] = *(_QWORD *)&v32[*(int *)(v95 + 24)];
        v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
        swift_retain();
        v48(__dst, 0, 1, v95);
      }
      v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v50 = &v9[v49];
      v51 = &v10[v49];
      v6 = v86;
      if (v88(&v10[v49], 2, v89))
      {
        v52 = _s4KnobV2IDOMa(0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v50, v51, v89);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v50, 0, 2, v89);
      }
      *(_QWORD *)&v50[v30[5]] = *(_QWORD *)&v51[v30[5]];
      *(_QWORD *)&v50[v30[6]] = *(_QWORD *)&v51[v30[6]];
      v50[v30[7]] = v51[v30[7]];
      v50[v30[8]] = v51[v30[8]];
      v53 = v30[9];
      v54 = &v50[v53];
      v55 = &v51[v53];
      swift_retain();
      if (v87(v55, 1, v95))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        v57 = *((_QWORD *)v55 + 1);
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = v57;
        v58 = *(int *)(v95 + 20);
        v91 = &v55[v58];
        __dstb = &v54[v58];
        v59 = sub_23E136CFC();
        v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(__dstb, v91, v59);
        *(_QWORD *)&v54[*(int *)(v95 + 24)] = *(_QWORD *)&v55[*(int *)(v95 + 24)];
        v61 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56);
        swift_retain();
        v61(v54, 0, 1, v95);
      }
      goto LABEL_31;
    case 1:
      v19 = sub_23E134C80();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 2, v19))
      {
        v21 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v9, v10, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 2, v19);
      }
      v38 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v38[5]] = *(_QWORD *)&v10[v38[5]];
      *(_QWORD *)&v9[v38[6]] = *(_QWORD *)&v10[v38[6]];
      v9[v38[7]] = v10[v38[7]];
      v9[v38[8]] = v10[v38[8]];
      v39 = v38[9];
      v24 = &v9[v39];
      v25 = &v10[v39];
      v26 = _s4KnobV10IconConfigVMa(0);
      v27 = *(_QWORD *)(v26 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_retain();
      if (v40(v25, 1, v26))
        goto LABEL_15;
      goto LABEL_22;
    case 0:
      v13 = sub_23E134C80();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 2, v13))
      {
        v15 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v10, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 2, v13);
      }
      v22 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v22[5]] = *(_QWORD *)&v10[v22[5]];
      *(_QWORD *)&v9[v22[6]] = *(_QWORD *)&v10[v22[6]];
      v9[v22[7]] = v10[v22[7]];
      v9[v22[8]] = v10[v22[8]];
      v23 = v22[9];
      v24 = &v9[v23];
      v25 = &v10[v23];
      v26 = _s4KnobV10IconConfigVMa(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_retain();
      if (v28(v25, 1, v26))
      {
LABEL_15:
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_31:
        swift_storeEnumTagMultiPayload();
        goto LABEL_32;
      }
LABEL_22:
      v41 = *((_QWORD *)v25 + 1);
      *(_QWORD *)v24 = *(_QWORD *)v25;
      *((_QWORD *)v24 + 1) = v41;
      v42 = *(int *)(v26 + 20);
      __dsta = &v25[v42];
      v96 = &v24[v42];
      v43 = sub_23E136CFC();
      v90 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
      swift_bridgeObjectRetain();
      v90(v96, __dsta, v43);
      *(_QWORD *)&v24[*(int *)(v26 + 24)] = *(_QWORD *)&v25[*(int *)(v26 + 24)];
      v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
      swift_retain();
      v44(v24, 0, 1, v26);
      goto LABEL_31;
  }
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_32:
  v62 = v6[5];
  v63 = v6[6];
  v64 = (_OWORD *)((char *)a1 + v62);
  v65 = (_OWORD *)((char *)a2 + v62);
  v66 = v65[3];
  v64[2] = v65[2];
  v64[3] = v66;
  *(_OWORD *)((char *)v64 + 57) = *(_OWORD *)((char *)v65 + 57);
  v67 = v65[1];
  *v64 = *v65;
  v64[1] = v67;
  v68 = (char *)a1 + v63;
  v69 = (char *)a2 + v63;
  v70 = *((_QWORD *)v69 + 1);
  *(_QWORD *)v68 = *(_QWORD *)v69;
  *((_QWORD *)v68 + 1) = v70;
  v68[16] = v69[16];
  v71 = v6[7];
  v72 = (uint64_t *)((char *)a1 + v71);
  v73 = (char *)a2 + v71;
  v74 = *(uint64_t *)((char *)a2 + v71);
  swift_retain();
  swift_retain();
  if (v74)
  {
    v75 = *((_QWORD *)v73 + 1);
    *v72 = v74;
    v72[1] = v75;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v72 = *(_OWORD *)v73;
  }
  v76 = v6[8];
  v77 = (uint64_t *)((char *)a1 + v76);
  v78 = (uint64_t *)((char *)a2 + v76);
  *v77 = *v78;
  v77[1] = v78[1];
  v79 = v78[3];
  v77[2] = v78[2];
  v77[3] = v79;
  v77[4] = v78[4];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_23E10042C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v14 = sub_23E134C80();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (!v16(v4, 2, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v14);
    v17 = _s4KnobVMa(0);
    swift_release();
    v18 = v4 + *(int *)(v17 + 36);
    v10 = _s4KnobV10IconConfigVMa(0);
    v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    if (!v19(v18, 1, v10))
    {
      swift_bridgeObjectRelease();
      v24 = v15;
      v20 = v18 + *(int *)(v10 + 20);
      v21 = sub_23E136CFC();
      v22 = v20;
      v15 = v24;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v22, v21);
      swift_release();
    }
    v23 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v16(v23, 2, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v23, v14);
    swift_release();
    v9 = v23 + *(int *)(v17 + 36);
    if (!v19(v9, 1, v10))
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v6 = sub_23E134C80();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 2, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    v8 = _s4KnobVMa(0);
    swift_release();
    v9 = v4 + *(int *)(v8 + 36);
    v10 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v11 = v9 + *(int *)(v10 + 20);
      v12 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      swift_release();
    }
  }
  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + *(int *)(a2 + 28)))
    swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_23E1006D8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  void (*v62)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  __int128 v67;
  __int128 v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;
  char *__dst;
  char *__dsta;
  char *__dstb;
  int *v94;
  int *v95;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v18 = sub_23E134C80();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
      {
        v20 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v8, v9, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
      }
      v36 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v36[5]] = *(_QWORD *)&v9[v36[5]];
      *(_QWORD *)&v8[v36[6]] = *(_QWORD *)&v9[v36[6]];
      v8[v36[7]] = v9[v36[7]];
      v8[v36[8]] = v9[v36[8]];
      v37 = v36[9];
      v23 = &v8[v37];
      v24 = &v9[v37];
      v25 = _s4KnobV10IconConfigVMa(0);
      v26 = *(_QWORD *)(v25 - 8);
      v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      swift_retain();
      if (v38(v24, 1, v25))
      {
LABEL_13:
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_21:
        swift_storeEnumTagMultiPayload();
        goto LABEL_31;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_31;
      }
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
      {
        v14 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
      }
      v21 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
      *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
      v8[v21[7]] = v9[v21[7]];
      v8[v21[8]] = v9[v21[8]];
      v22 = v21[9];
      v23 = &v8[v22];
      v24 = &v9[v22];
      v25 = _s4KnobV10IconConfigVMa(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      swift_retain();
      if (v27(v24, 1, v25))
        goto LABEL_13;
    }
    v39 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v39;
    v40 = *(int *)(v25 + 20);
    v90 = &v24[v40];
    __dsta = &v23[v40];
    v41 = sub_23E136CFC();
    v95 = a3;
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v42(__dsta, v90, v41);
    a3 = v95;
    *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
    v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
    swift_retain();
    v43(v23, 0, 1, v25);
    goto LABEL_21;
  }
  v15 = sub_23E134C80();
  v16 = *(_QWORD *)(v15 - 8);
  v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v94 = a3;
  v89 = v15;
  v85 = v16;
  if (v88(v9, 2, v15))
  {
    v17 = _s4KnobV2IDOMa(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v9, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
  }
  v29 = (int *)_s4KnobVMa(0);
  *(_QWORD *)&v8[v29[5]] = *(_QWORD *)&v9[v29[5]];
  *(_QWORD *)&v8[v29[6]] = *(_QWORD *)&v9[v29[6]];
  v8[v29[7]] = v9[v29[7]];
  v8[v29[8]] = v9[v29[8]];
  v30 = v29[9];
  __dst = &v8[v30];
  v31 = &v9[v30];
  v32 = _s4KnobV10IconConfigVMa(0);
  v86 = *(_QWORD *)(v32 - 8);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48);
  swift_retain();
  v87 = v33;
  if (v33(v31, 1, v32))
  {
    v34 = v32;
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v44 = *((_QWORD *)v31 + 1);
    *(_QWORD *)__dst = *(_QWORD *)v31;
    *((_QWORD *)__dst + 1) = v44;
    v45 = *(int *)(v32 + 20);
    v83 = &v31[v45];
    v84 = &__dst[v45];
    v46 = sub_23E136CFC();
    v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
    swift_bridgeObjectRetain();
    v82(v84, v83, v46);
    *(_QWORD *)&__dst[*(int *)(v32 + 24)] = *(_QWORD *)&v31[*(int *)(v32 + 24)];
    v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56);
    swift_retain();
    v34 = v32;
    v47(__dst, 0, 1, v32);
  }
  v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
  v49 = &v8[v48];
  v50 = &v9[v48];
  if (v88(&v9[v48], 2, v89))
  {
    v51 = _s4KnobV2IDOMa(0);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v49, v50, v89);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v49, 0, 2, v89);
  }
  *(_QWORD *)&v49[v29[5]] = *(_QWORD *)&v50[v29[5]];
  *(_QWORD *)&v49[v29[6]] = *(_QWORD *)&v50[v29[6]];
  v49[v29[7]] = v50[v29[7]];
  v49[v29[8]] = v50[v29[8]];
  v52 = v29[9];
  v53 = &v49[v52];
  v54 = &v50[v52];
  swift_retain();
  if (v87(v54, 1, v34))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    v56 = *((_QWORD *)v54 + 1);
    *(_QWORD *)v53 = *(_QWORD *)v54;
    *((_QWORD *)v53 + 1) = v56;
    v57 = *(int *)(v34 + 20);
    v58 = &v53[v57];
    __dstb = &v54[v57];
    v59 = sub_23E136CFC();
    v60 = v34;
    v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
    swift_bridgeObjectRetain();
    v61(v58, __dstb, v59);
    *(_QWORD *)&v53[*(int *)(v60 + 24)] = *(_QWORD *)&v54[*(int *)(v60 + 24)];
    v62 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56);
    swift_retain();
    v62(v53, 0, 1, v60);
  }
  swift_storeEnumTagMultiPayload();
  a3 = v94;
LABEL_31:
  v63 = a3[5];
  v64 = a3[6];
  v65 = (_OWORD *)((char *)a1 + v63);
  v66 = (_OWORD *)((char *)a2 + v63);
  v67 = v66[3];
  v65[2] = v66[2];
  v65[3] = v67;
  *(_OWORD *)((char *)v65 + 57) = *(_OWORD *)((char *)v66 + 57);
  v68 = v66[1];
  *v65 = *v66;
  v65[1] = v68;
  v69 = (char *)a1 + v64;
  v70 = (char *)a2 + v64;
  v71 = *((_QWORD *)v70 + 1);
  *(_QWORD *)v69 = *(_QWORD *)v70;
  *((_QWORD *)v69 + 1) = v71;
  v69[16] = v70[16];
  v72 = a3[7];
  v73 = (_QWORD *)((char *)a1 + v72);
  v74 = (char *)a2 + v72;
  v75 = *(_QWORD *)((char *)a2 + v72);
  swift_retain();
  swift_retain();
  if (v75)
  {
    v76 = *((_QWORD *)v74 + 1);
    *v73 = v75;
    v73[1] = v76;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v73 = *(_OWORD *)v74;
  }
  v77 = a3[8];
  v78 = (_QWORD *)((char *)a1 + v77);
  v79 = (_QWORD *)((char *)a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  v80 = v79[3];
  v78[2] = v79[2];
  v78[3] = v80;
  v78[4] = v79[4];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_23E100EA4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  int *v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  _QWORD *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *__dst;
  int *v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  char *v88;
  void (*v89)(char *, char *, uint64_t);
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  if (a1 != a2)
  {
    v7 = *(int *)(v6 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_23DF73E54((uint64_t)a1 + v7, _s9KnobStateOMa);
    v10 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v90 = v15;
      v82 = v16;
      v85 = a3;
      if (v87(v9, 2, v15))
      {
        v17 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v9, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
      }
      v21 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
      *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
      v8[v21[7]] = v9[v21[7]];
      v8[v21[8]] = v9[v21[8]];
      v22 = v21[9];
      __dst = &v8[v22];
      v23 = &v9[v22];
      v24 = _s4KnobV10IconConfigVMa(0);
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      v27 = v24;
      swift_retain();
      v86 = v26;
      v83 = v25;
      if (v26(v23, 1, v27))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        *(_QWORD *)__dst = *(_QWORD *)v23;
        *((_QWORD *)__dst + 1) = *((_QWORD *)v23 + 1);
        v37 = *(int *)(v27 + 20);
        v80 = &v23[v37];
        v81 = &__dst[v37];
        v38 = sub_23E136CFC();
        v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v79(v81, v80, v38);
        *(_QWORD *)&__dst[*(int *)(v27 + 24)] = *(_QWORD *)&v23[*(int *)(v27 + 24)];
        v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
        swift_retain();
        v39(__dst, 0, 1, v27);
      }
      v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v41 = &v8[v40];
      v42 = &v9[v40];
      a3 = v85;
      if (v87(&v9[v40], 2, v90))
      {
        v43 = _s4KnobV2IDOMa(0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v41, v42, v90);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v41, 0, 2, v90);
      }
      *(_QWORD *)&v41[v21[5]] = *(_QWORD *)&v42[v21[5]];
      *(_QWORD *)&v41[v21[6]] = *(_QWORD *)&v42[v21[6]];
      v41[v21[7]] = v42[v21[7]];
      v41[v21[8]] = v42[v21[8]];
      v44 = v21[9];
      v45 = &v41[v44];
      v46 = &v42[v44];
      swift_retain();
      if (v86(v46, 1, v27))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v45 = *(_QWORD *)v46;
        *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
        v48 = *(int *)(v27 + 20);
        v88 = &v46[v48];
        v91 = &v45[v48];
        v49 = sub_23E136CFC();
        v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
        swift_bridgeObjectRetain();
        v50(v91, v88, v49);
        *(_QWORD *)&v45[*(int *)(v27 + 24)] = *(_QWORD *)&v46[*(int *)(v27 + 24)];
        v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56);
        swift_retain();
        v51(v45, 0, 1, v27);
      }
      goto LABEL_29;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v18 = sub_23E134C80();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
      {
        v20 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v8, v9, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
      }
      v29 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v29[5]] = *(_QWORD *)&v9[v29[5]];
      *(_QWORD *)&v8[v29[6]] = *(_QWORD *)&v9[v29[6]];
      v8[v29[7]] = v9[v29[7]];
      v8[v29[8]] = v9[v29[8]];
      v30 = v29[9];
      v31 = &v8[v30];
      v32 = &v9[v30];
      v33 = _s4KnobV10IconConfigVMa(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      swift_retain();
      if (!v35(v32, 1, v33))
      {
LABEL_28:
        *(_QWORD *)v31 = *(_QWORD *)v32;
        *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
        v55 = *(int *)(v33 + 20);
        v92 = &v32[v55];
        v93 = &v31[v55];
        v56 = sub_23E136CFC();
        v89 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v89(v93, v92, v56);
        *(_QWORD *)&v31[*(int *)(v33 + 24)] = *(_QWORD *)&v32[*(int *)(v33 + 24)];
        v57 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
        swift_retain();
        v57(v31, 0, 1, v33);
        goto LABEL_29;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_30;
      }
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
      {
        v14 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
      }
      v52 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v52[5]] = *(_QWORD *)&v9[v52[5]];
      *(_QWORD *)&v8[v52[6]] = *(_QWORD *)&v9[v52[6]];
      v8[v52[7]] = v9[v52[7]];
      v8[v52[8]] = v9[v52[8]];
      v53 = v52[9];
      v31 = &v8[v53];
      v32 = &v9[v53];
      v33 = _s4KnobV10IconConfigVMa(0);
      v34 = *(_QWORD *)(v33 - 8);
      v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      swift_retain();
      if (!v54(v32, 1, v33))
        goto LABEL_28;
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_29:
    swift_storeEnumTagMultiPayload();
  }
LABEL_30:
  v58 = a3[5];
  v59 = (char *)a1 + v58;
  v60 = (char *)a2 + v58;
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v59[8] = v60[8];
  v61 = *((_QWORD *)v60 + 2);
  v59[24] = v60[24];
  *((_QWORD *)v59 + 2) = v61;
  v62 = *((_QWORD *)v60 + 4);
  v59[40] = v60[40];
  *((_QWORD *)v59 + 4) = v62;
  v63 = *((_QWORD *)v60 + 6);
  v59[56] = v60[56];
  *((_QWORD *)v59 + 6) = v63;
  v64 = *((_QWORD *)v60 + 8);
  v59[72] = v60[72];
  *((_QWORD *)v59 + 8) = v64;
  v65 = a3[6];
  v66 = (char *)a1 + v65;
  v67 = (char *)a2 + v65;
  *(_QWORD *)((char *)a1 + v65) = *(_QWORD *)((char *)a2 + v65);
  swift_retain();
  swift_release();
  *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
  swift_retain();
  swift_release();
  v66[16] = v67[16];
  v68 = a3[7];
  v69 = (_QWORD *)((char *)a1 + v68);
  v70 = (char *)a2 + v68;
  v71 = *(_QWORD *)((char *)a1 + v68);
  v72 = *(_QWORD *)((char *)a2 + v68);
  if (!v71)
  {
    if (v72)
    {
      v74 = *((_QWORD *)v70 + 1);
      *v69 = v72;
      v69[1] = v74;
      swift_retain();
      goto LABEL_37;
    }
LABEL_36:
    *(_OWORD *)v69 = *(_OWORD *)v70;
    goto LABEL_37;
  }
  if (!v72)
  {
    swift_release();
    goto LABEL_36;
  }
  v73 = *((_QWORD *)v70 + 1);
  *v69 = v72;
  v69[1] = v73;
  swift_retain();
  swift_release();
LABEL_37:
  v75 = a3[8];
  v76 = (char *)a1 + v75;
  v77 = (char *)a2 + v75;
  *(_QWORD *)v76 = *(_QWORD *)((char *)a2 + v75);
  *((_DWORD *)v76 + 2) = *(_DWORD *)((char *)a2 + v75 + 8);
  *((_DWORD *)v76 + 3) = *(_DWORD *)((char *)a2 + v75 + 12);
  *((_QWORD *)v76 + 2) = *(_QWORD *)((char *)a2 + v75 + 16);
  *((_QWORD *)v76 + 3) = *(_QWORD *)((char *)a2 + v75 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v76 + 4) = *((_QWORD *)v77 + 4);
  return a1;
}

_QWORD *sub_23E101760(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  __int128 v59;
  __int128 v60;
  char *v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  __int128 v71;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v15 = sub_23E134C80();
    v16 = *(_QWORD *)(v15 - 8);
    v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v79 = v15;
    v76 = v16;
    if (v78(v9, 2, v15))
    {
      v17 = _s4KnobV2IDOMa(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
    }
    v28 = (int *)_s4KnobVMa(0);
    *(_QWORD *)&v8[v28[5]] = *(_QWORD *)&v9[v28[5]];
    *(_QWORD *)&v8[v28[6]] = *(_QWORD *)&v9[v28[6]];
    v8[v28[7]] = v9[v28[7]];
    v8[v28[8]] = v9[v28[8]];
    v29 = v28[9];
    v30 = &v8[v29];
    v31 = &v9[v29];
    v32 = _s4KnobV10IconConfigVMa(0);
    v33 = *(_QWORD *)(v32 - 8);
    v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
    v75 = v33;
    if (v77(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
      v41 = *(int *)(v32 + 20);
      v73 = &v31[v41];
      v74 = &v30[v41];
      v42 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v74, v73, v42);
      *(_QWORD *)&v30[*(int *)(v32 + 24)] = *(_QWORD *)&v31[*(int *)(v32 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    }
    v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    v44 = &v8[v43];
    v45 = &v9[v43];
    if (v78(v45, 2, v79))
    {
      v46 = _s4KnobV2IDOMa(0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v44, v45, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v44, 0, 2, v79);
    }
    *(_QWORD *)&v44[v28[5]] = *(_QWORD *)&v45[v28[5]];
    *(_QWORD *)&v44[v28[6]] = *(_QWORD *)&v45[v28[6]];
    v44[v28[7]] = v45[v28[7]];
    v44[v28[8]] = v45[v28[8]];
    v47 = v28[9];
    v48 = &v44[v47];
    v49 = &v45[v47];
    if (v77(v49, 1, v32))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      *(_OWORD *)v48 = *(_OWORD *)v49;
      v51 = *(int *)(v32 + 20);
      v52 = &v48[v51];
      v53 = &v49[v51];
      v54 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
      *(_QWORD *)&v48[*(int *)(v32 + 24)] = *(_QWORD *)&v49[*(int *)(v32 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v48, 0, 1, v32);
    }
    goto LABEL_29;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_30;
    }
    v12 = sub_23E134C80();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
    {
      v14 = _s4KnobV2IDOMa(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
    }
    v21 = (int *)_s4KnobVMa(0);
    *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
    *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
    v8[v21[7]] = v9[v21[7]];
    v8[v21[8]] = v9[v21[8]];
    v22 = v21[9];
    v23 = &v8[v22];
    v24 = &v9[v22];
    v25 = _s4KnobV10IconConfigVMa(0);
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      goto LABEL_13;
LABEL_20:
    *(_OWORD *)v23 = *(_OWORD *)v24;
    v37 = *(int *)(v25 + 20);
    v38 = &v23[v37];
    v39 = &v24[v37];
    v40 = sub_23E136CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
    *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    goto LABEL_29;
  }
  v18 = sub_23E134C80();
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
  {
    v20 = _s4KnobV2IDOMa(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v8, v9, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
  }
  v35 = (int *)_s4KnobVMa(0);
  *(_QWORD *)&v8[v35[5]] = *(_QWORD *)&v9[v35[5]];
  *(_QWORD *)&v8[v35[6]] = *(_QWORD *)&v9[v35[6]];
  v8[v35[7]] = v9[v35[7]];
  v8[v35[8]] = v9[v35[8]];
  v36 = v35[9];
  v23 = &v8[v36];
  v24 = &v9[v36];
  v25 = _s4KnobV10IconConfigVMa(0);
  v26 = *(_QWORD *)(v25 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    goto LABEL_20;
LABEL_13:
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_29:
  swift_storeEnumTagMultiPayload();
LABEL_30:
  v55 = a3[5];
  v56 = a3[6];
  v57 = (_OWORD *)((char *)a1 + v55);
  v58 = (_OWORD *)((char *)a2 + v55);
  v59 = v58[3];
  v57[2] = v58[2];
  v57[3] = v59;
  *(_OWORD *)((char *)v57 + 57) = *(_OWORD *)((char *)v58 + 57);
  v60 = v58[1];
  *v57 = *v58;
  v57[1] = v60;
  v61 = (char *)a1 + v56;
  v62 = (char *)a2 + v56;
  v61[16] = v62[16];
  *(_OWORD *)v61 = *(_OWORD *)v62;
  v63 = a3[7];
  v64 = (_QWORD *)((char *)a1 + v63);
  v65 = (_QWORD *)((char *)a2 + v63);
  v66 = *v65;
  if (*v65)
  {
    v67 = v65[1];
    *v64 = v66;
    v64[1] = v67;
  }
  else
  {
    *(_OWORD *)v64 = *(_OWORD *)v65;
  }
  v68 = a3[8];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  v71 = *((_OWORD *)v70 + 1);
  *(_OWORD *)v69 = *(_OWORD *)v70;
  *((_OWORD *)v69 + 1) = v71;
  *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
  return a1;
}

_QWORD *sub_23E101E54(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  uint64_t v79;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  if (a1 != a2)
  {
    v7 = *(int *)(v6 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_23DF73E54((uint64_t)a1 + v7, _s9KnobStateOMa);
    v10 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v79 = v15;
      v76 = v16;
      if (v78(v9, 2, v15))
      {
        v17 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
      }
      v21 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
      *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
      v8[v21[7]] = v9[v21[7]];
      v8[v21[8]] = v9[v21[8]];
      v22 = v21[9];
      v23 = &v8[v22];
      v24 = &v9[v22];
      v25 = _s4KnobV10IconConfigVMa(0);
      v26 = *(_QWORD *)(v25 - 8);
      v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      v75 = v26;
      if (v77(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v23 = *(_OWORD *)v24;
        v34 = *(int *)(v25 + 20);
        v73 = &v24[v34];
        v74 = &v23[v34];
        v35 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v74, v73, v35);
        *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v37 = &v8[v36];
      v38 = &v9[v36];
      if (v78(v38, 2, v79))
      {
        v39 = _s4KnobV2IDOMa(0);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v37, v38, v79);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v37, 0, 2, v79);
      }
      *(_QWORD *)&v37[v21[5]] = *(_QWORD *)&v38[v21[5]];
      *(_QWORD *)&v37[v21[6]] = *(_QWORD *)&v38[v21[6]];
      v37[v21[7]] = v38[v21[7]];
      v37[v21[8]] = v38[v21[8]];
      v40 = v21[9];
      v41 = &v37[v40];
      v42 = &v38[v40];
      if (v77(v42, 1, v25))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v41 = *(_OWORD *)v42;
        v44 = *(int *)(v25 + 20);
        v45 = &v41[v44];
        v46 = &v42[v44];
        v47 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        *(_QWORD *)&v41[*(int *)(v25 + 24)] = *(_QWORD *)&v42[*(int *)(v25 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v41, 0, 1, v25);
      }
      goto LABEL_30;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v18 = sub_23E134C80();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
      {
        v20 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v8, v9, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
      }
      v28 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v28[5]] = *(_QWORD *)&v9[v28[5]];
      *(_QWORD *)&v8[v28[6]] = *(_QWORD *)&v9[v28[6]];
      v8[v28[7]] = v9[v28[7]];
      v8[v28[8]] = v9[v28[8]];
      v29 = v28[9];
      v30 = &v8[v29];
      v31 = &v9[v29];
      v32 = _s4KnobV10IconConfigVMa(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
LABEL_28:
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
LABEL_30:
        swift_storeEnumTagMultiPayload();
        goto LABEL_31;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_31;
      }
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
      {
        v14 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
      }
      v48 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v48[5]] = *(_QWORD *)&v9[v48[5]];
      *(_QWORD *)&v8[v48[6]] = *(_QWORD *)&v9[v48[6]];
      v8[v48[7]] = v9[v48[7]];
      v8[v48[8]] = v9[v48[8]];
      v49 = v48[9];
      v30 = &v8[v49];
      v31 = &v9[v49];
      v32 = _s4KnobV10IconConfigVMa(0);
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        goto LABEL_28;
    }
    *(_OWORD *)v30 = *(_OWORD *)v31;
    v51 = *(int *)(v32 + 20);
    v52 = &v30[v51];
    v53 = &v31[v51];
    v54 = sub_23E136CFC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
    *(_QWORD *)&v30[*(int *)(v32 + 24)] = *(_QWORD *)&v31[*(int *)(v32 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
    goto LABEL_30;
  }
LABEL_31:
  v55 = a3[5];
  v56 = a3[6];
  v57 = (char *)a1 + v55;
  v58 = (char *)a2 + v55;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v58[8];
  *((_QWORD *)v57 + 2) = *((_QWORD *)v58 + 2);
  v57[24] = v58[24];
  *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
  v57[40] = v58[40];
  v57[56] = v58[56];
  *((_QWORD *)v57 + 6) = *((_QWORD *)v58 + 6);
  *((_QWORD *)v57 + 8) = *((_QWORD *)v58 + 8);
  v57[72] = v58[72];
  v59 = (char *)a1 + v56;
  v60 = (char *)a2 + v56;
  *(_QWORD *)((char *)a1 + v56) = *(_QWORD *)((char *)a2 + v56);
  swift_release();
  *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
  swift_release();
  v59[16] = v60[16];
  v61 = a3[7];
  v62 = (_QWORD *)((char *)a1 + v61);
  v63 = (char *)a2 + v61;
  v64 = *(_QWORD *)((char *)a1 + v61);
  v65 = *(_QWORD *)((char *)a2 + v61);
  if (!v64)
  {
    if (v65)
    {
      v67 = *((_QWORD *)v63 + 1);
      *v62 = v65;
      v62[1] = v67;
      goto LABEL_38;
    }
LABEL_37:
    *(_OWORD *)v62 = *(_OWORD *)v63;
    goto LABEL_38;
  }
  if (!v65)
  {
    swift_release();
    goto LABEL_37;
  }
  v66 = *((_QWORD *)v63 + 1);
  *v62 = v65;
  v62[1] = v66;
  swift_release();
LABEL_38:
  v68 = a3[8];
  v69 = (_QWORD *)((char *)a1 + v68);
  v70 = (_QWORD *)((char *)a2 + v68);
  v71 = v70[1];
  *v69 = *v70;
  v69[1] = v71;
  v69[2] = v70[2];
  v69[3] = v70[3];
  swift_bridgeObjectRelease();
  v69[4] = v70[4];
  return a1;
}

uint64_t sub_23E102608()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E102618()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for RingControlView(uint64_t a1)
{
  return sub_23DF8DC70(a1, (uint64_t *)&unk_256D26DC8);
}

void sub_23E10263C()
{
  unint64_t v0;

  sub_23E1026CC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_23E1026CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256D26DD8[0])
  {
    _s9KnobStateOMa(255);
    v0 = sub_23E136EDC();
    if (!v1)
      atomic_store(v0, qword_256D26DD8);
  }
}

uint64_t sub_23E102720()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E102730@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t (*v25)@<X0>(uint64_t@<X8>);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)@<X0>(uint64_t@<X0>, _QWORD *@<X8>);
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;

  v22 = a1;
  v21 = sub_23E13636C();
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for RingControlView(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v8 = sub_23E136C30();
  v9 = sub_23E136FE4();
  v11 = v10;
  sub_23DF73E10(v1, (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RingControlView);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  sub_23DF89384((uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, type metadata accessor for RingControlView);
  v14 = sub_23E136DD4();
  LOBYTE(v7) = sub_23E136744();
  sub_23E135D00();
  v23 = v8;
  v24 = 256;
  v25 = sub_23E105F78;
  v26 = v13;
  v27 = v9;
  v28 = v11;
  v29 = v14;
  v30 = sub_23E1038AC;
  v31 = 0;
  v32 = v7;
  v33 = v15;
  v34 = v16;
  v35 = v17;
  v36 = v18;
  v37 = 0;
  sub_23E136348();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D26E18);
  sub_23E105FC4();
  sub_23E136B04();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_23E102904@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  __int128 v25;
  double v26;
  double v27;
  double v28;
  double v29;
  uint64_t v30;
  double *v31;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v34 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26E68);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26E70);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26E78);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26E80);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E135E80();
  v16 = v15;
  sub_23E135E80();
  if (v17 < v16)
    v16 = v17;
  sub_23E102BE8((uint64_t)v5, v16);
  v18 = ((*(double *)(a1 + *(int *)(type metadata accessor for RingControlView(0) + 20)) * -57.2957795 + 180.0) * 0.5
       + 180.0)
      * 0.0174532925;
  sub_23E137080();
  v20 = v19;
  v22 = v21;
  sub_23DF89C1C((uint64_t)v5, (uint64_t)v8, &qword_256D26E68);
  v23 = &v8[*(int *)(v6 + 36)];
  *(double *)v23 = v18;
  *((_QWORD *)v23 + 1) = v20;
  *((_QWORD *)v23 + 2) = v22;
  sub_23DF89C7C((uint64_t)v5, &qword_256D26E68);
  sub_23DF89C1C((uint64_t)v8, (uint64_t)v11, &qword_256D26E70);
  v11[*(int *)(v9 + 36)] = 1;
  sub_23DF89C7C((uint64_t)v8, &qword_256D26E70);
  sub_23E136FE4();
  sub_23E135E5C();
  sub_23DF89C1C((uint64_t)v11, (uint64_t)v14, &qword_256D26E78);
  v24 = &v14[*(int *)(v12 + 36)];
  v25 = v36;
  *(_OWORD *)v24 = v35;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v37;
  sub_23DF89C7C((uint64_t)v11, &qword_256D26E78);
  sub_23E135E80();
  v27 = v26 * 0.5;
  sub_23E135E80();
  v29 = v28 * 0.5;
  v30 = v34;
  sub_23DF89C1C((uint64_t)v14, v34, &qword_256D26E80);
  v31 = (double *)(v30 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D26E88) + 36));
  *v31 = v27;
  v31[1] = v29;
  return sub_23DF89C7C((uint64_t)v14, &qword_256D26E80);
}

uint64_t sub_23E102BE8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  double *v48;
  _BYTE *v49;
  uint64_t *v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _BYTE *v69;
  double *v70;
  char v71;
  void (*v72)(_BYTE *, uint64_t, uint64_t, uint64_t);
  _BYTE *v73;
  _BYTE *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  int *v80;
  double *v81;
  double v82;
  double v83;
  double v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  _BYTE *v89;
  uint64_t v90;
  char v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  double *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  double v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t KeyPath;
  _BYTE *v112;
  int *v113;
  double *v114;
  _BYTE *v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char v123;
  uint64_t v124;
  double *v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  _BYTE *v129;
  _BYTE *v130;
  _BYTE *v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  _BYTE *v137;
  _BYTE v139[12];
  int v140;
  double v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  double v148;
  double v149;
  double v150;
  _BYTE *v151;
  _BYTE *v152;
  uint64_t v153;
  uint64_t v154;
  _BYTE *v155;
  _BYTE *v156;
  _BYTE *v157;
  uint64_t v158;
  _BYTE *v159;
  uint64_t v160;
  uint64_t v161;
  _BYTE *v162;
  _BYTE *v163;
  _BYTE *v164;
  _BYTE *v165;
  _BYTE *v166;
  _BYTE *v167;
  _BYTE *v168;
  _BYTE *v169;
  _BYTE *v170;
  _BYTE *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char v177;

  v158 = a1;
  v154 = _s19CurrentLocationViewVMa(0);
  MEMORY[0x24BDAC7A8](v154);
  v159 = &v139[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v5);
  v156 = &v139[-v6];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  MEMORY[0x24BDAC7A8](v7);
  v152 = &v139[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v153 = type metadata accessor for RingControlView.KnobsView(0);
  MEMORY[0x24BDAC7A8](v153);
  v157 = &v139[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v10);
  v155 = &v139[-v11];
  v151 = (_BYTE *)_s13TapTargetViewVMa();
  MEMORY[0x24BDAC7A8](v151);
  v165 = &v139[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v162 = &v139[-v14];
  v145 = type metadata accessor for RingControlView.ColorTrackView(0);
  MEMORY[0x24BDAC7A8](v145);
  v170 = &v139[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v16);
  v169 = &v139[-v17];
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26E90);
  MEMORY[0x24BDAC7A8](v18);
  v163 = &v139[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v20);
  v164 = &v139[-v21];
  MEMORY[0x24BDAC7A8](v22);
  v171 = &v139[-v23];
  MEMORY[0x24BDAC7A8](v24);
  v167 = &v139[-v25];
  v26 = type metadata accessor for ControlBackgroundView();
  MEMORY[0x24BDAC7A8](v26);
  v28 = &v139[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v29);
  v31 = &v139[-v30];
  v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D26E98);
  MEMORY[0x24BDAC7A8](v142);
  v168 = &v139[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v33);
  v166 = &v139[-v34];
  v35 = _s16ProgressDotsViewVMa(0);
  v143 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v37 = &v139[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = type metadata accessor for RingControlView(0);
  v39 = v2 + *(int *)(v38 + 20);
  v40 = *(double *)v39;
  v41 = (*(double *)v39 * -57.2957795 + 180.0) * 0.5 + 180.0;
  if (qword_256D1D468 != -1)
    swift_once();
  v42 = a2 * 0.5;
  v43 = v41 * 0.0174532925;
  v44 = qword_256D34740;
  if (qword_256D1D470 != -1)
    swift_once();
  v45 = qword_256D34748;
  v160 = v7;
  MEMORY[0x24264B734](v7);
  v46 = *(_QWORD *)(v39 + 16);
  v47 = *(_BYTE *)(v39 + 24);
  v48 = (double *)&v37[*(int *)(v35 + 20)];
  v149 = v42;
  *v48 = v42;
  v48[1] = v40;
  v150 = v40;
  v148 = v43;
  v48[2] = v43;
  *((_QWORD *)v48 + 3) = v44;
  v147 = v44;
  v146 = v45;
  *((_QWORD *)v48 + 4) = v45;
  v49 = &v37[*(int *)(v35 + 24)];
  *(_QWORD *)v49 = v46;
  v49[8] = v47;
  *(_QWORD *)v28 = swift_getKeyPath();
  *(_OWORD *)(v28 + 8) = 0u;
  *(_OWORD *)(v28 + 24) = 0u;
  *(_OWORD *)(v28 + 40) = 0u;
  *(_OWORD *)(v28 + 50) = 0u;
  v50 = (uint64_t *)&v28[*(int *)(v26 + 20)];
  *v50 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1DA20);
  swift_storeEnumTagMultiPayload();
  v51 = *(int *)(v26 + 24);
  v52 = objc_msgSend((id)objc_opt_self(), sel_systemGray4Color);
  *(_QWORD *)&v28[v51] = MEMORY[0x24264B578](v52);
  sub_23DF89384((uint64_t)v28, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  v141 = *(double *)v39 * 57.2957795 / 360.0;
  v144 = v38;
  v53 = *(int *)(v38 + 32);
  v161 = v2;
  v54 = (_QWORD *)(v2 + v53);
  v55 = *(_QWORD *)(v2 + v53);
  v56 = *(_QWORD *)(v2 + v53 + 16);
  v57 = *(_QWORD *)(v2 + v53 + 24);
  v58 = *(_QWORD *)(v2 + v53 + 32);
  swift_bridgeObjectRetain();
  v59 = v54[1];
  v60 = sub_23E13672C();
  sub_23E135D00();
  v62 = v61;
  v64 = v63;
  v66 = v65;
  v68 = v67;
  v69 = v168;
  sub_23DF73E10((uint64_t)v31, (uint64_t)v168, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  v70 = (double *)&v69[*(int *)(v142 + 36)];
  *v70 = 0.0;
  v70[1] = v141;
  *((_QWORD *)v70 + 2) = v55;
  *((_QWORD *)v70 + 3) = v59;
  *((_QWORD *)v70 + 4) = v56;
  *((_QWORD *)v70 + 5) = v57;
  *((_QWORD *)v70 + 6) = v58;
  *((_BYTE *)v70 + 56) = v60;
  *((_QWORD *)v70 + 8) = v62;
  *((_QWORD *)v70 + 9) = v64;
  *((_QWORD *)v70 + 10) = v66;
  *((_QWORD *)v70 + 11) = v68;
  *((_BYTE *)v70 + 96) = 0;
  sub_23DF73E54((uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for ControlBackgroundView);
  sub_23DF89340((uint64_t)v69, (uint64_t)v166, &qword_256D26E98);
  sub_23E0373A8();
  if ((v71 & 1) != 0)
  {
    v72 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v143 + 56);
    v72(v167, 1, 1, v35);
  }
  else
  {
    v73 = v167;
    sub_23DF73E10((uint64_t)v37, (uint64_t)v167, _s16ProgressDotsViewVMa);
    v72 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v143 + 56);
    v72(v73, 0, 1, v35);
  }
  v74 = v170;
  v75 = v161;
  MEMORY[0x24264B734](v160);
  v76 = v54[2];
  v77 = v54[3];
  v78 = v54[4];
  v79 = *(_BYTE *)(v39 + 8);
  v80 = (int *)v145;
  v81 = (double *)&v74[*(int *)(v145 + 20)];
  v82 = v149;
  v83 = v150;
  *v81 = v149;
  v81[1] = v83;
  v84 = v148;
  v85 = v147;
  v81[2] = v148;
  *((_QWORD *)v81 + 3) = v85;
  v86 = v146;
  *((_QWORD *)v81 + 4) = v146;
  v87 = &v74[v80[6]];
  v88 = v54[1];
  *v87 = *v54;
  v87[1] = v88;
  v87[2] = v76;
  v87[3] = v77;
  v87[4] = v78;
  v74[v80[7]] = v79;
  v89 = &v74[v80[8]];
  *(_QWORD *)v89 = swift_getKeyPath();
  v89[8] = 0;
  sub_23DF89384((uint64_t)v74, (uint64_t)v169, type metadata accessor for RingControlView.ColorTrackView);
  swift_bridgeObjectRetain();
  sub_23E0373A8();
  v90 = 1;
  if ((v91 & 1) != 0)
  {
    sub_23DF73E10((uint64_t)v37, (uint64_t)v171, _s16ProgressDotsViewVMa);
    v90 = 0;
  }
  v72(v171, v90, 1, v35);
  v92 = v162;
  sub_23E136E88();
  v93 = v144;
  v94 = (uint64_t *)(v75 + *(int *)(v144 + 28));
  v95 = *v94;
  v96 = v94[1];
  v97 = (uint64_t)v151;
  v98 = (double *)&v92[*((int *)v151 + 5)];
  *v98 = v82;
  v98[1] = v83;
  v98[2] = v84;
  *((_QWORD *)v98 + 3) = v85;
  *((_QWORD *)v98 + 4) = v86;
  v99 = (uint64_t *)&v92[*(int *)(v97 + 24)];
  *v99 = v95;
  v99[1] = v96;
  sub_23DF9765C(v95);
  v100 = (uint64_t)v152;
  sub_23E136E88();
  v101 = (uint64_t *)(v75 + *(int *)(v93 + 24));
  v102 = *v101;
  v103 = v101[1];
  LOBYTE(v101) = *((_BYTE *)v101 + 16);
  v175 = v102;
  v176 = v103;
  v177 = (char)v101;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D228F8);
  sub_23E136E88();
  v104 = v172;
  v105 = v173;
  v106 = v174;
  v107 = *(double *)v39;
  v151 = v37;
  LODWORD(v145) = *(unsigned __int8 *)(v39 + 8);
  v108 = *(_QWORD *)(v39 + 16);
  LODWORD(v144) = *(unsigned __int8 *)(v39 + 24);
  v109 = *(_QWORD *)(v39 + 32);
  v110 = *(_BYTE *)(v39 + 40);
  v143 = *(_QWORD *)(v39 + 48);
  LODWORD(v142) = *(unsigned __int8 *)(v39 + 56);
  v141 = *(double *)(v39 + 64);
  v140 = *(unsigned __int8 *)(v39 + 72);
  KeyPath = swift_getKeyPath();
  v112 = v155;
  sub_23DF89340(v100, (uint64_t)v155, &qword_256D1F0F8);
  v113 = (int *)v153;
  v114 = (double *)&v112[*(int *)(v153 + 20)];
  *v114 = v82;
  v114[1] = v83;
  v114[2] = v84;
  *((_QWORD *)v114 + 3) = v85;
  *((_QWORD *)v114 + 4) = v86;
  v115 = &v112[v113[6]];
  *(_QWORD *)v115 = v104;
  *((_QWORD *)v115 + 1) = v105;
  v115[16] = v106;
  v116 = &v112[v113[7]];
  *(double *)v116 = v107;
  v116[8] = v145;
  *((_QWORD *)v116 + 2) = v108;
  v116[24] = v144;
  *((_QWORD *)v116 + 4) = v109;
  v116[40] = v110;
  *((_QWORD *)v116 + 6) = v143;
  v116[56] = v142;
  *((double *)v116 + 8) = v141;
  v116[72] = v140;
  v117 = &v112[v113[8]];
  *(_QWORD *)v117 = KeyPath;
  v117[8] = 0;
  v118 = &v112[v113[9]];
  v175 = 0;
  LOBYTE(v176) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE50);
  sub_23E136D8C();
  v119 = v173;
  v120 = v174;
  *(_QWORD *)v118 = v172;
  v118[8] = v119;
  *((_QWORD *)v118 + 2) = v120;
  v121 = (uint64_t)v156;
  MEMORY[0x24264B734](v160);
  v122 = *(_QWORD *)(v39 + 16);
  v123 = *(_BYTE *)(v39 + 24);
  v124 = v154;
  v125 = (double *)(v121 + *(int *)(v154 + 20));
  *v125 = v82;
  v125[1] = v83;
  v125[2] = v84;
  *((_QWORD *)v125 + 3) = v85;
  *((_QWORD *)v125 + 4) = v86;
  v126 = v121 + *(int *)(v124 + 24);
  *(_QWORD *)v126 = v122;
  *(_BYTE *)(v126 + 8) = v123;
  v127 = v168;
  sub_23DF89C1C((uint64_t)v166, (uint64_t)v168, &qword_256D26E98);
  v128 = v164;
  sub_23DF89C1C((uint64_t)v167, (uint64_t)v164, &qword_256D26E90);
  v129 = v170;
  sub_23DF73E10((uint64_t)v169, (uint64_t)v170, type metadata accessor for RingControlView.ColorTrackView);
  sub_23DF89C1C((uint64_t)v171, (uint64_t)v163, &qword_256D26E90);
  v130 = v162;
  v131 = v165;
  sub_23DF73E10((uint64_t)v162, (uint64_t)v165, (uint64_t (*)(_QWORD))_s13TapTargetViewVMa);
  v132 = v157;
  sub_23DF73E10((uint64_t)v112, (uint64_t)v157, type metadata accessor for RingControlView.KnobsView);
  v133 = v159;
  sub_23DF73E10(v121, (uint64_t)v159, _s19CurrentLocationViewVMa);
  v134 = (uint64_t)v127;
  v135 = v158;
  sub_23DF89C1C(v134, v158, &qword_256D26E98);
  v136 = (int *)__swift_instantiateConcreteTypeFromMangledName(qword_256D26EA0);
  sub_23DF89C1C((uint64_t)v128, v135 + v136[12], &qword_256D26E90);
  sub_23DF73E10((uint64_t)v129, v135 + v136[16], type metadata accessor for RingControlView.ColorTrackView);
  v137 = v163;
  sub_23DF89C1C((uint64_t)v163, v135 + v136[20], &qword_256D26E90);
  sub_23DF73E10((uint64_t)v131, v135 + v136[24], (uint64_t (*)(_QWORD))_s13TapTargetViewVMa);
  sub_23DF73E10((uint64_t)v132, v135 + v136[28], type metadata accessor for RingControlView.KnobsView);
  sub_23DF73E10((uint64_t)v133, v135 + v136[32], _s19CurrentLocationViewVMa);
  sub_23DF73E54(v121, _s19CurrentLocationViewVMa);
  sub_23DF73E54((uint64_t)v112, type metadata accessor for RingControlView.KnobsView);
  sub_23DF73E54((uint64_t)v130, (uint64_t (*)(_QWORD))_s13TapTargetViewVMa);
  sub_23DF89C7C((uint64_t)v171, &qword_256D26E90);
  sub_23DF73E54((uint64_t)v169, type metadata accessor for RingControlView.ColorTrackView);
  sub_23DF89C7C((uint64_t)v167, &qword_256D26E90);
  sub_23DF89C7C((uint64_t)v166, &qword_256D26E98);
  sub_23DF73E54((uint64_t)v151, _s16ProgressDotsViewVMa);
  sub_23DF73E54((uint64_t)v133, _s19CurrentLocationViewVMa);
  sub_23DF73E54((uint64_t)v132, type metadata accessor for RingControlView.KnobsView);
  sub_23DF73E54((uint64_t)v165, (uint64_t (*)(_QWORD))_s13TapTargetViewVMa);
  sub_23DF89C7C((uint64_t)v137, &qword_256D26E90);
  sub_23DF73E54((uint64_t)v170, type metadata accessor for RingControlView.ColorTrackView);
  sub_23DF89C7C((uint64_t)v164, &qword_256D26E90);
  return sub_23DF89C7C((uint64_t)v168, &qword_256D26E98);
}

uint64_t sub_23E1038AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

void sub_23E1038B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(_QWORD);
  char *v17;
  _QWORD v18[6];
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27128);
  MEMORY[0x24BDAC7A8](v21);
  v18[1] = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v2);
  v18[2] = (char *)v18 - v3;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27130);
  MEMORY[0x24BDAC7A8](v24);
  v25 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27138);
  MEMORY[0x24BDAC7A8](v5);
  v18[4] = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27140);
  MEMORY[0x24BDAC7A8](v19);
  v18[5] = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27148);
  MEMORY[0x24BDAC7A8](v23);
  MEMORY[0x24BDAC7A8](v8);
  v20 = (char *)v18 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27150);
  v26 = *(_QWORD *)(v10 - 8);
  v27 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v22 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = _s4KnobVMa(0);
  MEMORY[0x24BDAC7A8](v12);
  MEMORY[0x24BDAC7A8](v13);
  v14 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v14);
  sub_23DF73E10(v0, (uint64_t)v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  v17 = (char *)sub_23E103B78 + 4 * word_23E142C60[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E103B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  double v21;
  double v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  double v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  sub_23DF89384(v4, v1, _s4KnobVMa);
  v8 = *(double *)(v1 + *(int *)(v5 + 20));
  *(_QWORD *)(v0 + 64) = v2;
  sub_23DF73E54(v1, _s4KnobVMa);
  v9 = type metadata accessor for RingControlView.ColorTrackView(0);
  *(_BYTE *)(v0 + 264) = *(_BYTE *)(v3 + *(int *)(v9 + 28));
  sub_23DFFF584();
  if (v10)
  {
    v11 = v10;
    v12 = sub_23E136FE4();
    v13 = *(uint64_t **)(v0 + 32);
    *v13 = v12;
    v13[1] = v14;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D271B8);
    sub_23E1040EC(v11, v3, (uint64_t)v13 + *(int *)(v15 + 44));
    v16 = sub_23E136FE4();
    *(_QWORD *)(v0 + 24) = v6;
    v17 = v16;
    v19 = v18;
    v20 = *(double *)(v3 + *(int *)(v9 + 20) + 8);
    v21 = 0.0;
    v22 = 0.0;
    if (0.0 > 1.0)
      v22 = 1.0;
    if (v8 > 0.0)
      v21 = v8;
    if (v21 > 1.0)
      v21 = 1.0;
    *(double *)(v0 + 8) = v21;
    *(double *)(v0 + 16) = v22;
    v23 = v20 * 57.2957795 / 360.0;
    sub_23E135DCC();
    v24 = *(_QWORD *)(v0 + 264);
    v25 = *(_QWORD *)(v0 + 280);
    v26 = *(_QWORD *)(v0 + 288);
    v27 = *(_QWORD *)(v0 + 296);
    v28 = sub_23E13672C();
    sub_23E135D00();
    v30 = v29;
    v32 = v31;
    v34 = v33;
    v36 = v35;
    *(_BYTE *)(v0 + 128) = 0;
    v37 = *(_QWORD *)(v0 + 40);
    sub_23DF89C1C((uint64_t)v13, v37, &qword_256D27138);
    v38 = v37 + *(int *)(*(_QWORD *)(v0 + 48) + 36);
    *(_QWORD *)v38 = v17;
    *(_QWORD *)(v38 + 8) = v19;
    *(_QWORD *)(v38 + 16) = 0;
    v39 = *(_QWORD *)(v0 + 16);
    *(double *)(v38 + 24) = v23;
    *(_QWORD *)(v38 + 32) = v39;
    *(_QWORD *)(v38 + 40) = *(_QWORD *)(v0 + 8);
    *(_QWORD *)(v38 + 48) = v24;
    *(_QWORD *)(v38 + 56) = *(_QWORD *)(v0 + 272);
    *(_QWORD *)(v38 + 64) = v25;
    *(_QWORD *)(v38 + 72) = v26;
    *(_QWORD *)(v38 + 80) = v27;
    *(_BYTE *)(v38 + 88) = v28;
    *(_QWORD *)(v38 + 96) = v30;
    *(_QWORD *)(v38 + 104) = v32;
    *(_QWORD *)(v38 + 112) = v34;
    *(_QWORD *)(v38 + 120) = v36;
    *(_BYTE *)(v38 + 128) = *(_BYTE *)(v0 + 128);
    sub_23DF89C7C((uint64_t)v13, &qword_256D27138);
    sub_23E10BBDC();
    v40 = *(_QWORD *)(v0 + 24);
    sub_23E1369FC();
    sub_23DF89C7C(v37, &qword_256D27140);
    v41 = &qword_256D27148;
    v42 = *(_QWORD *)(v0 + 56);
    sub_23DF89340(v40, v42, &qword_256D27148);
    sub_23DF89C1C(v42, *(_QWORD *)(v0 + 104), &qword_256D27148);
    swift_storeEnumTagMultiPayload();
    sub_23E0B41AC(&qword_256D27188, &qword_256D27148, (uint64_t (*)(void))sub_23E10BBDC);
    sub_23E0B41AC(&qword_256D271B0, &qword_256D27128, (uint64_t (*)(void))sub_23E10BAA0);
    v43 = *(_QWORD *)(v0 + 80);
    sub_23E136480();
    swift_release();
  }
  else
  {
    v44 = *(double *)(v3 + *(int *)(v9 + 20) + 8);
    v45 = 0.0;
    v46 = 0.0;
    if (0.0 > 1.0)
      v46 = 1.0;
    if (v8 > 0.0)
      v45 = v8;
    if (v45 > 1.0)
      v45 = 1.0;
    *(double *)(v0 + 48) = v45;
    *(double *)(v0 + 56) = v46;
    v47 = v44 * 57.2957795 / 360.0;
    sub_23E135DCC();
    v48 = *(_QWORD *)(v7 - 200);
    v49 = *(_QWORD *)(v7 - 184);
    v50 = *(_QWORD *)(v7 - 176);
    v51 = *(_QWORD *)(v7 - 168);
    v52 = sub_23E13672C();
    sub_23E135D00();
    v54 = v53;
    v56 = v55;
    v58 = v57;
    v60 = v59;
    v61 = sub_23E136C0C();
    *(_QWORD *)(v0 + 264) = 0;
    v62 = *(_QWORD *)(v0 + 56);
    *(double *)(v0 + 272) = v47;
    *(_QWORD *)(v0 + 280) = v62;
    *(_QWORD *)(v0 + 288) = *(_QWORD *)(v0 + 48);
    *(_QWORD *)(v0 + 296) = v48;
    *(_QWORD *)(v0 + 304) = *(_QWORD *)(v7 - 192);
    *(_QWORD *)(v0 + 312) = v49;
    *(_QWORD *)(v0 + 320) = v50;
    *(_QWORD *)(v0 + 328) = v51;
    *(_BYTE *)(v0 + 336) = v52;
    *(_QWORD *)(v0 + 344) = v54;
    *(_QWORD *)(v0 + 352) = v56;
    *(_QWORD *)(v0 + 360) = v58;
    *(_QWORD *)(v0 + 368) = v60;
    *(_BYTE *)(v0 + 376) = 0;
    *(_QWORD *)(v0 + 384) = v61;
    v63 = *(_OWORD *)(v0 + 344);
    *(_OWORD *)(v0 + 192) = *(_OWORD *)(v0 + 328);
    *(_OWORD *)(v0 + 208) = v63;
    v64 = *(_OWORD *)(v0 + 376);
    *(_OWORD *)(v0 + 224) = *(_OWORD *)(v0 + 360);
    *(_OWORD *)(v0 + 240) = v64;
    v65 = *(_OWORD *)(v0 + 280);
    *(_OWORD *)(v0 + 128) = *(_OWORD *)(v0 + 264);
    *(_OWORD *)(v0 + 144) = v65;
    v66 = *(_OWORD *)(v0 + 312);
    *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 296);
    *(_OWORD *)(v0 + 176) = v66;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D27158);
    sub_23E10BAA0();
    v67 = *(_QWORD *)(v0 + 8);
    sub_23E1369FC();
    sub_23E10BBA8(v0 + 264);
    v41 = &qword_256D27128;
    v68 = v67;
    v42 = *(_QWORD *)(v0 + 16);
    sub_23DF89340(v68, v42, &qword_256D27128);
    sub_23DF89C1C(v42, *(_QWORD *)(v0 + 104), &qword_256D27128);
    swift_storeEnumTagMultiPayload();
    sub_23E0B41AC(&qword_256D27188, &qword_256D27148, (uint64_t (*)(void))sub_23E10BBDC);
    sub_23E0B41AC(&qword_256D271B0, &qword_256D27128, (uint64_t (*)(void))sub_23E10BAA0);
    v43 = *(_QWORD *)(v0 + 80);
    sub_23E136480();
  }
  sub_23DF89C7C(v42, v41);
  v69 = v43;
  v70 = *(_QWORD *)(v0 + 64);
  sub_23DF89340(v69, v70, &qword_256D27150);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 112) + 56))(v70, 0, 1, *(_QWORD *)(v0 + 120));
}

uint64_t sub_23E1040EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __n128 v14;
  uint64_t v15;
  char *v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t KeyPath;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v33 = a1;
  v5 = type metadata accessor for RingControlView.ColorTrackView(0);
  v32 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v32 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D271C0);
  v35 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v34 = (char *)&KeyPath - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&KeyPath - v10;
  v12 = sub_23E136CC0();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&KeyPath - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, _QWORD, uint64_t, __n128))(v13 + 104))(v16, *MEMORY[0x24BDF3FD0], v12, v14);
  v33 = sub_23E136D14();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  v17 = *(double *)(a2 + *(int *)(v5 + 20) + 16) * -57.2957795 * 0.0174532925;
  sub_23E137080();
  v19 = v18;
  v21 = v20;
  sub_23E06FB00();
  v36 = v22;
  KeyPath = swift_getKeyPath();
  sub_23DF73E10(a2, (uint64_t)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RingControlView.ColorTrackView);
  v23 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v24 = swift_allocObject();
  sub_23DF89384((uint64_t)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23, type metadata accessor for RingControlView.ColorTrackView);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D271C8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D271D0);
  sub_23E10BF78();
  sub_23DF73F28((unint64_t *)&qword_256D1F120, _s4KnobVMa, (uint64_t)&unk_23E13EE90);
  sub_23DF89B88(&qword_256D271E0, &qword_256D271D0, MEMORY[0x24BDF5428]);
  sub_23E136F0C();
  v25 = v34;
  v26 = v35;
  v27 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v27(v34, v11, v7);
  *(_QWORD *)a3 = v33;
  *(_QWORD *)(a3 + 8) = 0;
  *(_WORD *)(a3 + 16) = 257;
  *(double *)(a3 + 24) = v17;
  *(_QWORD *)(a3 + 32) = v19;
  *(_QWORD *)(a3 + 40) = v21;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D271E8);
  v27((char *)(a3 + *(int *)(v28 + 48)), v25, v7);
  v29 = *(void (**)(char *, uint64_t))(v26 + 8);
  swift_retain();
  v29(v11, v7);
  v29(v25, v7);
  return swift_release();
}

uint64_t sub_23E104414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  __double2 v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  uint64_t v56;

  if (qword_256D1D478 != -1)
    swift_once();
  v6 = _s4KnobVMa(0);
  v39 = *(_QWORD *)(a1 + *(int *)(v6 + 24));
  swift_retain();
  sub_23E136FE4();
  sub_23E135E5C();
  v7 = type metadata accessor for RingControlView.ColorTrackView(0);
  v8 = (double *)(a2 + *(int *)(v7 + 20));
  v9 = *v8;
  v10 = *(double *)(a1 + *(int *)(v6 + 20));
  v11 = 1.0;
  if (v10 <= 1.0)
    v11 = *(double *)(a1 + *(int *)(v6 + 20));
  v12 = 0.0;
  if (v10 > 0.0)
    v13 = v11;
  else
    v13 = 0.0;
  v14 = v9 + v8[3] * -0.5;
  v15 = __sincos_stret(v8[1] * 57.2957795 * v13 * 0.0174532925);
  v16 = v14 * v15.__sinval;
  v17 = v9 + v14 * v15.__cosval;
  v18 = v9 + v16;
  sub_23E070DC4();
  v20 = v19;
  v21 = a2 + *(int *)(v7 + 32);
  v22 = *(_QWORD *)v21;
  v23 = *(_BYTE *)(v21 + 8);
  sub_23DF89F20(*(_QWORD *)v21, v23);
  v24 = sub_23DF9C59C(v22, v23);
  result = sub_23DF8A078(v22, v23);
  v26 = 0;
  v27 = 0;
  v28 = 0;
  v29 = 0;
  v30 = 0;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v35 = 0;
  v36 = 0;
  v37 = 0.0;
  v38 = 0;
  if ((v24 & 1) != 0)
  {
    sub_23E135DCC();
    sub_23E136FE4();
    sub_23E135E5C();
    v31 = v51;
    v32 = v52;
    v33 = v53;
    v34 = v54;
    v35 = v55;
    v36 = v56;
    result = sub_23E070DC4();
    v30 = v50;
    v29 = v49;
    v28 = v48;
    v27 = v47;
    v26 = v46;
    v12 = v17;
    v37 = v18;
  }
  *(_QWORD *)a3 = v39;
  *(_WORD *)(a3 + 8) = 256;
  *(_QWORD *)(a3 + 16) = v40;
  *(_BYTE *)(a3 + 24) = v41;
  *(_QWORD *)(a3 + 32) = v42;
  *(_BYTE *)(a3 + 40) = v43;
  *(_QWORD *)(a3 + 48) = v44;
  *(_QWORD *)(a3 + 56) = v45;
  *(double *)(a3 + 64) = v17;
  *(double *)(a3 + 72) = v18;
  *(_QWORD *)(a3 + 80) = 0x4040000000000000;
  *(_BYTE *)(a3 + 88) = 0;
  *(_QWORD *)(a3 + 96) = v20;
  *(_QWORD *)(a3 + 104) = v26;
  *(_QWORD *)(a3 + 112) = v27;
  *(_QWORD *)(a3 + 120) = v28;
  *(_QWORD *)(a3 + 128) = v29;
  *(_QWORD *)(a3 + 136) = v30;
  *(_QWORD *)(a3 + 144) = v31;
  *(_QWORD *)(a3 + 152) = v32;
  *(_QWORD *)(a3 + 160) = v33;
  *(_QWORD *)(a3 + 168) = v34;
  *(_QWORD *)(a3 + 176) = v35;
  *(_QWORD *)(a3 + 184) = v36;
  *(double *)(a3 + 192) = v12;
  *(double *)(a3 + 200) = v37;
  *(_QWORD *)(a3 + 208) = v38;
  return result;
}

void sub_23E104704(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[2];
  uint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v55 = a2;
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27028);
  MEMORY[0x24BDAC7A8](v42);
  v44 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27030);
  MEMORY[0x24BDAC7A8](v43);
  v37[1] = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27038);
  MEMORY[0x24BDAC7A8](v54);
  v45 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27040);
  MEMORY[0x24BDAC7A8](v48);
  v52 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27048);
  MEMORY[0x24BDAC7A8](v38);
  v39 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27050);
  MEMORY[0x24BDAC7A8](v49);
  v40 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27058);
  v56 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  v37[0] = (char *)v37 - v12;
  MEMORY[0x24BDAC7A8](v13);
  v46 = (char *)v37 - v14;
  v15 = _s4KnobVMa(0);
  MEMORY[0x24BDAC7A8](v15);
  v41 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v47 = (char *)v37 - v18;
  v19 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v19);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27060);
  MEMORY[0x24BDAC7A8](v20);
  v53 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v51 = (char *)v37 - v23;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27068);
  MEMORY[0x24BDAC7A8](v24);
  v50 = (char *)v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v37 - v27;
  v29 = a1 + *(int *)(type metadata accessor for RingControlView.KnobsView(0) + 32);
  v30 = *(_QWORD *)v29;
  v31 = *(_BYTE *)(v29 + 8);
  sub_23DF89F20(*(_QWORD *)v29, v31);
  v32 = sub_23DF9C59C(v30, v31);
  sub_23DF8A078(v30, v31);
  if ((v32 & 1) != 0)
  {
    sub_23DFB5F30(v28);
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27070);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v28, 0, 1, v33);
  }
  else
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27070);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v28, 1, 1, v34);
  }
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  MEMORY[0x24264B734](v35);
  v36 = (char *)sub_23E104B70 + 4 * byte_23E142C68[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_23E104B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_QWORD *)(v3 - 200);
  sub_23DF89384(v0, v4, _s4KnobVMa);
  v5 = *(_QWORD *)(v3 - 208);
  sub_23E1050A4(v4);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 16))(*(_QWORD *)(v3 - 264), v5, v2);
  swift_storeEnumTagMultiPayload();
  v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27088);
  v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D201B8);
  v8 = sub_23E10B6D8();
  v9 = sub_23DF89B88(&qword_256D201F0, &qword_256D201B8, MEMORY[0x24BDEC410]);
  *(_QWORD *)(v3 - 120) = v6;
  *(_QWORD *)(v3 - 112) = v7;
  *(_QWORD *)(v3 - 104) = v8;
  *(_QWORD *)(v3 - 96) = v9;
  swift_getOpaqueTypeConformance2();
  v10 = *(_QWORD *)(v3 - 256);
  sub_23E136480();
  sub_23DF89C1C(v10, *(_QWORD *)(v3 - 160), &qword_256D27050);
  swift_storeEnumTagMultiPayload();
  sub_23E10B608();
  sub_23E10B95C();
  v11 = *(_QWORD *)(v3 - 168);
  sub_23E136480();
  sub_23DF89C7C(v10, &qword_256D27050);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 128) + 8))(v5, v2);
  sub_23DF73E54(v4, _s4KnobVMa);
  v12 = *(_QWORD *)(v3 - 136);
  v13 = *(_QWORD *)(v3 - 152);
  v14 = *(_QWORD *)(v3 - 176);
  sub_23DF89C1C(v1, v14, &qword_256D27068);
  sub_23DF89C1C(v11, v13, &qword_256D27060);
  sub_23DF89C1C(v14, v12, &qword_256D27068);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27110);
  sub_23DF89C1C(v13, v12 + *(int *)(v15 + 48), &qword_256D27060);
  sub_23DF89C7C(v11, &qword_256D27060);
  sub_23DF89C7C(v1, &qword_256D27068);
  sub_23DF89C7C(v13, &qword_256D27060);
  return sub_23DF89C7C(v14, &qword_256D27068);
}

uint64_t sub_23E1050A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double *v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  BOOL v20;
  double v21;
  double v22;
  double v23;
  __double2 v24;
  double v25;
  double v26;
  double v27;
  double *v28;
  uint64_t v30;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D270A0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (_OWORD *)((char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27088);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1053BC(a1, v9);
  v13 = (double *)(v1 + *(int *)(type metadata accessor for RingControlView.KnobsView(0) + 20));
  v14 = *v13;
  v15 = v13[1];
  v16 = v13[3];
  v17 = _s4KnobVMa(0);
  v18 = *(double *)(a1 + *(int *)(v17 + 20));
  v19 = 1.0;
  if (v18 <= 1.0)
    v19 = *(double *)(a1 + *(int *)(v17 + 20));
  v20 = v18 > 0.0;
  v21 = 0.0;
  if (v20)
    v21 = v19;
  v22 = v15 * 57.2957795 * v21 * 0.0174532925;
  v23 = v14 + v16 * -0.5;
  v24 = __sincos_stret(v22);
  v25 = v23 * v24.__sinval;
  v26 = v14 + v23 * v24.__cosval;
  v27 = v14 + v25;
  sub_23DF89C1C((uint64_t)v9, (uint64_t)v12, &qword_256D270A0);
  v28 = (double *)&v12[*(int *)(v10 + 36)];
  *v28 = v26;
  v28[1] = v27;
  sub_23DF89C7C((uint64_t)v9, &qword_256D270A0);
  sub_23E10CAAC(a1, (uint64_t)v6);
  sub_23E135DA8();
  sub_23E10B6D8();
  sub_23DF89B88(&qword_256D201F0, &qword_256D201B8, MEMORY[0x24BDEC410]);
  sub_23E136AB0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_23DF89C7C((uint64_t)v12, &qword_256D27088);
}

_BYTE *sub_23E1052D8(_BYTE *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;

  if ((result[8] & 1) == 0 && (*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F360);
    v2 = swift_allocObject();
    v3 = MEMORY[0x24BEE0D00];
    *(_OWORD *)(v2 + 16) = xmmword_23E138050;
    *(_QWORD *)(v2 + 56) = v3;
    *(_QWORD *)(v2 + 32) = 0x636974706168;
    *(_QWORD *)(v2 + 40) = 0xE600000000000000;
    sub_23E137674();
    swift_bridgeObjectRelease();
    if (qword_256D1D480 != -1)
      swift_once();
    v4 = (void *)qword_256D34758;
    objc_msgSend((id)qword_256D34758, sel_impactOccurred);
    return objc_msgSend(v4, sel_prepare);
  }
  return result;
}

uint64_t sub_23E1053BC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  char v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  _OWORD v61[2];
  _OWORD v62[2];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  char v85;
  __int128 v86;

  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F550);
  MEMORY[0x24BDAC7A8](v48);
  v52 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_23E136084();
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27120);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = _s4KnobV10IconConfigVMa(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_23E136C48();
  v17 = sub_23E136FE4();
  v45 = v18;
  v46 = v17;
  v19 = _s4KnobVMa(0);
  sub_23DF89C1C(a1 + *(int *)(v19 + 36), (uint64_t)v12, &qword_256D20EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_23DF89C7C((uint64_t)v12, &qword_256D20EF0);
    v43 = 0;
    v44 = 0;
  }
  else
  {
    sub_23DF89384((uint64_t)v12, (uint64_t)v16, _s4KnobV10IconConfigVMa);
    swift_bridgeObjectRetain();
    sub_23E136CB4();
    v20 = &v16[*(int *)(v13 + 20)];
    v21 = sub_23E136CFC();
    v22 = *(_QWORD *)(v21 - 8);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v9, v20, v21);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v9, 0, 1, v21);
    v44 = sub_23E136CCC();
    swift_release();
    sub_23DF89C7C((uint64_t)v9, &qword_256D27120);
    v43 = *(_QWORD *)&v16[*(int *)(v13 + 24)];
    swift_retain();
    sub_23DF73E54((uint64_t)v16, _s4KnobV10IconConfigVMa);
  }
  type metadata accessor for RingControlView.KnobsView(0);
  sub_23E136FE4();
  sub_23E135E5C();
  v23 = v76;
  v24 = v77;
  v25 = v78;
  v26 = v79;
  v28 = v80;
  v27 = v81;
  sub_23E136C24();
  v29 = sub_23E136C60();
  swift_release();
  v54 = v24;
  v53 = v26;
  sub_23E136C24();
  v30 = sub_23E136C60();
  swift_release();
  *(_QWORD *)&v55 = v47;
  WORD4(v55) = 256;
  *(_QWORD *)&v56 = v44;
  *((_QWORD *)&v56 + 1) = v43;
  *(_QWORD *)&v57 = v46;
  *((_QWORD *)&v57 + 1) = v45;
  *(_QWORD *)&v58 = v23;
  BYTE8(v58) = v54;
  *(_QWORD *)&v59 = v25;
  BYTE8(v59) = v53;
  *(_QWORD *)&v60 = v28;
  *((_QWORD *)&v60 + 1) = v27;
  *(_QWORD *)&v61[0] = v29;
  *(_OWORD *)((char *)v61 + 8) = xmmword_23E142FD0;
  *((_QWORD *)&v61[1] + 1) = 0x4008000000000000;
  *(_QWORD *)&v62[0] = v30;
  *(_OWORD *)((char *)v62 + 8) = xmmword_23E142FE0;
  *((_QWORD *)&v62[1] + 1) = 0x4008000000000000;
  sub_23E136FE4();
  sub_23E135E5C();
  v69 = v61[0];
  v70 = v61[1];
  v71 = v62[0];
  v72 = v62[1];
  v65 = v57;
  v66 = v58;
  v67 = v59;
  v68 = v60;
  v63 = v55;
  v64 = v56;
  *(_QWORD *)&v73 = v82;
  BYTE8(v73) = v83;
  *(_QWORD *)&v74 = v84;
  BYTE8(v74) = v85;
  v75 = v86;
  v31 = v49;
  sub_23E13606C();
  v33 = v51;
  v32 = v52;
  v34 = v50;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(&v52[*(int *)(v48 + 40)], v31, v51);
  *v32 = 0;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D270A0);
  sub_23DF89C1C((uint64_t)v32, (uint64_t)a2 + *(int *)(v35 + 36), &qword_256D1F550);
  v36 = v74;
  a2[10] = v73;
  a2[11] = v36;
  a2[12] = v75;
  v37 = v70;
  a2[6] = v69;
  a2[7] = v37;
  v38 = v72;
  a2[8] = v71;
  a2[9] = v38;
  v39 = v66;
  a2[2] = v65;
  a2[3] = v39;
  v40 = v68;
  a2[4] = v67;
  a2[5] = v40;
  v41 = v64;
  *a2 = v63;
  a2[1] = v41;
  sub_23E10B9E0((uint64_t)&v63);
  sub_23DF89C7C((uint64_t)v32, &qword_256D1F550);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
  return sub_23E10BA40((uint64_t)&v55);
}

uint64_t sub_23E10589C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27000);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (uint64_t *)((char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v5 = sub_23E136FE4();
  v5[1] = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D27008);
  sub_23E104704(v1, (uint64_t)v5 + *(int *)(v7 + 44));
  v8 = v1 + *(int *)(a1 + 36);
  v9 = *(_QWORD *)v8;
  v10 = *(_BYTE *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 16);
  v14 = v9;
  v15 = v10;
  v16 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D27010);
  sub_23E136D98();
  v14 = v17;
  v15 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D1FE50);
  sub_23DF89B88(&qword_256D27018, &qword_256D27000, MEMORY[0x24BDF4750]);
  sub_23E10B554();
  sub_23E136B7C();
  return sub_23DF89C7C((uint64_t)v5, &qword_256D27000);
}

_QWORD *sub_23E1059EC(_QWORD *a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t))
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  v4 = swift_release();
  result = a2(&v6, v4);
  *a1 = v6;
  return result;
}

uint64_t sub_23E105A3C()
{
  unsigned __int8 *v0;
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  v1 = v0[24];
  v2 = v0[40];
  v3 = v0[56];
  v4 = v0[72];
  sub_23E136BAC();
  sub_23E1376A4();
  if (v1 == 4)
  {
    sub_23E1376B0();
    if (!v2)
      goto LABEL_3;
  }
  else
  {
    sub_23E1376B0();
    sub_23E1376C8();
    sub_23E1376A4();
    if (!v2)
    {
LABEL_3:
      sub_23E1376B0();
      sub_23E1376C8();
      if (!v3)
        goto LABEL_4;
LABEL_8:
      sub_23E1376B0();
      if (!v4)
        goto LABEL_5;
      return sub_23E1376B0();
    }
  }
  sub_23E1376B0();
  if (v3)
    goto LABEL_8;
LABEL_4:
  sub_23E1376B0();
  sub_23E1376C8();
  if (!v4)
  {
LABEL_5:
    sub_23E1376B0();
    return sub_23E1376C8();
  }
  return sub_23E1376B0();
}

uint64_t sub_23E105B4C()
{
  sub_23E137698();
  sub_23E105A3C();
  return sub_23E1376D4();
}

uint64_t sub_23E105BE0()
{
  sub_23E137698();
  sub_23E105A3C();
  return sub_23E1376D4();
}

void sub_23E105C70()
{
  qword_256D34740 = 0x4042000000000000;
}

uint64_t sub_23E105C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);

  v1 = type metadata accessor for RingControlView(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  v3 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = sub_23E134C80();
    v14 = *(_QWORD *)(v13 - 8);
    v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v22(v3, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v13);
    v21 = v14;
    v15 = _s4KnobVMa(0);
    swift_release();
    v16 = v3 + *(int *)(v15 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
    if (!v17(v16, 1, v9))
    {
      swift_bridgeObjectRelease();
      v20 = v16 + *(int *)(v9 + 20);
      v18 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v20, v18);
      swift_release();
    }
    v19 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v22(v19, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v13);
    swift_release();
    v8 = v19 + *(int *)(v15 + 36);
    if (!v17(v8, 1, v9))
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v5 = sub_23E134C80();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v3, 2, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
    v7 = _s4KnobVMa(0);
    swift_release();
    v8 = v3 + *(int *)(v7 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 20);
      v11 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_release();
    }
  }
  swift_release();
  swift_release();
  if (*(_QWORD *)(v2 + *(int *)(v1 + 28)))
    swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_23E105F78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RingControlView(0) - 8) + 80);
  return sub_23E102904(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_23E105FC4()
{
  return sub_23DF8E904(&qword_256D26E20, &qword_256D26E18, (uint64_t (*)(void))sub_23E105FE8, MEMORY[0x24BDECC60]);
}

unint64_t sub_23E105FE8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D26E28;
  if (!qword_256D26E28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D26E30);
    v2[0] = sub_23E10B8BC(&qword_256D26E38, &qword_256D26E40, &qword_256D26E48, &qword_256D26E50);
    v2[1] = sub_23DF89B88(&qword_256D26E58, &qword_256D26E60, MEMORY[0x24BDEFF30]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D26E28);
  }
  return result;
}

uint64_t type metadata accessor for RingControlView.KnobsView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D26F00);
}

uint64_t type metadata accessor for RingControlView.ColorTrackView(uint64_t a1)
{
  return sub_23DF8DC70(a1, qword_256D26FA0);
}

void sub_23E1060B4()
{
  qword_256D34748 = 0x403E000000000000;
}

ValueMetadata *type metadata accessor for RingControlView.CenterPreferenceKey()
{
  return &type metadata for RingControlView.CenterPreferenceKey;
}

_QWORD *sub_23E1060EC(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  __int128 v74;
  __int128 v75;
  char *v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  char *v80;
  char *v81;
  void (*v83)(char *, char *, uint64_t);
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v96;
  char *v97;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) == 0)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = sub_23E134C80();
      v17 = *(_QWORD *)(v16 - 8);
      v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      v90 = v16;
      v86 = v17;
      if (v89(v10, 2, v16))
      {
        v18 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v9, v10, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 2, v16);
      }
      v30 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v30[5]] = *(_QWORD *)&v10[v30[5]];
      *(_QWORD *)&v9[v30[6]] = *(_QWORD *)&v10[v30[6]];
      v9[v30[7]] = v10[v30[7]];
      v9[v30[8]] = v10[v30[8]];
      v31 = v30[9];
      v88 = v9;
      __dst = &v9[v31];
      v32 = &v10[v31];
      v33 = _s4KnobV10IconConfigVMa(0);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      v36 = v33;
      swift_retain();
      v96 = v36;
      v87 = v34;
      if (v35(v32, 1, v36))
      {
        v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v45 = *((_QWORD *)v32 + 1);
        *(_QWORD *)__dst = *(_QWORD *)v32;
        *((_QWORD *)__dst + 1) = v45;
        v46 = *(int *)(v96 + 20);
        v84 = &v32[v46];
        v85 = &__dst[v46];
        v47 = sub_23E136CFC();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v85, v84, v47);
        *(_QWORD *)&__dst[*(int *)(v96 + 24)] = *(_QWORD *)&v32[*(int *)(v96 + 24)];
        v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
        swift_retain();
        v48(__dst, 0, 1, v96);
      }
      v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v50 = &v88[v49];
      v51 = &v10[v49];
      if (v89(&v10[v49], 2, v90))
      {
        v52 = _s4KnobV2IDOMa(0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v86 + 16))(v50, v51, v90);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56))(v50, 0, 2, v90);
      }
      *(_QWORD *)&v50[v30[5]] = *(_QWORD *)&v51[v30[5]];
      *(_QWORD *)&v50[v30[6]] = *(_QWORD *)&v51[v30[6]];
      v50[v30[7]] = v51[v30[7]];
      v50[v30[8]] = v51[v30[8]];
      v53 = v30[9];
      v54 = &v50[v53];
      v55 = &v51[v53];
      swift_retain();
      if (v35(v55, 1, v96))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        v57 = *((_QWORD *)v55 + 1);
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = v57;
        v58 = *(int *)(v96 + 20);
        v92 = &v55[v58];
        __dstb = &v54[v58];
        v59 = sub_23E136CFC();
        v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
        swift_bridgeObjectRetain();
        v60(__dstb, v92, v59);
        *(_QWORD *)&v54[*(int *)(v96 + 24)] = *(_QWORD *)&v55[*(int *)(v96 + 24)];
        v61 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56);
        swift_retain();
        v61(v54, 0, 1, v96);
      }
      goto LABEL_31;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v19 = sub_23E134C80();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 2, v19))
      {
        v21 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v9, v10, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 2, v19);
      }
      v38 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v38[5]] = *(_QWORD *)&v10[v38[5]];
      *(_QWORD *)&v9[v38[6]] = *(_QWORD *)&v10[v38[6]];
      v9[v38[7]] = v10[v38[7]];
      v9[v38[8]] = v10[v38[8]];
      v39 = v38[9];
      v24 = &v9[v39];
      v25 = &v10[v39];
      v26 = _s4KnobV10IconConfigVMa(0);
      v27 = *(_QWORD *)(v26 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_retain();
      if (v40(v25, 1, v26))
      {
LABEL_15:
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_31:
        swift_storeEnumTagMultiPayload();
        goto LABEL_32;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_32:
        v62 = a3[5];
        v63 = a3[6];
        v64 = (char *)a1 + v62;
        v65 = (char *)a2 + v62;
        v66 = *((_OWORD *)v65 + 1);
        *(_OWORD *)v64 = *(_OWORD *)v65;
        *((_OWORD *)v64 + 1) = v66;
        *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
        v67 = (char *)a1 + v63;
        v68 = (char *)a2 + v63;
        v69 = *((_QWORD *)v68 + 1);
        *(_QWORD *)v67 = *(_QWORD *)v68;
        *((_QWORD *)v67 + 1) = v69;
        v67[16] = v68[16];
        v70 = a3[7];
        v71 = a3[8];
        v72 = (_OWORD *)((char *)a1 + v70);
        v73 = (_OWORD *)((char *)a2 + v70);
        *(_OWORD *)((char *)v72 + 57) = *(_OWORD *)((char *)v73 + 57);
        v74 = v73[3];
        v72[2] = v73[2];
        v72[3] = v74;
        v75 = v73[1];
        *v72 = *v73;
        v72[1] = v75;
        v76 = (char *)a1 + v71;
        v77 = *(_QWORD *)((char *)a2 + v71);
        v78 = *((_BYTE *)a2 + v71 + 8);
        swift_retain();
        swift_retain();
        sub_23DF89F20(v77, v78);
        *(_QWORD *)v76 = v77;
        v76[8] = v78;
        v79 = a3[9];
        v80 = (char *)a1 + v79;
        v81 = (char *)a2 + v79;
        *(_QWORD *)v80 = *(_QWORD *)v81;
        v80[8] = v81[8];
        *((_QWORD *)v80 + 2) = *((_QWORD *)v81 + 2);
        goto LABEL_33;
      }
      v13 = sub_23E134C80();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 2, v13))
      {
        v15 = _s4KnobV2IDOMa(0);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v10, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 2, v13);
      }
      v22 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v9[v22[5]] = *(_QWORD *)&v10[v22[5]];
      *(_QWORD *)&v9[v22[6]] = *(_QWORD *)&v10[v22[6]];
      v9[v22[7]] = v10[v22[7]];
      v9[v22[8]] = v10[v22[8]];
      v23 = v22[9];
      v24 = &v9[v23];
      v25 = &v10[v23];
      v26 = _s4KnobV10IconConfigVMa(0);
      v27 = *(_QWORD *)(v26 - 8);
      v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      swift_retain();
      if (v28(v25, 1, v26))
        goto LABEL_15;
    }
    v41 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v41;
    v42 = *(int *)(v26 + 20);
    __dsta = &v25[v42];
    v97 = &v24[v42];
    v43 = sub_23E136CFC();
    v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    v91(v97, __dsta, v43);
    *(_QWORD *)&v24[*(int *)(v26 + 24)] = *(_QWORD *)&v25[*(int *)(v26 + 24)];
    v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
    swift_retain();
    v44(v24, 0, 1, v26);
    goto LABEL_31;
  }
  a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
LABEL_33:
  swift_retain();
  return a1;
}

uint64_t sub_23E1068E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v14 = sub_23E134C80();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    if (!v16(v4, 2, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v14);
    v17 = _s4KnobVMa(0);
    swift_release();
    v18 = v4 + *(int *)(v17 + 36);
    v10 = _s4KnobV10IconConfigVMa(0);
    v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    if (!v19(v18, 1, v10))
    {
      swift_bridgeObjectRelease();
      v24 = v15;
      v20 = v18 + *(int *)(v10 + 20);
      v21 = sub_23E136CFC();
      v22 = v20;
      v15 = v24;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v22, v21);
      swift_release();
    }
    v23 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v16(v23, 2, v14))
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v23, v14);
    swift_release();
    v9 = v23 + *(int *)(v17 + 36);
    if (!v19(v9, 1, v10))
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v6 = sub_23E134C80();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 2, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    v8 = _s4KnobVMa(0);
    swift_release();
    v9 = v4 + *(int *)(v8 + 36);
    v10 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v11 = v9 + *(int *)(v10 + 20);
      v12 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      swift_release();
    }
  }
  swift_release();
  swift_release();
  sub_23DF8A078(*(_QWORD *)(a1 + *(int *)(a2 + 32)), *(_BYTE *)(a1 + *(int *)(a2 + 32) + 8));
  return swift_release();
}

_QWORD *sub_23E106B8C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  int *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  __int128 v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  __int128 v73;
  __int128 v74;
  char *v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  char *v79;
  char *v80;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  unsigned int (*v87)(char *, uint64_t, uint64_t);
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  int *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  char *v92;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v96;
  char *v97;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      v88 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v89 = a3;
      v90 = v15;
      v85 = v16;
      if (v88(v9, 2, v15))
      {
        v17 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v9, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
      }
      v29 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v29[5]] = *(_QWORD *)&v9[v29[5]];
      *(_QWORD *)&v8[v29[6]] = *(_QWORD *)&v9[v29[6]];
      v8[v29[7]] = v9[v29[7]];
      v8[v29[8]] = v9[v29[8]];
      v30 = v29[9];
      __dst = &v8[v30];
      v31 = &v9[v30];
      v32 = _s4KnobV10IconConfigVMa(0);
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v35 = v32;
      swift_retain();
      v96 = v35;
      v87 = v34;
      v86 = v33;
      if (v34(v31, 1, v35))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        v44 = *((_QWORD *)v31 + 1);
        *(_QWORD *)__dst = *(_QWORD *)v31;
        *((_QWORD *)__dst + 1) = v44;
        v45 = *(int *)(v96 + 20);
        v83 = &v31[v45];
        v84 = &__dst[v45];
        v46 = sub_23E136CFC();
        v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v82(v84, v83, v46);
        *(_QWORD *)&__dst[*(int *)(v96 + 24)] = *(_QWORD *)&v31[*(int *)(v96 + 24)];
        v47 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56);
        swift_retain();
        v47(__dst, 0, 1, v96);
      }
      v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v49 = &v8[v48];
      v50 = &v9[v48];
      a3 = v89;
      if (v88(&v9[v48], 2, v90))
      {
        v51 = _s4KnobV2IDOMa(0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v49, v50, v90);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v49, 0, 2, v90);
      }
      *(_QWORD *)&v49[v29[5]] = *(_QWORD *)&v50[v29[5]];
      *(_QWORD *)&v49[v29[6]] = *(_QWORD *)&v50[v29[6]];
      v49[v29[7]] = v50[v29[7]];
      v49[v29[8]] = v50[v29[8]];
      v52 = v29[9];
      v53 = &v49[v52];
      v54 = &v50[v52];
      swift_retain();
      if (v87(v54, 1, v96))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v56 = *((_QWORD *)v54 + 1);
        *(_QWORD *)v53 = *(_QWORD *)v54;
        *((_QWORD *)v53 + 1) = v56;
        v57 = *(int *)(v96 + 20);
        v92 = &v54[v57];
        __dstb = &v53[v57];
        v58 = sub_23E136CFC();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        v59(__dstb, v92, v58);
        *(_QWORD *)&v53[*(int *)(v96 + 24)] = *(_QWORD *)&v54[*(int *)(v96 + 24)];
        v60 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56);
        swift_retain();
        v60(v53, 0, 1, v96);
      }
      goto LABEL_29;
    case 1:
      v18 = sub_23E134C80();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
      {
        v20 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v8, v9, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
      }
      v37 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v37[5]] = *(_QWORD *)&v9[v37[5]];
      *(_QWORD *)&v8[v37[6]] = *(_QWORD *)&v9[v37[6]];
      v8[v37[7]] = v9[v37[7]];
      v8[v37[8]] = v9[v37[8]];
      v38 = v37[9];
      v23 = &v8[v38];
      v24 = &v9[v38];
      v25 = _s4KnobV10IconConfigVMa(0);
      v26 = *(_QWORD *)(v25 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      swift_retain();
      if (v39(v24, 1, v25))
        goto LABEL_13;
      goto LABEL_20;
    case 0:
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
      {
        v14 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
      }
      v21 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
      *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
      v8[v21[7]] = v9[v21[7]];
      v8[v21[8]] = v9[v21[8]];
      v22 = v21[9];
      v23 = &v8[v22];
      v24 = &v9[v22];
      v25 = _s4KnobV10IconConfigVMa(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      swift_retain();
      if (v27(v24, 1, v25))
      {
LABEL_13:
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      }
LABEL_20:
      v40 = *((_QWORD *)v24 + 1);
      *(_QWORD *)v23 = *(_QWORD *)v24;
      *((_QWORD *)v23 + 1) = v40;
      v41 = *(int *)(v25 + 20);
      __dsta = &v24[v41];
      v97 = &v23[v41];
      v42 = sub_23E136CFC();
      v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      v91(v97, __dsta, v42);
      *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
      v43 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
      swift_retain();
      v43(v23, 0, 1, v25);
      goto LABEL_29;
  }
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_30:
  v61 = a3[5];
  v62 = a3[6];
  v63 = (char *)a1 + v61;
  v64 = (char *)a2 + v61;
  v65 = *((_OWORD *)v64 + 1);
  *(_OWORD *)v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v65;
  *((_QWORD *)v63 + 4) = *((_QWORD *)v64 + 4);
  v66 = (char *)a1 + v62;
  v67 = (char *)a2 + v62;
  v68 = *((_QWORD *)v67 + 1);
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *((_QWORD *)v66 + 1) = v68;
  v66[16] = v67[16];
  v69 = a3[7];
  v70 = a3[8];
  v71 = (_OWORD *)((char *)a1 + v69);
  v72 = (_OWORD *)((char *)a2 + v69);
  *(_OWORD *)((char *)v71 + 57) = *(_OWORD *)((char *)v72 + 57);
  v73 = v72[3];
  v71[2] = v72[2];
  v71[3] = v73;
  v74 = v72[1];
  *v71 = *v72;
  v71[1] = v74;
  v75 = (char *)a1 + v70;
  v76 = *(_QWORD *)((char *)a2 + v70);
  v77 = *((_BYTE *)a2 + v70 + 8);
  swift_retain();
  swift_retain();
  sub_23DF89F20(v76, v77);
  *(_QWORD *)v75 = v76;
  v75[8] = v77;
  v78 = a3[9];
  v79 = (char *)a1 + v78;
  v80 = (char *)a2 + v78;
  *(_QWORD *)v79 = *(_QWORD *)v80;
  v79[8] = v80[8];
  *((_QWORD *)v79 + 2) = *((_QWORD *)v80 + 2);
  swift_retain();
  return a1;
}

_QWORD *sub_23E10735C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  int *v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v82)(char *, char *, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *__dst;
  unsigned int (*v88)(char *, uint64_t, uint64_t);
  unsigned int (*v89)(char *, uint64_t, uint64_t);
  char *v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  char *v95;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  if (a1 != a2)
  {
    v7 = *(int *)(v6 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_23DF73E54((uint64_t)a1 + v7, _s9KnobStateOMa);
    v10 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v15 = sub_23E134C80();
        v16 = *(_QWORD *)(v15 - 8);
        v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
        v92 = v15;
        v85 = v16;
        if (v89(v9, 2, v15))
        {
          v17 = _s4KnobV2IDOMa(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v9, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
        }
        v21 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
        *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
        v8[v21[7]] = v9[v21[7]];
        v8[v21[8]] = v9[v21[8]];
        v22 = v21[9];
        __dst = &v8[v22];
        v23 = &v9[v22];
        v24 = _s4KnobV10IconConfigVMa(0);
        v25 = *(_QWORD *)(v24 - 8);
        v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
        v27 = v24;
        swift_retain();
        v88 = v26;
        v86 = v25;
        if (v26(v23, 1, v27))
        {
          v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          *(_QWORD *)__dst = *(_QWORD *)v23;
          *((_QWORD *)__dst + 1) = *((_QWORD *)v23 + 1);
          v37 = *(int *)(v27 + 20);
          v83 = &v23[v37];
          v84 = &__dst[v37];
          v38 = sub_23E136CFC();
          v82 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
          swift_bridgeObjectRetain();
          v82(v84, v83, v38);
          *(_QWORD *)&__dst[*(int *)(v27 + 24)] = *(_QWORD *)&v23[*(int *)(v27 + 24)];
          v39 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
          swift_retain();
          v39(__dst, 0, 1, v27);
        }
        v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v41 = &v8[v40];
        v42 = &v9[v40];
        if (v89(&v9[v40], 2, v92))
        {
          v43 = _s4KnobV2IDOMa(0);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v85 + 16))(v41, v42, v92);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v41, 0, 2, v92);
        }
        *(_QWORD *)&v41[v21[5]] = *(_QWORD *)&v42[v21[5]];
        *(_QWORD *)&v41[v21[6]] = *(_QWORD *)&v42[v21[6]];
        v41[v21[7]] = v42[v21[7]];
        v41[v21[8]] = v42[v21[8]];
        v44 = v21[9];
        v45 = &v41[v44];
        v46 = &v42[v44];
        swift_retain();
        if (v88(v46, 1, v27))
        {
          v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v45 = *(_QWORD *)v46;
          *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
          v48 = *(int *)(v27 + 20);
          v90 = &v46[v48];
          v93 = &v45[v48];
          v49 = sub_23E136CFC();
          v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v93, v90, v49);
          *(_QWORD *)&v45[*(int *)(v27 + 24)] = *(_QWORD *)&v46[*(int *)(v27 + 24)];
          v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v86 + 56);
          swift_retain();
          v51(v45, 0, 1, v27);
        }
        goto LABEL_29;
      case 1:
        v18 = sub_23E134C80();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
        {
          v20 = _s4KnobV2IDOMa(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v8, v9, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
        }
        v29 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v8[v29[5]] = *(_QWORD *)&v9[v29[5]];
        *(_QWORD *)&v8[v29[6]] = *(_QWORD *)&v9[v29[6]];
        v8[v29[7]] = v9[v29[7]];
        v8[v29[8]] = v9[v29[8]];
        v30 = v29[9];
        v31 = &v8[v30];
        v32 = &v9[v30];
        v33 = _s4KnobV10IconConfigVMa(0);
        v34 = *(_QWORD *)(v33 - 8);
        v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        swift_retain();
        if (!v35(v32, 1, v33))
          goto LABEL_28;
        goto LABEL_17;
      case 0:
        v12 = sub_23E134C80();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
        {
          v14 = _s4KnobV2IDOMa(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
        }
        v52 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v8[v52[5]] = *(_QWORD *)&v9[v52[5]];
        *(_QWORD *)&v8[v52[6]] = *(_QWORD *)&v9[v52[6]];
        v8[v52[7]] = v9[v52[7]];
        v8[v52[8]] = v9[v52[8]];
        v53 = v52[9];
        v31 = &v8[v53];
        v32 = &v9[v53];
        v33 = _s4KnobV10IconConfigVMa(0);
        v34 = *(_QWORD *)(v33 - 8);
        v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
        swift_retain();
        if (!v54(v32, 1, v33))
        {
LABEL_28:
          *(_QWORD *)v31 = *(_QWORD *)v32;
          *((_QWORD *)v31 + 1) = *((_QWORD *)v32 + 1);
          v55 = *(int *)(v33 + 20);
          v94 = &v32[v55];
          v95 = &v31[v55];
          v56 = sub_23E136CFC();
          v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
          swift_bridgeObjectRetain();
          v91(v95, v94, v56);
          *(_QWORD *)&v31[*(int *)(v33 + 24)] = *(_QWORD *)&v32[*(int *)(v33 + 24)];
          v57 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
          swift_retain();
          v57(v31, 0, 1, v33);
          goto LABEL_29;
        }
LABEL_17:
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
    }
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
LABEL_30:
  v58 = a3[5];
  v59 = (_QWORD *)((char *)a1 + v58);
  v60 = (_QWORD *)((char *)a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  v59[2] = v60[2];
  v59[3] = v60[3];
  v59[4] = v60[4];
  v61 = a3[6];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  *(_QWORD *)((char *)a1 + v61) = *(_QWORD *)((char *)a2 + v61);
  swift_retain();
  swift_release();
  *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
  swift_retain();
  swift_release();
  v62[16] = v63[16];
  v64 = a3[7];
  v65 = (char *)a1 + v64;
  v66 = (char *)a2 + v64;
  *(_QWORD *)v65 = *(_QWORD *)v66;
  v65[8] = v66[8];
  v67 = *((_QWORD *)v66 + 2);
  v65[24] = v66[24];
  *((_QWORD *)v65 + 2) = v67;
  v68 = *((_QWORD *)v66 + 4);
  v65[40] = v66[40];
  *((_QWORD *)v65 + 4) = v68;
  v69 = *((_QWORD *)v66 + 6);
  v65[56] = v66[56];
  *((_QWORD *)v65 + 6) = v69;
  v70 = *((_QWORD *)v66 + 8);
  v65[72] = v66[72];
  *((_QWORD *)v65 + 8) = v70;
  v71 = a3[8];
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  v74 = *(_QWORD *)v73;
  LOBYTE(v62) = v73[8];
  sub_23DF89F20(*(_QWORD *)v73, (char)v62);
  v75 = *(_QWORD *)v72;
  v76 = v72[8];
  *(_QWORD *)v72 = v74;
  v72[8] = (char)v62;
  sub_23DF8A078(v75, v76);
  v77 = a3[9];
  v78 = (char *)a1 + v77;
  v79 = (char *)a2 + v77;
  v80 = *(_QWORD *)v79;
  v78[8] = v79[8];
  *(_QWORD *)v78 = v80;
  *((_QWORD *)v78 + 2) = *((_QWORD *)v79 + 2);
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *sub_23E107C08(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  _OWORD *v65;
  __int128 v66;
  __int128 v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      v80 = v15;
      v77 = v16;
      if (v79(v9, 2, v15))
      {
        v17 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
      }
      v28 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v28[5]] = *(_QWORD *)&v9[v28[5]];
      *(_QWORD *)&v8[v28[6]] = *(_QWORD *)&v9[v28[6]];
      v8[v28[7]] = v9[v28[7]];
      v8[v28[8]] = v9[v28[8]];
      v29 = v28[9];
      v30 = &v8[v29];
      v31 = &v9[v29];
      v32 = _s4KnobV10IconConfigVMa(0);
      v33 = *(_QWORD *)(v32 - 8);
      v78 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
      v76 = v33;
      if (v78(v31, 1, v32))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v30 = *(_OWORD *)v31;
        v41 = *(int *)(v32 + 20);
        v74 = &v31[v41];
        v75 = &v30[v41];
        v42 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 32))(v75, v74, v42);
        *(_QWORD *)&v30[*(int *)(v32 + 24)] = *(_QWORD *)&v31[*(int *)(v32 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      }
      v43 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v44 = &v8[v43];
      v45 = &v9[v43];
      if (v79(v45, 2, v80))
      {
        v46 = _s4KnobV2IDOMa(0);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v44, v45, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v44, 0, 2, v80);
      }
      *(_QWORD *)&v44[v28[5]] = *(_QWORD *)&v45[v28[5]];
      *(_QWORD *)&v44[v28[6]] = *(_QWORD *)&v45[v28[6]];
      v44[v28[7]] = v45[v28[7]];
      v44[v28[8]] = v45[v28[8]];
      v47 = v28[9];
      v48 = &v44[v47];
      v49 = &v45[v47];
      if (v78(v49, 1, v32))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v48 = *(_OWORD *)v49;
        v51 = *(int *)(v32 + 20);
        v52 = &v48[v51];
        v53 = &v49[v51];
        v54 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
        *(_QWORD *)&v48[*(int *)(v32 + 24)] = *(_QWORD *)&v49[*(int *)(v32 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v76 + 56))(v48, 0, 1, v32);
      }
      goto LABEL_29;
    case 1:
      v18 = sub_23E134C80();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
      {
        v20 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v8, v9, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
      }
      v35 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v35[5]] = *(_QWORD *)&v9[v35[5]];
      *(_QWORD *)&v8[v35[6]] = *(_QWORD *)&v9[v35[6]];
      v8[v35[7]] = v9[v35[7]];
      v8[v35[8]] = v9[v35[8]];
      v36 = v35[9];
      v23 = &v8[v36];
      v24 = &v9[v36];
      v25 = _s4KnobV10IconConfigVMa(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
        goto LABEL_13;
      goto LABEL_20;
    case 0:
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
      {
        v14 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
      }
      v21 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
      *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
      v8[v21[7]] = v9[v21[7]];
      v8[v21[8]] = v9[v21[8]];
      v22 = v21[9];
      v23 = &v8[v22];
      v24 = &v9[v22];
      v25 = _s4KnobV10IconConfigVMa(0);
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
LABEL_13:
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      }
LABEL_20:
      *(_OWORD *)v23 = *(_OWORD *)v24;
      v37 = *(int *)(v25 + 20);
      v38 = &v23[v37];
      v39 = &v24[v37];
      v40 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(v38, v39, v40);
      *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_29;
  }
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_30:
  v55 = a3[5];
  v56 = a3[6];
  v57 = (char *)a1 + v55;
  v58 = (char *)a2 + v55;
  v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
  v60 = (char *)a1 + v56;
  v61 = (char *)a2 + v56;
  v60[16] = v61[16];
  *(_OWORD *)v60 = *(_OWORD *)v61;
  v62 = a3[7];
  v63 = a3[8];
  v64 = (_OWORD *)((char *)a1 + v62);
  v65 = (_OWORD *)((char *)a2 + v62);
  v66 = v65[3];
  v64[2] = v65[2];
  v64[3] = v66;
  *(_OWORD *)((char *)v64 + 57) = *(_OWORD *)((char *)v65 + 57);
  v67 = v65[1];
  *v64 = *v65;
  v64[1] = v67;
  v68 = (char *)a1 + v63;
  v69 = (char *)a2 + v63;
  v68[8] = v69[8];
  *(_QWORD *)v68 = *(_QWORD *)v69;
  v70 = a3[9];
  v71 = (char *)a1 + v70;
  v72 = (char *)a2 + v70;
  *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
  *(_OWORD *)v71 = *(_OWORD *)v72;
  return a1;
}

_QWORD *sub_23E108308(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char *v72;
  char *v73;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned int (*v79)(char *, uint64_t, uint64_t);
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  if (a1 != a2)
  {
    v7 = *(int *)(v6 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_23DF73E54((uint64_t)a1 + v7, _s9KnobStateOMa);
    v10 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v15 = sub_23E134C80();
        v16 = *(_QWORD *)(v15 - 8);
        v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
        v81 = v15;
        v78 = v16;
        if (v80(v9, 2, v15))
        {
          v17 = _s4KnobV2IDOMa(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v8, v9, v15);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
        }
        v21 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
        *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
        v8[v21[7]] = v9[v21[7]];
        v8[v21[8]] = v9[v21[8]];
        v22 = v21[9];
        v23 = &v8[v22];
        v24 = &v9[v22];
        v25 = _s4KnobV10IconConfigVMa(0);
        v26 = *(_QWORD *)(v25 - 8);
        v79 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        v77 = v26;
        if (v79(v24, 1, v25))
        {
          v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v23 = *(_OWORD *)v24;
          v34 = *(int *)(v25 + 20);
          v75 = &v24[v34];
          v76 = &v23[v34];
          v35 = sub_23E136CFC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v76, v75, v35);
          *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        }
        v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v37 = &v8[v36];
        v38 = &v9[v36];
        if (v80(v38, 2, v81))
        {
          v39 = _s4KnobV2IDOMa(0);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v37, v38, v81);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v37, 0, 2, v81);
        }
        *(_QWORD *)&v37[v21[5]] = *(_QWORD *)&v38[v21[5]];
        *(_QWORD *)&v37[v21[6]] = *(_QWORD *)&v38[v21[6]];
        v37[v21[7]] = v38[v21[7]];
        v37[v21[8]] = v38[v21[8]];
        v40 = v21[9];
        v41 = &v37[v40];
        v42 = &v38[v40];
        if (v79(v42, 1, v25))
        {
          v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v41 = *(_OWORD *)v42;
          v44 = *(int *)(v25 + 20);
          v45 = &v41[v44];
          v46 = &v42[v44];
          v47 = sub_23E136CFC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
          *(_QWORD *)&v41[*(int *)(v25 + 24)] = *(_QWORD *)&v42[*(int *)(v25 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v41, 0, 1, v25);
        }
        goto LABEL_30;
      case 1:
        v18 = sub_23E134C80();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
        {
          v20 = _s4KnobV2IDOMa(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v8, v9, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
        }
        v28 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v8[v28[5]] = *(_QWORD *)&v9[v28[5]];
        *(_QWORD *)&v8[v28[6]] = *(_QWORD *)&v9[v28[6]];
        v8[v28[7]] = v9[v28[7]];
        v8[v28[8]] = v9[v28[8]];
        v29 = v28[9];
        v30 = &v8[v29];
        v31 = &v9[v29];
        v32 = _s4KnobV10IconConfigVMa(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
          goto LABEL_28;
        goto LABEL_29;
      case 0:
        v12 = sub_23E134C80();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
        {
          v14 = _s4KnobV2IDOMa(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v8, v9, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
        }
        v48 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v8[v48[5]] = *(_QWORD *)&v9[v48[5]];
        *(_QWORD *)&v8[v48[6]] = *(_QWORD *)&v9[v48[6]];
        v8[v48[7]] = v9[v48[7]];
        v8[v48[8]] = v9[v48[8]];
        v49 = v48[9];
        v30 = &v8[v49];
        v31 = &v9[v49];
        v32 = _s4KnobV10IconConfigVMa(0);
        v33 = *(_QWORD *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
        {
LABEL_28:
          v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
LABEL_30:
          swift_storeEnumTagMultiPayload();
          goto LABEL_31;
        }
LABEL_29:
        *(_OWORD *)v30 = *(_OWORD *)v31;
        v51 = *(int *)(v32 + 20);
        v52 = &v30[v51];
        v53 = &v31[v51];
        v54 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 32))(v52, v53, v54);
        *(_QWORD *)&v30[*(int *)(v32 + 24)] = *(_QWORD *)&v31[*(int *)(v32 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
        goto LABEL_30;
    }
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
LABEL_31:
  v55 = a3[5];
  v56 = a3[6];
  v57 = (char *)a1 + v55;
  v58 = (char *)a2 + v55;
  v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
  v60 = (char *)a1 + v56;
  v61 = (char *)a2 + v56;
  *(_QWORD *)((char *)a1 + v56) = *(_QWORD *)((char *)a2 + v56);
  swift_release();
  *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
  swift_release();
  v60[16] = v61[16];
  v62 = a3[7];
  v63 = a3[8];
  v64 = (char *)a1 + v62;
  v65 = (char *)a2 + v62;
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v64[8] = v65[8];
  v64[24] = v65[24];
  *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
  v64[40] = v65[40];
  *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
  v64[56] = v65[56];
  *((_QWORD *)v64 + 6) = *((_QWORD *)v65 + 6);
  *((_QWORD *)v64 + 8) = *((_QWORD *)v65 + 8);
  v64[72] = v65[72];
  v66 = (char *)a1 + v63;
  v67 = (char *)a2 + v63;
  v68 = *(_QWORD *)v67;
  LOBYTE(v67) = v67[8];
  v69 = *(_QWORD *)v66;
  v70 = v66[8];
  *(_QWORD *)v66 = v68;
  v66[8] = (char)v67;
  sub_23DF8A078(v69, v70);
  v71 = a3[9];
  v72 = (char *)a1 + v71;
  v73 = (char *)a2 + v71;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = v73[8];
  *((_QWORD *)v72 + 2) = *((_QWORD *)v73 + 2);
  swift_release();
  return a1;
}

uint64_t sub_23E108AA4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_indexTm_4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E108B38()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_indexTm_4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  return result;
}

void sub_23E108BC8()
{
  unint64_t v0;

  sub_23E1026CC();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_23E108C60(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unsigned int (*v24)(_QWORD *, uint64_t, uint64_t);
  uint64_t v25;
  int *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(_QWORD *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, char *, uint64_t);
  void (*v56)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  __int128 v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  char v79;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(char *, uint64_t, uint64_t);
  unsigned int (*v87)(uint64_t *, uint64_t, uint64_t);
  char *v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  uint64_t v94;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v94 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      v87 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48);
      v90 = v12;
      v84 = v13;
      if (v87(a2, 2, v12))
      {
        v14 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v13 + 56))(a1, 0, 2, v12);
      }
      v26 = (int *)_s4KnobVMa(0);
      *(uint64_t *)((char *)a1 + v26[5]) = *(uint64_t *)((char *)a2 + v26[5]);
      *(uint64_t *)((char *)a1 + v26[6]) = *(uint64_t *)((char *)a2 + v26[6]);
      *((_BYTE *)a1 + v26[7]) = *((_BYTE *)a2 + v26[7]);
      *((_BYTE *)a1 + v26[8]) = *((_BYTE *)a2 + v26[8]);
      v27 = v26[9];
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)((char *)a2 + v27);
      v30 = _s4KnobV10IconConfigVMa(0);
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      swift_retain();
      v86 = v32;
      v85 = v31;
      if (v32((char *)v29, 1, v30))
      {
        v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
      }
      else
      {
        v44 = v29[1];
        *v28 = *v29;
        v28[1] = v44;
        v45 = *(int *)(v30 + 20);
        v82 = (char *)v29 + v45;
        v83 = (char *)v28 + v45;
        v46 = sub_23E136CFC();
        v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v81(v83, v82, v46);
        *(_QWORD *)((char *)v28 + *(int *)(v30 + 24)) = *(_QWORD *)((char *)v29 + *(int *)(v30 + 24));
        v47 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56);
        swift_retain();
        v47(v28, 0, 1, v30);
      }
      v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      if (v87((uint64_t *)((char *)a2 + v48), 2, v90))
      {
        v51 = _s4KnobV2IDOMa(0);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v49, v50, v90);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v84 + 56))(v49, 0, 2, v90);
      }
      *(_QWORD *)&v49[v26[5]] = *(_QWORD *)&v50[v26[5]];
      *(_QWORD *)&v49[v26[6]] = *(_QWORD *)&v50[v26[6]];
      v49[v26[7]] = v50[v26[7]];
      v49[v26[8]] = v50[v26[8]];
      v57 = v26[9];
      v58 = &v49[v57];
      v59 = &v50[v57];
      swift_retain();
      if (v86(v59, 1, v30))
      {
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
      }
      else
      {
        v61 = *((_QWORD *)v59 + 1);
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *((_QWORD *)v58 + 1) = v61;
        v62 = *(int *)(v30 + 20);
        v63 = &v58[v62];
        v93 = &v59[v62];
        v64 = sub_23E136CFC();
        v65 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16);
        swift_bridgeObjectRetain();
        v65(v63, v93, v64);
        *(_QWORD *)&v58[*(int *)(v30 + 24)] = *(_QWORD *)&v59[*(int *)(v30 + 24)];
        v66 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56);
        swift_retain();
        v66(v58, 0, 1, v30);
      }
      goto LABEL_31;
    }
    if (EnumCaseMultiPayload == 1)
    {
      v15 = sub_23E134C80();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(a2, 2, v15))
      {
        v17 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v16 + 16))(a1, a2, v15);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 2, v15);
      }
      v34 = (int *)_s4KnobVMa(0);
      *(uint64_t *)((char *)a1 + v34[5]) = *(uint64_t *)((char *)a2 + v34[5]);
      *(uint64_t *)((char *)a1 + v34[6]) = *(uint64_t *)((char *)a2 + v34[6]);
      *((_BYTE *)a1 + v34[7]) = *((_BYTE *)a2 + v34[7]);
      *((_BYTE *)a1 + v34[8]) = *((_BYTE *)a2 + v34[8]);
      v35 = v34[9];
      v20 = (uint64_t *)((char *)a1 + v35);
      v21 = (uint64_t *)((char *)a2 + v35);
      v36 = _s4KnobV10IconConfigVMa(0);
      v37 = *(_QWORD *)(v36 - 8);
      v38 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v37 + 48);
      swift_retain();
      if (!v38(v21, 1, v36))
      {
        v52 = v21[1];
        *v20 = *v21;
        v20[1] = v52;
        v53 = *(int *)(v36 + 20);
        v89 = (char *)v21 + v53;
        v92 = (char *)v20 + v53;
        v54 = sub_23E136CFC();
        v55 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v54 - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v92, v89, v54);
        *(_QWORD *)((char *)v20 + *(int *)(v36 + 24)) = *(_QWORD *)((char *)v21 + *(int *)(v36 + 24));
        v56 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56);
        swift_retain();
        v56(v20, 0, 1, v36);
        goto LABEL_31;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
LABEL_32:
        v67 = a3[5];
        v68 = a3[6];
        v69 = (char *)a1 + v67;
        v70 = (char *)a2 + v67;
        v71 = *((_OWORD *)v70 + 1);
        *(_OWORD *)v69 = *(_OWORD *)v70;
        *((_OWORD *)v69 + 1) = v71;
        *((_QWORD *)v69 + 4) = *((_QWORD *)v70 + 4);
        v72 = (uint64_t *)((char *)a1 + v68);
        v73 = (uint64_t *)((char *)a2 + v68);
        *v72 = *v73;
        v72[1] = v73[1];
        v74 = v73[3];
        v72[2] = v73[2];
        v72[3] = v74;
        v72[4] = v73[4];
        v75 = a3[8];
        *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
        v76 = (char *)a1 + v75;
        v77 = (char *)a2 + v75;
        v78 = *(uint64_t *)((char *)a2 + v75);
        v79 = v77[8];
        swift_bridgeObjectRetain();
        sub_23DF89F20(v78, v79);
        *(_QWORD *)v76 = v78;
        v76[8] = v79;
        return a1;
      }
      v8 = sub_23E134C80();
      v9 = *(_QWORD *)(v8 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v8))
      {
        v10 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
      }
      v18 = (int *)_s4KnobVMa(0);
      *(uint64_t *)((char *)a1 + v18[5]) = *(uint64_t *)((char *)a2 + v18[5]);
      *(uint64_t *)((char *)a1 + v18[6]) = *(uint64_t *)((char *)a2 + v18[6]);
      *((_BYTE *)a1 + v18[7]) = *((_BYTE *)a2 + v18[7]);
      *((_BYTE *)a1 + v18[8]) = *((_BYTE *)a2 + v18[8]);
      v19 = v18[9];
      v20 = (uint64_t *)((char *)a1 + v19);
      v21 = (uint64_t *)((char *)a2 + v19);
      v22 = _s4KnobV10IconConfigVMa(0);
      v23 = *(_QWORD *)(v22 - 8);
      v24 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v23 + 48);
      swift_retain();
      if (!v24(v21, 1, v22))
      {
        v39 = v21[1];
        *v20 = *v21;
        v20[1] = v39;
        v40 = *(int *)(v22 + 20);
        v88 = (char *)v21 + v40;
        v91 = (char *)v20 + v40;
        v41 = sub_23E136CFC();
        v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v91, v88, v41);
        *(_QWORD *)((char *)v20 + *(int *)(v22 + 24)) = *(_QWORD *)((char *)v21 + *(int *)(v22 + 24));
        v43 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56);
        swift_retain();
        v43(v20, 0, 1, v22);
        goto LABEL_31;
      }
    }
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_31:
    swift_storeEnumTagMultiPayload();
    goto LABEL_32;
  }
  v11 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_23E1093B4(uint64_t a1, uint64_t a2)
{
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = sub_23E134C80();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(a1, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
    v16 = _s4KnobVMa(0);
    swift_release();
    v17 = a1 + *(int *)(v16 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
    if (!v18(v17, 1, v9))
    {
      swift_bridgeObjectRelease();
      v19 = v17 + *(int *)(v9 + 20);
      v20 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v19, v20);
      swift_release();
    }
    v21 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v15(v21, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v13);
    swift_release();
    v8 = v21 + *(int *)(v16 + 36);
    if (!v18(v8, 1, v9))
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v5 = sub_23E134C80();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 2, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v7 = _s4KnobVMa(0);
    swift_release();
    v8 = a1 + *(int *)(v7 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 20);
      v11 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  return sub_23DF8A078(*(_QWORD *)(a1 + *(int *)(a2 + 32)), *(_BYTE *)(a1 + *(int *)(a2 + 32) + 8));
}

char *sub_23E109610(char *a1, char *a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  void (*v41)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  void (*v54)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, char *, uint64_t);
  void (*v64)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  __int128 v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char v77;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  unsigned int (*v85)(char *, uint64_t, uint64_t);
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;

  v92 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = sub_23E134C80();
      v11 = *(_QWORD *)(v10 - 8);
      v85 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      v88 = v10;
      v82 = v11;
      if (v85(a2, 2, v10))
      {
        v12 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
      }
      v24 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v24[5]] = *(_QWORD *)&a2[v24[5]];
      *(_QWORD *)&a1[v24[6]] = *(_QWORD *)&a2[v24[6]];
      a1[v24[7]] = a2[v24[7]];
      a1[v24[8]] = a2[v24[8]];
      v25 = v24[9];
      v26 = &a1[v25];
      v27 = &a2[v25];
      v28 = _s4KnobV10IconConfigVMa(0);
      v29 = *(_QWORD *)(v28 - 8);
      v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
      swift_retain();
      v84 = v30;
      v83 = v29;
      if (v30(v27, 1, v28))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        v42 = *((_QWORD *)v27 + 1);
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = v42;
        v43 = *(int *)(v28 + 20);
        v80 = &v27[v43];
        v81 = &v26[v43];
        v44 = sub_23E136CFC();
        v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v79(v81, v80, v44);
        *(_QWORD *)&v26[*(int *)(v28 + 24)] = *(_QWORD *)&v27[*(int *)(v28 + 24)];
        v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
        swift_retain();
        v45(v26, 0, 1, v28);
      }
      v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v47 = &a1[v46];
      v48 = &a2[v46];
      if (v85(&a2[v46], 2, v88))
      {
        v49 = _s4KnobV2IDOMa(0);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v47, v48, v88);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v47, 0, 2, v88);
      }
      *(_QWORD *)&v47[v24[5]] = *(_QWORD *)&v48[v24[5]];
      *(_QWORD *)&v47[v24[6]] = *(_QWORD *)&v48[v24[6]];
      v47[v24[7]] = v48[v24[7]];
      v47[v24[8]] = v48[v24[8]];
      v55 = v24[9];
      v56 = &v47[v55];
      v57 = &v48[v55];
      swift_retain();
      if (v84(v57, 1, v28))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        v59 = *((_QWORD *)v57 + 1);
        *(_QWORD *)v56 = *(_QWORD *)v57;
        *((_QWORD *)v56 + 1) = v59;
        v60 = *(int *)(v28 + 20);
        v61 = &v56[v60];
        v91 = &v57[v60];
        v62 = sub_23E136CFC();
        v63 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16);
        swift_bridgeObjectRetain();
        v63(v61, v91, v62);
        *(_QWORD *)&v56[*(int *)(v28 + 24)] = *(_QWORD *)&v57[*(int *)(v28 + 24)];
        v64 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56);
        swift_retain();
        v64(v56, 0, 1, v28);
      }
      goto LABEL_29;
    case 1:
      v13 = sub_23E134C80();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
      {
        v15 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(a1, a2, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
      }
      v32 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v32[5]] = *(_QWORD *)&a2[v32[5]];
      *(_QWORD *)&a1[v32[6]] = *(_QWORD *)&a2[v32[6]];
      a1[v32[7]] = a2[v32[7]];
      a1[v32[8]] = a2[v32[8]];
      v33 = v32[9];
      v18 = &a1[v33];
      v19 = &a2[v33];
      v34 = _s4KnobV10IconConfigVMa(0);
      v35 = *(_QWORD *)(v34 - 8);
      v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48);
      swift_retain();
      if (!v36(v19, 1, v34))
      {
        v50 = *((_QWORD *)v19 + 1);
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *((_QWORD *)v18 + 1) = v50;
        v51 = *(int *)(v34 + 20);
        v87 = &v19[v51];
        v90 = &v18[v51];
        v52 = sub_23E136CFC();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        v53(v90, v87, v52);
        *(_QWORD *)&v18[*(int *)(v34 + 24)] = *(_QWORD *)&v19[*(int *)(v34 + 24)];
        v54 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
        swift_retain();
        v54(v18, 0, 1, v34);
        goto LABEL_29;
      }
      goto LABEL_13;
    case 0:
      v7 = sub_23E134C80();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
      {
        v9 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
      }
      v16 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
      *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
      a1[v16[7]] = a2[v16[7]];
      a1[v16[8]] = a2[v16[8]];
      v17 = v16[9];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      swift_retain();
      if (!v22(v19, 1, v20))
      {
        v37 = *((_QWORD *)v19 + 1);
        *(_QWORD *)v18 = *(_QWORD *)v19;
        *((_QWORD *)v18 + 1) = v37;
        v38 = *(int *)(v20 + 20);
        v86 = &v19[v38];
        v89 = &v18[v38];
        v39 = sub_23E136CFC();
        v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
        swift_bridgeObjectRetain();
        v40(v89, v86, v39);
        *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
        v41 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
        swift_retain();
        v41(v18, 0, 1, v20);
        goto LABEL_29;
      }
LABEL_13:
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
LABEL_29:
      swift_storeEnumTagMultiPayload();
      goto LABEL_30;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
LABEL_30:
  v65 = a3[5];
  v66 = a3[6];
  v67 = &a1[v65];
  v68 = &a2[v65];
  v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *((_QWORD *)v67 + 4) = *((_QWORD *)v68 + 4);
  v70 = &a1[v66];
  v71 = &a2[v66];
  *(_QWORD *)v70 = *(_QWORD *)v71;
  *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
  v72 = *((_QWORD *)v71 + 3);
  *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
  *((_QWORD *)v70 + 3) = v72;
  *((_QWORD *)v70 + 4) = *((_QWORD *)v71 + 4);
  v73 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v74 = &a1[v73];
  v75 = &a2[v73];
  v76 = *(_QWORD *)&a2[v73];
  v77 = v75[8];
  swift_bridgeObjectRetain();
  sub_23DF89F20(v76, v77);
  *(_QWORD *)v74 = v76;
  v74[8] = v77;
  return a1;
}

char *sub_23E109D38(char *a1, char *a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, char *, uint64_t);
  void (*v51)(char *, _QWORD, uint64_t, uint64_t);
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  char v73;
  void (*v75)(char *, char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  unsigned int (*v80)(char *, uint64_t, uint64_t);
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, _s9KnobStateOMa);
    v88 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v10 = sub_23E134C80();
        v11 = *(_QWORD *)(v10 - 8);
        v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        v84 = v10;
        v78 = v11;
        if (v81(a2, 2, v10))
        {
          v12 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
        }
        v16 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
        *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
        a1[v16[7]] = a2[v16[7]];
        a1[v16[8]] = a2[v16[8]];
        v17 = v16[9];
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = _s4KnobV10IconConfigVMa(0);
        v21 = *(_QWORD *)(v20 - 8);
        v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        swift_retain();
        v80 = v22;
        v79 = v21;
        if (v22(v19, 1, v20))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v18 = *(_QWORD *)v19;
          *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
          v32 = *(int *)(v20 + 20);
          v76 = &v19[v32];
          v77 = &v18[v32];
          v33 = sub_23E136CFC();
          v75 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
          swift_bridgeObjectRetain();
          v75(v77, v76, v33);
          *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
          v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56);
          swift_retain();
          v34(v18, 0, 1, v20);
        }
        v35 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v36 = &a1[v35];
        v37 = &a2[v35];
        if (v81(&a2[v35], 2, v84))
        {
          v38 = _s4KnobV2IDOMa(0);
          memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v36, v37, v84);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v36, 0, 2, v84);
        }
        *(_QWORD *)&v36[v16[5]] = *(_QWORD *)&v37[v16[5]];
        *(_QWORD *)&v36[v16[6]] = *(_QWORD *)&v37[v16[6]];
        v36[v16[7]] = v37[v16[7]];
        v36[v16[8]] = v37[v16[8]];
        v43 = v16[9];
        v44 = &v36[v43];
        v45 = &v37[v43];
        swift_retain();
        if (v80(v45, 1, v20))
        {
          v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v44 = *(_QWORD *)v45;
          *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
          v47 = *(int *)(v20 + 20);
          v48 = &v44[v47];
          v86 = &v45[v47];
          v49 = sub_23E136CFC();
          v50 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v48, v86, v49);
          *(_QWORD *)&v44[*(int *)(v20 + 24)] = *(_QWORD *)&v45[*(int *)(v20 + 24)];
          v51 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56);
          swift_retain();
          v51(v44, 0, 1, v20);
        }
        goto LABEL_29;
      case 1:
        v13 = sub_23E134C80();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
        {
          v15 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(a1, a2, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
        }
        v24 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v24[5]] = *(_QWORD *)&a2[v24[5]];
        *(_QWORD *)&a1[v24[6]] = *(_QWORD *)&a2[v24[6]];
        a1[v24[7]] = a2[v24[7]];
        a1[v24[8]] = a2[v24[8]];
        v25 = v24[9];
        v26 = &a1[v25];
        v27 = &a2[v25];
        v28 = _s4KnobV10IconConfigVMa(0);
        v29 = *(_QWORD *)(v28 - 8);
        v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
        swift_retain();
        if (!v30(v27, 1, v28))
        {
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
          v39 = *(int *)(v28 + 20);
          v82 = &v27[v39];
          v85 = &v26[v39];
          v40 = sub_23E136CFC();
          v41 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
          swift_bridgeObjectRetain();
          v41(v85, v82, v40);
          *(_QWORD *)&v26[*(int *)(v28 + 24)] = *(_QWORD *)&v27[*(int *)(v28 + 24)];
          v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
          swift_retain();
          v42(v26, 0, 1, v28);
          goto LABEL_29;
        }
LABEL_17:
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      case 0:
        v7 = sub_23E134C80();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
        {
          v9 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
        }
        v52 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v52[5]] = *(_QWORD *)&a2[v52[5]];
        *(_QWORD *)&a1[v52[6]] = *(_QWORD *)&a2[v52[6]];
        a1[v52[7]] = a2[v52[7]];
        a1[v52[8]] = a2[v52[8]];
        v53 = v52[9];
        v26 = &a1[v53];
        v27 = &a2[v53];
        v54 = _s4KnobV10IconConfigVMa(0);
        v55 = *(_QWORD *)(v54 - 8);
        v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        swift_retain();
        if (!v56(v27, 1, v54))
        {
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
          v57 = *(int *)(v54 + 20);
          v83 = &v27[v57];
          v87 = &v26[v57];
          v58 = sub_23E136CFC();
          v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v59(v87, v83, v58);
          *(_QWORD *)&v26[*(int *)(v54 + 24)] = *(_QWORD *)&v27[*(int *)(v54 + 24)];
          v60 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56);
          swift_retain();
          v60(v26, 0, 1, v54);
          goto LABEL_29;
        }
        goto LABEL_17;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
LABEL_30:
  v61 = a3[5];
  v62 = &a1[v61];
  v63 = &a2[v61];
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
  *((_QWORD *)v62 + 2) = *((_QWORD *)v63 + 2);
  *((_QWORD *)v62 + 3) = *((_QWORD *)v63 + 3);
  *((_QWORD *)v62 + 4) = *((_QWORD *)v63 + 4);
  v64 = a3[6];
  v65 = &a1[v64];
  v66 = &a2[v64];
  *(_QWORD *)v65 = *(_QWORD *)&a2[v64];
  *((_DWORD *)v65 + 2) = *(_DWORD *)&a2[v64 + 8];
  *((_DWORD *)v65 + 3) = *(_DWORD *)&a2[v64 + 12];
  *((_QWORD *)v65 + 2) = *(_QWORD *)&a2[v64 + 16];
  *((_QWORD *)v65 + 3) = *(_QWORD *)&a2[v64 + 24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v65 + 4) = *((_QWORD *)v66 + 4);
  a1[a3[7]] = a2[a3[7]];
  v67 = a3[8];
  v68 = &a1[v67];
  v69 = &a2[v67];
  v70 = *(_QWORD *)v69;
  v71 = v69[8];
  sub_23DF89F20(*(_QWORD *)v69, v71);
  v72 = *(_QWORD *)v68;
  v73 = v68[8];
  *(_QWORD *)v68 = v70;
  v68[8] = v71;
  sub_23DF8A078(v72, v73);
  return a1;
}

char *sub_23E10A4E0(char *a1, char *a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v64;
  uint64_t v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  unsigned int (*v67)(char *, uint64_t, uint64_t);
  uint64_t v68;

  v68 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = sub_23E134C80();
      v11 = *(_QWORD *)(v10 - 8);
      v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      if (v67(a2, 2, v10))
      {
        v12 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
      }
      v23 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v23[5]] = *(_QWORD *)&a2[v23[5]];
      *(_QWORD *)&a1[v23[6]] = *(_QWORD *)&a2[v23[6]];
      a1[v23[7]] = a2[v23[7]];
      a1[v23[8]] = a2[v23[8]];
      v24 = v23[9];
      v25 = &a1[v24];
      v26 = &a2[v24];
      v27 = _s4KnobV10IconConfigVMa(0);
      v28 = *(_QWORD *)(v27 - 8);
      v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      if (v66(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v25 = *(_OWORD *)v26;
        v36 = *(int *)(v27 + 20);
        v64 = &v25[v36];
        v65 = v11;
        v37 = &v26[v36];
        v38 = sub_23E136CFC();
        v39 = v37;
        v11 = v65;
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v64, v39, v38);
        *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
      v41 = &a1[v40];
      v42 = &a2[v40];
      if (v67(&a2[v40], 2, v10))
      {
        v43 = _s4KnobV2IDOMa(0);
        memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v41, v42, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v41, 0, 2, v10);
      }
      *(_QWORD *)&v41[v23[5]] = *(_QWORD *)&v42[v23[5]];
      *(_QWORD *)&v41[v23[6]] = *(_QWORD *)&v42[v23[6]];
      v41[v23[7]] = v42[v23[7]];
      v41[v23[8]] = v42[v23[8]];
      v44 = v23[9];
      v45 = &v41[v44];
      v46 = &v42[v44];
      if (v66(&v42[v44], 1, v27))
      {
        v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v45 = *(_OWORD *)v46;
        v48 = *(int *)(v27 + 20);
        v49 = &v45[v48];
        v50 = &v46[v48];
        v51 = sub_23E136CFC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        *(_QWORD *)&v45[*(int *)(v27 + 24)] = *(_QWORD *)&v46[*(int *)(v27 + 24)];
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v45, 0, 1, v27);
      }
      goto LABEL_29;
    case 1:
      v13 = sub_23E134C80();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
      {
        v15 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
      }
      v30 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v30[5]] = *(_QWORD *)&a2[v30[5]];
      *(_QWORD *)&a1[v30[6]] = *(_QWORD *)&a2[v30[6]];
      a1[v30[7]] = a2[v30[7]];
      a1[v30[8]] = a2[v30[8]];
      v31 = v30[9];
      v18 = &a1[v31];
      v19 = &a2[v31];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        goto LABEL_13;
      goto LABEL_20;
    case 0:
      v7 = sub_23E134C80();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
      {
        v9 = _s4KnobV2IDOMa(0);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
      }
      v16 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
      *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
      a1[v16[7]] = a2[v16[7]];
      a1[v16[8]] = a2[v16[8]];
      v17 = v16[9];
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = _s4KnobV10IconConfigVMa(0);
      v21 = *(_QWORD *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
      {
LABEL_13:
        v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
      }
LABEL_20:
      *(_OWORD *)v18 = *(_OWORD *)v19;
      v32 = *(int *)(v20 + 20);
      v33 = &v18[v32];
      v34 = &v19[v32];
      v35 = sub_23E136CFC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_29;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
LABEL_30:
  v52 = a3[5];
  v53 = a3[6];
  v54 = &a1[v52];
  v55 = &a2[v52];
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  v57 = &a1[v53];
  v58 = &a2[v53];
  *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
  v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  v60 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v61 = &a1[v60];
  v62 = &a2[v60];
  *(_QWORD *)v61 = *(_QWORD *)v62;
  v61[8] = v62[8];
  return a1;
}

char *sub_23E10AB78(char *a1, char *a2, int *a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v66;
  uint64_t v67;
  unsigned int (*v68)(char *, uint64_t, uint64_t);
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;

  if (a1 != a2)
  {
    sub_23DF73E54((uint64_t)a1, _s9KnobStateOMa);
    v70 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v10 = sub_23E134C80();
        v11 = *(_QWORD *)(v10 - 8);
        v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        if (v69(a2, 2, v10))
        {
          v12 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(a1, 0, 2, v10);
        }
        v16 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v16[5]] = *(_QWORD *)&a2[v16[5]];
        *(_QWORD *)&a1[v16[6]] = *(_QWORD *)&a2[v16[6]];
        a1[v16[7]] = a2[v16[7]];
        a1[v16[8]] = a2[v16[8]];
        v17 = v16[9];
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = _s4KnobV10IconConfigVMa(0);
        v21 = *(_QWORD *)(v20 - 8);
        v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
        if (v68(v19, 1, v20))
        {
          v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v18 = *(_OWORD *)v19;
          v30 = *(int *)(v20 + 20);
          v66 = &v18[v30];
          v67 = v11;
          v31 = &v19[v30];
          v32 = sub_23E136CFC();
          v33 = v31;
          v11 = v67;
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v66, v33, v32);
          *(_QWORD *)&v18[*(int *)(v20 + 24)] = *(_QWORD *)&v19[*(int *)(v20 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
        v35 = &a1[v34];
        v36 = &a2[v34];
        if (v69(&a2[v34], 2, v10))
        {
          v37 = _s4KnobV2IDOMa(0);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v35, v36, v10);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v35, 0, 2, v10);
        }
        *(_QWORD *)&v35[v16[5]] = *(_QWORD *)&v36[v16[5]];
        *(_QWORD *)&v35[v16[6]] = *(_QWORD *)&v36[v16[6]];
        v35[v16[7]] = v36[v16[7]];
        v35[v16[8]] = v36[v16[8]];
        v38 = v16[9];
        v39 = &v35[v38];
        v40 = &v36[v38];
        if (v68(&v36[v38], 1, v20))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
          memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v39 = *(_OWORD *)v40;
          v42 = *(int *)(v20 + 20);
          v43 = &v39[v42];
          v44 = &v40[v42];
          v45 = sub_23E136CFC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v43, v44, v45);
          *(_QWORD *)&v39[*(int *)(v20 + 24)] = *(_QWORD *)&v40[*(int *)(v20 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v39, 0, 1, v20);
        }
        goto LABEL_29;
      case 1:
        v13 = sub_23E134C80();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 2, v13))
        {
          v15 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v13);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(a1, 0, 2, v13);
        }
        v23 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v23[5]] = *(_QWORD *)&a2[v23[5]];
        *(_QWORD *)&a1[v23[6]] = *(_QWORD *)&a2[v23[6]];
        a1[v23[7]] = a2[v23[7]];
        a1[v23[8]] = a2[v23[8]];
        v24 = v23[9];
        v25 = &a1[v24];
        v26 = &a2[v24];
        v27 = _s4KnobV10IconConfigVMa(0);
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
          goto LABEL_28;
        goto LABEL_17;
      case 0:
        v7 = sub_23E134C80();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
        {
          v9 = _s4KnobV2IDOMa(0);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
        }
        v46 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&a1[v46[5]] = *(_QWORD *)&a2[v46[5]];
        *(_QWORD *)&a1[v46[6]] = *(_QWORD *)&a2[v46[6]];
        a1[v46[7]] = a2[v46[7]];
        a1[v46[8]] = a2[v46[8]];
        v47 = v46[9];
        v25 = &a1[v47];
        v26 = &a2[v47];
        v27 = _s4KnobV10IconConfigVMa(0);
        v28 = *(_QWORD *)(v27 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
        {
LABEL_28:
          *(_OWORD *)v25 = *(_OWORD *)v26;
          v48 = *(int *)(v27 + 20);
          v49 = &v25[v48];
          v50 = &v26[v48];
          v51 = sub_23E136CFC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
          *(_QWORD *)&v25[*(int *)(v27 + 24)] = *(_QWORD *)&v26[*(int *)(v27 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
          goto LABEL_29;
        }
LABEL_17:
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_29:
        swift_storeEnumTagMultiPayload();
        goto LABEL_30;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
LABEL_30:
  v52 = a3[5];
  v53 = a3[6];
  v54 = &a1[v52];
  v55 = &a2[v52];
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  v57 = &a1[v53];
  v58 = &a2[v53];
  *(_QWORD *)&v56 = *(_QWORD *)&a2[v53 + 8];
  *(_QWORD *)v57 = *(_QWORD *)&a2[v53];
  *((_QWORD *)v57 + 1) = v56;
  *((_QWORD *)v57 + 2) = *(_QWORD *)&a2[v53 + 16];
  *((_QWORD *)v57 + 3) = *(_QWORD *)&a2[v53 + 24];
  swift_bridgeObjectRelease();
  *((_QWORD *)v57 + 4) = *((_QWORD *)v58 + 4);
  v59 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v60 = &a1[v59];
  v61 = &a2[v59];
  v62 = *(_QWORD *)v61;
  LOBYTE(v61) = v61[8];
  v63 = *(_QWORD *)v60;
  v64 = v60[8];
  *(_QWORD *)v60 = v62;
  v60[8] = (char)v61;
  sub_23DF8A078(v63, v64);
  return a1;
}

uint64_t sub_23E10B24C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E10B258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = _s9KnobStateOMa(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 24);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_23E10B2D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_23E10B2E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = _s9KnobStateOMa(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  return result;
}

uint64_t sub_23E10B360()
{
  uint64_t result;
  unint64_t v1;

  result = _s9KnobStateOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for RingControlView.Config(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 73))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 4;
  v5 = v3 - 4;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for RingControlView.Config(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 73) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for RingControlView.Config()
{
  return &type metadata for RingControlView.Config;
}

uint64_t sub_23E10B4C0()
{
  return sub_23E0B41AC(&qword_256D26FE8, &qword_256D26FF0, sub_23E105FC4);
}

unint64_t sub_23E10B4F0()
{
  unint64_t result;

  result = qword_256D26FF8;
  if (!qword_256D26FF8)
  {
    result = MEMORY[0x24264C55C](&unk_23E142E58, &type metadata for RingControlView.Config);
    atomic_store(result, (unint64_t *)&qword_256D26FF8);
  }
  return result;
}

uint64_t sub_23E10B534()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_23E10B544()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E10B554()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D27020;
  if (!qword_256D27020)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FE50);
    v2 = MEMORY[0x24BEE1788];
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE4AB8], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D27020);
  }
  return result;
}

double sub_23E10B5B0()
{
  double result;

  if (qword_256D1D470 != -1)
    swift_once();
  result = *(double *)&qword_256D34748 * 3.8;
  *(double *)&qword_256D34750 = *(double *)&qword_256D34748 * 3.8;
  return result;
}

unint64_t sub_23E10B608()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[6];

  result = qword_256D27080;
  if (!qword_256D27080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27050);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27088);
    v2[3] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D201B8);
    v2[4] = sub_23E10B6D8();
    v2[5] = sub_23DF89B88(&qword_256D201F0, &qword_256D201B8, MEMORY[0x24BDEC410]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = v2[0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D27080);
  }
  return result;
}

unint64_t sub_23E10B6D8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D27090;
  if (!qword_256D27090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27088);
    v2[0] = sub_23E10B744();
    v2[1] = sub_23E03A6F4();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D27090);
  }
  return result;
}

unint64_t sub_23E10B744()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D27098;
  if (!qword_256D27098)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D270A0);
    v2[0] = sub_23DF8E904(&qword_256D270A8, &qword_256D270B0, sub_23E10B7E8, MEMORY[0x24BDEBEE0]);
    v2[1] = sub_23DF89B88(&qword_256D1F548, &qword_256D1F550, MEMORY[0x24BDF0960]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D27098);
  }
  return result;
}

uint64_t sub_23E10B7E8()
{
  return sub_23DF8E904(&qword_256D270B8, &qword_256D270C0, sub_23E10B80C, MEMORY[0x24BDEC468]);
}

uint64_t sub_23E10B80C()
{
  return sub_23DF8E904(&qword_256D270C8, &qword_256D270D0, (uint64_t (*)(void))sub_23E10B830, MEMORY[0x24BDEC468]);
}

unint64_t sub_23E10B830()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D270D8;
  if (!qword_256D270D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D270E0);
    v2[0] = sub_23E10B8BC(&qword_256D270E8, &qword_256D270F0, &qword_256D270F8, &qword_256D27100);
    v2[1] = MEMORY[0x24BDEBEE0];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D270D8);
  }
  return result;
}

uint64_t sub_23E10B8BC(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_23DF89B88(&qword_256D21F90, &qword_256D21F98, MEMORY[0x24BDEB358]);
    v9[1] = sub_23DF89B88(a3, a4, MEMORY[0x24BDEDC10]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_23E10B95C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D27108;
  if (!qword_256D27108)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27038);
    v2[0] = sub_23DF89B88(&qword_256D27078, &qword_256D27030, MEMORY[0x24BDF5428]);
    v2[1] = MEMORY[0x24BDF5138];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D27108);
  }
  return result;
}

uint64_t sub_23E10B9E0(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  swift_retain();
  sub_23E052824(v2);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_23E10BA40(uint64_t a1)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  swift_release();
  sub_23DF8F8D4(v2);
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_23E10BAA0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D27160;
  if (!qword_256D27160)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27158);
    v2[0] = sub_23E10BB24();
    v2[1] = sub_23DF89B88(&qword_256D20610, &qword_256D20618, MEMORY[0x24BDF0710]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D27160);
  }
  return result;
}

unint64_t sub_23E10BB24()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D27168;
  if (!qword_256D27168)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27170);
    v2[0] = sub_23DF89B88(&qword_256D27178, &qword_256D27180, MEMORY[0x24BDEC4C0]);
    v2[1] = MEMORY[0x24BDECC60];
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D27168);
  }
  return result;
}

uint64_t sub_23E10BBA8(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_23E10BBDC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D27190;
  if (!qword_256D27190)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27140);
    v2[0] = sub_23DF89B88(&qword_256D27198, &qword_256D27138, MEMORY[0x24BDF4750]);
    v2[1] = sub_23DF89B88(&qword_256D271A0, &qword_256D271A8, MEMORY[0x24BDEF828]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDED308], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D27190);
  }
  return result;
}

uint64_t sub_23E10BC78()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(unint64_t, uint64_t, uint64_t);

  v1 = type metadata accessor for RingControlView.ColorTrackView(0);
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + v2;
  _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v13 = sub_23E134C80();
    v14 = *(_QWORD *)(v13 - 8);
    v22 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v22(v0 + v2, 2, v13))
      (*(void (**)(unint64_t, uint64_t))(v14 + 8))(v0 + v2, v13);
    v21 = v14;
    v15 = _s4KnobVMa(0);
    swift_release();
    v16 = v3 + *(int *)(v15 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48);
    if (!v17(v16, 1, v9))
    {
      swift_bridgeObjectRelease();
      v20 = v16 + *(int *)(v9 + 20);
      v18 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v20, v18);
      swift_release();
    }
    v19 = v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v22(v19, 2, v13))
      (*(void (**)(unint64_t, uint64_t))(v21 + 8))(v19, v13);
    swift_release();
    v8 = v19 + *(int *)(v15 + 36);
    if (!v17(v8, 1, v9))
      goto LABEL_6;
  }
  else if (EnumCaseMultiPayload <= 1)
  {
    v5 = sub_23E134C80();
    v6 = *(_QWORD *)(v5 - 8);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v2, 2, v5))
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v2, v5);
    v7 = _s4KnobVMa(0);
    swift_release();
    v8 = v3 + *(int *)(v7 + 36);
    v9 = _s4KnobV10IconConfigVMa(0);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v10 = v8 + *(int *)(v9 + 20);
      v11 = sub_23E136CFC();
      (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  sub_23DF8A078(*(_QWORD *)(v3 + *(int *)(v1 + 32)), *(_BYTE *)(v3 + *(int *)(v1 + 32) + 8));
  return swift_deallocObject();
}

uint64_t sub_23E10BF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RingControlView.ColorTrackView(0) - 8) + 80);
  return sub_23E104414(a1, v2 + ((v5 + 16) & ~v5), a2);
}

unint64_t sub_23E10BF78()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256D271D8;
  if (!qword_256D271D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D271C8);
    v2 = sub_23DF89B88(&qword_256D1F118, &qword_256D1F108, MEMORY[0x24BEE12D8]);
    result = MEMORY[0x24264C55C](MEMORY[0x24BEE3050], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D271D8);
  }
  return result;
}

BOOL sub_23E10BFF4(uint64_t a1, uint64_t a2)
{
  int v2;
  double v3;
  int v4;
  double v5;
  char v6;
  double v7;
  char v8;
  double v9;
  char v10;
  int v11;
  double v12;
  int v13;
  double v14;
  int v15;
  double v16;
  int v17;
  double v18;
  char v19;
  char v20;
  _BOOL8 result;
  char v22;
  char v23;
  char v24;

  v2 = *(unsigned __int8 *)(a1 + 8);
  v3 = *(double *)(a1 + 16);
  v4 = *(unsigned __int8 *)(a1 + 24);
  v5 = *(double *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  v7 = *(double *)(a1 + 48);
  v8 = *(_BYTE *)(a1 + 56);
  v9 = *(double *)(a1 + 64);
  v10 = *(_BYTE *)(a1 + 72);
  v11 = *(unsigned __int8 *)(a2 + 8);
  v12 = *(double *)(a2 + 16);
  v13 = *(unsigned __int8 *)(a2 + 24);
  v14 = *(double *)(a2 + 32);
  v15 = *(unsigned __int8 *)(a2 + 40);
  v16 = *(double *)(a2 + 48);
  v17 = *(unsigned __int8 *)(a2 + 56);
  v18 = *(double *)(a2 + 64);
  v19 = *(_BYTE *)(a2 + 72);
  v20 = sub_23E136BA0();
  result = 0;
  if ((v20 & 1) != 0 && v2 == v11)
  {
    if (v4 == 4)
    {
      if (v13 != 4)
        return 0;
      goto LABEL_9;
    }
    if (v13 == 4)
      return 0;
    result = 0;
    if (v3 == v12 && v4 == v13)
    {
LABEL_9:
      if ((v6 & 1) != 0)
      {
        if (!v15)
          return 0;
      }
      else
      {
        if (v5 == v14)
          v22 = v15;
        else
          v22 = 1;
        if ((v22 & 1) != 0)
          return 0;
      }
      if ((v8 & 1) != 0)
      {
        if (!v17)
          return 0;
      }
      else
      {
        if (v7 == v16)
          v23 = v17;
        else
          v23 = 1;
        if ((v23 & 1) != 0)
          return 0;
      }
      if ((v10 & 1) == 0)
      {
        if (v9 == v18)
          v24 = v19;
        else
          v24 = 1;
        return (v24 & 1) == 0;
      }
      return (v19 & 1) != 0;
    }
  }
  return result;
}

uint64_t sub_23E10C134()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27000);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D1FE50);
  sub_23DF89B88(&qword_256D27018, &qword_256D27000, MEMORY[0x24BDF4750]);
  sub_23E10B554();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_23E10C1C0()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;

  result = qword_256D271F0;
  if (!qword_256D271F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D271F8);
    v2 = sub_23E10C224();
    result = MEMORY[0x24264C55C](MEMORY[0x24BDF5578], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256D271F0);
  }
  return result;
}

unint64_t sub_23E10C224()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_256D27200;
  if (!qword_256D27200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256D27150);
    v2[0] = sub_23E0B41AC(&qword_256D27188, &qword_256D27148, (uint64_t (*)(void))sub_23E10BBDC);
    v2[1] = sub_23E0B41AC(&qword_256D271B0, &qword_256D27128, (uint64_t (*)(void))sub_23E10BAA0);
    result = MEMORY[0x24264C55C](MEMORY[0x24BDEF3E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_256D27200);
  }
  return result;
}

double sub_23E10C2C0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  id v14;
  id v15;
  double v16;
  double v17;
  id v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  void *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  int v30;
  void *v31;
  uint64_t *v32;
  uint64_t v34;
  int v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  id v42;
  int v43;
  uint64_t v44;
  int v45;
  void *v46;
  uint64_t v47;
  int v48;
  void *v49;
  int v50;
  void *v51;
  int v52;
  void *v53;
  int v54;
  id v55;
  int v56;
  uint64_t v57;
  id v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;

  v63 = sub_23E13684C();
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v62 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20500);
  v3 = *(_QWORD *)(v60 - 8);
  v4 = MEMORY[0x24BDAC7A8](v60);
  v59 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (uint64_t *)((char *)&v34 - v6);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    return 0.0;
  v9 = (void *)objc_opt_self();
  v10 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v57 = *(_QWORD *)(v3 + 72);
  v58 = v9;
  v11 = a1 + v10;
  v56 = *MEMORY[0x24BDF1848];
  v54 = *MEMORY[0x24BDF1880];
  v52 = *MEMORY[0x24BDF1890];
  v50 = *MEMORY[0x24BDF18A8];
  v48 = *MEMORY[0x24BDF18F0];
  v45 = *MEMORY[0x24BDF1860];
  v43 = *MEMORY[0x24BDF1878];
  v41 = *MEMORY[0x24BDF18B0];
  v39 = *MEMORY[0x24BDF18E8];
  v37 = *MEMORY[0x24BDF18C8];
  v35 = *MEMORY[0x24BDF18D8];
  v42 = (id)*MEMORY[0x24BDF77B0];
  v34 = *MEMORY[0x24BDF77C8];
  v36 = *MEMORY[0x24BDF77C0];
  v38 = *MEMORY[0x24BDF77D0];
  v40 = *MEMORY[0x24BDF77B8];
  v44 = *MEMORY[0x24BDF7810];
  v46 = (void *)*MEMORY[0x24BDF77E8];
  v49 = (void *)*MEMORY[0x24BDF7858];
  v51 = (void *)*MEMORY[0x24BDF7850];
  v53 = (void *)*MEMORY[0x24BDF7848];
  v55 = (id)*MEMORY[0x24BDF7800];
  v47 = a1;
  swift_bridgeObjectRetain();
  v12 = 0.0;
  v13 = v63;
  do
  {
    v64 = v8;
    sub_23E10C804(v11, (uint64_t)v7);
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6B68]), sel_init);
    v19 = v59;
    v20 = *(int *)(v60 + 48);
    v21 = &v59[v20];
    v22 = (char *)v7 + v20;
    v23 = v7[1];
    v24 = v7;
    *(_QWORD *)v59 = *v7;
    *((_QWORD *)v19 + 1) = v23;
    v25 = v61;
    v26 = *(void (**)(char *, char *, uint64_t))(v61 + 16);
    v26(&v19[v20], v22, v13);
    swift_bridgeObjectRetain();
    v27 = (void *)sub_23E137164();
    swift_bridgeObjectRelease();
    v28 = *(void (**)(char *, uint64_t))(v25 + 8);
    v28(v21, v13);
    objc_msgSend(v18, sel_setText_, v27);

    v29 = v62;
    v26(v62, v22, v13);
    v30 = (*(uint64_t (**)(char *, uint64_t))(v25 + 88))(v29, v13);
    if (v30 == v56)
    {
      v14 = v55;
      v7 = v24;
      goto LABEL_4;
    }
    v7 = v24;
    if (v30 == v54)
    {
      v31 = v53;
LABEL_27:
      v14 = v31;
      goto LABEL_4;
    }
    if (v30 == v52)
    {
      v31 = v51;
      goto LABEL_27;
    }
    if (v30 == v50)
    {
      v31 = v49;
      goto LABEL_27;
    }
    if (v30 == v48)
    {
      v31 = v46;
      goto LABEL_27;
    }
    if (v30 == v45)
    {
      v32 = &v70;
LABEL_26:
      v31 = (void *)*(v32 - 32);
      goto LABEL_27;
    }
    if (v30 == v43)
    {
      v32 = &v69;
      goto LABEL_26;
    }
    if (v30 == v41)
    {
      v32 = &v68;
      goto LABEL_26;
    }
    if (v30 == v39)
    {
      v32 = &v67;
      goto LABEL_26;
    }
    if (v30 == v37)
    {
      v32 = &v66;
      goto LABEL_26;
    }
    if (v30 == v35)
    {
      v32 = &v65;
      goto LABEL_26;
    }
    v14 = v42;
    v28(v62, v63);
LABEL_4:
    v15 = objc_msgSend(v58, sel_preferredFontForTextStyle_, v14);

    objc_msgSend(v18, sel_setFont_, v15);
    objc_msgSend(v18, sel_sizeThatFits_, 9.22337204e18, 9.22337204e18);
    v17 = v16;

    v12 = v12 + v17;
    sub_23E10C84C((uint64_t)v7);
    v11 += v57;
    v8 = v64 - 1;
  }
  while (v64 != 1);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_23E10C804(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20500);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_23E10C84C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20500);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_23E10C88C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  id *v7;
  void (*v9)(char *, uint64_t);
  id v10;
  uint64_t v11;

  v2 = sub_23E13684C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BDF1848])
  {
    v7 = (id *)MEMORY[0x24BDF7800];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF1880])
  {
    v7 = (id *)MEMORY[0x24BDF7848];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF1890])
  {
    v7 = (id *)MEMORY[0x24BDF7850];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF18A8])
  {
    v7 = (id *)MEMORY[0x24BDF7858];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF18F0])
  {
    v7 = (id *)MEMORY[0x24BDF77E8];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF1860])
  {
    v7 = (id *)MEMORY[0x24BDF7810];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF1878])
  {
    v7 = (id *)MEMORY[0x24BDF77B0];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF18B0])
  {
    v7 = (id *)MEMORY[0x24BDF77B8];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF18E8])
  {
    v7 = (id *)MEMORY[0x24BDF77D0];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF18C8])
  {
    v7 = (id *)MEMORY[0x24BDF77C0];
    return *v7;
  }
  if (v6 == *MEMORY[0x24BDF18D8])
  {
    v7 = (id *)MEMORY[0x24BDF77C8];
    return *v7;
  }
  v9 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10 = (id)*MEMORY[0x24BDF77B0];
  v9(v5, v2);
  return v10;
}

uint64_t sub_23E10CAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v3 = v2;
  v38 = a2;
  v5 = _s4KnobV2IDOMa(0);
  v33 = *(_QWORD *)(v5 - 8);
  v6 = *(_QWORD *)(v33 + 64);
  MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for RingControlView.KnobsView(0);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_23E136498();
  MEMORY[0x24BDAC7A8](v11);
  v12 = sub_23E135D90();
  v13 = *(_QWORD *)(v12 - 8);
  v34 = v12;
  v35 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D201B0);
  v17 = *(_QWORD *)(v16 - 8);
  v36 = v16;
  v37 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v30 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_23E1365A0();
  sub_23E135D6C();
  sub_23DF73E10(v3, (uint64_t)v10, type metadata accessor for RingControlView.KnobsView);
  v19 = a1;
  v20 = v32;
  sub_23DF73E10(v19, v32, _s4KnobV2IDOMa);
  v21 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v22 = (v21 + v9 + *(unsigned __int8 *)(v33 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  v23 = swift_allocObject();
  sub_23DF89384((uint64_t)v10, v23 + v21, type metadata accessor for RingControlView.KnobsView);
  sub_23DF89384(v20, v23 + v22, _s4KnobV2IDOMa);
  sub_23DF73F28(&qword_256D201D0, (uint64_t (*)(uint64_t))MEMORY[0x24BDEB540], MEMORY[0x24BDEB530]);
  sub_23DF73F28(&qword_256D201D8, MEMORY[0x24BDEB500], MEMORY[0x24BDEB520]);
  v24 = v30;
  v25 = v34;
  sub_23E136F30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v25);
  sub_23DF73E10(v31, (uint64_t)v10, type metadata accessor for RingControlView.KnobsView);
  v26 = swift_allocObject();
  sub_23DF89384((uint64_t)v10, v26 + v21, type metadata accessor for RingControlView.KnobsView);
  sub_23DF89B88(&qword_256D201E0, &qword_256D201B0, MEMORY[0x24BDED570]);
  v27 = v36;
  sub_23E136F24();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v24, v27);
}

uint64_t sub_23E10CDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  uint64_t v8;
  double *v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t result;
  double v21;

  v3 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v3);
  sub_23E135D84();
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for RingControlView.KnobsView(0);
  v9 = (double *)(a2 + *(int *)(v8 + 20));
  v10 = atan2(v7 - *v9, v5 - *v9);
  v11 = Angle.positiveDegrees.getter(v10);
  v12 = v9[1] * 57.2957795;
  v13 = v11 / v12;
  if (v13 < 0.0)
    v14 = 0.0;
  else
    v14 = v13;
  if (v13 <= 1.0)
    v15 = v14;
  else
    v15 = 1.0;
  v16 = (v12 + (360.0 - v12) * 0.5) * 0.0174532925;
  v17 = Angle.positiveDegrees.getter(v10);
  if (Angle.positiveDegrees.getter(v16) >= v17)
    v18 = v15;
  else
    v18 = 0.0;
  v19 = a2 + *(int *)(v8 + 28);
  if ((*(_BYTE *)(v19 + 72) & 1) == 0)
    v18 = *(double *)(v19 + 64) * round(v18 / *(double *)(v19 + 64));
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D228F8);
  result = sub_23E136E70();
  if ((*(_BYTE *)(v19 + 56) & 1) != 0)
    goto LABEL_17;
  v21 = round(v18 / *(double *)(v19 + 48));
  if ((~*(_QWORD *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v21 < 9.22337204e18)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D27010);
    sub_23E136DA4();
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
    MEMORY[0x24264B734]();
    sub_23E06FE94();
    return sub_23E136E70();
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_23E10D070()
{
  type metadata accessor for RingControlView.KnobsView(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D228F8);
  sub_23E136E70();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256D27010);
  return sub_23E136DA4();
}

id sub_23E10D128()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF6AF0]), sel_init);
  result = objc_msgSend(v0, sel_prepare);
  qword_256D34758 = (uint64_t)v0;
  return result;
}

uint64_t sub_23E10D170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v53 = a1;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D272A8);
  MEMORY[0x24BDAC7A8](v47);
  v50 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D272B0);
  MEMORY[0x24BDAC7A8](v49);
  v48 = (uint64_t)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = _s13TapTargetViewVMa();
  v42 = *(_QWORD *)(v4 - 8);
  v5 = *(_QWORD *)(v42 + 64);
  MEMORY[0x24BDAC7A8](v4);
  v43 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F550);
  MEMORY[0x24BDAC7A8](v40);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_23E136084();
  v8 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D272B8);
  MEMORY[0x24BDAC7A8](v11);
  v46 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D272C0);
  v51 = *(_QWORD *)(v13 - 8);
  v52 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v44 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v45 = (uint64_t)&v40 - v16;
  v17 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v40 - v21;
  if (*(_QWORD *)(v1 + *(int *)(v4 + 24)))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
    MEMORY[0x24264B734](v23);
    swift_storeEnumTagMultiPayload();
    sub_23E0724D8((uint64_t)v22, (uint64_t)v19);
    v25 = v24;
    sub_23DF73E54((uint64_t)v19, _s9KnobStateOMa);
    sub_23DF73E54((uint64_t)v22, _s9KnobStateOMa);
    v26 = 1;
    v27 = v53;
    if ((v25 & 1) == 0)
    {
      sub_23E13606C();
      v28 = v41;
      (*(void (**)(_BYTE *, char *, uint64_t))(v8 + 16))(&v7[*(int *)(v40 + 40)], v10, v41);
      *v7 = 0;
      v29 = (uint64_t)v46;
      sub_23DF89C1C((uint64_t)v7, (uint64_t)&v46[*(int *)(v11 + 36)], &qword_256D1F550);
      *(_QWORD *)v29 = 0;
      *(_BYTE *)(v29 + 8) = 1;
      sub_23DF89C7C((uint64_t)v7, &qword_256D1F550);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v28);
      v30 = v43;
      sub_23DF73E10(v1, v43, (uint64_t (*)(_QWORD))_s13TapTargetViewVMa);
      v31 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      v32 = swift_allocObject();
      sub_23DF89384(v30, v32 + v31, (uint64_t (*)(_QWORD))_s13TapTargetViewVMa);
      KeyPath = swift_getKeyPath();
      v34 = v48;
      sub_23DF89C1C(v29, v48, &qword_256D272B8);
      v35 = (uint64_t)v50;
      v36 = v34 + *(int *)(v49 + 36);
      *(_BYTE *)v36 = 1;
      *(_QWORD *)(v36 + 8) = sub_23E1110B8;
      *(_QWORD *)(v36 + 16) = v32;
      *(_QWORD *)(v36 + 24) = KeyPath;
      *(_BYTE *)(v36 + 32) = 0;
      sub_23DF89C1C(v34, v35, &qword_256D272B0);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256D272C8);
      sub_23E111104();
      sub_23E1111F4();
      v37 = (uint64_t)v44;
      sub_23E136480();
      sub_23DF89C7C(v34, &qword_256D272B0);
      v38 = v45;
      sub_23E1112C0(v37, v45);
      swift_release();
      v27 = v53;
      sub_23DF89C7C(v29, &qword_256D272B8);
      sub_23E1112C0(v38, v27);
      v26 = 0;
    }
  }
  else
  {
    v26 = 1;
    v27 = v53;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v27, v26, 1, v52);
}

uint64_t sub_23E10D62C(uint64_t a1, double a2, double a3)
{
  uint64_t result;
  void (*v7)(void);
  double *v8;
  double v9;
  uint64_t v10;
  char v11;
  double v12;
  double v13;

  result = _s13TapTargetViewVMa();
  v7 = *(void (**)(void))(a1 + *(int *)(result + 24));
  if (v7)
  {
    v8 = (double *)(a1 + *(int *)(result + 20));
    v9 = *v8 * 0.25;
    swift_retain();
    v10 = sub_23E10D710(a2, a3, v9);
    if ((v11 & 1) == 0)
    {
      v12 = *(double *)&v10;
      v13 = Angle.positiveDegrees.getter(*(double *)&v10);
      if (v13 < Angle.positiveDegrees.getter(v8[1]) && sub_23E10D800(v12) != 2)
        v7();
    }
    return sub_23DF9D698((uint64_t)v7);
  }
  return result;
}

uint64_t sub_23E10D710(double a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v7;
  CGFloat v8;
  double MinX;
  double v10;
  double MinY;
  CGFloat Height;
  uint64_t result;
  double v14;
  double v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v7 = _s13TapTargetViewVMa();
  v8 = *(double *)(v3 + *(int *)(v7 + 20)) + *(double *)(v3 + *(int *)(v7 + 20));
  v16.origin.x = 0.0;
  v16.origin.y = 0.0;
  v16.size.width = v8;
  v16.size.height = v8;
  MinX = CGRectGetMinX(v16);
  v17.origin.x = 0.0;
  v17.origin.y = 0.0;
  v17.size.width = v8;
  v17.size.height = v8;
  v10 = MinX + CGRectGetWidth(v17) * 0.5;
  v18.origin.x = 0.0;
  v18.origin.y = 0.0;
  v18.size.width = v8;
  v18.size.height = v8;
  MinY = CGRectGetMinY(v18);
  v19.origin.x = 0.0;
  v19.origin.y = 0.0;
  v19.size.width = v8;
  v19.size.height = v8;
  Height = CGRectGetHeight(v19);
  result = 0;
  v14 = a1 - v10;
  v15 = a2 - (MinY + Height * 0.5);
  if (sqrt(v14 * v14 + v15 * v15) > a3)
    return atan2(v15, v14);
  return result;
}

uint64_t sub_23E10D800(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int EnumCaseMultiPayload;
  double v17;
  uint64_t v18;
  double v19;
  double v20;
  double v21;
  uint64_t v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  _BOOL4 v35;
  uint64_t v36;

  v3 = _s9KnobStateOMa(0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s4KnobVMa(0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v36 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  MEMORY[0x24264B734](v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
    {
      v23 = (uint64_t)&v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48)];
      sub_23DF89384((uint64_t)v5, (uint64_t)v11, _s4KnobVMa);
      sub_23DF89384(v23, (uint64_t)v8, _s4KnobVMa);
      v24 = *(int *)(v6 + 20);
      v25 = *(double *)&v11[v24];
      v26 = *(double *)(v1 + *(int *)(_s13TapTargetViewVMa() + 20) + 8);
      if (v25 <= 1.0)
        v27 = v25;
      else
        v27 = 1.0;
      if (v25 <= 0.0)
        v27 = 0.0;
      v28 = v26 * 57.2957795;
      v29 = v27 * (v26 * 57.2957795) * 0.0174532925;
      v30 = *(double *)&v8[v24];
      v31 = Angle.positiveDegrees.getter(a1);
      if (v31 >= Angle.positiveDegrees.getter(v29))
      {
        if (v30 <= 1.0)
          v32 = v30;
        else
          v32 = 1.0;
        if (v30 <= 0.0)
          v32 = 0.0;
        v33 = v28 * v32 * 0.0174532925;
        v34 = Angle.positiveDegrees.getter(a1);
        v35 = Angle.positiveDegrees.getter(v33) >= v34;
        sub_23DF73E54((uint64_t)v8, _s4KnobVMa);
        sub_23DF73E54((uint64_t)v11, _s4KnobVMa);
        return (2 * v35);
      }
      else
      {
        sub_23DF73E54((uint64_t)v8, _s4KnobVMa);
        sub_23DF73E54((uint64_t)v11, _s4KnobVMa);
        return 1;
      }
    }
    else
    {
      return 2;
    }
  }
  else
  {
    sub_23DF89384((uint64_t)v5, (uint64_t)v14, _s4KnobVMa);
    v17 = *(double *)&v14[*(int *)(v6 + 20)];
    sub_23DF73E54((uint64_t)v14, _s4KnobVMa);
    v18 = _s13TapTargetViewVMa();
    v19 = 1.0;
    if (v17 <= 1.0)
      v19 = v17;
    if (v17 <= 0.0)
      v19 = 0.0;
    v20 = v19 * (*(double *)(v1 + *(int *)(v18 + 20) + 8) * 57.2957795) * 0.0174532925;
    v21 = Angle.positiveDegrees.getter(a1);
    return v21 < Angle.positiveDegrees.getter(v20);
  }
}

uint64_t sub_23E10DAF8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_23E1375B4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_23E10DB54(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  if (*v1)
    v2 = 0x6E656D6572636564;
  else
    v2 = 0x6E656D6572636E69;
  *a1 = v2;
  a1[1] = 0xE900000000000074;
}

uint64_t *sub_23E10DB84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  __int128 v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  unsigned int (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  void (*v80)(char *, char *, uint64_t);
  char *v81;
  char *__dst;
  char *__dsta;
  char *__dstb;
  uint64_t v85;
  char *v86;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return a1;
  }
  v6 = a3;
  a1[1] = a2[1];
  swift_retain();
  swift_retain();
  v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v16 = sub_23E134C80();
    v17 = *(_QWORD *)(v16 - 8);
    v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    v78 = v6;
    v79 = v16;
    v74 = v17;
    if (v77(v10, 2, v16))
    {
      v18 = _s4KnobV2IDOMa(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v9, v10, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v9, 0, 2, v16);
    }
    v30 = (int *)_s4KnobVMa(0);
    *(_QWORD *)&v9[v30[5]] = *(_QWORD *)&v10[v30[5]];
    *(_QWORD *)&v9[v30[6]] = *(_QWORD *)&v10[v30[6]];
    v9[v30[7]] = v10[v30[7]];
    v9[v30[8]] = v10[v30[8]];
    v31 = v30[9];
    __dst = &v9[v31];
    v32 = &v10[v31];
    v33 = _s4KnobV10IconConfigVMa(0);
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v33;
    swift_retain();
    v85 = v36;
    v76 = v35;
    v75 = v34;
    if (v35(v32, 1, v36))
    {
      v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      v45 = *((_QWORD *)v32 + 1);
      *(_QWORD *)__dst = *(_QWORD *)v32;
      *((_QWORD *)__dst + 1) = v45;
      v46 = *(int *)(v85 + 20);
      v72 = &v32[v46];
      v73 = &__dst[v46];
      v47 = sub_23E136CFC();
      v71 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 16);
      swift_bridgeObjectRetain();
      v71(v73, v72, v47);
      *(_QWORD *)&__dst[*(int *)(v85 + 24)] = *(_QWORD *)&v32[*(int *)(v85 + 24)];
      v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56);
      swift_retain();
      v48(__dst, 0, 1, v85);
    }
    v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    v50 = &v9[v49];
    v51 = &v10[v49];
    v6 = v78;
    if (v77(&v10[v49], 2, v79))
    {
      v52 = _s4KnobV2IDOMa(0);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v50, v51, v79);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v74 + 56))(v50, 0, 2, v79);
    }
    *(_QWORD *)&v50[v30[5]] = *(_QWORD *)&v51[v30[5]];
    *(_QWORD *)&v50[v30[6]] = *(_QWORD *)&v51[v30[6]];
    v50[v30[7]] = v51[v30[7]];
    v50[v30[8]] = v51[v30[8]];
    v53 = v30[9];
    v54 = &v50[v53];
    v55 = &v51[v53];
    swift_retain();
    if (v76(v55, 1, v85))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      v57 = *((_QWORD *)v55 + 1);
      *(_QWORD *)v54 = *(_QWORD *)v55;
      *((_QWORD *)v54 + 1) = v57;
      v58 = *(int *)(v85 + 20);
      v81 = &v55[v58];
      __dstb = &v54[v58];
      v59 = sub_23E136CFC();
      v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
      swift_bridgeObjectRetain();
      v60(__dstb, v81, v59);
      *(_QWORD *)&v54[*(int *)(v85 + 24)] = *(_QWORD *)&v55[*(int *)(v85 + 24)];
      v61 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56);
      swift_retain();
      v61(v54, 0, 1, v85);
    }
    goto LABEL_31;
  }
  if (EnumCaseMultiPayload != 1)
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      goto LABEL_32;
    }
    v13 = sub_23E134C80();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 2, v13))
    {
      v15 = _s4KnobV2IDOMa(0);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v9, v10, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v9, 0, 2, v13);
    }
    v22 = (int *)_s4KnobVMa(0);
    *(_QWORD *)&v9[v22[5]] = *(_QWORD *)&v10[v22[5]];
    *(_QWORD *)&v9[v22[6]] = *(_QWORD *)&v10[v22[6]];
    v9[v22[7]] = v10[v22[7]];
    v9[v22[8]] = v10[v22[8]];
    v23 = v22[9];
    v24 = &v9[v23];
    v25 = &v10[v23];
    v26 = _s4KnobV10IconConfigVMa(0);
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_retain();
    if (v28(v25, 1, v26))
      goto LABEL_15;
LABEL_22:
    v41 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v41;
    v42 = *(int *)(v26 + 20);
    __dsta = &v25[v42];
    v86 = &v24[v42];
    v43 = sub_23E136CFC();
    v80 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    v80(v86, __dsta, v43);
    *(_QWORD *)&v24[*(int *)(v26 + 24)] = *(_QWORD *)&v25[*(int *)(v26 + 24)];
    v44 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56);
    swift_retain();
    v44(v24, 0, 1, v26);
    goto LABEL_31;
  }
  v19 = sub_23E134C80();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v10, 2, v19))
  {
    v21 = _s4KnobV2IDOMa(0);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v9, v10, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v9, 0, 2, v19);
  }
  v38 = (int *)_s4KnobVMa(0);
  *(_QWORD *)&v9[v38[5]] = *(_QWORD *)&v10[v38[5]];
  *(_QWORD *)&v9[v38[6]] = *(_QWORD *)&v10[v38[6]];
  v9[v38[7]] = v10[v38[7]];
  v9[v38[8]] = v10[v38[8]];
  v39 = v38[9];
  v24 = &v9[v39];
  v25 = &v10[v39];
  v26 = _s4KnobV10IconConfigVMa(0);
  v27 = *(_QWORD *)(v26 - 8);
  v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
  swift_retain();
  if (!v40(v25, 1, v26))
    goto LABEL_22;
LABEL_15:
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
  memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_31:
  swift_storeEnumTagMultiPayload();
LABEL_32:
  v62 = *(int *)(v6 + 20);
  v63 = *(int *)(v6 + 24);
  v64 = (char *)a1 + v62;
  v65 = (char *)a2 + v62;
  v66 = *((_OWORD *)v65 + 1);
  *(_OWORD *)v64 = *(_OWORD *)v65;
  *((_OWORD *)v64 + 1) = v66;
  *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
  v67 = (uint64_t *)((char *)a1 + v63);
  v68 = (uint64_t *)((char *)a2 + v63);
  if (*v68)
  {
    v69 = v68[1];
    *v67 = *v68;
    v67[1] = v69;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v67 = *(_OWORD *)v68;
  }
  return a1;
}

uint64_t sub_23E10E314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  _s9KnobStateOMa(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    v13 = sub_23E134C80();
    v14 = *(_QWORD *)(v13 - 8);
    v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v4, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v4, v13);
    v16 = _s4KnobVMa(0);
    swift_release();
    v17 = v4 + *(int *)(v16 + 36);
    v10 = _s4KnobV10IconConfigVMa(0);
    v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48);
    if (!v18(v17, 1, v10))
    {
      swift_bridgeObjectRelease();
      v24 = v14;
      v19 = a2;
      v20 = v17 + *(int *)(v10 + 20);
      v21 = sub_23E136CFC();
      v22 = v20;
      a2 = v19;
      v14 = v24;
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(v22, v21);
      swift_release();
    }
    v23 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    if (!v15(v23, 2, v13))
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v23, v13);
    swift_release();
    v9 = v23 + *(int *)(v16 + 36);
    result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v9, 1, v10);
    if (!(_DWORD)result)
      goto LABEL_6;
  }
  else if (result <= 1)
  {
    v6 = sub_23E134C80();
    v7 = *(_QWORD *)(v6 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 2, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    v8 = _s4KnobVMa(0);
    swift_release();
    v9 = v4 + *(int *)(v8 + 36);
    v10 = _s4KnobV10IconConfigVMa(0);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10);
    if (!(_DWORD)result)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      v11 = v9 + *(int *)(v10 + 20);
      v12 = sub_23E136CFC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      result = swift_release();
    }
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 24)))
    return swift_release();
  return result;
}

_QWORD *sub_23E10E5C0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  void (*v45)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, char *, uint64_t);
  uint64_t v58;
  void (*v59)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(char *, char *, uint64_t);
  void (*v68)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  __int128 v73;
  _QWORD *v74;
  _QWORD *v75;
  uint64_t v76;
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  unsigned int (*v83)(char *, uint64_t, uint64_t);
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  _QWORD *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  char *v89;
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v4 = a2;
  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8) + 32);
  v8 = (char *)a1 + v7;
  v9 = (char *)v4 + v7;
  v10 = _s9KnobStateOMa(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v18 = sub_23E134C80();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
      {
        v20 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v8, v9, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
      }
      v36 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v36[5]] = *(_QWORD *)&v9[v36[5]];
      *(_QWORD *)&v8[v36[6]] = *(_QWORD *)&v9[v36[6]];
      v8[v36[7]] = v9[v36[7]];
      v8[v36[8]] = v9[v36[8]];
      v37 = v36[9];
      v23 = &v8[v37];
      v24 = &v9[v37];
      v38 = _s4KnobV10IconConfigVMa(0);
      v39 = *(_QWORD *)(v38 - 8);
      v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
      swift_retain();
      if (!v40(v24, 1, v38))
      {
        v54 = *((_QWORD *)v24 + 1);
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *((_QWORD *)v23 + 1) = v54;
        v55 = *(int *)(v38 + 20);
        v88 = &v24[v55];
        __dstb = &v23[v55];
        v96 = a3;
        v56 = sub_23E136CFC();
        v57 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v58 = v56;
        a3 = v96;
        v57(__dstb, v88, v58);
        *(_QWORD *)&v23[*(int *)(v38 + 24)] = *(_QWORD *)&v24[*(int *)(v38 + 24)];
        v59 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56);
        swift_retain();
        v59(v23, 0, 1, v38);
        goto LABEL_21;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        goto LABEL_31;
      }
      v12 = sub_23E134C80();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
      {
        v14 = _s4KnobV2IDOMa(0);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
      }
      v21 = (int *)_s4KnobVMa(0);
      *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
      *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
      v8[v21[7]] = v9[v21[7]];
      v8[v21[8]] = v9[v21[8]];
      v22 = v21[9];
      v23 = &v8[v22];
      v24 = &v9[v22];
      v25 = _s4KnobV10IconConfigVMa(0);
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      swift_retain();
      if (!v27(v24, 1, v25))
      {
        v41 = *((_QWORD *)v24 + 1);
        *(_QWORD *)v23 = *(_QWORD *)v24;
        *((_QWORD *)v23 + 1) = v41;
        v42 = *(int *)(v25 + 20);
        v87 = &v24[v42];
        __dsta = &v23[v42];
        v43 = sub_23E136CFC();
        v95 = a3;
        v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(__dsta, v87, v43);
        a3 = v95;
        *(_QWORD *)&v23[*(int *)(v25 + 24)] = *(_QWORD *)&v24[*(int *)(v25 + 24)];
        v45 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56);
        swift_retain();
        v45(v23, 0, 1, v25);
        goto LABEL_21;
      }
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_21:
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  v15 = sub_23E134C80();
  v16 = *(_QWORD *)(v15 - 8);
  v84 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v94 = a3;
  v85 = v4;
  v86 = v15;
  v81 = v16;
  if (v84(v9, 2, v15))
  {
    v17 = _s4KnobV2IDOMa(0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v9, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
  }
  v29 = (int *)_s4KnobVMa(0);
  *(_QWORD *)&v8[v29[5]] = *(_QWORD *)&v9[v29[5]];
  *(_QWORD *)&v8[v29[6]] = *(_QWORD *)&v9[v29[6]];
  v8[v29[7]] = v9[v29[7]];
  v8[v29[8]] = v9[v29[8]];
  v30 = v29[9];
  __dst = &v8[v30];
  v31 = &v9[v30];
  v32 = _s4KnobV10IconConfigVMa(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
  swift_retain();
  v83 = v34;
  v82 = v33;
  if (v34(v31, 1, v32))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(__dst, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v46 = *((_QWORD *)v31 + 1);
    *(_QWORD *)__dst = *(_QWORD *)v31;
    *((_QWORD *)__dst + 1) = v46;
    v47 = *(int *)(v32 + 20);
    v79 = &v31[v47];
    v80 = &__dst[v47];
    v48 = sub_23E136CFC();
    v78 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
    swift_bridgeObjectRetain();
    v78(v80, v79, v48);
    *(_QWORD *)&__dst[*(int *)(v32 + 24)] = *(_QWORD *)&v31[*(int *)(v32 + 24)];
    v49 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56);
    swift_retain();
    v49(__dst, 0, 1, v32);
  }
  v50 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
  v51 = &v8[v50];
  v52 = &v9[v50];
  v4 = v85;
  if (v84(&v9[v50], 2, v86))
  {
    v53 = _s4KnobV2IDOMa(0);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v51, v52, v86);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v51, 0, 2, v86);
  }
  *(_QWORD *)&v51[v29[5]] = *(_QWORD *)&v52[v29[5]];
  *(_QWORD *)&v51[v29[6]] = *(_QWORD *)&v52[v29[6]];
  v51[v29[7]] = v52[v29[7]];
  v51[v29[8]] = v52[v29[8]];
  v60 = v29[9];
  v61 = &v51[v60];
  v62 = &v52[v60];
  swift_retain();
  if (v83(v62, 1, v32))
  {
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
    memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
  }
  else
  {
    v64 = *((_QWORD *)v62 + 1);
    *(_QWORD *)v61 = *(_QWORD *)v62;
    *((_QWORD *)v61 + 1) = v64;
    v65 = *(int *)(v32 + 20);
    v89 = &v62[v65];
    __dstc = &v61[v65];
    v66 = sub_23E136CFC();
    v67 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16);
    swift_bridgeObjectRetain();
    v67(__dstc, v89, v66);
    *(_QWORD *)&v61[*(int *)(v32 + 24)] = *(_QWORD *)&v62[*(int *)(v32 + 24)];
    v68 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56);
    swift_retain();
    v68(v61, 0, 1, v32);
  }
  swift_storeEnumTagMultiPayload();
  a3 = v94;
LABEL_31:
  v69 = *(int *)(a3 + 20);
  v70 = *(int *)(a3 + 24);
  v71 = (char *)a1 + v69;
  v72 = (char *)v4 + v69;
  v73 = *((_OWORD *)v72 + 1);
  *(_OWORD *)v71 = *(_OWORD *)v72;
  *((_OWORD *)v71 + 1) = v73;
  *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
  v74 = (_QWORD *)((char *)a1 + v70);
  v75 = (_QWORD *)((char *)v4 + v70);
  if (*v75)
  {
    v76 = v75[1];
    *v74 = *v75;
    v74[1] = v76;
    swift_retain();
  }
  else
  {
    *(_OWORD *)v74 = *(_OWORD *)v75;
  }
  return a1;
}

_QWORD *sub_23E10ED20(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  int *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  void (*v50)(char *, _QWORD, uint64_t, uint64_t);
  int *v51;
  uint64_t v52;
  unsigned int (*v53)(char *, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  void (*v57)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *__dst;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D1F0F8);
  if (a1 != a2)
  {
    v7 = *(int *)(v6 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    sub_23DF73E54((uint64_t)a1 + v7, _s9KnobStateOMa);
    v10 = _s9KnobStateOMa(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v18 = sub_23E134C80();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 2, v18))
        {
          v20 = _s4KnobV2IDOMa(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v8, v9, v18);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 2, v18);
        }
        v28 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v8[v28[5]] = *(_QWORD *)&v9[v28[5]];
        *(_QWORD *)&v8[v28[6]] = *(_QWORD *)&v9[v28[6]];
        v8[v28[7]] = v9[v28[7]];
        v8[v28[8]] = v9[v28[8]];
        v29 = v28[9];
        v30 = &v8[v29];
        v31 = &v9[v29];
        v32 = _s4KnobV10IconConfigVMa(0);
        v33 = *(_QWORD *)(v32 - 8);
        v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
        swift_retain();
        if (!v34(v31, 1, v32))
        {
LABEL_29:
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
          v54 = *(int *)(v32 + 20);
          v78 = &v31[v54];
          v80 = &v30[v54];
          v55 = sub_23E136CFC();
          v82 = a3;
          v56 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
          swift_bridgeObjectRetain();
          v56(v80, v78, v55);
          a3 = v82;
          *(_QWORD *)&v30[*(int *)(v32 + 24)] = *(_QWORD *)&v31[*(int *)(v32 + 24)];
          v57 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56);
          swift_retain();
          v57(v30, 0, 1, v32);
          goto LABEL_30;
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
          goto LABEL_31;
        }
        v12 = sub_23E134C80();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 2, v12))
        {
          v14 = _s4KnobV2IDOMa(0);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 2, v12);
        }
        v51 = (int *)_s4KnobVMa(0);
        *(_QWORD *)&v8[v51[5]] = *(_QWORD *)&v9[v51[5]];
        *(_QWORD *)&v8[v51[6]] = *(_QWORD *)&v9[v51[6]];
        v8[v51[7]] = v9[v51[7]];
        v8[v51[8]] = v9[v51[8]];
        v52 = v51[9];
        v30 = &v8[v52];
        v31 = &v9[v52];
        v32 = _s4KnobV10IconConfigVMa(0);
        v33 = *(_QWORD *)(v32 - 8);
        v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
        swift_retain();
        if (!v53(v31, 1, v32))
          goto LABEL_29;
      }
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
LABEL_30:
      swift_storeEnumTagMultiPayload();
      goto LABEL_31;
    }
    v15 = sub_23E134C80();
    v16 = *(_QWORD *)(v15 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    v81 = a3;
    v72 = v16;
    if (v76(v9, 2, v15))
    {
      v17 = _s4KnobV2IDOMa(0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v8, v9, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v8, 0, 2, v15);
    }
    v21 = (int *)_s4KnobVMa(0);
    *(_QWORD *)&v8[v21[5]] = *(_QWORD *)&v9[v21[5]];
    *(_QWORD *)&v8[v21[6]] = *(_QWORD *)&v9[v21[6]];
    v8[v21[7]] = v9[v21[7]];
    v8[v21[8]] = v9[v21[8]];
    v22 = v21[9];
    __dst = &v8[v22];
    v23 = &v9[v22];
    v24 = _s4KnobV10IconConfigVMa(0);
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    swift_retain();
    v75 = v26;
    v73 = v25;
    if (v26(v23, 1, v24))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      *(_QWORD *)__dst = *(_QWORD *)v23;
      *((_QWORD *)__dst + 1) = *((_QWORD *)v23 + 1);
      v36 = *(int *)(v24 + 20);
      v70 = &v23[v36];
      v71 = &__dst[v36];
      v37 = sub_23E136CFC();
      v69 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
      swift_bridgeObjectRetain();
      v69(v71, v70, v37);
      *(_QWORD *)&__dst[*(int *)(v24 + 24)] = *(_QWORD *)&v23[*(int *)(v24 + 24)];
      v38 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56);
      swift_retain();
      v38(__dst, 0, 1, v24);
    }
    v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256D1F100) + 48);
    v40 = &v8[v39];
    v41 = &v9[v39];
    if (v76(&v9[v39], 2, v15))
    {
      v42 = _s4KnobV2IDOMa(0);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v40, v41, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v40, 0, 2, v15);
    }
    *(_QWORD *)&v40[v21[5]] = *(_QWORD *)&v41[v21[5]];
    *(_QWORD *)&v40[v21[6]] = *(_QWORD *)&v41[v21[6]];
    v40[v21[7]] = v41[v21[7]];
    v40[v21[8]] = v41[v21[8]];
    v43 = v21[9];
    v44 = &v40[v43];
    v45 = &v41[v43];
    swift_retain();
    if (v75(v45, 1, v24))
    {
      v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256D20EF0);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v44 = *(_QWORD *)v45;
      *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
      v47 = *(int *)(v24 + 20);
      v77 = &v45[v47];
      v79 = &v44[v47];
      v48 = sub_23E136CFC();
      v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
      swift_bridgeObjectRetain();
      v49(v79, v77, v48);
      *(_QWORD *)&v44[*(int *)(v24 + 24)] = *(_QWORD *)&v45[*(int *)(v24 + 24)];
      v50 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56);
      swift_retain();
      v50(v44, 0, 1, v24);
    }
    swift_storeEnumTagMultiPayload();
    a3 = v81;
  }
LABEL_31:
  v58 = *(int *)(a3 + 20);
  v59 = (_QWORD *)((char *)a1 + v58);
  v60 = (_QWORD *)((char *)a2 + v58);
  *v59 = *v60;
  v59[1] = v60[1];
  v59[2] = v60[2];
  v59[3] = v60[3];
  v59[4] = v60[4];
  v61 = *(int *)(a3 + 24);
  v62 = (_QWORD *)((char *)a1 + v61);
  v63 = (_QWORD *)((char *)a2 + v61);
  v64 = *(_QWORD *)((char *)a1 + v61);
  v65 = *v63;
  if (!v64)
  {
    if (v65)
    {
      v67 = v63[1];
      *v62 = v65;
      v62[1] = v67;
      swift_retain();
      return a1;
    }
LABEL_37:
    *(_OWORD *)v62 = *(_OWORD *)v63;
    return a1;
  }
  if (!v65)
  {
    swift_release();
    goto LABEL_37;
  }
  v66 = v63[1];
  *v62 = v65;
  v62[1] = v66;
  swift_retain();
  swift_release();
  return a1;
}

